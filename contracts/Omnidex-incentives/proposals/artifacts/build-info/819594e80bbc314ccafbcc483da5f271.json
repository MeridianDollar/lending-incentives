{
	"id": "819594e80bbc314ccafbcc483da5f271",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.7.5",
	"solcLongVersion": "0.7.5+commit.eb77ed08",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/Omnidex-incentives/proposals/TestConfig.sol": {
				"content": "// SPDX-License-Identifier: AGPL-3.0\r\npragma solidity 0.7.5;\r\npragma abicoder v2;\r\n\r\nimport {IERC20} from '@aave/aave-stake/contracts/interfaces/IERC20.sol';\r\nimport {ILendingPoolAddressesProvider} from '../interfaces/ILendingPoolAddressesProvider.sol';\r\nimport {ILendingPoolConfigurator} from '../interfaces/ILendingPoolConfigurator.sol';\r\nimport {IOmnidexIncentivesController} from '../interfaces/IOmnidexIncentivesController.sol';\r\n// import {IOmnidexEcosystemReserveController} from '../interfaces/IOmnidexEcosystemReserveController.sol';\r\nimport {DistributionTypes} from '../lib/DistributionTypes.sol';\r\nimport {DataTypes} from '../utils/DataTypes.sol';\r\nimport {ILendingPoolData} from '../interfaces/ILendingPoolData.sol';\r\nimport {IOTokenDetailed} from '../interfaces/IOTokenDetailed.sol';\r\nimport {PercentageMath} from '../utils/PercentageMath.sol';\r\nimport {SafeMath} from '../lib/SafeMath.sol';\r\n\r\ncontract TestConfig {\r\n  using SafeMath for uint256;\r\n  using PercentageMath for uint256;\r\n\r\n  // address constant TELOS_TOKEN = 0x6db3ebA817A5B61c63bdDbA0eE89D2510931edbe; //Configured for rando token\r\n  address constant POOL_CONFIGURATOR = 0x2F75fEDA7423D8B85988d9545428d00f3213CF00; //Config for non production Lending pools \r\n\r\n  address constant myreserves = 0x818ec0A7Fe18Ff94269904fCED6AE3DaE6d6dC0b;\r\n  address constant myoTokenImplementations = 0x63D03492cD26c0C1f73a563f7eaB79b52334852A;\r\n\r\n  function executeFixed() external  {\r\n    \r\n    ILendingPoolConfigurator poolConfigurator = ILendingPoolConfigurator(POOL_CONFIGURATOR);\r\n    // Update oToken impl\r\n    poolConfigurator.updateOToken(myreserves, myoTokenImplementations);\r\n  }\r\n\r\n  function executeChange (address _reserves, address _myoTokenImplementations) external  {\r\n    \r\n    ILendingPoolConfigurator poolConfigurator = ILendingPoolConfigurator(POOL_CONFIGURATOR);\r\n    // Update oToken impl\r\n    poolConfigurator.updateOToken(_reserves, _myoTokenImplementations);\r\n\r\n  }\r\n}\r\n\r\n\r\n"
			},
			"contracts/Omnidex-incentives/lib/SafeMath.sol": {
				"content": "\r\n// SPDX-License-Identifier: agpl-3.0\r\npragma solidity ^0.7.5;\r\n\r\n/// @title Optimized overflow and underflow safe math operations\r\n/// @notice Contains methods for doing math operations that revert on overflow or underflow for minimal gas cost\r\n/// inspired by uniswap V3\r\nlibrary SafeMath {\r\n    /// @notice Returns x + y, reverts if sum overflows uint256\r\n    /// @param x The augend\r\n    /// @param y The addend\r\n    /// @return z The sum of x and y\r\n    function add(uint256 x, uint256 y) internal pure returns (uint256 z) {\r\n        require((z = x + y) >= x);\r\n    }\r\n\r\n    /// @notice Returns x - y, reverts if underflows\r\n    /// @param x The minuend\r\n    /// @param y The subtrahend\r\n    /// @return z The difference of x and y\r\n    function sub(uint256 x, uint256 y) internal pure returns (uint256 z) {\r\n        require((z = x - y) <= x);\r\n    }\r\n\r\n    /// @notice Returns x * y, reverts if overflows\r\n    /// @param x The multiplicand\r\n    /// @param y The multiplier\r\n    /// @return z The product of x and y\r\n    function mul(uint256 x, uint256 y) internal pure returns (uint256 z) {\r\n        require(x == 0 || (z = x * y) / x == y);\r\n    }\r\n\r\n    function div(uint256 x, uint256 y) internal pure returns(uint256) {\r\n        // no need to check for division by zero - solidity already reverts\r\n        return x / y;\r\n    }\r\n}"
			},
			"contracts/Omnidex-incentives/utils/PercentageMath.sol": {
				"content": "// SPDX-License-Identifier: agpl-3.0\r\npragma solidity 0.7.5;\r\n\r\n/**\r\n * @title PercentageMath library\r\n * @author Omnidex\r\n * @notice Provides functions to perform percentage calculations\r\n * @dev Percentages are defined by default with 2 decimals of precision (100.00). The precision is indicated by PERCENTAGE_FACTOR\r\n * @dev Operations are rounded half up\r\n **/\r\n\r\nlibrary PercentageMath {\r\n  uint256 constant PERCENTAGE_FACTOR = 1e4; //percentage plus two decimals\r\n  uint256 constant HALF_PERCENT = PERCENTAGE_FACTOR / 2;\r\n\r\n  /**\r\n   * @dev Executes a percentage multiplication\r\n   * @param value The value of which the percentage needs to be calculated\r\n   * @param percentage The percentage of the value to be calculated\r\n   * @return The percentage of value\r\n   **/\r\n  function percentMul(uint256 value, uint256 percentage) internal pure returns (uint256) {\r\n    if (value == 0 || percentage == 0) {\r\n      return 0;\r\n    }\r\n\r\n    require(\r\n      value <= (type(uint256).max - HALF_PERCENT) / percentage,\r\n      'MATH_MULTIPLICATION_OVERFLOW'\r\n    );\r\n\r\n    return (value * percentage + HALF_PERCENT) / PERCENTAGE_FACTOR;\r\n  }\r\n\r\n  /**\r\n   * @dev Executes a percentage division\r\n   * @param value The value of which the percentage needs to be calculated\r\n   * @param percentage The percentage of the value to be calculated\r\n   * @return The value divided the percentage\r\n   **/\r\n  function percentDiv(uint256 value, uint256 percentage) internal pure returns (uint256) {\r\n    require(percentage != 0, 'MATH_DIVISION_BY_ZERO');\r\n    uint256 halfPercentage = percentage / 2;\r\n\r\n    require(\r\n      value <= (type(uint256).max - halfPercentage) / PERCENTAGE_FACTOR,\r\n      'MATH_MULTIPLICATION_OVERFLOW'\r\n    );\r\n\r\n    return (value * PERCENTAGE_FACTOR + halfPercentage) / percentage;\r\n  }\r\n}\r\n"
			},
			"contracts/Omnidex-incentives/interfaces/IOTokenDetailed.sol": {
				"content": "// SPDX-License-Identifier: agpl-3.0\r\npragma solidity 0.7.5;\r\n\r\ninterface IOTokenDetailed {\r\n  function UNDERLYING_ASSET_ADDRESS() external view returns (address);\r\n}\r\n"
			},
			"contracts/Omnidex-incentives/interfaces/ILendingPoolData.sol": {
				"content": "// SPDX-License-Identifier: agpl-3.0\r\npragma solidity 0.7.5;\r\npragma abicoder v2;\r\n\r\nimport {DataTypes} from '../utils/DataTypes.sol';\r\n\r\ninterface ILendingPoolData {\r\n  /**\r\n   * @dev Returns the state and configuration of the reserve\r\n   * @param asset The address of the underlying asset of the reserve\r\n   * @return The state of the reserve\r\n   **/\r\n  function getReserveData(address asset) external view returns (DataTypes.ReserveData memory);\r\n}\r\n"
			},
			"contracts/Omnidex-incentives/utils/DataTypes.sol": {
				"content": "// SPDX-License-Identifier: agpl-3.0\r\npragma solidity 0.7.5;\r\n\r\nlibrary DataTypes {\r\n  // refer to the whitepaper, section 1.1 basic concepts for a formal description of these properties.\r\n  struct ReserveData {\r\n    //stores the reserve configuration\r\n    ReserveConfigurationMap configuration;\r\n    //the liquidity index. Expressed in ray\r\n    uint128 liquidityIndex;\r\n    //variable borrow index. Expressed in ray\r\n    uint128 variableBorrowIndex;\r\n    //the current supply rate. Expressed in ray\r\n    uint128 currentLiquidityRate;\r\n    //the current variable borrow rate. Expressed in ray\r\n    uint128 currentVariableBorrowRate;\r\n    //the current stable borrow rate. Expressed in ray\r\n    uint128 currentStableBorrowRate;\r\n    uint40 lastUpdateTimestamp;\r\n    //tokens addresses\r\n    address oTokenAddress;\r\n    address stableDebtTokenAddress;\r\n    address variableDebtTokenAddress;\r\n    //address of the interest rate strategy\r\n    address interestRateStrategyAddress;\r\n    //the id of the reserve. Represents the position in the list of the active reserves\r\n    uint8 id;\r\n  }\r\n\r\n  struct ReserveConfigurationMap {\r\n    //bit 0-15: LTV\r\n    //bit 16-31: Liq. threshold\r\n    //bit 32-47: Liq. bonus\r\n    //bit 48-55: Decimals\r\n    //bit 56: Reserve is active\r\n    //bit 57: reserve is frozen\r\n    //bit 58: borrowing is enabled\r\n    //bit 59: stable rate borrowing enabled\r\n    //bit 60-63: reserved\r\n    //bit 64-79: reserve factor\r\n    uint256 data;\r\n  }\r\n\r\n  struct UserConfigurationMap {\r\n    uint256 data;\r\n  }\r\n\r\n  enum InterestRateMode {NONE, STABLE, VARIABLE}\r\n}\r\n"
			},
			"contracts/Omnidex-incentives/lib/DistributionTypes.sol": {
				"content": "// SPDX-License-Identifier: agpl-3.0\r\npragma solidity 0.7.5;\r\npragma experimental ABIEncoderV2;\r\n\r\nlibrary DistributionTypes {\r\n  struct AssetConfigInput {\r\n    uint104 emissionPerSecond;\r\n    uint256 totalStaked;\r\n    address underlyingAsset;\r\n  }\r\n\r\n  struct UserStakeInput {\r\n    address underlyingAsset;\r\n    uint256 stakedByUser;\r\n    uint256 totalStaked;\r\n  }\r\n}\r\n"
			},
			"contracts/Omnidex-incentives/interfaces/IOmnidexIncentivesController.sol": {
				"content": "// SPDX-License-Identifier: agpl-3.0\r\npragma solidity 0.7.5;\r\n\r\npragma experimental ABIEncoderV2;\r\n\r\nimport {IOmnidexDistributionManager} from '../interfaces/IOmnidexDistributionManager.sol';\r\n\r\ninterface IOmnidexIncentivesController is IOmnidexDistributionManager {\r\n  event RewardsAccrued(address indexed user, uint256 amount);\r\n\r\n  event RewardsClaimed(\r\n    address indexed user,\r\n    address indexed to,\r\n    address indexed claimer,\r\n    uint256 amount\r\n  );\r\n\r\n  event ClaimerSet(address indexed user, address indexed claimer);\r\n\r\n  /**\r\n   * @dev Whitelists an address to claim the rewards on behalf of another address\r\n   * @param user The address of the user\r\n   * @param claimer The address of the claimer\r\n   */\r\n  function setClaimer(address user, address claimer) external;\r\n\r\n  /**\r\n   * @dev Returns the whitelisted claimer for a certain address (0x0 if not set)\r\n   * @param user The address of the user\r\n   * @return The claimer address\r\n   */\r\n  function getClaimer(address user) external view returns (address);\r\n\r\n  /**\r\n   * @dev Configure assets for a certain rewards emission\r\n   * @param assets The assets to incentivize\r\n   * @param emissionsPerSecond The emission for each asset\r\n   */\r\n  function configureAssets(address[] calldata assets, uint256[] calldata emissionsPerSecond)\r\n    external;\r\n\r\n  /**\r\n   * @dev Called by the corresponding asset on any update that affects the rewards distribution\r\n   * @param asset The address of the user\r\n   * @param userBalance The balance of the user of the asset in the lending pool\r\n   * @param totalSupply The total supply of the asset in the lending pool\r\n   **/\r\n  function handleAction(\r\n    address asset,\r\n    uint256 userBalance,\r\n    uint256 totalSupply\r\n  ) external;\r\n\r\n  /**\r\n   * @dev Returns the total of rewards of an user, already accrued + not yet accrued\r\n   * @param user The address of the user\r\n   * @return The rewards\r\n   **/\r\n  function getRewardsBalance(address[] calldata assets, address user)\r\n    external\r\n    view\r\n    returns (uint256);\r\n\r\n  /**\r\n   * @dev Claims reward for an user to the desired address, on all the assets of the lending pool, accumulating the pending rewards\r\n   * @param amount Amount of rewards to claim\r\n   * @param to Address that will be receiving the rewards\r\n   * @return Rewards claimed\r\n   **/\r\n  function claimRewards(\r\n    address[] calldata assets,\r\n    uint256 amount,\r\n    address to\r\n  ) external returns (uint256);\r\n\r\n  /**\r\n   * @dev Claims reward for an user on behalf, on all the assets of the lending pool, accumulating the pending rewards. The caller must\r\n   * be whitelisted via \"allowClaimOnBehalf\" function by the RewardsAdmin role manager\r\n   * @param amount Amount of rewards to claim\r\n   * @param user Address to check and claim rewards\r\n   * @param to Address that will be receiving the rewards\r\n   * @return Rewards claimed\r\n   **/\r\n  function claimRewardsOnBehalf(\r\n    address[] calldata assets,\r\n    uint256 amount,\r\n    address user,\r\n    address to\r\n  ) external returns (uint256);\r\n\r\n  /**\r\n   * @dev Claims reward for msg.sender, on all the assets of the lending pool, accumulating the pending rewards\r\n   * @param amount Amount of rewards to claim\r\n   * @return Rewards claimed\r\n   **/\r\n  function claimRewardsToSelf(address[] calldata assets, uint256 amount) external returns (uint256);\r\n\r\n  /**\r\n   * @dev returns the unclaimed rewards of the user\r\n   * @param user the address of the user\r\n   * @return the unclaimed user rewards\r\n   */\r\n  function getUserUnclaimedRewards(address user) external view returns (uint256);\r\n\r\n  /**\r\n   * @dev for backward compatibility with previous implementation of the Incentives controller\r\n   */\r\n  function REWARD_TOKEN() external view returns (address);\r\n}\r\n"
			},
			"contracts/Omnidex-incentives/interfaces/ILendingPoolConfigurator.sol": {
				"content": "// SPDX-License-Identifier: agpl-3.0\r\npragma solidity 0.7.5;\r\n\r\ninterface ILendingPoolConfigurator {\r\n  function updateOToken(address reserve, address implementation) external;\r\n\r\n  function updateVariableDebtToken(address reserve, address implementation) external;\r\n}\r\n"
			},
			"contracts/Omnidex-incentives/interfaces/ILendingPoolAddressesProvider.sol": {
				"content": "// SPDX-License-Identifier: agpl-3.0\r\npragma solidity 0.7.5;\r\n\r\n/**\r\n * @title LendingPoolAddressesProvider contract\r\n * @dev Main registry of addresses part of or connected to the protocol, including permissioned roles\r\n * - Acting also as factory of proxies and admin of those, so with right to change its implementations\r\n * - Owned by the Omnidex Governance\r\n * @author Omnidex\r\n **/\r\ninterface ILendingPoolAddressesProvider {\r\n  event MarketIdSet(string newMarketId);\r\n  event LendingPoolUpdated(address indexed newAddress);\r\n  event ConfigurationAdminUpdated(address indexed newAddress);\r\n  event EmergencyAdminUpdated(address indexed newAddress);\r\n  event LendingPoolConfiguratorUpdated(address indexed newAddress);\r\n  event LendingPoolCollateralManagerUpdated(address indexed newAddress);\r\n  event PriceOracleUpdated(address indexed newAddress);\r\n  event LendingRateOracleUpdated(address indexed newAddress);\r\n  event ProxyCreated(bytes32 id, address indexed newAddress);\r\n  event AddressSet(bytes32 id, address indexed newAddress, bool hasProxy);\r\n\r\n  function getMarketId() external view returns (string memory);\r\n\r\n  function setMarketId(string calldata marketId) external;\r\n\r\n  function setAddress(bytes32 id, address newAddress) external;\r\n\r\n  function setAddressAsProxy(bytes32 id, address impl) external;\r\n\r\n  function getAddress(bytes32 id) external view returns (address);\r\n\r\n  function getLendingPool() external view returns (address);\r\n\r\n  function setLendingPoolImpl(address pool) external;\r\n\r\n  function getLendingPoolConfigurator() external view returns (address);\r\n\r\n  function setLendingPoolConfiguratorImpl(address configurator) external;\r\n\r\n  function getLendingPoolCollateralManager() external view returns (address);\r\n\r\n  function setLendingPoolCollateralManager(address manager) external;\r\n\r\n  function getPoolAdmin() external view returns (address);\r\n\r\n  function setPoolAdmin(address admin) external;\r\n\r\n  function getEmergencyAdmin() external view returns (address);\r\n\r\n  function setEmergencyAdmin(address admin) external;\r\n\r\n  function getPriceOracle() external view returns (address);\r\n\r\n  function setPriceOracle(address priceOracle) external;\r\n\r\n  function getLendingRateOracle() external view returns (address);\r\n\r\n  function setLendingRateOracle(address lendingRateOracle) external;\r\n}\r\n"
			},
			"@aave/aave-stake/contracts/interfaces/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity 0.7.5;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n * From https://github.com/OpenZeppelin/openzeppelin-contracts\n */\ninterface IERC20 {\n  /**\n   * @dev Returns the amount of tokens in existence.\n   */\n  function totalSupply() external view returns (uint256);\n\n  /**\n   * @dev Returns the amount of tokens owned by `account`.\n   */\n  function balanceOf(address account) external view returns (uint256);\n\n  /**\n   * @dev Moves `amount` tokens from the caller's account to `recipient`.\n   *\n   * Returns a boolean value indicating whether the operation succeeded.\n   *\n   * Emits a {Transfer} event.\n   */\n  function transfer(address recipient, uint256 amount) external returns (bool);\n\n  /**\n   * @dev Returns the remaining number of tokens that `spender` will be\n   * allowed to spend on behalf of `owner` through {transferFrom}. This is\n   * zero by default.\n   *\n   * This value changes when {approve} or {transferFrom} are called.\n   */\n  function allowance(address owner, address spender) external view returns (uint256);\n\n  /**\n   * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n   *\n   * Returns a boolean value indicating whether the operation succeeded.\n   *\n   * IMPORTANT: Beware that changing an allowance with this method brings the risk\n   * that someone may use both the old and the new allowance by unfortunate\n   * transaction ordering. One possible solution to mitigate this race\n   * condition is to first reduce the spender's allowance to 0 and set the\n   * desired value afterwards:\n   * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n   *\n   * Emits an {Approval} event.\n   */\n  function approve(address spender, uint256 amount) external returns (bool);\n\n  /**\n   * @dev Moves `amount` tokens from `sender` to `recipient` using the\n   * allowance mechanism. `amount` is then deducted from the caller's\n   * allowance.\n   *\n   * Returns a boolean value indicating whether the operation succeeded.\n   *\n   * Emits a {Transfer} event.\n   */\n  function transferFrom(\n    address sender,\n    address recipient,\n    uint256 amount\n  ) external returns (bool);\n\n  /**\n   * @dev Emitted when `value` tokens are moved from one account (`from`) to\n   * another (`to`).\n   *\n   * Note that `value` may be zero.\n   */\n  event Transfer(address indexed from, address indexed to, uint256 value);\n\n  /**\n   * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n   * a call to {approve}. `value` is the new allowance.\n   */\n  event Approval(address indexed owner, address indexed spender, uint256 value);\n}\n"
			},
			"contracts/Omnidex-incentives/interfaces/IOmnidexDistributionManager.sol": {
				"content": "// SPDX-License-Identifier: agpl-3.0\r\npragma solidity 0.7.5;\r\npragma experimental ABIEncoderV2;\r\n\r\nimport {DistributionTypes} from '../lib/DistributionTypes.sol';\r\n\r\ninterface IOmnidexDistributionManager {\r\n  \r\n  event AssetConfigUpdated(address indexed asset, uint256 emission);\r\n  event AssetIndexUpdated(address indexed asset, uint256 index);\r\n  event UserIndexUpdated(address indexed user, address indexed asset, uint256 index);\r\n  event DistributionEndUpdated(uint256 newDistributionEnd);\r\n\r\n  /**\r\n  * @dev Sets the end date for the distribution\r\n  * @param distributionEnd The end date timestamp\r\n  **/\r\n  function setDistributionEnd(uint256 distributionEnd) external;\r\n\r\n  /**\r\n  * @dev Gets the end date for the distribution\r\n  * @return The end of the distribution\r\n  **/\r\n  function getDistributionEnd() external view returns (uint256);\r\n\r\n  /**\r\n  * @dev for backwards compatibility with the previous DistributionManager used\r\n  * @return The end of the distribution\r\n  **/\r\n  function DISTRIBUTION_END() external view returns(uint256);\r\n\r\n   /**\r\n   * @dev Returns the data of an user on a distribution\r\n   * @param user Address of the user\r\n   * @param asset The address of the reference asset of the distribution\r\n   * @return The new index\r\n   **/\r\n   function getUserAssetData(address user, address asset) external view returns (uint256);\r\n\r\n   /**\r\n   * @dev Returns the configuration of the distribution for a certain asset\r\n   * @param asset The address of the reference asset of the distribution\r\n   * @return The asset index, the emission per second and the last updated timestamp\r\n   **/\r\n   function getAssetData(address asset) external view returns (uint256, uint256, uint256);\r\n}\r\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"@aave/aave-stake/contracts/interfaces/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 standard as defined in the EIP. From https://github.com/OpenZeppelin/openzeppelin-contracts",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the amount of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the amount of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves `amount` tokens from the caller's account to `recipient`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves `amount` tokens from `sender` to `recipient` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.7.5+commit.eb77ed08\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP. From https://github.com/OpenZeppelin/openzeppelin-contracts\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `recipient`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `sender` to `recipient` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@aave/aave-stake/contracts/interfaces/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@aave/aave-stake/contracts/interfaces/IERC20.sol\":{\"keccak256\":\"0x150506e2e40dc3cea841fe0ade6021b9b0d4e09f7616d312bc7c1300a2d7a94f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d3dbf854f310f20a48cd727e1680067f4d911a4c6d220886935736297a0f89cb\",\"dweb:/ipfs/QmU8xN2AYrURFgmB4hLFLamc7aJe6VD5qkUEcfdrKPcz9C\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/Omnidex-incentives/interfaces/ILendingPoolAddressesProvider.sol": {
				"ILendingPoolAddressesProvider": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "bytes32",
									"name": "id",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newAddress",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "hasProxy",
									"type": "bool"
								}
							],
							"name": "AddressSet",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "newAddress",
									"type": "address"
								}
							],
							"name": "ConfigurationAdminUpdated",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "newAddress",
									"type": "address"
								}
							],
							"name": "EmergencyAdminUpdated",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "newAddress",
									"type": "address"
								}
							],
							"name": "LendingPoolCollateralManagerUpdated",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "newAddress",
									"type": "address"
								}
							],
							"name": "LendingPoolConfiguratorUpdated",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "newAddress",
									"type": "address"
								}
							],
							"name": "LendingPoolUpdated",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "newAddress",
									"type": "address"
								}
							],
							"name": "LendingRateOracleUpdated",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "string",
									"name": "newMarketId",
									"type": "string"
								}
							],
							"name": "MarketIdSet",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "newAddress",
									"type": "address"
								}
							],
							"name": "PriceOracleUpdated",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "bytes32",
									"name": "id",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newAddress",
									"type": "address"
								}
							],
							"name": "ProxyCreated",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "id",
									"type": "bytes32"
								}
							],
							"name": "getAddress",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getEmergencyAdmin",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getLendingPool",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getLendingPoolCollateralManager",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getLendingPoolConfigurator",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getLendingRateOracle",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getMarketId",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getPoolAdmin",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getPriceOracle",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "id",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "newAddress",
									"type": "address"
								}
							],
							"name": "setAddress",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "id",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "impl",
									"type": "address"
								}
							],
							"name": "setAddressAsProxy",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "admin",
									"type": "address"
								}
							],
							"name": "setEmergencyAdmin",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "manager",
									"type": "address"
								}
							],
							"name": "setLendingPoolCollateralManager",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "configurator",
									"type": "address"
								}
							],
							"name": "setLendingPoolConfiguratorImpl",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "pool",
									"type": "address"
								}
							],
							"name": "setLendingPoolImpl",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "lendingRateOracle",
									"type": "address"
								}
							],
							"name": "setLendingRateOracle",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "marketId",
									"type": "string"
								}
							],
							"name": "setMarketId",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "admin",
									"type": "address"
								}
							],
							"name": "setPoolAdmin",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "priceOracle",
									"type": "address"
								}
							],
							"name": "setPriceOracle",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"author": "Omnidex*",
						"details": "Main registry of addresses part of or connected to the protocol, including permissioned roles - Acting also as factory of proxies and admin of those, so with right to change its implementations - Owned by the Omnidex Governance",
						"kind": "dev",
						"methods": {},
						"title": "LendingPoolAddressesProvider contract",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"getAddress(bytes32)": "21f8a721",
							"getEmergencyAdmin()": "ddcaa9ea",
							"getLendingPool()": "0261bf8b",
							"getLendingPoolCollateralManager()": "712d9171",
							"getLendingPoolConfigurator()": "85c858b1",
							"getLendingRateOracle()": "3618abba",
							"getMarketId()": "568ef470",
							"getPoolAdmin()": "aecda378",
							"getPriceOracle()": "fca513a8",
							"setAddress(bytes32,address)": "ca446dd9",
							"setAddressAsProxy(bytes32,address)": "5dcc528c",
							"setEmergencyAdmin(address)": "35da3394",
							"setLendingPoolCollateralManager(address)": "398e5553",
							"setLendingPoolConfiguratorImpl(address)": "c12542df",
							"setLendingPoolImpl(address)": "5aef021f",
							"setLendingRateOracle(address)": "820d1274",
							"setMarketId(string)": "f67b1847",
							"setPoolAdmin(address)": "283d62ad",
							"setPriceOracle(address)": "530e784f"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.7.5+commit.eb77ed08\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"id\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"hasProxy\",\"type\":\"bool\"}],\"name\":\"AddressSet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newAddress\",\"type\":\"address\"}],\"name\":\"ConfigurationAdminUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newAddress\",\"type\":\"address\"}],\"name\":\"EmergencyAdminUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newAddress\",\"type\":\"address\"}],\"name\":\"LendingPoolCollateralManagerUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newAddress\",\"type\":\"address\"}],\"name\":\"LendingPoolConfiguratorUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newAddress\",\"type\":\"address\"}],\"name\":\"LendingPoolUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newAddress\",\"type\":\"address\"}],\"name\":\"LendingRateOracleUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"newMarketId\",\"type\":\"string\"}],\"name\":\"MarketIdSet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newAddress\",\"type\":\"address\"}],\"name\":\"PriceOracleUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"id\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newAddress\",\"type\":\"address\"}],\"name\":\"ProxyCreated\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"id\",\"type\":\"bytes32\"}],\"name\":\"getAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getEmergencyAdmin\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getLendingPool\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getLendingPoolCollateralManager\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getLendingPoolConfigurator\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getLendingRateOracle\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getMarketId\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getPoolAdmin\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getPriceOracle\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"id\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"newAddress\",\"type\":\"address\"}],\"name\":\"setAddress\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"id\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"impl\",\"type\":\"address\"}],\"name\":\"setAddressAsProxy\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"admin\",\"type\":\"address\"}],\"name\":\"setEmergencyAdmin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"manager\",\"type\":\"address\"}],\"name\":\"setLendingPoolCollateralManager\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"configurator\",\"type\":\"address\"}],\"name\":\"setLendingPoolConfiguratorImpl\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"}],\"name\":\"setLendingPoolImpl\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"lendingRateOracle\",\"type\":\"address\"}],\"name\":\"setLendingRateOracle\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"marketId\",\"type\":\"string\"}],\"name\":\"setMarketId\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"admin\",\"type\":\"address\"}],\"name\":\"setPoolAdmin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"priceOracle\",\"type\":\"address\"}],\"name\":\"setPriceOracle\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"Omnidex*\",\"details\":\"Main registry of addresses part of or connected to the protocol, including permissioned roles - Acting also as factory of proxies and admin of those, so with right to change its implementations - Owned by the Omnidex Governance\",\"kind\":\"dev\",\"methods\":{},\"title\":\"LendingPoolAddressesProvider contract\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Omnidex-incentives/interfaces/ILendingPoolAddressesProvider.sol\":\"ILendingPoolAddressesProvider\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/Omnidex-incentives/interfaces/ILendingPoolAddressesProvider.sol\":{\"keccak256\":\"0x805ab39fec661fe4a7b100f657bd0be1599a2bec05da3a0ab03f0d6eafe47c24\",\"license\":\"agpl-3.0\",\"urls\":[\"bzz-raw://8cb6a3db794531cd5f7bb0408b6f9b2358ab8e526878a1442e23d91b5314113d\",\"dweb:/ipfs/QmP3AngoDhjztkQQ1FsiCC4w4pj5H8RTy4rYkLfMSwL1FK\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/Omnidex-incentives/interfaces/ILendingPoolConfigurator.sol": {
				"ILendingPoolConfigurator": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "reserve",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "implementation",
									"type": "address"
								}
							],
							"name": "updateOToken",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "reserve",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "implementation",
									"type": "address"
								}
							],
							"name": "updateVariableDebtToken",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"updateOToken(address,address)": "12e3ae16",
							"updateVariableDebtToken(address,address)": "4d978258"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.7.5+commit.eb77ed08\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"reserve\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"updateOToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"reserve\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"updateVariableDebtToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Omnidex-incentives/interfaces/ILendingPoolConfigurator.sol\":\"ILendingPoolConfigurator\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/Omnidex-incentives/interfaces/ILendingPoolConfigurator.sol\":{\"keccak256\":\"0x9f93cab78339ab46e06e8769a8b703153d940713c036a0fa762942de98fa8776\",\"license\":\"agpl-3.0\",\"urls\":[\"bzz-raw://6798937511de2ec730ff830ff88b61c9758f7436d119b5735b550d4185700311\",\"dweb:/ipfs/QmP2LPwb2iwSSZUdSYbnASACNVUxh9XrkHgzPPP8uwEBJL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/Omnidex-incentives/interfaces/ILendingPoolData.sol": {
				"ILendingPoolData": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "asset",
									"type": "address"
								}
							],
							"name": "getReserveData",
							"outputs": [
								{
									"components": [
										{
											"components": [
												{
													"internalType": "uint256",
													"name": "data",
													"type": "uint256"
												}
											],
											"internalType": "struct DataTypes.ReserveConfigurationMap",
											"name": "configuration",
											"type": "tuple"
										},
										{
											"internalType": "uint128",
											"name": "liquidityIndex",
											"type": "uint128"
										},
										{
											"internalType": "uint128",
											"name": "variableBorrowIndex",
											"type": "uint128"
										},
										{
											"internalType": "uint128",
											"name": "currentLiquidityRate",
											"type": "uint128"
										},
										{
											"internalType": "uint128",
											"name": "currentVariableBorrowRate",
											"type": "uint128"
										},
										{
											"internalType": "uint128",
											"name": "currentStableBorrowRate",
											"type": "uint128"
										},
										{
											"internalType": "uint40",
											"name": "lastUpdateTimestamp",
											"type": "uint40"
										},
										{
											"internalType": "address",
											"name": "oTokenAddress",
											"type": "address"
										},
										{
											"internalType": "address",
											"name": "stableDebtTokenAddress",
											"type": "address"
										},
										{
											"internalType": "address",
											"name": "variableDebtTokenAddress",
											"type": "address"
										},
										{
											"internalType": "address",
											"name": "interestRateStrategyAddress",
											"type": "address"
										},
										{
											"internalType": "uint8",
											"name": "id",
											"type": "uint8"
										}
									],
									"internalType": "struct DataTypes.ReserveData",
									"name": "",
									"type": "tuple"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"getReserveData(address)": {
								"details": "Returns the state and configuration of the reserve",
								"params": {
									"asset": "The address of the underlying asset of the reserve"
								},
								"returns": {
									"_0": "The state of the reserve*"
								}
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"getReserveData(address)": "35ea6a75"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.7.5+commit.eb77ed08\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"}],\"name\":\"getReserveData\",\"outputs\":[{\"components\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"data\",\"type\":\"uint256\"}],\"internalType\":\"struct DataTypes.ReserveConfigurationMap\",\"name\":\"configuration\",\"type\":\"tuple\"},{\"internalType\":\"uint128\",\"name\":\"liquidityIndex\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"variableBorrowIndex\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"currentLiquidityRate\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"currentVariableBorrowRate\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"currentStableBorrowRate\",\"type\":\"uint128\"},{\"internalType\":\"uint40\",\"name\":\"lastUpdateTimestamp\",\"type\":\"uint40\"},{\"internalType\":\"address\",\"name\":\"oTokenAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"stableDebtTokenAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"variableDebtTokenAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"interestRateStrategyAddress\",\"type\":\"address\"},{\"internalType\":\"uint8\",\"name\":\"id\",\"type\":\"uint8\"}],\"internalType\":\"struct DataTypes.ReserveData\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"getReserveData(address)\":{\"details\":\"Returns the state and configuration of the reserve\",\"params\":{\"asset\":\"The address of the underlying asset of the reserve\"},\"returns\":{\"_0\":\"The state of the reserve*\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Omnidex-incentives/interfaces/ILendingPoolData.sol\":\"ILendingPoolData\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/Omnidex-incentives/interfaces/ILendingPoolData.sol\":{\"keccak256\":\"0xa2dd5f64bc25dff88e130e0f99ebe24c743f308849c8fa487bad26eef278ef6c\",\"license\":\"agpl-3.0\",\"urls\":[\"bzz-raw://20008df765afa056c3b54e00e1321791a7a2c6d2dbf8d21e146afdbe73f8cfd1\",\"dweb:/ipfs/QmXtN47mpdSYQb64YCQDkX8r5QFg5N9Mq5SMZ828fJPDhu\"]},\"contracts/Omnidex-incentives/utils/DataTypes.sol\":{\"keccak256\":\"0xa64c1b776b13f3f6cc88fa0742ce15073026bb526be7f324dddbd2b221e67129\",\"license\":\"agpl-3.0\",\"urls\":[\"bzz-raw://f194c291658a18f69b8df0b1b2ddd08bbb621b821171700bf55f7586e65a6275\",\"dweb:/ipfs/QmddN7PHqyFk8ZCveEqqoUfAsQ9sToQYna56RqKRDAFAs2\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/Omnidex-incentives/interfaces/IOTokenDetailed.sol": {
				"IOTokenDetailed": {
					"abi": [
						{
							"inputs": [],
							"name": "UNDERLYING_ASSET_ADDRESS",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"UNDERLYING_ASSET_ADDRESS()": "b16a19de"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.7.5+commit.eb77ed08\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"UNDERLYING_ASSET_ADDRESS\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Omnidex-incentives/interfaces/IOTokenDetailed.sol\":\"IOTokenDetailed\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/Omnidex-incentives/interfaces/IOTokenDetailed.sol\":{\"keccak256\":\"0x67a143830d137853f16cff5a41f1232c008c4f22764f32ade20f7734654e29ca\",\"license\":\"agpl-3.0\",\"urls\":[\"bzz-raw://ea21a986420604e428b4c0ba188ca978b62f69ef1b75c336ede4074cb68f25d8\",\"dweb:/ipfs/QmY6wt5U37obDdU9Dq1sGPzDbBjZzY7Ju2WNs8KbQmzgLN\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/Omnidex-incentives/interfaces/IOmnidexDistributionManager.sol": {
				"IOmnidexDistributionManager": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "asset",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "emission",
									"type": "uint256"
								}
							],
							"name": "AssetConfigUpdated",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "asset",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "index",
									"type": "uint256"
								}
							],
							"name": "AssetIndexUpdated",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "newDistributionEnd",
									"type": "uint256"
								}
							],
							"name": "DistributionEndUpdated",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "asset",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "index",
									"type": "uint256"
								}
							],
							"name": "UserIndexUpdated",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "DISTRIBUTION_END",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "asset",
									"type": "address"
								}
							],
							"name": "getAssetData",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getDistributionEnd",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "asset",
									"type": "address"
								}
							],
							"name": "getUserAssetData",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "distributionEnd",
									"type": "uint256"
								}
							],
							"name": "setDistributionEnd",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"DISTRIBUTION_END()": {
								"details": "for backwards compatibility with the previous DistributionManager used",
								"returns": {
									"_0": "The end of the distribution*"
								}
							},
							"getAssetData(address)": {
								"details": "Returns the configuration of the distribution for a certain asset",
								"params": {
									"asset": "The address of the reference asset of the distribution"
								},
								"returns": {
									"_0": "The asset index, the emission per second and the last updated timestamp*"
								}
							},
							"getDistributionEnd()": {
								"details": "Gets the end date for the distribution",
								"returns": {
									"_0": "The end of the distribution*"
								}
							},
							"getUserAssetData(address,address)": {
								"details": "Returns the data of an user on a distribution",
								"params": {
									"asset": "The address of the reference asset of the distribution",
									"user": "Address of the user"
								},
								"returns": {
									"_0": "The new index*"
								}
							},
							"setDistributionEnd(uint256)": {
								"details": "Sets the end date for the distribution",
								"params": {
									"distributionEnd": "The end date timestamp*"
								}
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"DISTRIBUTION_END()": "919cd40f",
							"getAssetData(address)": "1652e7b7",
							"getDistributionEnd()": "cc69afec",
							"getUserAssetData(address,address)": "3373ee4c",
							"setDistributionEnd(uint256)": "39ccbdd3"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.7.5+commit.eb77ed08\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"emission\",\"type\":\"uint256\"}],\"name\":\"AssetConfigUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"AssetIndexUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newDistributionEnd\",\"type\":\"uint256\"}],\"name\":\"DistributionEndUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"UserIndexUpdated\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DISTRIBUTION_END\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"}],\"name\":\"getAssetData\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getDistributionEnd\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"}],\"name\":\"getUserAssetData\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"distributionEnd\",\"type\":\"uint256\"}],\"name\":\"setDistributionEnd\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"DISTRIBUTION_END()\":{\"details\":\"for backwards compatibility with the previous DistributionManager used\",\"returns\":{\"_0\":\"The end of the distribution*\"}},\"getAssetData(address)\":{\"details\":\"Returns the configuration of the distribution for a certain asset\",\"params\":{\"asset\":\"The address of the reference asset of the distribution\"},\"returns\":{\"_0\":\"The asset index, the emission per second and the last updated timestamp*\"}},\"getDistributionEnd()\":{\"details\":\"Gets the end date for the distribution\",\"returns\":{\"_0\":\"The end of the distribution*\"}},\"getUserAssetData(address,address)\":{\"details\":\"Returns the data of an user on a distribution\",\"params\":{\"asset\":\"The address of the reference asset of the distribution\",\"user\":\"Address of the user\"},\"returns\":{\"_0\":\"The new index*\"}},\"setDistributionEnd(uint256)\":{\"details\":\"Sets the end date for the distribution\",\"params\":{\"distributionEnd\":\"The end date timestamp*\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Omnidex-incentives/interfaces/IOmnidexDistributionManager.sol\":\"IOmnidexDistributionManager\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/Omnidex-incentives/interfaces/IOmnidexDistributionManager.sol\":{\"keccak256\":\"0xabf5e1d31a3567f017adf41a4384f0c7a6fce4e81441a7b42fb565f92256a87d\",\"license\":\"agpl-3.0\",\"urls\":[\"bzz-raw://a2aab2cd0efc27da9ced088fcb5534b62c4ebd436688778af86949e706d22fef\",\"dweb:/ipfs/QmPAQiLYLB7QXMKaHjSwWKaK8mN8pgBRteJUqg5ptKebZE\"]},\"contracts/Omnidex-incentives/lib/DistributionTypes.sol\":{\"keccak256\":\"0xbb24d51b39ff627c1d2dbbaa5063ae7f1d515ec3980cc6ed8f5d171c17ef1d36\",\"license\":\"agpl-3.0\",\"urls\":[\"bzz-raw://30120d3556895da3f517a6ce8954e4419944f9e07b7b4cd3d596df3e8e8103e3\",\"dweb:/ipfs/QmTXPN7Q8ULdJnJVGVTwLbw7Rvy5h17DfabKf8szvprQNb\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/Omnidex-incentives/interfaces/IOmnidexIncentivesController.sol": {
				"IOmnidexIncentivesController": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "asset",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "emission",
									"type": "uint256"
								}
							],
							"name": "AssetConfigUpdated",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "asset",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "index",
									"type": "uint256"
								}
							],
							"name": "AssetIndexUpdated",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "claimer",
									"type": "address"
								}
							],
							"name": "ClaimerSet",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "newDistributionEnd",
									"type": "uint256"
								}
							],
							"name": "DistributionEndUpdated",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "RewardsAccrued",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "claimer",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "RewardsClaimed",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "asset",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "index",
									"type": "uint256"
								}
							],
							"name": "UserIndexUpdated",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "DISTRIBUTION_END",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "REWARD_TOKEN",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address[]",
									"name": "assets",
									"type": "address[]"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								}
							],
							"name": "claimRewards",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address[]",
									"name": "assets",
									"type": "address[]"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								}
							],
							"name": "claimRewardsOnBehalf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address[]",
									"name": "assets",
									"type": "address[]"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "claimRewardsToSelf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address[]",
									"name": "assets",
									"type": "address[]"
								},
								{
									"internalType": "uint256[]",
									"name": "emissionsPerSecond",
									"type": "uint256[]"
								}
							],
							"name": "configureAssets",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "asset",
									"type": "address"
								}
							],
							"name": "getAssetData",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "user",
									"type": "address"
								}
							],
							"name": "getClaimer",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getDistributionEnd",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address[]",
									"name": "assets",
									"type": "address[]"
								},
								{
									"internalType": "address",
									"name": "user",
									"type": "address"
								}
							],
							"name": "getRewardsBalance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "asset",
									"type": "address"
								}
							],
							"name": "getUserAssetData",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "user",
									"type": "address"
								}
							],
							"name": "getUserUnclaimedRewards",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "asset",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "userBalance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "totalSupply",
									"type": "uint256"
								}
							],
							"name": "handleAction",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "claimer",
									"type": "address"
								}
							],
							"name": "setClaimer",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "distributionEnd",
									"type": "uint256"
								}
							],
							"name": "setDistributionEnd",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"DISTRIBUTION_END()": {
								"details": "for backwards compatibility with the previous DistributionManager used",
								"returns": {
									"_0": "The end of the distribution*"
								}
							},
							"REWARD_TOKEN()": {
								"details": "for backward compatibility with previous implementation of the Incentives controller"
							},
							"claimRewards(address[],uint256,address)": {
								"details": "Claims reward for an user to the desired address, on all the assets of the lending pool, accumulating the pending rewards",
								"params": {
									"amount": "Amount of rewards to claim",
									"to": "Address that will be receiving the rewards"
								},
								"returns": {
									"_0": "Rewards claimed*"
								}
							},
							"claimRewardsOnBehalf(address[],uint256,address,address)": {
								"details": "Claims reward for an user on behalf, on all the assets of the lending pool, accumulating the pending rewards. The caller must be whitelisted via \"allowClaimOnBehalf\" function by the RewardsAdmin role manager",
								"params": {
									"amount": "Amount of rewards to claim",
									"to": "Address that will be receiving the rewards",
									"user": "Address to check and claim rewards"
								},
								"returns": {
									"_0": "Rewards claimed*"
								}
							},
							"claimRewardsToSelf(address[],uint256)": {
								"details": "Claims reward for msg.sender, on all the assets of the lending pool, accumulating the pending rewards",
								"params": {
									"amount": "Amount of rewards to claim"
								},
								"returns": {
									"_0": "Rewards claimed*"
								}
							},
							"configureAssets(address[],uint256[])": {
								"details": "Configure assets for a certain rewards emission",
								"params": {
									"assets": "The assets to incentivize",
									"emissionsPerSecond": "The emission for each asset"
								}
							},
							"getAssetData(address)": {
								"details": "Returns the configuration of the distribution for a certain asset",
								"params": {
									"asset": "The address of the reference asset of the distribution"
								},
								"returns": {
									"_0": "The asset index, the emission per second and the last updated timestamp*"
								}
							},
							"getClaimer(address)": {
								"details": "Returns the whitelisted claimer for a certain address (0x0 if not set)",
								"params": {
									"user": "The address of the user"
								},
								"returns": {
									"_0": "The claimer address"
								}
							},
							"getDistributionEnd()": {
								"details": "Gets the end date for the distribution",
								"returns": {
									"_0": "The end of the distribution*"
								}
							},
							"getRewardsBalance(address[],address)": {
								"details": "Returns the total of rewards of an user, already accrued + not yet accrued",
								"params": {
									"user": "The address of the user"
								},
								"returns": {
									"_0": "The rewards*"
								}
							},
							"getUserAssetData(address,address)": {
								"details": "Returns the data of an user on a distribution",
								"params": {
									"asset": "The address of the reference asset of the distribution",
									"user": "Address of the user"
								},
								"returns": {
									"_0": "The new index*"
								}
							},
							"getUserUnclaimedRewards(address)": {
								"details": "returns the unclaimed rewards of the user",
								"params": {
									"user": "the address of the user"
								},
								"returns": {
									"_0": "the unclaimed user rewards"
								}
							},
							"handleAction(address,uint256,uint256)": {
								"details": "Called by the corresponding asset on any update that affects the rewards distribution",
								"params": {
									"asset": "The address of the user",
									"totalSupply": "The total supply of the asset in the lending pool*",
									"userBalance": "The balance of the user of the asset in the lending pool"
								}
							},
							"setClaimer(address,address)": {
								"details": "Whitelists an address to claim the rewards on behalf of another address",
								"params": {
									"claimer": "The address of the claimer",
									"user": "The address of the user"
								}
							},
							"setDistributionEnd(uint256)": {
								"details": "Sets the end date for the distribution",
								"params": {
									"distributionEnd": "The end date timestamp*"
								}
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"DISTRIBUTION_END()": "919cd40f",
							"REWARD_TOKEN()": "99248ea7",
							"claimRewards(address[],uint256,address)": "3111e7b3",
							"claimRewardsOnBehalf(address[],uint256,address,address)": "6d34b96e",
							"claimRewardsToSelf(address[],uint256)": "41485304",
							"configureAssets(address[],uint256[])": "79f171b2",
							"getAssetData(address)": "1652e7b7",
							"getClaimer(address)": "74d945ec",
							"getDistributionEnd()": "cc69afec",
							"getRewardsBalance(address[],address)": "8b599f26",
							"getUserAssetData(address,address)": "3373ee4c",
							"getUserUnclaimedRewards(address)": "198fa81e",
							"handleAction(address,uint256,uint256)": "31873e2e",
							"setClaimer(address,address)": "f5cf673b",
							"setDistributionEnd(uint256)": "39ccbdd3"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.7.5+commit.eb77ed08\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"emission\",\"type\":\"uint256\"}],\"name\":\"AssetConfigUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"AssetIndexUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"claimer\",\"type\":\"address\"}],\"name\":\"ClaimerSet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newDistributionEnd\",\"type\":\"uint256\"}],\"name\":\"DistributionEndUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"RewardsAccrued\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"claimer\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"RewardsClaimed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"UserIndexUpdated\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DISTRIBUTION_END\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"REWARD_TOKEN\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"assets\",\"type\":\"address[]\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"claimRewards\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"assets\",\"type\":\"address[]\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"claimRewardsOnBehalf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"assets\",\"type\":\"address[]\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"claimRewardsToSelf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"assets\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"emissionsPerSecond\",\"type\":\"uint256[]\"}],\"name\":\"configureAssets\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"}],\"name\":\"getAssetData\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"getClaimer\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getDistributionEnd\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"assets\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"getRewardsBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"}],\"name\":\"getUserAssetData\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"getUserUnclaimedRewards\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"userBalance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"totalSupply\",\"type\":\"uint256\"}],\"name\":\"handleAction\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"claimer\",\"type\":\"address\"}],\"name\":\"setClaimer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"distributionEnd\",\"type\":\"uint256\"}],\"name\":\"setDistributionEnd\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"DISTRIBUTION_END()\":{\"details\":\"for backwards compatibility with the previous DistributionManager used\",\"returns\":{\"_0\":\"The end of the distribution*\"}},\"REWARD_TOKEN()\":{\"details\":\"for backward compatibility with previous implementation of the Incentives controller\"},\"claimRewards(address[],uint256,address)\":{\"details\":\"Claims reward for an user to the desired address, on all the assets of the lending pool, accumulating the pending rewards\",\"params\":{\"amount\":\"Amount of rewards to claim\",\"to\":\"Address that will be receiving the rewards\"},\"returns\":{\"_0\":\"Rewards claimed*\"}},\"claimRewardsOnBehalf(address[],uint256,address,address)\":{\"details\":\"Claims reward for an user on behalf, on all the assets of the lending pool, accumulating the pending rewards. The caller must be whitelisted via \\\"allowClaimOnBehalf\\\" function by the RewardsAdmin role manager\",\"params\":{\"amount\":\"Amount of rewards to claim\",\"to\":\"Address that will be receiving the rewards\",\"user\":\"Address to check and claim rewards\"},\"returns\":{\"_0\":\"Rewards claimed*\"}},\"claimRewardsToSelf(address[],uint256)\":{\"details\":\"Claims reward for msg.sender, on all the assets of the lending pool, accumulating the pending rewards\",\"params\":{\"amount\":\"Amount of rewards to claim\"},\"returns\":{\"_0\":\"Rewards claimed*\"}},\"configureAssets(address[],uint256[])\":{\"details\":\"Configure assets for a certain rewards emission\",\"params\":{\"assets\":\"The assets to incentivize\",\"emissionsPerSecond\":\"The emission for each asset\"}},\"getAssetData(address)\":{\"details\":\"Returns the configuration of the distribution for a certain asset\",\"params\":{\"asset\":\"The address of the reference asset of the distribution\"},\"returns\":{\"_0\":\"The asset index, the emission per second and the last updated timestamp*\"}},\"getClaimer(address)\":{\"details\":\"Returns the whitelisted claimer for a certain address (0x0 if not set)\",\"params\":{\"user\":\"The address of the user\"},\"returns\":{\"_0\":\"The claimer address\"}},\"getDistributionEnd()\":{\"details\":\"Gets the end date for the distribution\",\"returns\":{\"_0\":\"The end of the distribution*\"}},\"getRewardsBalance(address[],address)\":{\"details\":\"Returns the total of rewards of an user, already accrued + not yet accrued\",\"params\":{\"user\":\"The address of the user\"},\"returns\":{\"_0\":\"The rewards*\"}},\"getUserAssetData(address,address)\":{\"details\":\"Returns the data of an user on a distribution\",\"params\":{\"asset\":\"The address of the reference asset of the distribution\",\"user\":\"Address of the user\"},\"returns\":{\"_0\":\"The new index*\"}},\"getUserUnclaimedRewards(address)\":{\"details\":\"returns the unclaimed rewards of the user\",\"params\":{\"user\":\"the address of the user\"},\"returns\":{\"_0\":\"the unclaimed user rewards\"}},\"handleAction(address,uint256,uint256)\":{\"details\":\"Called by the corresponding asset on any update that affects the rewards distribution\",\"params\":{\"asset\":\"The address of the user\",\"totalSupply\":\"The total supply of the asset in the lending pool*\",\"userBalance\":\"The balance of the user of the asset in the lending pool\"}},\"setClaimer(address,address)\":{\"details\":\"Whitelists an address to claim the rewards on behalf of another address\",\"params\":{\"claimer\":\"The address of the claimer\",\"user\":\"The address of the user\"}},\"setDistributionEnd(uint256)\":{\"details\":\"Sets the end date for the distribution\",\"params\":{\"distributionEnd\":\"The end date timestamp*\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Omnidex-incentives/interfaces/IOmnidexIncentivesController.sol\":\"IOmnidexIncentivesController\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/Omnidex-incentives/interfaces/IOmnidexDistributionManager.sol\":{\"keccak256\":\"0xabf5e1d31a3567f017adf41a4384f0c7a6fce4e81441a7b42fb565f92256a87d\",\"license\":\"agpl-3.0\",\"urls\":[\"bzz-raw://a2aab2cd0efc27da9ced088fcb5534b62c4ebd436688778af86949e706d22fef\",\"dweb:/ipfs/QmPAQiLYLB7QXMKaHjSwWKaK8mN8pgBRteJUqg5ptKebZE\"]},\"contracts/Omnidex-incentives/interfaces/IOmnidexIncentivesController.sol\":{\"keccak256\":\"0x8615452507c06e118914d5bdbd7136745f29030f2bd90fb80101eda042138d84\",\"license\":\"agpl-3.0\",\"urls\":[\"bzz-raw://632c6c2423e567411001205cb0838ed6ccd5a6d36b9f0e27e7262cc79a081e83\",\"dweb:/ipfs/QmSM9PrZzpBZ9Ae6tcDPWoUNztLNrtVpYTCb83bFNjJP4A\"]},\"contracts/Omnidex-incentives/lib/DistributionTypes.sol\":{\"keccak256\":\"0xbb24d51b39ff627c1d2dbbaa5063ae7f1d515ec3980cc6ed8f5d171c17ef1d36\",\"license\":\"agpl-3.0\",\"urls\":[\"bzz-raw://30120d3556895da3f517a6ce8954e4419944f9e07b7b4cd3d596df3e8e8103e3\",\"dweb:/ipfs/QmTXPN7Q8ULdJnJVGVTwLbw7Rvy5h17DfabKf8szvprQNb\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/Omnidex-incentives/lib/DistributionTypes.sol": {
				"DistributionTypes": {
					"abi": [],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/Omnidex-incentives/lib/DistributionTypes.sol\":99:368  library DistributionTypes {\r... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  invalid\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/Omnidex-incentives/lib/DistributionTypes.sol\":99:368  library DistributionTypes {\r... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa264697066735822122076c5d18e16d53a34425f35de5aede9b48086a31d56bca0bd38075fd436320b9764736f6c63430007050033\n}\n",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566023600b82828239805160001a607314601657fe5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122076c5d18e16d53a34425f35de5aede9b48086a31d56bca0bd38075fd436320b9764736f6c63430007050033",
							"opcodes": "PUSH1 0x56 PUSH1 0x23 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x16 JUMPI INVALID JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH23 0xC5D18E16D53A34425F35DE5AEDE9B48086A31D56BCA0BD CODESIZE SMOD 0x5F 0xD4 CALLDATASIZE ORIGIN SIGNEXTEND SWAP8 PUSH5 0x736F6C6343 STOP SMOD SDIV STOP CALLER ",
							"sourceMap": "99:269:7:-:0;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122076c5d18e16d53a34425f35de5aede9b48086a31d56bca0bd38075fd436320b9764736f6c63430007050033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH23 0xC5D18E16D53A34425F35DE5AEDE9B48086A31D56BCA0BD CODESIZE SMOD 0x5F 0xD4 CALLDATASIZE ORIGIN SIGNEXTEND SWAP8 PUSH5 0x736F6C6343 STOP SMOD SDIV STOP CALLER ",
							"sourceMap": "99:269:7:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 99,
									"end": 368,
									"name": "PUSH #[$]",
									"source": 7,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 99,
									"end": 368,
									"name": "PUSH [$]",
									"source": 7,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 99,
									"end": 368,
									"name": "PUSH",
									"source": 7,
									"value": "B"
								},
								{
									"begin": 99,
									"end": 368,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 99,
									"end": 368,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 99,
									"end": 368,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 99,
									"end": 368,
									"name": "CODECOPY",
									"source": 7
								},
								{
									"begin": 99,
									"end": 368,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 99,
									"end": 368,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 99,
									"end": 368,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 99,
									"end": 368,
									"name": "BYTE",
									"source": 7
								},
								{
									"begin": 99,
									"end": 368,
									"name": "PUSH",
									"source": 7,
									"value": "73"
								},
								{
									"begin": 99,
									"end": 368,
									"name": "EQ",
									"source": 7
								},
								{
									"begin": 99,
									"end": 368,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 99,
									"end": 368,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 99,
									"end": 368,
									"name": "INVALID",
									"source": 7
								},
								{
									"begin": 99,
									"end": 368,
									"name": "tag",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 99,
									"end": 368,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 99,
									"end": 368,
									"name": "ADDRESS",
									"source": 7
								},
								{
									"begin": 99,
									"end": 368,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 99,
									"end": 368,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 99,
									"end": 368,
									"name": "PUSH",
									"source": 7,
									"value": "73"
								},
								{
									"begin": 99,
									"end": 368,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 99,
									"end": 368,
									"name": "MSTORE8",
									"source": 7
								},
								{
									"begin": 99,
									"end": 368,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 99,
									"end": 368,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 99,
									"end": 368,
									"name": "RETURN",
									"source": 7
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122076c5d18e16d53a34425f35de5aede9b48086a31d56bca0bd38075fd436320b9764736f6c63430007050033",
									".code": [
										{
											"begin": 99,
											"end": 368,
											"name": "PUSHDEPLOYADDRESS",
											"source": 7
										},
										{
											"begin": 99,
											"end": 368,
											"name": "ADDRESS",
											"source": 7
										},
										{
											"begin": 99,
											"end": 368,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 99,
											"end": 368,
											"name": "PUSH",
											"source": 7,
											"value": "80"
										},
										{
											"begin": 99,
											"end": 368,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 99,
											"end": 368,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 99,
											"end": 368,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 99,
											"end": 368,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 99,
											"end": 368,
											"name": "REVERT",
											"source": 7
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.7.5+commit.eb77ed08\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Omnidex-incentives/lib/DistributionTypes.sol\":\"DistributionTypes\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/Omnidex-incentives/lib/DistributionTypes.sol\":{\"keccak256\":\"0xbb24d51b39ff627c1d2dbbaa5063ae7f1d515ec3980cc6ed8f5d171c17ef1d36\",\"license\":\"agpl-3.0\",\"urls\":[\"bzz-raw://30120d3556895da3f517a6ce8954e4419944f9e07b7b4cd3d596df3e8e8103e3\",\"dweb:/ipfs/QmTXPN7Q8ULdJnJVGVTwLbw7Rvy5h17DfabKf8szvprQNb\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/Omnidex-incentives/lib/SafeMath.sol": {
				"SafeMath": {
					"abi": [],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"title": "Optimized overflow and underflow safe math operations",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/Omnidex-incentives/lib/SafeMath.sol\":275:1339  library SafeMath {\r... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  invalid\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/Omnidex-incentives/lib/SafeMath.sol\":275:1339  library SafeMath {\r... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220e7b2aca80657dc6b32519ffa34dd6d53dc362eef29802e3bbb1142e6c917e06164736f6c63430007050033\n}\n",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566023600b82828239805160001a607314601657fe5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220e7b2aca80657dc6b32519ffa34dd6d53dc362eef29802e3bbb1142e6c917e06164736f6c63430007050033",
							"opcodes": "PUSH1 0x56 PUSH1 0x23 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x16 JUMPI INVALID JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE7 0xB2 0xAC 0xA8 MOD JUMPI 0xDC PUSH12 0x32519FFA34DD6D53DC362EEF 0x29 DUP1 0x2E EXTCODESIZE 0xBB GT TIMESTAMP 0xE6 0xC9 OR 0xE0 PUSH2 0x6473 PUSH16 0x6C634300070500330000000000000000 ",
							"sourceMap": "275:1064:8:-:0;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220e7b2aca80657dc6b32519ffa34dd6d53dc362eef29802e3bbb1142e6c917e06164736f6c63430007050033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE7 0xB2 0xAC 0xA8 MOD JUMPI 0xDC PUSH12 0x32519FFA34DD6D53DC362EEF 0x29 DUP1 0x2E EXTCODESIZE 0xBB GT TIMESTAMP 0xE6 0xC9 OR 0xE0 PUSH2 0x6473 PUSH16 0x6C634300070500330000000000000000 ",
							"sourceMap": "275:1064:8:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"add(uint256,uint256)": "infinite",
								"div(uint256,uint256)": "infinite",
								"mul(uint256,uint256)": "infinite",
								"sub(uint256,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 275,
									"end": 1339,
									"name": "PUSH #[$]",
									"source": 8,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 275,
									"end": 1339,
									"name": "PUSH [$]",
									"source": 8,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 275,
									"end": 1339,
									"name": "PUSH",
									"source": 8,
									"value": "B"
								},
								{
									"begin": 275,
									"end": 1339,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 275,
									"end": 1339,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 275,
									"end": 1339,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 275,
									"end": 1339,
									"name": "CODECOPY",
									"source": 8
								},
								{
									"begin": 275,
									"end": 1339,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 275,
									"end": 1339,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 275,
									"end": 1339,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 275,
									"end": 1339,
									"name": "BYTE",
									"source": 8
								},
								{
									"begin": 275,
									"end": 1339,
									"name": "PUSH",
									"source": 8,
									"value": "73"
								},
								{
									"begin": 275,
									"end": 1339,
									"name": "EQ",
									"source": 8
								},
								{
									"begin": 275,
									"end": 1339,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 275,
									"end": 1339,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 275,
									"end": 1339,
									"name": "INVALID",
									"source": 8
								},
								{
									"begin": 275,
									"end": 1339,
									"name": "tag",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 275,
									"end": 1339,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 275,
									"end": 1339,
									"name": "ADDRESS",
									"source": 8
								},
								{
									"begin": 275,
									"end": 1339,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 275,
									"end": 1339,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 275,
									"end": 1339,
									"name": "PUSH",
									"source": 8,
									"value": "73"
								},
								{
									"begin": 275,
									"end": 1339,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 275,
									"end": 1339,
									"name": "MSTORE8",
									"source": 8
								},
								{
									"begin": 275,
									"end": 1339,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 275,
									"end": 1339,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 275,
									"end": 1339,
									"name": "RETURN",
									"source": 8
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220e7b2aca80657dc6b32519ffa34dd6d53dc362eef29802e3bbb1142e6c917e06164736f6c63430007050033",
									".code": [
										{
											"begin": 275,
											"end": 1339,
											"name": "PUSHDEPLOYADDRESS",
											"source": 8
										},
										{
											"begin": 275,
											"end": 1339,
											"name": "ADDRESS",
											"source": 8
										},
										{
											"begin": 275,
											"end": 1339,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 275,
											"end": 1339,
											"name": "PUSH",
											"source": 8,
											"value": "80"
										},
										{
											"begin": 275,
											"end": 1339,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 275,
											"end": 1339,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 275,
											"end": 1339,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 275,
											"end": 1339,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 275,
											"end": 1339,
											"name": "REVERT",
											"source": 8
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.7.5+commit.eb77ed08\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"title\":\"Optimized overflow and underflow safe math operations\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"Contains methods for doing math operations that revert on overflow or underflow for minimal gas cost inspired by uniswap V3\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Omnidex-incentives/lib/SafeMath.sol\":\"SafeMath\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/Omnidex-incentives/lib/SafeMath.sol\":{\"keccak256\":\"0x23218dd12c40acbd9c7c6f799d20dd84c88e1262583e25465f1413ed8c5d67d5\",\"license\":\"agpl-3.0\",\"urls\":[\"bzz-raw://4896e02c7ad212eb804e1ad03a711f964e04eb9b7d6c0024a4cd26b29adc0a1a\",\"dweb:/ipfs/QmamjuX7iGUgpGCgnsPnUsfFMG751kBzrnB2gZFP1tkvxL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"notice": "Contains methods for doing math operations that revert on overflow or underflow for minimal gas cost inspired by uniswap V3",
						"version": 1
					}
				}
			},
			"contracts/Omnidex-incentives/proposals/TestConfig.sol": {
				"TestConfig": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_reserves",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_myoTokenImplementations",
									"type": "address"
								}
							],
							"name": "executeChange",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "executeFixed",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/Omnidex-incentives/proposals/TestConfig.sol\":908:1955  contract TestConfig {\r... */\n  mstore(0x40, 0x80)\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/Omnidex-incentives/proposals/TestConfig.sol\":908:1955  contract TestConfig {\r... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x027eca31\n      eq\n      tag_3\n      jumpi\n      dup1\n      0xeca98adb\n      eq\n      tag_4\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"contracts/Omnidex-incentives/proposals/TestConfig.sol\":1411:1651  function executeFixed() external  {\r... */\n    tag_3:\n      tag_5\n      tag_6\n      jump\t// in\n    tag_5:\n      stop\n        /* \"contracts/Omnidex-incentives/proposals/TestConfig.sol\":1657:1952  function executeChange (address _reserves, address _myoTokenImplementations) external  {\r... */\n    tag_4:\n      tag_5\n      tag_8\n      calldatasize\n      0x04\n      tag_9\n      jump\t// in\n    tag_8:\n      tag_10\n      jump\t// in\n        /* \"contracts/Omnidex-incentives/proposals/TestConfig.sol\":1411:1651  function executeFixed() external  {\r... */\n    tag_6:\n        /* \"contracts/Omnidex-incentives/proposals/TestConfig.sol\":1579:1645  poolConfigurator.updateOToken(myreserves, myoTokenImplementations) */\n      mload(0x40)\n      shl(0xe1, 0x0971d70b)\n      dup2\n      mstore\n        /* \"contracts/Omnidex-incentives/proposals/TestConfig.sol\":1150:1192  0x2F75fEDA7423D8B85988d9545428d00f3213CF00 */\n      0x2f75feda7423d8b85988d9545428d00f3213cf00\n      swap1\n      dup2\n      swap1\n        /* \"contracts/Omnidex-incentives/proposals/TestConfig.sol\":1579:1608  poolConfigurator.updateOToken */\n      0x12e3ae16\n      swap1\n        /* \"contracts/Omnidex-incentives/proposals/TestConfig.sol\":1579:1645  poolConfigurator.updateOToken(myreserves, myoTokenImplementations) */\n      tag_12\n      swap1\n        /* \"contracts/Omnidex-incentives/proposals/TestConfig.sol\":1272:1314  0x818ec0A7Fe18Ff94269904fCED6AE3DaE6d6dC0b */\n      0x818ec0a7fe18ff94269904fced6ae3dae6d6dc0b\n      swap1\n        /* \"contracts/Omnidex-incentives/proposals/TestConfig.sol\":1362:1404  0x63D03492cD26c0C1f73a563f7eaB79b52334852A */\n      0x63d03492cd26c0c1f73a563f7eab79b52334852a\n      swap1\n        /* \"contracts/Omnidex-incentives/proposals/TestConfig.sol\":1579:1645  poolConfigurator.updateOToken(myreserves, myoTokenImplementations) */\n      0x04\n      add\n      tag_13\n      jump\t// in\n    tag_12:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_14\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_14:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_16\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_16:\n      pop\n      pop\n      pop\n      pop\n        /* \"contracts/Omnidex-incentives/proposals/TestConfig.sol\":1411:1651  function executeFixed() external  {\r... */\n      pop\n      jump\t// out\n        /* \"contracts/Omnidex-incentives/proposals/TestConfig.sol\":1657:1952  function executeChange (address _reserves, address _myoTokenImplementations) external  {\r... */\n    tag_10:\n        /* \"contracts/Omnidex-incentives/proposals/TestConfig.sol\":1878:1944  poolConfigurator.updateOToken(_reserves, _myoTokenImplementations) */\n      mload(0x40)\n      shl(0xe1, 0x0971d70b)\n      dup2\n      mstore\n        /* \"contracts/Omnidex-incentives/proposals/TestConfig.sol\":1150:1192  0x2F75fEDA7423D8B85988d9545428d00f3213CF00 */\n      0x2f75feda7423d8b85988d9545428d00f3213cf00\n      swap1\n      dup2\n      swap1\n        /* \"contracts/Omnidex-incentives/proposals/TestConfig.sol\":1878:1907  poolConfigurator.updateOToken */\n      0x12e3ae16\n      swap1\n        /* \"contracts/Omnidex-incentives/proposals/TestConfig.sol\":1878:1944  poolConfigurator.updateOToken(_reserves, _myoTokenImplementations) */\n      tag_18\n      swap1\n        /* \"contracts/Omnidex-incentives/proposals/TestConfig.sol\":1908:1917  _reserves */\n      dup7\n      swap1\n        /* \"contracts/Omnidex-incentives/proposals/TestConfig.sol\":1919:1943  _myoTokenImplementations */\n      dup7\n      swap1\n        /* \"contracts/Omnidex-incentives/proposals/TestConfig.sol\":1878:1944  poolConfigurator.updateOToken(_reserves, _myoTokenImplementations) */\n      0x04\n      add\n      tag_13\n      jump\t// in\n    tag_18:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_19\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_19:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_21\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_21:\n      pop\n      pop\n      pop\n      pop\n        /* \"contracts/Omnidex-incentives/proposals/TestConfig.sol\":1657:1952  function executeChange (address _reserves, address _myoTokenImplementations) external  {\r... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14:189   */\n    tag_23:\n        /* \"#utility.yul\":84:104   */\n      dup1\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":133:164   */\n      dup2\n      and\n        /* \"#utility.yul\":123:165   */\n      dup2\n      eq\n        /* \"#utility.yul\":113:115   */\n      tag_25\n      jumpi\n        /* \"#utility.yul\":179:180   */\n      0x00\n        /* \"#utility.yul\":176:177   */\n      dup1\n        /* \"#utility.yul\":169:181   */\n      revert\n        /* \"#utility.yul\":113:115   */\n    tag_25:\n        /* \"#utility.yul\":65:189   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":194:468   */\n    tag_9:\n      0x00\n      dup1\n        /* \"#utility.yul\":323:325   */\n      0x40\n        /* \"#utility.yul\":311:320   */\n      dup4\n        /* \"#utility.yul\":302:309   */\n      dup6\n        /* \"#utility.yul\":298:321   */\n      sub\n        /* \"#utility.yul\":294:326   */\n      slt\n        /* \"#utility.yul\":291:293   */\n      iszero\n      tag_27\n      jumpi\n        /* \"#utility.yul\":344:350   */\n      dup2\n        /* \"#utility.yul\":336:342   */\n      dup3\n        /* \"#utility.yul\":329:351   */\n      revert\n        /* \"#utility.yul\":291:293   */\n    tag_27:\n        /* \"#utility.yul\":372:403   */\n      tag_28\n        /* \"#utility.yul\":393:402   */\n      dup4\n        /* \"#utility.yul\":372:403   */\n      tag_23\n      jump\t// in\n    tag_28:\n        /* \"#utility.yul\":362:403   */\n      swap2\n      pop\n        /* \"#utility.yul\":422:462   */\n      tag_29\n        /* \"#utility.yul\":458:460   */\n      0x20\n        /* \"#utility.yul\":447:456   */\n      dup5\n        /* \"#utility.yul\":443:461   */\n      add\n        /* \"#utility.yul\":422:462   */\n      tag_23\n      jump\t// in\n    tag_29:\n        /* \"#utility.yul\":412:462   */\n      swap1\n      pop\n        /* \"#utility.yul\":281:468   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":473:777   */\n    tag_13:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":703:718   */\n      swap3\n      dup4\n      and\n        /* \"#utility.yul\":685:719   */\n      dup2\n      mstore\n        /* \"#utility.yul\":755:770   */\n      swap2\n      and\n        /* \"#utility.yul\":750:752   */\n      0x20\n        /* \"#utility.yul\":735:753   */\n      dup3\n      add\n        /* \"#utility.yul\":728:771   */\n      mstore\n        /* \"#utility.yul\":635:637   */\n      0x40\n        /* \"#utility.yul\":620:638   */\n      add\n      swap1\n        /* \"#utility.yul\":602:777   */\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220699c24c1fe2c8e5687582a3cf07a08e2c61ae1c0b8bff212c5ba71f25d1e331164736f6c63430007050033\n}\n",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50610200806100206000396000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c8063027eca311461003b578063eca98adb14610045575b600080fd5b610043610058565b005b61004361005336600461017e565b6100f0565b604051630971d70b60e11b8152732f75feda7423d8b85988d9545428d00f3213cf009081906312e3ae16906100bb9073818ec0a7fe18ff94269904fced6ae3dae6d6dc0b907363d03492cd26c0c1f73a563f7eab79b52334852a906004016101b0565b600060405180830381600087803b1580156100d557600080fd5b505af11580156100e9573d6000803e3d6000fd5b5050505050565b604051630971d70b60e11b8152732f75feda7423d8b85988d9545428d00f3213cf009081906312e3ae169061012b90869086906004016101b0565b600060405180830381600087803b15801561014557600080fd5b505af1158015610159573d6000803e3d6000fd5b50505050505050565b80356001600160a01b038116811461017957600080fd5b919050565b60008060408385031215610190578182fd5b61019983610162565b91506101a760208401610162565b90509250929050565b6001600160a01b039283168152911660208201526040019056fea2646970667358221220699c24c1fe2c8e5687582a3cf07a08e2c61ae1c0b8bff212c5ba71f25d1e331164736f6c63430007050033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x200 DUP1 PUSH2 0x20 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x36 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x27ECA31 EQ PUSH2 0x3B JUMPI DUP1 PUSH4 0xECA98ADB EQ PUSH2 0x45 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x43 PUSH2 0x58 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x43 PUSH2 0x53 CALLDATASIZE PUSH1 0x4 PUSH2 0x17E JUMP JUMPDEST PUSH2 0xF0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x971D70B PUSH1 0xE1 SHL DUP2 MSTORE PUSH20 0x2F75FEDA7423D8B85988D9545428D00F3213CF00 SWAP1 DUP2 SWAP1 PUSH4 0x12E3AE16 SWAP1 PUSH2 0xBB SWAP1 PUSH20 0x818EC0A7FE18FF94269904FCED6AE3DAE6D6DC0B SWAP1 PUSH20 0x63D03492CD26C0C1F73A563F7EAB79B52334852A SWAP1 PUSH1 0x4 ADD PUSH2 0x1B0 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xD5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xE9 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x971D70B PUSH1 0xE1 SHL DUP2 MSTORE PUSH20 0x2F75FEDA7423D8B85988D9545428D00F3213CF00 SWAP1 DUP2 SWAP1 PUSH4 0x12E3AE16 SWAP1 PUSH2 0x12B SWAP1 DUP7 SWAP1 DUP7 SWAP1 PUSH1 0x4 ADD PUSH2 0x1B0 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x145 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x159 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x179 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x190 JUMPI DUP2 DUP3 REVERT JUMPDEST PUSH2 0x199 DUP4 PUSH2 0x162 JUMP JUMPDEST SWAP2 POP PUSH2 0x1A7 PUSH1 0x20 DUP5 ADD PUSH2 0x162 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND DUP2 MSTORE SWAP2 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 ADD SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH10 0x9C24C1FE2C8E5687582A EXTCODECOPY CREATE PUSH27 0x8E2C61AE1C0B8BFF212C5BA71F25D1E331164736F6C6343000705 STOP CALLER ",
							"sourceMap": "908:1047:9:-:0;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:779:12",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:12",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "65:124:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "75:29:12",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "97:6:12"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "84:12:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "84:20:12"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "75:5:12"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "167:16:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "176:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "179:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "169:6:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "169:12:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "169:12:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "126:5:12"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "137:5:12"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "152:3:12",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "157:1:12",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nodeType": "YulIdentifier",
																									"src": "148:3:12"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "148:11:12"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "161:1:12",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nodeType": "YulIdentifier",
																							"src": "144:3:12"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "144:19:12"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "133:3:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "133:31:12"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "123:2:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "123:42:12"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "116:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "116:50:12"
															},
															"nodeType": "YulIf",
															"src": "113:2:12"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "44:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "55:5:12",
														"type": ""
													}
												],
												"src": "14:175:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "281:187:12",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "327:26:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "336:6:12"
																				},
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "344:6:12"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "329:6:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "329:22:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "329:22:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "302:7:12"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "311:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "298:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "298:23:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "323:2:12",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "294:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "294:32:12"
															},
															"nodeType": "YulIf",
															"src": "291:2:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "362:41:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "393:9:12"
																	}
																],
																"functionName": {
																	"name": "abi_decode_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "372:20:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "372:31:12"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "362:6:12"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "412:50:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "447:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "458:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "443:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "443:18:12"
																	}
																],
																"functionName": {
																	"name": "abi_decode_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "422:20:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "422:40:12"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "412:6:12"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "239:9:12",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "250:7:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "262:6:12",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "270:6:12",
														"type": ""
													}
												],
												"src": "194:274:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "602:175:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "612:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "624:9:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "635:2:12",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "620:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "620:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "612:4:12"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "647:29:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "665:3:12",
																				"type": "",
																				"value": "160"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "670:1:12",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "661:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "661:11:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "674:1:12",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "657:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "657:19:12"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "651:2:12",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "692:9:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "707:6:12"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "715:2:12"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "703:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "703:15:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "685:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "685:34:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "685:34:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "739:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "750:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "735:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "735:18:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nodeType": "YulIdentifier",
																				"src": "759:6:12"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "767:2:12"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "755:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "755:15:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "728:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "728:43:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "728:43:12"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "563:9:12",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "574:6:12",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "582:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "593:4:12",
														"type": ""
													}
												],
												"src": "473:304:12"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_decode_t_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(value0, value0) }\n        value0 := abi_decode_t_address(headStart)\n        value1 := abi_decode_t_address(add(headStart, 32))\n    }\n    function abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n    }\n}",
									"id": 12,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106100365760003560e01c8063027eca311461003b578063eca98adb14610045575b600080fd5b610043610058565b005b61004361005336600461017e565b6100f0565b604051630971d70b60e11b8152732f75feda7423d8b85988d9545428d00f3213cf009081906312e3ae16906100bb9073818ec0a7fe18ff94269904fced6ae3dae6d6dc0b907363d03492cd26c0c1f73a563f7eab79b52334852a906004016101b0565b600060405180830381600087803b1580156100d557600080fd5b505af11580156100e9573d6000803e3d6000fd5b5050505050565b604051630971d70b60e11b8152732f75feda7423d8b85988d9545428d00f3213cf009081906312e3ae169061012b90869086906004016101b0565b600060405180830381600087803b15801561014557600080fd5b505af1158015610159573d6000803e3d6000fd5b50505050505050565b80356001600160a01b038116811461017957600080fd5b919050565b60008060408385031215610190578182fd5b61019983610162565b91506101a760208401610162565b90509250929050565b6001600160a01b039283168152911660208201526040019056fea2646970667358221220699c24c1fe2c8e5687582a3cf07a08e2c61ae1c0b8bff212c5ba71f25d1e331164736f6c63430007050033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x36 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x27ECA31 EQ PUSH2 0x3B JUMPI DUP1 PUSH4 0xECA98ADB EQ PUSH2 0x45 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x43 PUSH2 0x58 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x43 PUSH2 0x53 CALLDATASIZE PUSH1 0x4 PUSH2 0x17E JUMP JUMPDEST PUSH2 0xF0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x971D70B PUSH1 0xE1 SHL DUP2 MSTORE PUSH20 0x2F75FEDA7423D8B85988D9545428D00F3213CF00 SWAP1 DUP2 SWAP1 PUSH4 0x12E3AE16 SWAP1 PUSH2 0xBB SWAP1 PUSH20 0x818EC0A7FE18FF94269904FCED6AE3DAE6D6DC0B SWAP1 PUSH20 0x63D03492CD26C0C1F73A563F7EAB79B52334852A SWAP1 PUSH1 0x4 ADD PUSH2 0x1B0 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xD5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xE9 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x971D70B PUSH1 0xE1 SHL DUP2 MSTORE PUSH20 0x2F75FEDA7423D8B85988D9545428D00F3213CF00 SWAP1 DUP2 SWAP1 PUSH4 0x12E3AE16 SWAP1 PUSH2 0x12B SWAP1 DUP7 SWAP1 DUP7 SWAP1 PUSH1 0x4 ADD PUSH2 0x1B0 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x145 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x159 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x179 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x190 JUMPI DUP2 DUP3 REVERT JUMPDEST PUSH2 0x199 DUP4 PUSH2 0x162 JUMP JUMPDEST SWAP2 POP PUSH2 0x1A7 PUSH1 0x20 DUP5 ADD PUSH2 0x162 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND DUP2 MSTORE SWAP2 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 ADD SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH10 0x9C24C1FE2C8E5687582A EXTCODECOPY CREATE PUSH27 0x8E2C61AE1C0B8BFF212C5BA71F25D1E331164736F6C6343000705 STOP CALLER ",
							"sourceMap": "908:1047:9:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1411:240;;;:::i;:::-;;1657:295;;;;;;:::i;:::-;;:::i;1411:240::-;1579:66;;-1:-1:-1;;;1579:66:9;;1150:42;;;;1579:29;;:66;;1272:42;;1362;;1579:66;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1411:240;:::o;1657:295::-;1878:66;;-1:-1:-1;;;1878:66:9;;1150:42;;;;1878:29;;:66;;1908:9;;1919:24;;1878:66;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1657:295;;;:::o;14:175:12:-;84:20;;-1:-1:-1;;;;;133:31:12;;123:42;;113:2;;179:1;176;169:12;113:2;65:124;;;:::o;194:274::-;;;323:2;311:9;302:7;298:23;294:32;291:2;;;344:6;336;329:22;291:2;372:31;393:9;372:31;:::i;:::-;362:41;;422:40;458:2;447:9;443:18;422:40;:::i;:::-;412:50;;281:187;;;;;:::o;473:304::-;-1:-1:-1;;;;;703:15:12;;;685:34;;755:15;;750:2;735:18;;728:43;635:2;620:18;;602:175::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "102400",
								"executionCost": "147",
								"totalCost": "102547"
							},
							"external": {
								"executeChange(address,address)": "infinite",
								"executeFixed()": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 908,
									"end": 1955,
									"name": "PUSH",
									"source": 9,
									"value": "80"
								},
								{
									"begin": 908,
									"end": 1955,
									"name": "PUSH",
									"source": 9,
									"value": "40"
								},
								{
									"begin": 908,
									"end": 1955,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 908,
									"end": 1955,
									"name": "CALLVALUE",
									"source": 9
								},
								{
									"begin": 908,
									"end": 1955,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 908,
									"end": 1955,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 908,
									"end": 1955,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 908,
									"end": 1955,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 908,
									"end": 1955,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 908,
									"end": 1955,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 908,
									"end": 1955,
									"name": "REVERT",
									"source": 9
								},
								{
									"begin": 908,
									"end": 1955,
									"name": "tag",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 908,
									"end": 1955,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 908,
									"end": 1955,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 908,
									"end": 1955,
									"name": "PUSH #[$]",
									"source": 9,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 908,
									"end": 1955,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 908,
									"end": 1955,
									"name": "PUSH [$]",
									"source": 9,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 908,
									"end": 1955,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 908,
									"end": 1955,
									"name": "CODECOPY",
									"source": 9
								},
								{
									"begin": 908,
									"end": 1955,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 908,
									"end": 1955,
									"name": "RETURN",
									"source": 9
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220699c24c1fe2c8e5687582a3cf07a08e2c61ae1c0b8bff212c5ba71f25d1e331164736f6c63430007050033",
									".code": [
										{
											"begin": 908,
											"end": 1955,
											"name": "PUSH",
											"source": 9,
											"value": "80"
										},
										{
											"begin": 908,
											"end": 1955,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 908,
											"end": 1955,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 908,
											"end": 1955,
											"name": "CALLVALUE",
											"source": 9
										},
										{
											"begin": 908,
											"end": 1955,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 908,
											"end": 1955,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 908,
											"end": 1955,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 908,
											"end": 1955,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 908,
											"end": 1955,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 908,
											"end": 1955,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 908,
											"end": 1955,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 908,
											"end": 1955,
											"name": "tag",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 908,
											"end": 1955,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 908,
											"end": 1955,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 908,
											"end": 1955,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 908,
											"end": 1955,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 908,
											"end": 1955,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 908,
											"end": 1955,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 908,
											"end": 1955,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 908,
											"end": 1955,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 908,
											"end": 1955,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 908,
											"end": 1955,
											"name": "PUSH",
											"source": 9,
											"value": "E0"
										},
										{
											"begin": 908,
											"end": 1955,
											"name": "SHR",
											"source": 9
										},
										{
											"begin": 908,
											"end": 1955,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 908,
											"end": 1955,
											"name": "PUSH",
											"source": 9,
											"value": "27ECA31"
										},
										{
											"begin": 908,
											"end": 1955,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 908,
											"end": 1955,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "3"
										},
										{
											"begin": 908,
											"end": 1955,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 908,
											"end": 1955,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 908,
											"end": 1955,
											"name": "PUSH",
											"source": 9,
											"value": "ECA98ADB"
										},
										{
											"begin": 908,
											"end": 1955,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 908,
											"end": 1955,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 908,
											"end": 1955,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 908,
											"end": 1955,
											"name": "tag",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 908,
											"end": 1955,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 908,
											"end": 1955,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 908,
											"end": 1955,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 908,
											"end": 1955,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 1411,
											"end": 1651,
											"name": "tag",
											"source": 9,
											"value": "3"
										},
										{
											"begin": 1411,
											"end": 1651,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1411,
											"end": 1651,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "5"
										},
										{
											"begin": 1411,
											"end": 1651,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "6"
										},
										{
											"begin": 1411,
											"end": 1651,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 1411,
											"end": 1651,
											"name": "tag",
											"source": 9,
											"value": "5"
										},
										{
											"begin": 1411,
											"end": 1651,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1411,
											"end": 1651,
											"name": "STOP",
											"source": 9
										},
										{
											"begin": 1657,
											"end": 1952,
											"name": "tag",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 1657,
											"end": 1952,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1657,
											"end": 1952,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "5"
										},
										{
											"begin": 1657,
											"end": 1952,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "8"
										},
										{
											"begin": 1657,
											"end": 1952,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 1657,
											"end": 1952,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 1657,
											"end": 1952,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "9"
										},
										{
											"begin": 1657,
											"end": 1952,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 1657,
											"end": 1952,
											"name": "tag",
											"source": 9,
											"value": "8"
										},
										{
											"begin": 1657,
											"end": 1952,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1657,
											"end": 1952,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "10"
										},
										{
											"begin": 1657,
											"end": 1952,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 1411,
											"end": 1651,
											"name": "tag",
											"source": 9,
											"value": "6"
										},
										{
											"begin": 1411,
											"end": 1651,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1579,
											"end": 1645,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1579,
											"end": 1645,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "971D70B"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1579,
											"end": 1645,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1579,
											"end": 1645,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1150,
											"end": 1192,
											"name": "PUSH",
											"source": 9,
											"value": "2F75FEDA7423D8B85988D9545428D00F3213CF00"
										},
										{
											"begin": 1150,
											"end": 1192,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1150,
											"end": 1192,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1150,
											"end": 1192,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1579,
											"end": 1608,
											"name": "PUSH",
											"source": 9,
											"value": "12E3AE16"
										},
										{
											"begin": 1579,
											"end": 1608,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1579,
											"end": 1645,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "12"
										},
										{
											"begin": 1579,
											"end": 1645,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1272,
											"end": 1314,
											"name": "PUSH",
											"source": 9,
											"value": "818EC0A7FE18FF94269904FCED6AE3DAE6D6DC0B"
										},
										{
											"begin": 1272,
											"end": 1314,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1362,
											"end": 1404,
											"name": "PUSH",
											"source": 9,
											"value": "63D03492CD26C0C1F73A563F7EAB79B52334852A"
										},
										{
											"begin": 1362,
											"end": 1404,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1579,
											"end": 1645,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 1579,
											"end": 1645,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1579,
											"end": 1645,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "13"
										},
										{
											"begin": 1579,
											"end": 1645,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 1579,
											"end": 1645,
											"name": "tag",
											"source": 9,
											"value": "12"
										},
										{
											"begin": 1579,
											"end": 1645,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1579,
											"end": 1645,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1579,
											"end": 1645,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1579,
											"end": 1645,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1579,
											"end": 1645,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1579,
											"end": 1645,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 1579,
											"end": 1645,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 1579,
											"end": 1645,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1579,
											"end": 1645,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1579,
											"end": 1645,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 1579,
											"end": 1645,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1579,
											"end": 1645,
											"name": "EXTCODESIZE",
											"source": 9
										},
										{
											"begin": 1579,
											"end": 1645,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 1579,
											"end": 1645,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1579,
											"end": 1645,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 1579,
											"end": 1645,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "14"
										},
										{
											"begin": 1579,
											"end": 1645,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1579,
											"end": 1645,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1579,
											"end": 1645,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1579,
											"end": 1645,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 1579,
											"end": 1645,
											"name": "tag",
											"source": 9,
											"value": "14"
										},
										{
											"begin": 1579,
											"end": 1645,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1579,
											"end": 1645,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1579,
											"end": 1645,
											"name": "GAS",
											"source": 9
										},
										{
											"begin": 1579,
											"end": 1645,
											"name": "CALL",
											"source": 9
										},
										{
											"begin": 1579,
											"end": 1645,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 1579,
											"end": 1645,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1579,
											"end": 1645,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 1579,
											"end": 1645,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "16"
										},
										{
											"begin": 1579,
											"end": 1645,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1579,
											"end": 1645,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 1579,
											"end": 1645,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1579,
											"end": 1645,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1579,
											"end": 1645,
											"name": "RETURNDATACOPY",
											"source": 9
										},
										{
											"begin": 1579,
											"end": 1645,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 1579,
											"end": 1645,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1579,
											"end": 1645,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 1579,
											"end": 1645,
											"name": "tag",
											"source": 9,
											"value": "16"
										},
										{
											"begin": 1579,
											"end": 1645,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1579,
											"end": 1645,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1579,
											"end": 1645,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1579,
											"end": 1645,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1579,
											"end": 1645,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1411,
											"end": 1651,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1411,
											"end": 1651,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 1657,
											"end": 1952,
											"name": "tag",
											"source": 9,
											"value": "10"
										},
										{
											"begin": 1657,
											"end": 1952,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1878,
											"end": 1944,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1878,
											"end": 1944,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "971D70B"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1878,
											"end": 1944,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1878,
											"end": 1944,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1150,
											"end": 1192,
											"name": "PUSH",
											"source": 9,
											"value": "2F75FEDA7423D8B85988D9545428D00F3213CF00"
										},
										{
											"begin": 1150,
											"end": 1192,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1150,
											"end": 1192,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1150,
											"end": 1192,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1878,
											"end": 1907,
											"name": "PUSH",
											"source": 9,
											"value": "12E3AE16"
										},
										{
											"begin": 1878,
											"end": 1907,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1878,
											"end": 1944,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "18"
										},
										{
											"begin": 1878,
											"end": 1944,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1908,
											"end": 1917,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 1908,
											"end": 1917,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1919,
											"end": 1943,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 1919,
											"end": 1943,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1878,
											"end": 1944,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 1878,
											"end": 1944,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1878,
											"end": 1944,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "13"
										},
										{
											"begin": 1878,
											"end": 1944,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 1878,
											"end": 1944,
											"name": "tag",
											"source": 9,
											"value": "18"
										},
										{
											"begin": 1878,
											"end": 1944,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1878,
											"end": 1944,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1878,
											"end": 1944,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1878,
											"end": 1944,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1878,
											"end": 1944,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1878,
											"end": 1944,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 1878,
											"end": 1944,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 1878,
											"end": 1944,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1878,
											"end": 1944,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1878,
											"end": 1944,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 1878,
											"end": 1944,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1878,
											"end": 1944,
											"name": "EXTCODESIZE",
											"source": 9
										},
										{
											"begin": 1878,
											"end": 1944,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 1878,
											"end": 1944,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1878,
											"end": 1944,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 1878,
											"end": 1944,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "19"
										},
										{
											"begin": 1878,
											"end": 1944,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1878,
											"end": 1944,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1878,
											"end": 1944,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1878,
											"end": 1944,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 1878,
											"end": 1944,
											"name": "tag",
											"source": 9,
											"value": "19"
										},
										{
											"begin": 1878,
											"end": 1944,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1878,
											"end": 1944,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1878,
											"end": 1944,
											"name": "GAS",
											"source": 9
										},
										{
											"begin": 1878,
											"end": 1944,
											"name": "CALL",
											"source": 9
										},
										{
											"begin": 1878,
											"end": 1944,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 1878,
											"end": 1944,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1878,
											"end": 1944,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 1878,
											"end": 1944,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "21"
										},
										{
											"begin": 1878,
											"end": 1944,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1878,
											"end": 1944,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 1878,
											"end": 1944,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1878,
											"end": 1944,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1878,
											"end": 1944,
											"name": "RETURNDATACOPY",
											"source": 9
										},
										{
											"begin": 1878,
											"end": 1944,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 1878,
											"end": 1944,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1878,
											"end": 1944,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 1878,
											"end": 1944,
											"name": "tag",
											"source": 9,
											"value": "21"
										},
										{
											"begin": 1878,
											"end": 1944,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1878,
											"end": 1944,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1878,
											"end": 1944,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1878,
											"end": 1944,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1878,
											"end": 1944,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1657,
											"end": 1952,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1657,
											"end": 1952,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1657,
											"end": 1952,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1657,
											"end": 1952,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 14,
											"end": 189,
											"name": "tag",
											"source": 12,
											"value": "23"
										},
										{
											"begin": 14,
											"end": 189,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 84,
											"end": 104,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 84,
											"end": 104,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 133,
											"end": 164,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 133,
											"end": 164,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 123,
											"end": 165,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 123,
											"end": 165,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 113,
											"end": 115,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "25"
										},
										{
											"begin": 113,
											"end": 115,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 179,
											"end": 180,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 176,
											"end": 177,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 169,
											"end": 181,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 113,
											"end": 115,
											"name": "tag",
											"source": 12,
											"value": "25"
										},
										{
											"begin": 113,
											"end": 115,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 65,
											"end": 189,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 65,
											"end": 189,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 65,
											"end": 189,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 65,
											"end": 189,
											"name": "JUMP",
											"source": 12,
											"value": "[out]"
										},
										{
											"begin": 194,
											"end": 468,
											"name": "tag",
											"source": 12,
											"value": "9"
										},
										{
											"begin": 194,
											"end": 468,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 194,
											"end": 468,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 468,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 323,
											"end": 325,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 311,
											"end": 320,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 302,
											"end": 309,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 298,
											"end": 321,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 294,
											"end": 326,
											"name": "SLT",
											"source": 12
										},
										{
											"begin": 291,
											"end": 293,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 291,
											"end": 293,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "27"
										},
										{
											"begin": 291,
											"end": 293,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 344,
											"end": 350,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 336,
											"end": 342,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 329,
											"end": 351,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 291,
											"end": 293,
											"name": "tag",
											"source": 12,
											"value": "27"
										},
										{
											"begin": 291,
											"end": 293,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 372,
											"end": 403,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "28"
										},
										{
											"begin": 393,
											"end": 402,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 372,
											"end": 403,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "23"
										},
										{
											"begin": 372,
											"end": 403,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 372,
											"end": 403,
											"name": "tag",
											"source": 12,
											"value": "28"
										},
										{
											"begin": 372,
											"end": 403,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 362,
											"end": 403,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 362,
											"end": 403,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 422,
											"end": 462,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "29"
										},
										{
											"begin": 458,
											"end": 460,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 447,
											"end": 456,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 443,
											"end": 461,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 422,
											"end": 462,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "23"
										},
										{
											"begin": 422,
											"end": 462,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 422,
											"end": 462,
											"name": "tag",
											"source": 12,
											"value": "29"
										},
										{
											"begin": 422,
											"end": 462,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 412,
											"end": 462,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 412,
											"end": 462,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 281,
											"end": 468,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 281,
											"end": 468,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 281,
											"end": 468,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 281,
											"end": 468,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 281,
											"end": 468,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 281,
											"end": 468,
											"name": "JUMP",
											"source": 12,
											"value": "[out]"
										},
										{
											"begin": 473,
											"end": 777,
											"name": "tag",
											"source": 12,
											"value": "13"
										},
										{
											"begin": 473,
											"end": 777,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 703,
											"end": 718,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 703,
											"end": 718,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 703,
											"end": 718,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 685,
											"end": 719,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 685,
											"end": 719,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 755,
											"end": 770,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 755,
											"end": 770,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 750,
											"end": 752,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 735,
											"end": 753,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 735,
											"end": 753,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 728,
											"end": 771,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 635,
											"end": 637,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 620,
											"end": 638,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 620,
											"end": 638,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 602,
											"end": 777,
											"name": "JUMP",
											"source": 12,
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"executeChange(address,address)": "eca98adb",
							"executeFixed()": "027eca31"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.7.5+commit.eb77ed08\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_reserves\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_myoTokenImplementations\",\"type\":\"address\"}],\"name\":\"executeChange\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"executeFixed\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Omnidex-incentives/proposals/TestConfig.sol\":\"TestConfig\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@aave/aave-stake/contracts/interfaces/IERC20.sol\":{\"keccak256\":\"0x150506e2e40dc3cea841fe0ade6021b9b0d4e09f7616d312bc7c1300a2d7a94f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d3dbf854f310f20a48cd727e1680067f4d911a4c6d220886935736297a0f89cb\",\"dweb:/ipfs/QmU8xN2AYrURFgmB4hLFLamc7aJe6VD5qkUEcfdrKPcz9C\"]},\"contracts/Omnidex-incentives/interfaces/ILendingPoolAddressesProvider.sol\":{\"keccak256\":\"0x805ab39fec661fe4a7b100f657bd0be1599a2bec05da3a0ab03f0d6eafe47c24\",\"license\":\"agpl-3.0\",\"urls\":[\"bzz-raw://8cb6a3db794531cd5f7bb0408b6f9b2358ab8e526878a1442e23d91b5314113d\",\"dweb:/ipfs/QmP3AngoDhjztkQQ1FsiCC4w4pj5H8RTy4rYkLfMSwL1FK\"]},\"contracts/Omnidex-incentives/interfaces/ILendingPoolConfigurator.sol\":{\"keccak256\":\"0x9f93cab78339ab46e06e8769a8b703153d940713c036a0fa762942de98fa8776\",\"license\":\"agpl-3.0\",\"urls\":[\"bzz-raw://6798937511de2ec730ff830ff88b61c9758f7436d119b5735b550d4185700311\",\"dweb:/ipfs/QmP2LPwb2iwSSZUdSYbnASACNVUxh9XrkHgzPPP8uwEBJL\"]},\"contracts/Omnidex-incentives/interfaces/ILendingPoolData.sol\":{\"keccak256\":\"0xa2dd5f64bc25dff88e130e0f99ebe24c743f308849c8fa487bad26eef278ef6c\",\"license\":\"agpl-3.0\",\"urls\":[\"bzz-raw://20008df765afa056c3b54e00e1321791a7a2c6d2dbf8d21e146afdbe73f8cfd1\",\"dweb:/ipfs/QmXtN47mpdSYQb64YCQDkX8r5QFg5N9Mq5SMZ828fJPDhu\"]},\"contracts/Omnidex-incentives/interfaces/IOTokenDetailed.sol\":{\"keccak256\":\"0x67a143830d137853f16cff5a41f1232c008c4f22764f32ade20f7734654e29ca\",\"license\":\"agpl-3.0\",\"urls\":[\"bzz-raw://ea21a986420604e428b4c0ba188ca978b62f69ef1b75c336ede4074cb68f25d8\",\"dweb:/ipfs/QmY6wt5U37obDdU9Dq1sGPzDbBjZzY7Ju2WNs8KbQmzgLN\"]},\"contracts/Omnidex-incentives/interfaces/IOmnidexDistributionManager.sol\":{\"keccak256\":\"0xabf5e1d31a3567f017adf41a4384f0c7a6fce4e81441a7b42fb565f92256a87d\",\"license\":\"agpl-3.0\",\"urls\":[\"bzz-raw://a2aab2cd0efc27da9ced088fcb5534b62c4ebd436688778af86949e706d22fef\",\"dweb:/ipfs/QmPAQiLYLB7QXMKaHjSwWKaK8mN8pgBRteJUqg5ptKebZE\"]},\"contracts/Omnidex-incentives/interfaces/IOmnidexIncentivesController.sol\":{\"keccak256\":\"0x8615452507c06e118914d5bdbd7136745f29030f2bd90fb80101eda042138d84\",\"license\":\"agpl-3.0\",\"urls\":[\"bzz-raw://632c6c2423e567411001205cb0838ed6ccd5a6d36b9f0e27e7262cc79a081e83\",\"dweb:/ipfs/QmSM9PrZzpBZ9Ae6tcDPWoUNztLNrtVpYTCb83bFNjJP4A\"]},\"contracts/Omnidex-incentives/lib/DistributionTypes.sol\":{\"keccak256\":\"0xbb24d51b39ff627c1d2dbbaa5063ae7f1d515ec3980cc6ed8f5d171c17ef1d36\",\"license\":\"agpl-3.0\",\"urls\":[\"bzz-raw://30120d3556895da3f517a6ce8954e4419944f9e07b7b4cd3d596df3e8e8103e3\",\"dweb:/ipfs/QmTXPN7Q8ULdJnJVGVTwLbw7Rvy5h17DfabKf8szvprQNb\"]},\"contracts/Omnidex-incentives/lib/SafeMath.sol\":{\"keccak256\":\"0x23218dd12c40acbd9c7c6f799d20dd84c88e1262583e25465f1413ed8c5d67d5\",\"license\":\"agpl-3.0\",\"urls\":[\"bzz-raw://4896e02c7ad212eb804e1ad03a711f964e04eb9b7d6c0024a4cd26b29adc0a1a\",\"dweb:/ipfs/QmamjuX7iGUgpGCgnsPnUsfFMG751kBzrnB2gZFP1tkvxL\"]},\"contracts/Omnidex-incentives/proposals/TestConfig.sol\":{\"keccak256\":\"0xe49488af71bc0766ce8f7782ffbef30fa029bb081d116c8ae18a806eb8dcc3fc\",\"license\":\"AGPL-3.0\",\"urls\":[\"bzz-raw://eae9fe28bc6a7ee58f7d3f6729d86dd33f555bba76299e517439cab5b892ed80\",\"dweb:/ipfs/QmX31LW15eM1dxj2nCLCJyZMJyeDo4VJWAcycjc1BW7E7i\"]},\"contracts/Omnidex-incentives/utils/DataTypes.sol\":{\"keccak256\":\"0xa64c1b776b13f3f6cc88fa0742ce15073026bb526be7f324dddbd2b221e67129\",\"license\":\"agpl-3.0\",\"urls\":[\"bzz-raw://f194c291658a18f69b8df0b1b2ddd08bbb621b821171700bf55f7586e65a6275\",\"dweb:/ipfs/QmddN7PHqyFk8ZCveEqqoUfAsQ9sToQYna56RqKRDAFAs2\"]},\"contracts/Omnidex-incentives/utils/PercentageMath.sol\":{\"keccak256\":\"0xd2fe1c41c917b187512b0398c5a3b51d8fa0864b2d7dde5aa5c196f6e523ba33\",\"license\":\"agpl-3.0\",\"urls\":[\"bzz-raw://251ae54e3634306bd51f26e6554de2ea88fb1754472e01e1371aed4b7aee5fd1\",\"dweb:/ipfs/QmYTrJNx2LmBLwecPp9mcGeXYsVd8d49hUxgp5ESMN5Wi5\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/Omnidex-incentives/utils/DataTypes.sol": {
				"DataTypes": {
					"abi": [],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/Omnidex-incentives/utils/DataTypes.sol\":64:1576  library DataTypes {\r... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  invalid\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/Omnidex-incentives/utils/DataTypes.sol\":64:1576  library DataTypes {\r... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa264697066735822122089cd6e043f485badd6020854bb4bf946a88e108b527783d530aca5ff0f2df79264736f6c63430007050033\n}\n",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566023600b82828239805160001a607314601657fe5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122089cd6e043f485badd6020854bb4bf946a88e108b527783d530aca5ff0f2df79264736f6c63430007050033",
							"opcodes": "PUSH1 0x56 PUSH1 0x23 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x16 JUMPI INVALID JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP10 0xCD PUSH15 0x43F485BADD6020854BB4BF946A88E LT DUP12 MSTORE PUSH24 0x83D530ACA5FF0F2DF79264736F6C63430007050033000000 ",
							"sourceMap": "64:1512:10:-:0;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122089cd6e043f485badd6020854bb4bf946a88e108b527783d530aca5ff0f2df79264736f6c63430007050033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP10 0xCD PUSH15 0x43F485BADD6020854BB4BF946A88E LT DUP12 MSTORE PUSH24 0x83D530ACA5FF0F2DF79264736F6C63430007050033000000 ",
							"sourceMap": "64:1512:10:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 64,
									"end": 1576,
									"name": "PUSH #[$]",
									"source": 10,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 64,
									"end": 1576,
									"name": "PUSH [$]",
									"source": 10,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 64,
									"end": 1576,
									"name": "PUSH",
									"source": 10,
									"value": "B"
								},
								{
									"begin": 64,
									"end": 1576,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 64,
									"end": 1576,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 64,
									"end": 1576,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 64,
									"end": 1576,
									"name": "CODECOPY",
									"source": 10
								},
								{
									"begin": 64,
									"end": 1576,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 64,
									"end": 1576,
									"name": "MLOAD",
									"source": 10
								},
								{
									"begin": 64,
									"end": 1576,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 64,
									"end": 1576,
									"name": "BYTE",
									"source": 10
								},
								{
									"begin": 64,
									"end": 1576,
									"name": "PUSH",
									"source": 10,
									"value": "73"
								},
								{
									"begin": 64,
									"end": 1576,
									"name": "EQ",
									"source": 10
								},
								{
									"begin": 64,
									"end": 1576,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "1"
								},
								{
									"begin": 64,
									"end": 1576,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 64,
									"end": 1576,
									"name": "INVALID",
									"source": 10
								},
								{
									"begin": 64,
									"end": 1576,
									"name": "tag",
									"source": 10,
									"value": "1"
								},
								{
									"begin": 64,
									"end": 1576,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 64,
									"end": 1576,
									"name": "ADDRESS",
									"source": 10
								},
								{
									"begin": 64,
									"end": 1576,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 64,
									"end": 1576,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 64,
									"end": 1576,
									"name": "PUSH",
									"source": 10,
									"value": "73"
								},
								{
									"begin": 64,
									"end": 1576,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 64,
									"end": 1576,
									"name": "MSTORE8",
									"source": 10
								},
								{
									"begin": 64,
									"end": 1576,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 64,
									"end": 1576,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 64,
									"end": 1576,
									"name": "RETURN",
									"source": 10
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122089cd6e043f485badd6020854bb4bf946a88e108b527783d530aca5ff0f2df79264736f6c63430007050033",
									".code": [
										{
											"begin": 64,
											"end": 1576,
											"name": "PUSHDEPLOYADDRESS",
											"source": 10
										},
										{
											"begin": 64,
											"end": 1576,
											"name": "ADDRESS",
											"source": 10
										},
										{
											"begin": 64,
											"end": 1576,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 64,
											"end": 1576,
											"name": "PUSH",
											"source": 10,
											"value": "80"
										},
										{
											"begin": 64,
											"end": 1576,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 64,
											"end": 1576,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 64,
											"end": 1576,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 64,
											"end": 1576,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 64,
											"end": 1576,
											"name": "REVERT",
											"source": 10
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.7.5+commit.eb77ed08\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Omnidex-incentives/utils/DataTypes.sol\":\"DataTypes\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/Omnidex-incentives/utils/DataTypes.sol\":{\"keccak256\":\"0xa64c1b776b13f3f6cc88fa0742ce15073026bb526be7f324dddbd2b221e67129\",\"license\":\"agpl-3.0\",\"urls\":[\"bzz-raw://f194c291658a18f69b8df0b1b2ddd08bbb621b821171700bf55f7586e65a6275\",\"dweb:/ipfs/QmddN7PHqyFk8ZCveEqqoUfAsQ9sToQYna56RqKRDAFAs2\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/Omnidex-incentives/utils/PercentageMath.sol": {
				"PercentageMath": {
					"abi": [],
					"devdoc": {
						"author": "Omnidex",
						"details": "Percentages are defined by default with 2 decimals of precision (100.00). The precision is indicated by PERCENTAGE_FACTOROperations are rounded half up*",
						"kind": "dev",
						"methods": {},
						"title": "PercentageMath library",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/Omnidex-incentives/utils/PercentageMath.sol\":368:1797  library PercentageMath {\r... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  invalid\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/Omnidex-incentives/utils/PercentageMath.sol\":368:1797  library PercentageMath {\r... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212201b66a4416c032a9ba6e82c6dc9a1850b5ad267f16c2f620fcefe75f313482c5964736f6c63430007050033\n}\n",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566023600b82828239805160001a607314601657fe5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212201b66a4416c032a9ba6e82c6dc9a1850b5ad267f16c2f620fcefe75f313482c5964736f6c63430007050033",
							"opcodes": "PUSH1 0x56 PUSH1 0x23 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x16 JUMPI INVALID JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SHL PUSH7 0xA4416C032A9BA6 0xE8 0x2C PUSH14 0xC9A1850B5AD267F16C2F620FCEFE PUSH22 0xF313482C5964736F6C63430007050033000000000000 ",
							"sourceMap": "368:1429:11:-:0;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212201b66a4416c032a9ba6e82c6dc9a1850b5ad267f16c2f620fcefe75f313482c5964736f6c63430007050033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SHL PUSH7 0xA4416C032A9BA6 0xE8 0x2C PUSH14 0xC9A1850B5AD267F16C2F620FCEFE PUSH22 0xF313482C5964736F6C63430007050033000000000000 ",
							"sourceMap": "368:1429:11:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"percentDiv(uint256,uint256)": "infinite",
								"percentMul(uint256,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 368,
									"end": 1797,
									"name": "PUSH #[$]",
									"source": 11,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 368,
									"end": 1797,
									"name": "PUSH [$]",
									"source": 11,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 368,
									"end": 1797,
									"name": "PUSH",
									"source": 11,
									"value": "B"
								},
								{
									"begin": 368,
									"end": 1797,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 368,
									"end": 1797,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 368,
									"end": 1797,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 368,
									"end": 1797,
									"name": "CODECOPY",
									"source": 11
								},
								{
									"begin": 368,
									"end": 1797,
									"name": "DUP1",
									"source": 11
								},
								{
									"begin": 368,
									"end": 1797,
									"name": "MLOAD",
									"source": 11
								},
								{
									"begin": 368,
									"end": 1797,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 368,
									"end": 1797,
									"name": "BYTE",
									"source": 11
								},
								{
									"begin": 368,
									"end": 1797,
									"name": "PUSH",
									"source": 11,
									"value": "73"
								},
								{
									"begin": 368,
									"end": 1797,
									"name": "EQ",
									"source": 11
								},
								{
									"begin": 368,
									"end": 1797,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "1"
								},
								{
									"begin": 368,
									"end": 1797,
									"name": "JUMPI",
									"source": 11
								},
								{
									"begin": 368,
									"end": 1797,
									"name": "INVALID",
									"source": 11
								},
								{
									"begin": 368,
									"end": 1797,
									"name": "tag",
									"source": 11,
									"value": "1"
								},
								{
									"begin": 368,
									"end": 1797,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 368,
									"end": 1797,
									"name": "ADDRESS",
									"source": 11
								},
								{
									"begin": 368,
									"end": 1797,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 368,
									"end": 1797,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 368,
									"end": 1797,
									"name": "PUSH",
									"source": 11,
									"value": "73"
								},
								{
									"begin": 368,
									"end": 1797,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 368,
									"end": 1797,
									"name": "MSTORE8",
									"source": 11
								},
								{
									"begin": 368,
									"end": 1797,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 368,
									"end": 1797,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 368,
									"end": 1797,
									"name": "RETURN",
									"source": 11
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212201b66a4416c032a9ba6e82c6dc9a1850b5ad267f16c2f620fcefe75f313482c5964736f6c63430007050033",
									".code": [
										{
											"begin": 368,
											"end": 1797,
											"name": "PUSHDEPLOYADDRESS",
											"source": 11
										},
										{
											"begin": 368,
											"end": 1797,
											"name": "ADDRESS",
											"source": 11
										},
										{
											"begin": 368,
											"end": 1797,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 368,
											"end": 1797,
											"name": "PUSH",
											"source": 11,
											"value": "80"
										},
										{
											"begin": 368,
											"end": 1797,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 368,
											"end": 1797,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 368,
											"end": 1797,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 368,
											"end": 1797,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 368,
											"end": 1797,
											"name": "REVERT",
											"source": 11
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.7.5+commit.eb77ed08\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"author\":\"Omnidex\",\"details\":\"Percentages are defined by default with 2 decimals of precision (100.00). The precision is indicated by PERCENTAGE_FACTOROperations are rounded half up*\",\"kind\":\"dev\",\"methods\":{},\"title\":\"PercentageMath library\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"Provides functions to perform percentage calculations\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Omnidex-incentives/utils/PercentageMath.sol\":\"PercentageMath\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/Omnidex-incentives/utils/PercentageMath.sol\":{\"keccak256\":\"0xd2fe1c41c917b187512b0398c5a3b51d8fa0864b2d7dde5aa5c196f6e523ba33\",\"license\":\"agpl-3.0\",\"urls\":[\"bzz-raw://251ae54e3634306bd51f26e6554de2ea88fb1754472e01e1371aed4b7aee5fd1\",\"dweb:/ipfs/QmYTrJNx2LmBLwecPp9mcGeXYsVd8d49hUxgp5ESMN5Wi5\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"notice": "Provides functions to perform percentage calculations",
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@aave/aave-stake/contracts/interfaces/IERC20.sol": {
				"ast": {
					"absolutePath": "@aave/aave-stake/contracts/interfaces/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							77
						]
					},
					"id": 78,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"0.7",
								".5"
							],
							"nodeType": "PragmaDirective",
							"src": "32:22:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 2,
								"nodeType": "StructuredDocumentation",
								"src": "56:133:0",
								"text": " @dev Interface of the ERC20 standard as defined in the EIP.\n From https://github.com/OpenZeppelin/openzeppelin-contracts"
							},
							"fullyImplemented": false,
							"id": 77,
							"linearizedBaseContracts": [
								77
							],
							"name": "IERC20",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 3,
										"nodeType": "StructuredDocumentation",
										"src": "211:62:0",
										"text": " @dev Returns the amount of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 8,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 4,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "296:2:0"
									},
									"returnParameters": {
										"id": 7,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 6,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 8,
												"src": "322:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 5,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "322:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "321:9:0"
									},
									"scope": 77,
									"src": "276:55:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 9,
										"nodeType": "StructuredDocumentation",
										"src": "335:68:0",
										"text": " @dev Returns the amount of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 16,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 11,
												"mutability": "mutable",
												"name": "account",
												"nodeType": "VariableDeclaration",
												"scope": 16,
												"src": "425:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 10,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "425:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "424:17:0"
									},
									"returnParameters": {
										"id": 15,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 14,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 16,
												"src": "465:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 13,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "465:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "464:9:0"
									},
									"scope": 77,
									"src": "406:68:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 17,
										"nodeType": "StructuredDocumentation",
										"src": "478:197:0",
										"text": " @dev Moves `amount` tokens from the caller's account to `recipient`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 26,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 22,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 19,
												"mutability": "mutable",
												"name": "recipient",
												"nodeType": "VariableDeclaration",
												"scope": 26,
												"src": "696:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 18,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "696:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 21,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 26,
												"src": "715:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 20,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "715:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "695:35:0"
									},
									"returnParameters": {
										"id": 25,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 24,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 26,
												"src": "749:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 23,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "749:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "748:6:0"
									},
									"scope": 77,
									"src": "678:77:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 27,
										"nodeType": "StructuredDocumentation",
										"src": "759:252:0",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 36,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 32,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 29,
												"mutability": "mutable",
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"scope": 36,
												"src": "1033:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 28,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1033:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 31,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 36,
												"src": "1048:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 30,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1048:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1032:32:0"
									},
									"returnParameters": {
										"id": 35,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 34,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 36,
												"src": "1088:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 33,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1088:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1087:9:0"
									},
									"scope": 77,
									"src": "1014:83:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 37,
										"nodeType": "StructuredDocumentation",
										"src": "1101:616:0",
										"text": " @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 46,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 42,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 39,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 46,
												"src": "1737:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 38,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1737:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 41,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 46,
												"src": "1754:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 40,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1754:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1736:33:0"
									},
									"returnParameters": {
										"id": 45,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 44,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 46,
												"src": "1788:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 43,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1788:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1787:6:0"
									},
									"scope": 77,
									"src": "1720:74:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 47,
										"nodeType": "StructuredDocumentation",
										"src": "1798:280:0",
										"text": " @dev Moves `amount` tokens from `sender` to `recipient` using the\n allowance mechanism. `amount` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 58,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 54,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 49,
												"mutability": "mutable",
												"name": "sender",
												"nodeType": "VariableDeclaration",
												"scope": 58,
												"src": "2108:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 48,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2108:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 51,
												"mutability": "mutable",
												"name": "recipient",
												"nodeType": "VariableDeclaration",
												"scope": 58,
												"src": "2128:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 50,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2128:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 53,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 58,
												"src": "2151:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 52,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2151:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2102:67:0"
									},
									"returnParameters": {
										"id": 57,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 56,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 58,
												"src": "2188:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 55,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2188:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2187:6:0"
									},
									"scope": 77,
									"src": "2081:113:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 59,
										"nodeType": "StructuredDocumentation",
										"src": "2198:148:0",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"id": 67,
									"name": "Transfer",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 66,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 61,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nodeType": "VariableDeclaration",
												"scope": 67,
												"src": "2364:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 60,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2364:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 63,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 67,
												"src": "2386:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 62,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2386:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 65,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 67,
												"src": "2406:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 64,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2406:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2363:57:0"
									},
									"src": "2349:72:0"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 68,
										"nodeType": "StructuredDocumentation",
										"src": "2425:142:0",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"id": 76,
									"name": "Approval",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 75,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 70,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "2585:21:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 69,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2585:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 72,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "2608:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 71,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2608:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 74,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "2633:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 73,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2633:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2584:63:0"
									},
									"src": "2570:78:0"
								}
							],
							"scope": 78,
							"src": "190:2460:0"
						}
					],
					"src": "32:2619:0"
				},
				"id": 0
			},
			"contracts/Omnidex-incentives/interfaces/ILendingPoolAddressesProvider.sol": {
				"ast": {
					"absolutePath": "contracts/Omnidex-incentives/interfaces/ILendingPoolAddressesProvider.sol",
					"exportedSymbols": {
						"ILendingPoolAddressesProvider": [
							228
						]
					},
					"id": 229,
					"license": "agpl-3.0",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 79,
							"literals": [
								"solidity",
								"0.7",
								".5"
							],
							"nodeType": "PragmaDirective",
							"src": "38:22:1"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 80,
								"nodeType": "StructuredDocumentation",
								"src": "64:323:1",
								"text": " @title LendingPoolAddressesProvider contract\n @dev Main registry of addresses part of or connected to the protocol, including permissioned roles\n - Acting also as factory of proxies and admin of those, so with right to change its implementations\n - Owned by the Omnidex Governance\n @author Omnidex*"
							},
							"fullyImplemented": false,
							"id": 228,
							"linearizedBaseContracts": [
								228
							],
							"name": "ILendingPoolAddressesProvider",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"id": 84,
									"name": "MarketIdSet",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 83,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 82,
												"indexed": false,
												"mutability": "mutable",
												"name": "newMarketId",
												"nodeType": "VariableDeclaration",
												"scope": 84,
												"src": "452:18:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 81,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "452:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "451:20:1"
									},
									"src": "434:38:1"
								},
								{
									"anonymous": false,
									"id": 88,
									"name": "LendingPoolUpdated",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 87,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 86,
												"indexed": true,
												"mutability": "mutable",
												"name": "newAddress",
												"nodeType": "VariableDeclaration",
												"scope": 88,
												"src": "501:26:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 85,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "501:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "500:28:1"
									},
									"src": "476:53:1"
								},
								{
									"anonymous": false,
									"id": 92,
									"name": "ConfigurationAdminUpdated",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 91,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 90,
												"indexed": true,
												"mutability": "mutable",
												"name": "newAddress",
												"nodeType": "VariableDeclaration",
												"scope": 92,
												"src": "565:26:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 89,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "565:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "564:28:1"
									},
									"src": "533:60:1"
								},
								{
									"anonymous": false,
									"id": 96,
									"name": "EmergencyAdminUpdated",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 95,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 94,
												"indexed": true,
												"mutability": "mutable",
												"name": "newAddress",
												"nodeType": "VariableDeclaration",
												"scope": 96,
												"src": "625:26:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 93,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "625:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "624:28:1"
									},
									"src": "597:56:1"
								},
								{
									"anonymous": false,
									"id": 100,
									"name": "LendingPoolConfiguratorUpdated",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 99,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 98,
												"indexed": true,
												"mutability": "mutable",
												"name": "newAddress",
												"nodeType": "VariableDeclaration",
												"scope": 100,
												"src": "694:26:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 97,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "694:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "693:28:1"
									},
									"src": "657:65:1"
								},
								{
									"anonymous": false,
									"id": 104,
									"name": "LendingPoolCollateralManagerUpdated",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 103,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 102,
												"indexed": true,
												"mutability": "mutable",
												"name": "newAddress",
												"nodeType": "VariableDeclaration",
												"scope": 104,
												"src": "768:26:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 101,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "768:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "767:28:1"
									},
									"src": "726:70:1"
								},
								{
									"anonymous": false,
									"id": 108,
									"name": "PriceOracleUpdated",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 107,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 106,
												"indexed": true,
												"mutability": "mutable",
												"name": "newAddress",
												"nodeType": "VariableDeclaration",
												"scope": 108,
												"src": "825:26:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 105,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "825:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "824:28:1"
									},
									"src": "800:53:1"
								},
								{
									"anonymous": false,
									"id": 112,
									"name": "LendingRateOracleUpdated",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 111,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 110,
												"indexed": true,
												"mutability": "mutable",
												"name": "newAddress",
												"nodeType": "VariableDeclaration",
												"scope": 112,
												"src": "888:26:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 109,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "888:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "887:28:1"
									},
									"src": "857:59:1"
								},
								{
									"anonymous": false,
									"id": 118,
									"name": "ProxyCreated",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 117,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 114,
												"indexed": false,
												"mutability": "mutable",
												"name": "id",
												"nodeType": "VariableDeclaration",
												"scope": 118,
												"src": "939:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 113,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "939:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 116,
												"indexed": true,
												"mutability": "mutable",
												"name": "newAddress",
												"nodeType": "VariableDeclaration",
												"scope": 118,
												"src": "951:26:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 115,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "951:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "938:40:1"
									},
									"src": "920:59:1"
								},
								{
									"anonymous": false,
									"id": 126,
									"name": "AddressSet",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 125,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 120,
												"indexed": false,
												"mutability": "mutable",
												"name": "id",
												"nodeType": "VariableDeclaration",
												"scope": 126,
												"src": "1000:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 119,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1000:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 122,
												"indexed": true,
												"mutability": "mutable",
												"name": "newAddress",
												"nodeType": "VariableDeclaration",
												"scope": 126,
												"src": "1012:26:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 121,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1012:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 124,
												"indexed": false,
												"mutability": "mutable",
												"name": "hasProxy",
												"nodeType": "VariableDeclaration",
												"scope": 126,
												"src": "1040:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 123,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1040:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "999:55:1"
									},
									"src": "983:72:1"
								},
								{
									"functionSelector": "568ef470",
									"id": 131,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getMarketId",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 127,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1081:2:1"
									},
									"returnParameters": {
										"id": 130,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 129,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 131,
												"src": "1107:13:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 128,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1107:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1106:15:1"
									},
									"scope": 228,
									"src": "1061:61:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "f67b1847",
									"id": 136,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setMarketId",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 134,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 133,
												"mutability": "mutable",
												"name": "marketId",
												"nodeType": "VariableDeclaration",
												"scope": 136,
												"src": "1149:24:1",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_string_calldata_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 132,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1149:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1148:26:1"
									},
									"returnParameters": {
										"id": 135,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1183:0:1"
									},
									"scope": 228,
									"src": "1128:56:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "ca446dd9",
									"id": 143,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setAddress",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 141,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 138,
												"mutability": "mutable",
												"name": "id",
												"nodeType": "VariableDeclaration",
												"scope": 143,
												"src": "1210:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 137,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1210:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 140,
												"mutability": "mutable",
												"name": "newAddress",
												"nodeType": "VariableDeclaration",
												"scope": 143,
												"src": "1222:18:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 139,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1222:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1209:32:1"
									},
									"returnParameters": {
										"id": 142,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1250:0:1"
									},
									"scope": 228,
									"src": "1190:61:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "5dcc528c",
									"id": 150,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setAddressAsProxy",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 148,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 145,
												"mutability": "mutable",
												"name": "id",
												"nodeType": "VariableDeclaration",
												"scope": 150,
												"src": "1284:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 144,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1284:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 147,
												"mutability": "mutable",
												"name": "impl",
												"nodeType": "VariableDeclaration",
												"scope": 150,
												"src": "1296:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 146,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1296:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1283:26:1"
									},
									"returnParameters": {
										"id": 149,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1318:0:1"
									},
									"scope": 228,
									"src": "1257:62:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "21f8a721",
									"id": 157,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getAddress",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 153,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 152,
												"mutability": "mutable",
												"name": "id",
												"nodeType": "VariableDeclaration",
												"scope": 157,
												"src": "1345:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 151,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1345:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1344:12:1"
									},
									"returnParameters": {
										"id": 156,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 155,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 157,
												"src": "1380:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 154,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1380:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1379:9:1"
									},
									"scope": 228,
									"src": "1325:64:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "0261bf8b",
									"id": 162,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getLendingPool",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 158,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1418:2:1"
									},
									"returnParameters": {
										"id": 161,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 160,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 162,
												"src": "1444:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 159,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1444:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1443:9:1"
									},
									"scope": 228,
									"src": "1395:58:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "5aef021f",
									"id": 167,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setLendingPoolImpl",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 165,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 164,
												"mutability": "mutable",
												"name": "pool",
												"nodeType": "VariableDeclaration",
												"scope": 167,
												"src": "1487:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 163,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1487:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1486:14:1"
									},
									"returnParameters": {
										"id": 166,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1509:0:1"
									},
									"scope": 228,
									"src": "1459:51:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "85c858b1",
									"id": 172,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getLendingPoolConfigurator",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 168,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1551:2:1"
									},
									"returnParameters": {
										"id": 171,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 170,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 172,
												"src": "1577:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 169,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1577:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1576:9:1"
									},
									"scope": 228,
									"src": "1516:70:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "c12542df",
									"id": 177,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setLendingPoolConfiguratorImpl",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 175,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 174,
												"mutability": "mutable",
												"name": "configurator",
												"nodeType": "VariableDeclaration",
												"scope": 177,
												"src": "1632:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 173,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1632:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1631:22:1"
									},
									"returnParameters": {
										"id": 176,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1662:0:1"
									},
									"scope": 228,
									"src": "1592:71:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "712d9171",
									"id": 182,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getLendingPoolCollateralManager",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 178,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1709:2:1"
									},
									"returnParameters": {
										"id": 181,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 180,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 182,
												"src": "1735:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 179,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1735:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1734:9:1"
									},
									"scope": 228,
									"src": "1669:75:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "398e5553",
									"id": 187,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setLendingPoolCollateralManager",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 185,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 184,
												"mutability": "mutable",
												"name": "manager",
												"nodeType": "VariableDeclaration",
												"scope": 187,
												"src": "1791:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 183,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1791:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1790:17:1"
									},
									"returnParameters": {
										"id": 186,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1816:0:1"
									},
									"scope": 228,
									"src": "1750:67:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "aecda378",
									"id": 192,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getPoolAdmin",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 188,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1844:2:1"
									},
									"returnParameters": {
										"id": 191,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 190,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 192,
												"src": "1870:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 189,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1870:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1869:9:1"
									},
									"scope": 228,
									"src": "1823:56:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "283d62ad",
									"id": 197,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setPoolAdmin",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 195,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 194,
												"mutability": "mutable",
												"name": "admin",
												"nodeType": "VariableDeclaration",
												"scope": 197,
												"src": "1907:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 193,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1907:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1906:15:1"
									},
									"returnParameters": {
										"id": 196,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1930:0:1"
									},
									"scope": 228,
									"src": "1885:46:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "ddcaa9ea",
									"id": 202,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getEmergencyAdmin",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 198,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1963:2:1"
									},
									"returnParameters": {
										"id": 201,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 200,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 202,
												"src": "1989:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 199,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1989:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1988:9:1"
									},
									"scope": 228,
									"src": "1937:61:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "35da3394",
									"id": 207,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setEmergencyAdmin",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 205,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 204,
												"mutability": "mutable",
												"name": "admin",
												"nodeType": "VariableDeclaration",
												"scope": 207,
												"src": "2031:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 203,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2031:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2030:15:1"
									},
									"returnParameters": {
										"id": 206,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2054:0:1"
									},
									"scope": 228,
									"src": "2004:51:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "fca513a8",
									"id": 212,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getPriceOracle",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 208,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2084:2:1"
									},
									"returnParameters": {
										"id": 211,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 210,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 212,
												"src": "2110:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 209,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2110:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2109:9:1"
									},
									"scope": 228,
									"src": "2061:58:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "530e784f",
									"id": 217,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setPriceOracle",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 215,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 214,
												"mutability": "mutable",
												"name": "priceOracle",
												"nodeType": "VariableDeclaration",
												"scope": 217,
												"src": "2149:19:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 213,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2149:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2148:21:1"
									},
									"returnParameters": {
										"id": 216,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2178:0:1"
									},
									"scope": 228,
									"src": "2125:54:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "3618abba",
									"id": 222,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getLendingRateOracle",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 218,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2214:2:1"
									},
									"returnParameters": {
										"id": 221,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 220,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 222,
												"src": "2240:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 219,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2240:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2239:9:1"
									},
									"scope": 228,
									"src": "2185:64:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "820d1274",
									"id": 227,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setLendingRateOracle",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 225,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 224,
												"mutability": "mutable",
												"name": "lendingRateOracle",
												"nodeType": "VariableDeclaration",
												"scope": 227,
												"src": "2285:25:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 223,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2285:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2284:27:1"
									},
									"returnParameters": {
										"id": 226,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2320:0:1"
									},
									"scope": 228,
									"src": "2255:66:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 229,
							"src": "389:1935:1"
						}
					],
					"src": "38:2288:1"
				},
				"id": 1
			},
			"contracts/Omnidex-incentives/interfaces/ILendingPoolConfigurator.sol": {
				"ast": {
					"absolutePath": "contracts/Omnidex-incentives/interfaces/ILendingPoolConfigurator.sol",
					"exportedSymbols": {
						"ILendingPoolConfigurator": [
							245
						]
					},
					"id": 246,
					"license": "agpl-3.0",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 230,
							"literals": [
								"solidity",
								"0.7",
								".5"
							],
							"nodeType": "PragmaDirective",
							"src": "38:22:2"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 245,
							"linearizedBaseContracts": [
								245
							],
							"name": "ILendingPoolConfigurator",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "12e3ae16",
									"id": 237,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "updateOToken",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 235,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 232,
												"mutability": "mutable",
												"name": "reserve",
												"nodeType": "VariableDeclaration",
												"scope": 237,
												"src": "126:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 231,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "126:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 234,
												"mutability": "mutable",
												"name": "implementation",
												"nodeType": "VariableDeclaration",
												"scope": 237,
												"src": "143:22:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 233,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "143:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "125:41:2"
									},
									"returnParameters": {
										"id": 236,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "175:0:2"
									},
									"scope": 245,
									"src": "104:72:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "4d978258",
									"id": 244,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "updateVariableDebtToken",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 242,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 239,
												"mutability": "mutable",
												"name": "reserve",
												"nodeType": "VariableDeclaration",
												"scope": 244,
												"src": "215:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 238,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "215:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 241,
												"mutability": "mutable",
												"name": "implementation",
												"nodeType": "VariableDeclaration",
												"scope": 244,
												"src": "232:22:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 240,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "232:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "214:41:2"
									},
									"returnParameters": {
										"id": 243,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "264:0:2"
									},
									"scope": 245,
									"src": "182:83:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 246,
							"src": "64:204:2"
						}
					],
					"src": "38:232:2"
				},
				"id": 2
			},
			"contracts/Omnidex-incentives/interfaces/ILendingPoolData.sol": {
				"ast": {
					"absolutePath": "contracts/Omnidex-incentives/interfaces/ILendingPoolData.sol",
					"exportedSymbols": {
						"DataTypes": [
							690
						],
						"ILendingPoolData": [
							259
						]
					},
					"id": 260,
					"license": "agpl-3.0",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 247,
							"literals": [
								"solidity",
								"0.7",
								".5"
							],
							"nodeType": "PragmaDirective",
							"src": "38:22:3"
						},
						{
							"id": 248,
							"literals": [
								"abicoder",
								"v2"
							],
							"nodeType": "PragmaDirective",
							"src": "62:19:3"
						},
						{
							"absolutePath": "contracts/Omnidex-incentives/utils/DataTypes.sol",
							"file": "../utils/DataTypes.sol",
							"id": 250,
							"nodeType": "ImportDirective",
							"scope": 260,
							"sourceUnit": 691,
							"src": "85:49:3",
							"symbolAliases": [
								{
									"foreign": {
										"id": 249,
										"name": "DataTypes",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"src": "93:9:3",
										"typeDescriptions": {}
									}
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 259,
							"linearizedBaseContracts": [
								259
							],
							"name": "ILendingPoolData",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 251,
										"nodeType": "StructuredDocumentation",
										"src": "170:182:3",
										"text": " @dev Returns the state and configuration of the reserve\n @param asset The address of the underlying asset of the reserve\n @return The state of the reserve*"
									},
									"functionSelector": "35ea6a75",
									"id": 258,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getReserveData",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 254,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 253,
												"mutability": "mutable",
												"name": "asset",
												"nodeType": "VariableDeclaration",
												"scope": 258,
												"src": "380:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 252,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "380:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "379:15:3"
									},
									"returnParameters": {
										"id": 257,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 256,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 258,
												"src": "418:28:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_ReserveData_$679_memory_ptr",
													"typeString": "struct DataTypes.ReserveData"
												},
												"typeName": {
													"id": 255,
													"name": "DataTypes.ReserveData",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 679,
													"src": "418:21:3",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_ReserveData_$679_storage_ptr",
														"typeString": "struct DataTypes.ReserveData"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "417:30:3"
									},
									"scope": 259,
									"src": "356:92:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 260,
							"src": "138:313:3"
						}
					],
					"src": "38:415:3"
				},
				"id": 3
			},
			"contracts/Omnidex-incentives/interfaces/IOTokenDetailed.sol": {
				"ast": {
					"absolutePath": "contracts/Omnidex-incentives/interfaces/IOTokenDetailed.sol",
					"exportedSymbols": {
						"IOTokenDetailed": [
							267
						]
					},
					"id": 268,
					"license": "agpl-3.0",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 261,
							"literals": [
								"solidity",
								"0.7",
								".5"
							],
							"nodeType": "PragmaDirective",
							"src": "38:22:4"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 267,
							"linearizedBaseContracts": [
								267
							],
							"name": "IOTokenDetailed",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "b16a19de",
									"id": 266,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "UNDERLYING_ASSET_ADDRESS",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 262,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "128:2:4"
									},
									"returnParameters": {
										"id": 265,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 264,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 266,
												"src": "154:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 263,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "154:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "153:9:4"
									},
									"scope": 267,
									"src": "95:68:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 268,
							"src": "64:102:4"
						}
					],
					"src": "38:130:4"
				},
				"id": 4
			},
			"contracts/Omnidex-incentives/interfaces/IOmnidexDistributionManager.sol": {
				"ast": {
					"absolutePath": "contracts/Omnidex-incentives/interfaces/IOmnidexDistributionManager.sol",
					"exportedSymbols": {
						"DistributionTypes": [
							485
						],
						"IOmnidexDistributionManager": [
							337
						]
					},
					"id": 338,
					"license": "agpl-3.0",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 269,
							"literals": [
								"solidity",
								"0.7",
								".5"
							],
							"nodeType": "PragmaDirective",
							"src": "38:22:5"
						},
						{
							"id": 270,
							"literals": [
								"experimental",
								"ABIEncoderV2"
							],
							"nodeType": "PragmaDirective",
							"src": "62:33:5"
						},
						{
							"absolutePath": "contracts/Omnidex-incentives/lib/DistributionTypes.sol",
							"file": "../lib/DistributionTypes.sol",
							"id": 272,
							"nodeType": "ImportDirective",
							"scope": 338,
							"sourceUnit": 486,
							"src": "99:63:5",
							"symbolAliases": [
								{
									"foreign": {
										"id": 271,
										"name": "DistributionTypes",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"src": "107:17:5",
										"typeDescriptions": {}
									}
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 337,
							"linearizedBaseContracts": [
								337
							],
							"name": "IOmnidexDistributionManager",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"id": 278,
									"name": "AssetConfigUpdated",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 277,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 274,
												"indexed": true,
												"mutability": "mutable",
												"name": "asset",
												"nodeType": "VariableDeclaration",
												"scope": 278,
												"src": "238:21:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 273,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "238:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 276,
												"indexed": false,
												"mutability": "mutable",
												"name": "emission",
												"nodeType": "VariableDeclaration",
												"scope": 278,
												"src": "261:16:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 275,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "261:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "237:41:5"
									},
									"src": "213:66:5"
								},
								{
									"anonymous": false,
									"id": 284,
									"name": "AssetIndexUpdated",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 283,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 280,
												"indexed": true,
												"mutability": "mutable",
												"name": "asset",
												"nodeType": "VariableDeclaration",
												"scope": 284,
												"src": "307:21:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 279,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "307:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 282,
												"indexed": false,
												"mutability": "mutable",
												"name": "index",
												"nodeType": "VariableDeclaration",
												"scope": 284,
												"src": "330:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 281,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "330:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "306:38:5"
									},
									"src": "283:62:5"
								},
								{
									"anonymous": false,
									"id": 292,
									"name": "UserIndexUpdated",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 291,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 286,
												"indexed": true,
												"mutability": "mutable",
												"name": "user",
												"nodeType": "VariableDeclaration",
												"scope": 292,
												"src": "372:20:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 285,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "372:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 288,
												"indexed": true,
												"mutability": "mutable",
												"name": "asset",
												"nodeType": "VariableDeclaration",
												"scope": 292,
												"src": "394:21:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 287,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "394:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 290,
												"indexed": false,
												"mutability": "mutable",
												"name": "index",
												"nodeType": "VariableDeclaration",
												"scope": 292,
												"src": "417:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 289,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "417:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "371:60:5"
									},
									"src": "349:83:5"
								},
								{
									"anonymous": false,
									"id": 296,
									"name": "DistributionEndUpdated",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 295,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 294,
												"indexed": false,
												"mutability": "mutable",
												"name": "newDistributionEnd",
												"nodeType": "VariableDeclaration",
												"scope": 296,
												"src": "465:26:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 293,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "465:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "464:28:5"
									},
									"src": "436:57:5"
								},
								{
									"documentation": {
										"id": 297,
										"nodeType": "StructuredDocumentation",
										"src": "499:110:5",
										"text": " @dev Sets the end date for the distribution\n @param distributionEnd The end date timestamp*"
									},
									"functionSelector": "39ccbdd3",
									"id": 302,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setDistributionEnd",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 300,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 299,
												"mutability": "mutable",
												"name": "distributionEnd",
												"nodeType": "VariableDeclaration",
												"scope": 302,
												"src": "641:23:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 298,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "641:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "640:25:5"
									},
									"returnParameters": {
										"id": 301,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "674:0:5"
									},
									"scope": 337,
									"src": "613:62:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 303,
										"nodeType": "StructuredDocumentation",
										"src": "681:100:5",
										"text": " @dev Gets the end date for the distribution\n @return The end of the distribution*"
									},
									"functionSelector": "cc69afec",
									"id": 308,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getDistributionEnd",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 304,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "812:2:5"
									},
									"returnParameters": {
										"id": 307,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 306,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 308,
												"src": "838:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 305,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "838:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "837:9:5"
									},
									"scope": 337,
									"src": "785:62:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 309,
										"nodeType": "StructuredDocumentation",
										"src": "853:132:5",
										"text": " @dev for backwards compatibility with the previous DistributionManager used\n @return The end of the distribution*"
									},
									"functionSelector": "919cd40f",
									"id": 314,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "DISTRIBUTION_END",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 310,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1014:2:5"
									},
									"returnParameters": {
										"id": 313,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 312,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 314,
												"src": "1039:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 311,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1039:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1038:9:5"
									},
									"scope": 337,
									"src": "989:59:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 315,
										"nodeType": "StructuredDocumentation",
										"src": "1055:208:5",
										"text": " @dev Returns the data of an user on a distribution\n @param user Address of the user\n @param asset The address of the reference asset of the distribution\n @return The new index*"
									},
									"functionSelector": "3373ee4c",
									"id": 324,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getUserAssetData",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 320,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 317,
												"mutability": "mutable",
												"name": "user",
												"nodeType": "VariableDeclaration",
												"scope": 324,
												"src": "1294:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 316,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1294:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 319,
												"mutability": "mutable",
												"name": "asset",
												"nodeType": "VariableDeclaration",
												"scope": 324,
												"src": "1308:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 318,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1308:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1293:29:5"
									},
									"returnParameters": {
										"id": 323,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 322,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 324,
												"src": "1346:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 321,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1346:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1345:9:5"
									},
									"scope": 337,
									"src": "1268:87:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 325,
										"nodeType": "StructuredDocumentation",
										"src": "1362:248:5",
										"text": " @dev Returns the configuration of the distribution for a certain asset\n @param asset The address of the reference asset of the distribution\n @return The asset index, the emission per second and the last updated timestamp*"
									},
									"functionSelector": "1652e7b7",
									"id": 336,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getAssetData",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 328,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 327,
												"mutability": "mutable",
												"name": "asset",
												"nodeType": "VariableDeclaration",
												"scope": 336,
												"src": "1637:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 326,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1637:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1636:15:5"
									},
									"returnParameters": {
										"id": 335,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 330,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 336,
												"src": "1675:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 329,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1675:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 332,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 336,
												"src": "1684:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 331,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1684:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 334,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 336,
												"src": "1693:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 333,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1693:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1674:27:5"
									},
									"scope": 337,
									"src": "1615:87:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 338,
							"src": "166:1539:5"
						}
					],
					"src": "38:1669:5"
				},
				"id": 5
			},
			"contracts/Omnidex-incentives/interfaces/IOmnidexIncentivesController.sol": {
				"ast": {
					"absolutePath": "contracts/Omnidex-incentives/interfaces/IOmnidexIncentivesController.sol",
					"exportedSymbols": {
						"IOmnidexDistributionManager": [
							337
						],
						"IOmnidexIncentivesController": [
							467
						]
					},
					"id": 468,
					"license": "agpl-3.0",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 339,
							"literals": [
								"solidity",
								"0.7",
								".5"
							],
							"nodeType": "PragmaDirective",
							"src": "38:22:6"
						},
						{
							"id": 340,
							"literals": [
								"experimental",
								"ABIEncoderV2"
							],
							"nodeType": "PragmaDirective",
							"src": "64:33:6"
						},
						{
							"absolutePath": "contracts/Omnidex-incentives/interfaces/IOmnidexDistributionManager.sol",
							"file": "../interfaces/IOmnidexDistributionManager.sol",
							"id": 342,
							"nodeType": "ImportDirective",
							"scope": 468,
							"sourceUnit": 338,
							"src": "101:90:6",
							"symbolAliases": [
								{
									"foreign": {
										"id": 341,
										"name": "IOmnidexDistributionManager",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"src": "109:27:6",
										"typeDescriptions": {}
									}
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 343,
										"name": "IOmnidexDistributionManager",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 337,
										"src": "237:27:6",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IOmnidexDistributionManager_$337",
											"typeString": "contract IOmnidexDistributionManager"
										}
									},
									"id": 344,
									"nodeType": "InheritanceSpecifier",
									"src": "237:27:6"
								}
							],
							"contractDependencies": [
								337
							],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 467,
							"linearizedBaseContracts": [
								467,
								337
							],
							"name": "IOmnidexIncentivesController",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"id": 350,
									"name": "RewardsAccrued",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 349,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 346,
												"indexed": true,
												"mutability": "mutable",
												"name": "user",
												"nodeType": "VariableDeclaration",
												"scope": 350,
												"src": "291:20:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 345,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "291:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 348,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 350,
												"src": "313:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 347,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "313:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "290:38:6"
									},
									"src": "270:59:6"
								},
								{
									"anonymous": false,
									"id": 360,
									"name": "RewardsClaimed",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 359,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 352,
												"indexed": true,
												"mutability": "mutable",
												"name": "user",
												"nodeType": "VariableDeclaration",
												"scope": 360,
												"src": "362:20:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 351,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "362:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 354,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 360,
												"src": "389:18:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 353,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "389:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 356,
												"indexed": true,
												"mutability": "mutable",
												"name": "claimer",
												"nodeType": "VariableDeclaration",
												"scope": 360,
												"src": "414:23:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 355,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "414:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 358,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 360,
												"src": "444:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 357,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "444:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "355:108:6"
									},
									"src": "335:129:6"
								},
								{
									"anonymous": false,
									"id": 366,
									"name": "ClaimerSet",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 365,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 362,
												"indexed": true,
												"mutability": "mutable",
												"name": "user",
												"nodeType": "VariableDeclaration",
												"scope": 366,
												"src": "487:20:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 361,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "487:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 364,
												"indexed": true,
												"mutability": "mutable",
												"name": "claimer",
												"nodeType": "VariableDeclaration",
												"scope": 366,
												"src": "509:23:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 363,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "509:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "486:47:6"
									},
									"src": "470:64:6"
								},
								{
									"documentation": {
										"id": 367,
										"nodeType": "StructuredDocumentation",
										"src": "540:183:6",
										"text": " @dev Whitelists an address to claim the rewards on behalf of another address\n @param user The address of the user\n @param claimer The address of the claimer"
									},
									"functionSelector": "f5cf673b",
									"id": 374,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setClaimer",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 372,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 369,
												"mutability": "mutable",
												"name": "user",
												"nodeType": "VariableDeclaration",
												"scope": 374,
												"src": "747:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 368,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "747:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 371,
												"mutability": "mutable",
												"name": "claimer",
												"nodeType": "VariableDeclaration",
												"scope": 374,
												"src": "761:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 370,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "761:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "746:31:6"
									},
									"returnParameters": {
										"id": 373,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "786:0:6"
									},
									"scope": 467,
									"src": "727:60:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 375,
										"nodeType": "StructuredDocumentation",
										"src": "793:168:6",
										"text": " @dev Returns the whitelisted claimer for a certain address (0x0 if not set)\n @param user The address of the user\n @return The claimer address"
									},
									"functionSelector": "74d945ec",
									"id": 382,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getClaimer",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 378,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 377,
												"mutability": "mutable",
												"name": "user",
												"nodeType": "VariableDeclaration",
												"scope": 382,
												"src": "985:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 376,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "985:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "984:14:6"
									},
									"returnParameters": {
										"id": 381,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 380,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 382,
												"src": "1022:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 379,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1022:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1021:9:6"
									},
									"scope": 467,
									"src": "965:66:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 383,
										"nodeType": "StructuredDocumentation",
										"src": "1037:175:6",
										"text": " @dev Configure assets for a certain rewards emission\n @param assets The assets to incentivize\n @param emissionsPerSecond The emission for each asset"
									},
									"functionSelector": "79f171b2",
									"id": 392,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "configureAssets",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 390,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 386,
												"mutability": "mutable",
												"name": "assets",
												"nodeType": "VariableDeclaration",
												"scope": 392,
												"src": "1241:25:6",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 384,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "1241:7:6",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 385,
													"nodeType": "ArrayTypeName",
													"src": "1241:9:6",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 389,
												"mutability": "mutable",
												"name": "emissionsPerSecond",
												"nodeType": "VariableDeclaration",
												"scope": 392,
												"src": "1268:37:6",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 387,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "1268:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 388,
													"nodeType": "ArrayTypeName",
													"src": "1268:9:6",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1240:66:6"
									},
									"returnParameters": {
										"id": 391,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1320:0:6"
									},
									"scope": 467,
									"src": "1216:105:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 393,
										"nodeType": "StructuredDocumentation",
										"src": "1327:308:6",
										"text": " @dev Called by the corresponding asset on any update that affects the rewards distribution\n @param asset The address of the user\n @param userBalance The balance of the user of the asset in the lending pool\n @param totalSupply The total supply of the asset in the lending pool*"
									},
									"functionSelector": "31873e2e",
									"id": 402,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "handleAction",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 400,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 395,
												"mutability": "mutable",
												"name": "asset",
												"nodeType": "VariableDeclaration",
												"scope": 402,
												"src": "1667:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 394,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1667:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 397,
												"mutability": "mutable",
												"name": "userBalance",
												"nodeType": "VariableDeclaration",
												"scope": 402,
												"src": "1687:19:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 396,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1687:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 399,
												"mutability": "mutable",
												"name": "totalSupply",
												"nodeType": "VariableDeclaration",
												"scope": 402,
												"src": "1713:19:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 398,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1713:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1660:77:6"
									},
									"returnParameters": {
										"id": 401,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1746:0:6"
									},
									"scope": 467,
									"src": "1639:108:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 403,
										"nodeType": "StructuredDocumentation",
										"src": "1753:165:6",
										"text": " @dev Returns the total of rewards of an user, already accrued + not yet accrued\n @param user The address of the user\n @return The rewards*"
									},
									"functionSelector": "8b599f26",
									"id": 413,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getRewardsBalance",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 409,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 406,
												"mutability": "mutable",
												"name": "assets",
												"nodeType": "VariableDeclaration",
												"scope": 413,
												"src": "1949:25:6",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 404,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "1949:7:6",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 405,
													"nodeType": "ArrayTypeName",
													"src": "1949:9:6",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 408,
												"mutability": "mutable",
												"name": "user",
												"nodeType": "VariableDeclaration",
												"scope": 413,
												"src": "1976:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 407,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1976:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1948:41:6"
									},
									"returnParameters": {
										"id": 412,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 411,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 413,
												"src": "2028:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 410,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2028:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2027:9:6"
									},
									"scope": 467,
									"src": "1922:115:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 414,
										"nodeType": "StructuredDocumentation",
										"src": "2043:280:6",
										"text": " @dev Claims reward for an user to the desired address, on all the assets of the lending pool, accumulating the pending rewards\n @param amount Amount of rewards to claim\n @param to Address that will be receiving the rewards\n @return Rewards claimed*"
									},
									"functionSelector": "3111e7b3",
									"id": 426,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "claimRewards",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 422,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 417,
												"mutability": "mutable",
												"name": "assets",
												"nodeType": "VariableDeclaration",
												"scope": 426,
												"src": "2355:25:6",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 415,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "2355:7:6",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 416,
													"nodeType": "ArrayTypeName",
													"src": "2355:9:6",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 419,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 426,
												"src": "2387:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 418,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2387:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 421,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 426,
												"src": "2408:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 420,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2408:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2348:75:6"
									},
									"returnParameters": {
										"id": 425,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 424,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 426,
												"src": "2442:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 423,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2442:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2441:9:6"
									},
									"scope": 467,
									"src": "2327:124:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 427,
										"nodeType": "StructuredDocumentation",
										"src": "2457:425:6",
										"text": " @dev Claims reward for an user on behalf, on all the assets of the lending pool, accumulating the pending rewards. The caller must\n be whitelisted via \"allowClaimOnBehalf\" function by the RewardsAdmin role manager\n @param amount Amount of rewards to claim\n @param user Address to check and claim rewards\n @param to Address that will be receiving the rewards\n @return Rewards claimed*"
									},
									"functionSelector": "6d34b96e",
									"id": 441,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "claimRewardsOnBehalf",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 437,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 430,
												"mutability": "mutable",
												"name": "assets",
												"nodeType": "VariableDeclaration",
												"scope": 441,
												"src": "2922:25:6",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 428,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "2922:7:6",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 429,
													"nodeType": "ArrayTypeName",
													"src": "2922:9:6",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 432,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 441,
												"src": "2954:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 431,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2954:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 434,
												"mutability": "mutable",
												"name": "user",
												"nodeType": "VariableDeclaration",
												"scope": 441,
												"src": "2975:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 433,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2975:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 436,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 441,
												"src": "2994:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 435,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2994:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2915:94:6"
									},
									"returnParameters": {
										"id": 440,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 439,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 441,
												"src": "3028:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 438,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3028:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3027:9:6"
									},
									"scope": 467,
									"src": "2886:151:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 442,
										"nodeType": "StructuredDocumentation",
										"src": "3043:201:6",
										"text": " @dev Claims reward for msg.sender, on all the assets of the lending pool, accumulating the pending rewards\n @param amount Amount of rewards to claim\n @return Rewards claimed*"
									},
									"functionSelector": "41485304",
									"id": 452,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "claimRewardsToSelf",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 448,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 445,
												"mutability": "mutable",
												"name": "assets",
												"nodeType": "VariableDeclaration",
												"scope": 452,
												"src": "3276:25:6",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 443,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "3276:7:6",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 444,
													"nodeType": "ArrayTypeName",
													"src": "3276:9:6",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 447,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 452,
												"src": "3303:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 446,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3303:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3275:43:6"
									},
									"returnParameters": {
										"id": 451,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 450,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 452,
												"src": "3337:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 449,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3337:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3336:9:6"
									},
									"scope": 467,
									"src": "3248:98:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 453,
										"nodeType": "StructuredDocumentation",
										"src": "3352:146:6",
										"text": " @dev returns the unclaimed rewards of the user\n @param user the address of the user\n @return the unclaimed user rewards"
									},
									"functionSelector": "198fa81e",
									"id": 460,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getUserUnclaimedRewards",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 456,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 455,
												"mutability": "mutable",
												"name": "user",
												"nodeType": "VariableDeclaration",
												"scope": 460,
												"src": "3535:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 454,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3535:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3534:14:6"
									},
									"returnParameters": {
										"id": 459,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 458,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 460,
												"src": "3572:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 457,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3572:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3571:9:6"
									},
									"scope": 467,
									"src": "3502:79:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 461,
										"nodeType": "StructuredDocumentation",
										"src": "3587:106:6",
										"text": " @dev for backward compatibility with previous implementation of the Incentives controller"
									},
									"functionSelector": "99248ea7",
									"id": 466,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "REWARD_TOKEN",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 462,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3718:2:6"
									},
									"returnParameters": {
										"id": 465,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 464,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 466,
												"src": "3744:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 463,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3744:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3743:9:6"
									},
									"scope": 467,
									"src": "3697:56:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 468,
							"src": "195:3561:6"
						}
					],
					"src": "38:3720:6"
				},
				"id": 6
			},
			"contracts/Omnidex-incentives/lib/DistributionTypes.sol": {
				"ast": {
					"absolutePath": "contracts/Omnidex-incentives/lib/DistributionTypes.sol",
					"exportedSymbols": {
						"DistributionTypes": [
							485
						]
					},
					"id": 486,
					"license": "agpl-3.0",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 469,
							"literals": [
								"solidity",
								"0.7",
								".5"
							],
							"nodeType": "PragmaDirective",
							"src": "38:22:7"
						},
						{
							"id": 470,
							"literals": [
								"experimental",
								"ABIEncoderV2"
							],
							"nodeType": "PragmaDirective",
							"src": "62:33:7"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"fullyImplemented": true,
							"id": 485,
							"linearizedBaseContracts": [
								485
							],
							"name": "DistributionTypes",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "DistributionTypes.AssetConfigInput",
									"id": 477,
									"members": [
										{
											"constant": false,
											"id": 472,
											"mutability": "mutable",
											"name": "emissionPerSecond",
											"nodeType": "VariableDeclaration",
											"scope": 477,
											"src": "161:25:7",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint104",
												"typeString": "uint104"
											},
											"typeName": {
												"id": 471,
												"name": "uint104",
												"nodeType": "ElementaryTypeName",
												"src": "161:7:7",
												"typeDescriptions": {
													"typeIdentifier": "t_uint104",
													"typeString": "uint104"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 474,
											"mutability": "mutable",
											"name": "totalStaked",
											"nodeType": "VariableDeclaration",
											"scope": 477,
											"src": "193:19:7",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 473,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "193:7:7",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 476,
											"mutability": "mutable",
											"name": "underlyingAsset",
											"nodeType": "VariableDeclaration",
											"scope": 477,
											"src": "219:23:7",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 475,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "219:7:7",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "AssetConfigInput",
									"nodeType": "StructDefinition",
									"scope": 485,
									"src": "130:118:7",
									"visibility": "public"
								},
								{
									"canonicalName": "DistributionTypes.UserStakeInput",
									"id": 484,
									"members": [
										{
											"constant": false,
											"id": 479,
											"mutability": "mutable",
											"name": "underlyingAsset",
											"nodeType": "VariableDeclaration",
											"scope": 484,
											"src": "283:23:7",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 478,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "283:7:7",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 481,
											"mutability": "mutable",
											"name": "stakedByUser",
											"nodeType": "VariableDeclaration",
											"scope": 484,
											"src": "313:20:7",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 480,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "313:7:7",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 483,
											"mutability": "mutable",
											"name": "totalStaked",
											"nodeType": "VariableDeclaration",
											"scope": 484,
											"src": "340:19:7",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 482,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "340:7:7",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "UserStakeInput",
									"nodeType": "StructDefinition",
									"scope": 485,
									"src": "254:111:7",
									"visibility": "public"
								}
							],
							"scope": 486,
							"src": "99:269:7"
						}
					],
					"src": "38:332:7"
				},
				"id": 7
			},
			"contracts/Omnidex-incentives/lib/SafeMath.sol": {
				"ast": {
					"absolutePath": "contracts/Omnidex-incentives/lib/SafeMath.sol",
					"exportedSymbols": {
						"SafeMath": [
							575
						]
					},
					"id": 576,
					"license": "agpl-3.0",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 487,
							"literals": [
								"solidity",
								"^",
								"0.7",
								".5"
							],
							"nodeType": "PragmaDirective",
							"src": "40:23:8"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 488,
								"nodeType": "StructuredDocumentation",
								"src": "67:208:8",
								"text": "@title Optimized overflow and underflow safe math operations\n @notice Contains methods for doing math operations that revert on overflow or underflow for minimal gas cost\n inspired by uniswap V3"
							},
							"fullyImplemented": true,
							"id": 575,
							"linearizedBaseContracts": [
								575
							],
							"name": "SafeMath",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 509,
										"nodeType": "Block",
										"src": "529:44:8",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 506,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"id": 503,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 499,
																			"name": "z",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 496,
																			"src": "549:1:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 502,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 500,
																				"name": "x",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 491,
																				"src": "553:1:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"id": 501,
																				"name": "y",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 493,
																				"src": "557:1:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "553:5:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "549:9:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 504,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "548:11:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 505,
																"name": "x",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 491,
																"src": "563:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "548:16:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 498,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "540:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 507,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "540:25:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 508,
												"nodeType": "ExpressionStatement",
												"src": "540:25:8"
											}
										]
									},
									"documentation": {
										"id": 489,
										"nodeType": "StructuredDocumentation",
										"src": "299:155:8",
										"text": "@notice Returns x + y, reverts if sum overflows uint256\n @param x The augend\n @param y The addend\n @return z The sum of x and y"
									},
									"id": 510,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "add",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 494,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 491,
												"mutability": "mutable",
												"name": "x",
												"nodeType": "VariableDeclaration",
												"scope": 510,
												"src": "473:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 490,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "473:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 493,
												"mutability": "mutable",
												"name": "y",
												"nodeType": "VariableDeclaration",
												"scope": 510,
												"src": "484:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 492,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "484:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "472:22:8"
									},
									"returnParameters": {
										"id": 497,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 496,
												"mutability": "mutable",
												"name": "z",
												"nodeType": "VariableDeclaration",
												"scope": 510,
												"src": "518:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 495,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "518:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "517:11:8"
									},
									"scope": 575,
									"src": "460:113:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 531,
										"nodeType": "Block",
										"src": "812:44:8",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 528,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"id": 525,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 521,
																			"name": "z",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 518,
																			"src": "832:1:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 524,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 522,
																				"name": "x",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 513,
																				"src": "836:1:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "-",
																			"rightExpression": {
																				"id": 523,
																				"name": "y",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 515,
																				"src": "840:1:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "836:5:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "832:9:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 526,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "831:11:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"id": 527,
																"name": "x",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 513,
																"src": "846:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "831:16:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 520,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "823:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 529,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "823:25:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 530,
												"nodeType": "ExpressionStatement",
												"src": "823:25:8"
											}
										]
									},
									"documentation": {
										"id": 511,
										"nodeType": "StructuredDocumentation",
										"src": "581:156:8",
										"text": "@notice Returns x - y, reverts if underflows\n @param x The minuend\n @param y The subtrahend\n @return z The difference of x and y"
									},
									"id": 532,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 516,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 513,
												"mutability": "mutable",
												"name": "x",
												"nodeType": "VariableDeclaration",
												"scope": 532,
												"src": "756:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 512,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "756:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 515,
												"mutability": "mutable",
												"name": "y",
												"nodeType": "VariableDeclaration",
												"scope": 532,
												"src": "767:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 514,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "767:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "755:22:8"
									},
									"returnParameters": {
										"id": 519,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 518,
												"mutability": "mutable",
												"name": "z",
												"nodeType": "VariableDeclaration",
												"scope": 532,
												"src": "801:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 517,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "801:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "800:11:8"
									},
									"scope": 575,
									"src": "743:113:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 559,
										"nodeType": "Block",
										"src": "1096:58:8",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 556,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 545,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 543,
																	"name": "x",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 535,
																	"src": "1115:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 544,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1120:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "1115:6:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 555,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 553,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"components": [
																			{
																				"id": 550,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftHandSide": {
																					"id": 546,
																					"name": "z",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 540,
																					"src": "1126:1:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "Assignment",
																				"operator": "=",
																				"rightHandSide": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 549,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 547,
																						"name": "x",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 535,
																						"src": "1130:1:8",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "*",
																					"rightExpression": {
																						"id": 548,
																						"name": "y",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 537,
																						"src": "1134:1:8",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "1130:5:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "1126:9:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"id": 551,
																		"isConstant": false,
																		"isInlineArray": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "TupleExpression",
																		"src": "1125:11:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"id": 552,
																		"name": "x",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 535,
																		"src": "1139:1:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "1125:15:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"id": 554,
																	"name": "y",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 537,
																	"src": "1144:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1125:20:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "1115:30:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 542,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "1107:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 557,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1107:39:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 558,
												"nodeType": "ExpressionStatement",
												"src": "1107:39:8"
											}
										]
									},
									"documentation": {
										"id": 533,
										"nodeType": "StructuredDocumentation",
										"src": "864:157:8",
										"text": "@notice Returns x * y, reverts if overflows\n @param x The multiplicand\n @param y The multiplier\n @return z The product of x and y"
									},
									"id": 560,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mul",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 538,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 535,
												"mutability": "mutable",
												"name": "x",
												"nodeType": "VariableDeclaration",
												"scope": 560,
												"src": "1040:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 534,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1040:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 537,
												"mutability": "mutable",
												"name": "y",
												"nodeType": "VariableDeclaration",
												"scope": 560,
												"src": "1051:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 536,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1051:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1039:22:8"
									},
									"returnParameters": {
										"id": 541,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 540,
												"mutability": "mutable",
												"name": "z",
												"nodeType": "VariableDeclaration",
												"scope": 560,
												"src": "1085:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 539,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1085:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1084:11:8"
									},
									"scope": 575,
									"src": "1027:127:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 573,
										"nodeType": "Block",
										"src": "1228:108:8",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 571,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 569,
														"name": "x",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 562,
														"src": "1323:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"id": 570,
														"name": "y",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 564,
														"src": "1327:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1323:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 568,
												"id": 572,
												"nodeType": "Return",
												"src": "1316:12:8"
											}
										]
									},
									"id": 574,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 565,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 562,
												"mutability": "mutable",
												"name": "x",
												"nodeType": "VariableDeclaration",
												"scope": 574,
												"src": "1175:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 561,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1175:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 564,
												"mutability": "mutable",
												"name": "y",
												"nodeType": "VariableDeclaration",
												"scope": 574,
												"src": "1186:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 563,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1186:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1174:22:8"
									},
									"returnParameters": {
										"id": 568,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 567,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 574,
												"src": "1219:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 566,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1219:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1218:9:8"
									},
									"scope": 575,
									"src": "1162:174:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 576,
							"src": "275:1064:8"
						}
					],
					"src": "40:1299:8"
				},
				"id": 8
			},
			"contracts/Omnidex-incentives/proposals/TestConfig.sol": {
				"ast": {
					"absolutePath": "contracts/Omnidex-incentives/proposals/TestConfig.sol",
					"exportedSymbols": {
						"DataTypes": [
							690
						],
						"DistributionTypes": [
							485
						],
						"IERC20": [
							77
						],
						"ILendingPoolAddressesProvider": [
							228
						],
						"ILendingPoolConfigurator": [
							245
						],
						"ILendingPoolData": [
							259
						],
						"IOTokenDetailed": [
							267
						],
						"IOmnidexIncentivesController": [
							467
						],
						"PercentageMath": [
							798
						],
						"SafeMath": [
							575
						],
						"TestConfig": [
							652
						]
					},
					"id": 653,
					"license": "AGPL-3.0",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 577,
							"literals": [
								"solidity",
								"0.7",
								".5"
							],
							"nodeType": "PragmaDirective",
							"src": "38:22:9"
						},
						{
							"id": 578,
							"literals": [
								"abicoder",
								"v2"
							],
							"nodeType": "PragmaDirective",
							"src": "62:19:9"
						},
						{
							"absolutePath": "@aave/aave-stake/contracts/interfaces/IERC20.sol",
							"file": "@aave/aave-stake/contracts/interfaces/IERC20.sol",
							"id": 580,
							"nodeType": "ImportDirective",
							"scope": 653,
							"sourceUnit": 78,
							"src": "85:72:9",
							"symbolAliases": [
								{
									"foreign": {
										"id": 579,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"src": "93:6:9",
										"typeDescriptions": {}
									}
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/Omnidex-incentives/interfaces/ILendingPoolAddressesProvider.sol",
							"file": "../interfaces/ILendingPoolAddressesProvider.sol",
							"id": 582,
							"nodeType": "ImportDirective",
							"scope": 653,
							"sourceUnit": 229,
							"src": "159:94:9",
							"symbolAliases": [
								{
									"foreign": {
										"id": 581,
										"name": "ILendingPoolAddressesProvider",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"src": "167:29:9",
										"typeDescriptions": {}
									}
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/Omnidex-incentives/interfaces/ILendingPoolConfigurator.sol",
							"file": "../interfaces/ILendingPoolConfigurator.sol",
							"id": 584,
							"nodeType": "ImportDirective",
							"scope": 653,
							"sourceUnit": 246,
							"src": "255:84:9",
							"symbolAliases": [
								{
									"foreign": {
										"id": 583,
										"name": "ILendingPoolConfigurator",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"src": "263:24:9",
										"typeDescriptions": {}
									}
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/Omnidex-incentives/interfaces/IOmnidexIncentivesController.sol",
							"file": "../interfaces/IOmnidexIncentivesController.sol",
							"id": 586,
							"nodeType": "ImportDirective",
							"scope": 653,
							"sourceUnit": 468,
							"src": "341:92:9",
							"symbolAliases": [
								{
									"foreign": {
										"id": 585,
										"name": "IOmnidexIncentivesController",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"src": "349:28:9",
										"typeDescriptions": {}
									}
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/Omnidex-incentives/lib/DistributionTypes.sol",
							"file": "../lib/DistributionTypes.sol",
							"id": 588,
							"nodeType": "ImportDirective",
							"scope": 653,
							"sourceUnit": 486,
							"src": "544:63:9",
							"symbolAliases": [
								{
									"foreign": {
										"id": 587,
										"name": "DistributionTypes",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"src": "552:17:9",
										"typeDescriptions": {}
									}
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/Omnidex-incentives/utils/DataTypes.sol",
							"file": "../utils/DataTypes.sol",
							"id": 590,
							"nodeType": "ImportDirective",
							"scope": 653,
							"sourceUnit": 691,
							"src": "609:49:9",
							"symbolAliases": [
								{
									"foreign": {
										"id": 589,
										"name": "DataTypes",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"src": "617:9:9",
										"typeDescriptions": {}
									}
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/Omnidex-incentives/interfaces/ILendingPoolData.sol",
							"file": "../interfaces/ILendingPoolData.sol",
							"id": 592,
							"nodeType": "ImportDirective",
							"scope": 653,
							"sourceUnit": 260,
							"src": "660:68:9",
							"symbolAliases": [
								{
									"foreign": {
										"id": 591,
										"name": "ILendingPoolData",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"src": "668:16:9",
										"typeDescriptions": {}
									}
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/Omnidex-incentives/interfaces/IOTokenDetailed.sol",
							"file": "../interfaces/IOTokenDetailed.sol",
							"id": 594,
							"nodeType": "ImportDirective",
							"scope": 653,
							"sourceUnit": 268,
							"src": "730:66:9",
							"symbolAliases": [
								{
									"foreign": {
										"id": 593,
										"name": "IOTokenDetailed",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"src": "738:15:9",
										"typeDescriptions": {}
									}
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/Omnidex-incentives/utils/PercentageMath.sol",
							"file": "../utils/PercentageMath.sol",
							"id": 596,
							"nodeType": "ImportDirective",
							"scope": 653,
							"sourceUnit": 799,
							"src": "798:59:9",
							"symbolAliases": [
								{
									"foreign": {
										"id": 595,
										"name": "PercentageMath",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"src": "806:14:9",
										"typeDescriptions": {}
									}
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/Omnidex-incentives/lib/SafeMath.sol",
							"file": "../lib/SafeMath.sol",
							"id": 598,
							"nodeType": "ImportDirective",
							"scope": 653,
							"sourceUnit": 576,
							"src": "859:45:9",
							"symbolAliases": [
								{
									"foreign": {
										"id": 597,
										"name": "SafeMath",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"src": "867:8:9",
										"typeDescriptions": {}
									}
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 652,
							"linearizedBaseContracts": [
								652
							],
							"name": "TestConfig",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"id": 601,
									"libraryName": {
										"id": 599,
										"name": "SafeMath",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 575,
										"src": "939:8:9",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_SafeMath_$575",
											"typeString": "library SafeMath"
										}
									},
									"nodeType": "UsingForDirective",
									"src": "933:27:9",
									"typeName": {
										"id": 600,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "952:7:9",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"id": 604,
									"libraryName": {
										"id": 602,
										"name": "PercentageMath",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 798,
										"src": "970:14:9",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_PercentageMath_$798",
											"typeString": "library PercentageMath"
										}
									},
									"nodeType": "UsingForDirective",
									"src": "964:33:9",
									"typeName": {
										"id": 603,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "989:7:9",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"constant": true,
									"id": 607,
									"mutability": "constant",
									"name": "POOL_CONFIGURATOR",
									"nodeType": "VariableDeclaration",
									"scope": 652,
									"src": "1113:79:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 605,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "1113:7:9",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"value": {
										"hexValue": "307832463735664544413734323344384238353938386439353435343238643030663332313343463030",
										"id": 606,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1150:42:9",
										"typeDescriptions": {
											"typeIdentifier": "t_address_payable",
											"typeString": "address payable"
										},
										"value": "0x2F75fEDA7423D8B85988d9545428d00f3213CF00"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"id": 610,
									"mutability": "constant",
									"name": "myreserves",
									"nodeType": "VariableDeclaration",
									"scope": 652,
									"src": "1242:72:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 608,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "1242:7:9",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"value": {
										"hexValue": "307838313865633041374665313846663934323639393034664345443641453344614536643664433062",
										"id": 609,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1272:42:9",
										"typeDescriptions": {
											"typeIdentifier": "t_address_payable",
											"typeString": "address payable"
										},
										"value": "0x818ec0A7Fe18Ff94269904fCED6AE3DaE6d6dC0b"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"id": 613,
									"mutability": "constant",
									"name": "myoTokenImplementations",
									"nodeType": "VariableDeclaration",
									"scope": 652,
									"src": "1319:85:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 611,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "1319:7:9",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"value": {
										"hexValue": "307836334430333439326344323663304331663733613536336637656142373962353233333438353241",
										"id": 612,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1362:42:9",
										"typeDescriptions": {
											"typeIdentifier": "t_address_payable",
											"typeString": "address payable"
										},
										"value": "0x63D03492cD26c0C1f73a563f7eaB79b52334852A"
									},
									"visibility": "internal"
								},
								{
									"body": {
										"id": 629,
										"nodeType": "Block",
										"src": "1445:206:9",
										"statements": [
											{
												"assignments": [
													617
												],
												"declarations": [
													{
														"constant": false,
														"id": 617,
														"mutability": "mutable",
														"name": "poolConfigurator",
														"nodeType": "VariableDeclaration",
														"scope": 629,
														"src": "1458:41:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_ILendingPoolConfigurator_$245",
															"typeString": "contract ILendingPoolConfigurator"
														},
														"typeName": {
															"id": 616,
															"name": "ILendingPoolConfigurator",
															"nodeType": "UserDefinedTypeName",
															"referencedDeclaration": 245,
															"src": "1458:24:9",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_ILendingPoolConfigurator_$245",
																"typeString": "contract ILendingPoolConfigurator"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 621,
												"initialValue": {
													"arguments": [
														{
															"id": 619,
															"name": "POOL_CONFIGURATOR",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 607,
															"src": "1527:17:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 618,
														"name": "ILendingPoolConfigurator",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 245,
														"src": "1502:24:9",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_contract$_ILendingPoolConfigurator_$245_$",
															"typeString": "type(contract ILendingPoolConfigurator)"
														}
													},
													"id": 620,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1502:43:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_ILendingPoolConfigurator_$245",
														"typeString": "contract ILendingPoolConfigurator"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1458:87:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 625,
															"name": "myreserves",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 610,
															"src": "1609:10:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 626,
															"name": "myoTokenImplementations",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 613,
															"src": "1621:23:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 622,
															"name": "poolConfigurator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 617,
															"src": "1579:16:9",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_ILendingPoolConfigurator_$245",
																"typeString": "contract ILendingPoolConfigurator"
															}
														},
														"id": 624,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "updateOToken",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 237,
														"src": "1579:29:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address) external"
														}
													},
													"id": 627,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1579:66:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 628,
												"nodeType": "ExpressionStatement",
												"src": "1579:66:9"
											}
										]
									},
									"functionSelector": "027eca31",
									"id": 630,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "executeFixed",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 614,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1432:2:9"
									},
									"returnParameters": {
										"id": 615,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1445:0:9"
									},
									"scope": 652,
									"src": "1411:240:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 650,
										"nodeType": "Block",
										"src": "1744:208:9",
										"statements": [
											{
												"assignments": [
													638
												],
												"declarations": [
													{
														"constant": false,
														"id": 638,
														"mutability": "mutable",
														"name": "poolConfigurator",
														"nodeType": "VariableDeclaration",
														"scope": 650,
														"src": "1757:41:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_ILendingPoolConfigurator_$245",
															"typeString": "contract ILendingPoolConfigurator"
														},
														"typeName": {
															"id": 637,
															"name": "ILendingPoolConfigurator",
															"nodeType": "UserDefinedTypeName",
															"referencedDeclaration": 245,
															"src": "1757:24:9",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_ILendingPoolConfigurator_$245",
																"typeString": "contract ILendingPoolConfigurator"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 642,
												"initialValue": {
													"arguments": [
														{
															"id": 640,
															"name": "POOL_CONFIGURATOR",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 607,
															"src": "1826:17:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 639,
														"name": "ILendingPoolConfigurator",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 245,
														"src": "1801:24:9",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_contract$_ILendingPoolConfigurator_$245_$",
															"typeString": "type(contract ILendingPoolConfigurator)"
														}
													},
													"id": 641,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1801:43:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_ILendingPoolConfigurator_$245",
														"typeString": "contract ILendingPoolConfigurator"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1757:87:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 646,
															"name": "_reserves",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 632,
															"src": "1908:9:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 647,
															"name": "_myoTokenImplementations",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 634,
															"src": "1919:24:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 643,
															"name": "poolConfigurator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 638,
															"src": "1878:16:9",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_ILendingPoolConfigurator_$245",
																"typeString": "contract ILendingPoolConfigurator"
															}
														},
														"id": 645,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "updateOToken",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 237,
														"src": "1878:29:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address) external"
														}
													},
													"id": 648,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1878:66:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 649,
												"nodeType": "ExpressionStatement",
												"src": "1878:66:9"
											}
										]
									},
									"functionSelector": "eca98adb",
									"id": 651,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "executeChange",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 635,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 632,
												"mutability": "mutable",
												"name": "_reserves",
												"nodeType": "VariableDeclaration",
												"scope": 651,
												"src": "1681:17:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 631,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1681:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 634,
												"mutability": "mutable",
												"name": "_myoTokenImplementations",
												"nodeType": "VariableDeclaration",
												"scope": 651,
												"src": "1700:32:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 633,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1700:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1680:53:9"
									},
									"returnParameters": {
										"id": 636,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1744:0:9"
									},
									"scope": 652,
									"src": "1657:295:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 653,
							"src": "908:1047:9"
						}
					],
					"src": "38:1923:9"
				},
				"id": 9
			},
			"contracts/Omnidex-incentives/utils/DataTypes.sol": {
				"ast": {
					"absolutePath": "contracts/Omnidex-incentives/utils/DataTypes.sol",
					"exportedSymbols": {
						"DataTypes": [
							690
						]
					},
					"id": 691,
					"license": "agpl-3.0",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 654,
							"literals": [
								"solidity",
								"0.7",
								".5"
							],
							"nodeType": "PragmaDirective",
							"src": "38:22:10"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"fullyImplemented": true,
							"id": 690,
							"linearizedBaseContracts": [
								690
							],
							"name": "DataTypes",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "DataTypes.ReserveData",
									"id": 679,
									"members": [
										{
											"constant": false,
											"id": 656,
											"mutability": "mutable",
											"name": "configuration",
											"nodeType": "VariableDeclaration",
											"scope": 679,
											"src": "257:37:10",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_ReserveConfigurationMap_$682_storage_ptr",
												"typeString": "struct DataTypes.ReserveConfigurationMap"
											},
											"typeName": {
												"id": 655,
												"name": "ReserveConfigurationMap",
												"nodeType": "UserDefinedTypeName",
												"referencedDeclaration": 682,
												"src": "257:23:10",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_ReserveConfigurationMap_$682_storage_ptr",
													"typeString": "struct DataTypes.ReserveConfigurationMap"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 658,
											"mutability": "mutable",
											"name": "liquidityIndex",
											"nodeType": "VariableDeclaration",
											"scope": 679,
											"src": "346:22:10",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint128",
												"typeString": "uint128"
											},
											"typeName": {
												"id": 657,
												"name": "uint128",
												"nodeType": "ElementaryTypeName",
												"src": "346:7:10",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 660,
											"mutability": "mutable",
											"name": "variableBorrowIndex",
											"nodeType": "VariableDeclaration",
											"scope": 679,
											"src": "422:27:10",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint128",
												"typeString": "uint128"
											},
											"typeName": {
												"id": 659,
												"name": "uint128",
												"nodeType": "ElementaryTypeName",
												"src": "422:7:10",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 662,
											"mutability": "mutable",
											"name": "currentLiquidityRate",
											"nodeType": "VariableDeclaration",
											"scope": 679,
											"src": "505:28:10",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint128",
												"typeString": "uint128"
											},
											"typeName": {
												"id": 661,
												"name": "uint128",
												"nodeType": "ElementaryTypeName",
												"src": "505:7:10",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 664,
											"mutability": "mutable",
											"name": "currentVariableBorrowRate",
											"nodeType": "VariableDeclaration",
											"scope": 679,
											"src": "598:33:10",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint128",
												"typeString": "uint128"
											},
											"typeName": {
												"id": 663,
												"name": "uint128",
												"nodeType": "ElementaryTypeName",
												"src": "598:7:10",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 666,
											"mutability": "mutable",
											"name": "currentStableBorrowRate",
											"nodeType": "VariableDeclaration",
											"scope": 679,
											"src": "694:31:10",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint128",
												"typeString": "uint128"
											},
											"typeName": {
												"id": 665,
												"name": "uint128",
												"nodeType": "ElementaryTypeName",
												"src": "694:7:10",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 668,
											"mutability": "mutable",
											"name": "lastUpdateTimestamp",
											"nodeType": "VariableDeclaration",
											"scope": 679,
											"src": "732:26:10",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint40",
												"typeString": "uint40"
											},
											"typeName": {
												"id": 667,
												"name": "uint40",
												"nodeType": "ElementaryTypeName",
												"src": "732:6:10",
												"typeDescriptions": {
													"typeIdentifier": "t_uint40",
													"typeString": "uint40"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 670,
											"mutability": "mutable",
											"name": "oTokenAddress",
											"nodeType": "VariableDeclaration",
											"scope": 679,
											"src": "789:21:10",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 669,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "789:7:10",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 672,
											"mutability": "mutable",
											"name": "stableDebtTokenAddress",
											"nodeType": "VariableDeclaration",
											"scope": 679,
											"src": "817:30:10",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 671,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "817:7:10",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 674,
											"mutability": "mutable",
											"name": "variableDebtTokenAddress",
											"nodeType": "VariableDeclaration",
											"scope": 679,
											"src": "854:32:10",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 673,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "854:7:10",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 676,
											"mutability": "mutable",
											"name": "interestRateStrategyAddress",
											"nodeType": "VariableDeclaration",
											"scope": 679,
											"src": "938:35:10",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 675,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "938:7:10",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 678,
											"mutability": "mutable",
											"name": "id",
											"nodeType": "VariableDeclaration",
											"scope": 679,
											"src": "1069:8:10",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint8",
												"typeString": "uint8"
											},
											"typeName": {
												"id": 677,
												"name": "uint8",
												"nodeType": "ElementaryTypeName",
												"src": "1069:5:10",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "ReserveData",
									"nodeType": "StructDefinition",
									"scope": 690,
									"src": "191:892:10",
									"visibility": "public"
								},
								{
									"canonicalName": "DataTypes.ReserveConfigurationMap",
									"id": 682,
									"members": [
										{
											"constant": false,
											"id": 681,
											"mutability": "mutable",
											"name": "data",
											"nodeType": "VariableDeclaration",
											"scope": 682,
											"src": "1444:12:10",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 680,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1444:7:10",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "ReserveConfigurationMap",
									"nodeType": "StructDefinition",
									"scope": 690,
									"src": "1089:373:10",
									"visibility": "public"
								},
								{
									"canonicalName": "DataTypes.UserConfigurationMap",
									"id": 685,
									"members": [
										{
											"constant": false,
											"id": 684,
											"mutability": "mutable",
											"name": "data",
											"nodeType": "VariableDeclaration",
											"scope": 685,
											"src": "1503:12:10",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 683,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1503:7:10",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "UserConfigurationMap",
									"nodeType": "StructDefinition",
									"scope": 690,
									"src": "1468:53:10",
									"visibility": "public"
								},
								{
									"canonicalName": "DataTypes.InterestRateMode",
									"id": 689,
									"members": [
										{
											"id": 686,
											"name": "NONE",
											"nodeType": "EnumValue",
											"src": "1550:4:10"
										},
										{
											"id": 687,
											"name": "STABLE",
											"nodeType": "EnumValue",
											"src": "1556:6:10"
										},
										{
											"id": 688,
											"name": "VARIABLE",
											"nodeType": "EnumValue",
											"src": "1564:8:10"
										}
									],
									"name": "InterestRateMode",
									"nodeType": "EnumDefinition",
									"src": "1527:46:10"
								}
							],
							"scope": 691,
							"src": "64:1512:10"
						}
					],
					"src": "38:1540:10"
				},
				"id": 10
			},
			"contracts/Omnidex-incentives/utils/PercentageMath.sol": {
				"ast": {
					"absolutePath": "contracts/Omnidex-incentives/utils/PercentageMath.sol",
					"exportedSymbols": {
						"PercentageMath": [
							798
						]
					},
					"id": 799,
					"license": "agpl-3.0",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 692,
							"literals": [
								"solidity",
								"0.7",
								".5"
							],
							"nodeType": "PragmaDirective",
							"src": "38:22:11"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 693,
								"nodeType": "StructuredDocumentation",
								"src": "64:300:11",
								"text": " @title PercentageMath library\n @author Omnidex\n @notice Provides functions to perform percentage calculations\n @dev Percentages are defined by default with 2 decimals of precision (100.00). The precision is indicated by PERCENTAGE_FACTOR\n @dev Operations are rounded half up*"
							},
							"fullyImplemented": true,
							"id": 798,
							"linearizedBaseContracts": [
								798
							],
							"name": "PercentageMath",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"id": 696,
									"mutability": "constant",
									"name": "PERCENTAGE_FACTOR",
									"nodeType": "VariableDeclaration",
									"scope": 798,
									"src": "396:40:11",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 694,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "396:7:11",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "316534",
										"id": 695,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "433:3:11",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_10000_by_1",
											"typeString": "int_const 10000"
										},
										"value": "1e4"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"id": 701,
									"mutability": "constant",
									"name": "HALF_PERCENT",
									"nodeType": "VariableDeclaration",
									"scope": 798,
									"src": "472:53:11",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 697,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "472:7:11",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"commonType": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										},
										"id": 700,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"lValueRequested": false,
										"leftExpression": {
											"id": 698,
											"name": "PERCENTAGE_FACTOR",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 696,
											"src": "504:17:11",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "BinaryOperation",
										"operator": "/",
										"rightExpression": {
											"hexValue": "32",
											"id": 699,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "524:1:11",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_2_by_1",
												"typeString": "int_const 2"
											},
											"value": "2"
										},
										"src": "504:21:11",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "internal"
								},
								{
									"body": {
										"id": 747,
										"nodeType": "Block",
										"src": "865:270:11",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 717,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 713,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 711,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 704,
															"src": "876:5:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "30",
															"id": 712,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "885:1:11",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "876:10:11",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 716,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 714,
															"name": "percentage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 706,
															"src": "890:10:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "30",
															"id": 715,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "904:1:11",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "890:15:11",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "876:29:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 721,
												"nodeType": "IfStatement",
												"src": "872:60:11",
												"trueBody": {
													"id": 720,
													"nodeType": "Block",
													"src": "907:25:11",
													"statements": [
														{
															"expression": {
																"hexValue": "30",
																"id": 718,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "923:1:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"functionReturnParameters": 710,
															"id": 719,
															"nodeType": "Return",
															"src": "916:8:11"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 734,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 723,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 704,
																"src": "956:5:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 733,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 730,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"expression": {
																					"arguments": [
																						{
																							"id": 726,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"lValueRequested": false,
																							"nodeType": "ElementaryTypeNameExpression",
																							"src": "971:7:11",
																							"typeDescriptions": {
																								"typeIdentifier": "t_type$_t_uint256_$",
																								"typeString": "type(uint256)"
																							},
																							"typeName": {
																								"id": 725,
																								"name": "uint256",
																								"nodeType": "ElementaryTypeName",
																								"src": "971:7:11",
																								"typeDescriptions": {}
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_type$_t_uint256_$",
																								"typeString": "type(uint256)"
																							}
																						],
																						"id": 724,
																						"name": "type",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": -27,
																						"src": "966:4:11",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																							"typeString": "function () pure"
																						}
																					},
																					"id": 727,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "966:13:11",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_magic_meta_type_t_uint256",
																						"typeString": "type(uint256)"
																					}
																				},
																				"id": 728,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"memberName": "max",
																				"nodeType": "MemberAccess",
																				"src": "966:17:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "-",
																			"rightExpression": {
																				"id": 729,
																				"name": "HALF_PERCENT",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 701,
																				"src": "986:12:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "966:32:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 731,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "965:34:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"id": 732,
																	"name": "percentage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 706,
																	"src": "1002:10:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "965:47:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "956:56:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4d4154485f4d554c5449504c49434154494f4e5f4f564552464c4f57",
															"id": 735,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1021:30:11",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_6b96bc99e56604df6600e4ce66f7e91bdc3417f453200fce123d801c60b50ff8",
																"typeString": "literal_string \"MATH_MULTIPLICATION_OVERFLOW\""
															},
															"value": "MATH_MULTIPLICATION_OVERFLOW"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_6b96bc99e56604df6600e4ce66f7e91bdc3417f453200fce123d801c60b50ff8",
																"typeString": "literal_string \"MATH_MULTIPLICATION_OVERFLOW\""
															}
														],
														"id": 722,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "940:7:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 736,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "940:118:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 737,
												"nodeType": "ExpressionStatement",
												"src": "940:118:11"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 745,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 742,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 740,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 738,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 704,
																		"src": "1075:5:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 739,
																		"name": "percentage",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 706,
																		"src": "1083:10:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "1075:18:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "+",
																"rightExpression": {
																	"id": 741,
																	"name": "HALF_PERCENT",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 701,
																	"src": "1096:12:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1075:33:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 743,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "1074:35:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"id": 744,
														"name": "PERCENTAGE_FACTOR",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 696,
														"src": "1112:17:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1074:55:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 710,
												"id": 746,
												"nodeType": "Return",
												"src": "1067:62:11"
											}
										]
									},
									"documentation": {
										"id": 702,
										"nodeType": "StructuredDocumentation",
										"src": "532:242:11",
										"text": " @dev Executes a percentage multiplication\n @param value The value of which the percentage needs to be calculated\n @param percentage The percentage of the value to be calculated\n @return The percentage of value*"
									},
									"id": 748,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "percentMul",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 707,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 704,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 748,
												"src": "798:13:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 703,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "798:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 706,
												"mutability": "mutable",
												"name": "percentage",
												"nodeType": "VariableDeclaration",
												"scope": 748,
												"src": "813:18:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 705,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "813:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "797:35:11"
									},
									"returnParameters": {
										"id": 710,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 709,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 748,
												"src": "856:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 708,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "856:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "855:9:11"
									},
									"scope": 798,
									"src": "778:357:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 796,
										"nodeType": "Block",
										"src": "1477:317:11",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 761,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 759,
																"name": "percentage",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 753,
																"src": "1492:10:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"hexValue": "30",
																"id": 760,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1506:1:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1492:15:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4d4154485f4449564953494f4e5f42595f5a45524f",
															"id": 762,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1509:23:11",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_fc36c1c4be38334abb76a97aea9858f5dd129f9a5a734dbf8928b30d7094d3d9",
																"typeString": "literal_string \"MATH_DIVISION_BY_ZERO\""
															},
															"value": "MATH_DIVISION_BY_ZERO"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_fc36c1c4be38334abb76a97aea9858f5dd129f9a5a734dbf8928b30d7094d3d9",
																"typeString": "literal_string \"MATH_DIVISION_BY_ZERO\""
															}
														],
														"id": 758,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "1484:7:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 763,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1484:49:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 764,
												"nodeType": "ExpressionStatement",
												"src": "1484:49:11"
											},
											{
												"assignments": [
													766
												],
												"declarations": [
													{
														"constant": false,
														"id": 766,
														"mutability": "mutable",
														"name": "halfPercentage",
														"nodeType": "VariableDeclaration",
														"scope": 796,
														"src": "1540:22:11",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 765,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1540:7:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 770,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 769,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 767,
														"name": "percentage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 753,
														"src": "1565:10:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"hexValue": "32",
														"id": 768,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1578:1:11",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_2_by_1",
															"typeString": "int_const 2"
														},
														"value": "2"
													},
													"src": "1565:14:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1540:39:11"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 783,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 772,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 751,
																"src": "1604:5:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 782,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 779,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"expression": {
																					"arguments": [
																						{
																							"id": 775,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"lValueRequested": false,
																							"nodeType": "ElementaryTypeNameExpression",
																							"src": "1619:7:11",
																							"typeDescriptions": {
																								"typeIdentifier": "t_type$_t_uint256_$",
																								"typeString": "type(uint256)"
																							},
																							"typeName": {
																								"id": 774,
																								"name": "uint256",
																								"nodeType": "ElementaryTypeName",
																								"src": "1619:7:11",
																								"typeDescriptions": {}
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_type$_t_uint256_$",
																								"typeString": "type(uint256)"
																							}
																						],
																						"id": 773,
																						"name": "type",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": -27,
																						"src": "1614:4:11",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																							"typeString": "function () pure"
																						}
																					},
																					"id": 776,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "1614:13:11",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_magic_meta_type_t_uint256",
																						"typeString": "type(uint256)"
																					}
																				},
																				"id": 777,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"memberName": "max",
																				"nodeType": "MemberAccess",
																				"src": "1614:17:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "-",
																			"rightExpression": {
																				"id": 778,
																				"name": "halfPercentage",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 766,
																				"src": "1634:14:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "1614:34:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 780,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "1613:36:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"id": 781,
																	"name": "PERCENTAGE_FACTOR",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 696,
																	"src": "1652:17:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1613:56:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1604:65:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4d4154485f4d554c5449504c49434154494f4e5f4f564552464c4f57",
															"id": 784,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1678:30:11",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_6b96bc99e56604df6600e4ce66f7e91bdc3417f453200fce123d801c60b50ff8",
																"typeString": "literal_string \"MATH_MULTIPLICATION_OVERFLOW\""
															},
															"value": "MATH_MULTIPLICATION_OVERFLOW"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_6b96bc99e56604df6600e4ce66f7e91bdc3417f453200fce123d801c60b50ff8",
																"typeString": "literal_string \"MATH_MULTIPLICATION_OVERFLOW\""
															}
														],
														"id": 771,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "1588:7:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 785,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1588:127:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 786,
												"nodeType": "ExpressionStatement",
												"src": "1588:127:11"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 794,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 791,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 789,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 787,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 751,
																		"src": "1732:5:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 788,
																		"name": "PERCENTAGE_FACTOR",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 696,
																		"src": "1740:17:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "1732:25:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "+",
																"rightExpression": {
																	"id": 790,
																	"name": "halfPercentage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 766,
																	"src": "1760:14:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1732:42:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 792,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "1731:44:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"id": 793,
														"name": "percentage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 753,
														"src": "1778:10:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1731:57:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 757,
												"id": 795,
												"nodeType": "Return",
												"src": "1724:64:11"
											}
										]
									},
									"documentation": {
										"id": 749,
										"nodeType": "StructuredDocumentation",
										"src": "1141:245:11",
										"text": " @dev Executes a percentage division\n @param value The value of which the percentage needs to be calculated\n @param percentage The percentage of the value to be calculated\n @return The value divided the percentage*"
									},
									"id": 797,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "percentDiv",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 754,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 751,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 797,
												"src": "1410:13:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 750,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1410:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 753,
												"mutability": "mutable",
												"name": "percentage",
												"nodeType": "VariableDeclaration",
												"scope": 797,
												"src": "1425:18:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 752,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1425:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1409:35:11"
									},
									"returnParameters": {
										"id": 757,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 756,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 797,
												"src": "1468:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 755,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1468:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1467:9:11"
									},
									"scope": 798,
									"src": "1390:404:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 799,
							"src": "368:1429:11"
						}
					],
					"src": "38:1761:11"
				},
				"id": 11
			}
		}
	}
}