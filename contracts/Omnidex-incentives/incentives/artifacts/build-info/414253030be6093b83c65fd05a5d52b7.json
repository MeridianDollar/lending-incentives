{
	"id": "414253030be6093b83c65fd05a5d52b7",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.7.5",
	"solcLongVersion": "0.7.5+commit.eb77ed08",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/Omnidex-incentives/incentives/PullRewardsIncentivesController.sol": {
				"content": "// SPDX-License-Identifier: agpl-3.0\r\npragma solidity 0.7.5;\r\npragma experimental ABIEncoderV2;\r\n\r\nimport {IERC20} from '@aave/aave-stake/contracts/interfaces/IERC20.sol';\r\nimport {SafeERC20} from '@aave/aave-stake/contracts/lib/SafeERC20.sol';\r\n\r\nimport {BaseIncentivesController} from './base/BaseIncentivesController.sol';\r\n\r\n/**\r\n * @title PullRewardsIncentivesController\r\n * @notice Distributor contract for ERC20 rewards to the Omnidex protocol participants that pulls ERC20 from external account\r\n * @author Omnidex\r\n **/\r\ncontract PullRewardsIncentivesController is\r\n  BaseIncentivesController\r\n{\r\n  using SafeERC20 for IERC20;\r\n\r\n  address internal _rewardsVault;\r\n\r\n  event RewardsVaultUpdated(address indexed vault);\r\n  \r\n  constructor(IERC20 rewardToken, address emissionManager)\r\n    BaseIncentivesController(rewardToken, emissionManager)\r\n  {}\r\n\r\n  /**\r\n   * @dev Initialize OmnidexIncentivesController\r\n   * @param rewardsVault rewards vault to pull ERC20 funds\r\n   **/\r\n  function initialize(address rewardsVault) external initializer {\r\n    _rewardsVault = rewardsVault;\r\n    emit RewardsVaultUpdated(_rewardsVault);\r\n  }\r\n\r\n  /**\r\n   * @dev returns the current rewards vault contract\r\n   * @return address\r\n   */\r\n  function getRewardsVault() external view returns (address) {\r\n    return _rewardsVault;\r\n  }\r\n\r\n  /**\r\n   * @dev update the rewards vault address, only allowed by the Rewards admin\r\n   * @param rewardsVault The address of the rewards vault\r\n   **/\r\n  function setRewardsVault(address rewardsVault) external onlyEmissionManager {\r\n    _rewardsVault = rewardsVault;\r\n    emit RewardsVaultUpdated(rewardsVault);\r\n  }\r\n\r\n \r\n  /// @inheritdoc BaseIncentivesController\r\n  function _transferRewards(address to, uint256 amount) internal override {\r\n    IERC20(REWARD_TOKEN).safeTransferFrom(_rewardsVault, to, amount);\r\n  }\r\n}"
			},
			"contracts/Omnidex-incentives/incentives/base/BaseIncentivesController.sol": {
				"content": "// SPDX-License-Identifier: agpl-3.0\r\npragma solidity 0.7.5;\r\npragma experimental ABIEncoderV2;\r\n\r\nimport {SafeMath} from '../../lib/SafeMath.sol';\r\nimport {DistributionTypes} from '../../lib/DistributionTypes.sol';\r\nimport {VersionedInitializable} from '@aave/aave-stake/contracts/utils/VersionedInitializable.sol';\r\nimport {DistributionManager} from './DistributionManager.sol';\r\nimport {IERC20} from '@aave/aave-stake/contracts/interfaces/IERC20.sol';\r\nimport {IScaledBalanceToken} from '../../interfaces/IScaledBalanceToken.sol';\r\nimport {IOmnidexIncentivesController} from '../../interfaces/IOmnidexIncentivesController.sol';\r\n\r\n/**\r\n * @title BaseIncentivesController\r\n * @notice Abstract contract template to build Distributors contracts for ERC20 rewards to protocol participants\r\n * @author Omnidex\r\n **/\r\nabstract contract BaseIncentivesController is\r\n  IOmnidexIncentivesController,\r\n  VersionedInitializable,\r\n  DistributionManager\r\n{\r\n  using SafeMath for uint256;\r\n\r\n  uint256 public constant REVISION = 1;\r\n\r\n  address public immutable override REWARD_TOKEN;\r\n\r\n  mapping(address => uint256) internal _usersUnclaimedRewards;\r\n\r\n  // this mapping allows whitelisted addresses to claim on behalf of others\r\n  // useful for contracts that hold tokens to be rewarded but don't have any native logic to claim Liquidity Mining rewards\r\n  mapping(address => address) internal _authorizedClaimers;\r\n\r\n  modifier onlyAuthorizedClaimers(address claimer, address user) {\r\n    require(_authorizedClaimers[user] == claimer, 'CLAIMER_UNAUTHORIZED');\r\n    _;\r\n  }\r\n\r\n  constructor(IERC20 rewardToken, address emissionManager)\r\n    DistributionManager(emissionManager)\r\n  {\r\n    REWARD_TOKEN = address(rewardToken);\r\n  }\r\n\r\n  /// @inheritdoc IOmnidexIncentivesController\r\n  function configureAssets(address[] calldata assets, uint256[] calldata emissionsPerSecond)\r\n    external\r\n    override\r\n    onlyEmissionManager\r\n  {\r\n    require(assets.length == emissionsPerSecond.length, 'INVALID_CONFIGURATION');\r\n\r\n    DistributionTypes.AssetConfigInput[] memory assetsConfig =\r\n      new DistributionTypes.AssetConfigInput[](assets.length);\r\n\r\n    for (uint256 i = 0; i < assets.length; i++) {\r\n      require(uint104(emissionsPerSecond[i]) == emissionsPerSecond[i], 'Index overflow at emissionsPerSecond');\r\n      assetsConfig[i].underlyingAsset = assets[i];\r\n      assetsConfig[i].emissionPerSecond = uint104(emissionsPerSecond[i]);\r\n      assetsConfig[i].totalStaked = IScaledBalanceToken(assets[i]).scaledTotalSupply();\r\n    }\r\n    _configureAssets(assetsConfig);\r\n  }\r\n\r\n  /// @inheritdoc IOmnidexIncentivesController\r\n  function handleAction(\r\n    address user,\r\n    uint256 totalSupply,\r\n    uint256 userBalance\r\n  ) external override {\r\n    uint256 accruedRewards = _updateUserAssetInternal(user, msg.sender, userBalance, totalSupply);\r\n    if (accruedRewards != 0) {\r\n      _usersUnclaimedRewards[user] = _usersUnclaimedRewards[user].add(accruedRewards);\r\n      emit RewardsAccrued(user, accruedRewards);\r\n    }\r\n  }\r\n\r\n  /// @inheritdoc IOmnidexIncentivesController\r\n  function getRewardsBalance(address[] calldata assets, address user)\r\n    external\r\n    view\r\n    override\r\n    returns (uint256)\r\n  {\r\n    uint256 unclaimedRewards = _usersUnclaimedRewards[user];\r\n\r\n    DistributionTypes.UserStakeInput[] memory userState =\r\n      new DistributionTypes.UserStakeInput[](assets.length);\r\n    for (uint256 i = 0; i < assets.length; i++) {\r\n      userState[i].underlyingAsset = assets[i];\r\n      (userState[i].stakedByUser, userState[i].totalStaked) = IScaledBalanceToken(assets[i])\r\n        .getScaledUserBalanceAndSupply(user);\r\n    }\r\n    unclaimedRewards = unclaimedRewards.add(_getUnclaimedRewards(user, userState));\r\n    return unclaimedRewards;\r\n  }\r\n\r\n  /// @inheritdoc IOmnidexIncentivesController\r\n  function claimRewards(\r\n    address[] calldata assets,\r\n    uint256 amount,\r\n    address to\r\n  ) external override returns (uint256) {\r\n    require(to != address(0), 'INVALID_TO_ADDRESS');\r\n    return _claimRewards(assets, amount, msg.sender, msg.sender, to);\r\n  }\r\n\r\n  /// @inheritdoc IOmnidexIncentivesController\r\n  function claimRewardsOnBehalf(\r\n    address[] calldata assets,\r\n    uint256 amount,\r\n    address user,\r\n    address to\r\n  ) external override onlyAuthorizedClaimers(msg.sender, user) returns (uint256) {\r\n    require(user != address(0), 'INVALID_USER_ADDRESS');\r\n    require(to != address(0), 'INVALID_TO_ADDRESS');\r\n    return _claimRewards(assets, amount, msg.sender, user, to);\r\n  }\r\n\r\n  /// @inheritdoc IOmnidexIncentivesController\r\n  function claimRewardsToSelf(address[] calldata assets, uint256 amount)\r\n    external\r\n    override\r\n    returns (uint256)\r\n  {\r\n    return _claimRewards(assets, amount, msg.sender, msg.sender, msg.sender);\r\n  }\r\n\r\n  /// @inheritdoc IOmnidexIncentivesController\r\n  function setClaimer(address user, address caller) external override onlyEmissionManager {\r\n    _authorizedClaimers[user] = caller;\r\n    emit ClaimerSet(user, caller);\r\n  }\r\n\r\n  /// @inheritdoc IOmnidexIncentivesController\r\n  function getClaimer(address user) external view override returns (address) {\r\n    return _authorizedClaimers[user];\r\n  }\r\n\r\n  /// @inheritdoc IOmnidexIncentivesController\r\n  function getUserUnclaimedRewards(address _user) external view override returns (uint256) {\r\n    return _usersUnclaimedRewards[_user];\r\n  }\r\n\r\n  /**\r\n   * @dev returns the revision of the implementation contract\r\n   */\r\n  function getRevision() internal pure override returns (uint256) {\r\n    return REVISION;\r\n  }\r\n\r\n  /**\r\n   * @dev Claims reward for an user on behalf, on all the assets of the lending pool, accumulating the pending rewards.\r\n   * @param amount Amount of rewards to claim\r\n   * @param user Address to check and claim rewards\r\n   * @param to Address that will be receiving the rewards\r\n   * @return Rewards claimed\r\n   **/\r\n  function _claimRewards(\r\n    address[] calldata assets,\r\n    uint256 amount,\r\n    address claimer,\r\n    address user,\r\n    address to\r\n  ) internal returns (uint256) {\r\n    if (amount == 0) {\r\n      return 0;\r\n    }\r\n    uint256 unclaimedRewards = _usersUnclaimedRewards[user];\r\n\r\n    if (amount > unclaimedRewards) {\r\n      DistributionTypes.UserStakeInput[] memory userState =\r\n        new DistributionTypes.UserStakeInput[](assets.length);\r\n      for (uint256 i = 0; i < assets.length; i++) {\r\n        userState[i].underlyingAsset = assets[i];\r\n        (userState[i].stakedByUser, userState[i].totalStaked) = IScaledBalanceToken(assets[i])\r\n          .getScaledUserBalanceAndSupply(user);\r\n      }\r\n\r\n      uint256 accruedRewards = _claimRewards(user, userState);\r\n      if (accruedRewards != 0) {\r\n        unclaimedRewards = unclaimedRewards.add(accruedRewards);\r\n        emit RewardsAccrued(user, accruedRewards);\r\n      }\r\n    }\r\n\r\n    if (unclaimedRewards == 0) {\r\n      return 0;\r\n    }\r\n\r\n    uint256 amountToClaim = amount > unclaimedRewards ? unclaimedRewards : amount;\r\n    _usersUnclaimedRewards[user] = unclaimedRewards - amountToClaim; // Safe due to the previous line\r\n\r\n    _transferRewards(to, amountToClaim);\r\n    emit RewardsClaimed(user, to, claimer, amountToClaim);\r\n\r\n    return amountToClaim;\r\n  }\r\n\r\n  /**\r\n   * @dev Abstract function to transfer rewards to the desired account\r\n   * @param to Account address to send the rewards\r\n   * @param amount Amount of rewards to transfer\r\n   */\r\n  function _transferRewards(address to, uint256 amount) internal virtual;\r\n}\r\n"
			},
			"@aave/aave-stake/contracts/lib/SafeERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n\npragma solidity 0.7.5;\n\nimport {IERC20} from '../interfaces/IERC20.sol';\nimport {SafeMath} from './SafeMath.sol';\nimport {Address} from './Address.sol';\n\n/**\n * @title SafeERC20\n * @dev From https://github.com/OpenZeppelin/openzeppelin-contracts\n * Wrappers around ERC20 operations that throw on failure (when the token\n * contract returns false). Tokens that return no value (and instead revert or\n * throw on failure) are also supported, non-reverting calls are assumed to be\n * successful.\n * To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\n * which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\n */\nlibrary SafeERC20 {\n  using SafeMath for uint256;\n  using Address for address;\n\n  function safeTransfer(\n    IERC20 token,\n    address to,\n    uint256 value\n  ) internal {\n    callOptionalReturn(token, abi.encodeWithSelector(token.transfer.selector, to, value));\n  }\n\n  function safeTransferFrom(\n    IERC20 token,\n    address from,\n    address to,\n    uint256 value\n  ) internal {\n    callOptionalReturn(token, abi.encodeWithSelector(token.transferFrom.selector, from, to, value));\n  }\n\n  function safeApprove(\n    IERC20 token,\n    address spender,\n    uint256 value\n  ) internal {\n    require(\n      (value == 0) || (token.allowance(address(this), spender) == 0),\n      'SafeERC20: approve from non-zero to non-zero allowance'\n    );\n    callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, value));\n  }\n\n  function callOptionalReturn(IERC20 token, bytes memory data) private {\n    require(address(token).isContract(), 'SafeERC20: call to non-contract');\n\n    // solhint-disable-next-line avoid-low-level-calls\n    (bool success, bytes memory returndata) = address(token).call(data);\n    require(success, 'SafeERC20: low-level call failed');\n\n    if (returndata.length > 0) {\n      // Return data is optional\n      // solhint-disable-next-line max-line-length\n      require(abi.decode(returndata, (bool)), 'SafeERC20: ERC20 operation did not succeed');\n    }\n  }\n}\n"
			},
			"@aave/aave-stake/contracts/interfaces/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity 0.7.5;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n * From https://github.com/OpenZeppelin/openzeppelin-contracts\n */\ninterface IERC20 {\n  /**\n   * @dev Returns the amount of tokens in existence.\n   */\n  function totalSupply() external view returns (uint256);\n\n  /**\n   * @dev Returns the amount of tokens owned by `account`.\n   */\n  function balanceOf(address account) external view returns (uint256);\n\n  /**\n   * @dev Moves `amount` tokens from the caller's account to `recipient`.\n   *\n   * Returns a boolean value indicating whether the operation succeeded.\n   *\n   * Emits a {Transfer} event.\n   */\n  function transfer(address recipient, uint256 amount) external returns (bool);\n\n  /**\n   * @dev Returns the remaining number of tokens that `spender` will be\n   * allowed to spend on behalf of `owner` through {transferFrom}. This is\n   * zero by default.\n   *\n   * This value changes when {approve} or {transferFrom} are called.\n   */\n  function allowance(address owner, address spender) external view returns (uint256);\n\n  /**\n   * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n   *\n   * Returns a boolean value indicating whether the operation succeeded.\n   *\n   * IMPORTANT: Beware that changing an allowance with this method brings the risk\n   * that someone may use both the old and the new allowance by unfortunate\n   * transaction ordering. One possible solution to mitigate this race\n   * condition is to first reduce the spender's allowance to 0 and set the\n   * desired value afterwards:\n   * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n   *\n   * Emits an {Approval} event.\n   */\n  function approve(address spender, uint256 amount) external returns (bool);\n\n  /**\n   * @dev Moves `amount` tokens from `sender` to `recipient` using the\n   * allowance mechanism. `amount` is then deducted from the caller's\n   * allowance.\n   *\n   * Returns a boolean value indicating whether the operation succeeded.\n   *\n   * Emits a {Transfer} event.\n   */\n  function transferFrom(\n    address sender,\n    address recipient,\n    uint256 amount\n  ) external returns (bool);\n\n  /**\n   * @dev Emitted when `value` tokens are moved from one account (`from`) to\n   * another (`to`).\n   *\n   * Note that `value` may be zero.\n   */\n  event Transfer(address indexed from, address indexed to, uint256 value);\n\n  /**\n   * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n   * a call to {approve}. `value` is the new allowance.\n   */\n  event Approval(address indexed owner, address indexed spender, uint256 value);\n}\n"
			},
			"contracts/Omnidex-incentives/interfaces/IOmnidexIncentivesController.sol": {
				"content": "// SPDX-License-Identifier: agpl-3.0\r\npragma solidity 0.7.5;\r\n\r\npragma experimental ABIEncoderV2;\r\n\r\nimport {IOmnidexDistributionManager} from '../interfaces/IOmnidexDistributionManager.sol';\r\n\r\ninterface IOmnidexIncentivesController is IOmnidexDistributionManager {\r\n  event RewardsAccrued(address indexed user, uint256 amount);\r\n\r\n  event RewardsClaimed(\r\n    address indexed user,\r\n    address indexed to,\r\n    address indexed claimer,\r\n    uint256 amount\r\n  );\r\n\r\n  event ClaimerSet(address indexed user, address indexed claimer);\r\n\r\n  /**\r\n   * @dev Whitelists an address to claim the rewards on behalf of another address\r\n   * @param user The address of the user\r\n   * @param claimer The address of the claimer\r\n   */\r\n  function setClaimer(address user, address claimer) external;\r\n\r\n  /**\r\n   * @dev Returns the whitelisted claimer for a certain address (0x0 if not set)\r\n   * @param user The address of the user\r\n   * @return The claimer address\r\n   */\r\n  function getClaimer(address user) external view returns (address);\r\n\r\n  /**\r\n   * @dev Configure assets for a certain rewards emission\r\n   * @param assets The assets to incentivize\r\n   * @param emissionsPerSecond The emission for each asset\r\n   */\r\n  function configureAssets(address[] calldata assets, uint256[] calldata emissionsPerSecond)\r\n    external;\r\n\r\n  /**\r\n   * @dev Called by the corresponding asset on any update that affects the rewards distribution\r\n   * @param asset The address of the user\r\n   * @param userBalance The balance of the user of the asset in the lending pool\r\n   * @param totalSupply The total supply of the asset in the lending pool\r\n   **/\r\n  function handleAction(\r\n    address asset,\r\n    uint256 userBalance,\r\n    uint256 totalSupply\r\n  ) external;\r\n\r\n  /**\r\n   * @dev Returns the total of rewards of an user, already accrued + not yet accrued\r\n   * @param user The address of the user\r\n   * @return The rewards\r\n   **/\r\n  function getRewardsBalance(address[] calldata assets, address user)\r\n    external\r\n    view\r\n    returns (uint256);\r\n\r\n  /**\r\n   * @dev Claims reward for an user to the desired address, on all the assets of the lending pool, accumulating the pending rewards\r\n   * @param amount Amount of rewards to claim\r\n   * @param to Address that will be receiving the rewards\r\n   * @return Rewards claimed\r\n   **/\r\n  function claimRewards(\r\n    address[] calldata assets,\r\n    uint256 amount,\r\n    address to\r\n  ) external returns (uint256);\r\n\r\n  /**\r\n   * @dev Claims reward for an user on behalf, on all the assets of the lending pool, accumulating the pending rewards. The caller must\r\n   * be whitelisted via \"allowClaimOnBehalf\" function by the RewardsAdmin role manager\r\n   * @param amount Amount of rewards to claim\r\n   * @param user Address to check and claim rewards\r\n   * @param to Address that will be receiving the rewards\r\n   * @return Rewards claimed\r\n   **/\r\n  function claimRewardsOnBehalf(\r\n    address[] calldata assets,\r\n    uint256 amount,\r\n    address user,\r\n    address to\r\n  ) external returns (uint256);\r\n\r\n  /**\r\n   * @dev Claims reward for msg.sender, on all the assets of the lending pool, accumulating the pending rewards\r\n   * @param amount Amount of rewards to claim\r\n   * @return Rewards claimed\r\n   **/\r\n  function claimRewardsToSelf(address[] calldata assets, uint256 amount) external returns (uint256);\r\n\r\n  /**\r\n   * @dev returns the unclaimed rewards of the user\r\n   * @param user the address of the user\r\n   * @return the unclaimed user rewards\r\n   */\r\n  function getUserUnclaimedRewards(address user) external view returns (uint256);\r\n\r\n  /**\r\n   * @dev for backward compatibility with previous implementation of the Incentives controller\r\n   */\r\n  function REWARD_TOKEN() external view returns (address);\r\n}\r\n"
			},
			"contracts/Omnidex-incentives/interfaces/IScaledBalanceToken.sol": {
				"content": "// SPDX-License-Identifier: agpl-3.0\r\npragma solidity 0.7.5;\r\n\r\ninterface IScaledBalanceToken {\r\n  /**\r\n   * @dev Returns the scaled balance of the user. The scaled balance is the sum of all the\r\n   * updated stored balance divided by the reserve's liquidity index at the moment of the update\r\n   * @param user The user whose balance is calculated\r\n   * @return The scaled balance of the user\r\n   **/\r\n  function scaledBalanceOf(address user) external view returns (uint256);\r\n\r\n  /**\r\n   * @dev Returns the scaled balance of the user and the scaled total supply.\r\n   * @param user The address of the user\r\n   * @return The scaled balance of the user\r\n   * @return The scaled balance and the scaled total supply\r\n   **/\r\n  function getScaledUserBalanceAndSupply(address user) external view returns (uint256, uint256);\r\n\r\n  /**\r\n   * @dev Returns the scaled total supply of the token. Represents sum(debt/index)\r\n   * @return The scaled total supply\r\n   **/\r\n  function scaledTotalSupply() external view returns (uint256);\r\n}\r\n"
			},
			"contracts/Omnidex-incentives/incentives/base/DistributionManager.sol": {
				"content": "// SPDX-License-Identifier: agpl-3.0\r\npragma solidity 0.7.5;\r\npragma experimental ABIEncoderV2;\r\n\r\nimport {IOmnidexDistributionManager} from '../../interfaces/IOmnidexDistributionManager.sol';\r\nimport {SafeMath} from '../../lib/SafeMath.sol';\r\nimport {DistributionTypes} from '../../lib/DistributionTypes.sol';\r\n\r\n/**\r\n * @title DistributionManager\r\n * @notice Accounting contract to manage multiple staking distributions\r\n * @author Omnidex\r\n **/\r\ncontract DistributionManager is IOmnidexDistributionManager {\r\n  using SafeMath for uint256;\r\n\r\n  struct AssetData {\r\n    uint104 emissionPerSecond;\r\n    uint104 index;\r\n    uint40 lastUpdateTimestamp;\r\n    mapping(address => uint256) users;\r\n  }\r\n\r\n  address public immutable EMISSION_MANAGER;\r\n\r\n  uint8 public constant PRECISION = 18;\r\n\r\n  mapping(address => AssetData) public assets;\r\n\r\n  uint256 internal _distributionEnd;\r\n\r\n  modifier onlyEmissionManager() {\r\n    require(msg.sender == EMISSION_MANAGER, 'ONLY_EMISSION_MANAGER');\r\n    _;\r\n  }\r\n\r\n  constructor(address emissionManager) {\r\n    EMISSION_MANAGER = emissionManager;\r\n  }\r\n\r\n  /// @inheritdoc IOmnidexDistributionManager\r\n  function setDistributionEnd(uint256 distributionEnd) external override onlyEmissionManager {\r\n    _distributionEnd = distributionEnd;\r\n    emit DistributionEndUpdated(distributionEnd);\r\n  }\r\n\r\n  /// @inheritdoc IOmnidexDistributionManager\r\n  function getDistributionEnd() external view override returns (uint256) {\r\n    return _distributionEnd;\r\n  }\r\n\r\n  /// @inheritdoc IOmnidexDistributionManager\r\n  function DISTRIBUTION_END() external view override returns (uint256) {\r\n    return _distributionEnd;\r\n  }\r\n\r\n  /// @inheritdoc IOmnidexDistributionManager\r\n  function getUserAssetData(address user, address asset) public view override returns (uint256) {\r\n    return assets[asset].users[user];\r\n  }\r\n\r\n  /// @inheritdoc IOmnidexDistributionManager\r\n  function getAssetData(address asset) public view override returns (uint256, uint256, uint256) {\r\n    return (assets[asset].index, assets[asset].emissionPerSecond, assets[asset].lastUpdateTimestamp);\r\n  }\r\n\r\n  /**\r\n   * @dev Configure the assets for a specific emission\r\n   * @param assetsConfigInput The array of each asset configuration\r\n   **/\r\n  function _configureAssets(DistributionTypes.AssetConfigInput[] memory assetsConfigInput)\r\n    internal\r\n  {\r\n    for (uint256 i = 0; i < assetsConfigInput.length; i++) {\r\n      AssetData storage assetConfig = assets[assetsConfigInput[i].underlyingAsset];\r\n\r\n      _updateAssetStateInternal(\r\n        assetsConfigInput[i].underlyingAsset,\r\n        assetConfig,\r\n        assetsConfigInput[i].totalStaked\r\n      );\r\n\r\n      assetConfig.emissionPerSecond = assetsConfigInput[i].emissionPerSecond;\r\n\r\n      emit AssetConfigUpdated(\r\n        assetsConfigInput[i].underlyingAsset,\r\n        assetsConfigInput[i].emissionPerSecond\r\n      );\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @dev Updates the state of one distribution, mainly rewards index and timestamp\r\n   * @param asset The address of the asset being updated\r\n   * @param assetConfig Storage pointer to the distribution's config\r\n   * @param totalStaked Current total of staked assets for this distribution\r\n   * @return The new distribution index\r\n   **/\r\n  function _updateAssetStateInternal(\r\n    address asset,\r\n    AssetData storage assetConfig,\r\n    uint256 totalStaked\r\n  ) internal returns (uint256) {\r\n    uint256 oldIndex = assetConfig.index;\r\n    uint256 emissionPerSecond = assetConfig.emissionPerSecond;\r\n    uint128 lastUpdateTimestamp = assetConfig.lastUpdateTimestamp;\r\n\r\n    if (block.timestamp == lastUpdateTimestamp) {\r\n      return oldIndex;\r\n    }\r\n\r\n    uint256 newIndex =\r\n      _getAssetIndex(oldIndex, emissionPerSecond, lastUpdateTimestamp, totalStaked);\r\n\r\n    if (newIndex != oldIndex) {\r\n      require(uint104(newIndex) == newIndex, 'Index overflow');\r\n      //optimization: storing one after another saves one SSTORE\r\n      assetConfig.index = uint104(newIndex);\r\n      assetConfig.lastUpdateTimestamp = uint40(block.timestamp);\r\n      emit AssetIndexUpdated(asset, newIndex);\r\n    } else {\r\n      assetConfig.lastUpdateTimestamp = uint40(block.timestamp);\r\n    }\r\n\r\n    return newIndex;\r\n  }\r\n\r\n  /**\r\n   * @dev Updates the state of an user in a distribution\r\n   * @param user The user's address\r\n   * @param asset The address of the reference asset of the distribution\r\n   * @param stakedByUser Amount of tokens staked by the user in the distribution at the moment\r\n   * @param totalStaked Total tokens staked in the distribution\r\n   * @return The accrued rewards for the user until the moment\r\n   **/\r\n  function _updateUserAssetInternal(\r\n    address user,\r\n    address asset,\r\n    uint256 stakedByUser,\r\n    uint256 totalStaked\r\n  ) internal returns (uint256) {\r\n    AssetData storage assetData = assets[asset];\r\n    uint256 userIndex = assetData.users[user];\r\n    uint256 accruedRewards = 0;\r\n\r\n    uint256 newIndex = _updateAssetStateInternal(asset, assetData, totalStaked);\r\n\r\n    if (userIndex != newIndex) {\r\n      if (stakedByUser != 0) {\r\n        accruedRewards = _getRewards(stakedByUser, newIndex, userIndex);\r\n      }\r\n\r\n      assetData.users[user] = newIndex;\r\n      emit UserIndexUpdated(user, asset, newIndex);\r\n    }\r\n\r\n    return accruedRewards;\r\n  }\r\n\r\n  /**\r\n   * @dev Used by \"frontend\" stake contracts to update the data of an user when claiming rewards from there\r\n   * @param user The address of the user\r\n   * @param stakes List of structs of the user data related with his stake\r\n   * @return The accrued rewards for the user until the moment\r\n   **/\r\n  function _claimRewards(address user, DistributionTypes.UserStakeInput[] memory stakes)\r\n    internal\r\n    returns (uint256)\r\n  {\r\n    uint256 accruedRewards = 0;\r\n\r\n    for (uint256 i = 0; i < stakes.length; i++) {\r\n      accruedRewards = accruedRewards.add(\r\n        _updateUserAssetInternal(\r\n          user,\r\n          stakes[i].underlyingAsset,\r\n          stakes[i].stakedByUser,\r\n          stakes[i].totalStaked\r\n        )\r\n      );\r\n    }\r\n\r\n    return accruedRewards;\r\n  }\r\n\r\n  /**\r\n   * @dev Return the accrued rewards for an user over a list of distribution\r\n   * @param user The address of the user\r\n   * @param stakes List of structs of the user data related with his stake\r\n   * @return The accrued rewards for the user until the moment\r\n   **/\r\n  function _getUnclaimedRewards(address user, DistributionTypes.UserStakeInput[] memory stakes)\r\n    internal\r\n    view\r\n    returns (uint256)\r\n  {\r\n    uint256 accruedRewards = 0;\r\n\r\n    for (uint256 i = 0; i < stakes.length; i++) {\r\n      AssetData storage assetConfig = assets[stakes[i].underlyingAsset];\r\n      uint256 assetIndex =\r\n        _getAssetIndex(\r\n          assetConfig.index,\r\n          assetConfig.emissionPerSecond,\r\n          assetConfig.lastUpdateTimestamp,\r\n          stakes[i].totalStaked\r\n        );\r\n\r\n      accruedRewards = accruedRewards.add(\r\n        _getRewards(stakes[i].stakedByUser, assetIndex, assetConfig.users[user])\r\n      );\r\n    }\r\n    return accruedRewards;\r\n  }\r\n\r\n  /**\r\n   * @dev Internal function for the calculation of user's rewards on a distribution\r\n   * @param principalUserBalance Amount staked by the user on a distribution\r\n   * @param reserveIndex Current index of the distribution\r\n   * @param userIndex Index stored for the user, representation his staking moment\r\n   * @return The rewards\r\n   **/\r\n  function _getRewards(\r\n    uint256 principalUserBalance,\r\n    uint256 reserveIndex,\r\n    uint256 userIndex\r\n  ) internal pure returns (uint256) {\r\n    return principalUserBalance.mul(reserveIndex.sub(userIndex)) / 10**uint256(PRECISION);\r\n  }\r\n\r\n  /**\r\n   * @dev Calculates the next value of an specific distribution index, with validations\r\n   * @param currentIndex Current index of the distribution\r\n   * @param emissionPerSecond Representing the total rewards distributed per second per asset unit, on the distribution\r\n   * @param lastUpdateTimestamp Last moment this distribution was updated\r\n   * @param totalBalance of tokens considered for the distribution\r\n   * @return The new index.\r\n   **/\r\n  function _getAssetIndex(\r\n    uint256 currentIndex,\r\n    uint256 emissionPerSecond,\r\n    uint128 lastUpdateTimestamp,\r\n    uint256 totalBalance\r\n  ) internal view returns (uint256) {\r\n    uint256 distributionEnd = _distributionEnd;\r\n    if (\r\n      emissionPerSecond == 0 ||\r\n      totalBalance == 0 ||\r\n      lastUpdateTimestamp == block.timestamp ||\r\n      lastUpdateTimestamp >= distributionEnd\r\n    ) {\r\n      return currentIndex;\r\n    }\r\n\r\n    uint256 currentTimestamp =\r\n      block.timestamp > distributionEnd ? distributionEnd : block.timestamp;\r\n    uint256 timeDelta = currentTimestamp.sub(lastUpdateTimestamp);\r\n    return\r\n      emissionPerSecond.mul(timeDelta).mul(10**uint256(PRECISION)).div(totalBalance).add(\r\n        currentIndex\r\n      );\r\n  }\r\n}\r\n"
			},
			"@aave/aave-stake/contracts/utils/VersionedInitializable.sol": {
				"content": "// SPDX-License-Identifier: agpl-3.0\npragma solidity 0.7.5;\n\n/**\n * @title VersionedInitializable\n *\n * @dev Helper contract to support initializer functions. To use it, replace\n * the constructor with a function that has the `initializer` modifier.\n * WARNING: Unlike constructors, initializer functions must be manually\n * invoked. This applies both to deploying an Initializable contract, as well\n * as extending an Initializable contract via inheritance.\n * WARNING: When used with inheritance, manual care must be taken to not invoke\n * a parent initializer twice, or ensure that all initializers are idempotent,\n * because this is not dealt with automatically as with constructors.\n *\n * @author Aave, inspired by the OpenZeppelin Initializable contract\n */\nabstract contract VersionedInitializable {\n  /**\n   * @dev Indicates that the contract has been initialized.\n   */\n  uint256 internal lastInitializedRevision = 0;\n\n  /**\n   * @dev Modifier to use in the initializer function of a contract.\n   */\n  modifier initializer() {\n    uint256 revision = getRevision();\n    require(revision > lastInitializedRevision, 'Contract instance has already been initialized');\n\n    lastInitializedRevision = revision;\n\n    _;\n  }\n\n  /// @dev returns the revision number of the contract.\n  /// Needs to be defined in the inherited class as a constant.\n  function getRevision() internal pure virtual returns (uint256);\n\n  // Reserved storage space to allow for layout changes in the future.\n  uint256[50] private ______gap;\n}\n"
			},
			"contracts/Omnidex-incentives/lib/DistributionTypes.sol": {
				"content": "// SPDX-License-Identifier: agpl-3.0\r\npragma solidity 0.7.5;\r\npragma experimental ABIEncoderV2;\r\n\r\nlibrary DistributionTypes {\r\n  struct AssetConfigInput {\r\n    uint104 emissionPerSecond;\r\n    uint256 totalStaked;\r\n    address underlyingAsset;\r\n  }\r\n\r\n  struct UserStakeInput {\r\n    address underlyingAsset;\r\n    uint256 stakedByUser;\r\n    uint256 totalStaked;\r\n  }\r\n}\r\n"
			},
			"contracts/Omnidex-incentives/lib/SafeMath.sol": {
				"content": "\r\n// SPDX-License-Identifier: agpl-3.0\r\npragma solidity ^0.7.5;\r\n\r\n/// @title Optimized overflow and underflow safe math operations\r\n/// @notice Contains methods for doing math operations that revert on overflow or underflow for minimal gas cost\r\n/// inspired by uniswap V3\r\nlibrary SafeMath {\r\n    /// @notice Returns x + y, reverts if sum overflows uint256\r\n    /// @param x The augend\r\n    /// @param y The addend\r\n    /// @return z The sum of x and y\r\n    function add(uint256 x, uint256 y) internal pure returns (uint256 z) {\r\n        require((z = x + y) >= x);\r\n    }\r\n\r\n    /// @notice Returns x - y, reverts if underflows\r\n    /// @param x The minuend\r\n    /// @param y The subtrahend\r\n    /// @return z The difference of x and y\r\n    function sub(uint256 x, uint256 y) internal pure returns (uint256 z) {\r\n        require((z = x - y) <= x);\r\n    }\r\n\r\n    /// @notice Returns x * y, reverts if overflows\r\n    /// @param x The multiplicand\r\n    /// @param y The multiplier\r\n    /// @return z The product of x and y\r\n    function mul(uint256 x, uint256 y) internal pure returns (uint256 z) {\r\n        require(x == 0 || (z = x * y) / x == y);\r\n    }\r\n\r\n    function div(uint256 x, uint256 y) internal pure returns(uint256) {\r\n        // no need to check for division by zero - solidity already reverts\r\n        return x / y;\r\n    }\r\n}"
			},
			"@aave/aave-stake/contracts/lib/Address.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity 0.7.5;\n\n/**\n * @dev Collection of functions related to the address type\n * From https://github.com/OpenZeppelin/openzeppelin-contracts\n */\nlibrary Address {\n  /**\n   * @dev Returns true if `account` is a contract.\n   *\n   * [IMPORTANT]\n   * ====\n   * It is unsafe to assume that an address for which this function returns\n   * false is an externally-owned account (EOA) and not a contract.\n   *\n   * Among others, `isContract` will return false for the following\n   * types of addresses:\n   *\n   *  - an externally-owned account\n   *  - a contract in construction\n   *  - an address where a contract will be created\n   *  - an address where a contract lived, but was destroyed\n   * ====\n   */\n  function isContract(address account) internal view returns (bool) {\n    // According to EIP-1052, 0x0 is the value returned for not-yet created accounts\n    // and 0xc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470 is returned\n    // for accounts without code, i.e. `keccak256('')`\n    bytes32 codehash;\n    bytes32 accountHash = 0xc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470;\n    // solhint-disable-next-line no-inline-assembly\n    assembly {\n      codehash := extcodehash(account)\n    }\n    return (codehash != accountHash && codehash != 0x0);\n  }\n\n  /**\n   * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n   * `recipient`, forwarding all available gas and reverting on errors.\n   *\n   * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n   * of certain opcodes, possibly making contracts go over the 2300 gas limit\n   * imposed by `transfer`, making them unable to receive funds via\n   * `transfer`. {sendValue} removes this limitation.\n   *\n   * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n   *\n   * IMPORTANT: because control is transferred to `recipient`, care must be\n   * taken to not create reentrancy vulnerabilities. Consider using\n   * {ReentrancyGuard} or the\n   * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\n   */\n  function sendValue(address payable recipient, uint256 amount) internal {\n    require(address(this).balance >= amount, 'Address: insufficient balance');\n\n    // solhint-disable-next-line avoid-low-level-calls, avoid-call-value\n    (bool success, ) = recipient.call{value: amount}('');\n    require(success, 'Address: unable to send value, recipient may have reverted');\n  }\n}\n"
			},
			"@aave/aave-stake/contracts/lib/SafeMath.sol": {
				"content": "// SPDX-License-Identifier: agpl-3.0\npragma solidity 0.7.5;\n\n/**\n * @dev From https://github.com/OpenZeppelin/openzeppelin-contracts\n * Wrappers over Solidity's arithmetic operations with added overflow\n * checks.\n *\n * Arithmetic operations in Solidity wrap on overflow. This can easily result\n * in bugs, because programmers usually assume that an overflow raises an\n * error, which is the standard behavior in high level programming languages.\n * `SafeMath` restores this intuition by reverting the transaction when an\n * operation overflows.\n *\n * Using this library instead of the unchecked operations eliminates an entire\n * class of bugs, so it's recommended to use it always.\n */\nlibrary SafeMath {\n  /**\n   * @dev Returns the addition of two unsigned integers, reverting on\n   * overflow.\n   *\n   * Counterpart to Solidity's `+` operator.\n   *\n   * Requirements:\n   * - Addition cannot overflow.\n   */\n  function add(uint256 a, uint256 b) internal pure returns (uint256) {\n    uint256 c = a + b;\n    require(c >= a, 'SafeMath: addition overflow');\n\n    return c;\n  }\n\n  /**\n   * @dev Returns the subtraction of two unsigned integers, reverting on\n   * overflow (when the result is negative).\n   *\n   * Counterpart to Solidity's `-` operator.\n   *\n   * Requirements:\n   * - Subtraction cannot overflow.\n   */\n  function sub(uint256 a, uint256 b) internal pure returns (uint256) {\n    return sub(a, b, 'SafeMath: subtraction overflow');\n  }\n\n  /**\n   * @dev Returns the subtraction of two unsigned integers, reverting with custom message on\n   * overflow (when the result is negative).\n   *\n   * Counterpart to Solidity's `-` operator.\n   *\n   * Requirements:\n   * - Subtraction cannot overflow.\n   */\n  function sub(\n    uint256 a,\n    uint256 b,\n    string memory errorMessage\n  ) internal pure returns (uint256) {\n    require(b <= a, errorMessage);\n    uint256 c = a - b;\n\n    return c;\n  }\n\n  /**\n   * @dev Returns the multiplication of two unsigned integers, reverting on\n   * overflow.\n   *\n   * Counterpart to Solidity's `*` operator.\n   *\n   * Requirements:\n   * - Multiplication cannot overflow.\n   */\n  function mul(uint256 a, uint256 b) internal pure returns (uint256) {\n    // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\n    // benefit is lost if 'b' is also tested.\n    // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\n    if (a == 0) {\n      return 0;\n    }\n\n    uint256 c = a * b;\n    require(c / a == b, 'SafeMath: multiplication overflow');\n\n    return c;\n  }\n\n  /**\n   * @dev Returns the integer division of two unsigned integers. Reverts on\n   * division by zero. The result is rounded towards zero.\n   *\n   * Counterpart to Solidity's `/` operator. Note: this function uses a\n   * `revert` opcode (which leaves remaining gas untouched) while Solidity\n   * uses an invalid opcode to revert (consuming all remaining gas).\n   *\n   * Requirements:\n   * - The divisor cannot be zero.\n   */\n  function div(uint256 a, uint256 b) internal pure returns (uint256) {\n    return div(a, b, 'SafeMath: division by zero');\n  }\n\n  /**\n   * @dev Returns the integer division of two unsigned integers. Reverts with custom message on\n   * division by zero. The result is rounded towards zero.\n   *\n   * Counterpart to Solidity's `/` operator. Note: this function uses a\n   * `revert` opcode (which leaves remaining gas untouched) while Solidity\n   * uses an invalid opcode to revert (consuming all remaining gas).\n   *\n   * Requirements:\n   * - The divisor cannot be zero.\n   */\n  function div(\n    uint256 a,\n    uint256 b,\n    string memory errorMessage\n  ) internal pure returns (uint256) {\n    // Solidity only automatically asserts when dividing by 0\n    require(b > 0, errorMessage);\n    uint256 c = a / b;\n    // assert(a == b * c + a % b); // There is no case in which this doesn't hold\n\n    return c;\n  }\n\n  /**\n   * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n   * Reverts when dividing by zero.\n   *\n   * Counterpart to Solidity's `%` operator. This function uses a `revert`\n   * opcode (which leaves remaining gas untouched) while Solidity uses an\n   * invalid opcode to revert (consuming all remaining gas).\n   *\n   * Requirements:\n   * - The divisor cannot be zero.\n   */\n  function mod(uint256 a, uint256 b) internal pure returns (uint256) {\n    return mod(a, b, 'SafeMath: modulo by zero');\n  }\n\n  /**\n   * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n   * Reverts with custom message when dividing by zero.\n   *\n   * Counterpart to Solidity's `%` operator. This function uses a `revert`\n   * opcode (which leaves remaining gas untouched) while Solidity uses an\n   * invalid opcode to revert (consuming all remaining gas).\n   *\n   * Requirements:\n   * - The divisor cannot be zero.\n   */\n  function mod(\n    uint256 a,\n    uint256 b,\n    string memory errorMessage\n  ) internal pure returns (uint256) {\n    require(b != 0, errorMessage);\n    return a % b;\n  }\n}\n"
			},
			"contracts/Omnidex-incentives/interfaces/IOmnidexDistributionManager.sol": {
				"content": "// SPDX-License-Identifier: agpl-3.0\r\npragma solidity 0.7.5;\r\npragma experimental ABIEncoderV2;\r\n\r\nimport {DistributionTypes} from '../lib/DistributionTypes.sol';\r\n\r\ninterface IOmnidexDistributionManager {\r\n  \r\n  event AssetConfigUpdated(address indexed asset, uint256 emission);\r\n  event AssetIndexUpdated(address indexed asset, uint256 index);\r\n  event UserIndexUpdated(address indexed user, address indexed asset, uint256 index);\r\n  event DistributionEndUpdated(uint256 newDistributionEnd);\r\n\r\n  /**\r\n  * @dev Sets the end date for the distribution\r\n  * @param distributionEnd The end date timestamp\r\n  **/\r\n  function setDistributionEnd(uint256 distributionEnd) external;\r\n\r\n  /**\r\n  * @dev Gets the end date for the distribution\r\n  * @return The end of the distribution\r\n  **/\r\n  function getDistributionEnd() external view returns (uint256);\r\n\r\n  /**\r\n  * @dev for backwards compatibility with the previous DistributionManager used\r\n  * @return The end of the distribution\r\n  **/\r\n  function DISTRIBUTION_END() external view returns(uint256);\r\n\r\n   /**\r\n   * @dev Returns the data of an user on a distribution\r\n   * @param user Address of the user\r\n   * @param asset The address of the reference asset of the distribution\r\n   * @return The new index\r\n   **/\r\n   function getUserAssetData(address user, address asset) external view returns (uint256);\r\n\r\n   /**\r\n   * @dev Returns the configuration of the distribution for a certain asset\r\n   * @param asset The address of the reference asset of the distribution\r\n   * @return The asset index, the emission per second and the last updated timestamp\r\n   **/\r\n   function getAssetData(address asset) external view returns (uint256, uint256, uint256);\r\n}\r\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"@aave/aave-stake/contracts/interfaces/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 standard as defined in the EIP. From https://github.com/OpenZeppelin/openzeppelin-contracts",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the amount of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the amount of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves `amount` tokens from the caller's account to `recipient`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves `amount` tokens from `sender` to `recipient` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.7.5+commit.eb77ed08\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP. From https://github.com/OpenZeppelin/openzeppelin-contracts\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `recipient`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `sender` to `recipient` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@aave/aave-stake/contracts/interfaces/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@aave/aave-stake/contracts/interfaces/IERC20.sol\":{\"keccak256\":\"0x150506e2e40dc3cea841fe0ade6021b9b0d4e09f7616d312bc7c1300a2d7a94f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d3dbf854f310f20a48cd727e1680067f4d911a4c6d220886935736297a0f89cb\",\"dweb:/ipfs/QmU8xN2AYrURFgmB4hLFLamc7aJe6VD5qkUEcfdrKPcz9C\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@aave/aave-stake/contracts/lib/Address.sol": {
				"Address": {
					"abi": [],
					"devdoc": {
						"details": "Collection of functions related to the address type From https://github.com/OpenZeppelin/openzeppelin-contracts",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@aave/aave-stake/contracts/lib/Address.sol\":187:2585  library Address {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  invalid\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@aave/aave-stake/contracts/lib/Address.sol\":187:2585  library Address {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212202a332a6e2c97d3c8f9a9f7886593e74a3cd27690f9a69d65e3d66cb40a5022d264736f6c63430007050033\n}\n",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566023600b82828239805160001a607314601657fe5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212202a332a6e2c97d3c8f9a9f7886593e74a3cd27690f9a69d65e3d66cb40a5022d264736f6c63430007050033",
							"opcodes": "PUSH1 0x56 PUSH1 0x23 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x16 JUMPI INVALID JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x2A CALLER 0x2A PUSH15 0x2C97D3C8F9A9F7886593E74A3CD276 SWAP1 0xF9 0xA6 SWAP14 PUSH6 0xE3D66CB40A50 0x22 0xD2 PUSH5 0x736F6C6343 STOP SMOD SDIV STOP CALLER ",
							"sourceMap": "187:2398:1:-:0;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212202a332a6e2c97d3c8f9a9f7886593e74a3cd27690f9a69d65e3d66cb40a5022d264736f6c63430007050033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x2A CALLER 0x2A PUSH15 0x2C97D3C8F9A9F7886593E74A3CD276 SWAP1 0xF9 0xA6 SWAP14 PUSH6 0xE3D66CB40A50 0x22 0xD2 PUSH5 0x736F6C6343 STOP SMOD SDIV STOP CALLER ",
							"sourceMap": "187:2398:1:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"isContract(address)": "infinite",
								"sendValue(address payable,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 187,
									"end": 2585,
									"name": "PUSH #[$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 187,
									"end": 2585,
									"name": "PUSH [$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 187,
									"end": 2585,
									"name": "PUSH",
									"source": 1,
									"value": "B"
								},
								{
									"begin": 187,
									"end": 2585,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 187,
									"end": 2585,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 187,
									"end": 2585,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 187,
									"end": 2585,
									"name": "CODECOPY",
									"source": 1
								},
								{
									"begin": 187,
									"end": 2585,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 187,
									"end": 2585,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 187,
									"end": 2585,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 187,
									"end": 2585,
									"name": "BYTE",
									"source": 1
								},
								{
									"begin": 187,
									"end": 2585,
									"name": "PUSH",
									"source": 1,
									"value": "73"
								},
								{
									"begin": 187,
									"end": 2585,
									"name": "EQ",
									"source": 1
								},
								{
									"begin": 187,
									"end": 2585,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 187,
									"end": 2585,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 187,
									"end": 2585,
									"name": "INVALID",
									"source": 1
								},
								{
									"begin": 187,
									"end": 2585,
									"name": "tag",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 187,
									"end": 2585,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 187,
									"end": 2585,
									"name": "ADDRESS",
									"source": 1
								},
								{
									"begin": 187,
									"end": 2585,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 187,
									"end": 2585,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 187,
									"end": 2585,
									"name": "PUSH",
									"source": 1,
									"value": "73"
								},
								{
									"begin": 187,
									"end": 2585,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 187,
									"end": 2585,
									"name": "MSTORE8",
									"source": 1
								},
								{
									"begin": 187,
									"end": 2585,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 187,
									"end": 2585,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 187,
									"end": 2585,
									"name": "RETURN",
									"source": 1
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212202a332a6e2c97d3c8f9a9f7886593e74a3cd27690f9a69d65e3d66cb40a5022d264736f6c63430007050033",
									".code": [
										{
											"begin": 187,
											"end": 2585,
											"name": "PUSHDEPLOYADDRESS",
											"source": 1
										},
										{
											"begin": 187,
											"end": 2585,
											"name": "ADDRESS",
											"source": 1
										},
										{
											"begin": 187,
											"end": 2585,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 187,
											"end": 2585,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 187,
											"end": 2585,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 187,
											"end": 2585,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 187,
											"end": 2585,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 187,
											"end": 2585,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 187,
											"end": 2585,
											"name": "REVERT",
											"source": 1
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.7.5+commit.eb77ed08\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Collection of functions related to the address type From https://github.com/OpenZeppelin/openzeppelin-contracts\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@aave/aave-stake/contracts/lib/Address.sol\":\"Address\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@aave/aave-stake/contracts/lib/Address.sol\":{\"keccak256\":\"0x456a1aebf00cb1f2987ca41f1924e4811703f10800a34ecb759e5d1dc472bb78\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ee41b6968eca15df18d524bb43b928e0405a6fe3d725ffe5950adb73c946cc0b\",\"dweb:/ipfs/QmP4hcWLnx33hoRpFjjQAodx4Hb7oXxHX58kpWcZX8v8cx\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@aave/aave-stake/contracts/lib/SafeERC20.sol": {
				"SafeERC20": {
					"abi": [],
					"devdoc": {
						"details": "From https://github.com/OpenZeppelin/openzeppelin-contracts Wrappers around ERC20 operations that throw on failure (when the token contract returns false). Tokens that return no value (and instead revert or throw on failure) are also supported, non-reverting calls are assumed to be successful. To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract, which allows you to call the safe operations as `token.safeTransfer(...)`, etc.",
						"kind": "dev",
						"methods": {},
						"title": "SafeERC20",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@aave/aave-stake/contracts/lib/SafeERC20.sol\":708:2104  library SafeERC20 {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  invalid\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@aave/aave-stake/contracts/lib/SafeERC20.sol\":708:2104  library SafeERC20 {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220886641c12a838a4dcb5a802fca6244e591e3f9d830844b1cf0fa2187bc2ab0e564736f6c63430007050033\n}\n",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566023600b82828239805160001a607314601657fe5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220886641c12a838a4dcb5a802fca6244e591e3f9d830844b1cf0fa2187bc2ab0e564736f6c63430007050033",
							"opcodes": "PUSH1 0x56 PUSH1 0x23 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x16 JUMPI INVALID JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP9 PUSH7 0x41C12A838A4DCB GAS DUP1 0x2F 0xCA PUSH3 0x44E591 0xE3 0xF9 0xD8 ADDRESS DUP5 0x4B SHR CREATE STATICCALL 0x21 DUP8 0xBC 0x2A 0xB0 0xE5 PUSH5 0x736F6C6343 STOP SMOD SDIV STOP CALLER ",
							"sourceMap": "708:1396:2:-:0;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220886641c12a838a4dcb5a802fca6244e591e3f9d830844b1cf0fa2187bc2ab0e564736f6c63430007050033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP9 PUSH7 0x41C12A838A4DCB GAS DUP1 0x2F 0xCA PUSH3 0x44E591 0xE3 0xF9 0xD8 ADDRESS DUP5 0x4B SHR CREATE STATICCALL 0x21 DUP8 0xBC 0x2A 0xB0 0xE5 PUSH5 0x736F6C6343 STOP SMOD SDIV STOP CALLER ",
							"sourceMap": "708:1396:2:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"callOptionalReturn(contract IERC20,bytes memory)": "infinite",
								"safeApprove(contract IERC20,address,uint256)": "infinite",
								"safeTransfer(contract IERC20,address,uint256)": "infinite",
								"safeTransferFrom(contract IERC20,address,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 708,
									"end": 2104,
									"name": "PUSH #[$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 708,
									"end": 2104,
									"name": "PUSH [$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 708,
									"end": 2104,
									"name": "PUSH",
									"source": 2,
									"value": "B"
								},
								{
									"begin": 708,
									"end": 2104,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 708,
									"end": 2104,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 708,
									"end": 2104,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 708,
									"end": 2104,
									"name": "CODECOPY",
									"source": 2
								},
								{
									"begin": 708,
									"end": 2104,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 708,
									"end": 2104,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 708,
									"end": 2104,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 708,
									"end": 2104,
									"name": "BYTE",
									"source": 2
								},
								{
									"begin": 708,
									"end": 2104,
									"name": "PUSH",
									"source": 2,
									"value": "73"
								},
								{
									"begin": 708,
									"end": 2104,
									"name": "EQ",
									"source": 2
								},
								{
									"begin": 708,
									"end": 2104,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 708,
									"end": 2104,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 708,
									"end": 2104,
									"name": "INVALID",
									"source": 2
								},
								{
									"begin": 708,
									"end": 2104,
									"name": "tag",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 708,
									"end": 2104,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 708,
									"end": 2104,
									"name": "ADDRESS",
									"source": 2
								},
								{
									"begin": 708,
									"end": 2104,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 708,
									"end": 2104,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 708,
									"end": 2104,
									"name": "PUSH",
									"source": 2,
									"value": "73"
								},
								{
									"begin": 708,
									"end": 2104,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 708,
									"end": 2104,
									"name": "MSTORE8",
									"source": 2
								},
								{
									"begin": 708,
									"end": 2104,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 708,
									"end": 2104,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 708,
									"end": 2104,
									"name": "RETURN",
									"source": 2
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220886641c12a838a4dcb5a802fca6244e591e3f9d830844b1cf0fa2187bc2ab0e564736f6c63430007050033",
									".code": [
										{
											"begin": 708,
											"end": 2104,
											"name": "PUSHDEPLOYADDRESS",
											"source": 2
										},
										{
											"begin": 708,
											"end": 2104,
											"name": "ADDRESS",
											"source": 2
										},
										{
											"begin": 708,
											"end": 2104,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 708,
											"end": 2104,
											"name": "PUSH",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 708,
											"end": 2104,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 708,
											"end": 2104,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 708,
											"end": 2104,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 708,
											"end": 2104,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 708,
											"end": 2104,
											"name": "REVERT",
											"source": 2
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.7.5+commit.eb77ed08\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"From https://github.com/OpenZeppelin/openzeppelin-contracts Wrappers around ERC20 operations that throw on failure (when the token contract returns false). Tokens that return no value (and instead revert or throw on failure) are also supported, non-reverting calls are assumed to be successful. To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract, which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\",\"kind\":\"dev\",\"methods\":{},\"title\":\"SafeERC20\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@aave/aave-stake/contracts/lib/SafeERC20.sol\":\"SafeERC20\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@aave/aave-stake/contracts/interfaces/IERC20.sol\":{\"keccak256\":\"0x150506e2e40dc3cea841fe0ade6021b9b0d4e09f7616d312bc7c1300a2d7a94f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d3dbf854f310f20a48cd727e1680067f4d911a4c6d220886935736297a0f89cb\",\"dweb:/ipfs/QmU8xN2AYrURFgmB4hLFLamc7aJe6VD5qkUEcfdrKPcz9C\"]},\"@aave/aave-stake/contracts/lib/Address.sol\":{\"keccak256\":\"0x456a1aebf00cb1f2987ca41f1924e4811703f10800a34ecb759e5d1dc472bb78\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ee41b6968eca15df18d524bb43b928e0405a6fe3d725ffe5950adb73c946cc0b\",\"dweb:/ipfs/QmP4hcWLnx33hoRpFjjQAodx4Hb7oXxHX58kpWcZX8v8cx\"]},\"@aave/aave-stake/contracts/lib/SafeERC20.sol\":{\"keccak256\":\"0xbba27d4b67c08f2a51ecf534aadfd510260996fcf91299691e955ee7539dd5a0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3ea0462318f91a1937d2ab9b51ce675399b2b958c0f9faee08d4c2b721197c3f\",\"dweb:/ipfs/QmZctUrjVX8JJT7umbcjvreTyoTAhzxAEFLi3WhXHBe9r7\"]},\"@aave/aave-stake/contracts/lib/SafeMath.sol\":{\"keccak256\":\"0xf32a71745588178f5f64b96e7766589e48d5402c4679b3c04085760f9437f00b\",\"license\":\"agpl-3.0\",\"urls\":[\"bzz-raw://b05078f9fefe539e3252f8f8c2ffbd50f5106787bccf533a7ad5f7d0c3ff77d2\",\"dweb:/ipfs/QmTXQkKZCmWv8nF7iK1Mwa7AVJzkzfL4AkZvJY2Qx4wXd2\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@aave/aave-stake/contracts/lib/SafeMath.sol": {
				"SafeMath": {
					"abi": [],
					"devdoc": {
						"details": "From https://github.com/OpenZeppelin/openzeppelin-contracts Wrappers over Solidity's arithmetic operations with added overflow checks. Arithmetic operations in Solidity wrap on overflow. This can easily result in bugs, because programmers usually assume that an overflow raises an error, which is the standard behavior in high level programming languages. `SafeMath` restores this intuition by reverting the transaction when an operation overflows. Using this library instead of the unchecked operations eliminates an entire class of bugs, so it's recommended to use it always.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@aave/aave-stake/contracts/lib/SafeMath.sol\":688:5030  library SafeMath {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  invalid\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@aave/aave-stake/contracts/lib/SafeMath.sol\":688:5030  library SafeMath {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220cf41059782f11d519fbc29a63b865cf2a36b8d0090dfb9c4d1353f1130fe190f64736f6c63430007050033\n}\n",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566023600b82828239805160001a607314601657fe5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220cf41059782f11d519fbc29a63b865cf2a36b8d0090dfb9c4d1353f1130fe190f64736f6c63430007050033",
							"opcodes": "PUSH1 0x56 PUSH1 0x23 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x16 JUMPI INVALID JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xCF COINBASE SDIV SWAP8 DUP3 CALL SAR MLOAD SWAP16 0xBC 0x29 0xA6 EXTCODESIZE DUP7 0x5C CALLCODE LOG3 PUSH12 0x8D0090DFB9C4D1353F1130FE NOT 0xF PUSH5 0x736F6C6343 STOP SMOD SDIV STOP CALLER ",
							"sourceMap": "688:4342:3:-:0;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220cf41059782f11d519fbc29a63b865cf2a36b8d0090dfb9c4d1353f1130fe190f64736f6c63430007050033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xCF COINBASE SDIV SWAP8 DUP3 CALL SAR MLOAD SWAP16 0xBC 0x29 0xA6 EXTCODESIZE DUP7 0x5C CALLCODE LOG3 PUSH12 0x8D0090DFB9C4D1353F1130FE NOT 0xF PUSH5 0x736F6C6343 STOP SMOD SDIV STOP CALLER ",
							"sourceMap": "688:4342:3:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"add(uint256,uint256)": "infinite",
								"div(uint256,uint256)": "infinite",
								"div(uint256,uint256,string memory)": "infinite",
								"mod(uint256,uint256)": "infinite",
								"mod(uint256,uint256,string memory)": "infinite",
								"mul(uint256,uint256)": "infinite",
								"sub(uint256,uint256)": "infinite",
								"sub(uint256,uint256,string memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 688,
									"end": 5030,
									"name": "PUSH #[$]",
									"source": 3,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 688,
									"end": 5030,
									"name": "PUSH [$]",
									"source": 3,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 688,
									"end": 5030,
									"name": "PUSH",
									"source": 3,
									"value": "B"
								},
								{
									"begin": 688,
									"end": 5030,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 688,
									"end": 5030,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 688,
									"end": 5030,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 688,
									"end": 5030,
									"name": "CODECOPY",
									"source": 3
								},
								{
									"begin": 688,
									"end": 5030,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 688,
									"end": 5030,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 688,
									"end": 5030,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 688,
									"end": 5030,
									"name": "BYTE",
									"source": 3
								},
								{
									"begin": 688,
									"end": 5030,
									"name": "PUSH",
									"source": 3,
									"value": "73"
								},
								{
									"begin": 688,
									"end": 5030,
									"name": "EQ",
									"source": 3
								},
								{
									"begin": 688,
									"end": 5030,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 688,
									"end": 5030,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 688,
									"end": 5030,
									"name": "INVALID",
									"source": 3
								},
								{
									"begin": 688,
									"end": 5030,
									"name": "tag",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 688,
									"end": 5030,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 688,
									"end": 5030,
									"name": "ADDRESS",
									"source": 3
								},
								{
									"begin": 688,
									"end": 5030,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 688,
									"end": 5030,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 688,
									"end": 5030,
									"name": "PUSH",
									"source": 3,
									"value": "73"
								},
								{
									"begin": 688,
									"end": 5030,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 688,
									"end": 5030,
									"name": "MSTORE8",
									"source": 3
								},
								{
									"begin": 688,
									"end": 5030,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 688,
									"end": 5030,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 688,
									"end": 5030,
									"name": "RETURN",
									"source": 3
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220cf41059782f11d519fbc29a63b865cf2a36b8d0090dfb9c4d1353f1130fe190f64736f6c63430007050033",
									".code": [
										{
											"begin": 688,
											"end": 5030,
											"name": "PUSHDEPLOYADDRESS",
											"source": 3
										},
										{
											"begin": 688,
											"end": 5030,
											"name": "ADDRESS",
											"source": 3
										},
										{
											"begin": 688,
											"end": 5030,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 688,
											"end": 5030,
											"name": "PUSH",
											"source": 3,
											"value": "80"
										},
										{
											"begin": 688,
											"end": 5030,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 688,
											"end": 5030,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 688,
											"end": 5030,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 688,
											"end": 5030,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 688,
											"end": 5030,
											"name": "REVERT",
											"source": 3
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.7.5+commit.eb77ed08\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"From https://github.com/OpenZeppelin/openzeppelin-contracts Wrappers over Solidity's arithmetic operations with added overflow checks. Arithmetic operations in Solidity wrap on overflow. This can easily result in bugs, because programmers usually assume that an overflow raises an error, which is the standard behavior in high level programming languages. `SafeMath` restores this intuition by reverting the transaction when an operation overflows. Using this library instead of the unchecked operations eliminates an entire class of bugs, so it's recommended to use it always.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@aave/aave-stake/contracts/lib/SafeMath.sol\":\"SafeMath\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@aave/aave-stake/contracts/lib/SafeMath.sol\":{\"keccak256\":\"0xf32a71745588178f5f64b96e7766589e48d5402c4679b3c04085760f9437f00b\",\"license\":\"agpl-3.0\",\"urls\":[\"bzz-raw://b05078f9fefe539e3252f8f8c2ffbd50f5106787bccf533a7ad5f7d0c3ff77d2\",\"dweb:/ipfs/QmTXQkKZCmWv8nF7iK1Mwa7AVJzkzfL4AkZvJY2Qx4wXd2\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@aave/aave-stake/contracts/utils/VersionedInitializable.sol": {
				"VersionedInitializable": {
					"abi": [],
					"devdoc": {
						"author": "Aave, inspired by the OpenZeppelin Initializable contract",
						"details": "Helper contract to support initializer functions. To use it, replace the constructor with a function that has the `initializer` modifier. WARNING: Unlike constructors, initializer functions must be manually invoked. This applies both to deploying an Initializable contract, as well as extending an Initializable contract via inheritance. WARNING: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or ensure that all initializers are idempotent, because this is not dealt with automatically as with constructors.",
						"kind": "dev",
						"methods": {},
						"stateVariables": {
							"lastInitializedRevision": {
								"details": "Indicates that the contract has been initialized."
							}
						},
						"title": "VersionedInitializable",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.7.5+commit.eb77ed08\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"author\":\"Aave, inspired by the OpenZeppelin Initializable contract\",\"details\":\"Helper contract to support initializer functions. To use it, replace the constructor with a function that has the `initializer` modifier. WARNING: Unlike constructors, initializer functions must be manually invoked. This applies both to deploying an Initializable contract, as well as extending an Initializable contract via inheritance. WARNING: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or ensure that all initializers are idempotent, because this is not dealt with automatically as with constructors.\",\"kind\":\"dev\",\"methods\":{},\"stateVariables\":{\"lastInitializedRevision\":{\"details\":\"Indicates that the contract has been initialized.\"}},\"title\":\"VersionedInitializable\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@aave/aave-stake/contracts/utils/VersionedInitializable.sol\":\"VersionedInitializable\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@aave/aave-stake/contracts/utils/VersionedInitializable.sol\":{\"keccak256\":\"0xedfec4c491ad24c0a1024fc801c22f2a16d1f316f2a5cdcc883e0bbc451cffc7\",\"license\":\"agpl-3.0\",\"urls\":[\"bzz-raw://e77712031df46b9ffd6ca6d405566177fe35191a427a7278130986eb2889eb57\",\"dweb:/ipfs/QmUEs4hmDe859S9C2jbU7yMPA59ZrhQRqcW268EmfavnrD\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 501,
								"contract": "@aave/aave-stake/contracts/utils/VersionedInitializable.sol:VersionedInitializable",
								"label": "lastInitializedRevision",
								"offset": 0,
								"slot": "0",
								"type": "t_uint256"
							},
							{
								"astId": 532,
								"contract": "@aave/aave-stake/contracts/utils/VersionedInitializable.sol:VersionedInitializable",
								"label": "______gap",
								"offset": 0,
								"slot": "1",
								"type": "t_array(t_uint256)50_storage"
							}
						],
						"types": {
							"t_array(t_uint256)50_storage": {
								"base": "t_uint256",
								"encoding": "inplace",
								"label": "uint256[50]",
								"numberOfBytes": "1600"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/Omnidex-incentives/incentives/PullRewardsIncentivesController.sol": {
				"PullRewardsIncentivesController": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "contract IERC20",
									"name": "rewardToken",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "emissionManager",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "asset",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "emission",
									"type": "uint256"
								}
							],
							"name": "AssetConfigUpdated",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "asset",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "index",
									"type": "uint256"
								}
							],
							"name": "AssetIndexUpdated",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "claimer",
									"type": "address"
								}
							],
							"name": "ClaimerSet",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "newDistributionEnd",
									"type": "uint256"
								}
							],
							"name": "DistributionEndUpdated",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "RewardsAccrued",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "claimer",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "RewardsClaimed",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "vault",
									"type": "address"
								}
							],
							"name": "RewardsVaultUpdated",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "asset",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "index",
									"type": "uint256"
								}
							],
							"name": "UserIndexUpdated",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "DISTRIBUTION_END",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "EMISSION_MANAGER",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "PRECISION",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "REVISION",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "REWARD_TOKEN",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "assets",
							"outputs": [
								{
									"internalType": "uint104",
									"name": "emissionPerSecond",
									"type": "uint104"
								},
								{
									"internalType": "uint104",
									"name": "index",
									"type": "uint104"
								},
								{
									"internalType": "uint40",
									"name": "lastUpdateTimestamp",
									"type": "uint40"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address[]",
									"name": "assets",
									"type": "address[]"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								}
							],
							"name": "claimRewards",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address[]",
									"name": "assets",
									"type": "address[]"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								}
							],
							"name": "claimRewardsOnBehalf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address[]",
									"name": "assets",
									"type": "address[]"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "claimRewardsToSelf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address[]",
									"name": "assets",
									"type": "address[]"
								},
								{
									"internalType": "uint256[]",
									"name": "emissionsPerSecond",
									"type": "uint256[]"
								}
							],
							"name": "configureAssets",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "asset",
									"type": "address"
								}
							],
							"name": "getAssetData",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "user",
									"type": "address"
								}
							],
							"name": "getClaimer",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getDistributionEnd",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address[]",
									"name": "assets",
									"type": "address[]"
								},
								{
									"internalType": "address",
									"name": "user",
									"type": "address"
								}
							],
							"name": "getRewardsBalance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getRewardsVault",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "asset",
									"type": "address"
								}
							],
							"name": "getUserAssetData",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_user",
									"type": "address"
								}
							],
							"name": "getUserUnclaimedRewards",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "totalSupply",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "userBalance",
									"type": "uint256"
								}
							],
							"name": "handleAction",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "rewardsVault",
									"type": "address"
								}
							],
							"name": "initialize",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "caller",
									"type": "address"
								}
							],
							"name": "setClaimer",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "distributionEnd",
									"type": "uint256"
								}
							],
							"name": "setDistributionEnd",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "rewardsVault",
									"type": "address"
								}
							],
							"name": "setRewardsVault",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"author": "Omnidex*",
						"kind": "dev",
						"methods": {
							"DISTRIBUTION_END()": {
								"details": "for backwards compatibility with the previous DistributionManager used",
								"returns": {
									"_0": "The end of the distribution*"
								}
							},
							"claimRewards(address[],uint256,address)": {
								"details": "Claims reward for an user to the desired address, on all the assets of the lending pool, accumulating the pending rewards",
								"params": {
									"amount": "Amount of rewards to claim",
									"to": "Address that will be receiving the rewards"
								},
								"returns": {
									"_0": "Rewards claimed*"
								}
							},
							"claimRewardsOnBehalf(address[],uint256,address,address)": {
								"details": "Claims reward for an user on behalf, on all the assets of the lending pool, accumulating the pending rewards. The caller must be whitelisted via \"allowClaimOnBehalf\" function by the RewardsAdmin role manager",
								"params": {
									"amount": "Amount of rewards to claim",
									"to": "Address that will be receiving the rewards",
									"user": "Address to check and claim rewards"
								},
								"returns": {
									"_0": "Rewards claimed*"
								}
							},
							"claimRewardsToSelf(address[],uint256)": {
								"details": "Claims reward for msg.sender, on all the assets of the lending pool, accumulating the pending rewards",
								"params": {
									"amount": "Amount of rewards to claim"
								},
								"returns": {
									"_0": "Rewards claimed*"
								}
							},
							"configureAssets(address[],uint256[])": {
								"details": "Configure assets for a certain rewards emission",
								"params": {
									"assets": "The assets to incentivize",
									"emissionsPerSecond": "The emission for each asset"
								}
							},
							"getAssetData(address)": {
								"details": "Returns the configuration of the distribution for a certain asset",
								"params": {
									"asset": "The address of the reference asset of the distribution"
								},
								"returns": {
									"_0": "The asset index, the emission per second and the last updated timestamp*"
								}
							},
							"getClaimer(address)": {
								"details": "Returns the whitelisted claimer for a certain address (0x0 if not set)",
								"params": {
									"user": "The address of the user"
								},
								"returns": {
									"_0": "The claimer address"
								}
							},
							"getDistributionEnd()": {
								"details": "Gets the end date for the distribution",
								"returns": {
									"_0": "The end of the distribution*"
								}
							},
							"getRewardsBalance(address[],address)": {
								"details": "Returns the total of rewards of an user, already accrued + not yet accrued",
								"params": {
									"user": "The address of the user"
								},
								"returns": {
									"_0": "The rewards*"
								}
							},
							"getRewardsVault()": {
								"details": "returns the current rewards vault contract",
								"returns": {
									"_0": "address"
								}
							},
							"getUserAssetData(address,address)": {
								"details": "Returns the data of an user on a distribution",
								"params": {
									"asset": "The address of the reference asset of the distribution",
									"user": "Address of the user"
								},
								"returns": {
									"_0": "The new index*"
								}
							},
							"getUserUnclaimedRewards(address)": {
								"details": "returns the unclaimed rewards of the user",
								"params": {
									"user": "the address of the user"
								},
								"returns": {
									"_0": "the unclaimed user rewards"
								}
							},
							"handleAction(address,uint256,uint256)": {
								"details": "Called by the corresponding asset on any update that affects the rewards distribution",
								"params": {
									"asset": "The address of the user",
									"totalSupply": "The total supply of the asset in the lending pool*",
									"userBalance": "The balance of the user of the asset in the lending pool"
								}
							},
							"initialize(address)": {
								"details": "Initialize OmnidexIncentivesController",
								"params": {
									"rewardsVault": "rewards vault to pull ERC20 funds*"
								}
							},
							"setClaimer(address,address)": {
								"details": "Whitelists an address to claim the rewards on behalf of another address",
								"params": {
									"claimer": "The address of the claimer",
									"user": "The address of the user"
								}
							},
							"setDistributionEnd(uint256)": {
								"details": "Sets the end date for the distribution",
								"params": {
									"distributionEnd": "The end date timestamp*"
								}
							},
							"setRewardsVault(address)": {
								"details": "update the rewards vault address, only allowed by the Rewards admin",
								"params": {
									"rewardsVault": "The address of the rewards vault*"
								}
							}
						},
						"title": "PullRewardsIncentivesController",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/Omnidex-incentives/incentives/PullRewardsIncentivesController.sol\":530:1852  contract PullRewardsIncentivesController is\r... */\n  mstore(0x40, 0xc0)\n    /* \"@aave/aave-stake/contracts/utils/VersionedInitializable.sol\":924:925  0 */\n  0x00\n    /* \"@aave/aave-stake/contracts/utils/VersionedInitializable.sol\":881:925  uint256 internal lastInitializedRevision = 0 */\n  dup1\n  sstore\n    /* \"contracts/Omnidex-incentives/incentives/PullRewardsIncentivesController.sol\":735:857  constructor(IERC20 rewardToken, address emissionManager)\r... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  dup2\n  add\n  swap1\n  tag_2\n  swap2\n  swap1\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"contracts/Omnidex-incentives/incentives/PullRewardsIncentivesController.sol\":822:833  rewardToken */\n  dup2\n    /* \"contracts/Omnidex-incentives/incentives/PullRewardsIncentivesController.sol\":835:850  emissionManager */\n  dup2\n    /* \"contracts/Omnidex-incentives/incentives/base/BaseIncentivesController.sol\":1651:1666  emissionManager */\n  dup1\n    /* \"contracts/Omnidex-incentives/incentives/base/DistributionManager.sol\":1067:1082  emissionManager */\n  dup1\n    /* \"contracts/Omnidex-incentives/incentives/base/DistributionManager.sol\":1048:1082  EMISSION_MANAGER = emissionManager */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0x80\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0x60\n  shl\n  dup2\n  mstore\n  pop\n  pop\n    /* \"contracts/Omnidex-incentives/incentives/base/DistributionManager.sol\":1004:1088  constructor(address emissionManager) {\r... */\n  pop\n    /* \"contracts/Omnidex-incentives/incentives/base/BaseIncentivesController.sol\":1701:1712  rewardToken */\n  dup2\n    /* \"contracts/Omnidex-incentives/incentives/base/BaseIncentivesController.sol\":1678:1713  REWARD_TOKEN = address(rewardToken) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xa0\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0x60\n  shl\n  dup2\n  mstore\n  pop\n  pop\n    /* \"contracts/Omnidex-incentives/incentives/base/BaseIncentivesController.sol\":1569:1719  constructor(IERC20 rewardToken, address emissionManager)\r... */\n  pop\n  pop\n    /* \"contracts/Omnidex-incentives/incentives/PullRewardsIncentivesController.sol\":735:857  constructor(IERC20 rewardToken, address emissionManager)\r... */\n  pop\n  pop\n    /* \"contracts/Omnidex-incentives/incentives/PullRewardsIncentivesController.sol\":530:1852  contract PullRewardsIncentivesController is\r... */\n  jump(tag_10)\n    /* \"#utility.yul\":7:150   */\ntag_12:\n  0x00\n    /* \"#utility.yul\":95:101   */\n  dup2\n    /* \"#utility.yul\":89:102   */\n  mload\n    /* \"#utility.yul\":80:102   */\n  swap1\n  pop\n    /* \"#utility.yul\":111:144   */\n  tag_14\n    /* \"#utility.yul\":138:143   */\n  dup2\n    /* \"#utility.yul\":111:144   */\n  tag_15\n  jump\t// in\ntag_14:\n    /* \"#utility.yul\":70:150   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":156:325   */\ntag_16:\n  0x00\n    /* \"#utility.yul\":257:263   */\n  dup2\n    /* \"#utility.yul\":251:264   */\n  mload\n    /* \"#utility.yul\":242:264   */\n  swap1\n  pop\n    /* \"#utility.yul\":273:319   */\n  tag_18\n    /* \"#utility.yul\":313:318   */\n  dup2\n    /* \"#utility.yul\":273:319   */\n  tag_19\n  jump\t// in\ntag_18:\n    /* \"#utility.yul\":232:325   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":331:793   */\ntag_3:\n  0x00\n  dup1\n    /* \"#utility.yul\":480:482   */\n  0x40\n    /* \"#utility.yul\":468:477   */\n  dup4\n    /* \"#utility.yul\":459:466   */\n  dup6\n    /* \"#utility.yul\":455:478   */\n  sub\n    /* \"#utility.yul\":451:483   */\n  slt\n    /* \"#utility.yul\":448:450   */\n  iszero\n  tag_21\n  jumpi\n    /* \"#utility.yul\":496:497   */\n  0x00\n    /* \"#utility.yul\":493:494   */\n  dup1\n    /* \"#utility.yul\":486:498   */\n  revert\n    /* \"#utility.yul\":448:450   */\ntag_21:\n    /* \"#utility.yul\":538:539   */\n  0x00\n    /* \"#utility.yul\":562:639   */\n  tag_22\n    /* \"#utility.yul\":631:638   */\n  dup6\n    /* \"#utility.yul\":622:628   */\n  dup3\n    /* \"#utility.yul\":611:620   */\n  dup7\n    /* \"#utility.yul\":607:629   */\n  add\n    /* \"#utility.yul\":562:639   */\n  tag_16\n  jump\t// in\ntag_22:\n    /* \"#utility.yul\":552:639   */\n  swap3\n  pop\n    /* \"#utility.yul\":510:649   */\n  pop\n    /* \"#utility.yul\":687:689   */\n  0x20\n    /* \"#utility.yul\":712:776   */\n  tag_23\n    /* \"#utility.yul\":768:775   */\n  dup6\n    /* \"#utility.yul\":759:765   */\n  dup3\n    /* \"#utility.yul\":748:757   */\n  dup7\n    /* \"#utility.yul\":744:766   */\n  add\n    /* \"#utility.yul\":712:776   */\n  tag_12\n  jump\t// in\ntag_23:\n    /* \"#utility.yul\":702:776   */\n  swap2\n  pop\n    /* \"#utility.yul\":659:786   */\n  pop\n    /* \"#utility.yul\":438:793   */\n  swap3\n  pop\n  swap3\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":799:895   */\ntag_24:\n  0x00\n    /* \"#utility.yul\":865:889   */\n  tag_26\n    /* \"#utility.yul\":883:888   */\n  dup3\n    /* \"#utility.yul\":865:889   */\n  tag_27\n  jump\t// in\ntag_26:\n    /* \"#utility.yul\":854:889   */\n  swap1\n  pop\n    /* \"#utility.yul\":844:895   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":901:1010   */\ntag_28:\n  0x00\n    /* \"#utility.yul\":980:1004   */\n  tag_30\n    /* \"#utility.yul\":998:1003   */\n  dup3\n    /* \"#utility.yul\":980:1004   */\n  tag_24\n  jump\t// in\ntag_30:\n    /* \"#utility.yul\":969:1004   */\n  swap1\n  pop\n    /* \"#utility.yul\":959:1010   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1016:1142   */\ntag_27:\n  0x00\n    /* \"#utility.yul\":1093:1135   */\n  0xffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":1086:1091   */\n  dup3\n    /* \"#utility.yul\":1082:1136   */\n  and\n    /* \"#utility.yul\":1071:1136   */\n  swap1\n  pop\n    /* \"#utility.yul\":1061:1142   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1148:1270   */\ntag_15:\n    /* \"#utility.yul\":1221:1245   */\n  tag_33\n    /* \"#utility.yul\":1239:1244   */\n  dup2\n    /* \"#utility.yul\":1221:1245   */\n  tag_24\n  jump\t// in\ntag_33:\n    /* \"#utility.yul\":1214:1219   */\n  dup2\n    /* \"#utility.yul\":1211:1246   */\n  eq\n    /* \"#utility.yul\":1201:1203   */\n  tag_34\n  jumpi\n    /* \"#utility.yul\":1260:1261   */\n  0x00\n    /* \"#utility.yul\":1257:1258   */\n  dup1\n    /* \"#utility.yul\":1250:1262   */\n  revert\n    /* \"#utility.yul\":1201:1203   */\ntag_34:\n    /* \"#utility.yul\":1191:1270   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1276:1424   */\ntag_19:\n    /* \"#utility.yul\":1362:1399   */\n  tag_36\n    /* \"#utility.yul\":1393:1398   */\n  dup2\n    /* \"#utility.yul\":1362:1399   */\n  tag_28\n  jump\t// in\ntag_36:\n    /* \"#utility.yul\":1355:1360   */\n  dup2\n    /* \"#utility.yul\":1352:1400   */\n  eq\n    /* \"#utility.yul\":1342:1344   */\n  tag_37\n  jumpi\n    /* \"#utility.yul\":1414:1415   */\n  0x00\n    /* \"#utility.yul\":1411:1412   */\n  dup1\n    /* \"#utility.yul\":1404:1416   */\n  revert\n    /* \"#utility.yul\":1342:1344   */\ntag_37:\n    /* \"#utility.yul\":1332:1424   */\n  pop\n  jump\t// out\n    /* \"contracts/Omnidex-incentives/incentives/PullRewardsIncentivesController.sol\":530:1852  contract PullRewardsIncentivesController is\r... */\ntag_10:\n  shr(0x60, mload(0x80))\n  shr(0x60, mload(0xa0))\n  codecopy(0x00, dataOffset(sub_0), dataSize(sub_0))\n  assignImmutable(\"0xe229503fec190040ef38484d41ddb4c2fce10c1aa73d9d5bd832f8c76f44643b\")\n  assignImmutable(\"0xfb72c19603b99a84eb94b2a957c683e899e1d0f4b28e255e051e7f1b190ba3b8\")\n  return(0x00, dataSize(sub_0))\nstop\n\nsub_0: assembly {\n        /* \"contracts/Omnidex-incentives/incentives/PullRewardsIncentivesController.sol\":530:1852  contract PullRewardsIncentivesController is\r... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x919cd40f\n      gt\n      tag_25\n      jumpi\n      dup1\n      0xcc69afec\n      gt\n      tag_26\n      jumpi\n      dup1\n      0xcc69afec\n      eq\n      tag_19\n      jumpi\n      dup1\n      0xdde43cba\n      eq\n      tag_20\n      jumpi\n      dup1\n      0xe23ddec5\n      eq\n      tag_21\n      jumpi\n      dup1\n      0xf11b8188\n      eq\n      tag_22\n      jumpi\n      dup1\n      0xf5bb3e02\n      eq\n      tag_23\n      jumpi\n      dup1\n      0xf5cf673b\n      eq\n      tag_24\n      jumpi\n      jump(tag_2)\n    tag_26:\n      dup1\n      0x919cd40f\n      eq\n      tag_14\n      jumpi\n      dup1\n      0x99248ea7\n      eq\n      tag_15\n      jumpi\n      dup1\n      0xaaf5eb68\n      eq\n      tag_16\n      jumpi\n      dup1\n      0xc4d66de8\n      eq\n      tag_17\n      jumpi\n      dup1\n      0xcbcbb507\n      eq\n      tag_18\n      jumpi\n      jump(tag_2)\n    tag_25:\n      dup1\n      0x39ccbdd3\n      gt\n      tag_27\n      jumpi\n      dup1\n      0x39ccbdd3\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x41485304\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x6d34b96e\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x74d945ec\n      eq\n      tag_11\n      jumpi\n      dup1\n      0x79f171b2\n      eq\n      tag_12\n      jumpi\n      dup1\n      0x8b599f26\n      eq\n      tag_13\n      jumpi\n      jump(tag_2)\n    tag_27:\n      dup1\n      0x1652e7b7\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x198fa81e\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x3111e7b3\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x31873e2e\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x3373ee4c\n      eq\n      tag_7\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"contracts/Omnidex-incentives/incentives/base/DistributionManager.sol\":1893:2096  function getAssetData(address asset) public view override returns (uint256, uint256, uint256) {\r... */\n    tag_3:\n      tag_28\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_29\n      swap2\n      swap1\n      tag_30\n      jump\t// in\n    tag_29:\n      tag_31\n      jump\t// in\n    tag_28:\n      mload(0x40)\n      tag_32\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_33\n      jump\t// in\n    tag_32:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Omnidex-incentives/incentives/base/BaseIncentivesController.sol\":5231:5369  function getUserUnclaimedRewards(address _user) external view override returns (uint256) {\r... */\n    tag_4:\n      tag_34\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_35\n      swap2\n      swap1\n      tag_30\n      jump\t// in\n    tag_35:\n      tag_36\n      jump\t// in\n    tag_34:\n      mload(0x40)\n      tag_37\n      swap2\n      swap1\n      tag_38\n      jump\t// in\n    tag_37:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Omnidex-incentives/incentives/base/BaseIncentivesController.sol\":3812:4076  function claimRewards(\r... */\n    tag_5:\n      tag_39\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_40\n      swap2\n      swap1\n      tag_41\n      jump\t// in\n    tag_40:\n      tag_42\n      jump\t// in\n    tag_39:\n      mload(0x40)\n      tag_43\n      swap2\n      swap1\n      tag_38\n      jump\t// in\n    tag_43:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Omnidex-incentives/incentives/base/BaseIncentivesController.sol\":2619:3018  function handleAction(\r... */\n    tag_6:\n      tag_44\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_45\n      swap2\n      swap1\n      tag_46\n      jump\t// in\n    tag_45:\n      tag_47\n      jump\t// in\n    tag_44:\n      stop\n        /* \"contracts/Omnidex-incentives/incentives/base/DistributionManager.sol\":1701:1840  function getUserAssetData(address user, address asset) public view override returns (uint256) {\r... */\n    tag_7:\n      tag_48\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_49\n      swap2\n      swap1\n      tag_50\n      jump\t// in\n    tag_49:\n      tag_51\n      jump\t// in\n    tag_48:\n      mload(0x40)\n      tag_52\n      swap2\n      swap1\n      tag_38\n      jump\t// in\n    tag_52:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Omnidex-incentives/incentives/base/DistributionManager.sol\":1141:1330  function setDistributionEnd(uint256 distributionEnd) external override onlyEmissionManager {\r... */\n    tag_8:\n      tag_53\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_54\n      swap2\n      swap1\n      tag_55\n      jump\t// in\n    tag_54:\n      tag_56\n      jump\t// in\n    tag_53:\n      stop\n        /* \"contracts/Omnidex-incentives/incentives/base/BaseIncentivesController.sol\":4568:4778  function claimRewardsToSelf(address[] calldata assets, uint256 amount)\r... */\n    tag_9:\n      tag_57\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_58\n      swap2\n      swap1\n      tag_59\n      jump\t// in\n    tag_58:\n      tag_60\n      jump\t// in\n    tag_57:\n      mload(0x40)\n      tag_61\n      swap2\n      swap1\n      tag_38\n      jump\t// in\n    tag_61:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Omnidex-incentives/incentives/base/BaseIncentivesController.sol\":4130:4514  function claimRewardsOnBehalf(\r... */\n    tag_10:\n      tag_62\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_63\n      swap2\n      swap1\n      tag_64\n      jump\t// in\n    tag_63:\n      tag_65\n      jump\t// in\n    tag_62:\n      mload(0x40)\n      tag_66\n      swap2\n      swap1\n      tag_38\n      jump\t// in\n    tag_66:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Omnidex-incentives/incentives/base/BaseIncentivesController.sol\":5057:5177  function getClaimer(address user) external view override returns (address) {\r... */\n    tag_11:\n      tag_67\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_68\n      swap2\n      swap1\n      tag_30\n      jump\t// in\n    tag_68:\n      tag_69\n      jump\t// in\n    tag_67:\n      mload(0x40)\n      tag_70\n      swap2\n      swap1\n      tag_71\n      jump\t// in\n    tag_70:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Omnidex-incentives/incentives/base/BaseIncentivesController.sol\":1773:2565  function configureAssets(address[] calldata assets, uint256[] calldata emissionsPerSecond)\r... */\n    tag_12:\n      tag_72\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_73\n      swap2\n      swap1\n      tag_74\n      jump\t// in\n    tag_73:\n      tag_75\n      jump\t// in\n    tag_72:\n      stop\n        /* \"contracts/Omnidex-incentives/incentives/base/BaseIncentivesController.sol\":3072:3758  function getRewardsBalance(address[] calldata assets, address user)\r... */\n    tag_13:\n      tag_76\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_77\n      swap2\n      swap1\n      tag_78\n      jump\t// in\n    tag_77:\n      tag_79\n      jump\t// in\n    tag_76:\n      mload(0x40)\n      tag_80\n      swap2\n      swap1\n      tag_38\n      jump\t// in\n    tag_80:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Omnidex-incentives/incentives/base/DistributionManager.sol\":1543:1648  function DISTRIBUTION_END() external view override returns (uint256) {\r... */\n    tag_14:\n      tag_81\n      tag_82\n      jump\t// in\n    tag_81:\n      mload(0x40)\n      tag_83\n      swap2\n      swap1\n      tag_38\n      jump\t// in\n    tag_83:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Omnidex-incentives/incentives/base/BaseIncentivesController.sol\":1026:1072  address public immutable override REWARD_TOKEN */\n    tag_15:\n      tag_84\n      tag_85\n      jump\t// in\n    tag_84:\n      mload(0x40)\n      tag_86\n      swap2\n      swap1\n      tag_71\n      jump\t// in\n    tag_86:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Omnidex-incentives/incentives/base/DistributionManager.sol\":749:785  uint8 public constant PRECISION = 18 */\n    tag_16:\n      tag_87\n      tag_88\n      jump\t// in\n    tag_87:\n      mload(0x40)\n      tag_89\n      swap2\n      swap1\n      tag_90\n      jump\t// in\n    tag_89:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Omnidex-incentives/incentives/PullRewardsIncentivesController.sol\":988:1138  function initialize(address rewardsVault) external initializer {\r... */\n    tag_17:\n      tag_91\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_92\n      swap2\n      swap1\n      tag_30\n      jump\t// in\n    tag_92:\n      tag_93\n      jump\t// in\n    tag_91:\n      stop\n        /* \"contracts/Omnidex-incentives/incentives/base/DistributionManager.sol\":701:742  address public immutable EMISSION_MANAGER */\n    tag_18:\n      tag_94\n      tag_95\n      jump\t// in\n    tag_94:\n      mload(0x40)\n      tag_96\n      swap2\n      swap1\n      tag_71\n      jump\t// in\n    tag_96:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Omnidex-incentives/incentives/base/DistributionManager.sol\":1383:1490  function getDistributionEnd() external view override returns (uint256) {\r... */\n    tag_19:\n      tag_97\n      tag_98\n      jump\t// in\n    tag_97:\n      mload(0x40)\n      tag_99\n      swap2\n      swap1\n      tag_38\n      jump\t// in\n    tag_99:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Omnidex-incentives/incentives/base/BaseIncentivesController.sol\":983:1019  uint256 public constant REVISION = 1 */\n    tag_20:\n      tag_100\n      tag_101\n      jump\t// in\n    tag_100:\n      mload(0x40)\n      tag_102\n      swap2\n      swap1\n      tag_38\n      jump\t// in\n    tag_102:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Omnidex-incentives/incentives/PullRewardsIncentivesController.sol\":1234:1326  function getRewardsVault() external view returns (address) {\r... */\n    tag_21:\n      tag_103\n      tag_104\n      jump\t// in\n    tag_103:\n      mload(0x40)\n      tag_105\n      swap2\n      swap1\n      tag_71\n      jump\t// in\n    tag_105:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Omnidex-incentives/incentives/base/DistributionManager.sol\":792:835  mapping(address => AssetData) public assets */\n    tag_22:\n      tag_106\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_107\n      swap2\n      swap1\n      tag_30\n      jump\t// in\n    tag_107:\n      tag_108\n      jump\t// in\n    tag_106:\n      mload(0x40)\n      tag_109\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_110\n      jump\t// in\n    tag_109:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Omnidex-incentives/incentives/PullRewardsIncentivesController.sol\":1485:1647  function setRewardsVault(address rewardsVault) external onlyEmissionManager {\r... */\n    tag_23:\n      tag_111\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_112\n      swap2\n      swap1\n      tag_30\n      jump\t// in\n    tag_112:\n      tag_113\n      jump\t// in\n    tag_111:\n      stop\n        /* \"contracts/Omnidex-incentives/incentives/base/BaseIncentivesController.sol\":4832:5003  function setClaimer(address user, address caller) external override onlyEmissionManager {\r... */\n    tag_24:\n      tag_114\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_115\n      swap2\n      swap1\n      tag_50\n      jump\t// in\n    tag_115:\n      tag_116\n      jump\t// in\n    tag_114:\n      stop\n        /* \"contracts/Omnidex-incentives/incentives/base/DistributionManager.sol\":1893:2096  function getAssetData(address asset) public view override returns (uint256, uint256, uint256) {\r... */\n    tag_31:\n        /* \"contracts/Omnidex-incentives/incentives/base/DistributionManager.sol\":1960:1967  uint256 */\n      0x00\n        /* \"contracts/Omnidex-incentives/incentives/base/DistributionManager.sol\":1969:1976  uint256 */\n      dup1\n        /* \"contracts/Omnidex-incentives/incentives/base/DistributionManager.sol\":1978:1985  uint256 */\n      0x00\n        /* \"contracts/Omnidex-incentives/incentives/base/DistributionManager.sol\":2002:2008  assets */\n      0x33\n        /* \"contracts/Omnidex-incentives/incentives/base/DistributionManager.sol\":2002:2015  assets[asset] */\n      0x00\n        /* \"contracts/Omnidex-incentives/incentives/base/DistributionManager.sol\":2009:2014  asset */\n      dup6\n        /* \"contracts/Omnidex-incentives/incentives/base/DistributionManager.sol\":2002:2015  assets[asset] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/Omnidex-incentives/incentives/base/DistributionManager.sol\":2002:2021  assets[asset].index */\n      0x00\n      add\n      0x0d\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffff\n      and\n        /* \"contracts/Omnidex-incentives/incentives/base/DistributionManager.sol\":2023:2029  assets */\n      0x33\n        /* \"contracts/Omnidex-incentives/incentives/base/DistributionManager.sol\":2023:2036  assets[asset] */\n      0x00\n        /* \"contracts/Omnidex-incentives/incentives/base/DistributionManager.sol\":2030:2035  asset */\n      dup7\n        /* \"contracts/Omnidex-incentives/incentives/base/DistributionManager.sol\":2023:2036  assets[asset] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/Omnidex-incentives/incentives/base/DistributionManager.sol\":2023:2054  assets[asset].emissionPerSecond */\n      0x00\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffff\n      and\n        /* \"contracts/Omnidex-incentives/incentives/base/DistributionManager.sol\":2056:2062  assets */\n      0x33\n        /* \"contracts/Omnidex-incentives/incentives/base/DistributionManager.sol\":2056:2069  assets[asset] */\n      0x00\n        /* \"contracts/Omnidex-incentives/incentives/base/DistributionManager.sol\":2063:2068  asset */\n      dup8\n        /* \"contracts/Omnidex-incentives/incentives/base/DistributionManager.sol\":2056:2069  assets[asset] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/Omnidex-incentives/incentives/base/DistributionManager.sol\":2056:2089  assets[asset].lastUpdateTimestamp */\n      0x00\n      add\n      0x1a\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffff\n      and\n        /* \"contracts/Omnidex-incentives/incentives/base/DistributionManager.sol\":1994:2090  return (assets[asset].index, assets[asset].emissionPerSecond, assets[asset].lastUpdateTimestamp) */\n      dup3\n      0xffffffffffffffffffffffffff\n      and\n      swap3\n      pop\n      dup2\n      0xffffffffffffffffffffffffff\n      and\n      swap2\n      pop\n      dup1\n      0xffffffffff\n      and\n      swap1\n      pop\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      pop\n        /* \"contracts/Omnidex-incentives/incentives/base/DistributionManager.sol\":1893:2096  function getAssetData(address asset) public view override returns (uint256, uint256, uint256) {\r... */\n      swap2\n      swap4\n      swap1\n      swap3\n      pop\n      jump\t// out\n        /* \"contracts/Omnidex-incentives/incentives/base/BaseIncentivesController.sol\":5231:5369  function getUserUnclaimedRewards(address _user) external view override returns (uint256) {\r... */\n    tag_36:\n        /* \"contracts/Omnidex-incentives/incentives/base/BaseIncentivesController.sol\":5311:5318  uint256 */\n      0x00\n        /* \"contracts/Omnidex-incentives/incentives/base/BaseIncentivesController.sol\":5334:5356  _usersUnclaimedRewards */\n      0x35\n        /* \"contracts/Omnidex-incentives/incentives/base/BaseIncentivesController.sol\":5334:5363  _usersUnclaimedRewards[_user] */\n      0x00\n        /* \"contracts/Omnidex-incentives/incentives/base/BaseIncentivesController.sol\":5357:5362  _user */\n      dup4\n        /* \"contracts/Omnidex-incentives/incentives/base/BaseIncentivesController.sol\":5334:5363  _usersUnclaimedRewards[_user] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/Omnidex-incentives/incentives/base/BaseIncentivesController.sol\":5327:5363  return _usersUnclaimedRewards[_user] */\n      swap1\n      pop\n        /* \"contracts/Omnidex-incentives/incentives/base/BaseIncentivesController.sol\":5231:5369  function getUserUnclaimedRewards(address _user) external view override returns (uint256) {\r... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/Omnidex-incentives/incentives/base/BaseIncentivesController.sol\":3812:4076  function claimRewards(\r... */\n    tag_42:\n        /* \"contracts/Omnidex-incentives/incentives/base/BaseIncentivesController.sol\":3936:3943  uint256 */\n      0x00\n        /* \"contracts/Omnidex-incentives/incentives/base/BaseIncentivesController.sol\":3974:3975  0 */\n      dup1\n        /* \"contracts/Omnidex-incentives/incentives/base/BaseIncentivesController.sol\":3960:3976  to != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Omnidex-incentives/incentives/base/BaseIncentivesController.sol\":3960:3962  to */\n      dup3\n        /* \"contracts/Omnidex-incentives/incentives/base/BaseIncentivesController.sol\":3960:3976  to != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"contracts/Omnidex-incentives/incentives/base/BaseIncentivesController.sol\":3952:3999  require(to != address(0), 'INVALID_TO_ADDRESS') */\n      tag_120\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_121\n      swap1\n      tag_122\n      jump\t// in\n    tag_121:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_120:\n        /* \"contracts/Omnidex-incentives/incentives/base/BaseIncentivesController.sol\":4013:4070  _claimRewards(assets, amount, msg.sender, msg.sender, to) */\n      tag_123\n        /* \"contracts/Omnidex-incentives/incentives/base/BaseIncentivesController.sol\":4027:4033  assets */\n      dup6\n      dup6\n        /* \"contracts/Omnidex-incentives/incentives/base/BaseIncentivesController.sol\":4035:4041  amount */\n      dup6\n        /* \"contracts/Omnidex-incentives/incentives/base/BaseIncentivesController.sol\":4043:4053  msg.sender */\n      caller\n        /* \"contracts/Omnidex-incentives/incentives/base/BaseIncentivesController.sol\":4055:4065  msg.sender */\n      caller\n        /* \"contracts/Omnidex-incentives/incentives/base/BaseIncentivesController.sol\":4067:4069  to */\n      dup8\n        /* \"contracts/Omnidex-incentives/incentives/base/BaseIncentivesController.sol\":4013:4026  _claimRewards */\n      tag_124\n        /* \"contracts/Omnidex-incentives/incentives/base/BaseIncentivesController.sol\":4013:4070  _claimRewards(assets, amount, msg.sender, msg.sender, to) */\n      jump\t// in\n    tag_123:\n        /* \"contracts/Omnidex-incentives/incentives/base/BaseIncentivesController.sol\":4006:4070  return _claimRewards(assets, amount, msg.sender, msg.sender, to) */\n      swap1\n      pop\n        /* \"contracts/Omnidex-incentives/incentives/base/BaseIncentivesController.sol\":3812:4076  function claimRewards(\r... */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/Omnidex-incentives/incentives/base/BaseIncentivesController.sol\":2619:3018  function handleAction(\r... */\n    tag_47:\n        /* \"contracts/Omnidex-incentives/incentives/base/BaseIncentivesController.sol\":2742:2764  uint256 accruedRewards */\n      0x00\n        /* \"contracts/Omnidex-incentives/incentives/base/BaseIncentivesController.sol\":2767:2835  _updateUserAssetInternal(user, msg.sender, userBalance, totalSupply) */\n      tag_126\n        /* \"contracts/Omnidex-incentives/incentives/base/BaseIncentivesController.sol\":2792:2796  user */\n      dup5\n        /* \"contracts/Omnidex-incentives/incentives/base/BaseIncentivesController.sol\":2798:2808  msg.sender */\n      caller\n        /* \"contracts/Omnidex-incentives/incentives/base/BaseIncentivesController.sol\":2810:2821  userBalance */\n      dup5\n        /* \"contracts/Omnidex-incentives/incentives/base/BaseIncentivesController.sol\":2823:2834  totalSupply */\n      dup7\n        /* \"contracts/Omnidex-incentives/incentives/base/BaseIncentivesController.sol\":2767:2791  _updateUserAssetInternal */\n      tag_127\n        /* \"contracts/Omnidex-incentives/incentives/base/BaseIncentivesController.sol\":2767:2835  _updateUserAssetInternal(user, msg.sender, userBalance, totalSupply) */\n      jump\t// in\n    tag_126:\n        /* \"contracts/Omnidex-incentives/incentives/base/BaseIncentivesController.sol\":2742:2835  uint256 accruedRewards = _updateUserAssetInternal(user, msg.sender, userBalance, totalSupply) */\n      swap1\n      pop\n        /* \"contracts/Omnidex-incentives/incentives/base/BaseIncentivesController.sol\":2864:2865  0 */\n      0x00\n        /* \"contracts/Omnidex-incentives/incentives/base/BaseIncentivesController.sol\":2846:2860  accruedRewards */\n      dup2\n        /* \"contracts/Omnidex-incentives/incentives/base/BaseIncentivesController.sol\":2846:2865  accruedRewards != 0 */\n      eq\n        /* \"contracts/Omnidex-incentives/incentives/base/BaseIncentivesController.sol\":2842:3013  if (accruedRewards != 0) {\r... */\n      tag_128\n      jumpi\n        /* \"contracts/Omnidex-incentives/incentives/base/BaseIncentivesController.sol\":2907:2955  _usersUnclaimedRewards[user].add(accruedRewards) */\n      tag_129\n        /* \"contracts/Omnidex-incentives/incentives/base/BaseIncentivesController.sol\":2940:2954  accruedRewards */\n      dup2\n        /* \"contracts/Omnidex-incentives/incentives/base/BaseIncentivesController.sol\":2907:2929  _usersUnclaimedRewards */\n      0x35\n        /* \"contracts/Omnidex-incentives/incentives/base/BaseIncentivesController.sol\":2907:2935  _usersUnclaimedRewards[user] */\n      0x00\n        /* \"contracts/Omnidex-incentives/incentives/base/BaseIncentivesController.sol\":2930:2934  user */\n      dup8\n        /* \"contracts/Omnidex-incentives/incentives/base/BaseIncentivesController.sol\":2907:2935  _usersUnclaimedRewards[user] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/Omnidex-incentives/incentives/base/BaseIncentivesController.sol\":2907:2939  _usersUnclaimedRewards[user].add */\n      tag_130\n      swap1\n        /* \"contracts/Omnidex-incentives/incentives/base/BaseIncentivesController.sol\":2907:2955  _usersUnclaimedRewards[user].add(accruedRewards) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_129:\n        /* \"contracts/Omnidex-incentives/incentives/base/BaseIncentivesController.sol\":2876:2898  _usersUnclaimedRewards */\n      0x35\n        /* \"contracts/Omnidex-incentives/incentives/base/BaseIncentivesController.sol\":2876:2904  _usersUnclaimedRewards[user] */\n      0x00\n        /* \"contracts/Omnidex-incentives/incentives/base/BaseIncentivesController.sol\":2899:2903  user */\n      dup7\n        /* \"contracts/Omnidex-incentives/incentives/base/BaseIncentivesController.sol\":2876:2904  _usersUnclaimedRewards[user] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/Omnidex-incentives/incentives/base/BaseIncentivesController.sol\":2876:2955  _usersUnclaimedRewards[user] = _usersUnclaimedRewards[user].add(accruedRewards) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/Omnidex-incentives/incentives/base/BaseIncentivesController.sol\":2984:2988  user */\n      dup4\n        /* \"contracts/Omnidex-incentives/incentives/base/BaseIncentivesController.sol\":2969:3005  RewardsAccrued(user, accruedRewards) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x2468f9268c60ad90e2d49edb0032c8a001e733ae888b3ab8e982edf535be1a76\n        /* \"contracts/Omnidex-incentives/incentives/base/BaseIncentivesController.sol\":2990:3004  accruedRewards */\n      dup3\n        /* \"contracts/Omnidex-incentives/incentives/base/BaseIncentivesController.sol\":2969:3005  RewardsAccrued(user, accruedRewards) */\n      mload(0x40)\n      tag_131\n      swap2\n      swap1\n      tag_38\n      jump\t// in\n    tag_131:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"contracts/Omnidex-incentives/incentives/base/BaseIncentivesController.sol\":2842:3013  if (accruedRewards != 0) {\r... */\n    tag_128:\n        /* \"contracts/Omnidex-incentives/incentives/base/BaseIncentivesController.sol\":2619:3018  function handleAction(\r... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/Omnidex-incentives/incentives/base/DistributionManager.sol\":1701:1840  function getUserAssetData(address user, address asset) public view override returns (uint256) {\r... */\n    tag_51:\n        /* \"contracts/Omnidex-incentives/incentives/base/DistributionManager.sol\":1786:1793  uint256 */\n      0x00\n        /* \"contracts/Omnidex-incentives/incentives/base/DistributionManager.sol\":1809:1815  assets */\n      0x33\n        /* \"contracts/Omnidex-incentives/incentives/base/DistributionManager.sol\":1809:1822  assets[asset] */\n      0x00\n        /* \"contracts/Omnidex-incentives/incentives/base/DistributionManager.sol\":1816:1821  asset */\n      dup4\n        /* \"contracts/Omnidex-incentives/incentives/base/DistributionManager.sol\":1809:1822  assets[asset] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/Omnidex-incentives/incentives/base/DistributionManager.sol\":1809:1828  assets[asset].users */\n      0x01\n      add\n        /* \"contracts/Omnidex-incentives/incentives/base/DistributionManager.sol\":1809:1834  assets[asset].users[user] */\n      0x00\n        /* \"contracts/Omnidex-incentives/incentives/base/DistributionManager.sol\":1829:1833  user */\n      dup5\n        /* \"contracts/Omnidex-incentives/incentives/base/DistributionManager.sol\":1809:1834  assets[asset].users[user] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/Omnidex-incentives/incentives/base/DistributionManager.sol\":1802:1834  return assets[asset].users[user] */\n      swap1\n      pop\n        /* \"contracts/Omnidex-incentives/incentives/base/DistributionManager.sol\":1701:1840  function getUserAssetData(address user, address asset) public view override returns (uint256) {\r... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/Omnidex-incentives/incentives/base/DistributionManager.sol\":1141:1330  function setDistributionEnd(uint256 distributionEnd) external override onlyEmissionManager {\r... */\n    tag_56:\n        /* \"contracts/Omnidex-incentives/incentives/base/DistributionManager.sol\":942:958  EMISSION_MANAGER */\n      immutable(\"0xfb72c19603b99a84eb94b2a957c683e899e1d0f4b28e255e051e7f1b190ba3b8\")\n        /* \"contracts/Omnidex-incentives/incentives/base/DistributionManager.sol\":928:958  msg.sender == EMISSION_MANAGER */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Omnidex-incentives/incentives/base/DistributionManager.sol\":928:938  msg.sender */\n      caller\n        /* \"contracts/Omnidex-incentives/incentives/base/DistributionManager.sol\":928:958  msg.sender == EMISSION_MANAGER */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/Omnidex-incentives/incentives/base/DistributionManager.sol\":920:984  require(msg.sender == EMISSION_MANAGER, 'ONLY_EMISSION_MANAGER') */\n      tag_134\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_135\n      swap1\n      tag_136\n      jump\t// in\n    tag_135:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_134:\n        /* \"contracts/Omnidex-incentives/incentives/base/DistributionManager.sol\":1258:1273  distributionEnd */\n      dup1\n        /* \"contracts/Omnidex-incentives/incentives/base/DistributionManager.sol\":1239:1255  _distributionEnd */\n      0x34\n        /* \"contracts/Omnidex-incentives/incentives/base/DistributionManager.sol\":1239:1273  _distributionEnd = distributionEnd */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/Omnidex-incentives/incentives/base/DistributionManager.sol\":1285:1324  DistributionEndUpdated(distributionEnd) */\n      0x1cc1849a6602c3e91f2088cadea4381cc5717f2f28584197060ed2ebb434c16f\n        /* \"contracts/Omnidex-incentives/incentives/base/DistributionManager.sol\":1308:1323  distributionEnd */\n      dup2\n        /* \"contracts/Omnidex-incentives/incentives/base/DistributionManager.sol\":1285:1324  DistributionEndUpdated(distributionEnd) */\n      mload(0x40)\n      tag_138\n      swap2\n      swap1\n      tag_38\n      jump\t// in\n    tag_138:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"contracts/Omnidex-incentives/incentives/base/DistributionManager.sol\":1141:1330  function setDistributionEnd(uint256 distributionEnd) external override onlyEmissionManager {\r... */\n      pop\n      jump\t// out\n        /* \"contracts/Omnidex-incentives/incentives/base/BaseIncentivesController.sol\":4568:4778  function claimRewardsToSelf(address[] calldata assets, uint256 amount)\r... */\n    tag_60:\n        /* \"contracts/Omnidex-incentives/incentives/base/BaseIncentivesController.sol\":4681:4688  uint256 */\n      0x00\n        /* \"contracts/Omnidex-incentives/incentives/base/BaseIncentivesController.sol\":4707:4772  _claimRewards(assets, amount, msg.sender, msg.sender, msg.sender) */\n      tag_140\n        /* \"contracts/Omnidex-incentives/incentives/base/BaseIncentivesController.sol\":4721:4727  assets */\n      dup5\n      dup5\n        /* \"contracts/Omnidex-incentives/incentives/base/BaseIncentivesController.sol\":4729:4735  amount */\n      dup5\n        /* \"contracts/Omnidex-incentives/incentives/base/BaseIncentivesController.sol\":4737:4747  msg.sender */\n      caller\n        /* \"contracts/Omnidex-incentives/incentives/base/BaseIncentivesController.sol\":4749:4759  msg.sender */\n      caller\n        /* \"contracts/Omnidex-incentives/incentives/base/BaseIncentivesController.sol\":4761:4771  msg.sender */\n      caller\n        /* \"contracts/Omnidex-incentives/incentives/base/BaseIncentivesController.sol\":4707:4720  _claimRewards */\n      tag_124\n        /* \"contracts/Omnidex-incentives/incentives/base/BaseIncentivesController.sol\":4707:4772  _claimRewards(assets, amount, msg.sender, msg.sender, msg.sender) */\n      jump\t// in\n    tag_140:\n        /* \"contracts/Omnidex-incentives/incentives/base/BaseIncentivesController.sol\":4700:4772  return _claimRewards(assets, amount, msg.sender, msg.sender, msg.sender) */\n      swap1\n      pop\n        /* \"contracts/Omnidex-incentives/incentives/base/BaseIncentivesController.sol\":4568:4778  function claimRewardsToSelf(address[] calldata assets, uint256 amount)\r... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/Omnidex-incentives/incentives/base/BaseIncentivesController.sol\":4130:4514  function claimRewardsOnBehalf(\r... */\n    tag_65:\n        /* \"contracts/Omnidex-incentives/incentives/base/BaseIncentivesController.sol\":4322:4329  uint256 */\n      0x00\n        /* \"contracts/Omnidex-incentives/incentives/base/BaseIncentivesController.sol\":4295:4305  msg.sender */\n      caller\n        /* \"contracts/Omnidex-incentives/incentives/base/BaseIncentivesController.sol\":4307:4311  user */\n      dup4\n        /* \"contracts/Omnidex-incentives/incentives/base/BaseIncentivesController.sol\":1517:1524  claimer */\n      dup2\n        /* \"contracts/Omnidex-incentives/incentives/base/BaseIncentivesController.sol\":1488:1524  _authorizedClaimers[user] == claimer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Omnidex-incentives/incentives/base/BaseIncentivesController.sol\":1488:1507  _authorizedClaimers */\n      0x36\n        /* \"contracts/Omnidex-incentives/incentives/base/BaseIncentivesController.sol\":1488:1513  _authorizedClaimers[user] */\n      0x00\n        /* \"contracts/Omnidex-incentives/incentives/base/BaseIncentivesController.sol\":1508:1512  user */\n      dup4\n        /* \"contracts/Omnidex-incentives/incentives/base/BaseIncentivesController.sol\":1488:1513  _authorizedClaimers[user] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Omnidex-incentives/incentives/base/BaseIncentivesController.sol\":1488:1524  _authorizedClaimers[user] == claimer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/Omnidex-incentives/incentives/base/BaseIncentivesController.sol\":1480:1549  require(_authorizedClaimers[user] == claimer, 'CLAIMER_UNAUTHORIZED') */\n      tag_142\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_143\n      swap1\n      tag_144\n      jump\t// in\n    tag_143:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_142:\n        /* \"contracts/Omnidex-incentives/incentives/base/BaseIncentivesController.sol\":4362:4363  0 */\n      0x00\n        /* \"contracts/Omnidex-incentives/incentives/base/BaseIncentivesController.sol\":4346:4364  user != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Omnidex-incentives/incentives/base/BaseIncentivesController.sol\":4346:4350  user */\n      dup6\n        /* \"contracts/Omnidex-incentives/incentives/base/BaseIncentivesController.sol\":4346:4364  user != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"contracts/Omnidex-incentives/incentives/base/BaseIncentivesController.sol\":4338:4389  require(user != address(0), 'INVALID_USER_ADDRESS') */\n      tag_146\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_147\n      swap1\n      tag_148\n      jump\t// in\n    tag_147:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_146:\n        /* \"contracts/Omnidex-incentives/incentives/base/BaseIncentivesController.sol\":4418:4419  0 */\n      0x00\n        /* \"contracts/Omnidex-incentives/incentives/base/BaseIncentivesController.sol\":4404:4420  to != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Omnidex-incentives/incentives/base/BaseIncentivesController.sol\":4404:4406  to */\n      dup5\n        /* \"contracts/Omnidex-incentives/incentives/base/BaseIncentivesController.sol\":4404:4420  to != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"contracts/Omnidex-incentives/incentives/base/BaseIncentivesController.sol\":4396:4443  require(to != address(0), 'INVALID_TO_ADDRESS') */\n      tag_149\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_150\n      swap1\n      tag_122\n      jump\t// in\n    tag_150:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_149:\n        /* \"contracts/Omnidex-incentives/incentives/base/BaseIncentivesController.sol\":4457:4508  _claimRewards(assets, amount, msg.sender, user, to) */\n      tag_151\n        /* \"contracts/Omnidex-incentives/incentives/base/BaseIncentivesController.sol\":4471:4477  assets */\n      dup9\n      dup9\n        /* \"contracts/Omnidex-incentives/incentives/base/BaseIncentivesController.sol\":4479:4485  amount */\n      dup9\n        /* \"contracts/Omnidex-incentives/incentives/base/BaseIncentivesController.sol\":4487:4497  msg.sender */\n      caller\n        /* \"contracts/Omnidex-incentives/incentives/base/BaseIncentivesController.sol\":4499:4503  user */\n      dup10\n        /* \"contracts/Omnidex-incentives/incentives/base/BaseIncentivesController.sol\":4505:4507  to */\n      dup10\n        /* \"contracts/Omnidex-incentives/incentives/base/BaseIncentivesController.sol\":4457:4470  _claimRewards */\n      tag_124\n        /* \"contracts/Omnidex-incentives/incentives/base/BaseIncentivesController.sol\":4457:4508  _claimRewards(assets, amount, msg.sender, user, to) */\n      jump\t// in\n    tag_151:\n        /* \"contracts/Omnidex-incentives/incentives/base/BaseIncentivesController.sol\":4450:4508  return _claimRewards(assets, amount, msg.sender, user, to) */\n      swap3\n      pop\n        /* \"contracts/Omnidex-incentives/incentives/base/BaseIncentivesController.sol\":4130:4514  function claimRewardsOnBehalf(\r... */\n      pop\n      pop\n      swap6\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/Omnidex-incentives/incentives/base/BaseIncentivesController.sol\":5057:5177  function getClaimer(address user) external view override returns (address) {\r... */\n    tag_69:\n        /* \"contracts/Omnidex-incentives/incentives/base/BaseIncentivesController.sol\":5123:5130  address */\n      0x00\n        /* \"contracts/Omnidex-incentives/incentives/base/BaseIncentivesController.sol\":5146:5165  _authorizedClaimers */\n      0x36\n        /* \"contracts/Omnidex-incentives/incentives/base/BaseIncentivesController.sol\":5146:5171  _authorizedClaimers[user] */\n      0x00\n        /* \"contracts/Omnidex-incentives/incentives/base/BaseIncentivesController.sol\":5166:5170  user */\n      dup4\n        /* \"contracts/Omnidex-incentives/incentives/base/BaseIncentivesController.sol\":5146:5171  _authorizedClaimers[user] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Omnidex-incentives/incentives/base/BaseIncentivesController.sol\":5139:5171  return _authorizedClaimers[user] */\n      swap1\n      pop\n        /* \"contracts/Omnidex-incentives/incentives/base/BaseIncentivesController.sol\":5057:5177  function getClaimer(address user) external view override returns (address) {\r... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/Omnidex-incentives/incentives/base/BaseIncentivesController.sol\":1773:2565  function configureAssets(address[] calldata assets, uint256[] calldata emissionsPerSecond)\r... */\n    tag_75:\n        /* \"contracts/Omnidex-incentives/incentives/base/DistributionManager.sol\":942:958  EMISSION_MANAGER */\n      immutable(\"0xfb72c19603b99a84eb94b2a957c683e899e1d0f4b28e255e051e7f1b190ba3b8\")\n        /* \"contracts/Omnidex-incentives/incentives/base/DistributionManager.sol\":928:958  msg.sender == EMISSION_MANAGER */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Omnidex-incentives/incentives/base/DistributionManager.sol\":928:938  msg.sender */\n      caller\n        /* \"contracts/Omnidex-incentives/incentives/base/DistributionManager.sol\":928:958  msg.sender == EMISSION_MANAGER */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/Omnidex-incentives/incentives/base/DistributionManager.sol\":920:984  require(msg.sender == EMISSION_MANAGER, 'ONLY_EMISSION_MANAGER') */\n      tag_154\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_155\n      swap1\n      tag_136\n      jump\t// in\n    tag_155:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_154:\n        /* \"contracts/Omnidex-incentives/incentives/base/BaseIncentivesController.sol\":1952:1970  emissionsPerSecond */\n      dup2\n      dup2\n        /* \"contracts/Omnidex-incentives/incentives/base/BaseIncentivesController.sol\":1952:1977  emissionsPerSecond.length */\n      swap1\n      pop\n        /* \"contracts/Omnidex-incentives/incentives/base/BaseIncentivesController.sol\":1935:1941  assets */\n      dup5\n      dup5\n        /* \"contracts/Omnidex-incentives/incentives/base/BaseIncentivesController.sol\":1935:1948  assets.length */\n      swap1\n      pop\n        /* \"contracts/Omnidex-incentives/incentives/base/BaseIncentivesController.sol\":1935:1977  assets.length == emissionsPerSecond.length */\n      eq\n        /* \"contracts/Omnidex-incentives/incentives/base/BaseIncentivesController.sol\":1927:2003  require(assets.length == emissionsPerSecond.length, 'INVALID_CONFIGURATION') */\n      tag_157\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_158\n      swap1\n      tag_159\n      jump\t// in\n    tag_158:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_157:\n        /* \"contracts/Omnidex-incentives/incentives/base/BaseIncentivesController.sol\":2012:2068  DistributionTypes.AssetConfigInput[] memory assetsConfig */\n      0x60\n        /* \"contracts/Omnidex-incentives/incentives/base/BaseIncentivesController.sol\":2119:2125  assets */\n      dup5\n      dup5\n        /* \"contracts/Omnidex-incentives/incentives/base/BaseIncentivesController.sol\":2119:2132  assets.length */\n      swap1\n      pop\n        /* \"contracts/Omnidex-incentives/incentives/base/BaseIncentivesController.sol\":2078:2133  new DistributionTypes.AssetConfigInput[](assets.length) */\n      0xffffffffffffffff\n      dup2\n      gt\n      dup1\n      iszero\n      tag_160\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_160:\n      pop\n      mload(0x40)\n      swap1\n      dup1\n      dup3\n      mstore\n      dup1\n      0x20\n      mul\n      0x20\n      add\n      dup3\n      add\n      0x40\n      mstore\n      dup1\n      iszero\n      tag_161\n      jumpi\n      dup2\n      0x20\n      add\n    tag_162:\n      tag_163\n      tag_164\n      jump\t// in\n    tag_163:\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      0x01\n      swap1\n      sub\n      swap1\n      dup2\n      tag_162\n      jumpi\n      swap1\n      pop\n    tag_161:\n      pop\n        /* \"contracts/Omnidex-incentives/incentives/base/BaseIncentivesController.sol\":2012:2133  DistributionTypes.AssetConfigInput[] memory assetsConfig =\r... */\n      swap1\n      pop\n        /* \"contracts/Omnidex-incentives/incentives/base/BaseIncentivesController.sol\":2147:2156  uint256 i */\n      0x00\n        /* \"contracts/Omnidex-incentives/incentives/base/BaseIncentivesController.sol\":2142:2523  for (uint256 i = 0; i < assets.length; i++) {\r... */\n    tag_165:\n        /* \"contracts/Omnidex-incentives/incentives/base/BaseIncentivesController.sol\":2166:2172  assets */\n      dup6\n      dup6\n        /* \"contracts/Omnidex-incentives/incentives/base/BaseIncentivesController.sol\":2166:2179  assets.length */\n      swap1\n      pop\n        /* \"contracts/Omnidex-incentives/incentives/base/BaseIncentivesController.sol\":2162:2163  i */\n      dup2\n        /* \"contracts/Omnidex-incentives/incentives/base/BaseIncentivesController.sol\":2162:2179  i < assets.length */\n      lt\n        /* \"contracts/Omnidex-incentives/incentives/base/BaseIncentivesController.sol\":2142:2523  for (uint256 i = 0; i < assets.length; i++) {\r... */\n      iszero\n      tag_166\n      jumpi\n        /* \"contracts/Omnidex-incentives/incentives/base/BaseIncentivesController.sol\":2237:2255  emissionsPerSecond */\n      dup4\n      dup4\n        /* \"contracts/Omnidex-incentives/incentives/base/BaseIncentivesController.sol\":2256:2257  i */\n      dup3\n        /* \"contracts/Omnidex-incentives/incentives/base/BaseIncentivesController.sol\":2237:2258  emissionsPerSecond[i] */\n      dup2\n      dup2\n      lt\n      tag_168\n      jumpi\n      invalid\n    tag_168:\n      swap1\n      pop\n      0x20\n      mul\n      add\n      calldataload\n        /* \"contracts/Omnidex-incentives/incentives/base/BaseIncentivesController.sol\":2211:2229  emissionsPerSecond */\n      dup5\n      dup5\n        /* \"contracts/Omnidex-incentives/incentives/base/BaseIncentivesController.sol\":2230:2231  i */\n      dup4\n        /* \"contracts/Omnidex-incentives/incentives/base/BaseIncentivesController.sol\":2211:2232  emissionsPerSecond[i] */\n      dup2\n      dup2\n      lt\n      tag_169\n      jumpi\n      invalid\n    tag_169:\n      swap1\n      pop\n      0x20\n      mul\n      add\n      calldataload\n        /* \"contracts/Omnidex-incentives/incentives/base/BaseIncentivesController.sol\":2203:2258  uint104(emissionsPerSecond[i]) == emissionsPerSecond[i] */\n      0xffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/Omnidex-incentives/incentives/base/BaseIncentivesController.sol\":2195:2299  require(uint104(emissionsPerSecond[i]) == emissionsPerSecond[i], 'Index overflow at emissionsPerSecond') */\n      tag_170\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_171\n      swap1\n      tag_172\n      jump\t// in\n    tag_171:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_170:\n        /* \"contracts/Omnidex-incentives/incentives/base/BaseIncentivesController.sol\":2342:2348  assets */\n      dup6\n      dup6\n        /* \"contracts/Omnidex-incentives/incentives/base/BaseIncentivesController.sol\":2349:2350  i */\n      dup3\n        /* \"contracts/Omnidex-incentives/incentives/base/BaseIncentivesController.sol\":2342:2351  assets[i] */\n      dup2\n      dup2\n      lt\n      tag_173\n      jumpi\n      invalid\n    tag_173:\n      swap1\n      pop\n      0x20\n      mul\n      add\n      0x20\n      dup2\n      add\n      swap1\n      tag_174\n      swap2\n      swap1\n      tag_30\n      jump\t// in\n    tag_174:\n        /* \"contracts/Omnidex-incentives/incentives/base/BaseIncentivesController.sol\":2308:2320  assetsConfig */\n      dup3\n        /* \"contracts/Omnidex-incentives/incentives/base/BaseIncentivesController.sol\":2321:2322  i */\n      dup3\n        /* \"contracts/Omnidex-incentives/incentives/base/BaseIncentivesController.sol\":2308:2323  assetsConfig[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_175\n      jumpi\n      invalid\n    tag_175:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n        /* \"contracts/Omnidex-incentives/incentives/base/BaseIncentivesController.sol\":2308:2339  assetsConfig[i].underlyingAsset */\n      0x40\n      add\n        /* \"contracts/Omnidex-incentives/incentives/base/BaseIncentivesController.sol\":2308:2351  assetsConfig[i].underlyingAsset = assets[i] */\n      swap1\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      pop\n      pop\n        /* \"contracts/Omnidex-incentives/incentives/base/BaseIncentivesController.sol\":2404:2422  emissionsPerSecond */\n      dup4\n      dup4\n        /* \"contracts/Omnidex-incentives/incentives/base/BaseIncentivesController.sol\":2423:2424  i */\n      dup3\n        /* \"contracts/Omnidex-incentives/incentives/base/BaseIncentivesController.sol\":2404:2425  emissionsPerSecond[i] */\n      dup2\n      dup2\n      lt\n      tag_176\n      jumpi\n      invalid\n    tag_176:\n      swap1\n      pop\n      0x20\n      mul\n      add\n      calldataload\n        /* \"contracts/Omnidex-incentives/incentives/base/BaseIncentivesController.sol\":2360:2372  assetsConfig */\n      dup3\n        /* \"contracts/Omnidex-incentives/incentives/base/BaseIncentivesController.sol\":2373:2374  i */\n      dup3\n        /* \"contracts/Omnidex-incentives/incentives/base/BaseIncentivesController.sol\":2360:2375  assetsConfig[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_177\n      jumpi\n      invalid\n    tag_177:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n        /* \"contracts/Omnidex-incentives/incentives/base/BaseIncentivesController.sol\":2360:2393  assetsConfig[i].emissionPerSecond */\n      0x00\n      add\n        /* \"contracts/Omnidex-incentives/incentives/base/BaseIncentivesController.sol\":2360:2426  assetsConfig[i].emissionPerSecond = uint104(emissionsPerSecond[i]) */\n      swap1\n      0xffffffffffffffffffffffffff\n      and\n      swap1\n      dup2\n      0xffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      pop\n      pop\n        /* \"contracts/Omnidex-incentives/incentives/base/BaseIncentivesController.sol\":2485:2491  assets */\n      dup6\n      dup6\n        /* \"contracts/Omnidex-incentives/incentives/base/BaseIncentivesController.sol\":2492:2493  i */\n      dup3\n        /* \"contracts/Omnidex-incentives/incentives/base/BaseIncentivesController.sol\":2485:2494  assets[i] */\n      dup2\n      dup2\n      lt\n      tag_178\n      jumpi\n      invalid\n    tag_178:\n      swap1\n      pop\n      0x20\n      mul\n      add\n      0x20\n      dup2\n      add\n      swap1\n      tag_179\n      swap2\n      swap1\n      tag_30\n      jump\t// in\n    tag_179:\n        /* \"contracts/Omnidex-incentives/incentives/base/BaseIncentivesController.sol\":2465:2513  IScaledBalanceToken(assets[i]).scaledTotalSupply */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xb1bf962d\n        /* \"contracts/Omnidex-incentives/incentives/base/BaseIncentivesController.sol\":2465:2515  IScaledBalanceToken(assets[i]).scaledTotalSupply() */\n      mload(0x40)\n      dup2\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_180\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_180:\n      pop\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_182\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_182:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_183\n      swap2\n      swap1\n      tag_184\n      jump\t// in\n    tag_183:\n        /* \"contracts/Omnidex-incentives/incentives/base/BaseIncentivesController.sol\":2435:2447  assetsConfig */\n      dup3\n        /* \"contracts/Omnidex-incentives/incentives/base/BaseIncentivesController.sol\":2448:2449  i */\n      dup3\n        /* \"contracts/Omnidex-incentives/incentives/base/BaseIncentivesController.sol\":2435:2450  assetsConfig[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_185\n      jumpi\n      invalid\n    tag_185:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n        /* \"contracts/Omnidex-incentives/incentives/base/BaseIncentivesController.sol\":2435:2462  assetsConfig[i].totalStaked */\n      0x20\n      add\n        /* \"contracts/Omnidex-incentives/incentives/base/BaseIncentivesController.sol\":2435:2515  assetsConfig[i].totalStaked = IScaledBalanceToken(assets[i]).scaledTotalSupply() */\n      dup2\n      dup2\n      mstore\n      pop\n      pop\n        /* \"contracts/Omnidex-incentives/incentives/base/BaseIncentivesController.sol\":2181:2184  i++ */\n      dup1\n      dup1\n      0x01\n      add\n      swap2\n      pop\n      pop\n        /* \"contracts/Omnidex-incentives/incentives/base/BaseIncentivesController.sol\":2142:2523  for (uint256 i = 0; i < assets.length; i++) {\r... */\n      jump(tag_165)\n    tag_166:\n      pop\n        /* \"contracts/Omnidex-incentives/incentives/base/BaseIncentivesController.sol\":2529:2559  _configureAssets(assetsConfig) */\n      tag_186\n        /* \"contracts/Omnidex-incentives/incentives/base/BaseIncentivesController.sol\":2546:2558  assetsConfig */\n      dup2\n        /* \"contracts/Omnidex-incentives/incentives/base/BaseIncentivesController.sol\":2529:2545  _configureAssets */\n      tag_187\n        /* \"contracts/Omnidex-incentives/incentives/base/BaseIncentivesController.sol\":2529:2559  _configureAssets(assetsConfig) */\n      jump\t// in\n    tag_186:\n        /* \"contracts/Omnidex-incentives/incentives/base/DistributionManager.sol\":991:992  _ */\n      pop\n        /* \"contracts/Omnidex-incentives/incentives/base/BaseIncentivesController.sol\":1773:2565  function configureAssets(address[] calldata assets, uint256[] calldata emissionsPerSecond)\r... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/Omnidex-incentives/incentives/base/BaseIncentivesController.sol\":3072:3758  function getRewardsBalance(address[] calldata assets, address user)\r... */\n    tag_79:\n        /* \"contracts/Omnidex-incentives/incentives/base/BaseIncentivesController.sol\":3192:3199  uint256 */\n      0x00\n        /* \"contracts/Omnidex-incentives/incentives/base/BaseIncentivesController.sol\":3211:3235  uint256 unclaimedRewards */\n      dup1\n        /* \"contracts/Omnidex-incentives/incentives/base/BaseIncentivesController.sol\":3238:3260  _usersUnclaimedRewards */\n      0x35\n        /* \"contracts/Omnidex-incentives/incentives/base/BaseIncentivesController.sol\":3238:3266  _usersUnclaimedRewards[user] */\n      0x00\n        /* \"contracts/Omnidex-incentives/incentives/base/BaseIncentivesController.sol\":3261:3265  user */\n      dup5\n        /* \"contracts/Omnidex-incentives/incentives/base/BaseIncentivesController.sol\":3238:3266  _usersUnclaimedRewards[user] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/Omnidex-incentives/incentives/base/BaseIncentivesController.sol\":3211:3266  uint256 unclaimedRewards = _usersUnclaimedRewards[user] */\n      swap1\n      pop\n        /* \"contracts/Omnidex-incentives/incentives/base/BaseIncentivesController.sol\":3275:3326  DistributionTypes.UserStakeInput[] memory userState */\n      0x60\n        /* \"contracts/Omnidex-incentives/incentives/base/BaseIncentivesController.sol\":3375:3381  assets */\n      dup6\n      dup6\n        /* \"contracts/Omnidex-incentives/incentives/base/BaseIncentivesController.sol\":3375:3388  assets.length */\n      swap1\n      pop\n        /* \"contracts/Omnidex-incentives/incentives/base/BaseIncentivesController.sol\":3336:3389  new DistributionTypes.UserStakeInput[](assets.length) */\n      0xffffffffffffffff\n      dup2\n      gt\n      dup1\n      iszero\n      tag_189\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_189:\n      pop\n      mload(0x40)\n      swap1\n      dup1\n      dup3\n      mstore\n      dup1\n      0x20\n      mul\n      0x20\n      add\n      dup3\n      add\n      0x40\n      mstore\n      dup1\n      iszero\n      tag_190\n      jumpi\n      dup2\n      0x20\n      add\n    tag_191:\n      tag_192\n      tag_193\n      jump\t// in\n    tag_192:\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      0x01\n      swap1\n      sub\n      swap1\n      dup2\n      tag_191\n      jumpi\n      swap1\n      pop\n    tag_190:\n      pop\n        /* \"contracts/Omnidex-incentives/incentives/base/BaseIncentivesController.sol\":3275:3389  DistributionTypes.UserStakeInput[] memory userState =\r... */\n      swap1\n      pop\n        /* \"contracts/Omnidex-incentives/incentives/base/BaseIncentivesController.sol\":3401:3410  uint256 i */\n      0x00\n        /* \"contracts/Omnidex-incentives/incentives/base/BaseIncentivesController.sol\":3396:3638  for (uint256 i = 0; i < assets.length; i++) {\r... */\n    tag_194:\n        /* \"contracts/Omnidex-incentives/incentives/base/BaseIncentivesController.sol\":3420:3426  assets */\n      dup7\n      dup7\n        /* \"contracts/Omnidex-incentives/incentives/base/BaseIncentivesController.sol\":3420:3433  assets.length */\n      swap1\n      pop\n        /* \"contracts/Omnidex-incentives/incentives/base/BaseIncentivesController.sol\":3416:3417  i */\n      dup2\n        /* \"contracts/Omnidex-incentives/incentives/base/BaseIncentivesController.sol\":3416:3433  i < assets.length */\n      lt\n        /* \"contracts/Omnidex-incentives/incentives/base/BaseIncentivesController.sol\":3396:3638  for (uint256 i = 0; i < assets.length; i++) {\r... */\n      iszero\n      tag_195\n      jumpi\n        /* \"contracts/Omnidex-incentives/incentives/base/BaseIncentivesController.sol\":3480:3486  assets */\n      dup7\n      dup7\n        /* \"contracts/Omnidex-incentives/incentives/base/BaseIncentivesController.sol\":3487:3488  i */\n      dup3\n        /* \"contracts/Omnidex-incentives/incentives/base/BaseIncentivesController.sol\":3480:3489  assets[i] */\n      dup2\n      dup2\n      lt\n      tag_197\n      jumpi\n      invalid\n    tag_197:\n      swap1\n      pop\n      0x20\n      mul\n      add\n      0x20\n      dup2\n      add\n      swap1\n      tag_198\n      swap2\n      swap1\n      tag_30\n      jump\t// in\n    tag_198:\n        /* \"contracts/Omnidex-incentives/incentives/base/BaseIncentivesController.sol\":3449:3458  userState */\n      dup3\n        /* \"contracts/Omnidex-incentives/incentives/base/BaseIncentivesController.sol\":3459:3460  i */\n      dup3\n        /* \"contracts/Omnidex-incentives/incentives/base/BaseIncentivesController.sol\":3449:3461  userState[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_199\n      jumpi\n      invalid\n    tag_199:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n        /* \"contracts/Omnidex-incentives/incentives/base/BaseIncentivesController.sol\":3449:3477  userState[i].underlyingAsset */\n      0x00\n      add\n        /* \"contracts/Omnidex-incentives/incentives/base/BaseIncentivesController.sol\":3449:3489  userState[i].underlyingAsset = assets[i] */\n      swap1\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      pop\n      pop\n        /* \"contracts/Omnidex-incentives/incentives/base/BaseIncentivesController.sol\":3574:3580  assets */\n      dup7\n      dup7\n        /* \"contracts/Omnidex-incentives/incentives/base/BaseIncentivesController.sol\":3581:3582  i */\n      dup3\n        /* \"contracts/Omnidex-incentives/incentives/base/BaseIncentivesController.sol\":3574:3583  assets[i] */\n      dup2\n      dup2\n      lt\n      tag_200\n      jumpi\n      invalid\n    tag_200:\n      swap1\n      pop\n      0x20\n      mul\n      add\n      0x20\n      dup2\n      add\n      swap1\n      tag_201\n      swap2\n      swap1\n      tag_30\n      jump\t// in\n    tag_201:\n        /* \"contracts/Omnidex-incentives/incentives/base/BaseIncentivesController.sol\":3554:3624  IScaledBalanceToken(assets[i])\r... */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x0afbcdc9\n        /* \"contracts/Omnidex-incentives/incentives/base/BaseIncentivesController.sol\":3625:3629  user */\n      dup7\n        /* \"contracts/Omnidex-incentives/incentives/base/BaseIncentivesController.sol\":3554:3630  IScaledBalanceToken(assets[i])\r... */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_202\n      swap2\n      swap1\n      tag_71\n      jump\t// in\n    tag_202:\n      0x40\n      dup1\n      mload\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_203\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_203:\n      pop\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_205\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_205:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_206\n      swap2\n      swap1\n      tag_207\n      jump\t// in\n    tag_206:\n        /* \"contracts/Omnidex-incentives/incentives/base/BaseIncentivesController.sol\":3499:3508  userState */\n      dup4\n        /* \"contracts/Omnidex-incentives/incentives/base/BaseIncentivesController.sol\":3509:3510  i */\n      dup4\n        /* \"contracts/Omnidex-incentives/incentives/base/BaseIncentivesController.sol\":3499:3511  userState[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_208\n      jumpi\n      invalid\n    tag_208:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n        /* \"contracts/Omnidex-incentives/incentives/base/BaseIncentivesController.sol\":3499:3524  userState[i].stakedByUser */\n      0x20\n      add\n        /* \"contracts/Omnidex-incentives/incentives/base/BaseIncentivesController.sol\":3526:3535  userState */\n      dup5\n        /* \"contracts/Omnidex-incentives/incentives/base/BaseIncentivesController.sol\":3536:3537  i */\n      dup5\n        /* \"contracts/Omnidex-incentives/incentives/base/BaseIncentivesController.sol\":3526:3538  userState[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_209\n      jumpi\n      invalid\n    tag_209:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n        /* \"contracts/Omnidex-incentives/incentives/base/BaseIncentivesController.sol\":3526:3550  userState[i].totalStaked */\n      0x40\n      add\n        /* \"contracts/Omnidex-incentives/incentives/base/BaseIncentivesController.sol\":3498:3630  (userState[i].stakedByUser, userState[i].totalStaked) = IScaledBalanceToken(assets[i])\r... */\n      dup3\n      dup2\n      mstore\n      pop\n      dup3\n      dup2\n      mstore\n      pop\n      pop\n      pop\n        /* \"contracts/Omnidex-incentives/incentives/base/BaseIncentivesController.sol\":3435:3438  i++ */\n      dup1\n      dup1\n      0x01\n      add\n      swap2\n      pop\n      pop\n        /* \"contracts/Omnidex-incentives/incentives/base/BaseIncentivesController.sol\":3396:3638  for (uint256 i = 0; i < assets.length; i++) {\r... */\n      jump(tag_194)\n    tag_195:\n      pop\n        /* \"contracts/Omnidex-incentives/incentives/base/BaseIncentivesController.sol\":3663:3722  unclaimedRewards.add(_getUnclaimedRewards(user, userState)) */\n      tag_210\n        /* \"contracts/Omnidex-incentives/incentives/base/BaseIncentivesController.sol\":3684:3721  _getUnclaimedRewards(user, userState) */\n      tag_211\n        /* \"contracts/Omnidex-incentives/incentives/base/BaseIncentivesController.sol\":3705:3709  user */\n      dup6\n        /* \"contracts/Omnidex-incentives/incentives/base/BaseIncentivesController.sol\":3711:3720  userState */\n      dup4\n        /* \"contracts/Omnidex-incentives/incentives/base/BaseIncentivesController.sol\":3684:3704  _getUnclaimedRewards */\n      tag_212\n        /* \"contracts/Omnidex-incentives/incentives/base/BaseIncentivesController.sol\":3684:3721  _getUnclaimedRewards(user, userState) */\n      jump\t// in\n    tag_211:\n        /* \"contracts/Omnidex-incentives/incentives/base/BaseIncentivesController.sol\":3663:3679  unclaimedRewards */\n      dup4\n        /* \"contracts/Omnidex-incentives/incentives/base/BaseIncentivesController.sol\":3663:3683  unclaimedRewards.add */\n      tag_130\n      swap1\n        /* \"contracts/Omnidex-incentives/incentives/base/BaseIncentivesController.sol\":3663:3722  unclaimedRewards.add(_getUnclaimedRewards(user, userState)) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_210:\n        /* \"contracts/Omnidex-incentives/incentives/base/BaseIncentivesController.sol\":3644:3722  unclaimedRewards = unclaimedRewards.add(_getUnclaimedRewards(user, userState)) */\n      swap2\n      pop\n        /* \"contracts/Omnidex-incentives/incentives/base/BaseIncentivesController.sol\":3736:3752  unclaimedRewards */\n      dup2\n        /* \"contracts/Omnidex-incentives/incentives/base/BaseIncentivesController.sol\":3729:3752  return unclaimedRewards */\n      swap3\n      pop\n      pop\n      pop\n        /* \"contracts/Omnidex-incentives/incentives/base/BaseIncentivesController.sol\":3072:3758  function getRewardsBalance(address[] calldata assets, address user)\r... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/Omnidex-incentives/incentives/base/DistributionManager.sol\":1543:1648  function DISTRIBUTION_END() external view override returns (uint256) {\r... */\n    tag_82:\n        /* \"contracts/Omnidex-incentives/incentives/base/DistributionManager.sol\":1603:1610  uint256 */\n      0x00\n        /* \"contracts/Omnidex-incentives/incentives/base/DistributionManager.sol\":1626:1642  _distributionEnd */\n      sload(0x34)\n        /* \"contracts/Omnidex-incentives/incentives/base/DistributionManager.sol\":1619:1642  return _distributionEnd */\n      swap1\n      pop\n        /* \"contracts/Omnidex-incentives/incentives/base/DistributionManager.sol\":1543:1648  function DISTRIBUTION_END() external view override returns (uint256) {\r... */\n      swap1\n      jump\t// out\n        /* \"contracts/Omnidex-incentives/incentives/base/BaseIncentivesController.sol\":1026:1072  address public immutable override REWARD_TOKEN */\n    tag_85:\n      immutable(\"0xe229503fec190040ef38484d41ddb4c2fce10c1aa73d9d5bd832f8c76f44643b\")\n      dup2\n      jump\t// out\n        /* \"contracts/Omnidex-incentives/incentives/base/DistributionManager.sol\":749:785  uint8 public constant PRECISION = 18 */\n    tag_88:\n        /* \"contracts/Omnidex-incentives/incentives/base/DistributionManager.sol\":783:785  18 */\n      0x12\n        /* \"contracts/Omnidex-incentives/incentives/base/DistributionManager.sol\":749:785  uint8 public constant PRECISION = 18 */\n      dup2\n      jump\t// out\n        /* \"contracts/Omnidex-incentives/incentives/PullRewardsIncentivesController.sol\":988:1138  function initialize(address rewardsVault) external initializer {\r... */\n    tag_93:\n        /* \"@aave/aave-stake/contracts/utils/VersionedInitializable.sol\":1040:1056  uint256 revision */\n      0x00\n        /* \"@aave/aave-stake/contracts/utils/VersionedInitializable.sol\":1059:1072  getRevision() */\n      tag_215\n        /* \"@aave/aave-stake/contracts/utils/VersionedInitializable.sol\":1059:1070  getRevision */\n      tag_216\n        /* \"@aave/aave-stake/contracts/utils/VersionedInitializable.sol\":1059:1072  getRevision() */\n      jump\t// in\n    tag_215:\n        /* \"@aave/aave-stake/contracts/utils/VersionedInitializable.sol\":1040:1072  uint256 revision = getRevision() */\n      swap1\n      pop\n        /* \"@aave/aave-stake/contracts/utils/VersionedInitializable.sol\":1097:1120  lastInitializedRevision */\n      sload(0x00)\n        /* \"@aave/aave-stake/contracts/utils/VersionedInitializable.sol\":1086:1094  revision */\n      dup2\n        /* \"@aave/aave-stake/contracts/utils/VersionedInitializable.sol\":1086:1120  revision > lastInitializedRevision */\n      gt\n        /* \"@aave/aave-stake/contracts/utils/VersionedInitializable.sol\":1078:1171  require(revision > lastInitializedRevision, 'Contract instance has already been initialized') */\n      tag_217\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x2e\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_9fbba6c4dcac9134893b633b9564f36435b3f927c1d5fa152c5c14b20cecb1a4\n      0x2e\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_217:\n        /* \"@aave/aave-stake/contracts/utils/VersionedInitializable.sol\":1204:1212  revision */\n      dup1\n        /* \"@aave/aave-stake/contracts/utils/VersionedInitializable.sol\":1178:1201  lastInitializedRevision */\n      0x00\n        /* \"@aave/aave-stake/contracts/utils/VersionedInitializable.sol\":1178:1212  lastInitializedRevision = revision */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/Omnidex-incentives/incentives/PullRewardsIncentivesController.sol\":1074:1086  rewardsVault */\n      dup2\n        /* \"contracts/Omnidex-incentives/incentives/PullRewardsIncentivesController.sol\":1058:1071  _rewardsVault */\n      0x37\n      0x00\n        /* \"contracts/Omnidex-incentives/incentives/PullRewardsIncentivesController.sol\":1058:1086  _rewardsVault = rewardsVault */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/Omnidex-incentives/incentives/PullRewardsIncentivesController.sol\":1118:1131  _rewardsVault */\n      0x37\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Omnidex-incentives/incentives/PullRewardsIncentivesController.sol\":1098:1132  RewardsVaultUpdated(_rewardsVault) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x28a48cbce43190d77247f342cf319b1607bff4ef716cf26b76cf7bb71baebaa5\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"contracts/Omnidex-incentives/incentives/PullRewardsIncentivesController.sol\":988:1138  function initialize(address rewardsVault) external initializer {\r... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/Omnidex-incentives/incentives/base/DistributionManager.sol\":701:742  address public immutable EMISSION_MANAGER */\n    tag_95:\n      immutable(\"0xfb72c19603b99a84eb94b2a957c683e899e1d0f4b28e255e051e7f1b190ba3b8\")\n      dup2\n      jump\t// out\n        /* \"contracts/Omnidex-incentives/incentives/base/DistributionManager.sol\":1383:1490  function getDistributionEnd() external view override returns (uint256) {\r... */\n    tag_98:\n        /* \"contracts/Omnidex-incentives/incentives/base/DistributionManager.sol\":1445:1452  uint256 */\n      0x00\n        /* \"contracts/Omnidex-incentives/incentives/base/DistributionManager.sol\":1468:1484  _distributionEnd */\n      sload(0x34)\n        /* \"contracts/Omnidex-incentives/incentives/base/DistributionManager.sol\":1461:1484  return _distributionEnd */\n      swap1\n      pop\n        /* \"contracts/Omnidex-incentives/incentives/base/DistributionManager.sol\":1383:1490  function getDistributionEnd() external view override returns (uint256) {\r... */\n      swap1\n      jump\t// out\n        /* \"contracts/Omnidex-incentives/incentives/base/BaseIncentivesController.sol\":983:1019  uint256 public constant REVISION = 1 */\n    tag_101:\n        /* \"contracts/Omnidex-incentives/incentives/base/BaseIncentivesController.sol\":1018:1019  1 */\n      0x01\n        /* \"contracts/Omnidex-incentives/incentives/base/BaseIncentivesController.sol\":983:1019  uint256 public constant REVISION = 1 */\n      dup2\n      jump\t// out\n        /* \"contracts/Omnidex-incentives/incentives/PullRewardsIncentivesController.sol\":1234:1326  function getRewardsVault() external view returns (address) {\r... */\n    tag_104:\n        /* \"contracts/Omnidex-incentives/incentives/PullRewardsIncentivesController.sol\":1284:1291  address */\n      0x00\n        /* \"contracts/Omnidex-incentives/incentives/PullRewardsIncentivesController.sol\":1307:1320  _rewardsVault */\n      0x37\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Omnidex-incentives/incentives/PullRewardsIncentivesController.sol\":1300:1320  return _rewardsVault */\n      swap1\n      pop\n        /* \"contracts/Omnidex-incentives/incentives/PullRewardsIncentivesController.sol\":1234:1326  function getRewardsVault() external view returns (address) {\r... */\n      swap1\n      jump\t// out\n        /* \"contracts/Omnidex-incentives/incentives/base/DistributionManager.sol\":792:835  mapping(address => AssetData) public assets */\n    tag_108:\n      mstore(0x20, 0x33)\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      swap1\n      pop\n      dup1\n      0x00\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffff\n      and\n      swap1\n      dup1\n      0x00\n      add\n      0x0d\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffff\n      and\n      swap1\n      dup1\n      0x00\n      add\n      0x1a\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffff\n      and\n      swap1\n      pop\n      dup4\n      jump\t// out\n        /* \"contracts/Omnidex-incentives/incentives/PullRewardsIncentivesController.sol\":1485:1647  function setRewardsVault(address rewardsVault) external onlyEmissionManager {\r... */\n    tag_113:\n        /* \"contracts/Omnidex-incentives/incentives/base/DistributionManager.sol\":942:958  EMISSION_MANAGER */\n      immutable(\"0xfb72c19603b99a84eb94b2a957c683e899e1d0f4b28e255e051e7f1b190ba3b8\")\n        /* \"contracts/Omnidex-incentives/incentives/base/DistributionManager.sol\":928:958  msg.sender == EMISSION_MANAGER */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Omnidex-incentives/incentives/base/DistributionManager.sol\":928:938  msg.sender */\n      caller\n        /* \"contracts/Omnidex-incentives/incentives/base/DistributionManager.sol\":928:958  msg.sender == EMISSION_MANAGER */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/Omnidex-incentives/incentives/base/DistributionManager.sol\":920:984  require(msg.sender == EMISSION_MANAGER, 'ONLY_EMISSION_MANAGER') */\n      tag_222\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_223\n      swap1\n      tag_136\n      jump\t// in\n    tag_223:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_222:\n        /* \"contracts/Omnidex-incentives/incentives/PullRewardsIncentivesController.sol\":1584:1596  rewardsVault */\n      dup1\n        /* \"contracts/Omnidex-incentives/incentives/PullRewardsIncentivesController.sol\":1568:1581  _rewardsVault */\n      0x37\n      0x00\n        /* \"contracts/Omnidex-incentives/incentives/PullRewardsIncentivesController.sol\":1568:1596  _rewardsVault = rewardsVault */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/Omnidex-incentives/incentives/PullRewardsIncentivesController.sol\":1628:1640  rewardsVault */\n      dup1\n        /* \"contracts/Omnidex-incentives/incentives/PullRewardsIncentivesController.sol\":1608:1641  RewardsVaultUpdated(rewardsVault) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x28a48cbce43190d77247f342cf319b1607bff4ef716cf26b76cf7bb71baebaa5\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"contracts/Omnidex-incentives/incentives/PullRewardsIncentivesController.sol\":1485:1647  function setRewardsVault(address rewardsVault) external onlyEmissionManager {\r... */\n      pop\n      jump\t// out\n        /* \"contracts/Omnidex-incentives/incentives/base/BaseIncentivesController.sol\":4832:5003  function setClaimer(address user, address caller) external override onlyEmissionManager {\r... */\n    tag_116:\n        /* \"contracts/Omnidex-incentives/incentives/base/DistributionManager.sol\":942:958  EMISSION_MANAGER */\n      immutable(\"0xfb72c19603b99a84eb94b2a957c683e899e1d0f4b28e255e051e7f1b190ba3b8\")\n        /* \"contracts/Omnidex-incentives/incentives/base/DistributionManager.sol\":928:958  msg.sender == EMISSION_MANAGER */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Omnidex-incentives/incentives/base/DistributionManager.sol\":928:938  msg.sender */\n      caller\n        /* \"contracts/Omnidex-incentives/incentives/base/DistributionManager.sol\":928:958  msg.sender == EMISSION_MANAGER */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/Omnidex-incentives/incentives/base/DistributionManager.sol\":920:984  require(msg.sender == EMISSION_MANAGER, 'ONLY_EMISSION_MANAGER') */\n      tag_226\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_227\n      swap1\n      tag_136\n      jump\t// in\n    tag_227:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_226:\n        /* \"contracts/Omnidex-incentives/incentives/base/BaseIncentivesController.sol\":4955:4961  caller */\n      dup1\n        /* \"contracts/Omnidex-incentives/incentives/base/BaseIncentivesController.sol\":4927:4946  _authorizedClaimers */\n      0x36\n        /* \"contracts/Omnidex-incentives/incentives/base/BaseIncentivesController.sol\":4927:4952  _authorizedClaimers[user] */\n      0x00\n        /* \"contracts/Omnidex-incentives/incentives/base/BaseIncentivesController.sol\":4947:4951  user */\n      dup5\n        /* \"contracts/Omnidex-incentives/incentives/base/BaseIncentivesController.sol\":4927:4952  _authorizedClaimers[user] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"contracts/Omnidex-incentives/incentives/base/BaseIncentivesController.sol\":4927:4961  _authorizedClaimers[user] = caller */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/Omnidex-incentives/incentives/base/BaseIncentivesController.sol\":4990:4996  caller */\n      dup1\n        /* \"contracts/Omnidex-incentives/incentives/base/BaseIncentivesController.sol\":4973:4997  ClaimerSet(user, caller) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Omnidex-incentives/incentives/base/BaseIncentivesController.sol\":4984:4988  user */\n      dup3\n        /* \"contracts/Omnidex-incentives/incentives/base/BaseIncentivesController.sol\":4973:4997  ClaimerSet(user, caller) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x4925eafc82d0c4d67889898eeed64b18488ab19811e61620f387026dec126a28\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/Omnidex-incentives/incentives/base/BaseIncentivesController.sol\":4832:5003  function setClaimer(address user, address caller) external override onlyEmissionManager {\r... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/Omnidex-incentives/incentives/base/BaseIncentivesController.sol\":5875:7196  function _claimRewards(\r... */\n    tag_124:\n        /* \"contracts/Omnidex-incentives/incentives/base/BaseIncentivesController.sol\":6032:6039  uint256 */\n      0x00\n        /* \"contracts/Omnidex-incentives/incentives/base/BaseIncentivesController.sol\":6062:6063  0 */\n      dup1\n        /* \"contracts/Omnidex-incentives/incentives/base/BaseIncentivesController.sol\":6052:6058  amount */\n      dup6\n        /* \"contracts/Omnidex-incentives/incentives/base/BaseIncentivesController.sol\":6052:6063  amount == 0 */\n      eq\n        /* \"contracts/Omnidex-incentives/incentives/base/BaseIncentivesController.sol\":6048:6090  if (amount == 0) {\r... */\n      iszero\n      tag_230\n      jumpi\n        /* \"contracts/Omnidex-incentives/incentives/base/BaseIncentivesController.sol\":6081:6082  0 */\n      0x00\n        /* \"contracts/Omnidex-incentives/incentives/base/BaseIncentivesController.sol\":6074:6082  return 0 */\n      swap1\n      pop\n      jump(tag_229)\n        /* \"contracts/Omnidex-incentives/incentives/base/BaseIncentivesController.sol\":6048:6090  if (amount == 0) {\r... */\n    tag_230:\n        /* \"contracts/Omnidex-incentives/incentives/base/BaseIncentivesController.sol\":6096:6120  uint256 unclaimedRewards */\n      0x00\n        /* \"contracts/Omnidex-incentives/incentives/base/BaseIncentivesController.sol\":6123:6145  _usersUnclaimedRewards */\n      0x35\n        /* \"contracts/Omnidex-incentives/incentives/base/BaseIncentivesController.sol\":6123:6151  _usersUnclaimedRewards[user] */\n      0x00\n        /* \"contracts/Omnidex-incentives/incentives/base/BaseIncentivesController.sol\":6146:6150  user */\n      dup6\n        /* \"contracts/Omnidex-incentives/incentives/base/BaseIncentivesController.sol\":6123:6151  _usersUnclaimedRewards[user] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/Omnidex-incentives/incentives/base/BaseIncentivesController.sol\":6096:6151  uint256 unclaimedRewards = _usersUnclaimedRewards[user] */\n      swap1\n      pop\n        /* \"contracts/Omnidex-incentives/incentives/base/BaseIncentivesController.sol\":6173:6189  unclaimedRewards */\n      dup1\n        /* \"contracts/Omnidex-incentives/incentives/base/BaseIncentivesController.sol\":6164:6170  amount */\n      dup7\n        /* \"contracts/Omnidex-incentives/incentives/base/BaseIncentivesController.sol\":6164:6189  amount > unclaimedRewards */\n      gt\n        /* \"contracts/Omnidex-incentives/incentives/base/BaseIncentivesController.sol\":6160:6809  if (amount > unclaimedRewards) {\r... */\n      iszero\n      tag_231\n      jumpi\n        /* \"contracts/Omnidex-incentives/incentives/base/BaseIncentivesController.sol\":6200:6251  DistributionTypes.UserStakeInput[] memory userState */\n      0x60\n        /* \"contracts/Omnidex-incentives/incentives/base/BaseIncentivesController.sol\":6302:6308  assets */\n      dup9\n      dup9\n        /* \"contracts/Omnidex-incentives/incentives/base/BaseIncentivesController.sol\":6302:6315  assets.length */\n      swap1\n      pop\n        /* \"contracts/Omnidex-incentives/incentives/base/BaseIncentivesController.sol\":6263:6316  new DistributionTypes.UserStakeInput[](assets.length) */\n      0xffffffffffffffff\n      dup2\n      gt\n      dup1\n      iszero\n      tag_232\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_232:\n      pop\n      mload(0x40)\n      swap1\n      dup1\n      dup3\n      mstore\n      dup1\n      0x20\n      mul\n      0x20\n      add\n      dup3\n      add\n      0x40\n      mstore\n      dup1\n      iszero\n      tag_233\n      jumpi\n      dup2\n      0x20\n      add\n    tag_234:\n      tag_235\n      tag_193\n      jump\t// in\n    tag_235:\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      0x01\n      swap1\n      sub\n      swap1\n      dup2\n      tag_234\n      jumpi\n      swap1\n      pop\n    tag_233:\n      pop\n        /* \"contracts/Omnidex-incentives/incentives/base/BaseIncentivesController.sol\":6200:6316  DistributionTypes.UserStakeInput[] memory userState =\r... */\n      swap1\n      pop\n        /* \"contracts/Omnidex-incentives/incentives/base/BaseIncentivesController.sol\":6330:6339  uint256 i */\n      0x00\n        /* \"contracts/Omnidex-incentives/incentives/base/BaseIncentivesController.sol\":6325:6575  for (uint256 i = 0; i < assets.length; i++) {\r... */\n    tag_236:\n        /* \"contracts/Omnidex-incentives/incentives/base/BaseIncentivesController.sol\":6349:6355  assets */\n      dup10\n      dup10\n        /* \"contracts/Omnidex-incentives/incentives/base/BaseIncentivesController.sol\":6349:6362  assets.length */\n      swap1\n      pop\n        /* \"contracts/Omnidex-incentives/incentives/base/BaseIncentivesController.sol\":6345:6346  i */\n      dup2\n        /* \"contracts/Omnidex-incentives/incentives/base/BaseIncentivesController.sol\":6345:6362  i < assets.length */\n      lt\n        /* \"contracts/Omnidex-incentives/incentives/base/BaseIncentivesController.sol\":6325:6575  for (uint256 i = 0; i < assets.length; i++) {\r... */\n      iszero\n      tag_237\n      jumpi\n        /* \"contracts/Omnidex-incentives/incentives/base/BaseIncentivesController.sol\":6411:6417  assets */\n      dup10\n      dup10\n        /* \"contracts/Omnidex-incentives/incentives/base/BaseIncentivesController.sol\":6418:6419  i */\n      dup3\n        /* \"contracts/Omnidex-incentives/incentives/base/BaseIncentivesController.sol\":6411:6420  assets[i] */\n      dup2\n      dup2\n      lt\n      tag_239\n      jumpi\n      invalid\n    tag_239:\n      swap1\n      pop\n      0x20\n      mul\n      add\n      0x20\n      dup2\n      add\n      swap1\n      tag_240\n      swap2\n      swap1\n      tag_30\n      jump\t// in\n    tag_240:\n        /* \"contracts/Omnidex-incentives/incentives/base/BaseIncentivesController.sol\":6380:6389  userState */\n      dup3\n        /* \"contracts/Omnidex-incentives/incentives/base/BaseIncentivesController.sol\":6390:6391  i */\n      dup3\n        /* \"contracts/Omnidex-incentives/incentives/base/BaseIncentivesController.sol\":6380:6392  userState[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_241\n      jumpi\n      invalid\n    tag_241:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n        /* \"contracts/Omnidex-incentives/incentives/base/BaseIncentivesController.sol\":6380:6408  userState[i].underlyingAsset */\n      0x00\n      add\n        /* \"contracts/Omnidex-incentives/incentives/base/BaseIncentivesController.sol\":6380:6420  userState[i].underlyingAsset = assets[i] */\n      swap1\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      pop\n      pop\n        /* \"contracts/Omnidex-incentives/incentives/base/BaseIncentivesController.sol\":6507:6513  assets */\n      dup10\n      dup10\n        /* \"contracts/Omnidex-incentives/incentives/base/BaseIncentivesController.sol\":6514:6515  i */\n      dup3\n        /* \"contracts/Omnidex-incentives/incentives/base/BaseIncentivesController.sol\":6507:6516  assets[i] */\n      dup2\n      dup2\n      lt\n      tag_242\n      jumpi\n      invalid\n    tag_242:\n      swap1\n      pop\n      0x20\n      mul\n      add\n      0x20\n      dup2\n      add\n      swap1\n      tag_243\n      swap2\n      swap1\n      tag_30\n      jump\t// in\n    tag_243:\n        /* \"contracts/Omnidex-incentives/incentives/base/BaseIncentivesController.sol\":6487:6559  IScaledBalanceToken(assets[i])\r... */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x0afbcdc9\n        /* \"contracts/Omnidex-incentives/incentives/base/BaseIncentivesController.sol\":6560:6564  user */\n      dup8\n        /* \"contracts/Omnidex-incentives/incentives/base/BaseIncentivesController.sol\":6487:6565  IScaledBalanceToken(assets[i])\r... */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_244\n      swap2\n      swap1\n      tag_71\n      jump\t// in\n    tag_244:\n      0x40\n      dup1\n      mload\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_245\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_245:\n      pop\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_247\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_247:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_248\n      swap2\n      swap1\n      tag_207\n      jump\t// in\n    tag_248:\n        /* \"contracts/Omnidex-incentives/incentives/base/BaseIncentivesController.sol\":6432:6441  userState */\n      dup4\n        /* \"contracts/Omnidex-incentives/incentives/base/BaseIncentivesController.sol\":6442:6443  i */\n      dup4\n        /* \"contracts/Omnidex-incentives/incentives/base/BaseIncentivesController.sol\":6432:6444  userState[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_249\n      jumpi\n      invalid\n    tag_249:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n        /* \"contracts/Omnidex-incentives/incentives/base/BaseIncentivesController.sol\":6432:6457  userState[i].stakedByUser */\n      0x20\n      add\n        /* \"contracts/Omnidex-incentives/incentives/base/BaseIncentivesController.sol\":6459:6468  userState */\n      dup5\n        /* \"contracts/Omnidex-incentives/incentives/base/BaseIncentivesController.sol\":6469:6470  i */\n      dup5\n        /* \"contracts/Omnidex-incentives/incentives/base/BaseIncentivesController.sol\":6459:6471  userState[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_250\n      jumpi\n      invalid\n    tag_250:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n        /* \"contracts/Omnidex-incentives/incentives/base/BaseIncentivesController.sol\":6459:6483  userState[i].totalStaked */\n      0x40\n      add\n        /* \"contracts/Omnidex-incentives/incentives/base/BaseIncentivesController.sol\":6431:6565  (userState[i].stakedByUser, userState[i].totalStaked) = IScaledBalanceToken(assets[i])\r... */\n      dup3\n      dup2\n      mstore\n      pop\n      dup3\n      dup2\n      mstore\n      pop\n      pop\n      pop\n        /* \"contracts/Omnidex-incentives/incentives/base/BaseIncentivesController.sol\":6364:6367  i++ */\n      dup1\n      dup1\n      0x01\n      add\n      swap2\n      pop\n      pop\n        /* \"contracts/Omnidex-incentives/incentives/base/BaseIncentivesController.sol\":6325:6575  for (uint256 i = 0; i < assets.length; i++) {\r... */\n      jump(tag_236)\n    tag_237:\n      pop\n        /* \"contracts/Omnidex-incentives/incentives/base/BaseIncentivesController.sol\":6585:6607  uint256 accruedRewards */\n      0x00\n        /* \"contracts/Omnidex-incentives/incentives/base/BaseIncentivesController.sol\":6610:6640  _claimRewards(user, userState) */\n      tag_251\n        /* \"contracts/Omnidex-incentives/incentives/base/BaseIncentivesController.sol\":6624:6628  user */\n      dup7\n        /* \"contracts/Omnidex-incentives/incentives/base/BaseIncentivesController.sol\":6630:6639  userState */\n      dup4\n        /* \"contracts/Omnidex-incentives/incentives/base/BaseIncentivesController.sol\":6610:6623  _claimRewards */\n      tag_252\n        /* \"contracts/Omnidex-incentives/incentives/base/BaseIncentivesController.sol\":6610:6640  _claimRewards(user, userState) */\n      jump\t// in\n    tag_251:\n        /* \"contracts/Omnidex-incentives/incentives/base/BaseIncentivesController.sol\":6585:6640  uint256 accruedRewards = _claimRewards(user, userState) */\n      swap1\n      pop\n        /* \"contracts/Omnidex-incentives/incentives/base/BaseIncentivesController.sol\":6671:6672  0 */\n      0x00\n        /* \"contracts/Omnidex-incentives/incentives/base/BaseIncentivesController.sol\":6653:6667  accruedRewards */\n      dup2\n        /* \"contracts/Omnidex-incentives/incentives/base/BaseIncentivesController.sol\":6653:6672  accruedRewards != 0 */\n      eq\n        /* \"contracts/Omnidex-incentives/incentives/base/BaseIncentivesController.sol\":6649:6802  if (accruedRewards != 0) {\r... */\n      tag_253\n      jumpi\n        /* \"contracts/Omnidex-incentives/incentives/base/BaseIncentivesController.sol\":6704:6740  unclaimedRewards.add(accruedRewards) */\n      tag_254\n        /* \"contracts/Omnidex-incentives/incentives/base/BaseIncentivesController.sol\":6725:6739  accruedRewards */\n      dup2\n        /* \"contracts/Omnidex-incentives/incentives/base/BaseIncentivesController.sol\":6704:6720  unclaimedRewards */\n      dup5\n        /* \"contracts/Omnidex-incentives/incentives/base/BaseIncentivesController.sol\":6704:6724  unclaimedRewards.add */\n      tag_130\n      swap1\n        /* \"contracts/Omnidex-incentives/incentives/base/BaseIncentivesController.sol\":6704:6740  unclaimedRewards.add(accruedRewards) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_254:\n        /* \"contracts/Omnidex-incentives/incentives/base/BaseIncentivesController.sol\":6685:6740  unclaimedRewards = unclaimedRewards.add(accruedRewards) */\n      swap3\n      pop\n        /* \"contracts/Omnidex-incentives/incentives/base/BaseIncentivesController.sol\":6771:6775  user */\n      dup6\n        /* \"contracts/Omnidex-incentives/incentives/base/BaseIncentivesController.sol\":6756:6792  RewardsAccrued(user, accruedRewards) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x2468f9268c60ad90e2d49edb0032c8a001e733ae888b3ab8e982edf535be1a76\n        /* \"contracts/Omnidex-incentives/incentives/base/BaseIncentivesController.sol\":6777:6791  accruedRewards */\n      dup3\n        /* \"contracts/Omnidex-incentives/incentives/base/BaseIncentivesController.sol\":6756:6792  RewardsAccrued(user, accruedRewards) */\n      mload(0x40)\n      tag_255\n      swap2\n      swap1\n      tag_38\n      jump\t// in\n    tag_255:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"contracts/Omnidex-incentives/incentives/base/BaseIncentivesController.sol\":6649:6802  if (accruedRewards != 0) {\r... */\n    tag_253:\n        /* \"contracts/Omnidex-incentives/incentives/base/BaseIncentivesController.sol\":6160:6809  if (amount > unclaimedRewards) {\r... */\n      pop\n      pop\n    tag_231:\n        /* \"contracts/Omnidex-incentives/incentives/base/BaseIncentivesController.sol\":6841:6842  0 */\n      0x00\n        /* \"contracts/Omnidex-incentives/incentives/base/BaseIncentivesController.sol\":6821:6837  unclaimedRewards */\n      dup2\n        /* \"contracts/Omnidex-incentives/incentives/base/BaseIncentivesController.sol\":6821:6842  unclaimedRewards == 0 */\n      eq\n        /* \"contracts/Omnidex-incentives/incentives/base/BaseIncentivesController.sol\":6817:6869  if (unclaimedRewards == 0) {\r... */\n      iszero\n      tag_256\n      jumpi\n        /* \"contracts/Omnidex-incentives/incentives/base/BaseIncentivesController.sol\":6860:6861  0 */\n      0x00\n        /* \"contracts/Omnidex-incentives/incentives/base/BaseIncentivesController.sol\":6853:6861  return 0 */\n      swap2\n      pop\n      pop\n      jump(tag_229)\n        /* \"contracts/Omnidex-incentives/incentives/base/BaseIncentivesController.sol\":6817:6869  if (unclaimedRewards == 0) {\r... */\n    tag_256:\n        /* \"contracts/Omnidex-incentives/incentives/base/BaseIncentivesController.sol\":6877:6898  uint256 amountToClaim */\n      0x00\n        /* \"contracts/Omnidex-incentives/incentives/base/BaseIncentivesController.sol\":6910:6926  unclaimedRewards */\n      dup2\n        /* \"contracts/Omnidex-incentives/incentives/base/BaseIncentivesController.sol\":6901:6907  amount */\n      dup8\n        /* \"contracts/Omnidex-incentives/incentives/base/BaseIncentivesController.sol\":6901:6926  amount > unclaimedRewards */\n      gt\n        /* \"contracts/Omnidex-incentives/incentives/base/BaseIncentivesController.sol\":6901:6954  amount > unclaimedRewards ? unclaimedRewards : amount */\n      tag_257\n      jumpi\n        /* \"contracts/Omnidex-incentives/incentives/base/BaseIncentivesController.sol\":6948:6954  amount */\n      dup7\n        /* \"contracts/Omnidex-incentives/incentives/base/BaseIncentivesController.sol\":6901:6954  amount > unclaimedRewards ? unclaimedRewards : amount */\n      jump(tag_258)\n    tag_257:\n        /* \"contracts/Omnidex-incentives/incentives/base/BaseIncentivesController.sol\":6929:6945  unclaimedRewards */\n      dup2\n        /* \"contracts/Omnidex-incentives/incentives/base/BaseIncentivesController.sol\":6901:6954  amount > unclaimedRewards ? unclaimedRewards : amount */\n    tag_258:\n        /* \"contracts/Omnidex-incentives/incentives/base/BaseIncentivesController.sol\":6877:6954  uint256 amountToClaim = amount > unclaimedRewards ? unclaimedRewards : amount */\n      swap1\n      pop\n        /* \"contracts/Omnidex-incentives/incentives/base/BaseIncentivesController.sol\":7011:7024  amountToClaim */\n      dup1\n        /* \"contracts/Omnidex-incentives/incentives/base/BaseIncentivesController.sol\":6992:7008  unclaimedRewards */\n      dup3\n        /* \"contracts/Omnidex-incentives/incentives/base/BaseIncentivesController.sol\":6992:7024  unclaimedRewards - amountToClaim */\n      sub\n        /* \"contracts/Omnidex-incentives/incentives/base/BaseIncentivesController.sol\":6961:6983  _usersUnclaimedRewards */\n      0x35\n        /* \"contracts/Omnidex-incentives/incentives/base/BaseIncentivesController.sol\":6961:6989  _usersUnclaimedRewards[user] */\n      0x00\n        /* \"contracts/Omnidex-incentives/incentives/base/BaseIncentivesController.sol\":6984:6988  user */\n      dup8\n        /* \"contracts/Omnidex-incentives/incentives/base/BaseIncentivesController.sol\":6961:6989  _usersUnclaimedRewards[user] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/Omnidex-incentives/incentives/base/BaseIncentivesController.sol\":6961:7024  _usersUnclaimedRewards[user] = unclaimedRewards - amountToClaim */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/Omnidex-incentives/incentives/base/BaseIncentivesController.sol\":7066:7101  _transferRewards(to, amountToClaim) */\n      tag_259\n        /* \"contracts/Omnidex-incentives/incentives/base/BaseIncentivesController.sol\":7083:7085  to */\n      dup5\n        /* \"contracts/Omnidex-incentives/incentives/base/BaseIncentivesController.sol\":7087:7100  amountToClaim */\n      dup3\n        /* \"contracts/Omnidex-incentives/incentives/base/BaseIncentivesController.sol\":7066:7082  _transferRewards */\n      tag_260\n        /* \"contracts/Omnidex-incentives/incentives/base/BaseIncentivesController.sol\":7066:7101  _transferRewards(to, amountToClaim) */\n      jump\t// in\n    tag_259:\n        /* \"contracts/Omnidex-incentives/incentives/base/BaseIncentivesController.sol\":7138:7145  claimer */\n      dup6\n        /* \"contracts/Omnidex-incentives/incentives/base/BaseIncentivesController.sol\":7113:7161  RewardsClaimed(user, to, claimer, amountToClaim) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Omnidex-incentives/incentives/base/BaseIncentivesController.sol\":7134:7136  to */\n      dup5\n        /* \"contracts/Omnidex-incentives/incentives/base/BaseIncentivesController.sol\":7113:7161  RewardsClaimed(user, to, claimer, amountToClaim) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Omnidex-incentives/incentives/base/BaseIncentivesController.sol\":7128:7132  user */\n      dup7\n        /* \"contracts/Omnidex-incentives/incentives/base/BaseIncentivesController.sol\":7113:7161  RewardsClaimed(user, to, claimer, amountToClaim) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x5637d7f962248a7f05a7ab69eec6446e31f3d0a299d997f135a65c62806e7891\n        /* \"contracts/Omnidex-incentives/incentives/base/BaseIncentivesController.sol\":7147:7160  amountToClaim */\n      dup5\n        /* \"contracts/Omnidex-incentives/incentives/base/BaseIncentivesController.sol\":7113:7161  RewardsClaimed(user, to, claimer, amountToClaim) */\n      mload(0x40)\n      tag_261\n      swap2\n      swap1\n      tag_38\n      jump\t// in\n    tag_261:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log4\n        /* \"contracts/Omnidex-incentives/incentives/base/BaseIncentivesController.sol\":7177:7190  amountToClaim */\n      dup1\n        /* \"contracts/Omnidex-incentives/incentives/base/BaseIncentivesController.sol\":7170:7190  return amountToClaim */\n      swap3\n      pop\n      pop\n      pop\n        /* \"contracts/Omnidex-incentives/incentives/base/BaseIncentivesController.sol\":5875:7196  function _claimRewards(\r... */\n    tag_229:\n      swap7\n      swap6\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/Omnidex-incentives/incentives/base/DistributionManager.sol\":4616:5279  function _updateUserAssetInternal(\r... */\n    tag_127:\n        /* \"contracts/Omnidex-incentives/incentives/base/DistributionManager.sol\":4765:4772  uint256 */\n      0x00\n        /* \"contracts/Omnidex-incentives/incentives/base/DistributionManager.sol\":4781:4808  AssetData storage assetData */\n      dup1\n        /* \"contracts/Omnidex-incentives/incentives/base/DistributionManager.sol\":4811:4817  assets */\n      0x33\n        /* \"contracts/Omnidex-incentives/incentives/base/DistributionManager.sol\":4811:4824  assets[asset] */\n      0x00\n        /* \"contracts/Omnidex-incentives/incentives/base/DistributionManager.sol\":4818:4823  asset */\n      dup7\n        /* \"contracts/Omnidex-incentives/incentives/base/DistributionManager.sol\":4811:4824  assets[asset] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/Omnidex-incentives/incentives/base/DistributionManager.sol\":4781:4824  AssetData storage assetData = assets[asset] */\n      swap1\n      pop\n        /* \"contracts/Omnidex-incentives/incentives/base/DistributionManager.sol\":4831:4848  uint256 userIndex */\n      0x00\n        /* \"contracts/Omnidex-incentives/incentives/base/DistributionManager.sol\":4851:4860  assetData */\n      dup2\n        /* \"contracts/Omnidex-incentives/incentives/base/DistributionManager.sol\":4851:4866  assetData.users */\n      0x01\n      add\n        /* \"contracts/Omnidex-incentives/incentives/base/DistributionManager.sol\":4851:4872  assetData.users[user] */\n      0x00\n        /* \"contracts/Omnidex-incentives/incentives/base/DistributionManager.sol\":4867:4871  user */\n      dup9\n        /* \"contracts/Omnidex-incentives/incentives/base/DistributionManager.sol\":4851:4872  assetData.users[user] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/Omnidex-incentives/incentives/base/DistributionManager.sol\":4831:4872  uint256 userIndex = assetData.users[user] */\n      swap1\n      pop\n        /* \"contracts/Omnidex-incentives/incentives/base/DistributionManager.sol\":4879:4901  uint256 accruedRewards */\n      0x00\n        /* \"contracts/Omnidex-incentives/incentives/base/DistributionManager.sol\":4914:4930  uint256 newIndex */\n      dup1\n        /* \"contracts/Omnidex-incentives/incentives/base/DistributionManager.sol\":4933:4989  _updateAssetStateInternal(asset, assetData, totalStaked) */\n      tag_263\n        /* \"contracts/Omnidex-incentives/incentives/base/DistributionManager.sol\":4959:4964  asset */\n      dup9\n        /* \"contracts/Omnidex-incentives/incentives/base/DistributionManager.sol\":4966:4975  assetData */\n      dup6\n        /* \"contracts/Omnidex-incentives/incentives/base/DistributionManager.sol\":4977:4988  totalStaked */\n      dup9\n        /* \"contracts/Omnidex-incentives/incentives/base/DistributionManager.sol\":4933:4958  _updateAssetStateInternal */\n      tag_264\n        /* \"contracts/Omnidex-incentives/incentives/base/DistributionManager.sol\":4933:4989  _updateAssetStateInternal(asset, assetData, totalStaked) */\n      jump\t// in\n    tag_263:\n        /* \"contracts/Omnidex-incentives/incentives/base/DistributionManager.sol\":4914:4989  uint256 newIndex = _updateAssetStateInternal(asset, assetData, totalStaked) */\n      swap1\n      pop\n        /* \"contracts/Omnidex-incentives/incentives/base/DistributionManager.sol\":5015:5023  newIndex */\n      dup1\n        /* \"contracts/Omnidex-incentives/incentives/base/DistributionManager.sol\":5002:5011  userIndex */\n      dup4\n        /* \"contracts/Omnidex-incentives/incentives/base/DistributionManager.sol\":5002:5023  userIndex != newIndex */\n      eq\n        /* \"contracts/Omnidex-incentives/incentives/base/DistributionManager.sol\":4998:5244  if (userIndex != newIndex) {\r... */\n      tag_265\n      jumpi\n        /* \"contracts/Omnidex-incentives/incentives/base/DistributionManager.sol\":5054:5055  0 */\n      0x00\n        /* \"contracts/Omnidex-incentives/incentives/base/DistributionManager.sol\":5038:5050  stakedByUser */\n      dup8\n        /* \"contracts/Omnidex-incentives/incentives/base/DistributionManager.sol\":5038:5055  stakedByUser != 0 */\n      eq\n        /* \"contracts/Omnidex-incentives/incentives/base/DistributionManager.sol\":5034:5141  if (stakedByUser != 0) {\r... */\n      tag_266\n      jumpi\n        /* \"contracts/Omnidex-incentives/incentives/base/DistributionManager.sol\":5085:5131  _getRewards(stakedByUser, newIndex, userIndex) */\n      tag_267\n        /* \"contracts/Omnidex-incentives/incentives/base/DistributionManager.sol\":5097:5109  stakedByUser */\n      dup8\n        /* \"contracts/Omnidex-incentives/incentives/base/DistributionManager.sol\":5111:5119  newIndex */\n      dup3\n        /* \"contracts/Omnidex-incentives/incentives/base/DistributionManager.sol\":5121:5130  userIndex */\n      dup6\n        /* \"contracts/Omnidex-incentives/incentives/base/DistributionManager.sol\":5085:5096  _getRewards */\n      tag_268\n        /* \"contracts/Omnidex-incentives/incentives/base/DistributionManager.sol\":5085:5131  _getRewards(stakedByUser, newIndex, userIndex) */\n      jump\t// in\n    tag_267:\n        /* \"contracts/Omnidex-incentives/incentives/base/DistributionManager.sol\":5068:5131  accruedRewards = _getRewards(stakedByUser, newIndex, userIndex) */\n      swap2\n      pop\n        /* \"contracts/Omnidex-incentives/incentives/base/DistributionManager.sol\":5034:5141  if (stakedByUser != 0) {\r... */\n    tag_266:\n        /* \"contracts/Omnidex-incentives/incentives/base/DistributionManager.sol\":5175:5183  newIndex */\n      dup1\n        /* \"contracts/Omnidex-incentives/incentives/base/DistributionManager.sol\":5151:5160  assetData */\n      dup5\n        /* \"contracts/Omnidex-incentives/incentives/base/DistributionManager.sol\":5151:5166  assetData.users */\n      0x01\n      add\n        /* \"contracts/Omnidex-incentives/incentives/base/DistributionManager.sol\":5151:5172  assetData.users[user] */\n      0x00\n        /* \"contracts/Omnidex-incentives/incentives/base/DistributionManager.sol\":5167:5171  user */\n      dup12\n        /* \"contracts/Omnidex-incentives/incentives/base/DistributionManager.sol\":5151:5172  assetData.users[user] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/Omnidex-incentives/incentives/base/DistributionManager.sol\":5151:5183  assetData.users[user] = newIndex */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/Omnidex-incentives/incentives/base/DistributionManager.sol\":5220:5225  asset */\n      dup8\n        /* \"contracts/Omnidex-incentives/incentives/base/DistributionManager.sol\":5197:5236  UserIndexUpdated(user, asset, newIndex) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Omnidex-incentives/incentives/base/DistributionManager.sol\":5214:5218  user */\n      dup10\n        /* \"contracts/Omnidex-incentives/incentives/base/DistributionManager.sol\":5197:5236  UserIndexUpdated(user, asset, newIndex) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xbb123b5c06d5408bbea3c4fef481578175cfb432e3b482c6186f02ed9086585b\n        /* \"contracts/Omnidex-incentives/incentives/base/DistributionManager.sol\":5227:5235  newIndex */\n      dup4\n        /* \"contracts/Omnidex-incentives/incentives/base/DistributionManager.sol\":5197:5236  UserIndexUpdated(user, asset, newIndex) */\n      mload(0x40)\n      tag_269\n      swap2\n      swap1\n      tag_38\n      jump\t// in\n    tag_269:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/Omnidex-incentives/incentives/base/DistributionManager.sol\":4998:5244  if (userIndex != newIndex) {\r... */\n    tag_265:\n        /* \"contracts/Omnidex-incentives/incentives/base/DistributionManager.sol\":5259:5273  accruedRewards */\n      dup2\n        /* \"contracts/Omnidex-incentives/incentives/base/DistributionManager.sol\":5252:5273  return accruedRewards */\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"contracts/Omnidex-incentives/incentives/base/DistributionManager.sol\":4616:5279  function _updateUserAssetInternal(\r... */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/Omnidex-incentives/lib/SafeMath.sol\":460:573  function add(uint256 x, uint256 y) internal pure returns (uint256 z) {\r... */\n    tag_130:\n        /* \"contracts/Omnidex-incentives/lib/SafeMath.sol\":518:527  uint256 z */\n      0x00\n        /* \"contracts/Omnidex-incentives/lib/SafeMath.sol\":563:564  x */\n      dup3\n        /* \"contracts/Omnidex-incentives/lib/SafeMath.sol\":557:558  y */\n      dup3\n        /* \"contracts/Omnidex-incentives/lib/SafeMath.sol\":553:554  x */\n      dup5\n        /* \"contracts/Omnidex-incentives/lib/SafeMath.sol\":553:558  x + y */\n      add\n        /* \"contracts/Omnidex-incentives/lib/SafeMath.sol\":549:558  z = x + y */\n      swap2\n      pop\n      dup2\n        /* \"contracts/Omnidex-incentives/lib/SafeMath.sol\":548:564  (z = x + y) >= x */\n      lt\n      iszero\n        /* \"contracts/Omnidex-incentives/lib/SafeMath.sol\":540:565  require((z = x + y) >= x) */\n      tag_271\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_271:\n        /* \"contracts/Omnidex-incentives/lib/SafeMath.sol\":460:573  function add(uint256 x, uint256 y) internal pure returns (uint256 z) {\r... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/Omnidex-incentives/incentives/base/DistributionManager.sol\":2242:2885  function _configureAssets(DistributionTypes.AssetConfigInput[] memory assetsConfigInput)\r... */\n    tag_187:\n        /* \"contracts/Omnidex-incentives/incentives/base/DistributionManager.sol\":2360:2369  uint256 i */\n      0x00\n        /* \"contracts/Omnidex-incentives/incentives/base/DistributionManager.sol\":2355:2880  for (uint256 i = 0; i < assetsConfigInput.length; i++) {\r... */\n    tag_273:\n        /* \"contracts/Omnidex-incentives/incentives/base/DistributionManager.sol\":2379:2396  assetsConfigInput */\n      dup2\n        /* \"contracts/Omnidex-incentives/incentives/base/DistributionManager.sol\":2379:2403  assetsConfigInput.length */\n      mload\n        /* \"contracts/Omnidex-incentives/incentives/base/DistributionManager.sol\":2375:2376  i */\n      dup2\n        /* \"contracts/Omnidex-incentives/incentives/base/DistributionManager.sol\":2375:2403  i < assetsConfigInput.length */\n      lt\n        /* \"contracts/Omnidex-incentives/incentives/base/DistributionManager.sol\":2355:2880  for (uint256 i = 0; i < assetsConfigInput.length; i++) {\r... */\n      iszero\n      tag_274\n      jumpi\n        /* \"contracts/Omnidex-incentives/incentives/base/DistributionManager.sol\":2419:2448  AssetData storage assetConfig */\n      0x00\n        /* \"contracts/Omnidex-incentives/incentives/base/DistributionManager.sol\":2451:2457  assets */\n      0x33\n        /* \"contracts/Omnidex-incentives/incentives/base/DistributionManager.sol\":2451:2495  assets[assetsConfigInput[i].underlyingAsset] */\n      0x00\n        /* \"contracts/Omnidex-incentives/incentives/base/DistributionManager.sol\":2458:2475  assetsConfigInput */\n      dup5\n        /* \"contracts/Omnidex-incentives/incentives/base/DistributionManager.sol\":2476:2477  i */\n      dup5\n        /* \"contracts/Omnidex-incentives/incentives/base/DistributionManager.sol\":2458:2478  assetsConfigInput[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_276\n      jumpi\n      invalid\n    tag_276:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n        /* \"contracts/Omnidex-incentives/incentives/base/DistributionManager.sol\":2458:2494  assetsConfigInput[i].underlyingAsset */\n      0x40\n      add\n      mload\n        /* \"contracts/Omnidex-incentives/incentives/base/DistributionManager.sol\":2451:2495  assets[assetsConfigInput[i].underlyingAsset] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/Omnidex-incentives/incentives/base/DistributionManager.sol\":2419:2495  AssetData storage assetConfig = assets[assetsConfigInput[i].underlyingAsset] */\n      swap1\n      pop\n        /* \"contracts/Omnidex-incentives/incentives/base/DistributionManager.sol\":2506:2652  _updateAssetStateInternal(\r... */\n      tag_277\n        /* \"contracts/Omnidex-incentives/incentives/base/DistributionManager.sol\":2542:2559  assetsConfigInput */\n      dup4\n        /* \"contracts/Omnidex-incentives/incentives/base/DistributionManager.sol\":2560:2561  i */\n      dup4\n        /* \"contracts/Omnidex-incentives/incentives/base/DistributionManager.sol\":2542:2562  assetsConfigInput[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_278\n      jumpi\n      invalid\n    tag_278:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n        /* \"contracts/Omnidex-incentives/incentives/base/DistributionManager.sol\":2542:2578  assetsConfigInput[i].underlyingAsset */\n      0x40\n      add\n      mload\n        /* \"contracts/Omnidex-incentives/incentives/base/DistributionManager.sol\":2589:2600  assetConfig */\n      dup3\n        /* \"contracts/Omnidex-incentives/incentives/base/DistributionManager.sol\":2611:2628  assetsConfigInput */\n      dup6\n        /* \"contracts/Omnidex-incentives/incentives/base/DistributionManager.sol\":2629:2630  i */\n      dup6\n        /* \"contracts/Omnidex-incentives/incentives/base/DistributionManager.sol\":2611:2631  assetsConfigInput[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_279\n      jumpi\n      invalid\n    tag_279:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n        /* \"contracts/Omnidex-incentives/incentives/base/DistributionManager.sol\":2611:2643  assetsConfigInput[i].totalStaked */\n      0x20\n      add\n      mload\n        /* \"contracts/Omnidex-incentives/incentives/base/DistributionManager.sol\":2506:2531  _updateAssetStateInternal */\n      tag_264\n        /* \"contracts/Omnidex-incentives/incentives/base/DistributionManager.sol\":2506:2652  _updateAssetStateInternal(\r... */\n      jump\t// in\n    tag_277:\n      pop\n        /* \"contracts/Omnidex-incentives/incentives/base/DistributionManager.sol\":2695:2712  assetsConfigInput */\n      dup3\n        /* \"contracts/Omnidex-incentives/incentives/base/DistributionManager.sol\":2713:2714  i */\n      dup3\n        /* \"contracts/Omnidex-incentives/incentives/base/DistributionManager.sol\":2695:2715  assetsConfigInput[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_280\n      jumpi\n      invalid\n    tag_280:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n        /* \"contracts/Omnidex-incentives/incentives/base/DistributionManager.sol\":2695:2733  assetsConfigInput[i].emissionPerSecond */\n      0x00\n      add\n      mload\n        /* \"contracts/Omnidex-incentives/incentives/base/DistributionManager.sol\":2663:2674  assetConfig */\n      dup2\n        /* \"contracts/Omnidex-incentives/incentives/base/DistributionManager.sol\":2663:2692  assetConfig.emissionPerSecond */\n      0x00\n      add\n      0x00\n        /* \"contracts/Omnidex-incentives/incentives/base/DistributionManager.sol\":2663:2733  assetConfig.emissionPerSecond = assetsConfigInput[i].emissionPerSecond */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/Omnidex-incentives/incentives/base/DistributionManager.sol\":2778:2795  assetsConfigInput */\n      dup3\n        /* \"contracts/Omnidex-incentives/incentives/base/DistributionManager.sol\":2796:2797  i */\n      dup3\n        /* \"contracts/Omnidex-incentives/incentives/base/DistributionManager.sol\":2778:2798  assetsConfigInput[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_281\n      jumpi\n      invalid\n    tag_281:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n        /* \"contracts/Omnidex-incentives/incentives/base/DistributionManager.sol\":2778:2814  assetsConfigInput[i].underlyingAsset */\n      0x40\n      add\n      mload\n        /* \"contracts/Omnidex-incentives/incentives/base/DistributionManager.sol\":2749:2872  AssetConfigUpdated(\r... */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x87fa03892a0556cb6b8f97e6d533a150d4d55fcbf275fff5fa003fa636bcc7fa\n        /* \"contracts/Omnidex-incentives/incentives/base/DistributionManager.sol\":2825:2842  assetsConfigInput */\n      dup5\n        /* \"contracts/Omnidex-incentives/incentives/base/DistributionManager.sol\":2843:2844  i */\n      dup5\n        /* \"contracts/Omnidex-incentives/incentives/base/DistributionManager.sol\":2825:2845  assetsConfigInput[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_282\n      jumpi\n      invalid\n    tag_282:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n        /* \"contracts/Omnidex-incentives/incentives/base/DistributionManager.sol\":2825:2863  assetsConfigInput[i].emissionPerSecond */\n      0x00\n      add\n      mload\n        /* \"contracts/Omnidex-incentives/incentives/base/DistributionManager.sol\":2749:2872  AssetConfigUpdated(\r... */\n      mload(0x40)\n      tag_283\n      swap2\n      swap1\n      tag_284\n      jump\t// in\n    tag_283:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"contracts/Omnidex-incentives/incentives/base/DistributionManager.sol\":2355:2880  for (uint256 i = 0; i < assetsConfigInput.length; i++) {\r... */\n      pop\n        /* \"contracts/Omnidex-incentives/incentives/base/DistributionManager.sol\":2405:2408  i++ */\n      dup1\n      dup1\n      0x01\n      add\n      swap2\n      pop\n      pop\n        /* \"contracts/Omnidex-incentives/incentives/base/DistributionManager.sol\":2355:2880  for (uint256 i = 0; i < assetsConfigInput.length; i++) {\r... */\n      jump(tag_273)\n    tag_274:\n      pop\n        /* \"contracts/Omnidex-incentives/incentives/base/DistributionManager.sol\":2242:2885  function _configureAssets(DistributionTypes.AssetConfigInput[] memory assetsConfigInput)\r... */\n      pop\n      jump\t// out\n        /* \"contracts/Omnidex-incentives/incentives/base/DistributionManager.sol\":6351:7048  function _getUnclaimedRewards(address user, DistributionTypes.UserStakeInput[] memory stakes)\r... */\n    tag_212:\n        /* \"contracts/Omnidex-incentives/incentives/base/DistributionManager.sol\":6483:6490  uint256 */\n      0x00\n        /* \"contracts/Omnidex-incentives/incentives/base/DistributionManager.sol\":6502:6524  uint256 accruedRewards */\n      dup1\n        /* \"contracts/Omnidex-incentives/incentives/base/DistributionManager.sol\":6527:6528  0 */\n      0x00\n        /* \"contracts/Omnidex-incentives/incentives/base/DistributionManager.sol\":6502:6528  uint256 accruedRewards = 0 */\n      swap1\n      pop\n        /* \"contracts/Omnidex-incentives/incentives/base/DistributionManager.sol\":6542:6551  uint256 i */\n      0x00\n        /* \"contracts/Omnidex-incentives/incentives/base/DistributionManager.sol\":6537:7015  for (uint256 i = 0; i < stakes.length; i++) {\r... */\n    tag_286:\n        /* \"contracts/Omnidex-incentives/incentives/base/DistributionManager.sol\":6561:6567  stakes */\n      dup4\n        /* \"contracts/Omnidex-incentives/incentives/base/DistributionManager.sol\":6561:6574  stakes.length */\n      mload\n        /* \"contracts/Omnidex-incentives/incentives/base/DistributionManager.sol\":6557:6558  i */\n      dup2\n        /* \"contracts/Omnidex-incentives/incentives/base/DistributionManager.sol\":6557:6574  i < stakes.length */\n      lt\n        /* \"contracts/Omnidex-incentives/incentives/base/DistributionManager.sol\":6537:7015  for (uint256 i = 0; i < stakes.length; i++) {\r... */\n      iszero\n      tag_287\n      jumpi\n        /* \"contracts/Omnidex-incentives/incentives/base/DistributionManager.sol\":6590:6619  AssetData storage assetConfig */\n      0x00\n        /* \"contracts/Omnidex-incentives/incentives/base/DistributionManager.sol\":6622:6628  assets */\n      0x33\n        /* \"contracts/Omnidex-incentives/incentives/base/DistributionManager.sol\":6622:6655  assets[stakes[i].underlyingAsset] */\n      0x00\n        /* \"contracts/Omnidex-incentives/incentives/base/DistributionManager.sol\":6629:6635  stakes */\n      dup7\n        /* \"contracts/Omnidex-incentives/incentives/base/DistributionManager.sol\":6636:6637  i */\n      dup5\n        /* \"contracts/Omnidex-incentives/incentives/base/DistributionManager.sol\":6629:6638  stakes[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_289\n      jumpi\n      invalid\n    tag_289:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n        /* \"contracts/Omnidex-incentives/incentives/base/DistributionManager.sol\":6629:6654  stakes[i].underlyingAsset */\n      0x00\n      add\n      mload\n        /* \"contracts/Omnidex-incentives/incentives/base/DistributionManager.sol\":6622:6655  assets[stakes[i].underlyingAsset] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/Omnidex-incentives/incentives/base/DistributionManager.sol\":6590:6655  AssetData storage assetConfig = assets[stakes[i].underlyingAsset] */\n      swap1\n      pop\n        /* \"contracts/Omnidex-incentives/incentives/base/DistributionManager.sol\":6664:6682  uint256 assetIndex */\n      0x00\n        /* \"contracts/Omnidex-incentives/incentives/base/DistributionManager.sol\":6694:6869  _getAssetIndex(\r... */\n      tag_290\n        /* \"contracts/Omnidex-incentives/incentives/base/DistributionManager.sol\":6721:6732  assetConfig */\n      dup3\n        /* \"contracts/Omnidex-incentives/incentives/base/DistributionManager.sol\":6721:6738  assetConfig.index */\n      0x00\n      add\n      0x0d\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffff\n      and\n        /* \"contracts/Omnidex-incentives/incentives/base/DistributionManager.sol\":6694:6869  _getAssetIndex(\r... */\n      0xffffffffffffffffffffffffff\n      and\n        /* \"contracts/Omnidex-incentives/incentives/base/DistributionManager.sol\":6751:6762  assetConfig */\n      dup4\n        /* \"contracts/Omnidex-incentives/incentives/base/DistributionManager.sol\":6751:6780  assetConfig.emissionPerSecond */\n      0x00\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffff\n      and\n        /* \"contracts/Omnidex-incentives/incentives/base/DistributionManager.sol\":6694:6869  _getAssetIndex(\r... */\n      0xffffffffffffffffffffffffff\n      and\n        /* \"contracts/Omnidex-incentives/incentives/base/DistributionManager.sol\":6793:6804  assetConfig */\n      dup5\n        /* \"contracts/Omnidex-incentives/incentives/base/DistributionManager.sol\":6793:6824  assetConfig.lastUpdateTimestamp */\n      0x00\n      add\n      0x1a\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffff\n      and\n        /* \"contracts/Omnidex-incentives/incentives/base/DistributionManager.sol\":6694:6869  _getAssetIndex(\r... */\n      0xffffffffff\n      and\n        /* \"contracts/Omnidex-incentives/incentives/base/DistributionManager.sol\":6837:6843  stakes */\n      dup10\n        /* \"contracts/Omnidex-incentives/incentives/base/DistributionManager.sol\":6844:6845  i */\n      dup8\n        /* \"contracts/Omnidex-incentives/incentives/base/DistributionManager.sol\":6837:6846  stakes[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_291\n      jumpi\n      invalid\n    tag_291:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n        /* \"contracts/Omnidex-incentives/incentives/base/DistributionManager.sol\":6837:6858  stakes[i].totalStaked */\n      0x40\n      add\n      mload\n        /* \"contracts/Omnidex-incentives/incentives/base/DistributionManager.sol\":6694:6708  _getAssetIndex */\n      tag_292\n        /* \"contracts/Omnidex-incentives/incentives/base/DistributionManager.sol\":6694:6869  _getAssetIndex(\r... */\n      jump\t// in\n    tag_290:\n        /* \"contracts/Omnidex-incentives/incentives/base/DistributionManager.sol\":6664:6869  uint256 assetIndex =\r... */\n      swap1\n      pop\n        /* \"contracts/Omnidex-incentives/incentives/base/DistributionManager.sol\":6897:7007  accruedRewards.add(\r... */\n      tag_293\n        /* \"contracts/Omnidex-incentives/incentives/base/DistributionManager.sol\":6926:6998  _getRewards(stakes[i].stakedByUser, assetIndex, assetConfig.users[user]) */\n      tag_294\n        /* \"contracts/Omnidex-incentives/incentives/base/DistributionManager.sol\":6938:6944  stakes */\n      dup8\n        /* \"contracts/Omnidex-incentives/incentives/base/DistributionManager.sol\":6945:6946  i */\n      dup6\n        /* \"contracts/Omnidex-incentives/incentives/base/DistributionManager.sol\":6938:6947  stakes[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_295\n      jumpi\n      invalid\n    tag_295:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n        /* \"contracts/Omnidex-incentives/incentives/base/DistributionManager.sol\":6938:6960  stakes[i].stakedByUser */\n      0x20\n      add\n      mload\n        /* \"contracts/Omnidex-incentives/incentives/base/DistributionManager.sol\":6962:6972  assetIndex */\n      dup4\n        /* \"contracts/Omnidex-incentives/incentives/base/DistributionManager.sol\":6974:6985  assetConfig */\n      dup6\n        /* \"contracts/Omnidex-incentives/incentives/base/DistributionManager.sol\":6974:6991  assetConfig.users */\n      0x01\n      add\n        /* \"contracts/Omnidex-incentives/incentives/base/DistributionManager.sol\":6974:6997  assetConfig.users[user] */\n      0x00\n        /* \"contracts/Omnidex-incentives/incentives/base/DistributionManager.sol\":6992:6996  user */\n      dup13\n        /* \"contracts/Omnidex-incentives/incentives/base/DistributionManager.sol\":6974:6997  assetConfig.users[user] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/Omnidex-incentives/incentives/base/DistributionManager.sol\":6926:6937  _getRewards */\n      tag_268\n        /* \"contracts/Omnidex-incentives/incentives/base/DistributionManager.sol\":6926:6998  _getRewards(stakes[i].stakedByUser, assetIndex, assetConfig.users[user]) */\n      jump\t// in\n    tag_294:\n        /* \"contracts/Omnidex-incentives/incentives/base/DistributionManager.sol\":6897:6911  accruedRewards */\n      dup6\n        /* \"contracts/Omnidex-incentives/incentives/base/DistributionManager.sol\":6897:6915  accruedRewards.add */\n      tag_130\n      swap1\n        /* \"contracts/Omnidex-incentives/incentives/base/DistributionManager.sol\":6897:7007  accruedRewards.add(\r... */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_293:\n        /* \"contracts/Omnidex-incentives/incentives/base/DistributionManager.sol\":6880:7007  accruedRewards = accruedRewards.add(\r... */\n      swap4\n      pop\n        /* \"contracts/Omnidex-incentives/incentives/base/DistributionManager.sol\":6537:7015  for (uint256 i = 0; i < stakes.length; i++) {\r... */\n      pop\n      pop\n        /* \"contracts/Omnidex-incentives/incentives/base/DistributionManager.sol\":6576:6579  i++ */\n      dup1\n      dup1\n      0x01\n      add\n      swap2\n      pop\n      pop\n        /* \"contracts/Omnidex-incentives/incentives/base/DistributionManager.sol\":6537:7015  for (uint256 i = 0; i < stakes.length; i++) {\r... */\n      jump(tag_286)\n    tag_287:\n      pop\n        /* \"contracts/Omnidex-incentives/incentives/base/DistributionManager.sol\":7028:7042  accruedRewards */\n      dup1\n        /* \"contracts/Omnidex-incentives/incentives/base/DistributionManager.sol\":7021:7042  return accruedRewards */\n      swap2\n      pop\n      pop\n        /* \"contracts/Omnidex-incentives/incentives/base/DistributionManager.sol\":6351:7048  function _getUnclaimedRewards(address user, DistributionTypes.UserStakeInput[] memory stakes)\r... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/Omnidex-incentives/incentives/base/BaseIncentivesController.sol\":5452:5544  function getRevision() internal pure override returns (uint256) {\r... */\n    tag_216:\n        /* \"contracts/Omnidex-incentives/incentives/base/BaseIncentivesController.sol\":5507:5514  uint256 */\n      0x00\n        /* \"contracts/Omnidex-incentives/incentives/base/BaseIncentivesController.sol\":1018:1019  1 */\n      0x01\n        /* \"contracts/Omnidex-incentives/incentives/base/BaseIncentivesController.sol\":5523:5538  return REVISION */\n      swap1\n      pop\n        /* \"contracts/Omnidex-incentives/incentives/base/BaseIncentivesController.sol\":5452:5544  function getRevision() internal pure override returns (uint256) {\r... */\n      swap1\n      jump\t// out\n        /* \"contracts/Omnidex-incentives/incentives/base/DistributionManager.sol\":5591:6070  function _claimRewards(address user, DistributionTypes.UserStakeInput[] memory stakes)\r... */\n    tag_252:\n        /* \"contracts/Omnidex-incentives/incentives/base/DistributionManager.sol\":5706:5713  uint256 */\n      0x00\n        /* \"contracts/Omnidex-incentives/incentives/base/DistributionManager.sol\":5725:5747  uint256 accruedRewards */\n      dup1\n        /* \"contracts/Omnidex-incentives/incentives/base/DistributionManager.sol\":5750:5751  0 */\n      0x00\n        /* \"contracts/Omnidex-incentives/incentives/base/DistributionManager.sol\":5725:5751  uint256 accruedRewards = 0 */\n      swap1\n      pop\n        /* \"contracts/Omnidex-incentives/incentives/base/DistributionManager.sol\":5765:5774  uint256 i */\n      0x00\n        /* \"contracts/Omnidex-incentives/incentives/base/DistributionManager.sol\":5760:6035  for (uint256 i = 0; i < stakes.length; i++) {\r... */\n    tag_298:\n        /* \"contracts/Omnidex-incentives/incentives/base/DistributionManager.sol\":5784:5790  stakes */\n      dup4\n        /* \"contracts/Omnidex-incentives/incentives/base/DistributionManager.sol\":5784:5797  stakes.length */\n      mload\n        /* \"contracts/Omnidex-incentives/incentives/base/DistributionManager.sol\":5780:5781  i */\n      dup2\n        /* \"contracts/Omnidex-incentives/incentives/base/DistributionManager.sol\":5780:5797  i < stakes.length */\n      lt\n        /* \"contracts/Omnidex-incentives/incentives/base/DistributionManager.sol\":5760:6035  for (uint256 i = 0; i < stakes.length; i++) {\r... */\n      iszero\n      tag_299\n      jumpi\n        /* \"contracts/Omnidex-incentives/incentives/base/DistributionManager.sol\":5830:6027  accruedRewards.add(\r... */\n      tag_301\n        /* \"contracts/Omnidex-incentives/incentives/base/DistributionManager.sol\":5859:6018  _updateUserAssetInternal(\r... */\n      tag_302\n        /* \"contracts/Omnidex-incentives/incentives/base/DistributionManager.sol\":5896:5900  user */\n      dup7\n        /* \"contracts/Omnidex-incentives/incentives/base/DistributionManager.sol\":5913:5919  stakes */\n      dup7\n        /* \"contracts/Omnidex-incentives/incentives/base/DistributionManager.sol\":5920:5921  i */\n      dup5\n        /* \"contracts/Omnidex-incentives/incentives/base/DistributionManager.sol\":5913:5922  stakes[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_303\n      jumpi\n      invalid\n    tag_303:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n        /* \"contracts/Omnidex-incentives/incentives/base/DistributionManager.sol\":5913:5938  stakes[i].underlyingAsset */\n      0x00\n      add\n      mload\n        /* \"contracts/Omnidex-incentives/incentives/base/DistributionManager.sol\":5951:5957  stakes */\n      dup8\n        /* \"contracts/Omnidex-incentives/incentives/base/DistributionManager.sol\":5958:5959  i */\n      dup6\n        /* \"contracts/Omnidex-incentives/incentives/base/DistributionManager.sol\":5951:5960  stakes[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_304\n      jumpi\n      invalid\n    tag_304:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n        /* \"contracts/Omnidex-incentives/incentives/base/DistributionManager.sol\":5951:5973  stakes[i].stakedByUser */\n      0x20\n      add\n      mload\n        /* \"contracts/Omnidex-incentives/incentives/base/DistributionManager.sol\":5986:5992  stakes */\n      dup9\n        /* \"contracts/Omnidex-incentives/incentives/base/DistributionManager.sol\":5993:5994  i */\n      dup7\n        /* \"contracts/Omnidex-incentives/incentives/base/DistributionManager.sol\":5986:5995  stakes[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_305\n      jumpi\n      invalid\n    tag_305:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n        /* \"contracts/Omnidex-incentives/incentives/base/DistributionManager.sol\":5986:6007  stakes[i].totalStaked */\n      0x40\n      add\n      mload\n        /* \"contracts/Omnidex-incentives/incentives/base/DistributionManager.sol\":5859:5883  _updateUserAssetInternal */\n      tag_127\n        /* \"contracts/Omnidex-incentives/incentives/base/DistributionManager.sol\":5859:6018  _updateUserAssetInternal(\r... */\n      jump\t// in\n    tag_302:\n        /* \"contracts/Omnidex-incentives/incentives/base/DistributionManager.sol\":5830:5844  accruedRewards */\n      dup4\n        /* \"contracts/Omnidex-incentives/incentives/base/DistributionManager.sol\":5830:5848  accruedRewards.add */\n      tag_130\n      swap1\n        /* \"contracts/Omnidex-incentives/incentives/base/DistributionManager.sol\":5830:6027  accruedRewards.add(\r... */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_301:\n        /* \"contracts/Omnidex-incentives/incentives/base/DistributionManager.sol\":5813:6027  accruedRewards = accruedRewards.add(\r... */\n      swap2\n      pop\n        /* \"contracts/Omnidex-incentives/incentives/base/DistributionManager.sol\":5799:5802  i++ */\n      dup1\n      dup1\n      0x01\n      add\n      swap2\n      pop\n      pop\n        /* \"contracts/Omnidex-incentives/incentives/base/DistributionManager.sol\":5760:6035  for (uint256 i = 0; i < stakes.length; i++) {\r... */\n      jump(tag_298)\n    tag_299:\n      pop\n        /* \"contracts/Omnidex-incentives/incentives/base/DistributionManager.sol\":6050:6064  accruedRewards */\n      dup1\n        /* \"contracts/Omnidex-incentives/incentives/base/DistributionManager.sol\":6043:6064  return accruedRewards */\n      swap2\n      pop\n      pop\n        /* \"contracts/Omnidex-incentives/incentives/base/DistributionManager.sol\":5591:6070  function _claimRewards(address user, DistributionTypes.UserStakeInput[] memory stakes)\r... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/Omnidex-incentives/incentives/PullRewardsIncentivesController.sol\":1700:1849  function _transferRewards(address to, uint256 amount) internal override {\r... */\n    tag_260:\n        /* \"contracts/Omnidex-incentives/incentives/PullRewardsIncentivesController.sol\":1779:1843  IERC20(REWARD_TOKEN).safeTransferFrom(_rewardsVault, to, amount) */\n      tag_307\n        /* \"contracts/Omnidex-incentives/incentives/PullRewardsIncentivesController.sol\":1817:1830  _rewardsVault */\n      0x37\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Omnidex-incentives/incentives/PullRewardsIncentivesController.sol\":1832:1834  to */\n      dup4\n        /* \"contracts/Omnidex-incentives/incentives/PullRewardsIncentivesController.sol\":1836:1842  amount */\n      dup4\n        /* \"contracts/Omnidex-incentives/incentives/PullRewardsIncentivesController.sol\":1786:1798  REWARD_TOKEN */\n      immutable(\"0xe229503fec190040ef38484d41ddb4c2fce10c1aa73d9d5bd832f8c76f44643b\")\n        /* \"contracts/Omnidex-incentives/incentives/PullRewardsIncentivesController.sol\":1779:1816  IERC20(REWARD_TOKEN).safeTransferFrom */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      tag_308\n      swap1\n        /* \"contracts/Omnidex-incentives/incentives/PullRewardsIncentivesController.sol\":1779:1843  IERC20(REWARD_TOKEN).safeTransferFrom(_rewardsVault, to, amount) */\n      swap4\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_307:\n        /* \"contracts/Omnidex-incentives/incentives/PullRewardsIncentivesController.sol\":1700:1849  function _transferRewards(address to, uint256 amount) internal override {\r... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/Omnidex-incentives/incentives/base/DistributionManager.sol\":3238:4201  function _updateAssetStateInternal(\r... */\n    tag_264:\n        /* \"contracts/Omnidex-incentives/incentives/base/DistributionManager.sol\":3378:3385  uint256 */\n      0x00\n        /* \"contracts/Omnidex-incentives/incentives/base/DistributionManager.sol\":3394:3410  uint256 oldIndex */\n      dup1\n        /* \"contracts/Omnidex-incentives/incentives/base/DistributionManager.sol\":3413:3424  assetConfig */\n      dup4\n        /* \"contracts/Omnidex-incentives/incentives/base/DistributionManager.sol\":3413:3430  assetConfig.index */\n      0x00\n      add\n      0x0d\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffff\n      and\n        /* \"contracts/Omnidex-incentives/incentives/base/DistributionManager.sol\":3394:3430  uint256 oldIndex = assetConfig.index */\n      0xffffffffffffffffffffffffff\n      and\n      swap1\n      pop\n        /* \"contracts/Omnidex-incentives/incentives/base/DistributionManager.sol\":3437:3462  uint256 emissionPerSecond */\n      0x00\n        /* \"contracts/Omnidex-incentives/incentives/base/DistributionManager.sol\":3465:3476  assetConfig */\n      dup5\n        /* \"contracts/Omnidex-incentives/incentives/base/DistributionManager.sol\":3465:3494  assetConfig.emissionPerSecond */\n      0x00\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffff\n      and\n        /* \"contracts/Omnidex-incentives/incentives/base/DistributionManager.sol\":3437:3494  uint256 emissionPerSecond = assetConfig.emissionPerSecond */\n      0xffffffffffffffffffffffffff\n      and\n      swap1\n      pop\n        /* \"contracts/Omnidex-incentives/incentives/base/DistributionManager.sol\":3501:3528  uint128 lastUpdateTimestamp */\n      0x00\n        /* \"contracts/Omnidex-incentives/incentives/base/DistributionManager.sol\":3531:3542  assetConfig */\n      dup6\n        /* \"contracts/Omnidex-incentives/incentives/base/DistributionManager.sol\":3531:3562  assetConfig.lastUpdateTimestamp */\n      0x00\n      add\n      0x1a\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffff\n      and\n        /* \"contracts/Omnidex-incentives/incentives/base/DistributionManager.sol\":3501:3562  uint128 lastUpdateTimestamp = assetConfig.lastUpdateTimestamp */\n      0xffffffffff\n      and\n      swap1\n      pop\n        /* \"contracts/Omnidex-incentives/incentives/base/DistributionManager.sol\":3594:3613  lastUpdateTimestamp */\n      dup1\n        /* \"contracts/Omnidex-incentives/incentives/base/DistributionManager.sol\":3575:3613  block.timestamp == lastUpdateTimestamp */\n      0xffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Omnidex-incentives/incentives/base/DistributionManager.sol\":3575:3590  block.timestamp */\n      timestamp\n        /* \"contracts/Omnidex-incentives/incentives/base/DistributionManager.sol\":3575:3613  block.timestamp == lastUpdateTimestamp */\n      eq\n        /* \"contracts/Omnidex-incentives/incentives/base/DistributionManager.sol\":3571:3647  if (block.timestamp == lastUpdateTimestamp) {\r... */\n      iszero\n      tag_310\n      jumpi\n        /* \"contracts/Omnidex-incentives/incentives/base/DistributionManager.sol\":3631:3639  oldIndex */\n      dup3\n        /* \"contracts/Omnidex-incentives/incentives/base/DistributionManager.sol\":3624:3639  return oldIndex */\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump(tag_309)\n        /* \"contracts/Omnidex-incentives/incentives/base/DistributionManager.sol\":3571:3647  if (block.timestamp == lastUpdateTimestamp) {\r... */\n    tag_310:\n        /* \"contracts/Omnidex-incentives/incentives/base/DistributionManager.sol\":3655:3671  uint256 newIndex */\n      0x00\n        /* \"contracts/Omnidex-incentives/incentives/base/DistributionManager.sol\":3681:3758  _getAssetIndex(oldIndex, emissionPerSecond, lastUpdateTimestamp, totalStaked) */\n      tag_311\n        /* \"contracts/Omnidex-incentives/incentives/base/DistributionManager.sol\":3696:3704  oldIndex */\n      dup5\n        /* \"contracts/Omnidex-incentives/incentives/base/DistributionManager.sol\":3706:3723  emissionPerSecond */\n      dup5\n        /* \"contracts/Omnidex-incentives/incentives/base/DistributionManager.sol\":3725:3744  lastUpdateTimestamp */\n      dup5\n        /* \"contracts/Omnidex-incentives/incentives/base/DistributionManager.sol\":3746:3757  totalStaked */\n      dup10\n        /* \"contracts/Omnidex-incentives/incentives/base/DistributionManager.sol\":3681:3695  _getAssetIndex */\n      tag_292\n        /* \"contracts/Omnidex-incentives/incentives/base/DistributionManager.sol\":3681:3758  _getAssetIndex(oldIndex, emissionPerSecond, lastUpdateTimestamp, totalStaked) */\n      jump\t// in\n    tag_311:\n        /* \"contracts/Omnidex-incentives/incentives/base/DistributionManager.sol\":3655:3758  uint256 newIndex =\r... */\n      swap1\n      pop\n        /* \"contracts/Omnidex-incentives/incentives/base/DistributionManager.sol\":3783:3791  oldIndex */\n      dup4\n        /* \"contracts/Omnidex-incentives/incentives/base/DistributionManager.sol\":3771:3779  newIndex */\n      dup2\n        /* \"contracts/Omnidex-incentives/incentives/base/DistributionManager.sol\":3771:3791  newIndex != oldIndex */\n      eq\n        /* \"contracts/Omnidex-incentives/incentives/base/DistributionManager.sol\":3767:4172  if (newIndex != oldIndex) {\r... */\n      tag_312\n      jumpi\n        /* \"contracts/Omnidex-incentives/incentives/base/DistributionManager.sol\":3831:3839  newIndex */\n      dup1\n        /* \"contracts/Omnidex-incentives/incentives/base/DistributionManager.sol\":3818:3826  newIndex */\n      dup2\n        /* \"contracts/Omnidex-incentives/incentives/base/DistributionManager.sol\":3810:3839  uint104(newIndex) == newIndex */\n      0xffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/Omnidex-incentives/incentives/base/DistributionManager.sol\":3802:3858  require(uint104(newIndex) == newIndex, 'Index overflow') */\n      tag_313\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_314\n      swap1\n      tag_315\n      jump\t// in\n    tag_314:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_313:\n        /* \"contracts/Omnidex-incentives/incentives/base/DistributionManager.sol\":3961:3969  newIndex */\n      dup1\n        /* \"contracts/Omnidex-incentives/incentives/base/DistributionManager.sol\":3933:3944  assetConfig */\n      dup8\n        /* \"contracts/Omnidex-incentives/incentives/base/DistributionManager.sol\":3933:3950  assetConfig.index */\n      0x00\n      add\n      0x0d\n        /* \"contracts/Omnidex-incentives/incentives/base/DistributionManager.sol\":3933:3970  assetConfig.index = uint104(newIndex) */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/Omnidex-incentives/incentives/base/DistributionManager.sol\":4020:4035  block.timestamp */\n      timestamp\n        /* \"contracts/Omnidex-incentives/incentives/base/DistributionManager.sol\":3979:3990  assetConfig */\n      dup8\n        /* \"contracts/Omnidex-incentives/incentives/base/DistributionManager.sol\":3979:4010  assetConfig.lastUpdateTimestamp */\n      0x00\n      add\n      0x1a\n        /* \"contracts/Omnidex-incentives/incentives/base/DistributionManager.sol\":3979:4036  assetConfig.lastUpdateTimestamp = uint40(block.timestamp) */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/Omnidex-incentives/incentives/base/DistributionManager.sol\":4068:4073  asset */\n      dup8\n        /* \"contracts/Omnidex-incentives/incentives/base/DistributionManager.sol\":4050:4084  AssetIndexUpdated(asset, newIndex) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x5777ca300dfe5bead41006fbce4389794dbc0ed8d6cccebfaf94630aa04184bc\n        /* \"contracts/Omnidex-incentives/incentives/base/DistributionManager.sol\":4075:4083  newIndex */\n      dup3\n        /* \"contracts/Omnidex-incentives/incentives/base/DistributionManager.sol\":4050:4084  AssetIndexUpdated(asset, newIndex) */\n      mload(0x40)\n      tag_316\n      swap2\n      swap1\n      tag_38\n      jump\t// in\n    tag_316:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"contracts/Omnidex-incentives/incentives/base/DistributionManager.sol\":3767:4172  if (newIndex != oldIndex) {\r... */\n      jump(tag_317)\n    tag_312:\n        /* \"contracts/Omnidex-incentives/incentives/base/DistributionManager.sol\":4148:4163  block.timestamp */\n      timestamp\n        /* \"contracts/Omnidex-incentives/incentives/base/DistributionManager.sol\":4107:4118  assetConfig */\n      dup8\n        /* \"contracts/Omnidex-incentives/incentives/base/DistributionManager.sol\":4107:4138  assetConfig.lastUpdateTimestamp */\n      0x00\n      add\n      0x1a\n        /* \"contracts/Omnidex-incentives/incentives/base/DistributionManager.sol\":4107:4164  assetConfig.lastUpdateTimestamp = uint40(block.timestamp) */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/Omnidex-incentives/incentives/base/DistributionManager.sol\":3767:4172  if (newIndex != oldIndex) {\r... */\n    tag_317:\n        /* \"contracts/Omnidex-incentives/incentives/base/DistributionManager.sol\":4187:4195  newIndex */\n      dup1\n        /* \"contracts/Omnidex-incentives/incentives/base/DistributionManager.sol\":4180:4195  return newIndex */\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"contracts/Omnidex-incentives/incentives/base/DistributionManager.sol\":3238:4201  function _updateAssetStateInternal(\r... */\n    tag_309:\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/Omnidex-incentives/incentives/base/DistributionManager.sol\":7402:7644  function _getRewards(\r... */\n    tag_268:\n        /* \"contracts/Omnidex-incentives/incentives/base/DistributionManager.sol\":7537:7544  uint256 */\n      0x00\n        /* \"contracts/Omnidex-incentives/incentives/base/DistributionManager.sol\":783:785  18 */\n      0x12\n        /* \"contracts/Omnidex-incentives/incentives/base/DistributionManager.sol\":7620:7638  uint256(PRECISION) */\n      0xff\n      and\n        /* \"contracts/Omnidex-incentives/incentives/base/DistributionManager.sol\":7616:7618  10 */\n      0x0a\n        /* \"contracts/Omnidex-incentives/incentives/base/DistributionManager.sol\":7616:7638  10**uint256(PRECISION) */\n      exp\n        /* \"contracts/Omnidex-incentives/incentives/base/DistributionManager.sol\":7560:7613  principalUserBalance.mul(reserveIndex.sub(userIndex)) */\n      tag_319\n        /* \"contracts/Omnidex-incentives/incentives/base/DistributionManager.sol\":7585:7612  reserveIndex.sub(userIndex) */\n      tag_320\n        /* \"contracts/Omnidex-incentives/incentives/base/DistributionManager.sol\":7602:7611  userIndex */\n      dup5\n        /* \"contracts/Omnidex-incentives/incentives/base/DistributionManager.sol\":7585:7597  reserveIndex */\n      dup7\n        /* \"contracts/Omnidex-incentives/incentives/base/DistributionManager.sol\":7585:7601  reserveIndex.sub */\n      tag_321\n      swap1\n        /* \"contracts/Omnidex-incentives/incentives/base/DistributionManager.sol\":7585:7612  reserveIndex.sub(userIndex) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_320:\n        /* \"contracts/Omnidex-incentives/incentives/base/DistributionManager.sol\":7560:7580  principalUserBalance */\n      dup7\n        /* \"contracts/Omnidex-incentives/incentives/base/DistributionManager.sol\":7560:7584  principalUserBalance.mul */\n      tag_322\n      swap1\n        /* \"contracts/Omnidex-incentives/incentives/base/DistributionManager.sol\":7560:7613  principalUserBalance.mul(reserveIndex.sub(userIndex)) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_319:\n        /* \"contracts/Omnidex-incentives/incentives/base/DistributionManager.sol\":7560:7638  principalUserBalance.mul(reserveIndex.sub(userIndex)) / 10**uint256(PRECISION) */\n      dup2\n      tag_323\n      jumpi\n      invalid\n    tag_323:\n      div\n        /* \"contracts/Omnidex-incentives/incentives/base/DistributionManager.sol\":7553:7638  return principalUserBalance.mul(reserveIndex.sub(userIndex)) / 10**uint256(PRECISION) */\n      swap1\n      pop\n        /* \"contracts/Omnidex-incentives/incentives/base/DistributionManager.sol\":7402:7644  function _getRewards(\r... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/Omnidex-incentives/incentives/base/DistributionManager.sol\":8107:8868  function _getAssetIndex(\r... */\n    tag_292:\n        /* \"contracts/Omnidex-incentives/incentives/base/DistributionManager.sol\":8279:8286  uint256 */\n      0x00\n        /* \"contracts/Omnidex-incentives/incentives/base/DistributionManager.sol\":8295:8318  uint256 distributionEnd */\n      dup1\n        /* \"contracts/Omnidex-incentives/incentives/base/DistributionManager.sol\":8321:8337  _distributionEnd */\n      sload(0x34)\n        /* \"contracts/Omnidex-incentives/incentives/base/DistributionManager.sol\":8295:8337  uint256 distributionEnd = _distributionEnd */\n      swap1\n      pop\n        /* \"contracts/Omnidex-incentives/incentives/base/DistributionManager.sol\":8377:8378  0 */\n      0x00\n        /* \"contracts/Omnidex-incentives/incentives/base/DistributionManager.sol\":8356:8373  emissionPerSecond */\n      dup6\n        /* \"contracts/Omnidex-incentives/incentives/base/DistributionManager.sol\":8356:8378  emissionPerSecond == 0 */\n      eq\n        /* \"contracts/Omnidex-incentives/incentives/base/DistributionManager.sol\":8356:8406  emissionPerSecond == 0 ||\r... */\n      dup1\n      tag_325\n      jumpi\n      pop\n        /* \"contracts/Omnidex-incentives/incentives/base/DistributionManager.sol\":8405:8406  0 */\n      0x00\n        /* \"contracts/Omnidex-incentives/incentives/base/DistributionManager.sol\":8389:8401  totalBalance */\n      dup4\n        /* \"contracts/Omnidex-incentives/incentives/base/DistributionManager.sol\":8389:8406  totalBalance == 0 */\n      eq\n        /* \"contracts/Omnidex-incentives/incentives/base/DistributionManager.sol\":8356:8406  emissionPerSecond == 0 ||\r... */\n    tag_325:\n        /* \"contracts/Omnidex-incentives/incentives/base/DistributionManager.sol\":8356:8455  emissionPerSecond == 0 ||\r... */\n      dup1\n      tag_326\n      jumpi\n      pop\n        /* \"contracts/Omnidex-incentives/incentives/base/DistributionManager.sol\":8440:8455  block.timestamp */\n      timestamp\n        /* \"contracts/Omnidex-incentives/incentives/base/DistributionManager.sol\":8417:8436  lastUpdateTimestamp */\n      dup5\n        /* \"contracts/Omnidex-incentives/incentives/base/DistributionManager.sol\":8417:8455  lastUpdateTimestamp == block.timestamp */\n      0xffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/Omnidex-incentives/incentives/base/DistributionManager.sol\":8356:8455  emissionPerSecond == 0 ||\r... */\n    tag_326:\n        /* \"contracts/Omnidex-incentives/incentives/base/DistributionManager.sol\":8356:8504  emissionPerSecond == 0 ||\r... */\n      dup1\n      tag_327\n      jumpi\n      pop\n        /* \"contracts/Omnidex-incentives/incentives/base/DistributionManager.sol\":8489:8504  distributionEnd */\n      dup1\n        /* \"contracts/Omnidex-incentives/incentives/base/DistributionManager.sol\":8466:8485  lastUpdateTimestamp */\n      dup5\n        /* \"contracts/Omnidex-incentives/incentives/base/DistributionManager.sol\":8466:8504  lastUpdateTimestamp >= distributionEnd */\n      0xffffffffffffffffffffffffffffffff\n      and\n      lt\n      iszero\n        /* \"contracts/Omnidex-incentives/incentives/base/DistributionManager.sol\":8356:8504  emissionPerSecond == 0 ||\r... */\n    tag_327:\n        /* \"contracts/Omnidex-incentives/incentives/base/DistributionManager.sol\":8344:8548  if (\r... */\n      iszero\n      tag_328\n      jumpi\n        /* \"contracts/Omnidex-incentives/incentives/base/DistributionManager.sol\":8528:8540  currentIndex */\n      dup6\n        /* \"contracts/Omnidex-incentives/incentives/base/DistributionManager.sol\":8521:8540  return currentIndex */\n      swap2\n      pop\n      pop\n      jump(tag_324)\n        /* \"contracts/Omnidex-incentives/incentives/base/DistributionManager.sol\":8344:8548  if (\r... */\n    tag_328:\n        /* \"contracts/Omnidex-incentives/incentives/base/DistributionManager.sol\":8556:8580  uint256 currentTimestamp */\n      0x00\n        /* \"contracts/Omnidex-incentives/incentives/base/DistributionManager.sol\":8608:8623  distributionEnd */\n      dup2\n        /* \"contracts/Omnidex-incentives/incentives/base/DistributionManager.sol\":8590:8605  block.timestamp */\n      timestamp\n        /* \"contracts/Omnidex-incentives/incentives/base/DistributionManager.sol\":8590:8623  block.timestamp > distributionEnd */\n      gt\n        /* \"contracts/Omnidex-incentives/incentives/base/DistributionManager.sol\":8590:8659  block.timestamp > distributionEnd ? distributionEnd : block.timestamp */\n      tag_329\n      jumpi\n        /* \"contracts/Omnidex-incentives/incentives/base/DistributionManager.sol\":8644:8659  block.timestamp */\n      timestamp\n        /* \"contracts/Omnidex-incentives/incentives/base/DistributionManager.sol\":8590:8659  block.timestamp > distributionEnd ? distributionEnd : block.timestamp */\n      jump(tag_330)\n    tag_329:\n        /* \"contracts/Omnidex-incentives/incentives/base/DistributionManager.sol\":8626:8641  distributionEnd */\n      dup2\n        /* \"contracts/Omnidex-incentives/incentives/base/DistributionManager.sol\":8590:8659  block.timestamp > distributionEnd ? distributionEnd : block.timestamp */\n    tag_330:\n        /* \"contracts/Omnidex-incentives/incentives/base/DistributionManager.sol\":8556:8659  uint256 currentTimestamp =\r... */\n      swap1\n      pop\n        /* \"contracts/Omnidex-incentives/incentives/base/DistributionManager.sol\":8666:8683  uint256 timeDelta */\n      0x00\n        /* \"contracts/Omnidex-incentives/incentives/base/DistributionManager.sol\":8686:8727  currentTimestamp.sub(lastUpdateTimestamp) */\n      tag_331\n        /* \"contracts/Omnidex-incentives/incentives/base/DistributionManager.sol\":8707:8726  lastUpdateTimestamp */\n      dup7\n        /* \"contracts/Omnidex-incentives/incentives/base/DistributionManager.sol\":8686:8727  currentTimestamp.sub(lastUpdateTimestamp) */\n      0xffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Omnidex-incentives/incentives/base/DistributionManager.sol\":8686:8702  currentTimestamp */\n      dup4\n        /* \"contracts/Omnidex-incentives/incentives/base/DistributionManager.sol\":8686:8706  currentTimestamp.sub */\n      tag_321\n      swap1\n        /* \"contracts/Omnidex-incentives/incentives/base/DistributionManager.sol\":8686:8727  currentTimestamp.sub(lastUpdateTimestamp) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_331:\n        /* \"contracts/Omnidex-incentives/incentives/base/DistributionManager.sol\":8666:8727  uint256 timeDelta = currentTimestamp.sub(lastUpdateTimestamp) */\n      swap1\n      pop\n        /* \"contracts/Omnidex-incentives/incentives/base/DistributionManager.sol\":8748:8862  emissionPerSecond.mul(timeDelta).mul(10**uint256(PRECISION)).div(totalBalance).add(\r... */\n      tag_332\n        /* \"contracts/Omnidex-incentives/incentives/base/DistributionManager.sol\":8841:8853  currentIndex */\n      dup9\n        /* \"contracts/Omnidex-incentives/incentives/base/DistributionManager.sol\":8748:8826  emissionPerSecond.mul(timeDelta).mul(10**uint256(PRECISION)).div(totalBalance) */\n      tag_333\n        /* \"contracts/Omnidex-incentives/incentives/base/DistributionManager.sol\":8813:8825  totalBalance */\n      dup8\n        /* \"contracts/Omnidex-incentives/incentives/base/DistributionManager.sol\":8748:8808  emissionPerSecond.mul(timeDelta).mul(10**uint256(PRECISION)) */\n      tag_334\n        /* \"contracts/Omnidex-incentives/incentives/base/DistributionManager.sol\":783:785  18 */\n      0x12\n        /* \"contracts/Omnidex-incentives/incentives/base/DistributionManager.sol\":8789:8807  uint256(PRECISION) */\n      0xff\n      and\n        /* \"contracts/Omnidex-incentives/incentives/base/DistributionManager.sol\":8785:8787  10 */\n      0x0a\n        /* \"contracts/Omnidex-incentives/incentives/base/DistributionManager.sol\":8785:8807  10**uint256(PRECISION) */\n      exp\n        /* \"contracts/Omnidex-incentives/incentives/base/DistributionManager.sol\":8748:8780  emissionPerSecond.mul(timeDelta) */\n      tag_335\n        /* \"contracts/Omnidex-incentives/incentives/base/DistributionManager.sol\":8770:8779  timeDelta */\n      dup8\n        /* \"contracts/Omnidex-incentives/incentives/base/DistributionManager.sol\":8748:8765  emissionPerSecond */\n      dup15\n        /* \"contracts/Omnidex-incentives/incentives/base/DistributionManager.sol\":8748:8769  emissionPerSecond.mul */\n      tag_322\n      swap1\n        /* \"contracts/Omnidex-incentives/incentives/base/DistributionManager.sol\":8748:8780  emissionPerSecond.mul(timeDelta) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_335:\n        /* \"contracts/Omnidex-incentives/incentives/base/DistributionManager.sol\":8748:8784  emissionPerSecond.mul(timeDelta).mul */\n      tag_322\n      swap1\n        /* \"contracts/Omnidex-incentives/incentives/base/DistributionManager.sol\":8748:8808  emissionPerSecond.mul(timeDelta).mul(10**uint256(PRECISION)) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_334:\n        /* \"contracts/Omnidex-incentives/incentives/base/DistributionManager.sol\":8748:8812  emissionPerSecond.mul(timeDelta).mul(10**uint256(PRECISION)).div */\n      tag_336\n      swap1\n        /* \"contracts/Omnidex-incentives/incentives/base/DistributionManager.sol\":8748:8826  emissionPerSecond.mul(timeDelta).mul(10**uint256(PRECISION)).div(totalBalance) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_333:\n        /* \"contracts/Omnidex-incentives/incentives/base/DistributionManager.sol\":8748:8830  emissionPerSecond.mul(timeDelta).mul(10**uint256(PRECISION)).div(totalBalance).add */\n      tag_130\n      swap1\n        /* \"contracts/Omnidex-incentives/incentives/base/DistributionManager.sol\":8748:8862  emissionPerSecond.mul(timeDelta).mul(10**uint256(PRECISION)).div(totalBalance).add(\r... */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_332:\n        /* \"contracts/Omnidex-incentives/incentives/base/DistributionManager.sol\":8734:8862  return\r... */\n      swap4\n      pop\n      pop\n      pop\n      pop\n        /* \"contracts/Omnidex-incentives/incentives/base/DistributionManager.sol\":8107:8868  function _getAssetIndex(\r... */\n    tag_324:\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@aave/aave-stake/contracts/lib/SafeERC20.sol\":978:1194  function safeTransferFrom(... */\n    tag_308:\n        /* \"@aave/aave-stake/contracts/lib/SafeERC20.sol\":1094:1189  callOptionalReturn(token, abi.encodeWithSelector(token.transferFrom.selector, from, to, value)) */\n      tag_338\n        /* \"@aave/aave-stake/contracts/lib/SafeERC20.sol\":1113:1118  token */\n      dup5\n        /* \"@aave/aave-stake/contracts/lib/SafeERC20.sol\":1143:1170  token.transferFrom.selector */\n      shl(0xe0, 0x23b872dd)\n        /* \"@aave/aave-stake/contracts/lib/SafeERC20.sol\":1172:1176  from */\n      dup6\n        /* \"@aave/aave-stake/contracts/lib/SafeERC20.sol\":1178:1180  to */\n      dup6\n        /* \"@aave/aave-stake/contracts/lib/SafeERC20.sol\":1182:1187  value */\n      dup6\n        /* \"@aave/aave-stake/contracts/lib/SafeERC20.sol\":1120:1188  abi.encodeWithSelector(token.transferFrom.selector, from, to, value) */\n      add(0x24, mload(0x40))\n      dup1\n      dup5\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap4\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n      swap1\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      0x20\n      dup3\n      add\n      dup1\n      mload\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n      dup4\n      dup2\n      dup4\n      and\n      or\n      dup4\n      mstore\n      pop\n      pop\n      pop\n      pop\n        /* \"@aave/aave-stake/contracts/lib/SafeERC20.sol\":1094:1112  callOptionalReturn */\n      tag_339\n        /* \"@aave/aave-stake/contracts/lib/SafeERC20.sol\":1094:1189  callOptionalReturn(token, abi.encodeWithSelector(token.transferFrom.selector, from, to, value)) */\n      jump\t// in\n    tag_338:\n        /* \"@aave/aave-stake/contracts/lib/SafeERC20.sol\":978:1194  function safeTransferFrom(... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/Omnidex-incentives/lib/SafeMath.sol\":743:856  function sub(uint256 x, uint256 y) internal pure returns (uint256 z) {\r... */\n    tag_321:\n        /* \"contracts/Omnidex-incentives/lib/SafeMath.sol\":801:810  uint256 z */\n      0x00\n        /* \"contracts/Omnidex-incentives/lib/SafeMath.sol\":846:847  x */\n      dup3\n        /* \"contracts/Omnidex-incentives/lib/SafeMath.sol\":840:841  y */\n      dup3\n        /* \"contracts/Omnidex-incentives/lib/SafeMath.sol\":836:837  x */\n      dup5\n        /* \"contracts/Omnidex-incentives/lib/SafeMath.sol\":836:841  x - y */\n      sub\n        /* \"contracts/Omnidex-incentives/lib/SafeMath.sol\":832:841  z = x - y */\n      swap2\n      pop\n      dup2\n        /* \"contracts/Omnidex-incentives/lib/SafeMath.sol\":831:847  (z = x - y) <= x */\n      gt\n      iszero\n        /* \"contracts/Omnidex-incentives/lib/SafeMath.sol\":823:848  require((z = x - y) <= x) */\n      tag_341\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_341:\n        /* \"contracts/Omnidex-incentives/lib/SafeMath.sol\":743:856  function sub(uint256 x, uint256 y) internal pure returns (uint256 z) {\r... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/Omnidex-incentives/lib/SafeMath.sol\":1027:1154  function mul(uint256 x, uint256 y) internal pure returns (uint256 z) {\r... */\n    tag_322:\n        /* \"contracts/Omnidex-incentives/lib/SafeMath.sol\":1085:1094  uint256 z */\n      0x00\n        /* \"contracts/Omnidex-incentives/lib/SafeMath.sol\":1120:1121  0 */\n      dup1\n        /* \"contracts/Omnidex-incentives/lib/SafeMath.sol\":1115:1116  x */\n      dup4\n        /* \"contracts/Omnidex-incentives/lib/SafeMath.sol\":1115:1121  x == 0 */\n      eq\n        /* \"contracts/Omnidex-incentives/lib/SafeMath.sol\":1115:1145  x == 0 || (z = x * y) / x == y */\n      dup1\n      tag_343\n      jumpi\n      pop\n        /* \"contracts/Omnidex-incentives/lib/SafeMath.sol\":1144:1145  y */\n      dup2\n        /* \"contracts/Omnidex-incentives/lib/SafeMath.sol\":1139:1140  x */\n      dup4\n        /* \"contracts/Omnidex-incentives/lib/SafeMath.sol\":1134:1135  y */\n      dup4\n        /* \"contracts/Omnidex-incentives/lib/SafeMath.sol\":1130:1131  x */\n      dup6\n        /* \"contracts/Omnidex-incentives/lib/SafeMath.sol\":1130:1135  x * y */\n      mul\n        /* \"contracts/Omnidex-incentives/lib/SafeMath.sol\":1126:1135  z = x * y */\n      swap3\n      pop\n      dup3\n        /* \"contracts/Omnidex-incentives/lib/SafeMath.sol\":1125:1140  (z = x * y) / x */\n      dup2\n      tag_344\n      jumpi\n      invalid\n    tag_344:\n      div\n        /* \"contracts/Omnidex-incentives/lib/SafeMath.sol\":1125:1145  (z = x * y) / x == y */\n      eq\n        /* \"contracts/Omnidex-incentives/lib/SafeMath.sol\":1115:1145  x == 0 || (z = x * y) / x == y */\n    tag_343:\n        /* \"contracts/Omnidex-incentives/lib/SafeMath.sol\":1107:1146  require(x == 0 || (z = x * y) / x == y) */\n      tag_345\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_345:\n        /* \"contracts/Omnidex-incentives/lib/SafeMath.sol\":1027:1154  function mul(uint256 x, uint256 y) internal pure returns (uint256 z) {\r... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/Omnidex-incentives/lib/SafeMath.sol\":1162:1336  function div(uint256 x, uint256 y) internal pure returns(uint256) {\r... */\n    tag_336:\n        /* \"contracts/Omnidex-incentives/lib/SafeMath.sol\":1219:1226  uint256 */\n      0x00\n        /* \"contracts/Omnidex-incentives/lib/SafeMath.sol\":1327:1328  y */\n      dup2\n        /* \"contracts/Omnidex-incentives/lib/SafeMath.sol\":1323:1324  x */\n      dup4\n        /* \"contracts/Omnidex-incentives/lib/SafeMath.sol\":1323:1328  x / y */\n      dup2\n      tag_347\n      jumpi\n      invalid\n    tag_347:\n      div\n        /* \"contracts/Omnidex-incentives/lib/SafeMath.sol\":1316:1328  return x / y */\n      swap1\n      pop\n        /* \"contracts/Omnidex-incentives/lib/SafeMath.sol\":1162:1336  function div(uint256 x, uint256 y) internal pure returns(uint256) {\r... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@aave/aave-stake/contracts/lib/SafeERC20.sol\":1547:2102  function callOptionalReturn(IERC20 token, bytes memory data) private {... */\n    tag_339:\n        /* \"@aave/aave-stake/contracts/lib/SafeERC20.sol\":1630:1657  address(token).isContract() */\n      tag_349\n        /* \"@aave/aave-stake/contracts/lib/SafeERC20.sol\":1638:1643  token */\n      dup3\n        /* \"@aave/aave-stake/contracts/lib/SafeERC20.sol\":1630:1655  address(token).isContract */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      tag_350\n        /* \"@aave/aave-stake/contracts/lib/SafeERC20.sol\":1630:1657  address(token).isContract() */\n      jump\t// in\n    tag_349:\n        /* \"@aave/aave-stake/contracts/lib/SafeERC20.sol\":1622:1693  require(address(token).isContract(), 'SafeERC20: call to non-contract') */\n      tag_351\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x1f\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x5361666545524332303a2063616c6c20746f206e6f6e2d636f6e747261637400\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_351:\n        /* \"@aave/aave-stake/contracts/lib/SafeERC20.sol\":1756:1768  bool success */\n      0x00\n        /* \"@aave/aave-stake/contracts/lib/SafeERC20.sol\":1770:1793  bytes memory returndata */\n      0x60\n        /* \"@aave/aave-stake/contracts/lib/SafeERC20.sol\":1805:1810  token */\n      dup4\n        /* \"@aave/aave-stake/contracts/lib/SafeERC20.sol\":1797:1816  address(token).call */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@aave/aave-stake/contracts/lib/SafeERC20.sol\":1817:1821  data */\n      dup4\n        /* \"@aave/aave-stake/contracts/lib/SafeERC20.sol\":1797:1822  address(token).call(data) */\n      mload(0x40)\n      dup1\n      dup3\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      dup1\n      dup4\n      dup4\n    tag_352:\n      0x20\n      dup4\n      lt\n      tag_354\n      jumpi\n      dup1\n      mload\n      dup3\n      mstore\n      0x20\n      dup3\n      add\n      swap2\n      pop\n      0x20\n      dup2\n      add\n      swap1\n      pop\n      0x20\n      dup4\n      sub\n      swap3\n      pop\n      jump(tag_352)\n    tag_354:\n      0x01\n      dup4\n      0x20\n      sub\n      0x0100\n      exp\n      sub\n      dup1\n      not\n      dup3\n      mload\n      and\n      dup2\n      dup5\n      mload\n      and\n      dup1\n      dup3\n      or\n      dup6\n      mstore\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n      add\n      swap2\n      pop\n      pop\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup7\n      gas\n      call\n      swap2\n      pop\n      pop\n      returndatasize\n      dup1\n      0x00\n      dup2\n      eq\n      tag_357\n      jumpi\n      mload(0x40)\n      swap2\n      pop\n      and(add(returndatasize, 0x3f), not(0x1f))\n      dup3\n      add\n      0x40\n      mstore\n      returndatasize\n      dup3\n      mstore\n      returndatasize\n      0x00\n      0x20\n      dup5\n      add\n      returndatacopy\n      jump(tag_356)\n    tag_357:\n      0x60\n      swap2\n      pop\n    tag_356:\n      pop\n        /* \"@aave/aave-stake/contracts/lib/SafeERC20.sol\":1755:1822  (bool success, bytes memory returndata) = address(token).call(data) */\n      swap2\n      pop\n      swap2\n      pop\n        /* \"@aave/aave-stake/contracts/lib/SafeERC20.sol\":1836:1843  success */\n      dup2\n        /* \"@aave/aave-stake/contracts/lib/SafeERC20.sol\":1828:1880  require(success, 'SafeERC20: low-level call failed') */\n      tag_358\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x20\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_358:\n        /* \"@aave/aave-stake/contracts/lib/SafeERC20.sol\":1911:1912  0 */\n      0x00\n        /* \"@aave/aave-stake/contracts/lib/SafeERC20.sol\":1891:1901  returndata */\n      dup2\n        /* \"@aave/aave-stake/contracts/lib/SafeERC20.sol\":1891:1908  returndata.length */\n      mload\n        /* \"@aave/aave-stake/contracts/lib/SafeERC20.sol\":1891:1912  returndata.length > 0 */\n      gt\n        /* \"@aave/aave-stake/contracts/lib/SafeERC20.sol\":1887:2098  if (returndata.length > 0) {... */\n      iszero\n      tag_359\n      jumpi\n        /* \"@aave/aave-stake/contracts/lib/SafeERC20.sol\":2025:2035  returndata */\n      dup1\n        /* \"@aave/aave-stake/contracts/lib/SafeERC20.sol\":2014:2044  abi.decode(returndata, (bool)) */\n      dup1\n      0x20\n      add\n      swap1\n      mload\n      0x20\n      dup2\n      lt\n      iszero\n      tag_360\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_360:\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n        /* \"@aave/aave-stake/contracts/lib/SafeERC20.sol\":2006:2091  require(abi.decode(returndata, (bool)), 'SafeERC20: ERC20 operation did not succeed') */\n      tag_361\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x2a\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd\n      0x2a\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_361:\n        /* \"@aave/aave-stake/contracts/lib/SafeERC20.sol\":1887:2098  if (returndata.length > 0) {... */\n    tag_359:\n        /* \"@aave/aave-stake/contracts/lib/SafeERC20.sol\":1547:2102  function callOptionalReturn(IERC20 token, bytes memory data) private {... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@aave/aave-stake/contracts/lib/Address.sol\":743:1329  function isContract(address account) internal view returns (bool) {... */\n    tag_350:\n        /* \"@aave/aave-stake/contracts/lib/Address.sol\":803:807  bool */\n      0x00\n        /* \"@aave/aave-stake/contracts/lib/Address.sol\":1045:1061  bytes32 codehash */\n      dup1\n        /* \"@aave/aave-stake/contracts/lib/Address.sol\":1067:1086  bytes32 accountHash */\n      0x00\n        /* \"@aave/aave-stake/contracts/lib/Address.sol\":1089:1155  0xc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470 */\n      0xc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470\n        /* \"@aave/aave-stake/contracts/lib/Address.sol\":1067:1155  bytes32 accountHash = 0xc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470 */\n      0x00\n      shl\n      swap1\n      pop\n        /* \"@aave/aave-stake/contracts/lib/Address.sol\":1254:1261  account */\n      dup4\n        /* \"@aave/aave-stake/contracts/lib/Address.sol\":1242:1262  extcodehash(account) */\n      extcodehash\n        /* \"@aave/aave-stake/contracts/lib/Address.sol\":1230:1262  codehash := extcodehash(account) */\n      swap2\n      pop\n        /* \"@aave/aave-stake/contracts/lib/Address.sol\":1293:1304  accountHash */\n      dup1\n        /* \"@aave/aave-stake/contracts/lib/Address.sol\":1281:1289  codehash */\n      dup3\n        /* \"@aave/aave-stake/contracts/lib/Address.sol\":1281:1304  codehash != accountHash */\n      eq\n      iszero\n        /* \"@aave/aave-stake/contracts/lib/Address.sol\":1281:1323  codehash != accountHash && codehash != 0x0 */\n      dup1\n      iszero\n      tag_363\n      jumpi\n      pop\n        /* \"@aave/aave-stake/contracts/lib/Address.sol\":1320:1323  0x0 */\n      0x00\n        /* \"@aave/aave-stake/contracts/lib/Address.sol\":1308:1323  codehash != 0x0 */\n      dup1\n      shl\n        /* \"@aave/aave-stake/contracts/lib/Address.sol\":1308:1316  codehash */\n      dup3\n        /* \"@aave/aave-stake/contracts/lib/Address.sol\":1308:1323  codehash != 0x0 */\n      eq\n      iszero\n        /* \"@aave/aave-stake/contracts/lib/Address.sol\":1281:1323  codehash != accountHash && codehash != 0x0 */\n    tag_363:\n        /* \"@aave/aave-stake/contracts/lib/Address.sol\":1273:1324  return (codehash != accountHash && codehash != 0x0) */\n      swap3\n      pop\n      pop\n      pop\n        /* \"@aave/aave-stake/contracts/lib/Address.sol\":743:1329  function isContract(address account) internal view returns (bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n    tag_164:\n      mload(0x40)\n      dup1\n      0x60\n      add\n      0x40\n      mstore\n      dup1\n      and(0xffffffffffffffffffffffffff, 0x00)\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      dup2\n      mstore\n      0x20\n      add\n      and(0xffffffffffffffffffffffffffffffffffffffff, 0x00)\n      dup2\n      mstore\n      pop\n      swap1\n      jump\t// out\n    tag_193:\n      mload(0x40)\n      dup1\n      0x60\n      add\n      0x40\n      mstore\n      dup1\n      and(0xffffffffffffffffffffffffffffffffffffffff, 0x00)\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      dup2\n      mstore\n      pop\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":7:146   */\n    tag_365:\n      0x00\n        /* \"#utility.yul\":91:97   */\n      dup2\n        /* \"#utility.yul\":78:98   */\n      calldataload\n        /* \"#utility.yul\":69:98   */\n      swap1\n      pop\n        /* \"#utility.yul\":107:140   */\n      tag_367\n        /* \"#utility.yul\":134:139   */\n      dup2\n        /* \"#utility.yul\":107:140   */\n      tag_368\n      jump\t// in\n    tag_367:\n        /* \"#utility.yul\":59:146   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":169:536   */\n    tag_369:\n      0x00\n      dup1\n        /* \"#utility.yul\":302:305   */\n      dup4\n        /* \"#utility.yul\":295:299   */\n      0x1f\n        /* \"#utility.yul\":287:293   */\n      dup5\n        /* \"#utility.yul\":283:300   */\n      add\n        /* \"#utility.yul\":279:306   */\n      slt\n        /* \"#utility.yul\":269:271   */\n      tag_371\n      jumpi\n        /* \"#utility.yul\":320:321   */\n      0x00\n        /* \"#utility.yul\":317:318   */\n      dup1\n        /* \"#utility.yul\":310:322   */\n      revert\n        /* \"#utility.yul\":269:271   */\n    tag_371:\n        /* \"#utility.yul\":356:362   */\n      dup3\n        /* \"#utility.yul\":343:363   */\n      calldataload\n        /* \"#utility.yul\":333:363   */\n      swap1\n      pop\n        /* \"#utility.yul\":386:404   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":378:384   */\n      dup2\n        /* \"#utility.yul\":375:405   */\n      gt\n        /* \"#utility.yul\":372:374   */\n      iszero\n      tag_372\n      jumpi\n        /* \"#utility.yul\":418:419   */\n      0x00\n        /* \"#utility.yul\":415:416   */\n      dup1\n        /* \"#utility.yul\":408:420   */\n      revert\n        /* \"#utility.yul\":372:374   */\n    tag_372:\n        /* \"#utility.yul\":455:459   */\n      0x20\n        /* \"#utility.yul\":447:453   */\n      dup4\n        /* \"#utility.yul\":443:460   */\n      add\n        /* \"#utility.yul\":431:460   */\n      swap2\n      pop\n        /* \"#utility.yul\":509:512   */\n      dup4\n        /* \"#utility.yul\":501:505   */\n      0x20\n        /* \"#utility.yul\":493:499   */\n      dup3\n        /* \"#utility.yul\":489:506   */\n      mul\n        /* \"#utility.yul\":479:487   */\n      dup4\n        /* \"#utility.yul\":475:507   */\n      add\n        /* \"#utility.yul\":472:513   */\n      gt\n        /* \"#utility.yul\":469:471   */\n      iszero\n      tag_373\n      jumpi\n        /* \"#utility.yul\":526:527   */\n      0x00\n        /* \"#utility.yul\":523:524   */\n      dup1\n        /* \"#utility.yul\":516:528   */\n      revert\n        /* \"#utility.yul\":469:471   */\n    tag_373:\n        /* \"#utility.yul\":259:536   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":559:926   */\n    tag_374:\n      0x00\n      dup1\n        /* \"#utility.yul\":692:695   */\n      dup4\n        /* \"#utility.yul\":685:689   */\n      0x1f\n        /* \"#utility.yul\":677:683   */\n      dup5\n        /* \"#utility.yul\":673:690   */\n      add\n        /* \"#utility.yul\":669:696   */\n      slt\n        /* \"#utility.yul\":659:661   */\n      tag_376\n      jumpi\n        /* \"#utility.yul\":710:711   */\n      0x00\n        /* \"#utility.yul\":707:708   */\n      dup1\n        /* \"#utility.yul\":700:712   */\n      revert\n        /* \"#utility.yul\":659:661   */\n    tag_376:\n        /* \"#utility.yul\":746:752   */\n      dup3\n        /* \"#utility.yul\":733:753   */\n      calldataload\n        /* \"#utility.yul\":723:753   */\n      swap1\n      pop\n        /* \"#utility.yul\":776:794   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":768:774   */\n      dup2\n        /* \"#utility.yul\":765:795   */\n      gt\n        /* \"#utility.yul\":762:764   */\n      iszero\n      tag_377\n      jumpi\n        /* \"#utility.yul\":808:809   */\n      0x00\n        /* \"#utility.yul\":805:806   */\n      dup1\n        /* \"#utility.yul\":798:810   */\n      revert\n        /* \"#utility.yul\":762:764   */\n    tag_377:\n        /* \"#utility.yul\":845:849   */\n      0x20\n        /* \"#utility.yul\":837:843   */\n      dup4\n        /* \"#utility.yul\":833:850   */\n      add\n        /* \"#utility.yul\":821:850   */\n      swap2\n      pop\n        /* \"#utility.yul\":899:902   */\n      dup4\n        /* \"#utility.yul\":891:895   */\n      0x20\n        /* \"#utility.yul\":883:889   */\n      dup3\n        /* \"#utility.yul\":879:896   */\n      mul\n        /* \"#utility.yul\":869:877   */\n      dup4\n        /* \"#utility.yul\":865:897   */\n      add\n        /* \"#utility.yul\":862:903   */\n      gt\n        /* \"#utility.yul\":859:861   */\n      iszero\n      tag_378\n      jumpi\n        /* \"#utility.yul\":916:917   */\n      0x00\n        /* \"#utility.yul\":913:914   */\n      dup1\n        /* \"#utility.yul\":906:918   */\n      revert\n        /* \"#utility.yul\":859:861   */\n    tag_378:\n        /* \"#utility.yul\":649:926   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":932:1071   */\n    tag_379:\n      0x00\n        /* \"#utility.yul\":1016:1022   */\n      dup2\n        /* \"#utility.yul\":1003:1023   */\n      calldataload\n        /* \"#utility.yul\":994:1023   */\n      swap1\n      pop\n        /* \"#utility.yul\":1032:1065   */\n      tag_381\n        /* \"#utility.yul\":1059:1064   */\n      dup2\n        /* \"#utility.yul\":1032:1065   */\n      tag_382\n      jump\t// in\n    tag_381:\n        /* \"#utility.yul\":984:1071   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1077:1220   */\n    tag_383:\n      0x00\n        /* \"#utility.yul\":1165:1171   */\n      dup2\n        /* \"#utility.yul\":1159:1172   */\n      mload\n        /* \"#utility.yul\":1150:1172   */\n      swap1\n      pop\n        /* \"#utility.yul\":1181:1214   */\n      tag_385\n        /* \"#utility.yul\":1208:1213   */\n      dup2\n        /* \"#utility.yul\":1181:1214   */\n      tag_382\n      jump\t// in\n    tag_385:\n        /* \"#utility.yul\":1140:1220   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1226:1486   */\n    tag_30:\n      0x00\n        /* \"#utility.yul\":1334:1336   */\n      0x20\n        /* \"#utility.yul\":1322:1331   */\n      dup3\n        /* \"#utility.yul\":1313:1320   */\n      dup5\n        /* \"#utility.yul\":1309:1332   */\n      sub\n        /* \"#utility.yul\":1305:1337   */\n      slt\n        /* \"#utility.yul\":1302:1304   */\n      iszero\n      tag_387\n      jumpi\n        /* \"#utility.yul\":1350:1351   */\n      0x00\n        /* \"#utility.yul\":1347:1348   */\n      dup1\n        /* \"#utility.yul\":1340:1352   */\n      revert\n        /* \"#utility.yul\":1302:1304   */\n    tag_387:\n        /* \"#utility.yul\":1392:1393   */\n      0x00\n        /* \"#utility.yul\":1416:1469   */\n      tag_388\n        /* \"#utility.yul\":1461:1468   */\n      dup5\n        /* \"#utility.yul\":1452:1458   */\n      dup3\n        /* \"#utility.yul\":1441:1450   */\n      dup6\n        /* \"#utility.yul\":1437:1459   */\n      add\n        /* \"#utility.yul\":1416:1469   */\n      tag_365\n      jump\t// in\n    tag_388:\n        /* \"#utility.yul\":1406:1469   */\n      swap2\n      pop\n        /* \"#utility.yul\":1364:1479   */\n      pop\n        /* \"#utility.yul\":1292:1486   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1492:1895   */\n    tag_50:\n      0x00\n      dup1\n        /* \"#utility.yul\":1617:1619   */\n      0x40\n        /* \"#utility.yul\":1605:1614   */\n      dup4\n        /* \"#utility.yul\":1596:1603   */\n      dup6\n        /* \"#utility.yul\":1592:1615   */\n      sub\n        /* \"#utility.yul\":1588:1620   */\n      slt\n        /* \"#utility.yul\":1585:1587   */\n      iszero\n      tag_390\n      jumpi\n        /* \"#utility.yul\":1633:1634   */\n      0x00\n        /* \"#utility.yul\":1630:1631   */\n      dup1\n        /* \"#utility.yul\":1623:1635   */\n      revert\n        /* \"#utility.yul\":1585:1587   */\n    tag_390:\n        /* \"#utility.yul\":1675:1676   */\n      0x00\n        /* \"#utility.yul\":1699:1752   */\n      tag_391\n        /* \"#utility.yul\":1744:1751   */\n      dup6\n        /* \"#utility.yul\":1735:1741   */\n      dup3\n        /* \"#utility.yul\":1724:1733   */\n      dup7\n        /* \"#utility.yul\":1720:1742   */\n      add\n        /* \"#utility.yul\":1699:1752   */\n      tag_365\n      jump\t// in\n    tag_391:\n        /* \"#utility.yul\":1689:1752   */\n      swap3\n      pop\n        /* \"#utility.yul\":1647:1762   */\n      pop\n        /* \"#utility.yul\":1800:1802   */\n      0x20\n        /* \"#utility.yul\":1825:1878   */\n      tag_392\n        /* \"#utility.yul\":1870:1877   */\n      dup6\n        /* \"#utility.yul\":1861:1867   */\n      dup3\n        /* \"#utility.yul\":1850:1859   */\n      dup7\n        /* \"#utility.yul\":1846:1868   */\n      add\n        /* \"#utility.yul\":1825:1878   */\n      tag_365\n      jump\t// in\n    tag_392:\n        /* \"#utility.yul\":1815:1878   */\n      swap2\n      pop\n        /* \"#utility.yul\":1772:1888   */\n      pop\n        /* \"#utility.yul\":1575:1895   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1901:2447   */\n    tag_46:\n      0x00\n      dup1\n      0x00\n        /* \"#utility.yul\":2043:2045   */\n      0x60\n        /* \"#utility.yul\":2031:2040   */\n      dup5\n        /* \"#utility.yul\":2022:2029   */\n      dup7\n        /* \"#utility.yul\":2018:2041   */\n      sub\n        /* \"#utility.yul\":2014:2046   */\n      slt\n        /* \"#utility.yul\":2011:2013   */\n      iszero\n      tag_394\n      jumpi\n        /* \"#utility.yul\":2059:2060   */\n      0x00\n        /* \"#utility.yul\":2056:2057   */\n      dup1\n        /* \"#utility.yul\":2049:2061   */\n      revert\n        /* \"#utility.yul\":2011:2013   */\n    tag_394:\n        /* \"#utility.yul\":2101:2102   */\n      0x00\n        /* \"#utility.yul\":2125:2178   */\n      tag_395\n        /* \"#utility.yul\":2170:2177   */\n      dup7\n        /* \"#utility.yul\":2161:2167   */\n      dup3\n        /* \"#utility.yul\":2150:2159   */\n      dup8\n        /* \"#utility.yul\":2146:2168   */\n      add\n        /* \"#utility.yul\":2125:2178   */\n      tag_365\n      jump\t// in\n    tag_395:\n        /* \"#utility.yul\":2115:2178   */\n      swap4\n      pop\n        /* \"#utility.yul\":2073:2188   */\n      pop\n        /* \"#utility.yul\":2226:2228   */\n      0x20\n        /* \"#utility.yul\":2251:2304   */\n      tag_396\n        /* \"#utility.yul\":2296:2303   */\n      dup7\n        /* \"#utility.yul\":2287:2293   */\n      dup3\n        /* \"#utility.yul\":2276:2285   */\n      dup8\n        /* \"#utility.yul\":2272:2294   */\n      add\n        /* \"#utility.yul\":2251:2304   */\n      tag_379\n      jump\t// in\n    tag_396:\n        /* \"#utility.yul\":2241:2304   */\n      swap3\n      pop\n        /* \"#utility.yul\":2198:2314   */\n      pop\n        /* \"#utility.yul\":2352:2354   */\n      0x40\n        /* \"#utility.yul\":2377:2430   */\n      tag_397\n        /* \"#utility.yul\":2422:2429   */\n      dup7\n        /* \"#utility.yul\":2413:2419   */\n      dup3\n        /* \"#utility.yul\":2402:2411   */\n      dup8\n        /* \"#utility.yul\":2398:2420   */\n      add\n        /* \"#utility.yul\":2377:2430   */\n      tag_379\n      jump\t// in\n    tag_397:\n        /* \"#utility.yul\":2367:2430   */\n      swap2\n      pop\n        /* \"#utility.yul\":2324:2440   */\n      pop\n        /* \"#utility.yul\":2001:2447   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":2453:3019   */\n    tag_78:\n      0x00\n      dup1\n      0x00\n        /* \"#utility.yul\":2613:2615   */\n      0x40\n        /* \"#utility.yul\":2601:2610   */\n      dup5\n        /* \"#utility.yul\":2592:2599   */\n      dup7\n        /* \"#utility.yul\":2588:2611   */\n      sub\n        /* \"#utility.yul\":2584:2616   */\n      slt\n        /* \"#utility.yul\":2581:2583   */\n      iszero\n      tag_399\n      jumpi\n        /* \"#utility.yul\":2629:2630   */\n      0x00\n        /* \"#utility.yul\":2626:2627   */\n      dup1\n        /* \"#utility.yul\":2619:2631   */\n      revert\n        /* \"#utility.yul\":2581:2583   */\n    tag_399:\n        /* \"#utility.yul\":2699:2700   */\n      0x00\n        /* \"#utility.yul\":2688:2697   */\n      dup5\n        /* \"#utility.yul\":2684:2701   */\n      add\n        /* \"#utility.yul\":2671:2702   */\n      calldataload\n        /* \"#utility.yul\":2729:2747   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":2721:2727   */\n      dup2\n        /* \"#utility.yul\":2718:2748   */\n      gt\n        /* \"#utility.yul\":2715:2717   */\n      iszero\n      tag_400\n      jumpi\n        /* \"#utility.yul\":2761:2762   */\n      0x00\n        /* \"#utility.yul\":2758:2759   */\n      dup1\n        /* \"#utility.yul\":2751:2763   */\n      revert\n        /* \"#utility.yul\":2715:2717   */\n    tag_400:\n        /* \"#utility.yul\":2796:2876   */\n      tag_401\n        /* \"#utility.yul\":2868:2875   */\n      dup7\n        /* \"#utility.yul\":2859:2865   */\n      dup3\n        /* \"#utility.yul\":2848:2857   */\n      dup8\n        /* \"#utility.yul\":2844:2866   */\n      add\n        /* \"#utility.yul\":2796:2876   */\n      tag_369\n      jump\t// in\n    tag_401:\n        /* \"#utility.yul\":2778:2876   */\n      swap4\n      pop\n      swap4\n      pop\n        /* \"#utility.yul\":2643:2886   */\n      pop\n        /* \"#utility.yul\":2924:2926   */\n      0x20\n        /* \"#utility.yul\":2949:3002   */\n      tag_402\n        /* \"#utility.yul\":2994:3001   */\n      dup7\n        /* \"#utility.yul\":2985:2991   */\n      dup3\n        /* \"#utility.yul\":2974:2983   */\n      dup8\n        /* \"#utility.yul\":2970:2992   */\n      add\n        /* \"#utility.yul\":2949:3002   */\n      tag_365\n      jump\t// in\n    tag_402:\n        /* \"#utility.yul\":2939:3002   */\n      swap2\n      pop\n        /* \"#utility.yul\":2896:3012   */\n      pop\n        /* \"#utility.yul\":2571:3019   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":3025:3754   */\n    tag_74:\n      0x00\n      dup1\n      0x00\n      dup1\n        /* \"#utility.yul\":3220:3222   */\n      0x40\n        /* \"#utility.yul\":3208:3217   */\n      dup6\n        /* \"#utility.yul\":3199:3206   */\n      dup8\n        /* \"#utility.yul\":3195:3218   */\n      sub\n        /* \"#utility.yul\":3191:3223   */\n      slt\n        /* \"#utility.yul\":3188:3190   */\n      iszero\n      tag_404\n      jumpi\n        /* \"#utility.yul\":3236:3237   */\n      0x00\n        /* \"#utility.yul\":3233:3234   */\n      dup1\n        /* \"#utility.yul\":3226:3238   */\n      revert\n        /* \"#utility.yul\":3188:3190   */\n    tag_404:\n        /* \"#utility.yul\":3306:3307   */\n      0x00\n        /* \"#utility.yul\":3295:3304   */\n      dup6\n        /* \"#utility.yul\":3291:3308   */\n      add\n        /* \"#utility.yul\":3278:3309   */\n      calldataload\n        /* \"#utility.yul\":3336:3354   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":3328:3334   */\n      dup2\n        /* \"#utility.yul\":3325:3355   */\n      gt\n        /* \"#utility.yul\":3322:3324   */\n      iszero\n      tag_405\n      jumpi\n        /* \"#utility.yul\":3368:3369   */\n      0x00\n        /* \"#utility.yul\":3365:3366   */\n      dup1\n        /* \"#utility.yul\":3358:3370   */\n      revert\n        /* \"#utility.yul\":3322:3324   */\n    tag_405:\n        /* \"#utility.yul\":3403:3483   */\n      tag_406\n        /* \"#utility.yul\":3475:3482   */\n      dup8\n        /* \"#utility.yul\":3466:3472   */\n      dup3\n        /* \"#utility.yul\":3455:3464   */\n      dup9\n        /* \"#utility.yul\":3451:3473   */\n      add\n        /* \"#utility.yul\":3403:3483   */\n      tag_369\n      jump\t// in\n    tag_406:\n        /* \"#utility.yul\":3385:3483   */\n      swap5\n      pop\n      swap5\n      pop\n        /* \"#utility.yul\":3250:3493   */\n      pop\n        /* \"#utility.yul\":3559:3561   */\n      0x20\n        /* \"#utility.yul\":3548:3557   */\n      dup6\n        /* \"#utility.yul\":3544:3562   */\n      add\n        /* \"#utility.yul\":3531:3563   */\n      calldataload\n        /* \"#utility.yul\":3590:3608   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":3582:3588   */\n      dup2\n        /* \"#utility.yul\":3579:3609   */\n      gt\n        /* \"#utility.yul\":3576:3578   */\n      iszero\n      tag_407\n      jumpi\n        /* \"#utility.yul\":3622:3623   */\n      0x00\n        /* \"#utility.yul\":3619:3620   */\n      dup1\n        /* \"#utility.yul\":3612:3624   */\n      revert\n        /* \"#utility.yul\":3576:3578   */\n    tag_407:\n        /* \"#utility.yul\":3657:3737   */\n      tag_408\n        /* \"#utility.yul\":3729:3736   */\n      dup8\n        /* \"#utility.yul\":3720:3726   */\n      dup3\n        /* \"#utility.yul\":3709:3718   */\n      dup9\n        /* \"#utility.yul\":3705:3727   */\n      add\n        /* \"#utility.yul\":3657:3737   */\n      tag_374\n      jump\t// in\n    tag_408:\n        /* \"#utility.yul\":3639:3737   */\n      swap3\n      pop\n      swap3\n      pop\n        /* \"#utility.yul\":3503:3747   */\n      pop\n        /* \"#utility.yul\":3178:3754   */\n      swap3\n      swap6\n      swap2\n      swap5\n      pop\n      swap3\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3760:4326   */\n    tag_59:\n      0x00\n      dup1\n      0x00\n        /* \"#utility.yul\":3920:3922   */\n      0x40\n        /* \"#utility.yul\":3908:3917   */\n      dup5\n        /* \"#utility.yul\":3899:3906   */\n      dup7\n        /* \"#utility.yul\":3895:3918   */\n      sub\n        /* \"#utility.yul\":3891:3923   */\n      slt\n        /* \"#utility.yul\":3888:3890   */\n      iszero\n      tag_410\n      jumpi\n        /* \"#utility.yul\":3936:3937   */\n      0x00\n        /* \"#utility.yul\":3933:3934   */\n      dup1\n        /* \"#utility.yul\":3926:3938   */\n      revert\n        /* \"#utility.yul\":3888:3890   */\n    tag_410:\n        /* \"#utility.yul\":4006:4007   */\n      0x00\n        /* \"#utility.yul\":3995:4004   */\n      dup5\n        /* \"#utility.yul\":3991:4008   */\n      add\n        /* \"#utility.yul\":3978:4009   */\n      calldataload\n        /* \"#utility.yul\":4036:4054   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":4028:4034   */\n      dup2\n        /* \"#utility.yul\":4025:4055   */\n      gt\n        /* \"#utility.yul\":4022:4024   */\n      iszero\n      tag_411\n      jumpi\n        /* \"#utility.yul\":4068:4069   */\n      0x00\n        /* \"#utility.yul\":4065:4066   */\n      dup1\n        /* \"#utility.yul\":4058:4070   */\n      revert\n        /* \"#utility.yul\":4022:4024   */\n    tag_411:\n        /* \"#utility.yul\":4103:4183   */\n      tag_412\n        /* \"#utility.yul\":4175:4182   */\n      dup7\n        /* \"#utility.yul\":4166:4172   */\n      dup3\n        /* \"#utility.yul\":4155:4164   */\n      dup8\n        /* \"#utility.yul\":4151:4173   */\n      add\n        /* \"#utility.yul\":4103:4183   */\n      tag_369\n      jump\t// in\n    tag_412:\n        /* \"#utility.yul\":4085:4183   */\n      swap4\n      pop\n      swap4\n      pop\n        /* \"#utility.yul\":3950:4193   */\n      pop\n        /* \"#utility.yul\":4231:4233   */\n      0x20\n        /* \"#utility.yul\":4256:4309   */\n      tag_413\n        /* \"#utility.yul\":4301:4308   */\n      dup7\n        /* \"#utility.yul\":4292:4298   */\n      dup3\n        /* \"#utility.yul\":4281:4290   */\n      dup8\n        /* \"#utility.yul\":4277:4299   */\n      add\n        /* \"#utility.yul\":4256:4309   */\n      tag_379\n      jump\t// in\n    tag_413:\n        /* \"#utility.yul\":4246:4309   */\n      swap2\n      pop\n        /* \"#utility.yul\":4203:4319   */\n      pop\n        /* \"#utility.yul\":3878:4326   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":4332:5041   */\n    tag_41:\n      0x00\n      dup1\n      0x00\n      dup1\n        /* \"#utility.yul\":4509:4511   */\n      0x60\n        /* \"#utility.yul\":4497:4506   */\n      dup6\n        /* \"#utility.yul\":4488:4495   */\n      dup8\n        /* \"#utility.yul\":4484:4507   */\n      sub\n        /* \"#utility.yul\":4480:4512   */\n      slt\n        /* \"#utility.yul\":4477:4479   */\n      iszero\n      tag_415\n      jumpi\n        /* \"#utility.yul\":4525:4526   */\n      0x00\n        /* \"#utility.yul\":4522:4523   */\n      dup1\n        /* \"#utility.yul\":4515:4527   */\n      revert\n        /* \"#utility.yul\":4477:4479   */\n    tag_415:\n        /* \"#utility.yul\":4595:4596   */\n      0x00\n        /* \"#utility.yul\":4584:4593   */\n      dup6\n        /* \"#utility.yul\":4580:4597   */\n      add\n        /* \"#utility.yul\":4567:4598   */\n      calldataload\n        /* \"#utility.yul\":4625:4643   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":4617:4623   */\n      dup2\n        /* \"#utility.yul\":4614:4644   */\n      gt\n        /* \"#utility.yul\":4611:4613   */\n      iszero\n      tag_416\n      jumpi\n        /* \"#utility.yul\":4657:4658   */\n      0x00\n        /* \"#utility.yul\":4654:4655   */\n      dup1\n        /* \"#utility.yul\":4647:4659   */\n      revert\n        /* \"#utility.yul\":4611:4613   */\n    tag_416:\n        /* \"#utility.yul\":4692:4772   */\n      tag_417\n        /* \"#utility.yul\":4764:4771   */\n      dup8\n        /* \"#utility.yul\":4755:4761   */\n      dup3\n        /* \"#utility.yul\":4744:4753   */\n      dup9\n        /* \"#utility.yul\":4740:4762   */\n      add\n        /* \"#utility.yul\":4692:4772   */\n      tag_369\n      jump\t// in\n    tag_417:\n        /* \"#utility.yul\":4674:4772   */\n      swap5\n      pop\n      swap5\n      pop\n        /* \"#utility.yul\":4539:4782   */\n      pop\n        /* \"#utility.yul\":4820:4822   */\n      0x20\n        /* \"#utility.yul\":4845:4898   */\n      tag_418\n        /* \"#utility.yul\":4890:4897   */\n      dup8\n        /* \"#utility.yul\":4881:4887   */\n      dup3\n        /* \"#utility.yul\":4870:4879   */\n      dup9\n        /* \"#utility.yul\":4866:4888   */\n      add\n        /* \"#utility.yul\":4845:4898   */\n      tag_379\n      jump\t// in\n    tag_418:\n        /* \"#utility.yul\":4835:4898   */\n      swap3\n      pop\n        /* \"#utility.yul\":4792:4908   */\n      pop\n        /* \"#utility.yul\":4946:4948   */\n      0x40\n        /* \"#utility.yul\":4971:5024   */\n      tag_419\n        /* \"#utility.yul\":5016:5023   */\n      dup8\n        /* \"#utility.yul\":5007:5013   */\n      dup3\n        /* \"#utility.yul\":4996:5005   */\n      dup9\n        /* \"#utility.yul\":4992:5014   */\n      add\n        /* \"#utility.yul\":4971:5024   */\n      tag_365\n      jump\t// in\n    tag_419:\n        /* \"#utility.yul\":4961:5024   */\n      swap2\n      pop\n        /* \"#utility.yul\":4918:5034   */\n      pop\n        /* \"#utility.yul\":4467:5041   */\n      swap3\n      swap6\n      swap2\n      swap5\n      pop\n      swap3\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5047:5900   */\n    tag_64:\n      0x00\n      dup1\n      0x00\n      dup1\n      0x00\n        /* \"#utility.yul\":5241:5244   */\n      0x80\n        /* \"#utility.yul\":5229:5238   */\n      dup7\n        /* \"#utility.yul\":5220:5227   */\n      dup9\n        /* \"#utility.yul\":5216:5239   */\n      sub\n        /* \"#utility.yul\":5212:5245   */\n      slt\n        /* \"#utility.yul\":5209:5211   */\n      iszero\n      tag_421\n      jumpi\n        /* \"#utility.yul\":5258:5259   */\n      0x00\n        /* \"#utility.yul\":5255:5256   */\n      dup1\n        /* \"#utility.yul\":5248:5260   */\n      revert\n        /* \"#utility.yul\":5209:5211   */\n    tag_421:\n        /* \"#utility.yul\":5328:5329   */\n      0x00\n        /* \"#utility.yul\":5317:5326   */\n      dup7\n        /* \"#utility.yul\":5313:5330   */\n      add\n        /* \"#utility.yul\":5300:5331   */\n      calldataload\n        /* \"#utility.yul\":5358:5376   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":5350:5356   */\n      dup2\n        /* \"#utility.yul\":5347:5377   */\n      gt\n        /* \"#utility.yul\":5344:5346   */\n      iszero\n      tag_422\n      jumpi\n        /* \"#utility.yul\":5390:5391   */\n      0x00\n        /* \"#utility.yul\":5387:5388   */\n      dup1\n        /* \"#utility.yul\":5380:5392   */\n      revert\n        /* \"#utility.yul\":5344:5346   */\n    tag_422:\n        /* \"#utility.yul\":5425:5505   */\n      tag_423\n        /* \"#utility.yul\":5497:5504   */\n      dup9\n        /* \"#utility.yul\":5488:5494   */\n      dup3\n        /* \"#utility.yul\":5477:5486   */\n      dup10\n        /* \"#utility.yul\":5473:5495   */\n      add\n        /* \"#utility.yul\":5425:5505   */\n      tag_369\n      jump\t// in\n    tag_423:\n        /* \"#utility.yul\":5407:5505   */\n      swap6\n      pop\n      swap6\n      pop\n        /* \"#utility.yul\":5272:5515   */\n      pop\n        /* \"#utility.yul\":5553:5555   */\n      0x20\n        /* \"#utility.yul\":5578:5631   */\n      tag_424\n        /* \"#utility.yul\":5623:5630   */\n      dup9\n        /* \"#utility.yul\":5614:5620   */\n      dup3\n        /* \"#utility.yul\":5603:5612   */\n      dup10\n        /* \"#utility.yul\":5599:5621   */\n      add\n        /* \"#utility.yul\":5578:5631   */\n      tag_379\n      jump\t// in\n    tag_424:\n        /* \"#utility.yul\":5568:5631   */\n      swap4\n      pop\n        /* \"#utility.yul\":5525:5641   */\n      pop\n        /* \"#utility.yul\":5679:5681   */\n      0x40\n        /* \"#utility.yul\":5704:5757   */\n      tag_425\n        /* \"#utility.yul\":5749:5756   */\n      dup9\n        /* \"#utility.yul\":5740:5746   */\n      dup3\n        /* \"#utility.yul\":5729:5738   */\n      dup10\n        /* \"#utility.yul\":5725:5747   */\n      add\n        /* \"#utility.yul\":5704:5757   */\n      tag_365\n      jump\t// in\n    tag_425:\n        /* \"#utility.yul\":5694:5757   */\n      swap3\n      pop\n        /* \"#utility.yul\":5651:5767   */\n      pop\n        /* \"#utility.yul\":5805:5807   */\n      0x60\n        /* \"#utility.yul\":5830:5883   */\n      tag_426\n        /* \"#utility.yul\":5875:5882   */\n      dup9\n        /* \"#utility.yul\":5866:5872   */\n      dup3\n        /* \"#utility.yul\":5855:5864   */\n      dup10\n        /* \"#utility.yul\":5851:5873   */\n      add\n        /* \"#utility.yul\":5830:5883   */\n      tag_365\n      jump\t// in\n    tag_426:\n        /* \"#utility.yul\":5820:5883   */\n      swap2\n      pop\n        /* \"#utility.yul\":5777:5893   */\n      pop\n        /* \"#utility.yul\":5199:5900   */\n      swap3\n      swap6\n      pop\n      swap3\n      swap6\n      swap1\n      swap4\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5906:6166   */\n    tag_55:\n      0x00\n        /* \"#utility.yul\":6014:6016   */\n      0x20\n        /* \"#utility.yul\":6002:6011   */\n      dup3\n        /* \"#utility.yul\":5993:6000   */\n      dup5\n        /* \"#utility.yul\":5989:6012   */\n      sub\n        /* \"#utility.yul\":5985:6017   */\n      slt\n        /* \"#utility.yul\":5982:5984   */\n      iszero\n      tag_428\n      jumpi\n        /* \"#utility.yul\":6030:6031   */\n      0x00\n        /* \"#utility.yul\":6027:6028   */\n      dup1\n        /* \"#utility.yul\":6020:6032   */\n      revert\n        /* \"#utility.yul\":5982:5984   */\n    tag_428:\n        /* \"#utility.yul\":6072:6073   */\n      0x00\n        /* \"#utility.yul\":6096:6149   */\n      tag_429\n        /* \"#utility.yul\":6141:6148   */\n      dup5\n        /* \"#utility.yul\":6132:6138   */\n      dup3\n        /* \"#utility.yul\":6121:6130   */\n      dup6\n        /* \"#utility.yul\":6117:6139   */\n      add\n        /* \"#utility.yul\":6096:6149   */\n      tag_379\n      jump\t// in\n    tag_429:\n        /* \"#utility.yul\":6086:6149   */\n      swap2\n      pop\n        /* \"#utility.yul\":6044:6159   */\n      pop\n        /* \"#utility.yul\":5972:6166   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6172:6454   */\n    tag_184:\n      0x00\n        /* \"#utility.yul\":6291:6293   */\n      0x20\n        /* \"#utility.yul\":6279:6288   */\n      dup3\n        /* \"#utility.yul\":6270:6277   */\n      dup5\n        /* \"#utility.yul\":6266:6289   */\n      sub\n        /* \"#utility.yul\":6262:6294   */\n      slt\n        /* \"#utility.yul\":6259:6261   */\n      iszero\n      tag_431\n      jumpi\n        /* \"#utility.yul\":6307:6308   */\n      0x00\n        /* \"#utility.yul\":6304:6305   */\n      dup1\n        /* \"#utility.yul\":6297:6309   */\n      revert\n        /* \"#utility.yul\":6259:6261   */\n    tag_431:\n        /* \"#utility.yul\":6349:6350   */\n      0x00\n        /* \"#utility.yul\":6373:6437   */\n      tag_432\n        /* \"#utility.yul\":6429:6436   */\n      dup5\n        /* \"#utility.yul\":6420:6426   */\n      dup3\n        /* \"#utility.yul\":6409:6418   */\n      dup6\n        /* \"#utility.yul\":6405:6427   */\n      add\n        /* \"#utility.yul\":6373:6437   */\n      tag_383\n      jump\t// in\n    tag_432:\n        /* \"#utility.yul\":6363:6437   */\n      swap2\n      pop\n        /* \"#utility.yul\":6321:6447   */\n      pop\n        /* \"#utility.yul\":6249:6454   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6460:6896   */\n    tag_207:\n      0x00\n      dup1\n        /* \"#utility.yul\":6596:6598   */\n      0x40\n        /* \"#utility.yul\":6584:6593   */\n      dup4\n        /* \"#utility.yul\":6575:6582   */\n      dup6\n        /* \"#utility.yul\":6571:6594   */\n      sub\n        /* \"#utility.yul\":6567:6599   */\n      slt\n        /* \"#utility.yul\":6564:6566   */\n      iszero\n      tag_434\n      jumpi\n        /* \"#utility.yul\":6612:6613   */\n      0x00\n        /* \"#utility.yul\":6609:6610   */\n      dup1\n        /* \"#utility.yul\":6602:6614   */\n      revert\n        /* \"#utility.yul\":6564:6566   */\n    tag_434:\n        /* \"#utility.yul\":6654:6655   */\n      0x00\n        /* \"#utility.yul\":6678:6742   */\n      tag_435\n        /* \"#utility.yul\":6734:6741   */\n      dup6\n        /* \"#utility.yul\":6725:6731   */\n      dup3\n        /* \"#utility.yul\":6714:6723   */\n      dup7\n        /* \"#utility.yul\":6710:6732   */\n      add\n        /* \"#utility.yul\":6678:6742   */\n      tag_383\n      jump\t// in\n    tag_435:\n        /* \"#utility.yul\":6668:6742   */\n      swap3\n      pop\n        /* \"#utility.yul\":6626:6752   */\n      pop\n        /* \"#utility.yul\":6790:6792   */\n      0x20\n        /* \"#utility.yul\":6815:6879   */\n      tag_436\n        /* \"#utility.yul\":6871:6878   */\n      dup6\n        /* \"#utility.yul\":6862:6868   */\n      dup3\n        /* \"#utility.yul\":6851:6860   */\n      dup7\n        /* \"#utility.yul\":6847:6869   */\n      add\n        /* \"#utility.yul\":6815:6879   */\n      tag_383\n      jump\t// in\n    tag_436:\n        /* \"#utility.yul\":6805:6879   */\n      swap2\n      pop\n        /* \"#utility.yul\":6762:6889   */\n      pop\n        /* \"#utility.yul\":6554:6896   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6902:7020   */\n    tag_437:\n        /* \"#utility.yul\":6989:7013   */\n      tag_439\n        /* \"#utility.yul\":7007:7012   */\n      dup2\n        /* \"#utility.yul\":6989:7013   */\n      tag_440\n      jump\t// in\n    tag_439:\n        /* \"#utility.yul\":6984:6987   */\n      dup3\n        /* \"#utility.yul\":6977:7014   */\n      mstore\n        /* \"#utility.yul\":6967:7020   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7026:7344   */\n    tag_441:\n      0x00\n        /* \"#utility.yul\":7189:7256   */\n      tag_443\n        /* \"#utility.yul\":7253:7255   */\n      0x14\n        /* \"#utility.yul\":7248:7251   */\n      dup4\n        /* \"#utility.yul\":7189:7256   */\n      tag_444\n      jump\t// in\n    tag_443:\n        /* \"#utility.yul\":7182:7256   */\n      swap2\n      pop\n        /* \"#utility.yul\":7286:7308   */\n      0x494e56414c49445f555345525f41444452455353000000000000000000000000\n        /* \"#utility.yul\":7282:7283   */\n      0x00\n        /* \"#utility.yul\":7277:7280   */\n      dup4\n        /* \"#utility.yul\":7273:7284   */\n      add\n        /* \"#utility.yul\":7266:7309   */\n      mstore\n        /* \"#utility.yul\":7335:7337   */\n      0x20\n        /* \"#utility.yul\":7330:7333   */\n      dup3\n        /* \"#utility.yul\":7326:7338   */\n      add\n        /* \"#utility.yul\":7319:7338   */\n      swap1\n      pop\n        /* \"#utility.yul\":7172:7344   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7350:7666   */\n    tag_445:\n      0x00\n        /* \"#utility.yul\":7513:7580   */\n      tag_447\n        /* \"#utility.yul\":7577:7579   */\n      0x12\n        /* \"#utility.yul\":7572:7575   */\n      dup4\n        /* \"#utility.yul\":7513:7580   */\n      tag_444\n      jump\t// in\n    tag_447:\n        /* \"#utility.yul\":7506:7580   */\n      swap2\n      pop\n        /* \"#utility.yul\":7610:7630   */\n      0x494e56414c49445f544f5f414444524553530000000000000000000000000000\n        /* \"#utility.yul\":7606:7607   */\n      0x00\n        /* \"#utility.yul\":7601:7604   */\n      dup4\n        /* \"#utility.yul\":7597:7608   */\n      add\n        /* \"#utility.yul\":7590:7631   */\n      mstore\n        /* \"#utility.yul\":7657:7659   */\n      0x20\n        /* \"#utility.yul\":7652:7655   */\n      dup3\n        /* \"#utility.yul\":7648:7660   */\n      add\n        /* \"#utility.yul\":7641:7660   */\n      swap1\n      pop\n        /* \"#utility.yul\":7496:7666   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7672:7991   */\n    tag_448:\n      0x00\n        /* \"#utility.yul\":7835:7902   */\n      tag_450\n        /* \"#utility.yul\":7899:7901   */\n      0x15\n        /* \"#utility.yul\":7894:7897   */\n      dup4\n        /* \"#utility.yul\":7835:7902   */\n      tag_444\n      jump\t// in\n    tag_450:\n        /* \"#utility.yul\":7828:7902   */\n      swap2\n      pop\n        /* \"#utility.yul\":7932:7955   */\n      0x494e56414c49445f434f4e46494755524154494f4e0000000000000000000000\n        /* \"#utility.yul\":7928:7929   */\n      0x00\n        /* \"#utility.yul\":7923:7926   */\n      dup4\n        /* \"#utility.yul\":7919:7930   */\n      add\n        /* \"#utility.yul\":7912:7956   */\n      mstore\n        /* \"#utility.yul\":7982:7984   */\n      0x20\n        /* \"#utility.yul\":7977:7980   */\n      dup3\n        /* \"#utility.yul\":7973:7985   */\n      add\n        /* \"#utility.yul\":7966:7985   */\n      swap1\n      pop\n        /* \"#utility.yul\":7818:7991   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7997:8365   */\n    tag_451:\n      0x00\n        /* \"#utility.yul\":8160:8227   */\n      tag_453\n        /* \"#utility.yul\":8224:8226   */\n      0x24\n        /* \"#utility.yul\":8219:8222   */\n      dup4\n        /* \"#utility.yul\":8160:8227   */\n      tag_444\n      jump\t// in\n    tag_453:\n        /* \"#utility.yul\":8153:8227   */\n      swap2\n      pop\n        /* \"#utility.yul\":8257:8291   */\n      0x496e646578206f766572666c6f7720617420656d697373696f6e735065725365\n        /* \"#utility.yul\":8253:8254   */\n      0x00\n        /* \"#utility.yul\":8248:8251   */\n      dup4\n        /* \"#utility.yul\":8244:8255   */\n      add\n        /* \"#utility.yul\":8237:8292   */\n      mstore\n        /* \"#utility.yul\":8323:8329   */\n      0x636f6e6400000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":8318:8320   */\n      0x20\n        /* \"#utility.yul\":8313:8316   */\n      dup4\n        /* \"#utility.yul\":8309:8321   */\n      add\n        /* \"#utility.yul\":8302:8330   */\n      mstore\n        /* \"#utility.yul\":8356:8358   */\n      0x40\n        /* \"#utility.yul\":8351:8354   */\n      dup3\n        /* \"#utility.yul\":8347:8359   */\n      add\n        /* \"#utility.yul\":8340:8359   */\n      swap1\n      pop\n        /* \"#utility.yul\":8143:8365   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8371:8683   */\n    tag_454:\n      0x00\n        /* \"#utility.yul\":8534:8601   */\n      tag_456\n        /* \"#utility.yul\":8598:8600   */\n      0x0e\n        /* \"#utility.yul\":8593:8596   */\n      dup4\n        /* \"#utility.yul\":8534:8601   */\n      tag_444\n      jump\t// in\n    tag_456:\n        /* \"#utility.yul\":8527:8601   */\n      swap2\n      pop\n        /* \"#utility.yul\":8631:8647   */\n      0x496e646578206f766572666c6f77000000000000000000000000000000000000\n        /* \"#utility.yul\":8627:8628   */\n      0x00\n        /* \"#utility.yul\":8622:8625   */\n      dup4\n        /* \"#utility.yul\":8618:8629   */\n      add\n        /* \"#utility.yul\":8611:8648   */\n      mstore\n        /* \"#utility.yul\":8674:8676   */\n      0x20\n        /* \"#utility.yul\":8669:8672   */\n      dup3\n        /* \"#utility.yul\":8665:8677   */\n      add\n        /* \"#utility.yul\":8658:8677   */\n      swap1\n      pop\n        /* \"#utility.yul\":8517:8683   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8689:9008   */\n    tag_457:\n      0x00\n        /* \"#utility.yul\":8852:8919   */\n      tag_459\n        /* \"#utility.yul\":8916:8918   */\n      0x15\n        /* \"#utility.yul\":8911:8914   */\n      dup4\n        /* \"#utility.yul\":8852:8919   */\n      tag_444\n      jump\t// in\n    tag_459:\n        /* \"#utility.yul\":8845:8919   */\n      swap2\n      pop\n        /* \"#utility.yul\":8949:8972   */\n      0x4f4e4c595f454d495353494f4e5f4d414e414745520000000000000000000000\n        /* \"#utility.yul\":8945:8946   */\n      0x00\n        /* \"#utility.yul\":8940:8943   */\n      dup4\n        /* \"#utility.yul\":8936:8947   */\n      add\n        /* \"#utility.yul\":8929:8973   */\n      mstore\n        /* \"#utility.yul\":8999:9001   */\n      0x20\n        /* \"#utility.yul\":8994:8997   */\n      dup3\n        /* \"#utility.yul\":8990:9002   */\n      add\n        /* \"#utility.yul\":8983:9002   */\n      swap1\n      pop\n        /* \"#utility.yul\":8835:9008   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9014:9332   */\n    tag_460:\n      0x00\n        /* \"#utility.yul\":9177:9244   */\n      tag_462\n        /* \"#utility.yul\":9241:9243   */\n      0x14\n        /* \"#utility.yul\":9236:9239   */\n      dup4\n        /* \"#utility.yul\":9177:9244   */\n      tag_444\n      jump\t// in\n    tag_462:\n        /* \"#utility.yul\":9170:9244   */\n      swap2\n      pop\n        /* \"#utility.yul\":9274:9296   */\n      0x434c41494d45525f554e415554484f52495a4544000000000000000000000000\n        /* \"#utility.yul\":9270:9271   */\n      0x00\n        /* \"#utility.yul\":9265:9268   */\n      dup4\n        /* \"#utility.yul\":9261:9272   */\n      add\n        /* \"#utility.yul\":9254:9297   */\n      mstore\n        /* \"#utility.yul\":9323:9325   */\n      0x20\n        /* \"#utility.yul\":9318:9321   */\n      dup3\n        /* \"#utility.yul\":9314:9326   */\n      add\n        /* \"#utility.yul\":9307:9326   */\n      swap1\n      pop\n        /* \"#utility.yul\":9160:9332   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9338:9456   */\n    tag_463:\n        /* \"#utility.yul\":9425:9449   */\n      tag_465\n        /* \"#utility.yul\":9443:9448   */\n      dup2\n        /* \"#utility.yul\":9425:9449   */\n      tag_466\n      jump\t// in\n    tag_465:\n        /* \"#utility.yul\":9420:9423   */\n      dup3\n        /* \"#utility.yul\":9413:9450   */\n      mstore\n        /* \"#utility.yul\":9403:9456   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9462:9593   */\n    tag_467:\n        /* \"#utility.yul\":9549:9586   */\n      tag_469\n        /* \"#utility.yul\":9580:9585   */\n      dup2\n        /* \"#utility.yul\":9549:9586   */\n      tag_470\n      jump\t// in\n    tag_469:\n        /* \"#utility.yul\":9544:9547   */\n      dup3\n        /* \"#utility.yul\":9537:9587   */\n      mstore\n        /* \"#utility.yul\":9527:9593   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9599:9717   */\n    tag_471:\n        /* \"#utility.yul\":9686:9710   */\n      tag_473\n        /* \"#utility.yul\":9704:9709   */\n      dup2\n        /* \"#utility.yul\":9686:9710   */\n      tag_474\n      jump\t// in\n    tag_473:\n        /* \"#utility.yul\":9681:9684   */\n      dup3\n        /* \"#utility.yul\":9674:9711   */\n      mstore\n        /* \"#utility.yul\":9664:9717   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9723:9838   */\n    tag_475:\n        /* \"#utility.yul\":9808:9831   */\n      tag_477\n        /* \"#utility.yul\":9825:9830   */\n      dup2\n        /* \"#utility.yul\":9808:9831   */\n      tag_478\n      jump\t// in\n    tag_477:\n        /* \"#utility.yul\":9803:9806   */\n      dup3\n        /* \"#utility.yul\":9796:9832   */\n      mstore\n        /* \"#utility.yul\":9786:9838   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9844:9956   */\n    tag_479:\n        /* \"#utility.yul\":9927:9949   */\n      tag_481\n        /* \"#utility.yul\":9943:9948   */\n      dup2\n        /* \"#utility.yul\":9927:9949   */\n      tag_482\n      jump\t// in\n    tag_481:\n        /* \"#utility.yul\":9922:9925   */\n      dup3\n        /* \"#utility.yul\":9915:9950   */\n      mstore\n        /* \"#utility.yul\":9905:9956   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9962:10184   */\n    tag_71:\n      0x00\n        /* \"#utility.yul\":10093:10095   */\n      0x20\n        /* \"#utility.yul\":10082:10091   */\n      dup3\n        /* \"#utility.yul\":10078:10096   */\n      add\n        /* \"#utility.yul\":10070:10096   */\n      swap1\n      pop\n        /* \"#utility.yul\":10106:10177   */\n      tag_484\n        /* \"#utility.yul\":10174:10175   */\n      0x00\n        /* \"#utility.yul\":10163:10172   */\n      dup4\n        /* \"#utility.yul\":10159:10176   */\n      add\n        /* \"#utility.yul\":10150:10156   */\n      dup5\n        /* \"#utility.yul\":10106:10177   */\n      tag_437\n      jump\t// in\n    tag_484:\n        /* \"#utility.yul\":10060:10184   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10190:10609   */\n    tag_148:\n      0x00\n        /* \"#utility.yul\":10394:10396   */\n      0x20\n        /* \"#utility.yul\":10383:10392   */\n      dup3\n        /* \"#utility.yul\":10379:10397   */\n      add\n        /* \"#utility.yul\":10371:10397   */\n      swap1\n      pop\n        /* \"#utility.yul\":10443:10452   */\n      dup2\n        /* \"#utility.yul\":10437:10441   */\n      dup2\n        /* \"#utility.yul\":10433:10453   */\n      sub\n        /* \"#utility.yul\":10429:10430   */\n      0x00\n        /* \"#utility.yul\":10418:10427   */\n      dup4\n        /* \"#utility.yul\":10414:10431   */\n      add\n        /* \"#utility.yul\":10407:10454   */\n      mstore\n        /* \"#utility.yul\":10471:10602   */\n      tag_486\n        /* \"#utility.yul\":10597:10601   */\n      dup2\n        /* \"#utility.yul\":10471:10602   */\n      tag_441\n      jump\t// in\n    tag_486:\n        /* \"#utility.yul\":10463:10602   */\n      swap1\n      pop\n        /* \"#utility.yul\":10361:10609   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10615:11034   */\n    tag_122:\n      0x00\n        /* \"#utility.yul\":10819:10821   */\n      0x20\n        /* \"#utility.yul\":10808:10817   */\n      dup3\n        /* \"#utility.yul\":10804:10822   */\n      add\n        /* \"#utility.yul\":10796:10822   */\n      swap1\n      pop\n        /* \"#utility.yul\":10868:10877   */\n      dup2\n        /* \"#utility.yul\":10862:10866   */\n      dup2\n        /* \"#utility.yul\":10858:10878   */\n      sub\n        /* \"#utility.yul\":10854:10855   */\n      0x00\n        /* \"#utility.yul\":10843:10852   */\n      dup4\n        /* \"#utility.yul\":10839:10856   */\n      add\n        /* \"#utility.yul\":10832:10879   */\n      mstore\n        /* \"#utility.yul\":10896:11027   */\n      tag_488\n        /* \"#utility.yul\":11022:11026   */\n      dup2\n        /* \"#utility.yul\":10896:11027   */\n      tag_445\n      jump\t// in\n    tag_488:\n        /* \"#utility.yul\":10888:11027   */\n      swap1\n      pop\n        /* \"#utility.yul\":10786:11034   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11040:11459   */\n    tag_159:\n      0x00\n        /* \"#utility.yul\":11244:11246   */\n      0x20\n        /* \"#utility.yul\":11233:11242   */\n      dup3\n        /* \"#utility.yul\":11229:11247   */\n      add\n        /* \"#utility.yul\":11221:11247   */\n      swap1\n      pop\n        /* \"#utility.yul\":11293:11302   */\n      dup2\n        /* \"#utility.yul\":11287:11291   */\n      dup2\n        /* \"#utility.yul\":11283:11303   */\n      sub\n        /* \"#utility.yul\":11279:11280   */\n      0x00\n        /* \"#utility.yul\":11268:11277   */\n      dup4\n        /* \"#utility.yul\":11264:11281   */\n      add\n        /* \"#utility.yul\":11257:11304   */\n      mstore\n        /* \"#utility.yul\":11321:11452   */\n      tag_490\n        /* \"#utility.yul\":11447:11451   */\n      dup2\n        /* \"#utility.yul\":11321:11452   */\n      tag_448\n      jump\t// in\n    tag_490:\n        /* \"#utility.yul\":11313:11452   */\n      swap1\n      pop\n        /* \"#utility.yul\":11211:11459   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11465:11884   */\n    tag_172:\n      0x00\n        /* \"#utility.yul\":11669:11671   */\n      0x20\n        /* \"#utility.yul\":11658:11667   */\n      dup3\n        /* \"#utility.yul\":11654:11672   */\n      add\n        /* \"#utility.yul\":11646:11672   */\n      swap1\n      pop\n        /* \"#utility.yul\":11718:11727   */\n      dup2\n        /* \"#utility.yul\":11712:11716   */\n      dup2\n        /* \"#utility.yul\":11708:11728   */\n      sub\n        /* \"#utility.yul\":11704:11705   */\n      0x00\n        /* \"#utility.yul\":11693:11702   */\n      dup4\n        /* \"#utility.yul\":11689:11706   */\n      add\n        /* \"#utility.yul\":11682:11729   */\n      mstore\n        /* \"#utility.yul\":11746:11877   */\n      tag_492\n        /* \"#utility.yul\":11872:11876   */\n      dup2\n        /* \"#utility.yul\":11746:11877   */\n      tag_451\n      jump\t// in\n    tag_492:\n        /* \"#utility.yul\":11738:11877   */\n      swap1\n      pop\n        /* \"#utility.yul\":11636:11884   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11890:12309   */\n    tag_315:\n      0x00\n        /* \"#utility.yul\":12094:12096   */\n      0x20\n        /* \"#utility.yul\":12083:12092   */\n      dup3\n        /* \"#utility.yul\":12079:12097   */\n      add\n        /* \"#utility.yul\":12071:12097   */\n      swap1\n      pop\n        /* \"#utility.yul\":12143:12152   */\n      dup2\n        /* \"#utility.yul\":12137:12141   */\n      dup2\n        /* \"#utility.yul\":12133:12153   */\n      sub\n        /* \"#utility.yul\":12129:12130   */\n      0x00\n        /* \"#utility.yul\":12118:12127   */\n      dup4\n        /* \"#utility.yul\":12114:12131   */\n      add\n        /* \"#utility.yul\":12107:12154   */\n      mstore\n        /* \"#utility.yul\":12171:12302   */\n      tag_494\n        /* \"#utility.yul\":12297:12301   */\n      dup2\n        /* \"#utility.yul\":12171:12302   */\n      tag_454\n      jump\t// in\n    tag_494:\n        /* \"#utility.yul\":12163:12302   */\n      swap1\n      pop\n        /* \"#utility.yul\":12061:12309   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12315:12734   */\n    tag_136:\n      0x00\n        /* \"#utility.yul\":12519:12521   */\n      0x20\n        /* \"#utility.yul\":12508:12517   */\n      dup3\n        /* \"#utility.yul\":12504:12522   */\n      add\n        /* \"#utility.yul\":12496:12522   */\n      swap1\n      pop\n        /* \"#utility.yul\":12568:12577   */\n      dup2\n        /* \"#utility.yul\":12562:12566   */\n      dup2\n        /* \"#utility.yul\":12558:12578   */\n      sub\n        /* \"#utility.yul\":12554:12555   */\n      0x00\n        /* \"#utility.yul\":12543:12552   */\n      dup4\n        /* \"#utility.yul\":12539:12556   */\n      add\n        /* \"#utility.yul\":12532:12579   */\n      mstore\n        /* \"#utility.yul\":12596:12727   */\n      tag_496\n        /* \"#utility.yul\":12722:12726   */\n      dup2\n        /* \"#utility.yul\":12596:12727   */\n      tag_457\n      jump\t// in\n    tag_496:\n        /* \"#utility.yul\":12588:12727   */\n      swap1\n      pop\n        /* \"#utility.yul\":12486:12734   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12740:13159   */\n    tag_144:\n      0x00\n        /* \"#utility.yul\":12944:12946   */\n      0x20\n        /* \"#utility.yul\":12933:12942   */\n      dup3\n        /* \"#utility.yul\":12929:12947   */\n      add\n        /* \"#utility.yul\":12921:12947   */\n      swap1\n      pop\n        /* \"#utility.yul\":12993:13002   */\n      dup2\n        /* \"#utility.yul\":12987:12991   */\n      dup2\n        /* \"#utility.yul\":12983:13003   */\n      sub\n        /* \"#utility.yul\":12979:12980   */\n      0x00\n        /* \"#utility.yul\":12968:12977   */\n      dup4\n        /* \"#utility.yul\":12964:12981   */\n      add\n        /* \"#utility.yul\":12957:13004   */\n      mstore\n        /* \"#utility.yul\":13021:13152   */\n      tag_498\n        /* \"#utility.yul\":13147:13151   */\n      dup2\n        /* \"#utility.yul\":13021:13152   */\n      tag_460\n      jump\t// in\n    tag_498:\n        /* \"#utility.yul\":13013:13152   */\n      swap1\n      pop\n        /* \"#utility.yul\":12911:13159   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13165:13387   */\n    tag_284:\n      0x00\n        /* \"#utility.yul\":13296:13298   */\n      0x20\n        /* \"#utility.yul\":13285:13294   */\n      dup3\n        /* \"#utility.yul\":13281:13299   */\n      add\n        /* \"#utility.yul\":13273:13299   */\n      swap1\n      pop\n        /* \"#utility.yul\":13309:13380   */\n      tag_500\n        /* \"#utility.yul\":13377:13378   */\n      0x00\n        /* \"#utility.yul\":13366:13375   */\n      dup4\n        /* \"#utility.yul\":13362:13379   */\n      add\n        /* \"#utility.yul\":13353:13359   */\n      dup5\n        /* \"#utility.yul\":13309:13380   */\n      tag_467\n      jump\t// in\n    tag_500:\n        /* \"#utility.yul\":13263:13387   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13393:13831   */\n    tag_110:\n      0x00\n        /* \"#utility.yul\":13578:13580   */\n      0x60\n        /* \"#utility.yul\":13567:13576   */\n      dup3\n        /* \"#utility.yul\":13563:13581   */\n      add\n        /* \"#utility.yul\":13555:13581   */\n      swap1\n      pop\n        /* \"#utility.yul\":13591:13662   */\n      tag_502\n        /* \"#utility.yul\":13659:13660   */\n      0x00\n        /* \"#utility.yul\":13648:13657   */\n      dup4\n        /* \"#utility.yul\":13644:13661   */\n      add\n        /* \"#utility.yul\":13635:13641   */\n      dup7\n        /* \"#utility.yul\":13591:13662   */\n      tag_463\n      jump\t// in\n    tag_502:\n        /* \"#utility.yul\":13672:13744   */\n      tag_503\n        /* \"#utility.yul\":13740:13742   */\n      0x20\n        /* \"#utility.yul\":13729:13738   */\n      dup4\n        /* \"#utility.yul\":13725:13743   */\n      add\n        /* \"#utility.yul\":13716:13722   */\n      dup6\n        /* \"#utility.yul\":13672:13744   */\n      tag_463\n      jump\t// in\n    tag_503:\n        /* \"#utility.yul\":13754:13824   */\n      tag_504\n        /* \"#utility.yul\":13820:13822   */\n      0x40\n        /* \"#utility.yul\":13809:13818   */\n      dup4\n        /* \"#utility.yul\":13805:13823   */\n      add\n        /* \"#utility.yul\":13796:13802   */\n      dup5\n        /* \"#utility.yul\":13754:13824   */\n      tag_475\n      jump\t// in\n    tag_504:\n        /* \"#utility.yul\":13545:13831   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13837:14059   */\n    tag_38:\n      0x00\n        /* \"#utility.yul\":13968:13970   */\n      0x20\n        /* \"#utility.yul\":13957:13966   */\n      dup3\n        /* \"#utility.yul\":13953:13971   */\n      add\n        /* \"#utility.yul\":13945:13971   */\n      swap1\n      pop\n        /* \"#utility.yul\":13981:14052   */\n      tag_506\n        /* \"#utility.yul\":14049:14050   */\n      0x00\n        /* \"#utility.yul\":14038:14047   */\n      dup4\n        /* \"#utility.yul\":14034:14051   */\n      add\n        /* \"#utility.yul\":14025:14031   */\n      dup5\n        /* \"#utility.yul\":13981:14052   */\n      tag_471\n      jump\t// in\n    tag_506:\n        /* \"#utility.yul\":13935:14059   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14065:14507   */\n    tag_33:\n      0x00\n        /* \"#utility.yul\":14252:14254   */\n      0x60\n        /* \"#utility.yul\":14241:14250   */\n      dup3\n        /* \"#utility.yul\":14237:14255   */\n      add\n        /* \"#utility.yul\":14229:14255   */\n      swap1\n      pop\n        /* \"#utility.yul\":14265:14336   */\n      tag_508\n        /* \"#utility.yul\":14333:14334   */\n      0x00\n        /* \"#utility.yul\":14322:14331   */\n      dup4\n        /* \"#utility.yul\":14318:14335   */\n      add\n        /* \"#utility.yul\":14309:14315   */\n      dup7\n        /* \"#utility.yul\":14265:14336   */\n      tag_471\n      jump\t// in\n    tag_508:\n        /* \"#utility.yul\":14346:14418   */\n      tag_509\n        /* \"#utility.yul\":14414:14416   */\n      0x20\n        /* \"#utility.yul\":14403:14412   */\n      dup4\n        /* \"#utility.yul\":14399:14417   */\n      add\n        /* \"#utility.yul\":14390:14396   */\n      dup6\n        /* \"#utility.yul\":14346:14418   */\n      tag_471\n      jump\t// in\n    tag_509:\n        /* \"#utility.yul\":14428:14500   */\n      tag_510\n        /* \"#utility.yul\":14496:14498   */\n      0x40\n        /* \"#utility.yul\":14485:14494   */\n      dup4\n        /* \"#utility.yul\":14481:14499   */\n      add\n        /* \"#utility.yul\":14472:14478   */\n      dup5\n        /* \"#utility.yul\":14428:14500   */\n      tag_471\n      jump\t// in\n    tag_510:\n        /* \"#utility.yul\":14219:14507   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14513:14727   */\n    tag_90:\n      0x00\n        /* \"#utility.yul\":14640:14642   */\n      0x20\n        /* \"#utility.yul\":14629:14638   */\n      dup3\n        /* \"#utility.yul\":14625:14643   */\n      add\n        /* \"#utility.yul\":14617:14643   */\n      swap1\n      pop\n        /* \"#utility.yul\":14653:14720   */\n      tag_512\n        /* \"#utility.yul\":14717:14718   */\n      0x00\n        /* \"#utility.yul\":14706:14715   */\n      dup4\n        /* \"#utility.yul\":14702:14719   */\n      add\n        /* \"#utility.yul\":14693:14699   */\n      dup5\n        /* \"#utility.yul\":14653:14720   */\n      tag_479\n      jump\t// in\n    tag_512:\n        /* \"#utility.yul\":14607:14727   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14733:14902   */\n    tag_444:\n      0x00\n        /* \"#utility.yul\":14851:14857   */\n      dup3\n        /* \"#utility.yul\":14846:14849   */\n      dup3\n        /* \"#utility.yul\":14839:14858   */\n      mstore\n        /* \"#utility.yul\":14891:14895   */\n      0x20\n        /* \"#utility.yul\":14886:14889   */\n      dup3\n        /* \"#utility.yul\":14882:14896   */\n      add\n        /* \"#utility.yul\":14867:14896   */\n      swap1\n      pop\n        /* \"#utility.yul\":14829:14902   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14908:15004   */\n    tag_440:\n      0x00\n        /* \"#utility.yul\":14974:14998   */\n      tag_515\n        /* \"#utility.yul\":14992:14997   */\n      dup3\n        /* \"#utility.yul\":14974:14998   */\n      tag_516\n      jump\t// in\n    tag_515:\n        /* \"#utility.yul\":14963:14998   */\n      swap1\n      pop\n        /* \"#utility.yul\":14953:15004   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15010:15122   */\n    tag_466:\n      0x00\n        /* \"#utility.yul\":15087:15115   */\n      0xffffffffffffffffffffffffff\n        /* \"#utility.yul\":15080:15085   */\n      dup3\n        /* \"#utility.yul\":15076:15116   */\n      and\n        /* \"#utility.yul\":15065:15116   */\n      swap1\n      pop\n        /* \"#utility.yul\":15055:15122   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15128:15254   */\n    tag_516:\n      0x00\n        /* \"#utility.yul\":15205:15247   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":15198:15203   */\n      dup3\n        /* \"#utility.yul\":15194:15248   */\n      and\n        /* \"#utility.yul\":15183:15248   */\n      swap1\n      pop\n        /* \"#utility.yul\":15173:15254   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15260:15337   */\n    tag_474:\n      0x00\n        /* \"#utility.yul\":15326:15331   */\n      dup2\n        /* \"#utility.yul\":15315:15331   */\n      swap1\n      pop\n        /* \"#utility.yul\":15305:15337   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15343:15438   */\n    tag_478:\n      0x00\n        /* \"#utility.yul\":15419:15431   */\n      0xffffffffff\n        /* \"#utility.yul\":15412:15417   */\n      dup3\n        /* \"#utility.yul\":15408:15432   */\n      and\n        /* \"#utility.yul\":15397:15432   */\n      swap1\n      pop\n        /* \"#utility.yul\":15387:15438   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15444:15530   */\n    tag_482:\n      0x00\n        /* \"#utility.yul\":15519:15523   */\n      0xff\n        /* \"#utility.yul\":15512:15517   */\n      dup3\n        /* \"#utility.yul\":15508:15524   */\n      and\n        /* \"#utility.yul\":15497:15524   */\n      swap1\n      pop\n        /* \"#utility.yul\":15487:15530   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15536:15649   */\n    tag_470:\n      0x00\n        /* \"#utility.yul\":15619:15643   */\n      tag_523\n        /* \"#utility.yul\":15637:15642   */\n      dup3\n        /* \"#utility.yul\":15619:15643   */\n      tag_466\n      jump\t// in\n    tag_523:\n        /* \"#utility.yul\":15606:15643   */\n      swap1\n      pop\n        /* \"#utility.yul\":15596:15649   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15655:15777   */\n    tag_368:\n        /* \"#utility.yul\":15728:15752   */\n      tag_525\n        /* \"#utility.yul\":15746:15751   */\n      dup2\n        /* \"#utility.yul\":15728:15752   */\n      tag_440\n      jump\t// in\n    tag_525:\n        /* \"#utility.yul\":15721:15726   */\n      dup2\n        /* \"#utility.yul\":15718:15753   */\n      eq\n        /* \"#utility.yul\":15708:15710   */\n      tag_526\n      jumpi\n        /* \"#utility.yul\":15767:15768   */\n      0x00\n        /* \"#utility.yul\":15764:15765   */\n      dup1\n        /* \"#utility.yul\":15757:15769   */\n      revert\n        /* \"#utility.yul\":15708:15710   */\n    tag_526:\n        /* \"#utility.yul\":15698:15777   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15783:15905   */\n    tag_382:\n        /* \"#utility.yul\":15856:15880   */\n      tag_528\n        /* \"#utility.yul\":15874:15879   */\n      dup2\n        /* \"#utility.yul\":15856:15880   */\n      tag_474\n      jump\t// in\n    tag_528:\n        /* \"#utility.yul\":15849:15854   */\n      dup2\n        /* \"#utility.yul\":15846:15881   */\n      eq\n        /* \"#utility.yul\":15836:15838   */\n      tag_529\n      jumpi\n        /* \"#utility.yul\":15895:15896   */\n      0x00\n        /* \"#utility.yul\":15892:15893   */\n      dup1\n        /* \"#utility.yul\":15885:15897   */\n      revert\n        /* \"#utility.yul\":15836:15838   */\n    tag_529:\n        /* \"#utility.yul\":15826:15905   */\n      pop\n      jump\t// out\n    stop\n    data_9fbba6c4dcac9134893b633b9564f36435b3f927c1d5fa152c5c14b20cecb1a4 436f6e747261637420696e7374616e63652068617320616c7265616479206265656e20696e697469616c697a6564\n    data_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd 5361666545524332303a204552433230206f7065726174696f6e20646964206e6f742073756363656564\n\n    auxdata: 0xa26469706673582212208ddb6503f8a391f3aa4620a5fb5787cd6782c4c0ca8381ffa562d248171ad38e64736f6c63430007050033\n}\n",
						"bytecode": {
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:1427:13",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "70:80:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "80:22:13",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "95:6:13"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "89:5:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "89:13:13"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "80:5:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "138:5:13"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "111:26:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "111:33:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "111:33:13"
														}
													]
												},
												"name": "abi_decode_t_address_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "48:6:13",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "56:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "64:5:13",
														"type": ""
													}
												],
												"src": "7:143:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "232:93:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "242:22:13",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "257:6:13"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "251:5:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "251:13:13"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "242:5:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "313:5:13"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_contract$_IERC20_$77",
																	"nodeType": "YulIdentifier",
																	"src": "273:39:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "273:46:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "273:46:13"
														}
													]
												},
												"name": "abi_decode_t_contract$_IERC20_$77_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "210:6:13",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "218:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "226:5:13",
														"type": ""
													}
												],
												"src": "156:169:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "438:355:13",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "484:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "493:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "496:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "486:6:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "486:12:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "486:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "459:7:13"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "468:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "455:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "455:23:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "480:2:13",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "451:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "451:32:13"
															},
															"nodeType": "YulIf",
															"src": "448:2:13"
														},
														{
															"nodeType": "YulBlock",
															"src": "510:139:13",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "524:15:13",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "538:1:13",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "528:6:13",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "552:87:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "611:9:13"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "622:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "607:3:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "607:22:13"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "631:7:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_contract$_IERC20_$77_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "562:44:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "562:77:13"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "552:6:13"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "659:127:13",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "673:16:13",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "687:2:13",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "677:6:13",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "702:74:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "748:9:13"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "759:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "744:3:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "744:22:13"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "768:7:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "712:31:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "712:64:13"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "702:6:13"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_contract$_IERC20_$77t_address_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "400:9:13",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "411:7:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "423:6:13",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "431:6:13",
														"type": ""
													}
												],
												"src": "331:462:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "844:51:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "854:35:13",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "883:5:13"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "865:17:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "865:24:13"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "854:7:13"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "826:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "836:7:13",
														"type": ""
													}
												],
												"src": "799:96:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "959:51:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "969:35:13",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "998:5:13"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "980:17:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "980:24:13"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "969:7:13"
																}
															]
														}
													]
												},
												"name": "cleanup_t_contract$_IERC20_$77",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "941:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "951:7:13",
														"type": ""
													}
												],
												"src": "901:109:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1061:81:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1071:65:13",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1086:5:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1093:42:13",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "1082:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "1082:54:13"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "1071:7:13"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1043:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "1053:7:13",
														"type": ""
													}
												],
												"src": "1016:126:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1191:79:13",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1248:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1257:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1260:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1250:6:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1250:12:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1250:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1214:5:13"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "1239:5:13"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nodeType": "YulIdentifier",
																					"src": "1221:17:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1221:24:13"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "1211:2:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1211:35:13"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1204:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "1204:43:13"
															},
															"nodeType": "YulIf",
															"src": "1201:2:13"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1184:5:13",
														"type": ""
													}
												],
												"src": "1148:122:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1332:92:13",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1402:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1411:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1414:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1404:6:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1404:12:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1404:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1355:5:13"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "1393:5:13"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_contract$_IERC20_$77",
																					"nodeType": "YulIdentifier",
																					"src": "1362:30:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1362:37:13"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "1352:2:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1352:48:13"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1345:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "1345:56:13"
															},
															"nodeType": "YulIf",
															"src": "1342:2:13"
														}
													]
												},
												"name": "validator_revert_t_contract$_IERC20_$77",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1325:5:13",
														"type": ""
													}
												],
												"src": "1276:148:13"
											}
										]
									},
									"contents": "{\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_t_contract$_IERC20_$77_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_contract$_IERC20_$77(value)\n    }\n\n    function abi_decode_tuple_t_contract$_IERC20_$77t_address_fromMemory(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n\n        {\n            let offset := 0\n            value0 := abi_decode_t_contract$_IERC20_$77_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n            let offset := 32\n            value1 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_contract$_IERC20_$77(value) -> cleaned {\n        cleaned := cleanup_t_address(value)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_contract$_IERC20_$77(value) {\n        if iszero(eq(value, cleanup_t_contract$_IERC20_$77(value))) { revert(0, 0) }\n    }\n\n}\n",
									"id": 13,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "60c0604052600080553480156200001557600080fd5b506040516200313b3803806200313b83398181016040528101906200003b9190620000e5565b8181808073ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff1660601b81525050508173ffffffffffffffffffffffffffffffffffffffff1660a08173ffffffffffffffffffffffffffffffffffffffff1660601b8152505050505050620001a2565b600081519050620000c8816200016e565b92915050565b600081519050620000df8162000188565b92915050565b60008060408385031215620000f957600080fd5b60006200010985828601620000ce565b92505060206200011c85828601620000b7565b9150509250929050565b600062000133826200014e565b9050919050565b6000620001478262000126565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b620001798162000126565b81146200018557600080fd5b50565b62000193816200013a565b81146200019f57600080fd5b50565b60805160601c60a05160601c612f56620001e5600039806110bb5280611e425250806108215280610b3e52806111fb52806112c552806113da5250612f566000f3fe608060405234801561001057600080fd5b50600436106101425760003560e01c8063919cd40f116100b8578063cc69afec1161007c578063cc69afec146103b1578063dde43cba146103cf578063e23ddec5146103ed578063f11b81881461040b578063f5bb3e021461043d578063f5cf673b1461045957610142565b8063919cd40f1461031d57806399248ea71461033b578063aaf5eb6814610359578063c4d66de814610377578063cbcbb5071461039357610142565b806339ccbdd31161010a57806339ccbdd31461022557806341485304146102415780636d34b96e1461027157806374d945ec146102a157806379f171b2146102d15780638b599f26146102ed57610142565b80631652e7b714610147578063198fa81e146101795780633111e7b3146101a957806331873e2e146101d95780633373ee4c146101f5575b600080fd5b610161600480360381019061015c91906126b7565b610475565b60405161017093929190612db2565b60405180910390f35b610193600480360381019061018e91906126b7565b6105c1565b6040516101a09190612d97565b60405180910390f35b6101c360048036038101906101be9190612890565b61060a565b6040516101d09190612d97565b60405180910390f35b6101f360048036038101906101ee919061271c565b610693565b005b61020f600480360381019061020a91906126e0565b610795565b60405161021c9190612d97565b60405180910390f35b61023f600480360381019061023a919061297c565b61081f565b005b61025b60048036038101906102569190612838565b6108ee565b6040516102689190612d97565b60405180910390f35b61028b600480360381019061028691906128fc565b610907565b6040516102989190612d97565b60405180910390f35b6102bb60048036038101906102b691906126b7565b610ad3565b6040516102c89190612c4a565b60405180910390f35b6102eb60048036038101906102e691906127c3565b610b3c565b005b6103076004803603810190610302919061276b565b610e80565b6040516103149190612d97565b60405180910390f35b6103256110af565b6040516103329190612d97565b60405180910390f35b6103436110b9565b6040516103509190612c4a565b60405180910390f35b6103616110dd565b60405161036e9190612de9565b60405180910390f35b610391600480360381019061038c91906126b7565b6110e2565b005b61039b6111f9565b6040516103a89190612c4a565b60405180910390f35b6103b961121d565b6040516103c69190612d97565b60405180910390f35b6103d7611227565b6040516103e49190612d97565b60405180910390f35b6103f561122c565b6040516104029190612c4a565b60405180910390f35b610425600480360381019061042091906126b7565b611256565b60405161043493929190612d60565b60405180910390f35b610457600480360381019061045291906126b7565b6112c3565b005b610473600480360381019061046e91906126e0565b6113d8565b005b6000806000603360008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600001600d9054906101000a90046cffffffffffffffffffffffffff16603360008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160009054906101000a90046cffffffffffffffffffffffffff16603360008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600001601a9054906101000a900464ffffffffff16826cffffffffffffffffffffffffff169250816cffffffffffffffffffffffffff1691508064ffffffffff1690509250925092509193909250565b6000603560008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b60008073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16141561067b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161067290612c85565b60405180910390fd5b610689858585333387611542565b9050949350505050565b60006106a1843384866118e0565b90506000811461078f576106fd81603560008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054611a5290919063ffffffff16565b603560008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508373ffffffffffffffffffffffffffffffffffffffff167f2468f9268c60ad90e2d49edb0032c8a001e733ae888b3ab8e982edf535be1a76826040516107869190612d97565b60405180910390a25b50505050565b6000603360008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146108ad576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108a490612d05565b60405180910390fd5b806034819055507f1cc1849a6602c3e91f2088cadea4381cc5717f2f28584197060ed2ebb434c16f816040516108e39190612d97565b60405180910390a150565b60006108fe848484333333611542565b90509392505050565b600033838173ffffffffffffffffffffffffffffffffffffffff16603660008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16146109d8576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109cf90612d25565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff161415610a48576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a3f90612c65565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff161415610ab8576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610aaf90612c85565b60405180910390fd5b610ac6888888338989611542565b9250505095945050505050565b6000603660008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610bca576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610bc190612d05565b60405180910390fd5b818190508484905014610c12576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c0990612ca5565b60405180910390fd5b60608484905067ffffffffffffffff81118015610c2e57600080fd5b50604051908082528060200260200182016040528015610c6857816020015b610c55612567565b815260200190600190039081610c4d5790505b50905060005b85859050811015610e6f57838382818110610c8557fe5b90506020020135848483818110610c9857fe5b905060200201356cffffffffffffffffffffffffff1614610cee576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ce590612cc5565b60405180910390fd5b858582818110610cfa57fe5b9050602002016020810190610d0f91906126b7565b828281518110610d1b57fe5b60200260200101516040019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff1681525050838382818110610d6557fe5b90506020020135828281518110610d7857fe5b6020026020010151600001906cffffffffffffffffffffffffff1690816cffffffffffffffffffffffffff1681525050858582818110610db457fe5b9050602002016020810190610dc991906126b7565b73ffffffffffffffffffffffffffffffffffffffff1663b1bf962d6040518163ffffffff1660e01b815260040160206040518083038186803b158015610e0e57600080fd5b505afa158015610e22573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e4691906129a5565b828281518110610e5257fe5b602002602001015160200181815250508080600101915050610c6e565b50610e7981611a6c565b5050505050565b600080603560008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905060608585905067ffffffffffffffff81118015610ee157600080fd5b50604051908082528060200260200182016040528015610f1b57816020015b610f086125ad565b815260200190600190039081610f005790505b50905060005b8686905081101561108457868682818110610f3857fe5b9050602002016020810190610f4d91906126b7565b828281518110610f5957fe5b60200260200101516000019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff1681525050868682818110610fa357fe5b9050602002016020810190610fb891906126b7565b73ffffffffffffffffffffffffffffffffffffffff16630afbcdc9866040518263ffffffff1660e01b8152600401610ff09190612c4a565b604080518083038186803b15801561100757600080fd5b505afa15801561101b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061103f91906129ce565b83838151811061104b57fe5b602002602001015160200184848151811061106257fe5b6020026020010151604001828152508281525050508080600101915050610f21565b506110a16110928583611be6565b83611a5290919063ffffffff16565b915081925050509392505050565b6000603454905090565b7f000000000000000000000000000000000000000000000000000000000000000081565b601281565b60006110ec611d7f565b90506000548111611148576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602e815260200180612ec9602e913960400191505060405180910390fd5b8060008190555081603760006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550603760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f28a48cbce43190d77247f342cf319b1607bff4ef716cf26b76cf7bb71baebaa560405160405180910390a25050565b7f000000000000000000000000000000000000000000000000000000000000000081565b6000603454905090565b600181565b6000603760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60336020528060005260406000206000915090508060000160009054906101000a90046cffffffffffffffffffffffffff169080600001600d9054906101000a90046cffffffffffffffffffffffffff169080600001601a9054906101000a900464ffffffffff16905083565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614611351576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161134890612d05565b60405180910390fd5b80603760006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508073ffffffffffffffffffffffffffffffffffffffff167f28a48cbce43190d77247f342cf319b1607bff4ef716cf26b76cf7bb71baebaa560405160405180910390a250565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614611466576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161145d90612d05565b60405180910390fd5b80603660008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167f4925eafc82d0c4d67889898eeed64b18488ab19811e61620f387026dec126a2860405160405180910390a35050565b60008085141561155557600090506118d6565b6000603560008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050808611156117de5760608888905067ffffffffffffffff811180156115bd57600080fd5b506040519080825280602002602001820160405280156115f757816020015b6115e46125ad565b8152602001906001900390816115dc5790505b50905060005b898990508110156117605789898281811061161457fe5b905060200201602081019061162991906126b7565b82828151811061163557fe5b60200260200101516000019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff168152505089898281811061167f57fe5b905060200201602081019061169491906126b7565b73ffffffffffffffffffffffffffffffffffffffff16630afbcdc9876040518263ffffffff1660e01b81526004016116cc9190612c4a565b604080518083038186803b1580156116e357600080fd5b505afa1580156116f7573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061171b91906129ce565b83838151811061172757fe5b602002602001015160200184848151811061173e57fe5b60200260200101516040018281525082815250505080806001019150506115fd565b50600061176d8683611d88565b9050600081146117db5761178a8184611a5290919063ffffffff16565b92508573ffffffffffffffffffffffffffffffffffffffff167f2468f9268c60ad90e2d49edb0032c8a001e733ae888b3ab8e982edf535be1a76826040516117d29190612d97565b60405180910390a25b50505b60008114156117f15760009150506118d6565b60008187116118005786611802565b815b9050808203603560008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055506118548482611e18565b8573ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff168673ffffffffffffffffffffffffffffffffffffffff167f5637d7f962248a7f05a7ab69eec6446e31f3d0a299d997f135a65c62806e7891846040516118c89190612d97565b60405180910390a480925050505b9695505050505050565b600080603360008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020905060008160010160008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050600080611978888588611e8b565b9050808314611a4357600087146119975761199487828561207e565b91505b808460010160008b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508773ffffffffffffffffffffffffffffffffffffffff168973ffffffffffffffffffffffffffffffffffffffff167fbb123b5c06d5408bbea3c4fef481578175cfb432e3b482c6186f02ed9086585b83604051611a3a9190612d97565b60405180910390a35b81945050505050949350505050565b6000828284019150811015611a6657600080fd5b92915050565b60005b8151811015611be257600060336000848481518110611a8a57fe5b60200260200101516040015173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000209050611b0b838381518110611ae157fe5b60200260200101516040015182858581518110611afa57fe5b602002602001015160200151611e8b565b50828281518110611b1857fe5b6020026020010151600001518160000160006101000a8154816cffffffffffffffffffffffffff02191690836cffffffffffffffffffffffffff160217905550828281518110611b6457fe5b60200260200101516040015173ffffffffffffffffffffffffffffffffffffffff167f87fa03892a0556cb6b8f97e6d533a150d4d55fcbf275fff5fa003fa636bcc7fa848481518110611bb357fe5b602002602001015160000151604051611bcc9190612d45565b60405180910390a2508080600101915050611a6f565b5050565b6000806000905060005b8351811015611d7457600060336000868481518110611c0b57fe5b60200260200101516000015173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002090506000611cec82600001600d9054906101000a90046cffffffffffffffffffffffffff166cffffffffffffffffffffffffff168360000160009054906101000a90046cffffffffffffffffffffffffff166cffffffffffffffffffffffffff1684600001601a9054906101000a900464ffffffffff1664ffffffffff16898781518110611cdb57fe5b6020026020010151604001516120be565b9050611d63611d54878581518110611d0057fe5b602002602001015160200151838560010160008c73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461207e565b85611a5290919063ffffffff16565b935050508080600101915050611bf0565b508091505092915050565b60006001905090565b6000806000905060005b8351811015611e0d57611dfe611def86868481518110611dae57fe5b602002602001015160000151878581518110611dc657fe5b602002602001015160200151888681518110611dde57fe5b6020026020010151604001516118e0565b83611a5290919063ffffffff16565b91508080600101915050611d92565b508091505092915050565b611e87603760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1683837f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166121b6909392919063ffffffff16565b5050565b60008083600001600d9054906101000a90046cffffffffffffffffffffffffff166cffffffffffffffffffffffffff16905060008460000160009054906101000a90046cffffffffffffffffffffffffff166cffffffffffffffffffffffffff169050600085600001601a9054906101000a900464ffffffffff1664ffffffffff169050806fffffffffffffffffffffffffffffffff16421415611f3457829350505050612077565b6000611f42848484896120be565b90508381146120495780816cffffffffffffffffffffffffff1614611f9c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611f9390612ce5565b60405180910390fd5b8087600001600d6101000a8154816cffffffffffffffffffffffffff02191690836cffffffffffffffffffffffffff1602179055504287600001601a6101000a81548164ffffffffff021916908364ffffffffff1602179055508773ffffffffffffffffffffffffffffffffffffffff167f5777ca300dfe5bead41006fbce4389794dbc0ed8d6cccebfaf94630aa04184bc8260405161203c9190612d97565b60405180910390a261206f565b4287600001601a6101000a81548164ffffffffff021916908364ffffffffff1602179055505b809450505050505b9392505050565b6000601260ff16600a0a6120ad61209e848661227790919063ffffffff16565b8661229190919063ffffffff16565b816120b457fe5b0490509392505050565b600080603454905060008514806120d55750600083145b806120f1575042846fffffffffffffffffffffffffffffffff16145b8061210e575080846fffffffffffffffffffffffffffffffff1610155b1561211c57859150506121ae565b600081421161212b574261212d565b815b90506000612156866fffffffffffffffffffffffffffffffff168361227790919063ffffffff16565b90506121a88861219a8761218c601260ff16600a0a61217e878e61229190919063ffffffff16565b61229190919063ffffffff16565b6122bd90919063ffffffff16565b611a5290919063ffffffff16565b93505050505b949350505050565b612271846323b872dd60e01b858585604051602401808473ffffffffffffffffffffffffffffffffffffffff1681526020018373ffffffffffffffffffffffffffffffffffffffff1681526020018281526020019350505050604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff83818316178352505050506122d1565b50505050565b600082828403915081111561228b57600080fd5b92915050565b6000808314806122ae57508183838502925082816122ab57fe5b04145b6122b757600080fd5b92915050565b60008183816122c857fe5b04905092915050565b6122f08273ffffffffffffffffffffffffffffffffffffffff1661251c565b612362576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601f8152602001807f5361666545524332303a2063616c6c20746f206e6f6e2d636f6e74726163740081525060200191505060405180910390fd5b600060608373ffffffffffffffffffffffffffffffffffffffff16836040518082805190602001908083835b602083106123b1578051825260208201915060208101905060208303925061238e565b6001836020036101000a0380198251168184511680821785525050505050509050019150506000604051808303816000865af19150503d8060008114612413576040519150601f19603f3d011682016040523d82523d6000602084013e612418565b606091505b509150915081612490576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c656481525060200191505060405180910390fd5b600081511115612516578080602001905160208110156124af57600080fd5b8101908080519060200190929190505050612515576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602a815260200180612ef7602a913960400191505060405180910390fd5b5b50505050565b60008060007fc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a47060001b9050833f915080821415801561255e57506000801b8214155b92505050919050565b604051806060016040528060006cffffffffffffffffffffffffff16815260200160008152602001600073ffffffffffffffffffffffffffffffffffffffff1681525090565b6040518060600160405280600073ffffffffffffffffffffffffffffffffffffffff16815260200160008152602001600081525090565b6000813590506125f381612e9a565b92915050565b60008083601f84011261260b57600080fd5b8235905067ffffffffffffffff81111561262457600080fd5b60208301915083602082028301111561263c57600080fd5b9250929050565b60008083601f84011261265557600080fd5b8235905067ffffffffffffffff81111561266e57600080fd5b60208301915083602082028301111561268657600080fd5b9250929050565b60008135905061269c81612eb1565b92915050565b6000815190506126b181612eb1565b92915050565b6000602082840312156126c957600080fd5b60006126d7848285016125e4565b91505092915050565b600080604083850312156126f357600080fd5b6000612701858286016125e4565b9250506020612712858286016125e4565b9150509250929050565b60008060006060848603121561273157600080fd5b600061273f868287016125e4565b93505060206127508682870161268d565b92505060406127618682870161268d565b9150509250925092565b60008060006040848603121561278057600080fd5b600084013567ffffffffffffffff81111561279a57600080fd5b6127a6868287016125f9565b935093505060206127b9868287016125e4565b9150509250925092565b600080600080604085870312156127d957600080fd5b600085013567ffffffffffffffff8111156127f357600080fd5b6127ff878288016125f9565b9450945050602085013567ffffffffffffffff81111561281e57600080fd5b61282a87828801612643565b925092505092959194509250565b60008060006040848603121561284d57600080fd5b600084013567ffffffffffffffff81111561286757600080fd5b612873868287016125f9565b935093505060206128868682870161268d565b9150509250925092565b600080600080606085870312156128a657600080fd5b600085013567ffffffffffffffff8111156128c057600080fd5b6128cc878288016125f9565b945094505060206128df8782880161268d565b92505060406128f0878288016125e4565b91505092959194509250565b60008060008060006080868803121561291457600080fd5b600086013567ffffffffffffffff81111561292e57600080fd5b61293a888289016125f9565b9550955050602061294d8882890161268d565b935050604061295e888289016125e4565b925050606061296f888289016125e4565b9150509295509295909350565b60006020828403121561298e57600080fd5b600061299c8482850161268d565b91505092915050565b6000602082840312156129b757600080fd5b60006129c5848285016126a2565b91505092915050565b600080604083850312156129e157600080fd5b60006129ef858286016126a2565b9250506020612a00858286016126a2565b9150509250929050565b612a1381612e15565b82525050565b6000612a26601483612e04565b91507f494e56414c49445f555345525f414444524553530000000000000000000000006000830152602082019050919050565b6000612a66601283612e04565b91507f494e56414c49445f544f5f4144445245535300000000000000000000000000006000830152602082019050919050565b6000612aa6601583612e04565b91507f494e56414c49445f434f4e46494755524154494f4e00000000000000000000006000830152602082019050919050565b6000612ae6602483612e04565b91507f496e646578206f766572666c6f7720617420656d697373696f6e73506572536560008301527f636f6e64000000000000000000000000000000000000000000000000000000006020830152604082019050919050565b6000612b4c600e83612e04565b91507f496e646578206f766572666c6f770000000000000000000000000000000000006000830152602082019050919050565b6000612b8c601583612e04565b91507f4f4e4c595f454d495353494f4e5f4d414e4147455200000000000000000000006000830152602082019050919050565b6000612bcc601483612e04565b91507f434c41494d45525f554e415554484f52495a45440000000000000000000000006000830152602082019050919050565b612c0881612e27565b82525050565b612c1781612e88565b82525050565b612c2681612e60565b82525050565b612c3581612e6a565b82525050565b612c4481612e7b565b82525050565b6000602082019050612c5f6000830184612a0a565b92915050565b60006020820190508181036000830152612c7e81612a19565b9050919050565b60006020820190508181036000830152612c9e81612a59565b9050919050565b60006020820190508181036000830152612cbe81612a99565b9050919050565b60006020820190508181036000830152612cde81612ad9565b9050919050565b60006020820190508181036000830152612cfe81612b3f565b9050919050565b60006020820190508181036000830152612d1e81612b7f565b9050919050565b60006020820190508181036000830152612d3e81612bbf565b9050919050565b6000602082019050612d5a6000830184612c0e565b92915050565b6000606082019050612d756000830186612bff565b612d826020830185612bff565b612d8f6040830184612c2c565b949350505050565b6000602082019050612dac6000830184612c1d565b92915050565b6000606082019050612dc76000830186612c1d565b612dd46020830185612c1d565b612de16040830184612c1d565b949350505050565b6000602082019050612dfe6000830184612c3b565b92915050565b600082825260208201905092915050565b6000612e2082612e40565b9050919050565b60006cffffffffffffffffffffffffff82169050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600064ffffffffff82169050919050565b600060ff82169050919050565b6000612e9382612e27565b9050919050565b612ea381612e15565b8114612eae57600080fd5b50565b612eba81612e60565b8114612ec557600080fd5b5056fe436f6e747261637420696e7374616e63652068617320616c7265616479206265656e20696e697469616c697a65645361666545524332303a204552433230206f7065726174696f6e20646964206e6f742073756363656564a26469706673582212208ddb6503f8a391f3aa4620a5fb5787cd6782c4c0ca8381ffa562d248171ad38e64736f6c63430007050033",
							"opcodes": "PUSH1 0xC0 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 SSTORE CALLVALUE DUP1 ISZERO PUSH3 0x15 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x313B CODESIZE SUB DUP1 PUSH3 0x313B DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH3 0x3B SWAP2 SWAP1 PUSH3 0xE5 JUMP JUMPDEST DUP2 DUP2 DUP1 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x80 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x60 SHL DUP2 MSTORE POP POP POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0xA0 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x60 SHL DUP2 MSTORE POP POP POP POP POP POP PUSH3 0x1A2 JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH3 0xC8 DUP2 PUSH3 0x16E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH3 0xDF DUP2 PUSH3 0x188 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH3 0xF9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH3 0x109 DUP6 DUP3 DUP7 ADD PUSH3 0xCE JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH3 0x11C DUP6 DUP3 DUP7 ADD PUSH3 0xB7 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x133 DUP3 PUSH3 0x14E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x147 DUP3 PUSH3 0x126 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x179 DUP2 PUSH3 0x126 JUMP JUMPDEST DUP2 EQ PUSH3 0x185 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH3 0x193 DUP2 PUSH3 0x13A JUMP JUMPDEST DUP2 EQ PUSH3 0x19F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x80 MLOAD PUSH1 0x60 SHR PUSH1 0xA0 MLOAD PUSH1 0x60 SHR PUSH2 0x2F56 PUSH3 0x1E5 PUSH1 0x0 CODECOPY DUP1 PUSH2 0x10BB MSTORE DUP1 PUSH2 0x1E42 MSTORE POP DUP1 PUSH2 0x821 MSTORE DUP1 PUSH2 0xB3E MSTORE DUP1 PUSH2 0x11FB MSTORE DUP1 PUSH2 0x12C5 MSTORE DUP1 PUSH2 0x13DA MSTORE POP PUSH2 0x2F56 PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x142 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x919CD40F GT PUSH2 0xB8 JUMPI DUP1 PUSH4 0xCC69AFEC GT PUSH2 0x7C JUMPI DUP1 PUSH4 0xCC69AFEC EQ PUSH2 0x3B1 JUMPI DUP1 PUSH4 0xDDE43CBA EQ PUSH2 0x3CF JUMPI DUP1 PUSH4 0xE23DDEC5 EQ PUSH2 0x3ED JUMPI DUP1 PUSH4 0xF11B8188 EQ PUSH2 0x40B JUMPI DUP1 PUSH4 0xF5BB3E02 EQ PUSH2 0x43D JUMPI DUP1 PUSH4 0xF5CF673B EQ PUSH2 0x459 JUMPI PUSH2 0x142 JUMP JUMPDEST DUP1 PUSH4 0x919CD40F EQ PUSH2 0x31D JUMPI DUP1 PUSH4 0x99248EA7 EQ PUSH2 0x33B JUMPI DUP1 PUSH4 0xAAF5EB68 EQ PUSH2 0x359 JUMPI DUP1 PUSH4 0xC4D66DE8 EQ PUSH2 0x377 JUMPI DUP1 PUSH4 0xCBCBB507 EQ PUSH2 0x393 JUMPI PUSH2 0x142 JUMP JUMPDEST DUP1 PUSH4 0x39CCBDD3 GT PUSH2 0x10A JUMPI DUP1 PUSH4 0x39CCBDD3 EQ PUSH2 0x225 JUMPI DUP1 PUSH4 0x41485304 EQ PUSH2 0x241 JUMPI DUP1 PUSH4 0x6D34B96E EQ PUSH2 0x271 JUMPI DUP1 PUSH4 0x74D945EC EQ PUSH2 0x2A1 JUMPI DUP1 PUSH4 0x79F171B2 EQ PUSH2 0x2D1 JUMPI DUP1 PUSH4 0x8B599F26 EQ PUSH2 0x2ED JUMPI PUSH2 0x142 JUMP JUMPDEST DUP1 PUSH4 0x1652E7B7 EQ PUSH2 0x147 JUMPI DUP1 PUSH4 0x198FA81E EQ PUSH2 0x179 JUMPI DUP1 PUSH4 0x3111E7B3 EQ PUSH2 0x1A9 JUMPI DUP1 PUSH4 0x31873E2E EQ PUSH2 0x1D9 JUMPI DUP1 PUSH4 0x3373EE4C EQ PUSH2 0x1F5 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x161 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x15C SWAP2 SWAP1 PUSH2 0x26B7 JUMP JUMPDEST PUSH2 0x475 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x170 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2DB2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x193 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x18E SWAP2 SWAP1 PUSH2 0x26B7 JUMP JUMPDEST PUSH2 0x5C1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1A0 SWAP2 SWAP1 PUSH2 0x2D97 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1C3 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1BE SWAP2 SWAP1 PUSH2 0x2890 JUMP JUMPDEST PUSH2 0x60A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1D0 SWAP2 SWAP1 PUSH2 0x2D97 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1F3 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1EE SWAP2 SWAP1 PUSH2 0x271C JUMP JUMPDEST PUSH2 0x693 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x20F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x20A SWAP2 SWAP1 PUSH2 0x26E0 JUMP JUMPDEST PUSH2 0x795 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x21C SWAP2 SWAP1 PUSH2 0x2D97 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x23F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x23A SWAP2 SWAP1 PUSH2 0x297C JUMP JUMPDEST PUSH2 0x81F JUMP JUMPDEST STOP JUMPDEST PUSH2 0x25B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x256 SWAP2 SWAP1 PUSH2 0x2838 JUMP JUMPDEST PUSH2 0x8EE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x268 SWAP2 SWAP1 PUSH2 0x2D97 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x28B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x286 SWAP2 SWAP1 PUSH2 0x28FC JUMP JUMPDEST PUSH2 0x907 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x298 SWAP2 SWAP1 PUSH2 0x2D97 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2BB PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2B6 SWAP2 SWAP1 PUSH2 0x26B7 JUMP JUMPDEST PUSH2 0xAD3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2C8 SWAP2 SWAP1 PUSH2 0x2C4A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2EB PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2E6 SWAP2 SWAP1 PUSH2 0x27C3 JUMP JUMPDEST PUSH2 0xB3C JUMP JUMPDEST STOP JUMPDEST PUSH2 0x307 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x302 SWAP2 SWAP1 PUSH2 0x276B JUMP JUMPDEST PUSH2 0xE80 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x314 SWAP2 SWAP1 PUSH2 0x2D97 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x325 PUSH2 0x10AF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x332 SWAP2 SWAP1 PUSH2 0x2D97 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x343 PUSH2 0x10B9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x350 SWAP2 SWAP1 PUSH2 0x2C4A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x361 PUSH2 0x10DD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x36E SWAP2 SWAP1 PUSH2 0x2DE9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x391 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x38C SWAP2 SWAP1 PUSH2 0x26B7 JUMP JUMPDEST PUSH2 0x10E2 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x39B PUSH2 0x11F9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3A8 SWAP2 SWAP1 PUSH2 0x2C4A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3B9 PUSH2 0x121D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3C6 SWAP2 SWAP1 PUSH2 0x2D97 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3D7 PUSH2 0x1227 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3E4 SWAP2 SWAP1 PUSH2 0x2D97 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3F5 PUSH2 0x122C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x402 SWAP2 SWAP1 PUSH2 0x2C4A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x425 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x420 SWAP2 SWAP1 PUSH2 0x26B7 JUMP JUMPDEST PUSH2 0x1256 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x434 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2D60 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x457 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x452 SWAP2 SWAP1 PUSH2 0x26B7 JUMP JUMPDEST PUSH2 0x12C3 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x473 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x46E SWAP2 SWAP1 PUSH2 0x26E0 JUMP JUMPDEST PUSH2 0x13D8 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x33 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0xD SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH13 0xFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x33 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH13 0xFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x33 PUSH1 0x0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x1A SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH5 0xFFFFFFFFFF AND DUP3 PUSH13 0xFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP3 POP DUP2 PUSH13 0xFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP2 POP DUP1 PUSH5 0xFFFFFFFFFF AND SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 POP SWAP2 SWAP4 SWAP1 SWAP3 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x35 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x67B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x672 SWAP1 PUSH2 0x2C85 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x689 DUP6 DUP6 DUP6 CALLER CALLER DUP8 PUSH2 0x1542 JUMP JUMPDEST SWAP1 POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x6A1 DUP5 CALLER DUP5 DUP7 PUSH2 0x18E0 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 EQ PUSH2 0x78F JUMPI PUSH2 0x6FD DUP2 PUSH1 0x35 PUSH1 0x0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x1A52 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x35 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x2468F9268C60AD90E2D49EDB0032C8A001E733AE888B3AB8E982EDF535BE1A76 DUP3 PUSH1 0x40 MLOAD PUSH2 0x786 SWAP2 SWAP1 PUSH2 0x2D97 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x33 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x8AD JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8A4 SWAP1 PUSH2 0x2D05 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x34 DUP2 SWAP1 SSTORE POP PUSH32 0x1CC1849A6602C3E91F2088CADEA4381CC5717F2F28584197060ED2EBB434C16F DUP2 PUSH1 0x40 MLOAD PUSH2 0x8E3 SWAP2 SWAP1 PUSH2 0x2D97 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x8FE DUP5 DUP5 DUP5 CALLER CALLER CALLER PUSH2 0x1542 JUMP JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 CALLER DUP4 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x36 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x9D8 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9CF SWAP1 PUSH2 0x2D25 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0xA48 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA3F SWAP1 PUSH2 0x2C65 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0xAB8 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xAAF SWAP1 PUSH2 0x2C85 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xAC6 DUP9 DUP9 DUP9 CALLER DUP10 DUP10 PUSH2 0x1542 JUMP JUMPDEST SWAP3 POP POP POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x36 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xBCA JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xBC1 SWAP1 PUSH2 0x2D05 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SWAP1 POP DUP5 DUP5 SWAP1 POP EQ PUSH2 0xC12 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC09 SWAP1 PUSH2 0x2CA5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x60 DUP5 DUP5 SWAP1 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP1 ISZERO PUSH2 0xC2E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0xC68 JUMPI DUP2 PUSH1 0x20 ADD JUMPDEST PUSH2 0xC55 PUSH2 0x2567 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 SWAP1 SUB SWAP1 DUP2 PUSH2 0xC4D JUMPI SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 JUMPDEST DUP6 DUP6 SWAP1 POP DUP2 LT ISZERO PUSH2 0xE6F JUMPI DUP4 DUP4 DUP3 DUP2 DUP2 LT PUSH2 0xC85 JUMPI INVALID JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD CALLDATALOAD DUP5 DUP5 DUP4 DUP2 DUP2 LT PUSH2 0xC98 JUMPI INVALID JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD CALLDATALOAD PUSH13 0xFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xCEE JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xCE5 SWAP1 PUSH2 0x2CC5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP6 DUP6 DUP3 DUP2 DUP2 LT PUSH2 0xCFA JUMPI INVALID JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0xD0F SWAP2 SWAP1 PUSH2 0x26B7 JUMP JUMPDEST DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0xD1B JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x40 ADD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP DUP4 DUP4 DUP3 DUP2 DUP2 LT PUSH2 0xD65 JUMPI INVALID JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD CALLDATALOAD DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0xD78 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x0 ADD SWAP1 PUSH13 0xFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP2 PUSH13 0xFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP DUP6 DUP6 DUP3 DUP2 DUP2 LT PUSH2 0xDB4 JUMPI INVALID JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0xDC9 SWAP2 SWAP1 PUSH2 0x26B7 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xB1BF962D PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xE0E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xE22 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xE46 SWAP2 SWAP1 PUSH2 0x29A5 JUMP JUMPDEST DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0xE52 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x20 ADD DUP2 DUP2 MSTORE POP POP DUP1 DUP1 PUSH1 0x1 ADD SWAP2 POP POP PUSH2 0xC6E JUMP JUMPDEST POP PUSH2 0xE79 DUP2 PUSH2 0x1A6C JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x35 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP PUSH1 0x60 DUP6 DUP6 SWAP1 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP1 ISZERO PUSH2 0xEE1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0xF1B JUMPI DUP2 PUSH1 0x20 ADD JUMPDEST PUSH2 0xF08 PUSH2 0x25AD JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 SWAP1 SUB SWAP1 DUP2 PUSH2 0xF00 JUMPI SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 JUMPDEST DUP7 DUP7 SWAP1 POP DUP2 LT ISZERO PUSH2 0x1084 JUMPI DUP7 DUP7 DUP3 DUP2 DUP2 LT PUSH2 0xF38 JUMPI INVALID JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0xF4D SWAP2 SWAP1 PUSH2 0x26B7 JUMP JUMPDEST DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0xF59 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x0 ADD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP DUP7 DUP7 DUP3 DUP2 DUP2 LT PUSH2 0xFA3 JUMPI INVALID JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0xFB8 SWAP2 SWAP1 PUSH2 0x26B7 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xAFBCDC9 DUP7 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xFF0 SWAP2 SWAP1 PUSH2 0x2C4A JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1007 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x101B JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x103F SWAP2 SWAP1 PUSH2 0x29CE JUMP JUMPDEST DUP4 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x104B JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x20 ADD DUP5 DUP5 DUP2 MLOAD DUP2 LT PUSH2 0x1062 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x40 ADD DUP3 DUP2 MSTORE POP DUP3 DUP2 MSTORE POP POP POP DUP1 DUP1 PUSH1 0x1 ADD SWAP2 POP POP PUSH2 0xF21 JUMP JUMPDEST POP PUSH2 0x10A1 PUSH2 0x1092 DUP6 DUP4 PUSH2 0x1BE6 JUMP JUMPDEST DUP4 PUSH2 0x1A52 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP2 POP DUP2 SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x34 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0x12 DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x10EC PUSH2 0x1D7F JUMP JUMPDEST SWAP1 POP PUSH1 0x0 SLOAD DUP2 GT PUSH2 0x1148 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x2E DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x2EC9 PUSH1 0x2E SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x0 DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x37 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x37 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x28A48CBCE43190D77247F342CF319B1607BFF4EF716CF26B76CF7BB71BAEBAA5 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x34 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x1 DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x37 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x33 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP DUP1 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH13 0xFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP1 PUSH1 0x0 ADD PUSH1 0xD SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH13 0xFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP1 PUSH1 0x0 ADD PUSH1 0x1A SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH5 0xFFFFFFFFFF AND SWAP1 POP DUP4 JUMP JUMPDEST PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1351 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1348 SWAP1 PUSH2 0x2D05 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x37 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x28A48CBCE43190D77247F342CF319B1607BFF4EF716CF26B76CF7BB71BAEBAA5 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP JUMP JUMPDEST PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1466 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x145D SWAP1 PUSH2 0x2D05 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x36 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x4925EAFC82D0C4D67889898EEED64B18488AB19811E61620F387026DEC126A28 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP6 EQ ISZERO PUSH2 0x1555 JUMPI PUSH1 0x0 SWAP1 POP PUSH2 0x18D6 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x35 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP DUP1 DUP7 GT ISZERO PUSH2 0x17DE JUMPI PUSH1 0x60 DUP9 DUP9 SWAP1 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP1 ISZERO PUSH2 0x15BD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x15F7 JUMPI DUP2 PUSH1 0x20 ADD JUMPDEST PUSH2 0x15E4 PUSH2 0x25AD JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 SWAP1 SUB SWAP1 DUP2 PUSH2 0x15DC JUMPI SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 JUMPDEST DUP10 DUP10 SWAP1 POP DUP2 LT ISZERO PUSH2 0x1760 JUMPI DUP10 DUP10 DUP3 DUP2 DUP2 LT PUSH2 0x1614 JUMPI INVALID JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x1629 SWAP2 SWAP1 PUSH2 0x26B7 JUMP JUMPDEST DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x1635 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x0 ADD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP DUP10 DUP10 DUP3 DUP2 DUP2 LT PUSH2 0x167F JUMPI INVALID JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x1694 SWAP2 SWAP1 PUSH2 0x26B7 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xAFBCDC9 DUP8 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x16CC SWAP2 SWAP1 PUSH2 0x2C4A JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x16E3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x16F7 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x171B SWAP2 SWAP1 PUSH2 0x29CE JUMP JUMPDEST DUP4 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x1727 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x20 ADD DUP5 DUP5 DUP2 MLOAD DUP2 LT PUSH2 0x173E JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x40 ADD DUP3 DUP2 MSTORE POP DUP3 DUP2 MSTORE POP POP POP DUP1 DUP1 PUSH1 0x1 ADD SWAP2 POP POP PUSH2 0x15FD JUMP JUMPDEST POP PUSH1 0x0 PUSH2 0x176D DUP7 DUP4 PUSH2 0x1D88 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 EQ PUSH2 0x17DB JUMPI PUSH2 0x178A DUP2 DUP5 PUSH2 0x1A52 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP3 POP DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x2468F9268C60AD90E2D49EDB0032C8A001E733AE888B3AB8E982EDF535BE1A76 DUP3 PUSH1 0x40 MLOAD PUSH2 0x17D2 SWAP2 SWAP1 PUSH2 0x2D97 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 JUMPDEST POP POP JUMPDEST PUSH1 0x0 DUP2 EQ ISZERO PUSH2 0x17F1 JUMPI PUSH1 0x0 SWAP2 POP POP PUSH2 0x18D6 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP8 GT PUSH2 0x1800 JUMPI DUP7 PUSH2 0x1802 JUMP JUMPDEST DUP2 JUMPDEST SWAP1 POP DUP1 DUP3 SUB PUSH1 0x35 PUSH1 0x0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0x1854 DUP5 DUP3 PUSH2 0x1E18 JUMP JUMPDEST DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x5637D7F962248A7F05A7AB69EEC6446E31F3D0A299D997F135A65C62806E7891 DUP5 PUSH1 0x40 MLOAD PUSH2 0x18C8 SWAP2 SWAP1 PUSH2 0x2D97 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 DUP1 SWAP3 POP POP POP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x33 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 POP PUSH1 0x0 DUP2 PUSH1 0x1 ADD PUSH1 0x0 DUP9 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP PUSH1 0x0 DUP1 PUSH2 0x1978 DUP9 DUP6 DUP9 PUSH2 0x1E8B JUMP JUMPDEST SWAP1 POP DUP1 DUP4 EQ PUSH2 0x1A43 JUMPI PUSH1 0x0 DUP8 EQ PUSH2 0x1997 JUMPI PUSH2 0x1994 DUP8 DUP3 DUP6 PUSH2 0x207E JUMP JUMPDEST SWAP2 POP JUMPDEST DUP1 DUP5 PUSH1 0x1 ADD PUSH1 0x0 DUP12 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP10 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xBB123B5C06D5408BBEA3C4FEF481578175CFB432E3B482C6186F02ED9086585B DUP4 PUSH1 0x40 MLOAD PUSH2 0x1A3A SWAP2 SWAP1 PUSH2 0x2D97 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 JUMPDEST DUP2 SWAP5 POP POP POP POP POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 DUP5 ADD SWAP2 POP DUP2 LT ISZERO PUSH2 0x1A66 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP2 MLOAD DUP2 LT ISZERO PUSH2 0x1BE2 JUMPI PUSH1 0x0 PUSH1 0x33 PUSH1 0x0 DUP5 DUP5 DUP2 MLOAD DUP2 LT PUSH2 0x1A8A JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x40 ADD MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 POP PUSH2 0x1B0B DUP4 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x1AE1 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x40 ADD MLOAD DUP3 DUP6 DUP6 DUP2 MLOAD DUP2 LT PUSH2 0x1AFA JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x20 ADD MLOAD PUSH2 0x1E8B JUMP JUMPDEST POP DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x1B18 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x0 ADD MLOAD DUP2 PUSH1 0x0 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH13 0xFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH13 0xFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x1B64 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x40 ADD MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x87FA03892A0556CB6B8F97E6D533A150D4D55FCBF275FFF5FA003FA636BCC7FA DUP5 DUP5 DUP2 MLOAD DUP2 LT PUSH2 0x1BB3 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x0 ADD MLOAD PUSH1 0x40 MLOAD PUSH2 0x1BCC SWAP2 SWAP1 PUSH2 0x2D45 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP DUP1 DUP1 PUSH1 0x1 ADD SWAP2 POP POP PUSH2 0x1A6F JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 POP PUSH1 0x0 JUMPDEST DUP4 MLOAD DUP2 LT ISZERO PUSH2 0x1D74 JUMPI PUSH1 0x0 PUSH1 0x33 PUSH1 0x0 DUP7 DUP5 DUP2 MLOAD DUP2 LT PUSH2 0x1C0B JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x0 ADD MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 POP PUSH1 0x0 PUSH2 0x1CEC DUP3 PUSH1 0x0 ADD PUSH1 0xD SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH13 0xFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH13 0xFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH13 0xFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH13 0xFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH1 0x0 ADD PUSH1 0x1A SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH5 0xFFFFFFFFFF AND PUSH5 0xFFFFFFFFFF AND DUP10 DUP8 DUP2 MLOAD DUP2 LT PUSH2 0x1CDB JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x40 ADD MLOAD PUSH2 0x20BE JUMP JUMPDEST SWAP1 POP PUSH2 0x1D63 PUSH2 0x1D54 DUP8 DUP6 DUP2 MLOAD DUP2 LT PUSH2 0x1D00 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x20 ADD MLOAD DUP4 DUP6 PUSH1 0x1 ADD PUSH1 0x0 DUP13 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x207E JUMP JUMPDEST DUP6 PUSH2 0x1A52 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP4 POP POP POP DUP1 DUP1 PUSH1 0x1 ADD SWAP2 POP POP PUSH2 0x1BF0 JUMP JUMPDEST POP DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 POP PUSH1 0x0 JUMPDEST DUP4 MLOAD DUP2 LT ISZERO PUSH2 0x1E0D JUMPI PUSH2 0x1DFE PUSH2 0x1DEF DUP7 DUP7 DUP5 DUP2 MLOAD DUP2 LT PUSH2 0x1DAE JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x0 ADD MLOAD DUP8 DUP6 DUP2 MLOAD DUP2 LT PUSH2 0x1DC6 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x20 ADD MLOAD DUP9 DUP7 DUP2 MLOAD DUP2 LT PUSH2 0x1DDE JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x40 ADD MLOAD PUSH2 0x18E0 JUMP JUMPDEST DUP4 PUSH2 0x1A52 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP2 POP DUP1 DUP1 PUSH1 0x1 ADD SWAP2 POP POP PUSH2 0x1D92 JUMP JUMPDEST POP DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1E87 PUSH1 0x37 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 DUP4 PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x21B6 SWAP1 SWAP4 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x0 ADD PUSH1 0xD SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH13 0xFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH13 0xFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP PUSH1 0x0 DUP5 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH13 0xFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH13 0xFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP PUSH1 0x0 DUP6 PUSH1 0x0 ADD PUSH1 0x1A SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH5 0xFFFFFFFFFF AND PUSH5 0xFFFFFFFFFF AND SWAP1 POP DUP1 PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND TIMESTAMP EQ ISZERO PUSH2 0x1F34 JUMPI DUP3 SWAP4 POP POP POP POP PUSH2 0x2077 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1F42 DUP5 DUP5 DUP5 DUP10 PUSH2 0x20BE JUMP JUMPDEST SWAP1 POP DUP4 DUP2 EQ PUSH2 0x2049 JUMPI DUP1 DUP2 PUSH13 0xFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1F9C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1F93 SWAP1 PUSH2 0x2CE5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 DUP8 PUSH1 0x0 ADD PUSH1 0xD PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH13 0xFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH13 0xFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP TIMESTAMP DUP8 PUSH1 0x0 ADD PUSH1 0x1A PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH5 0xFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH5 0xFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x5777CA300DFE5BEAD41006FBCE4389794DBC0ED8D6CCCEBFAF94630AA04184BC DUP3 PUSH1 0x40 MLOAD PUSH2 0x203C SWAP2 SWAP1 PUSH2 0x2D97 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 PUSH2 0x206F JUMP JUMPDEST TIMESTAMP DUP8 PUSH1 0x0 ADD PUSH1 0x1A PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH5 0xFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH5 0xFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP JUMPDEST DUP1 SWAP5 POP POP POP POP POP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x12 PUSH1 0xFF AND PUSH1 0xA EXP PUSH2 0x20AD PUSH2 0x209E DUP5 DUP7 PUSH2 0x2277 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP7 PUSH2 0x2291 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP2 PUSH2 0x20B4 JUMPI INVALID JUMPDEST DIV SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x34 SLOAD SWAP1 POP PUSH1 0x0 DUP6 EQ DUP1 PUSH2 0x20D5 JUMPI POP PUSH1 0x0 DUP4 EQ JUMPDEST DUP1 PUSH2 0x20F1 JUMPI POP TIMESTAMP DUP5 PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ JUMPDEST DUP1 PUSH2 0x210E JUMPI POP DUP1 DUP5 PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND LT ISZERO JUMPDEST ISZERO PUSH2 0x211C JUMPI DUP6 SWAP2 POP POP PUSH2 0x21AE JUMP JUMPDEST PUSH1 0x0 DUP2 TIMESTAMP GT PUSH2 0x212B JUMPI TIMESTAMP PUSH2 0x212D JUMP JUMPDEST DUP2 JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x2156 DUP7 PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH2 0x2277 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH2 0x21A8 DUP9 PUSH2 0x219A DUP8 PUSH2 0x218C PUSH1 0x12 PUSH1 0xFF AND PUSH1 0xA EXP PUSH2 0x217E DUP8 DUP15 PUSH2 0x2291 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x2291 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x22BD SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x1A52 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP4 POP POP POP POP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH2 0x2271 DUP5 PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP6 DUP6 DUP6 PUSH1 0x40 MLOAD PUSH1 0x24 ADD DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP4 POP POP POP POP PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH2 0x22D1 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 DUP5 SUB SWAP2 POP DUP2 GT ISZERO PUSH2 0x228B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 EQ DUP1 PUSH2 0x22AE JUMPI POP DUP2 DUP4 DUP4 DUP6 MUL SWAP3 POP DUP3 DUP2 PUSH2 0x22AB JUMPI INVALID JUMPDEST DIV EQ JUMPDEST PUSH2 0x22B7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 DUP2 PUSH2 0x22C8 JUMPI INVALID JUMPDEST DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x22F0 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x251C JUMP JUMPDEST PUSH2 0x2362 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x1F DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x5361666545524332303A2063616C6C20746F206E6F6E2D636F6E747261637400 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH1 0x40 MLOAD DUP1 DUP3 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 JUMPDEST PUSH1 0x20 DUP4 LT PUSH2 0x23B1 JUMPI DUP1 MLOAD DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH1 0x20 DUP4 SUB SWAP3 POP PUSH2 0x238E JUMP JUMPDEST PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB DUP1 NOT DUP3 MLOAD AND DUP2 DUP5 MLOAD AND DUP1 DUP3 OR DUP6 MSTORE POP POP POP POP POP POP SWAP1 POP ADD SWAP2 POP POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP7 GAS CALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x2413 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x2418 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP DUP2 PUSH2 0x2490 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x5361666545524332303A206C6F772D6C6576656C2063616C6C206661696C6564 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP2 MLOAD GT ISZERO PUSH2 0x2516 JUMPI DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x24AF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x2515 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x2A DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x2EF7 PUSH1 0x2A SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH32 0xC5D2460186F7233C927E7DB2DCC703C0E500B653CA82273B7BFAD8045D85A470 PUSH1 0x0 SHL SWAP1 POP DUP4 EXTCODEHASH SWAP2 POP DUP1 DUP3 EQ ISZERO DUP1 ISZERO PUSH2 0x255E JUMPI POP PUSH1 0x0 DUP1 SHL DUP3 EQ ISZERO JUMPDEST SWAP3 POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 PUSH13 0xFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x25F3 DUP2 PUSH2 0x2E9A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0x260B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD SWAP1 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2624 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x20 DUP3 MUL DUP4 ADD GT ISZERO PUSH2 0x263C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0x2655 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD SWAP1 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x266E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x20 DUP3 MUL DUP4 ADD GT ISZERO PUSH2 0x2686 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x269C DUP2 PUSH2 0x2EB1 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x26B1 DUP2 PUSH2 0x2EB1 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x26C9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x26D7 DUP5 DUP3 DUP6 ADD PUSH2 0x25E4 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x26F3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x2701 DUP6 DUP3 DUP7 ADD PUSH2 0x25E4 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x2712 DUP6 DUP3 DUP7 ADD PUSH2 0x25E4 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x2731 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x273F DUP7 DUP3 DUP8 ADD PUSH2 0x25E4 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x2750 DUP7 DUP3 DUP8 ADD PUSH2 0x268D JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x2761 DUP7 DUP3 DUP8 ADD PUSH2 0x268D JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x40 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x2780 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x279A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x27A6 DUP7 DUP3 DUP8 ADD PUSH2 0x25F9 JUMP JUMPDEST SWAP4 POP SWAP4 POP POP PUSH1 0x20 PUSH2 0x27B9 DUP7 DUP3 DUP8 ADD PUSH2 0x25E4 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x40 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x27D9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x27F3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x27FF DUP8 DUP3 DUP9 ADD PUSH2 0x25F9 JUMP JUMPDEST SWAP5 POP SWAP5 POP POP PUSH1 0x20 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x281E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x282A DUP8 DUP3 DUP9 ADD PUSH2 0x2643 JUMP JUMPDEST SWAP3 POP SWAP3 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x40 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x284D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2867 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2873 DUP7 DUP3 DUP8 ADD PUSH2 0x25F9 JUMP JUMPDEST SWAP4 POP SWAP4 POP POP PUSH1 0x20 PUSH2 0x2886 DUP7 DUP3 DUP8 ADD PUSH2 0x268D JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x60 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x28A6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x28C0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x28CC DUP8 DUP3 DUP9 ADD PUSH2 0x25F9 JUMP JUMPDEST SWAP5 POP SWAP5 POP POP PUSH1 0x20 PUSH2 0x28DF DUP8 DUP3 DUP9 ADD PUSH2 0x268D JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x28F0 DUP8 DUP3 DUP9 ADD PUSH2 0x25E4 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x80 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x2914 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x292E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x293A DUP9 DUP3 DUP10 ADD PUSH2 0x25F9 JUMP JUMPDEST SWAP6 POP SWAP6 POP POP PUSH1 0x20 PUSH2 0x294D DUP9 DUP3 DUP10 ADD PUSH2 0x268D JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 PUSH2 0x295E DUP9 DUP3 DUP10 ADD PUSH2 0x25E4 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 PUSH2 0x296F DUP9 DUP3 DUP10 ADD PUSH2 0x25E4 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x298E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x299C DUP5 DUP3 DUP6 ADD PUSH2 0x268D JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x29B7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x29C5 DUP5 DUP3 DUP6 ADD PUSH2 0x26A2 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x29E1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x29EF DUP6 DUP3 DUP7 ADD PUSH2 0x26A2 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x2A00 DUP6 DUP3 DUP7 ADD PUSH2 0x26A2 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x2A13 DUP2 PUSH2 0x2E15 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2A26 PUSH1 0x14 DUP4 PUSH2 0x2E04 JUMP JUMPDEST SWAP2 POP PUSH32 0x494E56414C49445F555345525F41444452455353000000000000000000000000 PUSH1 0x0 DUP4 ADD MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2A66 PUSH1 0x12 DUP4 PUSH2 0x2E04 JUMP JUMPDEST SWAP2 POP PUSH32 0x494E56414C49445F544F5F414444524553530000000000000000000000000000 PUSH1 0x0 DUP4 ADD MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2AA6 PUSH1 0x15 DUP4 PUSH2 0x2E04 JUMP JUMPDEST SWAP2 POP PUSH32 0x494E56414C49445F434F4E46494755524154494F4E0000000000000000000000 PUSH1 0x0 DUP4 ADD MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2AE6 PUSH1 0x24 DUP4 PUSH2 0x2E04 JUMP JUMPDEST SWAP2 POP PUSH32 0x496E646578206F766572666C6F7720617420656D697373696F6E735065725365 PUSH1 0x0 DUP4 ADD MSTORE PUSH32 0x636F6E6400000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2B4C PUSH1 0xE DUP4 PUSH2 0x2E04 JUMP JUMPDEST SWAP2 POP PUSH32 0x496E646578206F766572666C6F77000000000000000000000000000000000000 PUSH1 0x0 DUP4 ADD MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2B8C PUSH1 0x15 DUP4 PUSH2 0x2E04 JUMP JUMPDEST SWAP2 POP PUSH32 0x4F4E4C595F454D495353494F4E5F4D414E414745520000000000000000000000 PUSH1 0x0 DUP4 ADD MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2BCC PUSH1 0x14 DUP4 PUSH2 0x2E04 JUMP JUMPDEST SWAP2 POP PUSH32 0x434C41494D45525F554E415554484F52495A4544000000000000000000000000 PUSH1 0x0 DUP4 ADD MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2C08 DUP2 PUSH2 0x2E27 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x2C17 DUP2 PUSH2 0x2E88 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x2C26 DUP2 PUSH2 0x2E60 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x2C35 DUP2 PUSH2 0x2E6A JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x2C44 DUP2 PUSH2 0x2E7B JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2C5F PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x2A0A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2C7E DUP2 PUSH2 0x2A19 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2C9E DUP2 PUSH2 0x2A59 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2CBE DUP2 PUSH2 0x2A99 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2CDE DUP2 PUSH2 0x2AD9 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2CFE DUP2 PUSH2 0x2B3F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2D1E DUP2 PUSH2 0x2B7F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2D3E DUP2 PUSH2 0x2BBF JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2D5A PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x2C0E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x2D75 PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x2BFF JUMP JUMPDEST PUSH2 0x2D82 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x2BFF JUMP JUMPDEST PUSH2 0x2D8F PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x2C2C JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2DAC PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x2C1D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x2DC7 PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x2C1D JUMP JUMPDEST PUSH2 0x2DD4 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x2C1D JUMP JUMPDEST PUSH2 0x2DE1 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x2C1D JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2DFE PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x2C3B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2E20 DUP3 PUSH2 0x2E40 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH13 0xFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH5 0xFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2E93 DUP3 PUSH2 0x2E27 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2EA3 DUP2 PUSH2 0x2E15 JUMP JUMPDEST DUP2 EQ PUSH2 0x2EAE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x2EBA DUP2 PUSH2 0x2E60 JUMP JUMPDEST DUP2 EQ PUSH2 0x2EC5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID NUMBER PUSH16 0x6E747261637420696E7374616E636520 PUSH9 0x617320616C72656164 PUSH26 0x206265656E20696E697469616C697A6564536166654552433230 GASPRICE KECCAK256 GASLIMIT MSTORE NUMBER ORIGIN ADDRESS KECCAK256 PUSH16 0x7065726174696F6E20646964206E6F74 KECCAK256 PUSH20 0x756363656564A26469706673582212208DDB6503 0xF8 LOG3 SWAP2 RETURN 0xAA CHAINID KECCAK256 0xA5 0xFB JUMPI DUP8 0xCD PUSH8 0x82C4C0CA8381FFA5 PUSH3 0xD24817 BYTE 0xD3 DUP15 PUSH5 0x736F6C6343 STOP SMOD SDIV STOP CALLER ",
							"sourceMap": "530:1322:5:-:0;;;924:1:4;881:44;;735:122:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;822:11;835:15;1651::6;1067::7;1048:34;;;;;;;;;;;;1004:84;1701:11:6::1;1678:35;;;;;;;;;;::::0;::::1;1569:150:::0;;735:122:5;;530:1322;;7:143:13;;95:6;89:13;80:22;;111:33;138:5;111:33;:::i;:::-;70:80;;;;:::o;156:169::-;;257:6;251:13;242:22;;273:46;313:5;273:46;:::i;:::-;232:93;;;;:::o;331:462::-;;;480:2;468:9;459:7;455:23;451:32;448:2;;;496:1;493;486:12;448:2;538:1;562:77;631:7;622:6;611:9;607:22;562:77;:::i;:::-;552:87;;510:139;687:2;712:64;768:7;759:6;748:9;744:22;712:64;:::i;:::-;702:74;;659:127;438:355;;;;;:::o;799:96::-;;865:24;883:5;865:24;:::i;:::-;854:35;;844:51;;;:::o;901:109::-;;980:24;998:5;980:24;:::i;:::-;969:35;;959:51;;;:::o;1016:126::-;;1093:42;1086:5;1082:54;1071:65;;1061:81;;;:::o;1148:122::-;1221:24;1239:5;1221:24;:::i;:::-;1214:5;1211:35;1201:2;;1260:1;1257;1250:12;1201:2;1191:79;:::o;1276:148::-;1362:37;1393:5;1362:37;:::i;:::-;1355:5;1352:48;1342:2;;1414:1;1411;1404:12;1342:2;1332:92;:::o;530:1322:5:-;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:15908:13",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "59:87:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "69:29:13",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "91:6:13"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "78:12:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "78:20:13"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "69:5:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "134:5:13"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "107:26:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "107:33:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "107:33:13"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "37:6:13",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "45:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "53:5:13",
														"type": ""
													}
												],
												"src": "7:139:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "259:277:13",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "308:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "317:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "320:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "310:6:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "310:12:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "310:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "287:6:13"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "295:4:13",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "283:3:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "283:17:13"
																			},
																			{
																				"name": "end",
																				"nodeType": "YulIdentifier",
																				"src": "302:3:13"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "279:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "279:27:13"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "272:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "272:35:13"
															},
															"nodeType": "YulIf",
															"src": "269:2:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "333:30:13",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "356:6:13"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "343:12:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "343:20:13"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "333:6:13"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "406:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "415:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "418:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "408:6:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "408:12:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "408:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "378:6:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "386:18:13",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "375:2:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "375:30:13"
															},
															"nodeType": "YulIf",
															"src": "372:2:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "431:29:13",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "447:6:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "455:4:13",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "443:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "443:17:13"
															},
															"variableNames": [
																{
																	"name": "arrayPos",
																	"nodeType": "YulIdentifier",
																	"src": "431:8:13"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "514:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "523:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "526:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "516:6:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "516:12:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "516:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "arrayPos",
																				"nodeType": "YulIdentifier",
																				"src": "479:8:13"
																			},
																			{
																				"arguments": [
																					{
																						"name": "length",
																						"nodeType": "YulIdentifier",
																						"src": "493:6:13"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "501:4:13",
																						"type": "",
																						"value": "0x20"
																					}
																				],
																				"functionName": {
																					"name": "mul",
																					"nodeType": "YulIdentifier",
																					"src": "489:3:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "489:17:13"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "475:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "475:32:13"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "509:3:13"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "472:2:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "472:41:13"
															},
															"nodeType": "YulIf",
															"src": "469:2:13"
														}
													]
												},
												"name": "abi_decode_t_array$_t_address_$dyn_calldata_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "226:6:13",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "234:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "arrayPos",
														"nodeType": "YulTypedName",
														"src": "242:8:13",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "252:6:13",
														"type": ""
													}
												],
												"src": "169:367:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "649:277:13",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "698:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "707:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "710:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "700:6:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "700:12:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "700:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "677:6:13"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "685:4:13",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "673:3:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "673:17:13"
																			},
																			{
																				"name": "end",
																				"nodeType": "YulIdentifier",
																				"src": "692:3:13"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "669:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "669:27:13"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "662:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "662:35:13"
															},
															"nodeType": "YulIf",
															"src": "659:2:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "723:30:13",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "746:6:13"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "733:12:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "733:20:13"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "723:6:13"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "796:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "805:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "808:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "798:6:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "798:12:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "798:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "768:6:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "776:18:13",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "765:2:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "765:30:13"
															},
															"nodeType": "YulIf",
															"src": "762:2:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "821:29:13",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "837:6:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "845:4:13",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "833:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "833:17:13"
															},
															"variableNames": [
																{
																	"name": "arrayPos",
																	"nodeType": "YulIdentifier",
																	"src": "821:8:13"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "904:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "913:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "916:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "906:6:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "906:12:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "906:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "arrayPos",
																				"nodeType": "YulIdentifier",
																				"src": "869:8:13"
																			},
																			{
																				"arguments": [
																					{
																						"name": "length",
																						"nodeType": "YulIdentifier",
																						"src": "883:6:13"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "891:4:13",
																						"type": "",
																						"value": "0x20"
																					}
																				],
																				"functionName": {
																					"name": "mul",
																					"nodeType": "YulIdentifier",
																					"src": "879:3:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "879:17:13"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "865:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "865:32:13"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "899:3:13"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "862:2:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "862:41:13"
															},
															"nodeType": "YulIf",
															"src": "859:2:13"
														}
													]
												},
												"name": "abi_decode_t_array$_t_uint256_$dyn_calldata_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "616:6:13",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "624:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "arrayPos",
														"nodeType": "YulTypedName",
														"src": "632:8:13",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "642:6:13",
														"type": ""
													}
												],
												"src": "559:367:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "984:87:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "994:29:13",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "1016:6:13"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1003:12:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "1003:20:13"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "994:5:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1059:5:13"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "1032:26:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "1032:33:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1032:33:13"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "962:6:13",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "970:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "978:5:13",
														"type": ""
													}
												],
												"src": "932:139:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1140:80:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1150:22:13",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "1165:6:13"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1159:5:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "1159:13:13"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "1150:5:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1208:5:13"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "1181:26:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "1181:33:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1181:33:13"
														}
													]
												},
												"name": "abi_decode_t_uint256_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "1118:6:13",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "1126:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1134:5:13",
														"type": ""
													}
												],
												"src": "1077:143:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1292:194:13",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1338:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1347:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1350:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1340:6:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1340:12:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1340:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1313:7:13"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1322:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1309:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1309:23:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1334:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1305:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "1305:32:13"
															},
															"nodeType": "YulIf",
															"src": "1302:2:13"
														},
														{
															"nodeType": "YulBlock",
															"src": "1364:115:13",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1378:15:13",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1392:1:13",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1382:6:13",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1406:63:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1441:9:13"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1452:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1437:3:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1437:22:13"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1461:7:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "1416:20:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1416:53:13"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "1406:6:13"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1262:9:13",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1273:7:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1285:6:13",
														"type": ""
													}
												],
												"src": "1226:260:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1575:320:13",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1621:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1630:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1633:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1623:6:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1623:12:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1623:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1596:7:13"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1605:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1592:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1592:23:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1617:2:13",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1588:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "1588:32:13"
															},
															"nodeType": "YulIf",
															"src": "1585:2:13"
														},
														{
															"nodeType": "YulBlock",
															"src": "1647:115:13",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1661:15:13",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1675:1:13",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1665:6:13",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1689:63:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1724:9:13"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1735:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1720:3:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1720:22:13"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1744:7:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "1699:20:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1699:53:13"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "1689:6:13"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "1772:116:13",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1786:16:13",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1800:2:13",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1790:6:13",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1815:63:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1850:9:13"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1861:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1846:3:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1846:22:13"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1870:7:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "1825:20:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1825:53:13"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "1815:6:13"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1537:9:13",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1548:7:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1560:6:13",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1568:6:13",
														"type": ""
													}
												],
												"src": "1492:403:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2001:446:13",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2047:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2056:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2059:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2049:6:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2049:12:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2049:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2022:7:13"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2031:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2018:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2018:23:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2043:2:13",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2014:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "2014:32:13"
															},
															"nodeType": "YulIf",
															"src": "2011:2:13"
														},
														{
															"nodeType": "YulBlock",
															"src": "2073:115:13",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "2087:15:13",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2101:1:13",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "2091:6:13",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "2115:63:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "2150:9:13"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "2161:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2146:3:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2146:22:13"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2170:7:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "2125:20:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2125:53:13"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "2115:6:13"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "2198:116:13",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "2212:16:13",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2226:2:13",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "2216:6:13",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "2241:63:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "2276:9:13"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "2287:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2272:3:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2272:22:13"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2296:7:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "2251:20:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2251:53:13"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "2241:6:13"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "2324:116:13",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "2338:16:13",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2352:2:13",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "2342:6:13",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "2367:63:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "2402:9:13"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "2413:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2398:3:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2398:22:13"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2422:7:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "2377:20:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2377:53:13"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nodeType": "YulIdentifier",
																			"src": "2367:6:13"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1955:9:13",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1966:7:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1978:6:13",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1986:6:13",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "1994:6:13",
														"type": ""
													}
												],
												"src": "1901:546:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2571:448:13",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2617:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2626:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2629:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2619:6:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2619:12:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2619:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2592:7:13"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2601:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2588:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2588:23:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2613:2:13",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2584:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "2584:32:13"
															},
															"nodeType": "YulIf",
															"src": "2581:2:13"
														},
														{
															"nodeType": "YulBlock",
															"src": "2643:243:13",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "2657:45:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "2688:9:13"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "2699:1:13",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2684:3:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2684:17:13"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nodeType": "YulIdentifier",
																			"src": "2671:12:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2671:31:13"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "2661:6:13",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "2749:16:13",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "2758:1:13",
																							"type": "",
																							"value": "0"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "2761:1:13",
																							"type": "",
																							"value": "0"
																						}
																					],
																					"functionName": {
																						"name": "revert",
																						"nodeType": "YulIdentifier",
																						"src": "2751:6:13"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "2751:12:13"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "2751:12:13"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "2721:6:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2729:18:13",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "2718:2:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2718:30:13"
																	},
																	"nodeType": "YulIf",
																	"src": "2715:2:13"
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "2778:98:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "2848:9:13"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "2859:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2844:3:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2844:22:13"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2868:7:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_array$_t_address_$dyn_calldata_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "2796:47:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2796:80:13"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "2778:6:13"
																		},
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "2786:6:13"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "2896:116:13",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "2910:16:13",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2924:2:13",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "2914:6:13",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "2939:63:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "2974:9:13"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "2985:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2970:3:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2970:22:13"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2994:7:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "2949:20:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2949:53:13"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nodeType": "YulIdentifier",
																			"src": "2939:6:13"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_array$_t_address_$dyn_calldata_ptrt_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2525:9:13",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2536:7:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2548:6:13",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "2556:6:13",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "2564:6:13",
														"type": ""
													}
												],
												"src": "2453:566:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3178:576:13",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3224:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3233:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3236:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3226:6:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3226:12:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3226:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3199:7:13"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3208:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3195:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3195:23:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3220:2:13",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "3191:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "3191:32:13"
															},
															"nodeType": "YulIf",
															"src": "3188:2:13"
														},
														{
															"nodeType": "YulBlock",
															"src": "3250:243:13",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "3264:45:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "3295:9:13"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "3306:1:13",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3291:3:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3291:17:13"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nodeType": "YulIdentifier",
																			"src": "3278:12:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3278:31:13"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "3268:6:13",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "3356:16:13",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "3365:1:13",
																							"type": "",
																							"value": "0"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "3368:1:13",
																							"type": "",
																							"value": "0"
																						}
																					],
																					"functionName": {
																						"name": "revert",
																						"nodeType": "YulIdentifier",
																						"src": "3358:6:13"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "3358:12:13"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "3358:12:13"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "3328:6:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3336:18:13",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "3325:2:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3325:30:13"
																	},
																	"nodeType": "YulIf",
																	"src": "3322:2:13"
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "3385:98:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "3455:9:13"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "3466:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3451:3:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3451:22:13"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3475:7:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_array$_t_address_$dyn_calldata_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "3403:47:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3403:80:13"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "3385:6:13"
																		},
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "3393:6:13"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "3503:244:13",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "3517:46:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "3548:9:13"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "3559:2:13",
																						"type": "",
																						"value": "32"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3544:3:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3544:18:13"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nodeType": "YulIdentifier",
																			"src": "3531:12:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3531:32:13"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "3521:6:13",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "3610:16:13",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "3619:1:13",
																							"type": "",
																							"value": "0"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "3622:1:13",
																							"type": "",
																							"value": "0"
																						}
																					],
																					"functionName": {
																						"name": "revert",
																						"nodeType": "YulIdentifier",
																						"src": "3612:6:13"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "3612:12:13"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "3612:12:13"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "3582:6:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3590:18:13",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "3579:2:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3579:30:13"
																	},
																	"nodeType": "YulIf",
																	"src": "3576:2:13"
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "3639:98:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "3709:9:13"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "3720:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3705:3:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3705:22:13"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3729:7:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_array$_t_uint256_$dyn_calldata_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "3657:47:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3657:80:13"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nodeType": "YulIdentifier",
																			"src": "3639:6:13"
																		},
																		{
																			"name": "value3",
																			"nodeType": "YulIdentifier",
																			"src": "3647:6:13"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_array$_t_address_$dyn_calldata_ptrt_array$_t_uint256_$dyn_calldata_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3124:9:13",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "3135:7:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3147:6:13",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "3155:6:13",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "3163:6:13",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "3171:6:13",
														"type": ""
													}
												],
												"src": "3025:729:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3878:448:13",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3924:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3933:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3936:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3926:6:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3926:12:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3926:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3899:7:13"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3908:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3895:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3895:23:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3920:2:13",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "3891:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "3891:32:13"
															},
															"nodeType": "YulIf",
															"src": "3888:2:13"
														},
														{
															"nodeType": "YulBlock",
															"src": "3950:243:13",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "3964:45:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "3995:9:13"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "4006:1:13",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3991:3:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3991:17:13"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nodeType": "YulIdentifier",
																			"src": "3978:12:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3978:31:13"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "3968:6:13",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "4056:16:13",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "4065:1:13",
																							"type": "",
																							"value": "0"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "4068:1:13",
																							"type": "",
																							"value": "0"
																						}
																					],
																					"functionName": {
																						"name": "revert",
																						"nodeType": "YulIdentifier",
																						"src": "4058:6:13"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "4058:12:13"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "4058:12:13"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "4028:6:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4036:18:13",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "4025:2:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4025:30:13"
																	},
																	"nodeType": "YulIf",
																	"src": "4022:2:13"
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "4085:98:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "4155:9:13"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "4166:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "4151:3:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4151:22:13"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4175:7:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_array$_t_address_$dyn_calldata_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "4103:47:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4103:80:13"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "4085:6:13"
																		},
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "4093:6:13"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "4203:116:13",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "4217:16:13",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4231:2:13",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "4221:6:13",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "4246:63:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "4281:9:13"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "4292:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "4277:3:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4277:22:13"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4301:7:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "4256:20:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4256:53:13"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nodeType": "YulIdentifier",
																			"src": "4246:6:13"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_array$_t_address_$dyn_calldata_ptrt_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3832:9:13",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "3843:7:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3855:6:13",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "3863:6:13",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "3871:6:13",
														"type": ""
													}
												],
												"src": "3760:566:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4467:574:13",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4513:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4522:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4525:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "4515:6:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4515:12:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4515:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4488:7:13"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4497:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "4484:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4484:23:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4509:2:13",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "4480:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "4480:32:13"
															},
															"nodeType": "YulIf",
															"src": "4477:2:13"
														},
														{
															"nodeType": "YulBlock",
															"src": "4539:243:13",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "4553:45:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "4584:9:13"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "4595:1:13",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "4580:3:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4580:17:13"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nodeType": "YulIdentifier",
																			"src": "4567:12:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4567:31:13"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "4557:6:13",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "4645:16:13",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "4654:1:13",
																							"type": "",
																							"value": "0"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "4657:1:13",
																							"type": "",
																							"value": "0"
																						}
																					],
																					"functionName": {
																						"name": "revert",
																						"nodeType": "YulIdentifier",
																						"src": "4647:6:13"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "4647:12:13"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "4647:12:13"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "4617:6:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4625:18:13",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "4614:2:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4614:30:13"
																	},
																	"nodeType": "YulIf",
																	"src": "4611:2:13"
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "4674:98:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "4744:9:13"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "4755:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "4740:3:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4740:22:13"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4764:7:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_array$_t_address_$dyn_calldata_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "4692:47:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4692:80:13"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "4674:6:13"
																		},
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "4682:6:13"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "4792:116:13",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "4806:16:13",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4820:2:13",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "4810:6:13",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "4835:63:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "4870:9:13"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "4881:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "4866:3:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4866:22:13"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4890:7:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "4845:20:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4845:53:13"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nodeType": "YulIdentifier",
																			"src": "4835:6:13"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "4918:116:13",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "4932:16:13",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4946:2:13",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "4936:6:13",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "4961:63:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "4996:9:13"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "5007:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "4992:3:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4992:22:13"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5016:7:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "4971:20:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4971:53:13"
																	},
																	"variableNames": [
																		{
																			"name": "value3",
																			"nodeType": "YulIdentifier",
																			"src": "4961:6:13"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_array$_t_address_$dyn_calldata_ptrt_uint256t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4413:9:13",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "4424:7:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4436:6:13",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "4444:6:13",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "4452:6:13",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "4460:6:13",
														"type": ""
													}
												],
												"src": "4332:709:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5199:701:13",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5246:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5255:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5258:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "5248:6:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5248:12:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5248:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5220:7:13"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5229:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "5216:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5216:23:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5241:3:13",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "5212:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "5212:33:13"
															},
															"nodeType": "YulIf",
															"src": "5209:2:13"
														},
														{
															"nodeType": "YulBlock",
															"src": "5272:243:13",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "5286:45:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "5317:9:13"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "5328:1:13",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "5313:3:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5313:17:13"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nodeType": "YulIdentifier",
																			"src": "5300:12:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5300:31:13"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "5290:6:13",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "5378:16:13",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "5387:1:13",
																							"type": "",
																							"value": "0"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "5390:1:13",
																							"type": "",
																							"value": "0"
																						}
																					],
																					"functionName": {
																						"name": "revert",
																						"nodeType": "YulIdentifier",
																						"src": "5380:6:13"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "5380:12:13"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "5380:12:13"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "5350:6:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5358:18:13",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "5347:2:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5347:30:13"
																	},
																	"nodeType": "YulIf",
																	"src": "5344:2:13"
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "5407:98:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "5477:9:13"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "5488:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "5473:3:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5473:22:13"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5497:7:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_array$_t_address_$dyn_calldata_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "5425:47:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5425:80:13"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "5407:6:13"
																		},
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "5415:6:13"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "5525:116:13",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "5539:16:13",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5553:2:13",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "5543:6:13",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "5568:63:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "5603:9:13"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "5614:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "5599:3:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5599:22:13"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5623:7:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "5578:20:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5578:53:13"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nodeType": "YulIdentifier",
																			"src": "5568:6:13"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "5651:116:13",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "5665:16:13",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5679:2:13",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "5669:6:13",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "5694:63:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "5729:9:13"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "5740:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "5725:3:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5725:22:13"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5749:7:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "5704:20:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5704:53:13"
																	},
																	"variableNames": [
																		{
																			"name": "value3",
																			"nodeType": "YulIdentifier",
																			"src": "5694:6:13"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "5777:116:13",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "5791:16:13",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5805:2:13",
																		"type": "",
																		"value": "96"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "5795:6:13",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "5820:63:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "5855:9:13"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "5866:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "5851:3:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5851:22:13"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5875:7:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "5830:20:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5830:53:13"
																	},
																	"variableNames": [
																		{
																			"name": "value4",
																			"nodeType": "YulIdentifier",
																			"src": "5820:6:13"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_array$_t_address_$dyn_calldata_ptrt_uint256t_addresst_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5137:9:13",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "5148:7:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5160:6:13",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "5168:6:13",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "5176:6:13",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "5184:6:13",
														"type": ""
													},
													{
														"name": "value4",
														"nodeType": "YulTypedName",
														"src": "5192:6:13",
														"type": ""
													}
												],
												"src": "5047:853:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5972:194:13",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6018:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6027:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6030:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "6020:6:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6020:12:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6020:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5993:7:13"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6002:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "5989:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5989:23:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6014:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "5985:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "5985:32:13"
															},
															"nodeType": "YulIf",
															"src": "5982:2:13"
														},
														{
															"nodeType": "YulBlock",
															"src": "6044:115:13",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "6058:15:13",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6072:1:13",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "6062:6:13",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "6086:63:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "6121:9:13"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "6132:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "6117:3:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6117:22:13"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "6141:7:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "6096:20:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6096:53:13"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "6086:6:13"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5942:9:13",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "5953:7:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5965:6:13",
														"type": ""
													}
												],
												"src": "5906:260:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6249:205:13",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6295:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6304:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6307:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "6297:6:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6297:12:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6297:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "6270:7:13"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6279:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "6266:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6266:23:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6291:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "6262:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "6262:32:13"
															},
															"nodeType": "YulIf",
															"src": "6259:2:13"
														},
														{
															"nodeType": "YulBlock",
															"src": "6321:126:13",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "6335:15:13",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6349:1:13",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "6339:6:13",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "6363:74:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "6409:9:13"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "6420:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "6405:3:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6405:22:13"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "6429:7:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "6373:31:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6373:64:13"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "6363:6:13"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6219:9:13",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "6230:7:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "6242:6:13",
														"type": ""
													}
												],
												"src": "6172:282:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6554:342:13",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6600:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6609:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6612:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "6602:6:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6602:12:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6602:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "6575:7:13"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6584:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "6571:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6571:23:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6596:2:13",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "6567:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "6567:32:13"
															},
															"nodeType": "YulIf",
															"src": "6564:2:13"
														},
														{
															"nodeType": "YulBlock",
															"src": "6626:126:13",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "6640:15:13",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6654:1:13",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "6644:6:13",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "6668:74:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "6714:9:13"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "6725:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "6710:3:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6710:22:13"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "6734:7:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "6678:31:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6678:64:13"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "6668:6:13"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "6762:127:13",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "6776:16:13",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6790:2:13",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "6780:6:13",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "6805:74:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "6851:9:13"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "6862:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "6847:3:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6847:22:13"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "6871:7:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "6815:31:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6815:64:13"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "6805:6:13"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256t_uint256_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6516:9:13",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "6527:7:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "6539:6:13",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "6547:6:13",
														"type": ""
													}
												],
												"src": "6460:436:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6967:53:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "6984:3:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "7007:5:13"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "6989:17:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6989:24:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6977:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "6977:37:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6977:37:13"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "6955:5:13",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "6962:3:13",
														"type": ""
													}
												],
												"src": "6902:118:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7172:172:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7182:74:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "7248:3:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7253:2:13",
																		"type": "",
																		"value": "20"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "7189:58:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "7189:67:13"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "7182:3:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "7277:3:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7282:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7273:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7273:11:13"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "7286:22:13",
																		"type": "",
																		"value": "INVALID_USER_ADDRESS"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7266:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "7266:43:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7266:43:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7319:19:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "7330:3:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7335:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7326:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "7326:12:13"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "7319:3:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_4058a4fa702d397682b400d1a2d7894f822738ac481455440aeb37a04a780eca_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "7160:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "7168:3:13",
														"type": ""
													}
												],
												"src": "7026:318:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7496:170:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7506:74:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "7572:3:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7577:2:13",
																		"type": "",
																		"value": "18"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "7513:58:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "7513:67:13"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "7506:3:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "7601:3:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7606:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7597:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7597:11:13"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "7610:20:13",
																		"type": "",
																		"value": "INVALID_TO_ADDRESS"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7590:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "7590:41:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7590:41:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7641:19:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "7652:3:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7657:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7648:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "7648:12:13"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "7641:3:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_60a6ecd9d15a2e4ae360b5943de5e7d94204c8fa7a9b93d3208a26418697ceb3_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "7484:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "7492:3:13",
														"type": ""
													}
												],
												"src": "7350:316:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7818:173:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7828:74:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "7894:3:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7899:2:13",
																		"type": "",
																		"value": "21"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "7835:58:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "7835:67:13"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "7828:3:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "7923:3:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7928:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7919:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7919:11:13"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "7932:23:13",
																		"type": "",
																		"value": "INVALID_CONFIGURATION"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7912:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "7912:44:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7912:44:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7966:19:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "7977:3:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7982:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7973:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "7973:12:13"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "7966:3:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_6959a97277e640037a0b87fbc8f4c35f54cb176c97a67a1f1334c0edec62895f_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "7806:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "7814:3:13",
														"type": ""
													}
												],
												"src": "7672:319:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8143:222:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8153:74:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "8219:3:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8224:2:13",
																		"type": "",
																		"value": "36"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "8160:58:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "8160:67:13"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "8153:3:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "8248:3:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8253:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8244:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8244:11:13"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "8257:34:13",
																		"type": "",
																		"value": "Index overflow at emissionsPerSe"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8237:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "8237:55:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8237:55:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "8313:3:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8318:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8309:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8309:12:13"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "8323:6:13",
																		"type": "",
																		"value": "cond"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8302:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "8302:28:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8302:28:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8340:19:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "8351:3:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8356:2:13",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8347:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "8347:12:13"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "8340:3:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_7bbf22fcd0f8524161fb845274fb83ab60dddf8bd31fa7f66f897d29500d0e11_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "8131:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "8139:3:13",
														"type": ""
													}
												],
												"src": "7997:368:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8517:166:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8527:74:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "8593:3:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8598:2:13",
																		"type": "",
																		"value": "14"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "8534:58:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "8534:67:13"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "8527:3:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "8622:3:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8627:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8618:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8618:11:13"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "8631:16:13",
																		"type": "",
																		"value": "Index overflow"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8611:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "8611:37:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8611:37:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8658:19:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "8669:3:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8674:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8665:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "8665:12:13"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "8658:3:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_88066702ff2a817045c06422ff60e138f1b9ed6ff5eae8db2038ccb44cf1a522_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "8505:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "8513:3:13",
														"type": ""
													}
												],
												"src": "8371:312:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8835:173:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8845:74:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "8911:3:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8916:2:13",
																		"type": "",
																		"value": "21"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "8852:58:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "8852:67:13"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "8845:3:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "8940:3:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8945:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8936:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8936:11:13"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "8949:23:13",
																		"type": "",
																		"value": "ONLY_EMISSION_MANAGER"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8929:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "8929:44:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8929:44:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8983:19:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "8994:3:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8999:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8990:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "8990:12:13"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "8983:3:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_a28d34ff463a8cc689c6ec4b8c995983f85d0a40987242bc4cc3cec37303c18e_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "8823:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "8831:3:13",
														"type": ""
													}
												],
												"src": "8689:319:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9160:172:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9170:74:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "9236:3:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9241:2:13",
																		"type": "",
																		"value": "20"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "9177:58:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "9177:67:13"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "9170:3:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "9265:3:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9270:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9261:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9261:11:13"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "9274:22:13",
																		"type": "",
																		"value": "CLAIMER_UNAUTHORIZED"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9254:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "9254:43:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9254:43:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9307:19:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "9318:3:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9323:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9314:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "9314:12:13"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "9307:3:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_dc389f9f05ed02e337a2af628240d9d635867491305ed504870102f5e0924c61_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "9148:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "9156:3:13",
														"type": ""
													}
												],
												"src": "9014:318:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9403:53:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "9420:3:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "9443:5:13"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint104",
																			"nodeType": "YulIdentifier",
																			"src": "9425:17:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9425:24:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9413:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "9413:37:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9413:37:13"
														}
													]
												},
												"name": "abi_encode_t_uint104_to_t_uint104_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "9391:5:13",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "9398:3:13",
														"type": ""
													}
												],
												"src": "9338:118:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9527:66:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "9544:3:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "9580:5:13"
																			}
																		],
																		"functionName": {
																			"name": "convert_t_uint104_to_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "9549:30:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9549:37:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9537:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "9537:50:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9537:50:13"
														}
													]
												},
												"name": "abi_encode_t_uint104_to_t_uint256_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "9515:5:13",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "9522:3:13",
														"type": ""
													}
												],
												"src": "9462:131:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9664:53:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "9681:3:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "9704:5:13"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "9686:17:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9686:24:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9674:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "9674:37:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9674:37:13"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "9652:5:13",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "9659:3:13",
														"type": ""
													}
												],
												"src": "9599:118:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9786:52:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "9803:3:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "9825:5:13"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint40",
																			"nodeType": "YulIdentifier",
																			"src": "9808:16:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9808:23:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9796:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "9796:36:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9796:36:13"
														}
													]
												},
												"name": "abi_encode_t_uint40_to_t_uint40_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "9774:5:13",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "9781:3:13",
														"type": ""
													}
												],
												"src": "9723:115:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9905:51:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "9922:3:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "9943:5:13"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint8",
																			"nodeType": "YulIdentifier",
																			"src": "9927:15:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9927:22:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9915:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "9915:35:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9915:35:13"
														}
													]
												},
												"name": "abi_encode_t_uint8_to_t_uint8_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "9893:5:13",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "9900:3:13",
														"type": ""
													}
												],
												"src": "9844:112:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10060:124:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "10070:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10082:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10093:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10078:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "10078:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "10070:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "10150:6:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10163:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10174:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10159:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10159:17:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "10106:43:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "10106:71:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10106:71:13"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "10032:9:13",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "10044:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "10055:4:13",
														"type": ""
													}
												],
												"src": "9962:222:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10361:248:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "10371:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10383:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10394:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10379:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "10379:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "10371:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10418:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10429:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10414:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10414:17:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "10437:4:13"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10443:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "10433:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10433:20:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10407:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "10407:47:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10407:47:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10463:139:13",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "10597:4:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_4058a4fa702d397682b400d1a2d7894f822738ac481455440aeb37a04a780eca_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "10471:124:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "10471:131:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "10463:4:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_4058a4fa702d397682b400d1a2d7894f822738ac481455440aeb37a04a780eca__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "10341:9:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "10356:4:13",
														"type": ""
													}
												],
												"src": "10190:419:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10786:248:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "10796:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10808:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10819:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10804:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "10804:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "10796:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10843:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10854:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10839:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10839:17:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "10862:4:13"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10868:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "10858:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10858:20:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10832:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "10832:47:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10832:47:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10888:139:13",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "11022:4:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_60a6ecd9d15a2e4ae360b5943de5e7d94204c8fa7a9b93d3208a26418697ceb3_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "10896:124:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "10896:131:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "10888:4:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_60a6ecd9d15a2e4ae360b5943de5e7d94204c8fa7a9b93d3208a26418697ceb3__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "10766:9:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "10781:4:13",
														"type": ""
													}
												],
												"src": "10615:419:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11211:248:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "11221:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "11233:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11244:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "11229:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "11229:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "11221:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11268:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11279:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11264:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11264:17:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "11287:4:13"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11293:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "11283:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11283:20:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11257:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "11257:47:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11257:47:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "11313:139:13",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "11447:4:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_6959a97277e640037a0b87fbc8f4c35f54cb176c97a67a1f1334c0edec62895f_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "11321:124:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "11321:131:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "11313:4:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_6959a97277e640037a0b87fbc8f4c35f54cb176c97a67a1f1334c0edec62895f__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "11191:9:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "11206:4:13",
														"type": ""
													}
												],
												"src": "11040:419:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11636:248:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "11646:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "11658:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11669:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "11654:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "11654:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "11646:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11693:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11704:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11689:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11689:17:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "11712:4:13"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11718:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "11708:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11708:20:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11682:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "11682:47:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11682:47:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "11738:139:13",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "11872:4:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_7bbf22fcd0f8524161fb845274fb83ab60dddf8bd31fa7f66f897d29500d0e11_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "11746:124:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "11746:131:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "11738:4:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_7bbf22fcd0f8524161fb845274fb83ab60dddf8bd31fa7f66f897d29500d0e11__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "11616:9:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "11631:4:13",
														"type": ""
													}
												],
												"src": "11465:419:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12061:248:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "12071:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "12083:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12094:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "12079:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "12079:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "12071:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12118:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12129:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12114:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12114:17:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "12137:4:13"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12143:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "12133:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12133:20:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12107:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "12107:47:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12107:47:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "12163:139:13",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "12297:4:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_88066702ff2a817045c06422ff60e138f1b9ed6ff5eae8db2038ccb44cf1a522_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "12171:124:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "12171:131:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "12163:4:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_88066702ff2a817045c06422ff60e138f1b9ed6ff5eae8db2038ccb44cf1a522__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "12041:9:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "12056:4:13",
														"type": ""
													}
												],
												"src": "11890:419:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12486:248:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "12496:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "12508:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12519:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "12504:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "12504:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "12496:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12543:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12554:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12539:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12539:17:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "12562:4:13"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12568:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "12558:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12558:20:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12532:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "12532:47:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12532:47:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "12588:139:13",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "12722:4:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_a28d34ff463a8cc689c6ec4b8c995983f85d0a40987242bc4cc3cec37303c18e_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "12596:124:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "12596:131:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "12588:4:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_a28d34ff463a8cc689c6ec4b8c995983f85d0a40987242bc4cc3cec37303c18e__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "12466:9:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "12481:4:13",
														"type": ""
													}
												],
												"src": "12315:419:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12911:248:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "12921:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "12933:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12944:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "12929:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "12929:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "12921:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12968:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12979:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12964:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12964:17:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "12987:4:13"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12993:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "12983:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12983:20:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12957:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "12957:47:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12957:47:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "13013:139:13",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "13147:4:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_dc389f9f05ed02e337a2af628240d9d635867491305ed504870102f5e0924c61_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "13021:124:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "13021:131:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "13013:4:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_dc389f9f05ed02e337a2af628240d9d635867491305ed504870102f5e0924c61__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "12891:9:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "12906:4:13",
														"type": ""
													}
												],
												"src": "12740:419:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13263:124:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "13273:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "13285:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13296:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "13281:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "13281:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "13273:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "13353:6:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13366:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13377:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13362:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13362:17:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint104_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "13309:43:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "13309:71:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13309:71:13"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint104__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "13235:9:13",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "13247:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "13258:4:13",
														"type": ""
													}
												],
												"src": "13165:222:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13545:286:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "13555:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "13567:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13578:2:13",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "13563:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "13563:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "13555:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "13635:6:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13648:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13659:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13644:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13644:17:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint104_to_t_uint104_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "13591:43:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "13591:71:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13591:71:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "13716:6:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13729:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13740:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13725:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13725:18:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint104_to_t_uint104_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "13672:43:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "13672:72:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13672:72:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "13796:6:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13809:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13820:2:13",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13805:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13805:18:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint40_to_t_uint40_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "13754:41:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "13754:70:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13754:70:13"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint104_t_uint104_t_uint40__to_t_uint104_t_uint104_t_uint40__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "13501:9:13",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "13513:6:13",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "13521:6:13",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "13529:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "13540:4:13",
														"type": ""
													}
												],
												"src": "13393:438:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13935:124:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "13945:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "13957:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13968:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "13953:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "13953:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "13945:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "14025:6:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14038:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14049:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14034:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14034:17:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "13981:43:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "13981:71:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13981:71:13"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "13907:9:13",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "13919:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "13930:4:13",
														"type": ""
													}
												],
												"src": "13837:222:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14219:288:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "14229:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "14241:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14252:2:13",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "14237:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "14237:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "14229:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "14309:6:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14322:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14333:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14318:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14318:17:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "14265:43:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "14265:71:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14265:71:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "14390:6:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14403:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14414:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14399:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14399:18:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "14346:43:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "14346:72:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14346:72:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "14472:6:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14485:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14496:2:13",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14481:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14481:18:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "14428:43:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "14428:72:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14428:72:13"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "14175:9:13",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "14187:6:13",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "14195:6:13",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "14203:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "14214:4:13",
														"type": ""
													}
												],
												"src": "14065:442:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14607:120:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "14617:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "14629:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14640:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "14625:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "14625:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "14617:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "14693:6:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14706:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14717:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14702:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14702:17:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint8_to_t_uint8_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "14653:39:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "14653:67:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14653:67:13"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "14579:9:13",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "14591:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "14602:4:13",
														"type": ""
													}
												],
												"src": "14513:214:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14829:73:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "14846:3:13"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "14851:6:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14839:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "14839:19:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14839:19:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "14867:29:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "14886:3:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14891:4:13",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "14882:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "14882:14:13"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "14867:11:13"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "14801:3:13",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "14806:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "14817:11:13",
														"type": ""
													}
												],
												"src": "14733:169:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14953:51:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "14963:35:13",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "14992:5:13"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "14974:17:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "14974:24:13"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "14963:7:13"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "14935:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "14945:7:13",
														"type": ""
													}
												],
												"src": "14908:96:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15055:67:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "15065:51:13",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "15080:5:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15087:28:13",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "15076:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "15076:40:13"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "15065:7:13"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint104",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "15037:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "15047:7:13",
														"type": ""
													}
												],
												"src": "15010:112:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15173:81:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "15183:65:13",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "15198:5:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15205:42:13",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "15194:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "15194:54:13"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "15183:7:13"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "15155:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "15165:7:13",
														"type": ""
													}
												],
												"src": "15128:126:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15305:32:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "15315:16:13",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "15326:5:13"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "15315:7:13"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "15287:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "15297:7:13",
														"type": ""
													}
												],
												"src": "15260:77:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15387:51:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "15397:35:13",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "15412:5:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15419:12:13",
																		"type": "",
																		"value": "0xffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "15408:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "15408:24:13"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "15397:7:13"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint40",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "15369:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "15379:7:13",
														"type": ""
													}
												],
												"src": "15343:95:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15487:43:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "15497:27:13",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "15512:5:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15519:4:13",
																		"type": "",
																		"value": "0xff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "15508:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "15508:16:13"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "15497:7:13"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "15469:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "15479:7:13",
														"type": ""
													}
												],
												"src": "15444:86:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15596:53:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "15606:37:13",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "15637:5:13"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint104",
																	"nodeType": "YulIdentifier",
																	"src": "15619:17:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "15619:24:13"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nodeType": "YulIdentifier",
																	"src": "15606:9:13"
																}
															]
														}
													]
												},
												"name": "convert_t_uint104_to_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "15576:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nodeType": "YulTypedName",
														"src": "15586:9:13",
														"type": ""
													}
												],
												"src": "15536:113:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15698:79:13",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "15755:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "15764:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "15767:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "15757:6:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "15757:12:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "15757:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "15721:5:13"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "15746:5:13"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nodeType": "YulIdentifier",
																					"src": "15728:17:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "15728:24:13"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "15718:2:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15718:35:13"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "15711:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "15711:43:13"
															},
															"nodeType": "YulIf",
															"src": "15708:2:13"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "15691:5:13",
														"type": ""
													}
												],
												"src": "15655:122:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15826:79:13",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "15883:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "15892:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "15895:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "15885:6:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "15885:12:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "15885:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "15849:5:13"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "15874:5:13"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "15856:17:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "15856:24:13"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "15846:2:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15846:35:13"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "15839:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "15839:43:13"
															},
															"nodeType": "YulIf",
															"src": "15836:2:13"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "15819:5:13",
														"type": ""
													}
												],
												"src": "15783:122:13"
											}
										]
									},
									"contents": "{\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    // address[]\n    function abi_decode_t_array$_t_address_$dyn_calldata_ptr(offset, end) -> arrayPos, length {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        length := calldataload(offset)\n        if gt(length, 0xffffffffffffffff) { revert(0, 0) }\n        arrayPos := add(offset, 0x20)\n        if gt(add(arrayPos, mul(length, 0x20)), end) { revert(0, 0) }\n    }\n\n    // uint256[]\n    function abi_decode_t_array$_t_uint256_$dyn_calldata_ptr(offset, end) -> arrayPos, length {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        length := calldataload(offset)\n        if gt(length, 0xffffffffffffffff) { revert(0, 0) }\n        arrayPos := add(offset, 0x20)\n        if gt(add(arrayPos, mul(length, 0x20)), end) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n\n        {\n            let offset := 0\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n\n        {\n            let offset := 0\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n            let offset := 32\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_uint256t_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n\n        {\n            let offset := 0\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n            let offset := 32\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n            let offset := 64\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_array$_t_address_$dyn_calldata_ptrt_address(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n\n        {\n            let offset := calldataload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n            value0, value1 := abi_decode_t_array$_t_address_$dyn_calldata_ptr(add(headStart, offset), dataEnd)\n        }\n\n        {\n            let offset := 32\n            value2 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_array$_t_address_$dyn_calldata_ptrt_array$_t_uint256_$dyn_calldata_ptr(headStart, dataEnd) -> value0, value1, value2, value3 {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n\n        {\n            let offset := calldataload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n            value0, value1 := abi_decode_t_array$_t_address_$dyn_calldata_ptr(add(headStart, offset), dataEnd)\n        }\n\n        {\n            let offset := calldataload(add(headStart, 32))\n            if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n            value2, value3 := abi_decode_t_array$_t_uint256_$dyn_calldata_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_array$_t_address_$dyn_calldata_ptrt_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n\n        {\n            let offset := calldataload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n            value0, value1 := abi_decode_t_array$_t_address_$dyn_calldata_ptr(add(headStart, offset), dataEnd)\n        }\n\n        {\n            let offset := 32\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_array$_t_address_$dyn_calldata_ptrt_uint256t_address(headStart, dataEnd) -> value0, value1, value2, value3 {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n\n        {\n            let offset := calldataload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n            value0, value1 := abi_decode_t_array$_t_address_$dyn_calldata_ptr(add(headStart, offset), dataEnd)\n        }\n\n        {\n            let offset := 32\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n            let offset := 64\n            value3 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_array$_t_address_$dyn_calldata_ptrt_uint256t_addresst_address(headStart, dataEnd) -> value0, value1, value2, value3, value4 {\n        if slt(sub(dataEnd, headStart), 128) { revert(0, 0) }\n\n        {\n            let offset := calldataload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n            value0, value1 := abi_decode_t_array$_t_address_$dyn_calldata_ptr(add(headStart, offset), dataEnd)\n        }\n\n        {\n            let offset := 32\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n            let offset := 64\n            value3 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n            let offset := 96\n            value4 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n\n        {\n            let offset := 0\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n\n        {\n            let offset := 0\n            value0 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint256t_uint256_fromMemory(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n\n        {\n            let offset := 0\n            value0 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n            let offset := 32\n            value1 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_t_stringliteral_4058a4fa702d397682b400d1a2d7894f822738ac481455440aeb37a04a780eca_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 20)\n\n        mstore(add(pos, 0), \"INVALID_USER_ADDRESS\")\n\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_stringliteral_60a6ecd9d15a2e4ae360b5943de5e7d94204c8fa7a9b93d3208a26418697ceb3_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 18)\n\n        mstore(add(pos, 0), \"INVALID_TO_ADDRESS\")\n\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_stringliteral_6959a97277e640037a0b87fbc8f4c35f54cb176c97a67a1f1334c0edec62895f_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 21)\n\n        mstore(add(pos, 0), \"INVALID_CONFIGURATION\")\n\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_stringliteral_7bbf22fcd0f8524161fb845274fb83ab60dddf8bd31fa7f66f897d29500d0e11_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 36)\n\n        mstore(add(pos, 0), \"Index overflow at emissionsPerSe\")\n\n        mstore(add(pos, 32), \"cond\")\n\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_stringliteral_88066702ff2a817045c06422ff60e138f1b9ed6ff5eae8db2038ccb44cf1a522_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 14)\n\n        mstore(add(pos, 0), \"Index overflow\")\n\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_stringliteral_a28d34ff463a8cc689c6ec4b8c995983f85d0a40987242bc4cc3cec37303c18e_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 21)\n\n        mstore(add(pos, 0), \"ONLY_EMISSION_MANAGER\")\n\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_stringliteral_dc389f9f05ed02e337a2af628240d9d635867491305ed504870102f5e0924c61_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 20)\n\n        mstore(add(pos, 0), \"CLAIMER_UNAUTHORIZED\")\n\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_uint104_to_t_uint104_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint104(value))\n    }\n\n    function abi_encode_t_uint104_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, convert_t_uint104_to_t_uint256(value))\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_t_uint40_to_t_uint40_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint40(value))\n    }\n\n    function abi_encode_t_uint8_to_t_uint8_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint8(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_4058a4fa702d397682b400d1a2d7894f822738ac481455440aeb37a04a780eca__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_4058a4fa702d397682b400d1a2d7894f822738ac481455440aeb37a04a780eca_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_60a6ecd9d15a2e4ae360b5943de5e7d94204c8fa7a9b93d3208a26418697ceb3__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_60a6ecd9d15a2e4ae360b5943de5e7d94204c8fa7a9b93d3208a26418697ceb3_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_6959a97277e640037a0b87fbc8f4c35f54cb176c97a67a1f1334c0edec62895f__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_6959a97277e640037a0b87fbc8f4c35f54cb176c97a67a1f1334c0edec62895f_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_7bbf22fcd0f8524161fb845274fb83ab60dddf8bd31fa7f66f897d29500d0e11__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_7bbf22fcd0f8524161fb845274fb83ab60dddf8bd31fa7f66f897d29500d0e11_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_88066702ff2a817045c06422ff60e138f1b9ed6ff5eae8db2038ccb44cf1a522__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_88066702ff2a817045c06422ff60e138f1b9ed6ff5eae8db2038ccb44cf1a522_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_a28d34ff463a8cc689c6ec4b8c995983f85d0a40987242bc4cc3cec37303c18e__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_a28d34ff463a8cc689c6ec4b8c995983f85d0a40987242bc4cc3cec37303c18e_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_dc389f9f05ed02e337a2af628240d9d635867491305ed504870102f5e0924c61__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_dc389f9f05ed02e337a2af628240d9d635867491305ed504870102f5e0924c61_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_uint104__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint104_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_uint104_t_uint104_t_uint40__to_t_uint104_t_uint104_t_uint40__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_uint104_to_t_uint104_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint104_to_t_uint104_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint40_to_t_uint40_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint8_to_t_uint8_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_uint104(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function cleanup_t_uint40(value) -> cleaned {\n        cleaned := and(value, 0xffffffffff)\n    }\n\n    function cleanup_t_uint8(value) -> cleaned {\n        cleaned := and(value, 0xff)\n    }\n\n    function convert_t_uint104_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint104(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n}\n",
									"id": 13,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {
								"662": [
									{
										"length": 32,
										"start": 4283
									},
									{
										"length": 32,
										"start": 7746
									}
								],
								"1291": [
									{
										"length": 32,
										"start": 2081
									},
									{
										"length": 32,
										"start": 2878
									},
									{
										"length": 32,
										"start": 4603
									},
									{
										"length": 32,
										"start": 4805
									},
									{
										"length": 32,
										"start": 5082
									}
								]
							},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106101425760003560e01c8063919cd40f116100b8578063cc69afec1161007c578063cc69afec146103b1578063dde43cba146103cf578063e23ddec5146103ed578063f11b81881461040b578063f5bb3e021461043d578063f5cf673b1461045957610142565b8063919cd40f1461031d57806399248ea71461033b578063aaf5eb6814610359578063c4d66de814610377578063cbcbb5071461039357610142565b806339ccbdd31161010a57806339ccbdd31461022557806341485304146102415780636d34b96e1461027157806374d945ec146102a157806379f171b2146102d15780638b599f26146102ed57610142565b80631652e7b714610147578063198fa81e146101795780633111e7b3146101a957806331873e2e146101d95780633373ee4c146101f5575b600080fd5b610161600480360381019061015c91906126b7565b610475565b60405161017093929190612db2565b60405180910390f35b610193600480360381019061018e91906126b7565b6105c1565b6040516101a09190612d97565b60405180910390f35b6101c360048036038101906101be9190612890565b61060a565b6040516101d09190612d97565b60405180910390f35b6101f360048036038101906101ee919061271c565b610693565b005b61020f600480360381019061020a91906126e0565b610795565b60405161021c9190612d97565b60405180910390f35b61023f600480360381019061023a919061297c565b61081f565b005b61025b60048036038101906102569190612838565b6108ee565b6040516102689190612d97565b60405180910390f35b61028b600480360381019061028691906128fc565b610907565b6040516102989190612d97565b60405180910390f35b6102bb60048036038101906102b691906126b7565b610ad3565b6040516102c89190612c4a565b60405180910390f35b6102eb60048036038101906102e691906127c3565b610b3c565b005b6103076004803603810190610302919061276b565b610e80565b6040516103149190612d97565b60405180910390f35b6103256110af565b6040516103329190612d97565b60405180910390f35b6103436110b9565b6040516103509190612c4a565b60405180910390f35b6103616110dd565b60405161036e9190612de9565b60405180910390f35b610391600480360381019061038c91906126b7565b6110e2565b005b61039b6111f9565b6040516103a89190612c4a565b60405180910390f35b6103b961121d565b6040516103c69190612d97565b60405180910390f35b6103d7611227565b6040516103e49190612d97565b60405180910390f35b6103f561122c565b6040516104029190612c4a565b60405180910390f35b610425600480360381019061042091906126b7565b611256565b60405161043493929190612d60565b60405180910390f35b610457600480360381019061045291906126b7565b6112c3565b005b610473600480360381019061046e91906126e0565b6113d8565b005b6000806000603360008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600001600d9054906101000a90046cffffffffffffffffffffffffff16603360008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160009054906101000a90046cffffffffffffffffffffffffff16603360008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600001601a9054906101000a900464ffffffffff16826cffffffffffffffffffffffffff169250816cffffffffffffffffffffffffff1691508064ffffffffff1690509250925092509193909250565b6000603560008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b60008073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16141561067b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161067290612c85565b60405180910390fd5b610689858585333387611542565b9050949350505050565b60006106a1843384866118e0565b90506000811461078f576106fd81603560008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054611a5290919063ffffffff16565b603560008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508373ffffffffffffffffffffffffffffffffffffffff167f2468f9268c60ad90e2d49edb0032c8a001e733ae888b3ab8e982edf535be1a76826040516107869190612d97565b60405180910390a25b50505050565b6000603360008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146108ad576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108a490612d05565b60405180910390fd5b806034819055507f1cc1849a6602c3e91f2088cadea4381cc5717f2f28584197060ed2ebb434c16f816040516108e39190612d97565b60405180910390a150565b60006108fe848484333333611542565b90509392505050565b600033838173ffffffffffffffffffffffffffffffffffffffff16603660008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16146109d8576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109cf90612d25565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff161415610a48576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a3f90612c65565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff161415610ab8576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610aaf90612c85565b60405180910390fd5b610ac6888888338989611542565b9250505095945050505050565b6000603660008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610bca576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610bc190612d05565b60405180910390fd5b818190508484905014610c12576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c0990612ca5565b60405180910390fd5b60608484905067ffffffffffffffff81118015610c2e57600080fd5b50604051908082528060200260200182016040528015610c6857816020015b610c55612567565b815260200190600190039081610c4d5790505b50905060005b85859050811015610e6f57838382818110610c8557fe5b90506020020135848483818110610c9857fe5b905060200201356cffffffffffffffffffffffffff1614610cee576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ce590612cc5565b60405180910390fd5b858582818110610cfa57fe5b9050602002016020810190610d0f91906126b7565b828281518110610d1b57fe5b60200260200101516040019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff1681525050838382818110610d6557fe5b90506020020135828281518110610d7857fe5b6020026020010151600001906cffffffffffffffffffffffffff1690816cffffffffffffffffffffffffff1681525050858582818110610db457fe5b9050602002016020810190610dc991906126b7565b73ffffffffffffffffffffffffffffffffffffffff1663b1bf962d6040518163ffffffff1660e01b815260040160206040518083038186803b158015610e0e57600080fd5b505afa158015610e22573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e4691906129a5565b828281518110610e5257fe5b602002602001015160200181815250508080600101915050610c6e565b50610e7981611a6c565b5050505050565b600080603560008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905060608585905067ffffffffffffffff81118015610ee157600080fd5b50604051908082528060200260200182016040528015610f1b57816020015b610f086125ad565b815260200190600190039081610f005790505b50905060005b8686905081101561108457868682818110610f3857fe5b9050602002016020810190610f4d91906126b7565b828281518110610f5957fe5b60200260200101516000019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff1681525050868682818110610fa357fe5b9050602002016020810190610fb891906126b7565b73ffffffffffffffffffffffffffffffffffffffff16630afbcdc9866040518263ffffffff1660e01b8152600401610ff09190612c4a565b604080518083038186803b15801561100757600080fd5b505afa15801561101b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061103f91906129ce565b83838151811061104b57fe5b602002602001015160200184848151811061106257fe5b6020026020010151604001828152508281525050508080600101915050610f21565b506110a16110928583611be6565b83611a5290919063ffffffff16565b915081925050509392505050565b6000603454905090565b7f000000000000000000000000000000000000000000000000000000000000000081565b601281565b60006110ec611d7f565b90506000548111611148576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602e815260200180612ec9602e913960400191505060405180910390fd5b8060008190555081603760006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550603760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f28a48cbce43190d77247f342cf319b1607bff4ef716cf26b76cf7bb71baebaa560405160405180910390a25050565b7f000000000000000000000000000000000000000000000000000000000000000081565b6000603454905090565b600181565b6000603760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60336020528060005260406000206000915090508060000160009054906101000a90046cffffffffffffffffffffffffff169080600001600d9054906101000a90046cffffffffffffffffffffffffff169080600001601a9054906101000a900464ffffffffff16905083565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614611351576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161134890612d05565b60405180910390fd5b80603760006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508073ffffffffffffffffffffffffffffffffffffffff167f28a48cbce43190d77247f342cf319b1607bff4ef716cf26b76cf7bb71baebaa560405160405180910390a250565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614611466576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161145d90612d05565b60405180910390fd5b80603660008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167f4925eafc82d0c4d67889898eeed64b18488ab19811e61620f387026dec126a2860405160405180910390a35050565b60008085141561155557600090506118d6565b6000603560008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050808611156117de5760608888905067ffffffffffffffff811180156115bd57600080fd5b506040519080825280602002602001820160405280156115f757816020015b6115e46125ad565b8152602001906001900390816115dc5790505b50905060005b898990508110156117605789898281811061161457fe5b905060200201602081019061162991906126b7565b82828151811061163557fe5b60200260200101516000019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff168152505089898281811061167f57fe5b905060200201602081019061169491906126b7565b73ffffffffffffffffffffffffffffffffffffffff16630afbcdc9876040518263ffffffff1660e01b81526004016116cc9190612c4a565b604080518083038186803b1580156116e357600080fd5b505afa1580156116f7573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061171b91906129ce565b83838151811061172757fe5b602002602001015160200184848151811061173e57fe5b60200260200101516040018281525082815250505080806001019150506115fd565b50600061176d8683611d88565b9050600081146117db5761178a8184611a5290919063ffffffff16565b92508573ffffffffffffffffffffffffffffffffffffffff167f2468f9268c60ad90e2d49edb0032c8a001e733ae888b3ab8e982edf535be1a76826040516117d29190612d97565b60405180910390a25b50505b60008114156117f15760009150506118d6565b60008187116118005786611802565b815b9050808203603560008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055506118548482611e18565b8573ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff168673ffffffffffffffffffffffffffffffffffffffff167f5637d7f962248a7f05a7ab69eec6446e31f3d0a299d997f135a65c62806e7891846040516118c89190612d97565b60405180910390a480925050505b9695505050505050565b600080603360008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020905060008160010160008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050600080611978888588611e8b565b9050808314611a4357600087146119975761199487828561207e565b91505b808460010160008b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508773ffffffffffffffffffffffffffffffffffffffff168973ffffffffffffffffffffffffffffffffffffffff167fbb123b5c06d5408bbea3c4fef481578175cfb432e3b482c6186f02ed9086585b83604051611a3a9190612d97565b60405180910390a35b81945050505050949350505050565b6000828284019150811015611a6657600080fd5b92915050565b60005b8151811015611be257600060336000848481518110611a8a57fe5b60200260200101516040015173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000209050611b0b838381518110611ae157fe5b60200260200101516040015182858581518110611afa57fe5b602002602001015160200151611e8b565b50828281518110611b1857fe5b6020026020010151600001518160000160006101000a8154816cffffffffffffffffffffffffff02191690836cffffffffffffffffffffffffff160217905550828281518110611b6457fe5b60200260200101516040015173ffffffffffffffffffffffffffffffffffffffff167f87fa03892a0556cb6b8f97e6d533a150d4d55fcbf275fff5fa003fa636bcc7fa848481518110611bb357fe5b602002602001015160000151604051611bcc9190612d45565b60405180910390a2508080600101915050611a6f565b5050565b6000806000905060005b8351811015611d7457600060336000868481518110611c0b57fe5b60200260200101516000015173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002090506000611cec82600001600d9054906101000a90046cffffffffffffffffffffffffff166cffffffffffffffffffffffffff168360000160009054906101000a90046cffffffffffffffffffffffffff166cffffffffffffffffffffffffff1684600001601a9054906101000a900464ffffffffff1664ffffffffff16898781518110611cdb57fe5b6020026020010151604001516120be565b9050611d63611d54878581518110611d0057fe5b602002602001015160200151838560010160008c73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461207e565b85611a5290919063ffffffff16565b935050508080600101915050611bf0565b508091505092915050565b60006001905090565b6000806000905060005b8351811015611e0d57611dfe611def86868481518110611dae57fe5b602002602001015160000151878581518110611dc657fe5b602002602001015160200151888681518110611dde57fe5b6020026020010151604001516118e0565b83611a5290919063ffffffff16565b91508080600101915050611d92565b508091505092915050565b611e87603760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1683837f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166121b6909392919063ffffffff16565b5050565b60008083600001600d9054906101000a90046cffffffffffffffffffffffffff166cffffffffffffffffffffffffff16905060008460000160009054906101000a90046cffffffffffffffffffffffffff166cffffffffffffffffffffffffff169050600085600001601a9054906101000a900464ffffffffff1664ffffffffff169050806fffffffffffffffffffffffffffffffff16421415611f3457829350505050612077565b6000611f42848484896120be565b90508381146120495780816cffffffffffffffffffffffffff1614611f9c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611f9390612ce5565b60405180910390fd5b8087600001600d6101000a8154816cffffffffffffffffffffffffff02191690836cffffffffffffffffffffffffff1602179055504287600001601a6101000a81548164ffffffffff021916908364ffffffffff1602179055508773ffffffffffffffffffffffffffffffffffffffff167f5777ca300dfe5bead41006fbce4389794dbc0ed8d6cccebfaf94630aa04184bc8260405161203c9190612d97565b60405180910390a261206f565b4287600001601a6101000a81548164ffffffffff021916908364ffffffffff1602179055505b809450505050505b9392505050565b6000601260ff16600a0a6120ad61209e848661227790919063ffffffff16565b8661229190919063ffffffff16565b816120b457fe5b0490509392505050565b600080603454905060008514806120d55750600083145b806120f1575042846fffffffffffffffffffffffffffffffff16145b8061210e575080846fffffffffffffffffffffffffffffffff1610155b1561211c57859150506121ae565b600081421161212b574261212d565b815b90506000612156866fffffffffffffffffffffffffffffffff168361227790919063ffffffff16565b90506121a88861219a8761218c601260ff16600a0a61217e878e61229190919063ffffffff16565b61229190919063ffffffff16565b6122bd90919063ffffffff16565b611a5290919063ffffffff16565b93505050505b949350505050565b612271846323b872dd60e01b858585604051602401808473ffffffffffffffffffffffffffffffffffffffff1681526020018373ffffffffffffffffffffffffffffffffffffffff1681526020018281526020019350505050604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff83818316178352505050506122d1565b50505050565b600082828403915081111561228b57600080fd5b92915050565b6000808314806122ae57508183838502925082816122ab57fe5b04145b6122b757600080fd5b92915050565b60008183816122c857fe5b04905092915050565b6122f08273ffffffffffffffffffffffffffffffffffffffff1661251c565b612362576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601f8152602001807f5361666545524332303a2063616c6c20746f206e6f6e2d636f6e74726163740081525060200191505060405180910390fd5b600060608373ffffffffffffffffffffffffffffffffffffffff16836040518082805190602001908083835b602083106123b1578051825260208201915060208101905060208303925061238e565b6001836020036101000a0380198251168184511680821785525050505050509050019150506000604051808303816000865af19150503d8060008114612413576040519150601f19603f3d011682016040523d82523d6000602084013e612418565b606091505b509150915081612490576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c656481525060200191505060405180910390fd5b600081511115612516578080602001905160208110156124af57600080fd5b8101908080519060200190929190505050612515576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602a815260200180612ef7602a913960400191505060405180910390fd5b5b50505050565b60008060007fc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a47060001b9050833f915080821415801561255e57506000801b8214155b92505050919050565b604051806060016040528060006cffffffffffffffffffffffffff16815260200160008152602001600073ffffffffffffffffffffffffffffffffffffffff1681525090565b6040518060600160405280600073ffffffffffffffffffffffffffffffffffffffff16815260200160008152602001600081525090565b6000813590506125f381612e9a565b92915050565b60008083601f84011261260b57600080fd5b8235905067ffffffffffffffff81111561262457600080fd5b60208301915083602082028301111561263c57600080fd5b9250929050565b60008083601f84011261265557600080fd5b8235905067ffffffffffffffff81111561266e57600080fd5b60208301915083602082028301111561268657600080fd5b9250929050565b60008135905061269c81612eb1565b92915050565b6000815190506126b181612eb1565b92915050565b6000602082840312156126c957600080fd5b60006126d7848285016125e4565b91505092915050565b600080604083850312156126f357600080fd5b6000612701858286016125e4565b9250506020612712858286016125e4565b9150509250929050565b60008060006060848603121561273157600080fd5b600061273f868287016125e4565b93505060206127508682870161268d565b92505060406127618682870161268d565b9150509250925092565b60008060006040848603121561278057600080fd5b600084013567ffffffffffffffff81111561279a57600080fd5b6127a6868287016125f9565b935093505060206127b9868287016125e4565b9150509250925092565b600080600080604085870312156127d957600080fd5b600085013567ffffffffffffffff8111156127f357600080fd5b6127ff878288016125f9565b9450945050602085013567ffffffffffffffff81111561281e57600080fd5b61282a87828801612643565b925092505092959194509250565b60008060006040848603121561284d57600080fd5b600084013567ffffffffffffffff81111561286757600080fd5b612873868287016125f9565b935093505060206128868682870161268d565b9150509250925092565b600080600080606085870312156128a657600080fd5b600085013567ffffffffffffffff8111156128c057600080fd5b6128cc878288016125f9565b945094505060206128df8782880161268d565b92505060406128f0878288016125e4565b91505092959194509250565b60008060008060006080868803121561291457600080fd5b600086013567ffffffffffffffff81111561292e57600080fd5b61293a888289016125f9565b9550955050602061294d8882890161268d565b935050604061295e888289016125e4565b925050606061296f888289016125e4565b9150509295509295909350565b60006020828403121561298e57600080fd5b600061299c8482850161268d565b91505092915050565b6000602082840312156129b757600080fd5b60006129c5848285016126a2565b91505092915050565b600080604083850312156129e157600080fd5b60006129ef858286016126a2565b9250506020612a00858286016126a2565b9150509250929050565b612a1381612e15565b82525050565b6000612a26601483612e04565b91507f494e56414c49445f555345525f414444524553530000000000000000000000006000830152602082019050919050565b6000612a66601283612e04565b91507f494e56414c49445f544f5f4144445245535300000000000000000000000000006000830152602082019050919050565b6000612aa6601583612e04565b91507f494e56414c49445f434f4e46494755524154494f4e00000000000000000000006000830152602082019050919050565b6000612ae6602483612e04565b91507f496e646578206f766572666c6f7720617420656d697373696f6e73506572536560008301527f636f6e64000000000000000000000000000000000000000000000000000000006020830152604082019050919050565b6000612b4c600e83612e04565b91507f496e646578206f766572666c6f770000000000000000000000000000000000006000830152602082019050919050565b6000612b8c601583612e04565b91507f4f4e4c595f454d495353494f4e5f4d414e4147455200000000000000000000006000830152602082019050919050565b6000612bcc601483612e04565b91507f434c41494d45525f554e415554484f52495a45440000000000000000000000006000830152602082019050919050565b612c0881612e27565b82525050565b612c1781612e88565b82525050565b612c2681612e60565b82525050565b612c3581612e6a565b82525050565b612c4481612e7b565b82525050565b6000602082019050612c5f6000830184612a0a565b92915050565b60006020820190508181036000830152612c7e81612a19565b9050919050565b60006020820190508181036000830152612c9e81612a59565b9050919050565b60006020820190508181036000830152612cbe81612a99565b9050919050565b60006020820190508181036000830152612cde81612ad9565b9050919050565b60006020820190508181036000830152612cfe81612b3f565b9050919050565b60006020820190508181036000830152612d1e81612b7f565b9050919050565b60006020820190508181036000830152612d3e81612bbf565b9050919050565b6000602082019050612d5a6000830184612c0e565b92915050565b6000606082019050612d756000830186612bff565b612d826020830185612bff565b612d8f6040830184612c2c565b949350505050565b6000602082019050612dac6000830184612c1d565b92915050565b6000606082019050612dc76000830186612c1d565b612dd46020830185612c1d565b612de16040830184612c1d565b949350505050565b6000602082019050612dfe6000830184612c3b565b92915050565b600082825260208201905092915050565b6000612e2082612e40565b9050919050565b60006cffffffffffffffffffffffffff82169050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600064ffffffffff82169050919050565b600060ff82169050919050565b6000612e9382612e27565b9050919050565b612ea381612e15565b8114612eae57600080fd5b50565b612eba81612e60565b8114612ec557600080fd5b5056fe436f6e747261637420696e7374616e63652068617320616c7265616479206265656e20696e697469616c697a65645361666545524332303a204552433230206f7065726174696f6e20646964206e6f742073756363656564a26469706673582212208ddb6503f8a391f3aa4620a5fb5787cd6782c4c0ca8381ffa562d248171ad38e64736f6c63430007050033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x142 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x919CD40F GT PUSH2 0xB8 JUMPI DUP1 PUSH4 0xCC69AFEC GT PUSH2 0x7C JUMPI DUP1 PUSH4 0xCC69AFEC EQ PUSH2 0x3B1 JUMPI DUP1 PUSH4 0xDDE43CBA EQ PUSH2 0x3CF JUMPI DUP1 PUSH4 0xE23DDEC5 EQ PUSH2 0x3ED JUMPI DUP1 PUSH4 0xF11B8188 EQ PUSH2 0x40B JUMPI DUP1 PUSH4 0xF5BB3E02 EQ PUSH2 0x43D JUMPI DUP1 PUSH4 0xF5CF673B EQ PUSH2 0x459 JUMPI PUSH2 0x142 JUMP JUMPDEST DUP1 PUSH4 0x919CD40F EQ PUSH2 0x31D JUMPI DUP1 PUSH4 0x99248EA7 EQ PUSH2 0x33B JUMPI DUP1 PUSH4 0xAAF5EB68 EQ PUSH2 0x359 JUMPI DUP1 PUSH4 0xC4D66DE8 EQ PUSH2 0x377 JUMPI DUP1 PUSH4 0xCBCBB507 EQ PUSH2 0x393 JUMPI PUSH2 0x142 JUMP JUMPDEST DUP1 PUSH4 0x39CCBDD3 GT PUSH2 0x10A JUMPI DUP1 PUSH4 0x39CCBDD3 EQ PUSH2 0x225 JUMPI DUP1 PUSH4 0x41485304 EQ PUSH2 0x241 JUMPI DUP1 PUSH4 0x6D34B96E EQ PUSH2 0x271 JUMPI DUP1 PUSH4 0x74D945EC EQ PUSH2 0x2A1 JUMPI DUP1 PUSH4 0x79F171B2 EQ PUSH2 0x2D1 JUMPI DUP1 PUSH4 0x8B599F26 EQ PUSH2 0x2ED JUMPI PUSH2 0x142 JUMP JUMPDEST DUP1 PUSH4 0x1652E7B7 EQ PUSH2 0x147 JUMPI DUP1 PUSH4 0x198FA81E EQ PUSH2 0x179 JUMPI DUP1 PUSH4 0x3111E7B3 EQ PUSH2 0x1A9 JUMPI DUP1 PUSH4 0x31873E2E EQ PUSH2 0x1D9 JUMPI DUP1 PUSH4 0x3373EE4C EQ PUSH2 0x1F5 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x161 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x15C SWAP2 SWAP1 PUSH2 0x26B7 JUMP JUMPDEST PUSH2 0x475 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x170 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2DB2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x193 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x18E SWAP2 SWAP1 PUSH2 0x26B7 JUMP JUMPDEST PUSH2 0x5C1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1A0 SWAP2 SWAP1 PUSH2 0x2D97 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1C3 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1BE SWAP2 SWAP1 PUSH2 0x2890 JUMP JUMPDEST PUSH2 0x60A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1D0 SWAP2 SWAP1 PUSH2 0x2D97 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1F3 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1EE SWAP2 SWAP1 PUSH2 0x271C JUMP JUMPDEST PUSH2 0x693 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x20F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x20A SWAP2 SWAP1 PUSH2 0x26E0 JUMP JUMPDEST PUSH2 0x795 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x21C SWAP2 SWAP1 PUSH2 0x2D97 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x23F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x23A SWAP2 SWAP1 PUSH2 0x297C JUMP JUMPDEST PUSH2 0x81F JUMP JUMPDEST STOP JUMPDEST PUSH2 0x25B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x256 SWAP2 SWAP1 PUSH2 0x2838 JUMP JUMPDEST PUSH2 0x8EE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x268 SWAP2 SWAP1 PUSH2 0x2D97 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x28B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x286 SWAP2 SWAP1 PUSH2 0x28FC JUMP JUMPDEST PUSH2 0x907 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x298 SWAP2 SWAP1 PUSH2 0x2D97 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2BB PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2B6 SWAP2 SWAP1 PUSH2 0x26B7 JUMP JUMPDEST PUSH2 0xAD3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2C8 SWAP2 SWAP1 PUSH2 0x2C4A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2EB PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2E6 SWAP2 SWAP1 PUSH2 0x27C3 JUMP JUMPDEST PUSH2 0xB3C JUMP JUMPDEST STOP JUMPDEST PUSH2 0x307 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x302 SWAP2 SWAP1 PUSH2 0x276B JUMP JUMPDEST PUSH2 0xE80 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x314 SWAP2 SWAP1 PUSH2 0x2D97 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x325 PUSH2 0x10AF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x332 SWAP2 SWAP1 PUSH2 0x2D97 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x343 PUSH2 0x10B9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x350 SWAP2 SWAP1 PUSH2 0x2C4A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x361 PUSH2 0x10DD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x36E SWAP2 SWAP1 PUSH2 0x2DE9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x391 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x38C SWAP2 SWAP1 PUSH2 0x26B7 JUMP JUMPDEST PUSH2 0x10E2 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x39B PUSH2 0x11F9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3A8 SWAP2 SWAP1 PUSH2 0x2C4A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3B9 PUSH2 0x121D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3C6 SWAP2 SWAP1 PUSH2 0x2D97 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3D7 PUSH2 0x1227 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3E4 SWAP2 SWAP1 PUSH2 0x2D97 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3F5 PUSH2 0x122C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x402 SWAP2 SWAP1 PUSH2 0x2C4A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x425 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x420 SWAP2 SWAP1 PUSH2 0x26B7 JUMP JUMPDEST PUSH2 0x1256 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x434 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2D60 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x457 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x452 SWAP2 SWAP1 PUSH2 0x26B7 JUMP JUMPDEST PUSH2 0x12C3 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x473 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x46E SWAP2 SWAP1 PUSH2 0x26E0 JUMP JUMPDEST PUSH2 0x13D8 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x33 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0xD SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH13 0xFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x33 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH13 0xFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x33 PUSH1 0x0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x1A SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH5 0xFFFFFFFFFF AND DUP3 PUSH13 0xFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP3 POP DUP2 PUSH13 0xFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP2 POP DUP1 PUSH5 0xFFFFFFFFFF AND SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 POP SWAP2 SWAP4 SWAP1 SWAP3 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x35 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x67B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x672 SWAP1 PUSH2 0x2C85 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x689 DUP6 DUP6 DUP6 CALLER CALLER DUP8 PUSH2 0x1542 JUMP JUMPDEST SWAP1 POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x6A1 DUP5 CALLER DUP5 DUP7 PUSH2 0x18E0 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 EQ PUSH2 0x78F JUMPI PUSH2 0x6FD DUP2 PUSH1 0x35 PUSH1 0x0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x1A52 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x35 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x2468F9268C60AD90E2D49EDB0032C8A001E733AE888B3AB8E982EDF535BE1A76 DUP3 PUSH1 0x40 MLOAD PUSH2 0x786 SWAP2 SWAP1 PUSH2 0x2D97 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x33 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x8AD JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8A4 SWAP1 PUSH2 0x2D05 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x34 DUP2 SWAP1 SSTORE POP PUSH32 0x1CC1849A6602C3E91F2088CADEA4381CC5717F2F28584197060ED2EBB434C16F DUP2 PUSH1 0x40 MLOAD PUSH2 0x8E3 SWAP2 SWAP1 PUSH2 0x2D97 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x8FE DUP5 DUP5 DUP5 CALLER CALLER CALLER PUSH2 0x1542 JUMP JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 CALLER DUP4 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x36 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x9D8 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9CF SWAP1 PUSH2 0x2D25 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0xA48 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA3F SWAP1 PUSH2 0x2C65 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0xAB8 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xAAF SWAP1 PUSH2 0x2C85 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xAC6 DUP9 DUP9 DUP9 CALLER DUP10 DUP10 PUSH2 0x1542 JUMP JUMPDEST SWAP3 POP POP POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x36 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xBCA JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xBC1 SWAP1 PUSH2 0x2D05 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SWAP1 POP DUP5 DUP5 SWAP1 POP EQ PUSH2 0xC12 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC09 SWAP1 PUSH2 0x2CA5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x60 DUP5 DUP5 SWAP1 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP1 ISZERO PUSH2 0xC2E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0xC68 JUMPI DUP2 PUSH1 0x20 ADD JUMPDEST PUSH2 0xC55 PUSH2 0x2567 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 SWAP1 SUB SWAP1 DUP2 PUSH2 0xC4D JUMPI SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 JUMPDEST DUP6 DUP6 SWAP1 POP DUP2 LT ISZERO PUSH2 0xE6F JUMPI DUP4 DUP4 DUP3 DUP2 DUP2 LT PUSH2 0xC85 JUMPI INVALID JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD CALLDATALOAD DUP5 DUP5 DUP4 DUP2 DUP2 LT PUSH2 0xC98 JUMPI INVALID JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD CALLDATALOAD PUSH13 0xFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xCEE JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xCE5 SWAP1 PUSH2 0x2CC5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP6 DUP6 DUP3 DUP2 DUP2 LT PUSH2 0xCFA JUMPI INVALID JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0xD0F SWAP2 SWAP1 PUSH2 0x26B7 JUMP JUMPDEST DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0xD1B JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x40 ADD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP DUP4 DUP4 DUP3 DUP2 DUP2 LT PUSH2 0xD65 JUMPI INVALID JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD CALLDATALOAD DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0xD78 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x0 ADD SWAP1 PUSH13 0xFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP2 PUSH13 0xFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP DUP6 DUP6 DUP3 DUP2 DUP2 LT PUSH2 0xDB4 JUMPI INVALID JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0xDC9 SWAP2 SWAP1 PUSH2 0x26B7 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xB1BF962D PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xE0E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xE22 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xE46 SWAP2 SWAP1 PUSH2 0x29A5 JUMP JUMPDEST DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0xE52 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x20 ADD DUP2 DUP2 MSTORE POP POP DUP1 DUP1 PUSH1 0x1 ADD SWAP2 POP POP PUSH2 0xC6E JUMP JUMPDEST POP PUSH2 0xE79 DUP2 PUSH2 0x1A6C JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x35 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP PUSH1 0x60 DUP6 DUP6 SWAP1 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP1 ISZERO PUSH2 0xEE1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0xF1B JUMPI DUP2 PUSH1 0x20 ADD JUMPDEST PUSH2 0xF08 PUSH2 0x25AD JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 SWAP1 SUB SWAP1 DUP2 PUSH2 0xF00 JUMPI SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 JUMPDEST DUP7 DUP7 SWAP1 POP DUP2 LT ISZERO PUSH2 0x1084 JUMPI DUP7 DUP7 DUP3 DUP2 DUP2 LT PUSH2 0xF38 JUMPI INVALID JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0xF4D SWAP2 SWAP1 PUSH2 0x26B7 JUMP JUMPDEST DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0xF59 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x0 ADD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP DUP7 DUP7 DUP3 DUP2 DUP2 LT PUSH2 0xFA3 JUMPI INVALID JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0xFB8 SWAP2 SWAP1 PUSH2 0x26B7 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xAFBCDC9 DUP7 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xFF0 SWAP2 SWAP1 PUSH2 0x2C4A JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1007 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x101B JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x103F SWAP2 SWAP1 PUSH2 0x29CE JUMP JUMPDEST DUP4 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x104B JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x20 ADD DUP5 DUP5 DUP2 MLOAD DUP2 LT PUSH2 0x1062 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x40 ADD DUP3 DUP2 MSTORE POP DUP3 DUP2 MSTORE POP POP POP DUP1 DUP1 PUSH1 0x1 ADD SWAP2 POP POP PUSH2 0xF21 JUMP JUMPDEST POP PUSH2 0x10A1 PUSH2 0x1092 DUP6 DUP4 PUSH2 0x1BE6 JUMP JUMPDEST DUP4 PUSH2 0x1A52 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP2 POP DUP2 SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x34 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0x12 DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x10EC PUSH2 0x1D7F JUMP JUMPDEST SWAP1 POP PUSH1 0x0 SLOAD DUP2 GT PUSH2 0x1148 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x2E DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x2EC9 PUSH1 0x2E SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x0 DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x37 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x37 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x28A48CBCE43190D77247F342CF319B1607BFF4EF716CF26B76CF7BB71BAEBAA5 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x34 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x1 DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x37 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x33 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP DUP1 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH13 0xFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP1 PUSH1 0x0 ADD PUSH1 0xD SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH13 0xFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP1 PUSH1 0x0 ADD PUSH1 0x1A SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH5 0xFFFFFFFFFF AND SWAP1 POP DUP4 JUMP JUMPDEST PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1351 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1348 SWAP1 PUSH2 0x2D05 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x37 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x28A48CBCE43190D77247F342CF319B1607BFF4EF716CF26B76CF7BB71BAEBAA5 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP JUMP JUMPDEST PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1466 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x145D SWAP1 PUSH2 0x2D05 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x36 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x4925EAFC82D0C4D67889898EEED64B18488AB19811E61620F387026DEC126A28 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP6 EQ ISZERO PUSH2 0x1555 JUMPI PUSH1 0x0 SWAP1 POP PUSH2 0x18D6 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x35 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP DUP1 DUP7 GT ISZERO PUSH2 0x17DE JUMPI PUSH1 0x60 DUP9 DUP9 SWAP1 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP1 ISZERO PUSH2 0x15BD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x15F7 JUMPI DUP2 PUSH1 0x20 ADD JUMPDEST PUSH2 0x15E4 PUSH2 0x25AD JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 SWAP1 SUB SWAP1 DUP2 PUSH2 0x15DC JUMPI SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 JUMPDEST DUP10 DUP10 SWAP1 POP DUP2 LT ISZERO PUSH2 0x1760 JUMPI DUP10 DUP10 DUP3 DUP2 DUP2 LT PUSH2 0x1614 JUMPI INVALID JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x1629 SWAP2 SWAP1 PUSH2 0x26B7 JUMP JUMPDEST DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x1635 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x0 ADD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP DUP10 DUP10 DUP3 DUP2 DUP2 LT PUSH2 0x167F JUMPI INVALID JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x1694 SWAP2 SWAP1 PUSH2 0x26B7 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xAFBCDC9 DUP8 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x16CC SWAP2 SWAP1 PUSH2 0x2C4A JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x16E3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x16F7 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x171B SWAP2 SWAP1 PUSH2 0x29CE JUMP JUMPDEST DUP4 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x1727 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x20 ADD DUP5 DUP5 DUP2 MLOAD DUP2 LT PUSH2 0x173E JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x40 ADD DUP3 DUP2 MSTORE POP DUP3 DUP2 MSTORE POP POP POP DUP1 DUP1 PUSH1 0x1 ADD SWAP2 POP POP PUSH2 0x15FD JUMP JUMPDEST POP PUSH1 0x0 PUSH2 0x176D DUP7 DUP4 PUSH2 0x1D88 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 EQ PUSH2 0x17DB JUMPI PUSH2 0x178A DUP2 DUP5 PUSH2 0x1A52 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP3 POP DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x2468F9268C60AD90E2D49EDB0032C8A001E733AE888B3AB8E982EDF535BE1A76 DUP3 PUSH1 0x40 MLOAD PUSH2 0x17D2 SWAP2 SWAP1 PUSH2 0x2D97 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 JUMPDEST POP POP JUMPDEST PUSH1 0x0 DUP2 EQ ISZERO PUSH2 0x17F1 JUMPI PUSH1 0x0 SWAP2 POP POP PUSH2 0x18D6 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP8 GT PUSH2 0x1800 JUMPI DUP7 PUSH2 0x1802 JUMP JUMPDEST DUP2 JUMPDEST SWAP1 POP DUP1 DUP3 SUB PUSH1 0x35 PUSH1 0x0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0x1854 DUP5 DUP3 PUSH2 0x1E18 JUMP JUMPDEST DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x5637D7F962248A7F05A7AB69EEC6446E31F3D0A299D997F135A65C62806E7891 DUP5 PUSH1 0x40 MLOAD PUSH2 0x18C8 SWAP2 SWAP1 PUSH2 0x2D97 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 DUP1 SWAP3 POP POP POP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x33 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 POP PUSH1 0x0 DUP2 PUSH1 0x1 ADD PUSH1 0x0 DUP9 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP PUSH1 0x0 DUP1 PUSH2 0x1978 DUP9 DUP6 DUP9 PUSH2 0x1E8B JUMP JUMPDEST SWAP1 POP DUP1 DUP4 EQ PUSH2 0x1A43 JUMPI PUSH1 0x0 DUP8 EQ PUSH2 0x1997 JUMPI PUSH2 0x1994 DUP8 DUP3 DUP6 PUSH2 0x207E JUMP JUMPDEST SWAP2 POP JUMPDEST DUP1 DUP5 PUSH1 0x1 ADD PUSH1 0x0 DUP12 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP10 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xBB123B5C06D5408BBEA3C4FEF481578175CFB432E3B482C6186F02ED9086585B DUP4 PUSH1 0x40 MLOAD PUSH2 0x1A3A SWAP2 SWAP1 PUSH2 0x2D97 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 JUMPDEST DUP2 SWAP5 POP POP POP POP POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 DUP5 ADD SWAP2 POP DUP2 LT ISZERO PUSH2 0x1A66 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP2 MLOAD DUP2 LT ISZERO PUSH2 0x1BE2 JUMPI PUSH1 0x0 PUSH1 0x33 PUSH1 0x0 DUP5 DUP5 DUP2 MLOAD DUP2 LT PUSH2 0x1A8A JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x40 ADD MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 POP PUSH2 0x1B0B DUP4 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x1AE1 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x40 ADD MLOAD DUP3 DUP6 DUP6 DUP2 MLOAD DUP2 LT PUSH2 0x1AFA JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x20 ADD MLOAD PUSH2 0x1E8B JUMP JUMPDEST POP DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x1B18 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x0 ADD MLOAD DUP2 PUSH1 0x0 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH13 0xFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH13 0xFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x1B64 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x40 ADD MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x87FA03892A0556CB6B8F97E6D533A150D4D55FCBF275FFF5FA003FA636BCC7FA DUP5 DUP5 DUP2 MLOAD DUP2 LT PUSH2 0x1BB3 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x0 ADD MLOAD PUSH1 0x40 MLOAD PUSH2 0x1BCC SWAP2 SWAP1 PUSH2 0x2D45 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP DUP1 DUP1 PUSH1 0x1 ADD SWAP2 POP POP PUSH2 0x1A6F JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 POP PUSH1 0x0 JUMPDEST DUP4 MLOAD DUP2 LT ISZERO PUSH2 0x1D74 JUMPI PUSH1 0x0 PUSH1 0x33 PUSH1 0x0 DUP7 DUP5 DUP2 MLOAD DUP2 LT PUSH2 0x1C0B JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x0 ADD MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 POP PUSH1 0x0 PUSH2 0x1CEC DUP3 PUSH1 0x0 ADD PUSH1 0xD SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH13 0xFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH13 0xFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH13 0xFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH13 0xFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH1 0x0 ADD PUSH1 0x1A SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH5 0xFFFFFFFFFF AND PUSH5 0xFFFFFFFFFF AND DUP10 DUP8 DUP2 MLOAD DUP2 LT PUSH2 0x1CDB JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x40 ADD MLOAD PUSH2 0x20BE JUMP JUMPDEST SWAP1 POP PUSH2 0x1D63 PUSH2 0x1D54 DUP8 DUP6 DUP2 MLOAD DUP2 LT PUSH2 0x1D00 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x20 ADD MLOAD DUP4 DUP6 PUSH1 0x1 ADD PUSH1 0x0 DUP13 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x207E JUMP JUMPDEST DUP6 PUSH2 0x1A52 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP4 POP POP POP DUP1 DUP1 PUSH1 0x1 ADD SWAP2 POP POP PUSH2 0x1BF0 JUMP JUMPDEST POP DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 POP PUSH1 0x0 JUMPDEST DUP4 MLOAD DUP2 LT ISZERO PUSH2 0x1E0D JUMPI PUSH2 0x1DFE PUSH2 0x1DEF DUP7 DUP7 DUP5 DUP2 MLOAD DUP2 LT PUSH2 0x1DAE JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x0 ADD MLOAD DUP8 DUP6 DUP2 MLOAD DUP2 LT PUSH2 0x1DC6 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x20 ADD MLOAD DUP9 DUP7 DUP2 MLOAD DUP2 LT PUSH2 0x1DDE JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x40 ADD MLOAD PUSH2 0x18E0 JUMP JUMPDEST DUP4 PUSH2 0x1A52 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP2 POP DUP1 DUP1 PUSH1 0x1 ADD SWAP2 POP POP PUSH2 0x1D92 JUMP JUMPDEST POP DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1E87 PUSH1 0x37 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 DUP4 PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x21B6 SWAP1 SWAP4 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x0 ADD PUSH1 0xD SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH13 0xFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH13 0xFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP PUSH1 0x0 DUP5 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH13 0xFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH13 0xFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP PUSH1 0x0 DUP6 PUSH1 0x0 ADD PUSH1 0x1A SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH5 0xFFFFFFFFFF AND PUSH5 0xFFFFFFFFFF AND SWAP1 POP DUP1 PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND TIMESTAMP EQ ISZERO PUSH2 0x1F34 JUMPI DUP3 SWAP4 POP POP POP POP PUSH2 0x2077 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1F42 DUP5 DUP5 DUP5 DUP10 PUSH2 0x20BE JUMP JUMPDEST SWAP1 POP DUP4 DUP2 EQ PUSH2 0x2049 JUMPI DUP1 DUP2 PUSH13 0xFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1F9C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1F93 SWAP1 PUSH2 0x2CE5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 DUP8 PUSH1 0x0 ADD PUSH1 0xD PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH13 0xFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH13 0xFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP TIMESTAMP DUP8 PUSH1 0x0 ADD PUSH1 0x1A PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH5 0xFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH5 0xFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x5777CA300DFE5BEAD41006FBCE4389794DBC0ED8D6CCCEBFAF94630AA04184BC DUP3 PUSH1 0x40 MLOAD PUSH2 0x203C SWAP2 SWAP1 PUSH2 0x2D97 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 PUSH2 0x206F JUMP JUMPDEST TIMESTAMP DUP8 PUSH1 0x0 ADD PUSH1 0x1A PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH5 0xFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH5 0xFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP JUMPDEST DUP1 SWAP5 POP POP POP POP POP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x12 PUSH1 0xFF AND PUSH1 0xA EXP PUSH2 0x20AD PUSH2 0x209E DUP5 DUP7 PUSH2 0x2277 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP7 PUSH2 0x2291 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP2 PUSH2 0x20B4 JUMPI INVALID JUMPDEST DIV SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x34 SLOAD SWAP1 POP PUSH1 0x0 DUP6 EQ DUP1 PUSH2 0x20D5 JUMPI POP PUSH1 0x0 DUP4 EQ JUMPDEST DUP1 PUSH2 0x20F1 JUMPI POP TIMESTAMP DUP5 PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ JUMPDEST DUP1 PUSH2 0x210E JUMPI POP DUP1 DUP5 PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND LT ISZERO JUMPDEST ISZERO PUSH2 0x211C JUMPI DUP6 SWAP2 POP POP PUSH2 0x21AE JUMP JUMPDEST PUSH1 0x0 DUP2 TIMESTAMP GT PUSH2 0x212B JUMPI TIMESTAMP PUSH2 0x212D JUMP JUMPDEST DUP2 JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x2156 DUP7 PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH2 0x2277 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH2 0x21A8 DUP9 PUSH2 0x219A DUP8 PUSH2 0x218C PUSH1 0x12 PUSH1 0xFF AND PUSH1 0xA EXP PUSH2 0x217E DUP8 DUP15 PUSH2 0x2291 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x2291 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x22BD SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x1A52 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP4 POP POP POP POP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH2 0x2271 DUP5 PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP6 DUP6 DUP6 PUSH1 0x40 MLOAD PUSH1 0x24 ADD DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP4 POP POP POP POP PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH2 0x22D1 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 DUP5 SUB SWAP2 POP DUP2 GT ISZERO PUSH2 0x228B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 EQ DUP1 PUSH2 0x22AE JUMPI POP DUP2 DUP4 DUP4 DUP6 MUL SWAP3 POP DUP3 DUP2 PUSH2 0x22AB JUMPI INVALID JUMPDEST DIV EQ JUMPDEST PUSH2 0x22B7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 DUP2 PUSH2 0x22C8 JUMPI INVALID JUMPDEST DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x22F0 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x251C JUMP JUMPDEST PUSH2 0x2362 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x1F DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x5361666545524332303A2063616C6C20746F206E6F6E2D636F6E747261637400 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH1 0x40 MLOAD DUP1 DUP3 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 JUMPDEST PUSH1 0x20 DUP4 LT PUSH2 0x23B1 JUMPI DUP1 MLOAD DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH1 0x20 DUP4 SUB SWAP3 POP PUSH2 0x238E JUMP JUMPDEST PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB DUP1 NOT DUP3 MLOAD AND DUP2 DUP5 MLOAD AND DUP1 DUP3 OR DUP6 MSTORE POP POP POP POP POP POP SWAP1 POP ADD SWAP2 POP POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP7 GAS CALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x2413 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x2418 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP DUP2 PUSH2 0x2490 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x5361666545524332303A206C6F772D6C6576656C2063616C6C206661696C6564 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP2 MLOAD GT ISZERO PUSH2 0x2516 JUMPI DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x24AF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x2515 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x2A DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x2EF7 PUSH1 0x2A SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH32 0xC5D2460186F7233C927E7DB2DCC703C0E500B653CA82273B7BFAD8045D85A470 PUSH1 0x0 SHL SWAP1 POP DUP4 EXTCODEHASH SWAP2 POP DUP1 DUP3 EQ ISZERO DUP1 ISZERO PUSH2 0x255E JUMPI POP PUSH1 0x0 DUP1 SHL DUP3 EQ ISZERO JUMPDEST SWAP3 POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 PUSH13 0xFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x25F3 DUP2 PUSH2 0x2E9A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0x260B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD SWAP1 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2624 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x20 DUP3 MUL DUP4 ADD GT ISZERO PUSH2 0x263C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0x2655 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD SWAP1 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x266E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x20 DUP3 MUL DUP4 ADD GT ISZERO PUSH2 0x2686 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x269C DUP2 PUSH2 0x2EB1 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x26B1 DUP2 PUSH2 0x2EB1 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x26C9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x26D7 DUP5 DUP3 DUP6 ADD PUSH2 0x25E4 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x26F3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x2701 DUP6 DUP3 DUP7 ADD PUSH2 0x25E4 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x2712 DUP6 DUP3 DUP7 ADD PUSH2 0x25E4 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x2731 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x273F DUP7 DUP3 DUP8 ADD PUSH2 0x25E4 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x2750 DUP7 DUP3 DUP8 ADD PUSH2 0x268D JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x2761 DUP7 DUP3 DUP8 ADD PUSH2 0x268D JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x40 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x2780 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x279A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x27A6 DUP7 DUP3 DUP8 ADD PUSH2 0x25F9 JUMP JUMPDEST SWAP4 POP SWAP4 POP POP PUSH1 0x20 PUSH2 0x27B9 DUP7 DUP3 DUP8 ADD PUSH2 0x25E4 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x40 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x27D9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x27F3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x27FF DUP8 DUP3 DUP9 ADD PUSH2 0x25F9 JUMP JUMPDEST SWAP5 POP SWAP5 POP POP PUSH1 0x20 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x281E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x282A DUP8 DUP3 DUP9 ADD PUSH2 0x2643 JUMP JUMPDEST SWAP3 POP SWAP3 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x40 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x284D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2867 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2873 DUP7 DUP3 DUP8 ADD PUSH2 0x25F9 JUMP JUMPDEST SWAP4 POP SWAP4 POP POP PUSH1 0x20 PUSH2 0x2886 DUP7 DUP3 DUP8 ADD PUSH2 0x268D JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x60 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x28A6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x28C0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x28CC DUP8 DUP3 DUP9 ADD PUSH2 0x25F9 JUMP JUMPDEST SWAP5 POP SWAP5 POP POP PUSH1 0x20 PUSH2 0x28DF DUP8 DUP3 DUP9 ADD PUSH2 0x268D JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x28F0 DUP8 DUP3 DUP9 ADD PUSH2 0x25E4 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x80 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x2914 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x292E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x293A DUP9 DUP3 DUP10 ADD PUSH2 0x25F9 JUMP JUMPDEST SWAP6 POP SWAP6 POP POP PUSH1 0x20 PUSH2 0x294D DUP9 DUP3 DUP10 ADD PUSH2 0x268D JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 PUSH2 0x295E DUP9 DUP3 DUP10 ADD PUSH2 0x25E4 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 PUSH2 0x296F DUP9 DUP3 DUP10 ADD PUSH2 0x25E4 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x298E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x299C DUP5 DUP3 DUP6 ADD PUSH2 0x268D JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x29B7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x29C5 DUP5 DUP3 DUP6 ADD PUSH2 0x26A2 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x29E1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x29EF DUP6 DUP3 DUP7 ADD PUSH2 0x26A2 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x2A00 DUP6 DUP3 DUP7 ADD PUSH2 0x26A2 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x2A13 DUP2 PUSH2 0x2E15 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2A26 PUSH1 0x14 DUP4 PUSH2 0x2E04 JUMP JUMPDEST SWAP2 POP PUSH32 0x494E56414C49445F555345525F41444452455353000000000000000000000000 PUSH1 0x0 DUP4 ADD MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2A66 PUSH1 0x12 DUP4 PUSH2 0x2E04 JUMP JUMPDEST SWAP2 POP PUSH32 0x494E56414C49445F544F5F414444524553530000000000000000000000000000 PUSH1 0x0 DUP4 ADD MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2AA6 PUSH1 0x15 DUP4 PUSH2 0x2E04 JUMP JUMPDEST SWAP2 POP PUSH32 0x494E56414C49445F434F4E46494755524154494F4E0000000000000000000000 PUSH1 0x0 DUP4 ADD MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2AE6 PUSH1 0x24 DUP4 PUSH2 0x2E04 JUMP JUMPDEST SWAP2 POP PUSH32 0x496E646578206F766572666C6F7720617420656D697373696F6E735065725365 PUSH1 0x0 DUP4 ADD MSTORE PUSH32 0x636F6E6400000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2B4C PUSH1 0xE DUP4 PUSH2 0x2E04 JUMP JUMPDEST SWAP2 POP PUSH32 0x496E646578206F766572666C6F77000000000000000000000000000000000000 PUSH1 0x0 DUP4 ADD MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2B8C PUSH1 0x15 DUP4 PUSH2 0x2E04 JUMP JUMPDEST SWAP2 POP PUSH32 0x4F4E4C595F454D495353494F4E5F4D414E414745520000000000000000000000 PUSH1 0x0 DUP4 ADD MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2BCC PUSH1 0x14 DUP4 PUSH2 0x2E04 JUMP JUMPDEST SWAP2 POP PUSH32 0x434C41494D45525F554E415554484F52495A4544000000000000000000000000 PUSH1 0x0 DUP4 ADD MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2C08 DUP2 PUSH2 0x2E27 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x2C17 DUP2 PUSH2 0x2E88 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x2C26 DUP2 PUSH2 0x2E60 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x2C35 DUP2 PUSH2 0x2E6A JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x2C44 DUP2 PUSH2 0x2E7B JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2C5F PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x2A0A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2C7E DUP2 PUSH2 0x2A19 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2C9E DUP2 PUSH2 0x2A59 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2CBE DUP2 PUSH2 0x2A99 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2CDE DUP2 PUSH2 0x2AD9 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2CFE DUP2 PUSH2 0x2B3F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2D1E DUP2 PUSH2 0x2B7F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2D3E DUP2 PUSH2 0x2BBF JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2D5A PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x2C0E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x2D75 PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x2BFF JUMP JUMPDEST PUSH2 0x2D82 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x2BFF JUMP JUMPDEST PUSH2 0x2D8F PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x2C2C JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2DAC PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x2C1D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x2DC7 PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x2C1D JUMP JUMPDEST PUSH2 0x2DD4 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x2C1D JUMP JUMPDEST PUSH2 0x2DE1 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x2C1D JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2DFE PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x2C3B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2E20 DUP3 PUSH2 0x2E40 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH13 0xFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH5 0xFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2E93 DUP3 PUSH2 0x2E27 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2EA3 DUP2 PUSH2 0x2E15 JUMP JUMPDEST DUP2 EQ PUSH2 0x2EAE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x2EBA DUP2 PUSH2 0x2E60 JUMP JUMPDEST DUP2 EQ PUSH2 0x2EC5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID NUMBER PUSH16 0x6E747261637420696E7374616E636520 PUSH9 0x617320616C72656164 PUSH26 0x206265656E20696E697469616C697A6564536166654552433230 GASPRICE KECCAK256 GASLIMIT MSTORE NUMBER ORIGIN ADDRESS KECCAK256 PUSH16 0x7065726174696F6E20646964206E6F74 KECCAK256 PUSH20 0x756363656564A26469706673582212208DDB6503 0xF8 LOG3 SWAP2 RETURN 0xAA CHAINID KECCAK256 0xA5 0xFB JUMPI DUP8 0xCD PUSH8 0x82C4C0CA8381FFA5 PUSH3 0xD24817 BYTE 0xD3 DUP15 PUSH5 0x736F6C6343 STOP SMOD SDIV STOP CALLER ",
							"sourceMap": "530:1322:5:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1893:203:7;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;;5231:138:6;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3812:264;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2619:399;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1701:139:7;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1141:189;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;4568:210:6;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4130:384;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5057:120;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1773:792;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3072:686;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1543:105:7;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1026:46:6;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;749:36:7;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;988:150:5;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;701:41:7;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1383:107;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;983:36:6;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1234:92:5;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;792:43:7;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;;1485:162:5;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;4832:171:6;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1893:203:7;1960:7;1969;1978;2002:6;:13;2009:5;2002:13;;;;;;;;;;;;;;;:19;;;;;;;;;;;;2023:6;:13;2030:5;2023:13;;;;;;;;;;;;;;;:31;;;;;;;;;;;;2056:6;:13;2063:5;2056:13;;;;;;;;;;;;;;;:33;;;;;;;;;;;;1994:96;;;;;;;;;;;;;;;;;;;;;1893:203;;;;;:::o;5231:138:6:-;5311:7;5334:22;:29;5357:5;5334:29;;;;;;;;;;;;;;;;5327:36;;5231:138;;;:::o;3812:264::-;3936:7;3974:1;3960:16;;:2;:16;;;;3952:47;;;;;;;;;;;;:::i;:::-;;;;;;;;;4013:57;4027:6;;4035;4043:10;4055;4067:2;4013:13;:57::i;:::-;4006:64;;3812:264;;;;;;:::o;2619:399::-;2742:22;2767:68;2792:4;2798:10;2810:11;2823;2767:24;:68::i;:::-;2742:93;;2864:1;2846:14;:19;2842:171;;2907:48;2940:14;2907:22;:28;2930:4;2907:28;;;;;;;;;;;;;;;;:32;;:48;;;;:::i;:::-;2876:22;:28;2899:4;2876:28;;;;;;;;;;;;;;;:79;;;;2984:4;2969:36;;;2990:14;2969:36;;;;;;:::i;:::-;;;;;;;;2842:171;2619:399;;;;:::o;1701:139:7:-;1786:7;1809:6;:13;1816:5;1809:13;;;;;;;;;;;;;;;:19;;:25;1829:4;1809:25;;;;;;;;;;;;;;;;1802:32;;1701:139;;;;:::o;1141:189::-;942:16;928:30;;:10;:30;;;920:64;;;;;;;;;;;;:::i;:::-;;;;;;;;;1258:15:::1;1239:16;:34;;;;1285:39;1308:15;1285:39;;;;;;:::i;:::-;;;;;;;;1141:189:::0;:::o;4568:210:6:-;4681:7;4707:65;4721:6;;4729;4737:10;4749;4761;4707:13;:65::i;:::-;4700:72;;4568:210;;;;;:::o;4130:384::-;4322:7;4295:10;4307:4;1517:7;1488:36;;:19;:25;1508:4;1488:25;;;;;;;;;;;;;;;;;;;;;;;;;:36;;;1480:69;;;;;;;;;;;;:::i;:::-;;;;;;;;;4362:1:::1;4346:18;;:4;:18;;;;4338:51;;;;;;;;;;;;:::i;:::-;;;;;;;;;4418:1;4404:16;;:2;:16;;;;4396:47;;;;;;;;;;;;:::i;:::-;;;;;;;;;4457:51;4471:6;;4479;4487:10;4499:4;4505:2;4457:13;:51::i;:::-;4450:58;;4130:384:::0;;;;;;;;;:::o;5057:120::-;5123:7;5146:19;:25;5166:4;5146:25;;;;;;;;;;;;;;;;;;;;;;;;;5139:32;;5057:120;;;:::o;1773:792::-;942:16:7;928:30;;:10;:30;;;920:64;;;;;;;;;;;;:::i;:::-;;;;;;;;;1952:18:6::1;;:25;;1935:6;;:13;;:42;1927:76;;;;;;;;;;;;:::i;:::-;;;;;;;;;2012:56;2119:6;;:13;;2078:55;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;2012:121;;2147:9;2142:381;2166:6;;:13;;2162:1;:17;2142:381;;;2237:18;;2256:1;2237:21;;;;;;;;;;;;;2211:18;;2230:1;2211:21;;;;;;;;;;;;;2203:55;;;2195:104;;;;;;;;;;;;:::i;:::-;;;;;;;;;2342:6;;2349:1;2342:9;;;;;;;;;;;;;;;;;;;;:::i;:::-;2308:12;2321:1;2308:15;;;;;;;;;;;;;;:31;;:43;;;;;;;;;::::0;::::1;2404:18;;2423:1;2404:21;;;;;;;;;;;;;2360:12;2373:1;2360:15;;;;;;;;;;;;;;:33;;:66;;;;;;;;;::::0;::::1;2485:6;;2492:1;2485:9;;;;;;;;;;;;;;;;;;;;:::i;:::-;2465:48;;;:50;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2435:12;2448:1;2435:15;;;;;;;;;;;;;;:27;;:80;;;::::0;::::1;2181:3;;;;;;;2142:381;;;;2529:30;2546:12;2529:16;:30::i;:::-;991:1:7;1773:792:6::0;;;;:::o;3072:686::-;3192:7;3211:24;3238:22;:28;3261:4;3238:28;;;;;;;;;;;;;;;;3211:55;;3275:51;3375:6;;:13;;3336:53;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;3275:114;;3401:9;3396:242;3420:6;;:13;;3416:1;:17;3396:242;;;3480:6;;3487:1;3480:9;;;;;;;;;;;;;;;;;;;;:::i;:::-;3449;3459:1;3449:12;;;;;;;;;;;;;;:28;;:40;;;;;;;;;;;3574:6;;3581:1;3574:9;;;;;;;;;;;;;;;;;;;;:::i;:::-;3554:70;;;3625:4;3554:76;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3499:9;3509:1;3499:12;;;;;;;;;;;;;;:25;;3526:9;3536:1;3526:12;;;;;;;;;;;;;;:24;;3498:132;;;;;;;;;;3435:3;;;;;;;3396:242;;;;3663:59;3684:37;3705:4;3711:9;3684:20;:37::i;:::-;3663:16;:20;;:59;;;;:::i;:::-;3644:78;;3736:16;3729:23;;;;3072:686;;;;;:::o;1543:105:7:-;1603:7;1626:16;;1619:23;;1543:105;:::o;1026:46:6:-;;;:::o;749:36:7:-;783:2;749:36;:::o;988:150:5:-;1040:16:4;1059:13;:11;:13::i;:::-;1040:32;;1097:23;;1086:8;:34;1078:93;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1204:8;1178:23;:34;;;;1074:12:5::1;1058:13;;:28;;;;;;;;;;;;;;;;;;1118:13;;;;;;;;;;;1098:34;;;;;;;;;;;;988:150:::0;;:::o;701:41:7:-;;;:::o;1383:107::-;1445:7;1468:16;;1461:23;;1383:107;:::o;983:36:6:-;1018:1;983:36;:::o;1234:92:5:-;1284:7;1307:13;;;;;;;;;;;1300:20;;1234:92;:::o;792:43:7:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;1485:162:5:-;942:16:7;928:30;;:10;:30;;;920:64;;;;;;;;;;;;:::i;:::-;;;;;;;;;1584:12:5::1;1568:13;;:28;;;;;;;;;;;;;;;;;;1628:12;1608:33;;;;;;;;;;;;1485:162:::0;:::o;4832:171:6:-;942:16:7;928:30;;:10;:30;;;920:64;;;;;;;;;;;;:::i;:::-;;;;;;;;;4955:6:6::1;4927:19;:25;4947:4;4927:25;;;;;;;;;;;;;;;;:34;;;;;;;;;;;;;;;;;;4990:6;4973:24;;4984:4;4973:24;;;;;;;;;;;;4832:171:::0;;:::o;5875:1321::-;6032:7;6062:1;6052:6;:11;6048:42;;;6081:1;6074:8;;;;6048:42;6096:24;6123:22;:28;6146:4;6123:28;;;;;;;;;;;;;;;;6096:55;;6173:16;6164:6;:25;6160:649;;;6200:51;6302:6;;:13;;6263:53;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;6200:116;;6330:9;6325:250;6349:6;;:13;;6345:1;:17;6325:250;;;6411:6;;6418:1;6411:9;;;;;;;;;;;;;;;;;;;;:::i;:::-;6380;6390:1;6380:12;;;;;;;;;;;;;;:28;;:40;;;;;;;;;;;6507:6;;6514:1;6507:9;;;;;;;;;;;;;;;;;;;;:::i;:::-;6487:72;;;6560:4;6487:78;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;6432:9;6442:1;6432:12;;;;;;;;;;;;;;:25;;6459:9;6469:1;6459:12;;;;;;;;;;;;;;:24;;6431:134;;;;;;;;;;6364:3;;;;;;;6325:250;;;;6585:22;6610:30;6624:4;6630:9;6610:13;:30::i;:::-;6585:55;;6671:1;6653:14;:19;6649:153;;6704:36;6725:14;6704:16;:20;;:36;;;;:::i;:::-;6685:55;;6771:4;6756:36;;;6777:14;6756:36;;;;;;:::i;:::-;;;;;;;;6649:153;6160:649;;;6841:1;6821:16;:21;6817:52;;;6860:1;6853:8;;;;;6817:52;6877:21;6910:16;6901:6;:25;:53;;6948:6;6901:53;;;6929:16;6901:53;6877:77;;7011:13;6992:16;:32;6961:22;:28;6984:4;6961:28;;;;;;;;;;;;;;;:63;;;;7066:35;7083:2;7087:13;7066:16;:35::i;:::-;7138:7;7113:48;;7134:2;7113:48;;7128:4;7113:48;;;7147:13;7113:48;;;;;;:::i;:::-;;;;;;;;7177:13;7170:20;;;;5875:1321;;;;;;;;;:::o;4616:663:7:-;4765:7;4781:27;4811:6;:13;4818:5;4811:13;;;;;;;;;;;;;;;4781:43;;4831:17;4851:9;:15;;:21;4867:4;4851:21;;;;;;;;;;;;;;;;4831:41;;4879:22;4914:16;4933:56;4959:5;4966:9;4977:11;4933:25;:56::i;:::-;4914:75;;5015:8;5002:9;:21;4998:246;;5054:1;5038:12;:17;5034:107;;5085:46;5097:12;5111:8;5121:9;5085:11;:46::i;:::-;5068:63;;5034:107;5175:8;5151:9;:15;;:21;5167:4;5151:21;;;;;;;;;;;;;;;:32;;;;5220:5;5197:39;;5214:4;5197:39;;;5227:8;5197:39;;;;;;:::i;:::-;;;;;;;;4998:246;5259:14;5252:21;;;;;;4616:663;;;;;;:::o;460:113:12:-;518:9;563:1;557;553;:5;549:9;;;548:16;;540:25;;;;;;460:113;;;;:::o;2242:643:7:-;2360:9;2355:525;2379:17;:24;2375:1;:28;2355:525;;;2419:29;2451:6;:44;2458:17;2476:1;2458:20;;;;;;;;;;;;;;:36;;;2451:44;;;;;;;;;;;;;;;2419:76;;2506:146;2542:17;2560:1;2542:20;;;;;;;;;;;;;;:36;;;2589:11;2611:17;2629:1;2611:20;;;;;;;;;;;;;;:32;;;2506:25;:146::i;:::-;;2695:17;2713:1;2695:20;;;;;;;;;;;;;;:38;;;2663:11;:29;;;:70;;;;;;;;;;;;;;;;;;2778:17;2796:1;2778:20;;;;;;;;;;;;;;:36;;;2749:123;;;2825:17;2843:1;2825:20;;;;;;;;;;;;;;:38;;;2749:123;;;;;;:::i;:::-;;;;;;;;2355:525;2405:3;;;;;;;2355:525;;;;2242:643;:::o;6351:697::-;6483:7;6502:22;6527:1;6502:26;;6542:9;6537:478;6561:6;:13;6557:1;:17;6537:478;;;6590:29;6622:6;:33;6629:6;6636:1;6629:9;;;;;;;;;;;;;;:25;;;6622:33;;;;;;;;;;;;;;;6590:65;;6664:18;6694:175;6721:11;:17;;;;;;;;;;;;6694:175;;6751:11;:29;;;;;;;;;;;;6694:175;;6793:11;:31;;;;;;;;;;;;6694:175;;6837:6;6844:1;6837:9;;;;;;;;;;;;;;:21;;;6694:14;:175::i;:::-;6664:205;;6897:110;6926:72;6938:6;6945:1;6938:9;;;;;;;;;;;;;;:22;;;6962:10;6974:11;:17;;:23;6992:4;6974:23;;;;;;;;;;;;;;;;6926:11;:72::i;:::-;6897:14;:18;;:110;;;;:::i;:::-;6880:127;;6537:478;;6576:3;;;;;;;6537:478;;;;7028:14;7021:21;;;6351:697;;;;:::o;5452:92:6:-;5507:7;1018:1;5523:15;;5452:92;:::o;5591:479:7:-;5706:7;5725:22;5750:1;5725:26;;5765:9;5760:275;5784:6;:13;5780:1;:17;5760:275;;;5830:197;5859:159;5896:4;5913:6;5920:1;5913:9;;;;;;;;;;;;;;:25;;;5951:6;5958:1;5951:9;;;;;;;;;;;;;;:22;;;5986:6;5993:1;5986:9;;;;;;;;;;;;;;:21;;;5859:24;:159::i;:::-;5830:14;:18;;:197;;;;:::i;:::-;5813:214;;5799:3;;;;;;;5760:275;;;;6050:14;6043:21;;;5591:479;;;;:::o;1700:149:5:-;1779:64;1817:13;;;;;;;;;;;1832:2;1836:6;1786:12;1779:37;;;;:64;;;;;;:::i;:::-;1700:149;;:::o;3238:963:7:-;3378:7;3394:16;3413:11;:17;;;;;;;;;;;;3394:36;;;;3437:25;3465:11;:29;;;;;;;;;;;;3437:57;;;;3501:27;3531:11;:31;;;;;;;;;;;;3501:61;;;;3594:19;3575:38;;:15;:38;3571:76;;;3631:8;3624:15;;;;;;;3571:76;3655:16;3681:77;3696:8;3706:17;3725:19;3746:11;3681:14;:77::i;:::-;3655:103;;3783:8;3771;:20;3767:405;;3831:8;3818;3810:29;;;3802:56;;;;;;;;;;;;:::i;:::-;;;;;;;;;3961:8;3933:11;:17;;;:37;;;;;;;;;;;;;;;;;;4020:15;3979:11;:31;;;:57;;;;;;;;;;;;;;;;;;4068:5;4050:34;;;4075:8;4050:34;;;;;;:::i;:::-;;;;;;;;3767:405;;;4148:15;4107:11;:31;;;:57;;;;;;;;;;;;;;;;;;3767:405;4187:8;4180:15;;;;;;3238:963;;;;;;:::o;7402:242::-;7537:7;783:2;7620:18;;7616:2;:22;7560:53;7585:27;7602:9;7585:12;:16;;:27;;;;:::i;:::-;7560:20;:24;;:53;;;;:::i;:::-;:78;;;;;;7553:85;;7402:242;;;;;:::o;8107:761::-;8279:7;8295:23;8321:16;;8295:42;;8377:1;8356:17;:22;:50;;;;8405:1;8389:12;:17;8356:50;:99;;;;8440:15;8417:19;:38;;;8356:99;:148;;;;8489:15;8466:19;:38;;;;8356:148;8344:204;;;8528:12;8521:19;;;;;8344:204;8556:24;8608:15;8590;:33;:69;;8644:15;8590:69;;;8626:15;8590:69;8556:103;;8666:17;8686:41;8707:19;8686:41;;:16;:20;;:41;;;;:::i;:::-;8666:61;;8748:114;8841:12;8748:78;8813:12;8748:60;783:2;8789:18;;8785:2;:22;8748:32;8770:9;8748:17;:21;;:32;;;;:::i;:::-;:36;;:60;;;;:::i;:::-;:64;;:78;;;;:::i;:::-;:82;;:114;;;;:::i;:::-;8734:128;;;;;8107:761;;;;;;;:::o;978:216:2:-;1094:95;1113:5;1143:27;;;1172:4;1178:2;1182:5;1120:68;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1094:18;:95::i;:::-;978:216;;;;:::o;743:113:12:-;801:9;846:1;840;836;:5;832:9;;;831:16;;823:25;;;;;;743:113;;;;:::o;1027:127::-;1085:9;1120:1;1115;:6;:30;;;;1144:1;1139;1134;1130;:5;1126:9;;;1125:15;;;;;;:20;1115:30;1107:39;;;;;;1027:127;;;;:::o;1162:174::-;1219:7;1327:1;1323;:5;;;;;;1316:12;;1162:174;;;;:::o;1547:555:2:-;1630:27;1638:5;1630:25;;;:27::i;:::-;1622:71;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1756:12;1770:23;1805:5;1797:19;;1817:4;1797:25;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1755:67;;;;1836:7;1828:52;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1911:1;1891:10;:17;:21;1887:211;;;2025:10;2014:30;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2006:85;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1887:211;1547:555;;;;:::o;743:586:1:-;803:4;1045:16;1067:19;1089:66;1067:88;;;;1254:7;1242:20;1230:32;;1293:11;1281:8;:23;;:42;;;;;1320:3;1308:15;;:8;:15;;1281:42;1273:51;;;;743:586;;;:::o;-1:-1:-1:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;7:139:13:-;;91:6;78:20;69:29;;107:33;134:5;107:33;:::i;:::-;59:87;;;;:::o;169:367::-;;;302:3;295:4;287:6;283:17;279:27;269:2;;320:1;317;310:12;269:2;356:6;343:20;333:30;;386:18;378:6;375:30;372:2;;;418:1;415;408:12;372:2;455:4;447:6;443:17;431:29;;509:3;501:4;493:6;489:17;479:8;475:32;472:41;469:2;;;526:1;523;516:12;469:2;259:277;;;;;:::o;559:367::-;;;692:3;685:4;677:6;673:17;669:27;659:2;;710:1;707;700:12;659:2;746:6;733:20;723:30;;776:18;768:6;765:30;762:2;;;808:1;805;798:12;762:2;845:4;837:6;833:17;821:29;;899:3;891:4;883:6;879:17;869:8;865:32;862:41;859:2;;;916:1;913;906:12;859:2;649:277;;;;;:::o;932:139::-;;1016:6;1003:20;994:29;;1032:33;1059:5;1032:33;:::i;:::-;984:87;;;;:::o;1077:143::-;;1165:6;1159:13;1150:22;;1181:33;1208:5;1181:33;:::i;:::-;1140:80;;;;:::o;1226:260::-;;1334:2;1322:9;1313:7;1309:23;1305:32;1302:2;;;1350:1;1347;1340:12;1302:2;1392:1;1416:53;1461:7;1452:6;1441:9;1437:22;1416:53;:::i;:::-;1406:63;;1364:115;1292:194;;;;:::o;1492:403::-;;;1617:2;1605:9;1596:7;1592:23;1588:32;1585:2;;;1633:1;1630;1623:12;1585:2;1675:1;1699:53;1744:7;1735:6;1724:9;1720:22;1699:53;:::i;:::-;1689:63;;1647:115;1800:2;1825:53;1870:7;1861:6;1850:9;1846:22;1825:53;:::i;:::-;1815:63;;1772:116;1575:320;;;;;:::o;1901:546::-;;;;2043:2;2031:9;2022:7;2018:23;2014:32;2011:2;;;2059:1;2056;2049:12;2011:2;2101:1;2125:53;2170:7;2161:6;2150:9;2146:22;2125:53;:::i;:::-;2115:63;;2073:115;2226:2;2251:53;2296:7;2287:6;2276:9;2272:22;2251:53;:::i;:::-;2241:63;;2198:116;2352:2;2377:53;2422:7;2413:6;2402:9;2398:22;2377:53;:::i;:::-;2367:63;;2324:116;2001:446;;;;;:::o;2453:566::-;;;;2613:2;2601:9;2592:7;2588:23;2584:32;2581:2;;;2629:1;2626;2619:12;2581:2;2699:1;2688:9;2684:17;2671:31;2729:18;2721:6;2718:30;2715:2;;;2761:1;2758;2751:12;2715:2;2796:80;2868:7;2859:6;2848:9;2844:22;2796:80;:::i;:::-;2778:98;;;;2643:243;2924:2;2949:53;2994:7;2985:6;2974:9;2970:22;2949:53;:::i;:::-;2939:63;;2896:116;2571:448;;;;;:::o;3025:729::-;;;;;3220:2;3208:9;3199:7;3195:23;3191:32;3188:2;;;3236:1;3233;3226:12;3188:2;3306:1;3295:9;3291:17;3278:31;3336:18;3328:6;3325:30;3322:2;;;3368:1;3365;3358:12;3322:2;3403:80;3475:7;3466:6;3455:9;3451:22;3403:80;:::i;:::-;3385:98;;;;3250:243;3559:2;3548:9;3544:18;3531:32;3590:18;3582:6;3579:30;3576:2;;;3622:1;3619;3612:12;3576:2;3657:80;3729:7;3720:6;3709:9;3705:22;3657:80;:::i;:::-;3639:98;;;;3503:244;3178:576;;;;;;;:::o;3760:566::-;;;;3920:2;3908:9;3899:7;3895:23;3891:32;3888:2;;;3936:1;3933;3926:12;3888:2;4006:1;3995:9;3991:17;3978:31;4036:18;4028:6;4025:30;4022:2;;;4068:1;4065;4058:12;4022:2;4103:80;4175:7;4166:6;4155:9;4151:22;4103:80;:::i;:::-;4085:98;;;;3950:243;4231:2;4256:53;4301:7;4292:6;4281:9;4277:22;4256:53;:::i;:::-;4246:63;;4203:116;3878:448;;;;;:::o;4332:709::-;;;;;4509:2;4497:9;4488:7;4484:23;4480:32;4477:2;;;4525:1;4522;4515:12;4477:2;4595:1;4584:9;4580:17;4567:31;4625:18;4617:6;4614:30;4611:2;;;4657:1;4654;4647:12;4611:2;4692:80;4764:7;4755:6;4744:9;4740:22;4692:80;:::i;:::-;4674:98;;;;4539:243;4820:2;4845:53;4890:7;4881:6;4870:9;4866:22;4845:53;:::i;:::-;4835:63;;4792:116;4946:2;4971:53;5016:7;5007:6;4996:9;4992:22;4971:53;:::i;:::-;4961:63;;4918:116;4467:574;;;;;;;:::o;5047:853::-;;;;;;5241:3;5229:9;5220:7;5216:23;5212:33;5209:2;;;5258:1;5255;5248:12;5209:2;5328:1;5317:9;5313:17;5300:31;5358:18;5350:6;5347:30;5344:2;;;5390:1;5387;5380:12;5344:2;5425:80;5497:7;5488:6;5477:9;5473:22;5425:80;:::i;:::-;5407:98;;;;5272:243;5553:2;5578:53;5623:7;5614:6;5603:9;5599:22;5578:53;:::i;:::-;5568:63;;5525:116;5679:2;5704:53;5749:7;5740:6;5729:9;5725:22;5704:53;:::i;:::-;5694:63;;5651:116;5805:2;5830:53;5875:7;5866:6;5855:9;5851:22;5830:53;:::i;:::-;5820:63;;5777:116;5199:701;;;;;;;;:::o;5906:260::-;;6014:2;6002:9;5993:7;5989:23;5985:32;5982:2;;;6030:1;6027;6020:12;5982:2;6072:1;6096:53;6141:7;6132:6;6121:9;6117:22;6096:53;:::i;:::-;6086:63;;6044:115;5972:194;;;;:::o;6172:282::-;;6291:2;6279:9;6270:7;6266:23;6262:32;6259:2;;;6307:1;6304;6297:12;6259:2;6349:1;6373:64;6429:7;6420:6;6409:9;6405:22;6373:64;:::i;:::-;6363:74;;6321:126;6249:205;;;;:::o;6460:436::-;;;6596:2;6584:9;6575:7;6571:23;6567:32;6564:2;;;6612:1;6609;6602:12;6564:2;6654:1;6678:64;6734:7;6725:6;6714:9;6710:22;6678:64;:::i;:::-;6668:74;;6626:126;6790:2;6815:64;6871:7;6862:6;6851:9;6847:22;6815:64;:::i;:::-;6805:74;;6762:127;6554:342;;;;;:::o;6902:118::-;6989:24;7007:5;6989:24;:::i;:::-;6984:3;6977:37;6967:53;;:::o;7026:318::-;;7189:67;7253:2;7248:3;7189:67;:::i;:::-;7182:74;;7286:22;7282:1;7277:3;7273:11;7266:43;7335:2;7330:3;7326:12;7319:19;;7172:172;;;:::o;7350:316::-;;7513:67;7577:2;7572:3;7513:67;:::i;:::-;7506:74;;7610:20;7606:1;7601:3;7597:11;7590:41;7657:2;7652:3;7648:12;7641:19;;7496:170;;;:::o;7672:319::-;;7835:67;7899:2;7894:3;7835:67;:::i;:::-;7828:74;;7932:23;7928:1;7923:3;7919:11;7912:44;7982:2;7977:3;7973:12;7966:19;;7818:173;;;:::o;7997:368::-;;8160:67;8224:2;8219:3;8160:67;:::i;:::-;8153:74;;8257:34;8253:1;8248:3;8244:11;8237:55;8323:6;8318:2;8313:3;8309:12;8302:28;8356:2;8351:3;8347:12;8340:19;;8143:222;;;:::o;8371:312::-;;8534:67;8598:2;8593:3;8534:67;:::i;:::-;8527:74;;8631:16;8627:1;8622:3;8618:11;8611:37;8674:2;8669:3;8665:12;8658:19;;8517:166;;;:::o;8689:319::-;;8852:67;8916:2;8911:3;8852:67;:::i;:::-;8845:74;;8949:23;8945:1;8940:3;8936:11;8929:44;8999:2;8994:3;8990:12;8983:19;;8835:173;;;:::o;9014:318::-;;9177:67;9241:2;9236:3;9177:67;:::i;:::-;9170:74;;9274:22;9270:1;9265:3;9261:11;9254:43;9323:2;9318:3;9314:12;9307:19;;9160:172;;;:::o;9338:118::-;9425:24;9443:5;9425:24;:::i;:::-;9420:3;9413:37;9403:53;;:::o;9462:131::-;9549:37;9580:5;9549:37;:::i;:::-;9544:3;9537:50;9527:66;;:::o;9599:118::-;9686:24;9704:5;9686:24;:::i;:::-;9681:3;9674:37;9664:53;;:::o;9723:115::-;9808:23;9825:5;9808:23;:::i;:::-;9803:3;9796:36;9786:52;;:::o;9844:112::-;9927:22;9943:5;9927:22;:::i;:::-;9922:3;9915:35;9905:51;;:::o;9962:222::-;;10093:2;10082:9;10078:18;10070:26;;10106:71;10174:1;10163:9;10159:17;10150:6;10106:71;:::i;:::-;10060:124;;;;:::o;10190:419::-;;10394:2;10383:9;10379:18;10371:26;;10443:9;10437:4;10433:20;10429:1;10418:9;10414:17;10407:47;10471:131;10597:4;10471:131;:::i;:::-;10463:139;;10361:248;;;:::o;10615:419::-;;10819:2;10808:9;10804:18;10796:26;;10868:9;10862:4;10858:20;10854:1;10843:9;10839:17;10832:47;10896:131;11022:4;10896:131;:::i;:::-;10888:139;;10786:248;;;:::o;11040:419::-;;11244:2;11233:9;11229:18;11221:26;;11293:9;11287:4;11283:20;11279:1;11268:9;11264:17;11257:47;11321:131;11447:4;11321:131;:::i;:::-;11313:139;;11211:248;;;:::o;11465:419::-;;11669:2;11658:9;11654:18;11646:26;;11718:9;11712:4;11708:20;11704:1;11693:9;11689:17;11682:47;11746:131;11872:4;11746:131;:::i;:::-;11738:139;;11636:248;;;:::o;11890:419::-;;12094:2;12083:9;12079:18;12071:26;;12143:9;12137:4;12133:20;12129:1;12118:9;12114:17;12107:47;12171:131;12297:4;12171:131;:::i;:::-;12163:139;;12061:248;;;:::o;12315:419::-;;12519:2;12508:9;12504:18;12496:26;;12568:9;12562:4;12558:20;12554:1;12543:9;12539:17;12532:47;12596:131;12722:4;12596:131;:::i;:::-;12588:139;;12486:248;;;:::o;12740:419::-;;12944:2;12933:9;12929:18;12921:26;;12993:9;12987:4;12983:20;12979:1;12968:9;12964:17;12957:47;13021:131;13147:4;13021:131;:::i;:::-;13013:139;;12911:248;;;:::o;13165:222::-;;13296:2;13285:9;13281:18;13273:26;;13309:71;13377:1;13366:9;13362:17;13353:6;13309:71;:::i;:::-;13263:124;;;;:::o;13393:438::-;;13578:2;13567:9;13563:18;13555:26;;13591:71;13659:1;13648:9;13644:17;13635:6;13591:71;:::i;:::-;13672:72;13740:2;13729:9;13725:18;13716:6;13672:72;:::i;:::-;13754:70;13820:2;13809:9;13805:18;13796:6;13754:70;:::i;:::-;13545:286;;;;;;:::o;13837:222::-;;13968:2;13957:9;13953:18;13945:26;;13981:71;14049:1;14038:9;14034:17;14025:6;13981:71;:::i;:::-;13935:124;;;;:::o;14065:442::-;;14252:2;14241:9;14237:18;14229:26;;14265:71;14333:1;14322:9;14318:17;14309:6;14265:71;:::i;:::-;14346:72;14414:2;14403:9;14399:18;14390:6;14346:72;:::i;:::-;14428;14496:2;14485:9;14481:18;14472:6;14428:72;:::i;:::-;14219:288;;;;;;:::o;14513:214::-;;14640:2;14629:9;14625:18;14617:26;;14653:67;14717:1;14706:9;14702:17;14693:6;14653:67;:::i;:::-;14607:120;;;;:::o;14733:169::-;;14851:6;14846:3;14839:19;14891:4;14886:3;14882:14;14867:29;;14829:73;;;;:::o;14908:96::-;;14974:24;14992:5;14974:24;:::i;:::-;14963:35;;14953:51;;;:::o;15010:112::-;;15087:28;15080:5;15076:40;15065:51;;15055:67;;;:::o;15128:126::-;;15205:42;15198:5;15194:54;15183:65;;15173:81;;;:::o;15260:77::-;;15326:5;15315:16;;15305:32;;;:::o;15343:95::-;;15419:12;15412:5;15408:24;15397:35;;15387:51;;;:::o;15444:86::-;;15519:4;15512:5;15508:16;15497:27;;15487:43;;;:::o;15536:113::-;;15619:24;15637:5;15619:24;:::i;:::-;15606:37;;15596:53;;;:::o;15655:122::-;15728:24;15746:5;15728:24;:::i;:::-;15721:5;15718:35;15708:2;;15767:1;15764;15757:12;15708:2;15698:79;:::o;15783:122::-;15856:24;15874:5;15856:24;:::i;:::-;15849:5;15846:35;15836:2;;15895:1;15892;15885:12;15836:2;15826:79;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "2423600",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"DISTRIBUTION_END()": "1160",
								"EMISSION_MANAGER()": "infinite",
								"PRECISION()": "402",
								"REVISION()": "373",
								"REWARD_TOKEN()": "infinite",
								"assets(address)": "infinite",
								"claimRewards(address[],uint256,address)": "infinite",
								"claimRewardsOnBehalf(address[],uint256,address,address)": "infinite",
								"claimRewardsToSelf(address[],uint256)": "infinite",
								"configureAssets(address[],uint256[])": "infinite",
								"getAssetData(address)": "infinite",
								"getClaimer(address)": "infinite",
								"getDistributionEnd()": "1159",
								"getRewardsBalance(address[],address)": "infinite",
								"getRewardsVault()": "1288",
								"getUserAssetData(address,address)": "infinite",
								"getUserUnclaimedRewards(address)": "1587",
								"handleAction(address,uint256,uint256)": "infinite",
								"initialize(address)": "infinite",
								"setClaimer(address,address)": "infinite",
								"setDistributionEnd(uint256)": "infinite",
								"setRewardsVault(address)": "infinite"
							},
							"internal": {
								"_transferRewards(address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 530,
									"end": 1852,
									"name": "PUSH",
									"source": 5,
									"value": "C0"
								},
								{
									"begin": 530,
									"end": 1852,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 530,
									"end": 1852,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 924,
									"end": 925,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 881,
									"end": 925,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 881,
									"end": 925,
									"name": "SSTORE",
									"source": 4
								},
								{
									"begin": 735,
									"end": 857,
									"name": "CALLVALUE",
									"source": 5
								},
								{
									"begin": 735,
									"end": 857,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 735,
									"end": 857,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 735,
									"end": 857,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 735,
									"end": 857,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 735,
									"end": 857,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 735,
									"end": 857,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 735,
									"end": 857,
									"name": "REVERT",
									"source": 5
								},
								{
									"begin": 735,
									"end": 857,
									"name": "tag",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 735,
									"end": 857,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 735,
									"end": 857,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 735,
									"end": 857,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 735,
									"end": 857,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 735,
									"end": 857,
									"name": "PUSHSIZE",
									"source": 5
								},
								{
									"begin": 735,
									"end": 857,
									"name": "CODESIZE",
									"source": 5
								},
								{
									"begin": 735,
									"end": 857,
									"name": "SUB",
									"source": 5
								},
								{
									"begin": 735,
									"end": 857,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 735,
									"end": 857,
									"name": "PUSHSIZE",
									"source": 5
								},
								{
									"begin": 735,
									"end": 857,
									"name": "DUP4",
									"source": 5
								},
								{
									"begin": 735,
									"end": 857,
									"name": "CODECOPY",
									"source": 5
								},
								{
									"begin": 735,
									"end": 857,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 735,
									"end": 857,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 735,
									"end": 857,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 735,
									"end": 857,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 735,
									"end": 857,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 735,
									"end": 857,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 735,
									"end": 857,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 735,
									"end": 857,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 735,
									"end": 857,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "2"
								},
								{
									"begin": 735,
									"end": 857,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 735,
									"end": 857,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 735,
									"end": 857,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "3"
								},
								{
									"begin": 735,
									"end": 857,
									"name": "JUMP",
									"source": 5,
									"value": "[in]"
								},
								{
									"begin": 735,
									"end": 857,
									"name": "tag",
									"source": 5,
									"value": "2"
								},
								{
									"begin": 735,
									"end": 857,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 822,
									"end": 833,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 835,
									"end": 850,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 1651,
									"end": 1666,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 1067,
									"end": 1082,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 1048,
									"end": 1082,
									"name": "PUSH",
									"source": 7,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1048,
									"end": 1082,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 1048,
									"end": 1082,
									"name": "PUSH",
									"source": 7,
									"value": "80"
								},
								{
									"begin": 1048,
									"end": 1082,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1048,
									"end": 1082,
									"name": "PUSH",
									"source": 7,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1048,
									"end": 1082,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 1048,
									"end": 1082,
									"name": "PUSH",
									"source": 7,
									"value": "60"
								},
								{
									"begin": 1048,
									"end": 1082,
									"name": "SHL",
									"source": 7
								},
								{
									"begin": 1048,
									"end": 1082,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1048,
									"end": 1082,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 1048,
									"end": 1082,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1048,
									"end": 1082,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1004,
									"end": 1088,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1701,
									"end": 1712,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1678,
									"end": 1713,
									"name": "PUSH",
									"source": 6,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1678,
									"end": 1713,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 1678,
									"end": 1713,
									"name": "PUSH",
									"source": 6,
									"value": "A0"
								},
								{
									"begin": 1678,
									"end": 1713,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1678,
									"end": 1713,
									"name": "PUSH",
									"source": 6,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1678,
									"end": 1713,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 1678,
									"end": 1713,
									"name": "PUSH",
									"source": 6,
									"value": "60"
								},
								{
									"begin": 1678,
									"end": 1713,
									"name": "SHL",
									"source": 6
								},
								{
									"begin": 1678,
									"end": 1713,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1678,
									"end": 1713,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 1678,
									"end": 1713,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1678,
									"end": 1713,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1569,
									"end": 1719,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1569,
									"end": 1719,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 735,
									"end": 857,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 735,
									"end": 857,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 530,
									"end": 1852,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "10"
								},
								{
									"begin": 530,
									"end": 1852,
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 7,
									"end": 150,
									"name": "tag",
									"source": 13,
									"value": "12"
								},
								{
									"begin": 7,
									"end": 150,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 7,
									"end": 150,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 95,
									"end": 101,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 89,
									"end": 102,
									"name": "MLOAD",
									"source": 13
								},
								{
									"begin": 80,
									"end": 102,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 80,
									"end": 102,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 111,
									"end": 144,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "14"
								},
								{
									"begin": 138,
									"end": 143,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 111,
									"end": 144,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "15"
								},
								{
									"begin": 111,
									"end": 144,
									"name": "JUMP",
									"source": 13,
									"value": "[in]"
								},
								{
									"begin": 111,
									"end": 144,
									"name": "tag",
									"source": 13,
									"value": "14"
								},
								{
									"begin": 111,
									"end": 144,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 70,
									"end": 150,
									"name": "SWAP3",
									"source": 13
								},
								{
									"begin": 70,
									"end": 150,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 70,
									"end": 150,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 70,
									"end": 150,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 70,
									"end": 150,
									"name": "JUMP",
									"source": 13,
									"value": "[out]"
								},
								{
									"begin": 156,
									"end": 325,
									"name": "tag",
									"source": 13,
									"value": "16"
								},
								{
									"begin": 156,
									"end": 325,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 156,
									"end": 325,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 257,
									"end": 263,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 251,
									"end": 264,
									"name": "MLOAD",
									"source": 13
								},
								{
									"begin": 242,
									"end": 264,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 242,
									"end": 264,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 273,
									"end": 319,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "18"
								},
								{
									"begin": 313,
									"end": 318,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 273,
									"end": 319,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "19"
								},
								{
									"begin": 273,
									"end": 319,
									"name": "JUMP",
									"source": 13,
									"value": "[in]"
								},
								{
									"begin": 273,
									"end": 319,
									"name": "tag",
									"source": 13,
									"value": "18"
								},
								{
									"begin": 273,
									"end": 319,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 232,
									"end": 325,
									"name": "SWAP3",
									"source": 13
								},
								{
									"begin": 232,
									"end": 325,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 232,
									"end": 325,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 232,
									"end": 325,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 232,
									"end": 325,
									"name": "JUMP",
									"source": 13,
									"value": "[out]"
								},
								{
									"begin": 331,
									"end": 793,
									"name": "tag",
									"source": 13,
									"value": "3"
								},
								{
									"begin": 331,
									"end": 793,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 331,
									"end": 793,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 331,
									"end": 793,
									"name": "DUP1",
									"source": 13
								},
								{
									"begin": 480,
									"end": 482,
									"name": "PUSH",
									"source": 13,
									"value": "40"
								},
								{
									"begin": 468,
									"end": 477,
									"name": "DUP4",
									"source": 13
								},
								{
									"begin": 459,
									"end": 466,
									"name": "DUP6",
									"source": 13
								},
								{
									"begin": 455,
									"end": 478,
									"name": "SUB",
									"source": 13
								},
								{
									"begin": 451,
									"end": 483,
									"name": "SLT",
									"source": 13
								},
								{
									"begin": 448,
									"end": 450,
									"name": "ISZERO",
									"source": 13
								},
								{
									"begin": 448,
									"end": 450,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "21"
								},
								{
									"begin": 448,
									"end": 450,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": 496,
									"end": 497,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 493,
									"end": 494,
									"name": "DUP1",
									"source": 13
								},
								{
									"begin": 486,
									"end": 498,
									"name": "REVERT",
									"source": 13
								},
								{
									"begin": 448,
									"end": 450,
									"name": "tag",
									"source": 13,
									"value": "21"
								},
								{
									"begin": 448,
									"end": 450,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 538,
									"end": 539,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 562,
									"end": 639,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "22"
								},
								{
									"begin": 631,
									"end": 638,
									"name": "DUP6",
									"source": 13
								},
								{
									"begin": 622,
									"end": 628,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 611,
									"end": 620,
									"name": "DUP7",
									"source": 13
								},
								{
									"begin": 607,
									"end": 629,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 562,
									"end": 639,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "16"
								},
								{
									"begin": 562,
									"end": 639,
									"name": "JUMP",
									"source": 13,
									"value": "[in]"
								},
								{
									"begin": 562,
									"end": 639,
									"name": "tag",
									"source": 13,
									"value": "22"
								},
								{
									"begin": 562,
									"end": 639,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 552,
									"end": 639,
									"name": "SWAP3",
									"source": 13
								},
								{
									"begin": 552,
									"end": 639,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 510,
									"end": 649,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 687,
									"end": 689,
									"name": "PUSH",
									"source": 13,
									"value": "20"
								},
								{
									"begin": 712,
									"end": 776,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "23"
								},
								{
									"begin": 768,
									"end": 775,
									"name": "DUP6",
									"source": 13
								},
								{
									"begin": 759,
									"end": 765,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 748,
									"end": 757,
									"name": "DUP7",
									"source": 13
								},
								{
									"begin": 744,
									"end": 766,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 712,
									"end": 776,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "12"
								},
								{
									"begin": 712,
									"end": 776,
									"name": "JUMP",
									"source": 13,
									"value": "[in]"
								},
								{
									"begin": 712,
									"end": 776,
									"name": "tag",
									"source": 13,
									"value": "23"
								},
								{
									"begin": 712,
									"end": 776,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 702,
									"end": 776,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 702,
									"end": 776,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 659,
									"end": 786,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 438,
									"end": 793,
									"name": "SWAP3",
									"source": 13
								},
								{
									"begin": 438,
									"end": 793,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 438,
									"end": 793,
									"name": "SWAP3",
									"source": 13
								},
								{
									"begin": 438,
									"end": 793,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 438,
									"end": 793,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 438,
									"end": 793,
									"name": "JUMP",
									"source": 13,
									"value": "[out]"
								},
								{
									"begin": 799,
									"end": 895,
									"name": "tag",
									"source": 13,
									"value": "24"
								},
								{
									"begin": 799,
									"end": 895,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 799,
									"end": 895,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 865,
									"end": 889,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "26"
								},
								{
									"begin": 883,
									"end": 888,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 865,
									"end": 889,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "27"
								},
								{
									"begin": 865,
									"end": 889,
									"name": "JUMP",
									"source": 13,
									"value": "[in]"
								},
								{
									"begin": 865,
									"end": 889,
									"name": "tag",
									"source": 13,
									"value": "26"
								},
								{
									"begin": 865,
									"end": 889,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 854,
									"end": 889,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 854,
									"end": 889,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 844,
									"end": 895,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 844,
									"end": 895,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 844,
									"end": 895,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 844,
									"end": 895,
									"name": "JUMP",
									"source": 13,
									"value": "[out]"
								},
								{
									"begin": 901,
									"end": 1010,
									"name": "tag",
									"source": 13,
									"value": "28"
								},
								{
									"begin": 901,
									"end": 1010,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 901,
									"end": 1010,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 980,
									"end": 1004,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "30"
								},
								{
									"begin": 998,
									"end": 1003,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 980,
									"end": 1004,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "24"
								},
								{
									"begin": 980,
									"end": 1004,
									"name": "JUMP",
									"source": 13,
									"value": "[in]"
								},
								{
									"begin": 980,
									"end": 1004,
									"name": "tag",
									"source": 13,
									"value": "30"
								},
								{
									"begin": 980,
									"end": 1004,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 969,
									"end": 1004,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 969,
									"end": 1004,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 959,
									"end": 1010,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 959,
									"end": 1010,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 959,
									"end": 1010,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 959,
									"end": 1010,
									"name": "JUMP",
									"source": 13,
									"value": "[out]"
								},
								{
									"begin": 1016,
									"end": 1142,
									"name": "tag",
									"source": 13,
									"value": "27"
								},
								{
									"begin": 1016,
									"end": 1142,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 1016,
									"end": 1142,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 1093,
									"end": 1135,
									"name": "PUSH",
									"source": 13,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1086,
									"end": 1091,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 1082,
									"end": 1136,
									"name": "AND",
									"source": 13
								},
								{
									"begin": 1071,
									"end": 1136,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 1071,
									"end": 1136,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 1061,
									"end": 1142,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 1061,
									"end": 1142,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 1061,
									"end": 1142,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 1061,
									"end": 1142,
									"name": "JUMP",
									"source": 13,
									"value": "[out]"
								},
								{
									"begin": 1148,
									"end": 1270,
									"name": "tag",
									"source": 13,
									"value": "15"
								},
								{
									"begin": 1148,
									"end": 1270,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 1221,
									"end": 1245,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "33"
								},
								{
									"begin": 1239,
									"end": 1244,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 1221,
									"end": 1245,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "24"
								},
								{
									"begin": 1221,
									"end": 1245,
									"name": "JUMP",
									"source": 13,
									"value": "[in]"
								},
								{
									"begin": 1221,
									"end": 1245,
									"name": "tag",
									"source": 13,
									"value": "33"
								},
								{
									"begin": 1221,
									"end": 1245,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 1214,
									"end": 1219,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 1211,
									"end": 1246,
									"name": "EQ",
									"source": 13
								},
								{
									"begin": 1201,
									"end": 1203,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "34"
								},
								{
									"begin": 1201,
									"end": 1203,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": 1260,
									"end": 1261,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 1257,
									"end": 1258,
									"name": "DUP1",
									"source": 13
								},
								{
									"begin": 1250,
									"end": 1262,
									"name": "REVERT",
									"source": 13
								},
								{
									"begin": 1201,
									"end": 1203,
									"name": "tag",
									"source": 13,
									"value": "34"
								},
								{
									"begin": 1201,
									"end": 1203,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 1191,
									"end": 1270,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 1191,
									"end": 1270,
									"name": "JUMP",
									"source": 13,
									"value": "[out]"
								},
								{
									"begin": 1276,
									"end": 1424,
									"name": "tag",
									"source": 13,
									"value": "19"
								},
								{
									"begin": 1276,
									"end": 1424,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 1362,
									"end": 1399,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "36"
								},
								{
									"begin": 1393,
									"end": 1398,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 1362,
									"end": 1399,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "28"
								},
								{
									"begin": 1362,
									"end": 1399,
									"name": "JUMP",
									"source": 13,
									"value": "[in]"
								},
								{
									"begin": 1362,
									"end": 1399,
									"name": "tag",
									"source": 13,
									"value": "36"
								},
								{
									"begin": 1362,
									"end": 1399,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 1355,
									"end": 1360,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 1352,
									"end": 1400,
									"name": "EQ",
									"source": 13
								},
								{
									"begin": 1342,
									"end": 1344,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "37"
								},
								{
									"begin": 1342,
									"end": 1344,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": 1414,
									"end": 1415,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 1411,
									"end": 1412,
									"name": "DUP1",
									"source": 13
								},
								{
									"begin": 1404,
									"end": 1416,
									"name": "REVERT",
									"source": 13
								},
								{
									"begin": 1342,
									"end": 1344,
									"name": "tag",
									"source": 13,
									"value": "37"
								},
								{
									"begin": 1342,
									"end": 1344,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 1332,
									"end": 1424,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 1332,
									"end": 1424,
									"name": "JUMP",
									"source": 13,
									"value": "[out]"
								},
								{
									"begin": 530,
									"end": 1852,
									"name": "tag",
									"source": 5,
									"value": "10"
								},
								{
									"begin": 530,
									"end": 1852,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 530,
									"end": 1852,
									"name": "PUSH",
									"source": 5,
									"value": "80"
								},
								{
									"begin": 530,
									"end": 1852,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 530,
									"end": 1852,
									"name": "PUSH",
									"source": 5,
									"value": "60"
								},
								{
									"begin": 530,
									"end": 1852,
									"name": "SHR",
									"source": 5
								},
								{
									"begin": 530,
									"end": 1852,
									"name": "PUSH",
									"source": 5,
									"value": "A0"
								},
								{
									"begin": 530,
									"end": 1852,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 530,
									"end": 1852,
									"name": "PUSH",
									"source": 5,
									"value": "60"
								},
								{
									"begin": 530,
									"end": 1852,
									"name": "SHR",
									"source": 5
								},
								{
									"begin": 530,
									"end": 1852,
									"name": "PUSH #[$]",
									"source": 5,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 530,
									"end": 1852,
									"name": "PUSH [$]",
									"source": 5,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 530,
									"end": 1852,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 530,
									"end": 1852,
									"name": "CODECOPY",
									"source": 5
								},
								{
									"begin": 530,
									"end": 1852,
									"name": "ASSIGNIMMUTABLE",
									"source": 5,
									"value": "662"
								},
								{
									"begin": 530,
									"end": 1852,
									"name": "ASSIGNIMMUTABLE",
									"source": 5,
									"value": "1291"
								},
								{
									"begin": 530,
									"end": 1852,
									"name": "PUSH #[$]",
									"source": 5,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 530,
									"end": 1852,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 530,
									"end": 1852,
									"name": "RETURN",
									"source": 5
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212208ddb6503f8a391f3aa4620a5fb5787cd6782c4c0ca8381ffa562d248171ad38e64736f6c63430007050033",
									".code": [
										{
											"begin": 530,
											"end": 1852,
											"name": "PUSH",
											"source": 5,
											"value": "80"
										},
										{
											"begin": 530,
											"end": 1852,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 530,
											"end": 1852,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 530,
											"end": 1852,
											"name": "CALLVALUE",
											"source": 5
										},
										{
											"begin": 530,
											"end": 1852,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 530,
											"end": 1852,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 530,
											"end": 1852,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 530,
											"end": 1852,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 530,
											"end": 1852,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 530,
											"end": 1852,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 530,
											"end": 1852,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 530,
											"end": 1852,
											"name": "tag",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 530,
											"end": 1852,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 530,
											"end": 1852,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 530,
											"end": 1852,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 530,
											"end": 1852,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 530,
											"end": 1852,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 530,
											"end": 1852,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 530,
											"end": 1852,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 530,
											"end": 1852,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 530,
											"end": 1852,
											"name": "CALLDATALOAD",
											"source": 5
										},
										{
											"begin": 530,
											"end": 1852,
											"name": "PUSH",
											"source": 5,
											"value": "E0"
										},
										{
											"begin": 530,
											"end": 1852,
											"name": "SHR",
											"source": 5
										},
										{
											"begin": 530,
											"end": 1852,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 530,
											"end": 1852,
											"name": "PUSH",
											"source": 5,
											"value": "919CD40F"
										},
										{
											"begin": 530,
											"end": 1852,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 530,
											"end": 1852,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "25"
										},
										{
											"begin": 530,
											"end": 1852,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 530,
											"end": 1852,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 530,
											"end": 1852,
											"name": "PUSH",
											"source": 5,
											"value": "CC69AFEC"
										},
										{
											"begin": 530,
											"end": 1852,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 530,
											"end": 1852,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "26"
										},
										{
											"begin": 530,
											"end": 1852,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 530,
											"end": 1852,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 530,
											"end": 1852,
											"name": "PUSH",
											"source": 5,
											"value": "CC69AFEC"
										},
										{
											"begin": 530,
											"end": 1852,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 530,
											"end": 1852,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "19"
										},
										{
											"begin": 530,
											"end": 1852,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 530,
											"end": 1852,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 530,
											"end": 1852,
											"name": "PUSH",
											"source": 5,
											"value": "DDE43CBA"
										},
										{
											"begin": 530,
											"end": 1852,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 530,
											"end": 1852,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 530,
											"end": 1852,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 530,
											"end": 1852,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 530,
											"end": 1852,
											"name": "PUSH",
											"source": 5,
											"value": "E23DDEC5"
										},
										{
											"begin": 530,
											"end": 1852,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 530,
											"end": 1852,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "21"
										},
										{
											"begin": 530,
											"end": 1852,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 530,
											"end": 1852,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 530,
											"end": 1852,
											"name": "PUSH",
											"source": 5,
											"value": "F11B8188"
										},
										{
											"begin": 530,
											"end": 1852,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 530,
											"end": 1852,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "22"
										},
										{
											"begin": 530,
											"end": 1852,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 530,
											"end": 1852,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 530,
											"end": 1852,
											"name": "PUSH",
											"source": 5,
											"value": "F5BB3E02"
										},
										{
											"begin": 530,
											"end": 1852,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 530,
											"end": 1852,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "23"
										},
										{
											"begin": 530,
											"end": 1852,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 530,
											"end": 1852,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 530,
											"end": 1852,
											"name": "PUSH",
											"source": 5,
											"value": "F5CF673B"
										},
										{
											"begin": 530,
											"end": 1852,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 530,
											"end": 1852,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 530,
											"end": 1852,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 530,
											"end": 1852,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 530,
											"end": 1852,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 530,
											"end": 1852,
											"name": "tag",
											"source": 5,
											"value": "26"
										},
										{
											"begin": 530,
											"end": 1852,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 530,
											"end": 1852,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 530,
											"end": 1852,
											"name": "PUSH",
											"source": 5,
											"value": "919CD40F"
										},
										{
											"begin": 530,
											"end": 1852,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 530,
											"end": 1852,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "14"
										},
										{
											"begin": 530,
											"end": 1852,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 530,
											"end": 1852,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 530,
											"end": 1852,
											"name": "PUSH",
											"source": 5,
											"value": "99248EA7"
										},
										{
											"begin": 530,
											"end": 1852,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 530,
											"end": 1852,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "15"
										},
										{
											"begin": 530,
											"end": 1852,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 530,
											"end": 1852,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 530,
											"end": 1852,
											"name": "PUSH",
											"source": 5,
											"value": "AAF5EB68"
										},
										{
											"begin": 530,
											"end": 1852,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 530,
											"end": 1852,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "16"
										},
										{
											"begin": 530,
											"end": 1852,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 530,
											"end": 1852,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 530,
											"end": 1852,
											"name": "PUSH",
											"source": 5,
											"value": "C4D66DE8"
										},
										{
											"begin": 530,
											"end": 1852,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 530,
											"end": 1852,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "17"
										},
										{
											"begin": 530,
											"end": 1852,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 530,
											"end": 1852,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 530,
											"end": 1852,
											"name": "PUSH",
											"source": 5,
											"value": "CBCBB507"
										},
										{
											"begin": 530,
											"end": 1852,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 530,
											"end": 1852,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "18"
										},
										{
											"begin": 530,
											"end": 1852,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 530,
											"end": 1852,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 530,
											"end": 1852,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 530,
											"end": 1852,
											"name": "tag",
											"source": 5,
											"value": "25"
										},
										{
											"begin": 530,
											"end": 1852,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 530,
											"end": 1852,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 530,
											"end": 1852,
											"name": "PUSH",
											"source": 5,
											"value": "39CCBDD3"
										},
										{
											"begin": 530,
											"end": 1852,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 530,
											"end": 1852,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "27"
										},
										{
											"begin": 530,
											"end": 1852,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 530,
											"end": 1852,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 530,
											"end": 1852,
											"name": "PUSH",
											"source": 5,
											"value": "39CCBDD3"
										},
										{
											"begin": 530,
											"end": 1852,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 530,
											"end": 1852,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "8"
										},
										{
											"begin": 530,
											"end": 1852,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 530,
											"end": 1852,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 530,
											"end": 1852,
											"name": "PUSH",
											"source": 5,
											"value": "41485304"
										},
										{
											"begin": 530,
											"end": 1852,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 530,
											"end": 1852,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "9"
										},
										{
											"begin": 530,
											"end": 1852,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 530,
											"end": 1852,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 530,
											"end": 1852,
											"name": "PUSH",
											"source": 5,
											"value": "6D34B96E"
										},
										{
											"begin": 530,
											"end": 1852,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 530,
											"end": 1852,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "10"
										},
										{
											"begin": 530,
											"end": 1852,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 530,
											"end": 1852,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 530,
											"end": 1852,
											"name": "PUSH",
											"source": 5,
											"value": "74D945EC"
										},
										{
											"begin": 530,
											"end": 1852,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 530,
											"end": 1852,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "11"
										},
										{
											"begin": 530,
											"end": 1852,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 530,
											"end": 1852,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 530,
											"end": 1852,
											"name": "PUSH",
											"source": 5,
											"value": "79F171B2"
										},
										{
											"begin": 530,
											"end": 1852,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 530,
											"end": 1852,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "12"
										},
										{
											"begin": 530,
											"end": 1852,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 530,
											"end": 1852,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 530,
											"end": 1852,
											"name": "PUSH",
											"source": 5,
											"value": "8B599F26"
										},
										{
											"begin": 530,
											"end": 1852,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 530,
											"end": 1852,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "13"
										},
										{
											"begin": 530,
											"end": 1852,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 530,
											"end": 1852,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 530,
											"end": 1852,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 530,
											"end": 1852,
											"name": "tag",
											"source": 5,
											"value": "27"
										},
										{
											"begin": 530,
											"end": 1852,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 530,
											"end": 1852,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 530,
											"end": 1852,
											"name": "PUSH",
											"source": 5,
											"value": "1652E7B7"
										},
										{
											"begin": 530,
											"end": 1852,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 530,
											"end": 1852,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "3"
										},
										{
											"begin": 530,
											"end": 1852,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 530,
											"end": 1852,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 530,
											"end": 1852,
											"name": "PUSH",
											"source": 5,
											"value": "198FA81E"
										},
										{
											"begin": 530,
											"end": 1852,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 530,
											"end": 1852,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 530,
											"end": 1852,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 530,
											"end": 1852,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 530,
											"end": 1852,
											"name": "PUSH",
											"source": 5,
											"value": "3111E7B3"
										},
										{
											"begin": 530,
											"end": 1852,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 530,
											"end": 1852,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "5"
										},
										{
											"begin": 530,
											"end": 1852,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 530,
											"end": 1852,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 530,
											"end": 1852,
											"name": "PUSH",
											"source": 5,
											"value": "31873E2E"
										},
										{
											"begin": 530,
											"end": 1852,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 530,
											"end": 1852,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "6"
										},
										{
											"begin": 530,
											"end": 1852,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 530,
											"end": 1852,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 530,
											"end": 1852,
											"name": "PUSH",
											"source": 5,
											"value": "3373EE4C"
										},
										{
											"begin": 530,
											"end": 1852,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 530,
											"end": 1852,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "7"
										},
										{
											"begin": 530,
											"end": 1852,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 530,
											"end": 1852,
											"name": "tag",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 530,
											"end": 1852,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 530,
											"end": 1852,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 530,
											"end": 1852,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 530,
											"end": 1852,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 1893,
											"end": 2096,
											"name": "tag",
											"source": 7,
											"value": "3"
										},
										{
											"begin": 1893,
											"end": 2096,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1893,
											"end": 2096,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "28"
										},
										{
											"begin": 1893,
											"end": 2096,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 1893,
											"end": 2096,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1893,
											"end": 2096,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 1893,
											"end": 2096,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 1893,
											"end": 2096,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1893,
											"end": 2096,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1893,
											"end": 2096,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1893,
											"end": 2096,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "29"
										},
										{
											"begin": 1893,
											"end": 2096,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1893,
											"end": 2096,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1893,
											"end": 2096,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "30"
										},
										{
											"begin": 1893,
											"end": 2096,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 1893,
											"end": 2096,
											"name": "tag",
											"source": 7,
											"value": "29"
										},
										{
											"begin": 1893,
											"end": 2096,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1893,
											"end": 2096,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "31"
										},
										{
											"begin": 1893,
											"end": 2096,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 1893,
											"end": 2096,
											"name": "tag",
											"source": 7,
											"value": "28"
										},
										{
											"begin": 1893,
											"end": 2096,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1893,
											"end": 2096,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1893,
											"end": 2096,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1893,
											"end": 2096,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "32"
										},
										{
											"begin": 1893,
											"end": 2096,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 1893,
											"end": 2096,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 1893,
											"end": 2096,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1893,
											"end": 2096,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1893,
											"end": 2096,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "33"
										},
										{
											"begin": 1893,
											"end": 2096,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 1893,
											"end": 2096,
											"name": "tag",
											"source": 7,
											"value": "32"
										},
										{
											"begin": 1893,
											"end": 2096,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1893,
											"end": 2096,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1893,
											"end": 2096,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1893,
											"end": 2096,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1893,
											"end": 2096,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1893,
											"end": 2096,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 1893,
											"end": 2096,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1893,
											"end": 2096,
											"name": "RETURN",
											"source": 7
										},
										{
											"begin": 5231,
											"end": 5369,
											"name": "tag",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 5231,
											"end": 5369,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5231,
											"end": 5369,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "34"
										},
										{
											"begin": 5231,
											"end": 5369,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 5231,
											"end": 5369,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 5231,
											"end": 5369,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 5231,
											"end": 5369,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 5231,
											"end": 5369,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5231,
											"end": 5369,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5231,
											"end": 5369,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5231,
											"end": 5369,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "35"
										},
										{
											"begin": 5231,
											"end": 5369,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5231,
											"end": 5369,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5231,
											"end": 5369,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "30"
										},
										{
											"begin": 5231,
											"end": 5369,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 5231,
											"end": 5369,
											"name": "tag",
											"source": 6,
											"value": "35"
										},
										{
											"begin": 5231,
											"end": 5369,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5231,
											"end": 5369,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "36"
										},
										{
											"begin": 5231,
											"end": 5369,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 5231,
											"end": 5369,
											"name": "tag",
											"source": 6,
											"value": "34"
										},
										{
											"begin": 5231,
											"end": 5369,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5231,
											"end": 5369,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 5231,
											"end": 5369,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 5231,
											"end": 5369,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "37"
										},
										{
											"begin": 5231,
											"end": 5369,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5231,
											"end": 5369,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5231,
											"end": 5369,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "38"
										},
										{
											"begin": 5231,
											"end": 5369,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 5231,
											"end": 5369,
											"name": "tag",
											"source": 6,
											"value": "37"
										},
										{
											"begin": 5231,
											"end": 5369,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5231,
											"end": 5369,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 5231,
											"end": 5369,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 5231,
											"end": 5369,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 5231,
											"end": 5369,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5231,
											"end": 5369,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 5231,
											"end": 5369,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5231,
											"end": 5369,
											"name": "RETURN",
											"source": 6
										},
										{
											"begin": 3812,
											"end": 4076,
											"name": "tag",
											"source": 6,
											"value": "5"
										},
										{
											"begin": 3812,
											"end": 4076,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3812,
											"end": 4076,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "39"
										},
										{
											"begin": 3812,
											"end": 4076,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 3812,
											"end": 4076,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3812,
											"end": 4076,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 3812,
											"end": 4076,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 3812,
											"end": 4076,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3812,
											"end": 4076,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3812,
											"end": 4076,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3812,
											"end": 4076,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3812,
											"end": 4076,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3812,
											"end": 4076,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3812,
											"end": 4076,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "41"
										},
										{
											"begin": 3812,
											"end": 4076,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 3812,
											"end": 4076,
											"name": "tag",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3812,
											"end": 4076,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3812,
											"end": 4076,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "42"
										},
										{
											"begin": 3812,
											"end": 4076,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 3812,
											"end": 4076,
											"name": "tag",
											"source": 6,
											"value": "39"
										},
										{
											"begin": 3812,
											"end": 4076,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3812,
											"end": 4076,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3812,
											"end": 4076,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3812,
											"end": 4076,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "43"
										},
										{
											"begin": 3812,
											"end": 4076,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3812,
											"end": 4076,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3812,
											"end": 4076,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "38"
										},
										{
											"begin": 3812,
											"end": 4076,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 3812,
											"end": 4076,
											"name": "tag",
											"source": 6,
											"value": "43"
										},
										{
											"begin": 3812,
											"end": 4076,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3812,
											"end": 4076,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3812,
											"end": 4076,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3812,
											"end": 4076,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3812,
											"end": 4076,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3812,
											"end": 4076,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 3812,
											"end": 4076,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3812,
											"end": 4076,
											"name": "RETURN",
											"source": 6
										},
										{
											"begin": 2619,
											"end": 3018,
											"name": "tag",
											"source": 6,
											"value": "6"
										},
										{
											"begin": 2619,
											"end": 3018,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2619,
											"end": 3018,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "44"
										},
										{
											"begin": 2619,
											"end": 3018,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 2619,
											"end": 3018,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2619,
											"end": 3018,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 2619,
											"end": 3018,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 2619,
											"end": 3018,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2619,
											"end": 3018,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2619,
											"end": 3018,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2619,
											"end": 3018,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "45"
										},
										{
											"begin": 2619,
											"end": 3018,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2619,
											"end": 3018,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2619,
											"end": 3018,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "46"
										},
										{
											"begin": 2619,
											"end": 3018,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 2619,
											"end": 3018,
											"name": "tag",
											"source": 6,
											"value": "45"
										},
										{
											"begin": 2619,
											"end": 3018,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2619,
											"end": 3018,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "47"
										},
										{
											"begin": 2619,
											"end": 3018,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 2619,
											"end": 3018,
											"name": "tag",
											"source": 6,
											"value": "44"
										},
										{
											"begin": 2619,
											"end": 3018,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2619,
											"end": 3018,
											"name": "STOP",
											"source": 6
										},
										{
											"begin": 1701,
											"end": 1840,
											"name": "tag",
											"source": 7,
											"value": "7"
										},
										{
											"begin": 1701,
											"end": 1840,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1701,
											"end": 1840,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "48"
										},
										{
											"begin": 1701,
											"end": 1840,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 1701,
											"end": 1840,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1701,
											"end": 1840,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 1701,
											"end": 1840,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 1701,
											"end": 1840,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1701,
											"end": 1840,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1701,
											"end": 1840,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1701,
											"end": 1840,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "49"
										},
										{
											"begin": 1701,
											"end": 1840,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1701,
											"end": 1840,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1701,
											"end": 1840,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "50"
										},
										{
											"begin": 1701,
											"end": 1840,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 1701,
											"end": 1840,
											"name": "tag",
											"source": 7,
											"value": "49"
										},
										{
											"begin": 1701,
											"end": 1840,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1701,
											"end": 1840,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "51"
										},
										{
											"begin": 1701,
											"end": 1840,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 1701,
											"end": 1840,
											"name": "tag",
											"source": 7,
											"value": "48"
										},
										{
											"begin": 1701,
											"end": 1840,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1701,
											"end": 1840,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1701,
											"end": 1840,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1701,
											"end": 1840,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "52"
										},
										{
											"begin": 1701,
											"end": 1840,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1701,
											"end": 1840,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1701,
											"end": 1840,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "38"
										},
										{
											"begin": 1701,
											"end": 1840,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 1701,
											"end": 1840,
											"name": "tag",
											"source": 7,
											"value": "52"
										},
										{
											"begin": 1701,
											"end": 1840,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1701,
											"end": 1840,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1701,
											"end": 1840,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1701,
											"end": 1840,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1701,
											"end": 1840,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1701,
											"end": 1840,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 1701,
											"end": 1840,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1701,
											"end": 1840,
											"name": "RETURN",
											"source": 7
										},
										{
											"begin": 1141,
											"end": 1330,
											"name": "tag",
											"source": 7,
											"value": "8"
										},
										{
											"begin": 1141,
											"end": 1330,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1141,
											"end": 1330,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "53"
										},
										{
											"begin": 1141,
											"end": 1330,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 1141,
											"end": 1330,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1141,
											"end": 1330,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 1141,
											"end": 1330,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 1141,
											"end": 1330,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1141,
											"end": 1330,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1141,
											"end": 1330,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1141,
											"end": 1330,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "54"
										},
										{
											"begin": 1141,
											"end": 1330,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1141,
											"end": 1330,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1141,
											"end": 1330,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "55"
										},
										{
											"begin": 1141,
											"end": 1330,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 1141,
											"end": 1330,
											"name": "tag",
											"source": 7,
											"value": "54"
										},
										{
											"begin": 1141,
											"end": 1330,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1141,
											"end": 1330,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "56"
										},
										{
											"begin": 1141,
											"end": 1330,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 1141,
											"end": 1330,
											"name": "tag",
											"source": 7,
											"value": "53"
										},
										{
											"begin": 1141,
											"end": 1330,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1141,
											"end": 1330,
											"name": "STOP",
											"source": 7
										},
										{
											"begin": 4568,
											"end": 4778,
											"name": "tag",
											"source": 6,
											"value": "9"
										},
										{
											"begin": 4568,
											"end": 4778,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4568,
											"end": 4778,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "57"
										},
										{
											"begin": 4568,
											"end": 4778,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 4568,
											"end": 4778,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4568,
											"end": 4778,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 4568,
											"end": 4778,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 4568,
											"end": 4778,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4568,
											"end": 4778,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4568,
											"end": 4778,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4568,
											"end": 4778,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "58"
										},
										{
											"begin": 4568,
											"end": 4778,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4568,
											"end": 4778,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4568,
											"end": 4778,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "59"
										},
										{
											"begin": 4568,
											"end": 4778,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 4568,
											"end": 4778,
											"name": "tag",
											"source": 6,
											"value": "58"
										},
										{
											"begin": 4568,
											"end": 4778,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4568,
											"end": 4778,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 4568,
											"end": 4778,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 4568,
											"end": 4778,
											"name": "tag",
											"source": 6,
											"value": "57"
										},
										{
											"begin": 4568,
											"end": 4778,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4568,
											"end": 4778,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 4568,
											"end": 4778,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 4568,
											"end": 4778,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "61"
										},
										{
											"begin": 4568,
											"end": 4778,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4568,
											"end": 4778,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4568,
											"end": 4778,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "38"
										},
										{
											"begin": 4568,
											"end": 4778,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 4568,
											"end": 4778,
											"name": "tag",
											"source": 6,
											"value": "61"
										},
										{
											"begin": 4568,
											"end": 4778,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4568,
											"end": 4778,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 4568,
											"end": 4778,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 4568,
											"end": 4778,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4568,
											"end": 4778,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4568,
											"end": 4778,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 4568,
											"end": 4778,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4568,
											"end": 4778,
											"name": "RETURN",
											"source": 6
										},
										{
											"begin": 4130,
											"end": 4514,
											"name": "tag",
											"source": 6,
											"value": "10"
										},
										{
											"begin": 4130,
											"end": 4514,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4130,
											"end": 4514,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "62"
										},
										{
											"begin": 4130,
											"end": 4514,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 4130,
											"end": 4514,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4130,
											"end": 4514,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 4130,
											"end": 4514,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 4130,
											"end": 4514,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4130,
											"end": 4514,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4130,
											"end": 4514,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4130,
											"end": 4514,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "63"
										},
										{
											"begin": 4130,
											"end": 4514,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4130,
											"end": 4514,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4130,
											"end": 4514,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "64"
										},
										{
											"begin": 4130,
											"end": 4514,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 4130,
											"end": 4514,
											"name": "tag",
											"source": 6,
											"value": "63"
										},
										{
											"begin": 4130,
											"end": 4514,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4130,
											"end": 4514,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "65"
										},
										{
											"begin": 4130,
											"end": 4514,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 4130,
											"end": 4514,
											"name": "tag",
											"source": 6,
											"value": "62"
										},
										{
											"begin": 4130,
											"end": 4514,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4130,
											"end": 4514,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 4130,
											"end": 4514,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 4130,
											"end": 4514,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "66"
										},
										{
											"begin": 4130,
											"end": 4514,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4130,
											"end": 4514,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4130,
											"end": 4514,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "38"
										},
										{
											"begin": 4130,
											"end": 4514,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 4130,
											"end": 4514,
											"name": "tag",
											"source": 6,
											"value": "66"
										},
										{
											"begin": 4130,
											"end": 4514,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4130,
											"end": 4514,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 4130,
											"end": 4514,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 4130,
											"end": 4514,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4130,
											"end": 4514,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4130,
											"end": 4514,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 4130,
											"end": 4514,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4130,
											"end": 4514,
											"name": "RETURN",
											"source": 6
										},
										{
											"begin": 5057,
											"end": 5177,
											"name": "tag",
											"source": 6,
											"value": "11"
										},
										{
											"begin": 5057,
											"end": 5177,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5057,
											"end": 5177,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "67"
										},
										{
											"begin": 5057,
											"end": 5177,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 5057,
											"end": 5177,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 5057,
											"end": 5177,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 5057,
											"end": 5177,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 5057,
											"end": 5177,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5057,
											"end": 5177,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5057,
											"end": 5177,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5057,
											"end": 5177,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "68"
										},
										{
											"begin": 5057,
											"end": 5177,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5057,
											"end": 5177,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5057,
											"end": 5177,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "30"
										},
										{
											"begin": 5057,
											"end": 5177,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 5057,
											"end": 5177,
											"name": "tag",
											"source": 6,
											"value": "68"
										},
										{
											"begin": 5057,
											"end": 5177,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5057,
											"end": 5177,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "69"
										},
										{
											"begin": 5057,
											"end": 5177,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 5057,
											"end": 5177,
											"name": "tag",
											"source": 6,
											"value": "67"
										},
										{
											"begin": 5057,
											"end": 5177,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5057,
											"end": 5177,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 5057,
											"end": 5177,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 5057,
											"end": 5177,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "70"
										},
										{
											"begin": 5057,
											"end": 5177,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5057,
											"end": 5177,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5057,
											"end": 5177,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "71"
										},
										{
											"begin": 5057,
											"end": 5177,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 5057,
											"end": 5177,
											"name": "tag",
											"source": 6,
											"value": "70"
										},
										{
											"begin": 5057,
											"end": 5177,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5057,
											"end": 5177,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 5057,
											"end": 5177,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 5057,
											"end": 5177,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 5057,
											"end": 5177,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5057,
											"end": 5177,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 5057,
											"end": 5177,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5057,
											"end": 5177,
											"name": "RETURN",
											"source": 6
										},
										{
											"begin": 1773,
											"end": 2565,
											"name": "tag",
											"source": 6,
											"value": "12"
										},
										{
											"begin": 1773,
											"end": 2565,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1773,
											"end": 2565,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "72"
										},
										{
											"begin": 1773,
											"end": 2565,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 1773,
											"end": 2565,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1773,
											"end": 2565,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 1773,
											"end": 2565,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1773,
											"end": 2565,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1773,
											"end": 2565,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1773,
											"end": 2565,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1773,
											"end": 2565,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "73"
										},
										{
											"begin": 1773,
											"end": 2565,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1773,
											"end": 2565,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1773,
											"end": 2565,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "74"
										},
										{
											"begin": 1773,
											"end": 2565,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 1773,
											"end": 2565,
											"name": "tag",
											"source": 6,
											"value": "73"
										},
										{
											"begin": 1773,
											"end": 2565,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1773,
											"end": 2565,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "75"
										},
										{
											"begin": 1773,
											"end": 2565,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 1773,
											"end": 2565,
											"name": "tag",
											"source": 6,
											"value": "72"
										},
										{
											"begin": 1773,
											"end": 2565,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1773,
											"end": 2565,
											"name": "STOP",
											"source": 6
										},
										{
											"begin": 3072,
											"end": 3758,
											"name": "tag",
											"source": 6,
											"value": "13"
										},
										{
											"begin": 3072,
											"end": 3758,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3072,
											"end": 3758,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "76"
										},
										{
											"begin": 3072,
											"end": 3758,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 3072,
											"end": 3758,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3072,
											"end": 3758,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 3072,
											"end": 3758,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 3072,
											"end": 3758,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3072,
											"end": 3758,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3072,
											"end": 3758,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3072,
											"end": 3758,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "77"
										},
										{
											"begin": 3072,
											"end": 3758,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3072,
											"end": 3758,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3072,
											"end": 3758,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "78"
										},
										{
											"begin": 3072,
											"end": 3758,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 3072,
											"end": 3758,
											"name": "tag",
											"source": 6,
											"value": "77"
										},
										{
											"begin": 3072,
											"end": 3758,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3072,
											"end": 3758,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "79"
										},
										{
											"begin": 3072,
											"end": 3758,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 3072,
											"end": 3758,
											"name": "tag",
											"source": 6,
											"value": "76"
										},
										{
											"begin": 3072,
											"end": 3758,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3072,
											"end": 3758,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3072,
											"end": 3758,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3072,
											"end": 3758,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "80"
										},
										{
											"begin": 3072,
											"end": 3758,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3072,
											"end": 3758,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3072,
											"end": 3758,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "38"
										},
										{
											"begin": 3072,
											"end": 3758,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 3072,
											"end": 3758,
											"name": "tag",
											"source": 6,
											"value": "80"
										},
										{
											"begin": 3072,
											"end": 3758,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3072,
											"end": 3758,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3072,
											"end": 3758,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3072,
											"end": 3758,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3072,
											"end": 3758,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3072,
											"end": 3758,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 3072,
											"end": 3758,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3072,
											"end": 3758,
											"name": "RETURN",
											"source": 6
										},
										{
											"begin": 1543,
											"end": 1648,
											"name": "tag",
											"source": 7,
											"value": "14"
										},
										{
											"begin": 1543,
											"end": 1648,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1543,
											"end": 1648,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "81"
										},
										{
											"begin": 1543,
											"end": 1648,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "82"
										},
										{
											"begin": 1543,
											"end": 1648,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 1543,
											"end": 1648,
											"name": "tag",
											"source": 7,
											"value": "81"
										},
										{
											"begin": 1543,
											"end": 1648,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1543,
											"end": 1648,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1543,
											"end": 1648,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1543,
											"end": 1648,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "83"
										},
										{
											"begin": 1543,
											"end": 1648,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1543,
											"end": 1648,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1543,
											"end": 1648,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "38"
										},
										{
											"begin": 1543,
											"end": 1648,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 1543,
											"end": 1648,
											"name": "tag",
											"source": 7,
											"value": "83"
										},
										{
											"begin": 1543,
											"end": 1648,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1543,
											"end": 1648,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1543,
											"end": 1648,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1543,
											"end": 1648,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1543,
											"end": 1648,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1543,
											"end": 1648,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 1543,
											"end": 1648,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1543,
											"end": 1648,
											"name": "RETURN",
											"source": 7
										},
										{
											"begin": 1026,
											"end": 1072,
											"name": "tag",
											"source": 6,
											"value": "15"
										},
										{
											"begin": 1026,
											"end": 1072,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1026,
											"end": 1072,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "84"
										},
										{
											"begin": 1026,
											"end": 1072,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "85"
										},
										{
											"begin": 1026,
											"end": 1072,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 1026,
											"end": 1072,
											"name": "tag",
											"source": 6,
											"value": "84"
										},
										{
											"begin": 1026,
											"end": 1072,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1026,
											"end": 1072,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1026,
											"end": 1072,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1026,
											"end": 1072,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "86"
										},
										{
											"begin": 1026,
											"end": 1072,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1026,
											"end": 1072,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1026,
											"end": 1072,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "71"
										},
										{
											"begin": 1026,
											"end": 1072,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 1026,
											"end": 1072,
											"name": "tag",
											"source": 6,
											"value": "86"
										},
										{
											"begin": 1026,
											"end": 1072,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1026,
											"end": 1072,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1026,
											"end": 1072,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1026,
											"end": 1072,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1026,
											"end": 1072,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1026,
											"end": 1072,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1026,
											"end": 1072,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1026,
											"end": 1072,
											"name": "RETURN",
											"source": 6
										},
										{
											"begin": 749,
											"end": 785,
											"name": "tag",
											"source": 7,
											"value": "16"
										},
										{
											"begin": 749,
											"end": 785,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 749,
											"end": 785,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "87"
										},
										{
											"begin": 749,
											"end": 785,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "88"
										},
										{
											"begin": 749,
											"end": 785,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 749,
											"end": 785,
											"name": "tag",
											"source": 7,
											"value": "87"
										},
										{
											"begin": 749,
											"end": 785,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 749,
											"end": 785,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 749,
											"end": 785,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 749,
											"end": 785,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "89"
										},
										{
											"begin": 749,
											"end": 785,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 749,
											"end": 785,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 749,
											"end": 785,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "90"
										},
										{
											"begin": 749,
											"end": 785,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 749,
											"end": 785,
											"name": "tag",
											"source": 7,
											"value": "89"
										},
										{
											"begin": 749,
											"end": 785,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 749,
											"end": 785,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 749,
											"end": 785,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 749,
											"end": 785,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 749,
											"end": 785,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 749,
											"end": 785,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 749,
											"end": 785,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 749,
											"end": 785,
											"name": "RETURN",
											"source": 7
										},
										{
											"begin": 988,
											"end": 1138,
											"name": "tag",
											"source": 5,
											"value": "17"
										},
										{
											"begin": 988,
											"end": 1138,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 988,
											"end": 1138,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "91"
										},
										{
											"begin": 988,
											"end": 1138,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 988,
											"end": 1138,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 988,
											"end": 1138,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 988,
											"end": 1138,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 988,
											"end": 1138,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 988,
											"end": 1138,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 988,
											"end": 1138,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 988,
											"end": 1138,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "92"
										},
										{
											"begin": 988,
											"end": 1138,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 988,
											"end": 1138,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 988,
											"end": 1138,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "30"
										},
										{
											"begin": 988,
											"end": 1138,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 988,
											"end": 1138,
											"name": "tag",
											"source": 5,
											"value": "92"
										},
										{
											"begin": 988,
											"end": 1138,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 988,
											"end": 1138,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "93"
										},
										{
											"begin": 988,
											"end": 1138,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 988,
											"end": 1138,
											"name": "tag",
											"source": 5,
											"value": "91"
										},
										{
											"begin": 988,
											"end": 1138,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 988,
											"end": 1138,
											"name": "STOP",
											"source": 5
										},
										{
											"begin": 701,
											"end": 742,
											"name": "tag",
											"source": 7,
											"value": "18"
										},
										{
											"begin": 701,
											"end": 742,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 701,
											"end": 742,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "94"
										},
										{
											"begin": 701,
											"end": 742,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "95"
										},
										{
											"begin": 701,
											"end": 742,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 701,
											"end": 742,
											"name": "tag",
											"source": 7,
											"value": "94"
										},
										{
											"begin": 701,
											"end": 742,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 701,
											"end": 742,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 701,
											"end": 742,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 701,
											"end": 742,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "96"
										},
										{
											"begin": 701,
											"end": 742,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 701,
											"end": 742,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 701,
											"end": 742,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "71"
										},
										{
											"begin": 701,
											"end": 742,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 701,
											"end": 742,
											"name": "tag",
											"source": 7,
											"value": "96"
										},
										{
											"begin": 701,
											"end": 742,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 701,
											"end": 742,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 701,
											"end": 742,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 701,
											"end": 742,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 701,
											"end": 742,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 701,
											"end": 742,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 701,
											"end": 742,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 701,
											"end": 742,
											"name": "RETURN",
											"source": 7
										},
										{
											"begin": 1383,
											"end": 1490,
											"name": "tag",
											"source": 7,
											"value": "19"
										},
										{
											"begin": 1383,
											"end": 1490,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1383,
											"end": 1490,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "97"
										},
										{
											"begin": 1383,
											"end": 1490,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "98"
										},
										{
											"begin": 1383,
											"end": 1490,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 1383,
											"end": 1490,
											"name": "tag",
											"source": 7,
											"value": "97"
										},
										{
											"begin": 1383,
											"end": 1490,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1383,
											"end": 1490,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1383,
											"end": 1490,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1383,
											"end": 1490,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "99"
										},
										{
											"begin": 1383,
											"end": 1490,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1383,
											"end": 1490,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1383,
											"end": 1490,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "38"
										},
										{
											"begin": 1383,
											"end": 1490,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 1383,
											"end": 1490,
											"name": "tag",
											"source": 7,
											"value": "99"
										},
										{
											"begin": 1383,
											"end": 1490,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1383,
											"end": 1490,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1383,
											"end": 1490,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1383,
											"end": 1490,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1383,
											"end": 1490,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1383,
											"end": 1490,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 1383,
											"end": 1490,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1383,
											"end": 1490,
											"name": "RETURN",
											"source": 7
										},
										{
											"begin": 983,
											"end": 1019,
											"name": "tag",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 983,
											"end": 1019,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 983,
											"end": 1019,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 983,
											"end": 1019,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "101"
										},
										{
											"begin": 983,
											"end": 1019,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 983,
											"end": 1019,
											"name": "tag",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 983,
											"end": 1019,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 983,
											"end": 1019,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 983,
											"end": 1019,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 983,
											"end": 1019,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "102"
										},
										{
											"begin": 983,
											"end": 1019,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 983,
											"end": 1019,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 983,
											"end": 1019,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "38"
										},
										{
											"begin": 983,
											"end": 1019,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 983,
											"end": 1019,
											"name": "tag",
											"source": 6,
											"value": "102"
										},
										{
											"begin": 983,
											"end": 1019,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 983,
											"end": 1019,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 983,
											"end": 1019,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 983,
											"end": 1019,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 983,
											"end": 1019,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 983,
											"end": 1019,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 983,
											"end": 1019,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 983,
											"end": 1019,
											"name": "RETURN",
											"source": 6
										},
										{
											"begin": 1234,
											"end": 1326,
											"name": "tag",
											"source": 5,
											"value": "21"
										},
										{
											"begin": 1234,
											"end": 1326,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1234,
											"end": 1326,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "103"
										},
										{
											"begin": 1234,
											"end": 1326,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "104"
										},
										{
											"begin": 1234,
											"end": 1326,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 1234,
											"end": 1326,
											"name": "tag",
											"source": 5,
											"value": "103"
										},
										{
											"begin": 1234,
											"end": 1326,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1234,
											"end": 1326,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1234,
											"end": 1326,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1234,
											"end": 1326,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "105"
										},
										{
											"begin": 1234,
											"end": 1326,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1234,
											"end": 1326,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1234,
											"end": 1326,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "71"
										},
										{
											"begin": 1234,
											"end": 1326,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 1234,
											"end": 1326,
											"name": "tag",
											"source": 5,
											"value": "105"
										},
										{
											"begin": 1234,
											"end": 1326,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1234,
											"end": 1326,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1234,
											"end": 1326,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1234,
											"end": 1326,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1234,
											"end": 1326,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1234,
											"end": 1326,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1234,
											"end": 1326,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1234,
											"end": 1326,
											"name": "RETURN",
											"source": 5
										},
										{
											"begin": 792,
											"end": 835,
											"name": "tag",
											"source": 7,
											"value": "22"
										},
										{
											"begin": 792,
											"end": 835,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 792,
											"end": 835,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "106"
										},
										{
											"begin": 792,
											"end": 835,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 792,
											"end": 835,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 792,
											"end": 835,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 792,
											"end": 835,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 792,
											"end": 835,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 792,
											"end": 835,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 792,
											"end": 835,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 792,
											"end": 835,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "107"
										},
										{
											"begin": 792,
											"end": 835,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 792,
											"end": 835,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 792,
											"end": 835,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "30"
										},
										{
											"begin": 792,
											"end": 835,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 792,
											"end": 835,
											"name": "tag",
											"source": 7,
											"value": "107"
										},
										{
											"begin": 792,
											"end": 835,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 792,
											"end": 835,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "108"
										},
										{
											"begin": 792,
											"end": 835,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 792,
											"end": 835,
											"name": "tag",
											"source": 7,
											"value": "106"
										},
										{
											"begin": 792,
											"end": 835,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 792,
											"end": 835,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 792,
											"end": 835,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 792,
											"end": 835,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "109"
										},
										{
											"begin": 792,
											"end": 835,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 792,
											"end": 835,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 792,
											"end": 835,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 792,
											"end": 835,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 792,
											"end": 835,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "110"
										},
										{
											"begin": 792,
											"end": 835,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 792,
											"end": 835,
											"name": "tag",
											"source": 7,
											"value": "109"
										},
										{
											"begin": 792,
											"end": 835,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 792,
											"end": 835,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 792,
											"end": 835,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 792,
											"end": 835,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 792,
											"end": 835,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 792,
											"end": 835,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 792,
											"end": 835,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 792,
											"end": 835,
											"name": "RETURN",
											"source": 7
										},
										{
											"begin": 1485,
											"end": 1647,
											"name": "tag",
											"source": 5,
											"value": "23"
										},
										{
											"begin": 1485,
											"end": 1647,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1485,
											"end": 1647,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "111"
										},
										{
											"begin": 1485,
											"end": 1647,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 1485,
											"end": 1647,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1485,
											"end": 1647,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 1485,
											"end": 1647,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1485,
											"end": 1647,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1485,
											"end": 1647,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1485,
											"end": 1647,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1485,
											"end": 1647,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "112"
										},
										{
											"begin": 1485,
											"end": 1647,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1485,
											"end": 1647,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1485,
											"end": 1647,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "30"
										},
										{
											"begin": 1485,
											"end": 1647,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 1485,
											"end": 1647,
											"name": "tag",
											"source": 5,
											"value": "112"
										},
										{
											"begin": 1485,
											"end": 1647,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1485,
											"end": 1647,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "113"
										},
										{
											"begin": 1485,
											"end": 1647,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 1485,
											"end": 1647,
											"name": "tag",
											"source": 5,
											"value": "111"
										},
										{
											"begin": 1485,
											"end": 1647,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1485,
											"end": 1647,
											"name": "STOP",
											"source": 5
										},
										{
											"begin": 4832,
											"end": 5003,
											"name": "tag",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 4832,
											"end": 5003,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4832,
											"end": 5003,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "114"
										},
										{
											"begin": 4832,
											"end": 5003,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 4832,
											"end": 5003,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4832,
											"end": 5003,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 4832,
											"end": 5003,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 4832,
											"end": 5003,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4832,
											"end": 5003,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4832,
											"end": 5003,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4832,
											"end": 5003,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "115"
										},
										{
											"begin": 4832,
											"end": 5003,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4832,
											"end": 5003,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4832,
											"end": 5003,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "50"
										},
										{
											"begin": 4832,
											"end": 5003,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 4832,
											"end": 5003,
											"name": "tag",
											"source": 6,
											"value": "115"
										},
										{
											"begin": 4832,
											"end": 5003,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4832,
											"end": 5003,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "116"
										},
										{
											"begin": 4832,
											"end": 5003,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 4832,
											"end": 5003,
											"name": "tag",
											"source": 6,
											"value": "114"
										},
										{
											"begin": 4832,
											"end": 5003,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4832,
											"end": 5003,
											"name": "STOP",
											"source": 6
										},
										{
											"begin": 1893,
											"end": 2096,
											"name": "tag",
											"source": 7,
											"value": "31"
										},
										{
											"begin": 1893,
											"end": 2096,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1960,
											"end": 1967,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1969,
											"end": 1976,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1978,
											"end": 1985,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2002,
											"end": 2008,
											"name": "PUSH",
											"source": 7,
											"value": "33"
										},
										{
											"begin": 2002,
											"end": 2015,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2009,
											"end": 2014,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 2002,
											"end": 2015,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2002,
											"end": 2015,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2002,
											"end": 2015,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2002,
											"end": 2015,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2002,
											"end": 2015,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2002,
											"end": 2015,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2002,
											"end": 2015,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2002,
											"end": 2015,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2002,
											"end": 2015,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2002,
											"end": 2015,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2002,
											"end": 2015,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2002,
											"end": 2015,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2002,
											"end": 2015,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2002,
											"end": 2015,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2002,
											"end": 2015,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 2002,
											"end": 2021,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2002,
											"end": 2021,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2002,
											"end": 2021,
											"name": "PUSH",
											"source": 7,
											"value": "D"
										},
										{
											"begin": 2002,
											"end": 2021,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2002,
											"end": 2021,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 2002,
											"end": 2021,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2002,
											"end": 2021,
											"name": "PUSH",
											"source": 7,
											"value": "100"
										},
										{
											"begin": 2002,
											"end": 2021,
											"name": "EXP",
											"source": 7
										},
										{
											"begin": 2002,
											"end": 2021,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2002,
											"end": 2021,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 2002,
											"end": 2021,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2002,
											"end": 2021,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2023,
											"end": 2029,
											"name": "PUSH",
											"source": 7,
											"value": "33"
										},
										{
											"begin": 2023,
											"end": 2036,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2030,
											"end": 2035,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 2023,
											"end": 2036,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2023,
											"end": 2036,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2023,
											"end": 2036,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2023,
											"end": 2036,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2023,
											"end": 2036,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2023,
											"end": 2036,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2023,
											"end": 2036,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2023,
											"end": 2036,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2023,
											"end": 2036,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2023,
											"end": 2036,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2023,
											"end": 2036,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2023,
											"end": 2036,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2023,
											"end": 2036,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2023,
											"end": 2036,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2023,
											"end": 2036,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 2023,
											"end": 2054,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2023,
											"end": 2054,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2023,
											"end": 2054,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2023,
											"end": 2054,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2023,
											"end": 2054,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 2023,
											"end": 2054,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2023,
											"end": 2054,
											"name": "PUSH",
											"source": 7,
											"value": "100"
										},
										{
											"begin": 2023,
											"end": 2054,
											"name": "EXP",
											"source": 7
										},
										{
											"begin": 2023,
											"end": 2054,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2023,
											"end": 2054,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 2023,
											"end": 2054,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2023,
											"end": 2054,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2056,
											"end": 2062,
											"name": "PUSH",
											"source": 7,
											"value": "33"
										},
										{
											"begin": 2056,
											"end": 2069,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2063,
											"end": 2068,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 2056,
											"end": 2069,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2056,
											"end": 2069,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2056,
											"end": 2069,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2056,
											"end": 2069,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2056,
											"end": 2069,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2056,
											"end": 2069,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2056,
											"end": 2069,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2056,
											"end": 2069,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2056,
											"end": 2069,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2056,
											"end": 2069,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2056,
											"end": 2069,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2056,
											"end": 2069,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2056,
											"end": 2069,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2056,
											"end": 2069,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2056,
											"end": 2069,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 2056,
											"end": 2089,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2056,
											"end": 2089,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2056,
											"end": 2089,
											"name": "PUSH",
											"source": 7,
											"value": "1A"
										},
										{
											"begin": 2056,
											"end": 2089,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2056,
											"end": 2089,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 2056,
											"end": 2089,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2056,
											"end": 2089,
											"name": "PUSH",
											"source": 7,
											"value": "100"
										},
										{
											"begin": 2056,
											"end": 2089,
											"name": "EXP",
											"source": 7
										},
										{
											"begin": 2056,
											"end": 2089,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2056,
											"end": 2089,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 2056,
											"end": 2089,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFF"
										},
										{
											"begin": 2056,
											"end": 2089,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1994,
											"end": 2090,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1994,
											"end": 2090,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1994,
											"end": 2090,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1994,
											"end": 2090,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 1994,
											"end": 2090,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1994,
											"end": 2090,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1994,
											"end": 2090,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1994,
											"end": 2090,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1994,
											"end": 2090,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1994,
											"end": 2090,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1994,
											"end": 2090,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1994,
											"end": 2090,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFF"
										},
										{
											"begin": 1994,
											"end": 2090,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1994,
											"end": 2090,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1994,
											"end": 2090,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1994,
											"end": 2090,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 1994,
											"end": 2090,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1994,
											"end": 2090,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 1994,
											"end": 2090,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1994,
											"end": 2090,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 1994,
											"end": 2090,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1893,
											"end": 2096,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1893,
											"end": 2096,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 1893,
											"end": 2096,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1893,
											"end": 2096,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 1893,
											"end": 2096,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1893,
											"end": 2096,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 5231,
											"end": 5369,
											"name": "tag",
											"source": 6,
											"value": "36"
										},
										{
											"begin": 5231,
											"end": 5369,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5311,
											"end": 5318,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5334,
											"end": 5356,
											"name": "PUSH",
											"source": 6,
											"value": "35"
										},
										{
											"begin": 5334,
											"end": 5363,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5357,
											"end": 5362,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 5334,
											"end": 5363,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5334,
											"end": 5363,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 5334,
											"end": 5363,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5334,
											"end": 5363,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 5334,
											"end": 5363,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5334,
											"end": 5363,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5334,
											"end": 5363,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 5334,
											"end": 5363,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5334,
											"end": 5363,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5334,
											"end": 5363,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5334,
											"end": 5363,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5334,
											"end": 5363,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 5334,
											"end": 5363,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5334,
											"end": 5363,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5334,
											"end": 5363,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 5334,
											"end": 5363,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 5327,
											"end": 5363,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5327,
											"end": 5363,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5231,
											"end": 5369,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5231,
											"end": 5369,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5231,
											"end": 5369,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5231,
											"end": 5369,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 3812,
											"end": 4076,
											"name": "tag",
											"source": 6,
											"value": "42"
										},
										{
											"begin": 3812,
											"end": 4076,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3936,
											"end": 3943,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3974,
											"end": 3975,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3960,
											"end": 3976,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3960,
											"end": 3976,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3960,
											"end": 3962,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3960,
											"end": 3976,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3960,
											"end": 3976,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3960,
											"end": 3976,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 3960,
											"end": 3976,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 3952,
											"end": 3999,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "120"
										},
										{
											"begin": 3952,
											"end": 3999,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3952,
											"end": 3999,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3952,
											"end": 3999,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3952,
											"end": 3999,
											"name": "PUSH",
											"source": 6,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3952,
											"end": 3999,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3952,
											"end": 3999,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3952,
											"end": 3999,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 3952,
											"end": 3999,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3952,
											"end": 3999,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "121"
										},
										{
											"begin": 3952,
											"end": 3999,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3952,
											"end": 3999,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "122"
										},
										{
											"begin": 3952,
											"end": 3999,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 3952,
											"end": 3999,
											"name": "tag",
											"source": 6,
											"value": "121"
										},
										{
											"begin": 3952,
											"end": 3999,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3952,
											"end": 3999,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3952,
											"end": 3999,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3952,
											"end": 3999,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3952,
											"end": 3999,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3952,
											"end": 3999,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 3952,
											"end": 3999,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3952,
											"end": 3999,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 3952,
											"end": 3999,
											"name": "tag",
											"source": 6,
											"value": "120"
										},
										{
											"begin": 3952,
											"end": 3999,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4013,
											"end": 4070,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "123"
										},
										{
											"begin": 4027,
											"end": 4033,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 4027,
											"end": 4033,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 4035,
											"end": 4041,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 4043,
											"end": 4053,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 4055,
											"end": 4065,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 4067,
											"end": 4069,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 4013,
											"end": 4026,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "124"
										},
										{
											"begin": 4013,
											"end": 4070,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 4013,
											"end": 4070,
											"name": "tag",
											"source": 6,
											"value": "123"
										},
										{
											"begin": 4013,
											"end": 4070,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4006,
											"end": 4070,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4006,
											"end": 4070,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3812,
											"end": 4076,
											"name": "SWAP5",
											"source": 6
										},
										{
											"begin": 3812,
											"end": 4076,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 3812,
											"end": 4076,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3812,
											"end": 4076,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3812,
											"end": 4076,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3812,
											"end": 4076,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3812,
											"end": 4076,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 2619,
											"end": 3018,
											"name": "tag",
											"source": 6,
											"value": "47"
										},
										{
											"begin": 2619,
											"end": 3018,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2742,
											"end": 2764,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2767,
											"end": 2835,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "126"
										},
										{
											"begin": 2792,
											"end": 2796,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 2798,
											"end": 2808,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 2810,
											"end": 2821,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 2823,
											"end": 2834,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 2767,
											"end": 2791,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "127"
										},
										{
											"begin": 2767,
											"end": 2835,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 2767,
											"end": 2835,
											"name": "tag",
											"source": 6,
											"value": "126"
										},
										{
											"begin": 2767,
											"end": 2835,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2742,
											"end": 2835,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2742,
											"end": 2835,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2864,
											"end": 2865,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2846,
											"end": 2860,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2846,
											"end": 2865,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 2842,
											"end": 3013,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "128"
										},
										{
											"begin": 2842,
											"end": 3013,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2907,
											"end": 2955,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "129"
										},
										{
											"begin": 2940,
											"end": 2954,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2907,
											"end": 2929,
											"name": "PUSH",
											"source": 6,
											"value": "35"
										},
										{
											"begin": 2907,
											"end": 2935,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2930,
											"end": 2934,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 2907,
											"end": 2935,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2907,
											"end": 2935,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2907,
											"end": 2935,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2907,
											"end": 2935,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2907,
											"end": 2935,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2907,
											"end": 2935,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2907,
											"end": 2935,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2907,
											"end": 2935,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2907,
											"end": 2935,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2907,
											"end": 2935,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2907,
											"end": 2935,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2907,
											"end": 2935,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2907,
											"end": 2935,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2907,
											"end": 2935,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2907,
											"end": 2935,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 2907,
											"end": 2935,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 2907,
											"end": 2939,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "130"
										},
										{
											"begin": 2907,
											"end": 2939,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2907,
											"end": 2955,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2907,
											"end": 2955,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2907,
											"end": 2955,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2907,
											"end": 2955,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2907,
											"end": 2955,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 2907,
											"end": 2955,
											"name": "tag",
											"source": 6,
											"value": "129"
										},
										{
											"begin": 2907,
											"end": 2955,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2876,
											"end": 2898,
											"name": "PUSH",
											"source": 6,
											"value": "35"
										},
										{
											"begin": 2876,
											"end": 2904,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2899,
											"end": 2903,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 2876,
											"end": 2904,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2876,
											"end": 2904,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2876,
											"end": 2904,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2876,
											"end": 2904,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2876,
											"end": 2904,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2876,
											"end": 2904,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2876,
											"end": 2904,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2876,
											"end": 2904,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2876,
											"end": 2904,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2876,
											"end": 2904,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2876,
											"end": 2904,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2876,
											"end": 2904,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2876,
											"end": 2904,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2876,
											"end": 2904,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2876,
											"end": 2904,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 2876,
											"end": 2955,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2876,
											"end": 2955,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2876,
											"end": 2955,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 2876,
											"end": 2955,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2984,
											"end": 2988,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 2969,
											"end": 3005,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2969,
											"end": 3005,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2969,
											"end": 3005,
											"name": "PUSH",
											"source": 6,
											"value": "2468F9268C60AD90E2D49EDB0032C8A001E733AE888B3AB8E982EDF535BE1A76"
										},
										{
											"begin": 2990,
											"end": 3004,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2969,
											"end": 3005,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2969,
											"end": 3005,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2969,
											"end": 3005,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "131"
										},
										{
											"begin": 2969,
											"end": 3005,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2969,
											"end": 3005,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2969,
											"end": 3005,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "38"
										},
										{
											"begin": 2969,
											"end": 3005,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 2969,
											"end": 3005,
											"name": "tag",
											"source": 6,
											"value": "131"
										},
										{
											"begin": 2969,
											"end": 3005,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2969,
											"end": 3005,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2969,
											"end": 3005,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2969,
											"end": 3005,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2969,
											"end": 3005,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2969,
											"end": 3005,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 2969,
											"end": 3005,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2969,
											"end": 3005,
											"name": "LOG2",
											"source": 6
										},
										{
											"begin": 2842,
											"end": 3013,
											"name": "tag",
											"source": 6,
											"value": "128"
										},
										{
											"begin": 2842,
											"end": 3013,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2619,
											"end": 3018,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2619,
											"end": 3018,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2619,
											"end": 3018,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2619,
											"end": 3018,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2619,
											"end": 3018,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 1701,
											"end": 1840,
											"name": "tag",
											"source": 7,
											"value": "51"
										},
										{
											"begin": 1701,
											"end": 1840,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1786,
											"end": 1793,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1809,
											"end": 1815,
											"name": "PUSH",
											"source": 7,
											"value": "33"
										},
										{
											"begin": 1809,
											"end": 1822,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1816,
											"end": 1821,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 1809,
											"end": 1822,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1809,
											"end": 1822,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1809,
											"end": 1822,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1809,
											"end": 1822,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1809,
											"end": 1822,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1809,
											"end": 1822,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1809,
											"end": 1822,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1809,
											"end": 1822,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1809,
											"end": 1822,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1809,
											"end": 1822,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1809,
											"end": 1822,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1809,
											"end": 1822,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1809,
											"end": 1822,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1809,
											"end": 1822,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1809,
											"end": 1822,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 1809,
											"end": 1828,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 1809,
											"end": 1828,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1809,
											"end": 1834,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1829,
											"end": 1833,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 1809,
											"end": 1834,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1809,
											"end": 1834,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1809,
											"end": 1834,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1809,
											"end": 1834,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1809,
											"end": 1834,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1809,
											"end": 1834,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1809,
											"end": 1834,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1809,
											"end": 1834,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1809,
											"end": 1834,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1809,
											"end": 1834,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1809,
											"end": 1834,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1809,
											"end": 1834,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1809,
											"end": 1834,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1809,
											"end": 1834,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1809,
											"end": 1834,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 1809,
											"end": 1834,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 1802,
											"end": 1834,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1802,
											"end": 1834,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1701,
											"end": 1840,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 1701,
											"end": 1840,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1701,
											"end": 1840,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1701,
											"end": 1840,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1701,
											"end": 1840,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 1141,
											"end": 1330,
											"name": "tag",
											"source": 7,
											"value": "56"
										},
										{
											"begin": 1141,
											"end": 1330,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 942,
											"end": 958,
											"name": "PUSHIMMUTABLE",
											"source": 7,
											"value": "1291"
										},
										{
											"begin": 928,
											"end": 958,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 928,
											"end": 958,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 928,
											"end": 938,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 928,
											"end": 958,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 928,
											"end": 958,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 928,
											"end": 958,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 920,
											"end": 984,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "134"
										},
										{
											"begin": 920,
											"end": 984,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 920,
											"end": 984,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 920,
											"end": 984,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 920,
											"end": 984,
											"name": "PUSH",
											"source": 7,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 920,
											"end": 984,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 920,
											"end": 984,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 920,
											"end": 984,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 920,
											"end": 984,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 920,
											"end": 984,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "135"
										},
										{
											"begin": 920,
											"end": 984,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 920,
											"end": 984,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "136"
										},
										{
											"begin": 920,
											"end": 984,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 920,
											"end": 984,
											"name": "tag",
											"source": 7,
											"value": "135"
										},
										{
											"begin": 920,
											"end": 984,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 920,
											"end": 984,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 920,
											"end": 984,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 920,
											"end": 984,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 920,
											"end": 984,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 920,
											"end": 984,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 920,
											"end": 984,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 920,
											"end": 984,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 920,
											"end": 984,
											"name": "tag",
											"source": 7,
											"value": "134"
										},
										{
											"begin": 920,
											"end": 984,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1258,
											"end": 1273,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1239,
											"end": 1255,
											"name": "PUSH",
											"source": 7,
											"value": "34"
										},
										{
											"begin": 1239,
											"end": 1273,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1239,
											"end": 1273,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1239,
											"end": 1273,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 1239,
											"end": 1273,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1285,
											"end": 1324,
											"name": "PUSH",
											"source": 7,
											"value": "1CC1849A6602C3E91F2088CADEA4381CC5717F2F28584197060ED2EBB434C16F"
										},
										{
											"begin": 1308,
											"end": 1323,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1285,
											"end": 1324,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1285,
											"end": 1324,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1285,
											"end": 1324,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "138"
										},
										{
											"begin": 1285,
											"end": 1324,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1285,
											"end": 1324,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1285,
											"end": 1324,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "38"
										},
										{
											"begin": 1285,
											"end": 1324,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 1285,
											"end": 1324,
											"name": "tag",
											"source": 7,
											"value": "138"
										},
										{
											"begin": 1285,
											"end": 1324,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1285,
											"end": 1324,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1285,
											"end": 1324,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1285,
											"end": 1324,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1285,
											"end": 1324,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1285,
											"end": 1324,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 1285,
											"end": 1324,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1285,
											"end": 1324,
											"name": "LOG1",
											"source": 7
										},
										{
											"begin": 1141,
											"end": 1330,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1141,
											"end": 1330,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 4568,
											"end": 4778,
											"name": "tag",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 4568,
											"end": 4778,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4681,
											"end": 4688,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4707,
											"end": 4772,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "140"
										},
										{
											"begin": 4721,
											"end": 4727,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 4721,
											"end": 4727,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 4729,
											"end": 4735,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 4737,
											"end": 4747,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 4749,
											"end": 4759,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 4761,
											"end": 4771,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 4707,
											"end": 4720,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "124"
										},
										{
											"begin": 4707,
											"end": 4772,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 4707,
											"end": 4772,
											"name": "tag",
											"source": 6,
											"value": "140"
										},
										{
											"begin": 4707,
											"end": 4772,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4700,
											"end": 4772,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4700,
											"end": 4772,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4568,
											"end": 4778,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 4568,
											"end": 4778,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 4568,
											"end": 4778,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4568,
											"end": 4778,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4568,
											"end": 4778,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4568,
											"end": 4778,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 4130,
											"end": 4514,
											"name": "tag",
											"source": 6,
											"value": "65"
										},
										{
											"begin": 4130,
											"end": 4514,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4322,
											"end": 4329,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4295,
											"end": 4305,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 4307,
											"end": 4311,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1517,
											"end": 1524,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1488,
											"end": 1524,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1488,
											"end": 1524,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1488,
											"end": 1507,
											"name": "PUSH",
											"source": 6,
											"value": "36"
										},
										{
											"begin": 1488,
											"end": 1513,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1508,
											"end": 1512,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1488,
											"end": 1513,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1488,
											"end": 1513,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1488,
											"end": 1513,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1488,
											"end": 1513,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1488,
											"end": 1513,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1488,
											"end": 1513,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1488,
											"end": 1513,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1488,
											"end": 1513,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1488,
											"end": 1513,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1488,
											"end": 1513,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1488,
											"end": 1513,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1488,
											"end": 1513,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1488,
											"end": 1513,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1488,
											"end": 1513,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1488,
											"end": 1513,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 1488,
											"end": 1513,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1488,
											"end": 1513,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1488,
											"end": 1513,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 1488,
											"end": 1513,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1488,
											"end": 1513,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 1488,
											"end": 1513,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 1488,
											"end": 1513,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1488,
											"end": 1513,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 1488,
											"end": 1513,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1488,
											"end": 1513,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1488,
											"end": 1524,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1488,
											"end": 1524,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1488,
											"end": 1524,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 1480,
											"end": 1549,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "142"
										},
										{
											"begin": 1480,
											"end": 1549,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1480,
											"end": 1549,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1480,
											"end": 1549,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1480,
											"end": 1549,
											"name": "PUSH",
											"source": 6,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1480,
											"end": 1549,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1480,
											"end": 1549,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1480,
											"end": 1549,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 1480,
											"end": 1549,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1480,
											"end": 1549,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "143"
										},
										{
											"begin": 1480,
											"end": 1549,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1480,
											"end": 1549,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "144"
										},
										{
											"begin": 1480,
											"end": 1549,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 1480,
											"end": 1549,
											"name": "tag",
											"source": 6,
											"value": "143"
										},
										{
											"begin": 1480,
											"end": 1549,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1480,
											"end": 1549,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1480,
											"end": 1549,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1480,
											"end": 1549,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1480,
											"end": 1549,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1480,
											"end": 1549,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1480,
											"end": 1549,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1480,
											"end": 1549,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 1480,
											"end": 1549,
											"name": "tag",
											"source": 6,
											"value": "142"
										},
										{
											"begin": 1480,
											"end": 1549,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4362,
											"end": 4363,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4346,
											"end": 4364,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4346,
											"end": 4364,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 4346,
											"end": 4350,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 4346,
											"end": 4364,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4346,
											"end": 4364,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 4346,
											"end": 4364,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 4346,
											"end": 4364,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 4338,
											"end": 4389,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "146"
										},
										{
											"begin": 4338,
											"end": 4389,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 4338,
											"end": 4389,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 4338,
											"end": 4389,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 4338,
											"end": 4389,
											"name": "PUSH",
											"source": 6,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4338,
											"end": 4389,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4338,
											"end": 4389,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4338,
											"end": 4389,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 4338,
											"end": 4389,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4338,
											"end": 4389,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "147"
										},
										{
											"begin": 4338,
											"end": 4389,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4338,
											"end": 4389,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "148"
										},
										{
											"begin": 4338,
											"end": 4389,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 4338,
											"end": 4389,
											"name": "tag",
											"source": 6,
											"value": "147"
										},
										{
											"begin": 4338,
											"end": 4389,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4338,
											"end": 4389,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 4338,
											"end": 4389,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 4338,
											"end": 4389,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4338,
											"end": 4389,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4338,
											"end": 4389,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 4338,
											"end": 4389,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4338,
											"end": 4389,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 4338,
											"end": 4389,
											"name": "tag",
											"source": 6,
											"value": "146"
										},
										{
											"begin": 4338,
											"end": 4389,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4418,
											"end": 4419,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4404,
											"end": 4420,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4404,
											"end": 4420,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 4404,
											"end": 4406,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 4404,
											"end": 4420,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4404,
											"end": 4420,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 4404,
											"end": 4420,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 4404,
											"end": 4420,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 4396,
											"end": 4443,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "149"
										},
										{
											"begin": 4396,
											"end": 4443,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 4396,
											"end": 4443,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 4396,
											"end": 4443,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 4396,
											"end": 4443,
											"name": "PUSH",
											"source": 6,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4396,
											"end": 4443,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4396,
											"end": 4443,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4396,
											"end": 4443,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 4396,
											"end": 4443,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4396,
											"end": 4443,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "150"
										},
										{
											"begin": 4396,
											"end": 4443,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4396,
											"end": 4443,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "122"
										},
										{
											"begin": 4396,
											"end": 4443,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 4396,
											"end": 4443,
											"name": "tag",
											"source": 6,
											"value": "150"
										},
										{
											"begin": 4396,
											"end": 4443,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4396,
											"end": 4443,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 4396,
											"end": 4443,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 4396,
											"end": 4443,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4396,
											"end": 4443,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4396,
											"end": 4443,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 4396,
											"end": 4443,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4396,
											"end": 4443,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 4396,
											"end": 4443,
											"name": "tag",
											"source": 6,
											"value": "149"
										},
										{
											"begin": 4396,
											"end": 4443,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4457,
											"end": 4508,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "151"
										},
										{
											"begin": 4471,
											"end": 4477,
											"name": "DUP9",
											"source": 6
										},
										{
											"begin": 4471,
											"end": 4477,
											"name": "DUP9",
											"source": 6
										},
										{
											"begin": 4479,
											"end": 4485,
											"name": "DUP9",
											"source": 6
										},
										{
											"begin": 4487,
											"end": 4497,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 4499,
											"end": 4503,
											"name": "DUP10",
											"source": 6
										},
										{
											"begin": 4505,
											"end": 4507,
											"name": "DUP10",
											"source": 6
										},
										{
											"begin": 4457,
											"end": 4470,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "124"
										},
										{
											"begin": 4457,
											"end": 4508,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 4457,
											"end": 4508,
											"name": "tag",
											"source": 6,
											"value": "151"
										},
										{
											"begin": 4457,
											"end": 4508,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4450,
											"end": 4508,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 4450,
											"end": 4508,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4130,
											"end": 4514,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4130,
											"end": 4514,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4130,
											"end": 4514,
											"name": "SWAP6",
											"source": 6
										},
										{
											"begin": 4130,
											"end": 4514,
											"name": "SWAP5",
											"source": 6
										},
										{
											"begin": 4130,
											"end": 4514,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4130,
											"end": 4514,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4130,
											"end": 4514,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4130,
											"end": 4514,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4130,
											"end": 4514,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4130,
											"end": 4514,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 5057,
											"end": 5177,
											"name": "tag",
											"source": 6,
											"value": "69"
										},
										{
											"begin": 5057,
											"end": 5177,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5123,
											"end": 5130,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5146,
											"end": 5165,
											"name": "PUSH",
											"source": 6,
											"value": "36"
										},
										{
											"begin": 5146,
											"end": 5171,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5166,
											"end": 5170,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 5146,
											"end": 5171,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5146,
											"end": 5171,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 5146,
											"end": 5171,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5146,
											"end": 5171,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 5146,
											"end": 5171,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5146,
											"end": 5171,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5146,
											"end": 5171,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 5146,
											"end": 5171,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5146,
											"end": 5171,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5146,
											"end": 5171,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5146,
											"end": 5171,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5146,
											"end": 5171,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 5146,
											"end": 5171,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5146,
											"end": 5171,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5146,
											"end": 5171,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 5146,
											"end": 5171,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5146,
											"end": 5171,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5146,
											"end": 5171,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 5146,
											"end": 5171,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5146,
											"end": 5171,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 5146,
											"end": 5171,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 5146,
											"end": 5171,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5146,
											"end": 5171,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 5146,
											"end": 5171,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5146,
											"end": 5171,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 5139,
											"end": 5171,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5139,
											"end": 5171,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5057,
											"end": 5177,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5057,
											"end": 5177,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5057,
											"end": 5177,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5057,
											"end": 5177,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 1773,
											"end": 2565,
											"name": "tag",
											"source": 6,
											"value": "75"
										},
										{
											"begin": 1773,
											"end": 2565,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 942,
											"end": 958,
											"name": "PUSHIMMUTABLE",
											"source": 7,
											"value": "1291"
										},
										{
											"begin": 928,
											"end": 958,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 928,
											"end": 958,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 928,
											"end": 938,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 928,
											"end": 958,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 928,
											"end": 958,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 928,
											"end": 958,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 920,
											"end": 984,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "154"
										},
										{
											"begin": 920,
											"end": 984,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 920,
											"end": 984,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 920,
											"end": 984,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 920,
											"end": 984,
											"name": "PUSH",
											"source": 7,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 920,
											"end": 984,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 920,
											"end": 984,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 920,
											"end": 984,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 920,
											"end": 984,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 920,
											"end": 984,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "155"
										},
										{
											"begin": 920,
											"end": 984,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 920,
											"end": 984,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "136"
										},
										{
											"begin": 920,
											"end": 984,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 920,
											"end": 984,
											"name": "tag",
											"source": 7,
											"value": "155"
										},
										{
											"begin": 920,
											"end": 984,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 920,
											"end": 984,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 920,
											"end": 984,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 920,
											"end": 984,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 920,
											"end": 984,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 920,
											"end": 984,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 920,
											"end": 984,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 920,
											"end": 984,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 920,
											"end": 984,
											"name": "tag",
											"source": 7,
											"value": "154"
										},
										{
											"begin": 920,
											"end": 984,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1952,
											"end": 1970,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1952,
											"end": 1970,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1952,
											"end": 1977,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1952,
											"end": 1977,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1935,
											"end": 1941,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 1935,
											"end": 1941,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 1935,
											"end": 1948,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1935,
											"end": 1948,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1935,
											"end": 1977,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 1927,
											"end": 2003,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "157"
										},
										{
											"begin": 1927,
											"end": 2003,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1927,
											"end": 2003,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1927,
											"end": 2003,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1927,
											"end": 2003,
											"name": "PUSH",
											"source": 6,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1927,
											"end": 2003,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1927,
											"end": 2003,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1927,
											"end": 2003,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 1927,
											"end": 2003,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1927,
											"end": 2003,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "158"
										},
										{
											"begin": 1927,
											"end": 2003,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1927,
											"end": 2003,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "159"
										},
										{
											"begin": 1927,
											"end": 2003,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 1927,
											"end": 2003,
											"name": "tag",
											"source": 6,
											"value": "158"
										},
										{
											"begin": 1927,
											"end": 2003,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1927,
											"end": 2003,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1927,
											"end": 2003,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1927,
											"end": 2003,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1927,
											"end": 2003,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1927,
											"end": 2003,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1927,
											"end": 2003,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1927,
											"end": 2003,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 1927,
											"end": 2003,
											"name": "tag",
											"source": 6,
											"value": "157"
										},
										{
											"begin": 1927,
											"end": 2003,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2012,
											"end": 2068,
											"name": "PUSH",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 2119,
											"end": 2125,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 2119,
											"end": 2125,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 2119,
											"end": 2132,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2119,
											"end": 2132,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2078,
											"end": 2133,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2078,
											"end": 2133,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2078,
											"end": 2133,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 2078,
											"end": 2133,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2078,
											"end": 2133,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2078,
											"end": 2133,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "160"
										},
										{
											"begin": 2078,
											"end": 2133,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2078,
											"end": 2133,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2078,
											"end": 2133,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2078,
											"end": 2133,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 2078,
											"end": 2133,
											"name": "tag",
											"source": 6,
											"value": "160"
										},
										{
											"begin": 2078,
											"end": 2133,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2078,
											"end": 2133,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2078,
											"end": 2133,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2078,
											"end": 2133,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2078,
											"end": 2133,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2078,
											"end": 2133,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2078,
											"end": 2133,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2078,
											"end": 2133,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2078,
											"end": 2133,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2078,
											"end": 2133,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2078,
											"end": 2133,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 2078,
											"end": 2133,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2078,
											"end": 2133,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2078,
											"end": 2133,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2078,
											"end": 2133,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2078,
											"end": 2133,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2078,
											"end": 2133,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2078,
											"end": 2133,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2078,
											"end": 2133,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2078,
											"end": 2133,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "161"
										},
										{
											"begin": 2078,
											"end": 2133,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2078,
											"end": 2133,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2078,
											"end": 2133,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2078,
											"end": 2133,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2078,
											"end": 2133,
											"name": "tag",
											"source": 6,
											"value": "162"
										},
										{
											"begin": 2078,
											"end": 2133,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2078,
											"end": 2133,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "163"
										},
										{
											"begin": 2078,
											"end": 2133,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "164"
										},
										{
											"begin": 2078,
											"end": 2133,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 2078,
											"end": 2133,
											"name": "tag",
											"source": 6,
											"value": "163"
										},
										{
											"begin": 2078,
											"end": 2133,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2078,
											"end": 2133,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2078,
											"end": 2133,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2078,
											"end": 2133,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2078,
											"end": 2133,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2078,
											"end": 2133,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2078,
											"end": 2133,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 2078,
											"end": 2133,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2078,
											"end": 2133,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 2078,
											"end": 2133,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2078,
											"end": 2133,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2078,
											"end": 2133,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "162"
										},
										{
											"begin": 2078,
											"end": 2133,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2078,
											"end": 2133,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2078,
											"end": 2133,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2078,
											"end": 2133,
											"name": "tag",
											"source": 6,
											"value": "161"
										},
										{
											"begin": 2078,
											"end": 2133,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2078,
											"end": 2133,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2012,
											"end": 2133,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2012,
											"end": 2133,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2147,
											"end": 2156,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2142,
											"end": 2523,
											"name": "tag",
											"source": 6,
											"value": "165"
										},
										{
											"begin": 2142,
											"end": 2523,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2166,
											"end": 2172,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 2166,
											"end": 2172,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 2166,
											"end": 2179,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2166,
											"end": 2179,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2162,
											"end": 2163,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2162,
											"end": 2179,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 2142,
											"end": 2523,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2142,
											"end": 2523,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "166"
										},
										{
											"begin": 2142,
											"end": 2523,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2237,
											"end": 2255,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 2237,
											"end": 2255,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 2256,
											"end": 2257,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2237,
											"end": 2258,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2237,
											"end": 2258,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2237,
											"end": 2258,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 2237,
											"end": 2258,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "168"
										},
										{
											"begin": 2237,
											"end": 2258,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2237,
											"end": 2258,
											"name": "INVALID",
											"source": 6
										},
										{
											"begin": 2237,
											"end": 2258,
											"name": "tag",
											"source": 6,
											"value": "168"
										},
										{
											"begin": 2237,
											"end": 2258,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2237,
											"end": 2258,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2237,
											"end": 2258,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2237,
											"end": 2258,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2237,
											"end": 2258,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 2237,
											"end": 2258,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2237,
											"end": 2258,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 2211,
											"end": 2229,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 2211,
											"end": 2229,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 2230,
											"end": 2231,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 2211,
											"end": 2232,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2211,
											"end": 2232,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2211,
											"end": 2232,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 2211,
											"end": 2232,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "169"
										},
										{
											"begin": 2211,
											"end": 2232,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2211,
											"end": 2232,
											"name": "INVALID",
											"source": 6
										},
										{
											"begin": 2211,
											"end": 2232,
											"name": "tag",
											"source": 6,
											"value": "169"
										},
										{
											"begin": 2211,
											"end": 2232,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2211,
											"end": 2232,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2211,
											"end": 2232,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2211,
											"end": 2232,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2211,
											"end": 2232,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 2211,
											"end": 2232,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2211,
											"end": 2232,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 2203,
											"end": 2258,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2203,
											"end": 2258,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2203,
											"end": 2258,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 2195,
											"end": 2299,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "170"
										},
										{
											"begin": 2195,
											"end": 2299,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2195,
											"end": 2299,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2195,
											"end": 2299,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2195,
											"end": 2299,
											"name": "PUSH",
											"source": 6,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2195,
											"end": 2299,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2195,
											"end": 2299,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2195,
											"end": 2299,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 2195,
											"end": 2299,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2195,
											"end": 2299,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "171"
										},
										{
											"begin": 2195,
											"end": 2299,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2195,
											"end": 2299,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "172"
										},
										{
											"begin": 2195,
											"end": 2299,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 2195,
											"end": 2299,
											"name": "tag",
											"source": 6,
											"value": "171"
										},
										{
											"begin": 2195,
											"end": 2299,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2195,
											"end": 2299,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2195,
											"end": 2299,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2195,
											"end": 2299,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2195,
											"end": 2299,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2195,
											"end": 2299,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 2195,
											"end": 2299,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2195,
											"end": 2299,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 2195,
											"end": 2299,
											"name": "tag",
											"source": 6,
											"value": "170"
										},
										{
											"begin": 2195,
											"end": 2299,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2342,
											"end": 2348,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 2342,
											"end": 2348,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 2349,
											"end": 2350,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2342,
											"end": 2351,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2342,
											"end": 2351,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2342,
											"end": 2351,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 2342,
											"end": 2351,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "173"
										},
										{
											"begin": 2342,
											"end": 2351,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2342,
											"end": 2351,
											"name": "INVALID",
											"source": 6
										},
										{
											"begin": 2342,
											"end": 2351,
											"name": "tag",
											"source": 6,
											"value": "173"
										},
										{
											"begin": 2342,
											"end": 2351,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2342,
											"end": 2351,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2342,
											"end": 2351,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2342,
											"end": 2351,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2342,
											"end": 2351,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 2342,
											"end": 2351,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2342,
											"end": 2351,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2342,
											"end": 2351,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2342,
											"end": 2351,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2342,
											"end": 2351,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2342,
											"end": 2351,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "174"
										},
										{
											"begin": 2342,
											"end": 2351,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2342,
											"end": 2351,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2342,
											"end": 2351,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "30"
										},
										{
											"begin": 2342,
											"end": 2351,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 2342,
											"end": 2351,
											"name": "tag",
											"source": 6,
											"value": "174"
										},
										{
											"begin": 2342,
											"end": 2351,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2308,
											"end": 2320,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2321,
											"end": 2322,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2308,
											"end": 2323,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2308,
											"end": 2323,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2308,
											"end": 2323,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2308,
											"end": 2323,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 2308,
											"end": 2323,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "175"
										},
										{
											"begin": 2308,
											"end": 2323,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2308,
											"end": 2323,
											"name": "INVALID",
											"source": 6
										},
										{
											"begin": 2308,
											"end": 2323,
											"name": "tag",
											"source": 6,
											"value": "175"
										},
										{
											"begin": 2308,
											"end": 2323,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2308,
											"end": 2323,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2308,
											"end": 2323,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 2308,
											"end": 2323,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2308,
											"end": 2323,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2308,
											"end": 2323,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2308,
											"end": 2323,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2308,
											"end": 2339,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2308,
											"end": 2339,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2308,
											"end": 2351,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2308,
											"end": 2351,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2308,
											"end": 2351,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2308,
											"end": 2351,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2308,
											"end": 2351,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2308,
											"end": 2351,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2308,
											"end": 2351,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2308,
											"end": 2351,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2308,
											"end": 2351,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2308,
											"end": 2351,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2308,
											"end": 2351,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2404,
											"end": 2422,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 2404,
											"end": 2422,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 2423,
											"end": 2424,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2404,
											"end": 2425,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2404,
											"end": 2425,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2404,
											"end": 2425,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 2404,
											"end": 2425,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "176"
										},
										{
											"begin": 2404,
											"end": 2425,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2404,
											"end": 2425,
											"name": "INVALID",
											"source": 6
										},
										{
											"begin": 2404,
											"end": 2425,
											"name": "tag",
											"source": 6,
											"value": "176"
										},
										{
											"begin": 2404,
											"end": 2425,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2404,
											"end": 2425,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2404,
											"end": 2425,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2404,
											"end": 2425,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2404,
											"end": 2425,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 2404,
											"end": 2425,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2404,
											"end": 2425,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 2360,
											"end": 2372,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2373,
											"end": 2374,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2360,
											"end": 2375,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2360,
											"end": 2375,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2360,
											"end": 2375,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2360,
											"end": 2375,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 2360,
											"end": 2375,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "177"
										},
										{
											"begin": 2360,
											"end": 2375,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2360,
											"end": 2375,
											"name": "INVALID",
											"source": 6
										},
										{
											"begin": 2360,
											"end": 2375,
											"name": "tag",
											"source": 6,
											"value": "177"
										},
										{
											"begin": 2360,
											"end": 2375,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2360,
											"end": 2375,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2360,
											"end": 2375,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 2360,
											"end": 2375,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2360,
											"end": 2375,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2360,
											"end": 2375,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2360,
											"end": 2375,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2360,
											"end": 2393,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2360,
											"end": 2393,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2360,
											"end": 2426,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2360,
											"end": 2426,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2360,
											"end": 2426,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2360,
											"end": 2426,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2360,
											"end": 2426,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2360,
											"end": 2426,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2360,
											"end": 2426,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2360,
											"end": 2426,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2360,
											"end": 2426,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2360,
											"end": 2426,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2360,
											"end": 2426,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2485,
											"end": 2491,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 2485,
											"end": 2491,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 2492,
											"end": 2493,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2485,
											"end": 2494,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2485,
											"end": 2494,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2485,
											"end": 2494,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 2485,
											"end": 2494,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "178"
										},
										{
											"begin": 2485,
											"end": 2494,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2485,
											"end": 2494,
											"name": "INVALID",
											"source": 6
										},
										{
											"begin": 2485,
											"end": 2494,
											"name": "tag",
											"source": 6,
											"value": "178"
										},
										{
											"begin": 2485,
											"end": 2494,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2485,
											"end": 2494,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2485,
											"end": 2494,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2485,
											"end": 2494,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2485,
											"end": 2494,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 2485,
											"end": 2494,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2485,
											"end": 2494,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2485,
											"end": 2494,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2485,
											"end": 2494,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2485,
											"end": 2494,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2485,
											"end": 2494,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "179"
										},
										{
											"begin": 2485,
											"end": 2494,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2485,
											"end": 2494,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2485,
											"end": 2494,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "30"
										},
										{
											"begin": 2485,
											"end": 2494,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 2485,
											"end": 2494,
											"name": "tag",
											"source": 6,
											"value": "179"
										},
										{
											"begin": 2485,
											"end": 2494,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2465,
											"end": 2513,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2465,
											"end": 2513,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2465,
											"end": 2513,
											"name": "PUSH",
											"source": 6,
											"value": "B1BF962D"
										},
										{
											"begin": 2465,
											"end": 2515,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2465,
											"end": 2515,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2465,
											"end": 2515,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2465,
											"end": 2515,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2465,
											"end": 2515,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2465,
											"end": 2515,
											"name": "PUSH",
											"source": 6,
											"value": "E0"
										},
										{
											"begin": 2465,
											"end": 2515,
											"name": "SHL",
											"source": 6
										},
										{
											"begin": 2465,
											"end": 2515,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2465,
											"end": 2515,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2465,
											"end": 2515,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 2465,
											"end": 2515,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2465,
											"end": 2515,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2465,
											"end": 2515,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2465,
											"end": 2515,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2465,
											"end": 2515,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2465,
											"end": 2515,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 2465,
											"end": 2515,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 2465,
											"end": 2515,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2465,
											"end": 2515,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 2465,
											"end": 2515,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2465,
											"end": 2515,
											"name": "EXTCODESIZE",
											"source": 6
										},
										{
											"begin": 2465,
											"end": 2515,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2465,
											"end": 2515,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2465,
											"end": 2515,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2465,
											"end": 2515,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "180"
										},
										{
											"begin": 2465,
											"end": 2515,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2465,
											"end": 2515,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2465,
											"end": 2515,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2465,
											"end": 2515,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 2465,
											"end": 2515,
											"name": "tag",
											"source": 6,
											"value": "180"
										},
										{
											"begin": 2465,
											"end": 2515,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2465,
											"end": 2515,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2465,
											"end": 2515,
											"name": "GAS",
											"source": 6
										},
										{
											"begin": 2465,
											"end": 2515,
											"name": "STATICCALL",
											"source": 6
										},
										{
											"begin": 2465,
											"end": 2515,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2465,
											"end": 2515,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2465,
											"end": 2515,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2465,
											"end": 2515,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "182"
										},
										{
											"begin": 2465,
											"end": 2515,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2465,
											"end": 2515,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 2465,
											"end": 2515,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2465,
											"end": 2515,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2465,
											"end": 2515,
											"name": "RETURNDATACOPY",
											"source": 6
										},
										{
											"begin": 2465,
											"end": 2515,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 2465,
											"end": 2515,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2465,
											"end": 2515,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 2465,
											"end": 2515,
											"name": "tag",
											"source": 6,
											"value": "182"
										},
										{
											"begin": 2465,
											"end": 2515,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2465,
											"end": 2515,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2465,
											"end": 2515,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2465,
											"end": 2515,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2465,
											"end": 2515,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2465,
											"end": 2515,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2465,
											"end": 2515,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2465,
											"end": 2515,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 2465,
											"end": 2515,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 2465,
											"end": 2515,
											"name": "NOT",
											"source": 6
										},
										{
											"begin": 2465,
											"end": 2515,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 2465,
											"end": 2515,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2465,
											"end": 2515,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2465,
											"end": 2515,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2465,
											"end": 2515,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2465,
											"end": 2515,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2465,
											"end": 2515,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2465,
											"end": 2515,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2465,
											"end": 2515,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2465,
											"end": 2515,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2465,
											"end": 2515,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2465,
											"end": 2515,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2465,
											"end": 2515,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2465,
											"end": 2515,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "183"
										},
										{
											"begin": 2465,
											"end": 2515,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2465,
											"end": 2515,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2465,
											"end": 2515,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "184"
										},
										{
											"begin": 2465,
											"end": 2515,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 2465,
											"end": 2515,
											"name": "tag",
											"source": 6,
											"value": "183"
										},
										{
											"begin": 2465,
											"end": 2515,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2448,
											"end": 2449,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2435,
											"end": 2450,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2435,
											"end": 2450,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2435,
											"end": 2450,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2435,
											"end": 2450,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 2435,
											"end": 2450,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "185"
										},
										{
											"begin": 2435,
											"end": 2450,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2435,
											"end": 2450,
											"name": "INVALID",
											"source": 6
										},
										{
											"begin": 2435,
											"end": 2450,
											"name": "tag",
											"source": 6,
											"value": "185"
										},
										{
											"begin": 2435,
											"end": 2450,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2435,
											"end": 2450,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2435,
											"end": 2450,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 2435,
											"end": 2450,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2435,
											"end": 2450,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2435,
											"end": 2450,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2435,
											"end": 2450,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2435,
											"end": 2462,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2435,
											"end": 2462,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2435,
											"end": 2515,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2435,
											"end": 2515,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2435,
											"end": 2515,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2435,
											"end": 2515,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2435,
											"end": 2515,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2181,
											"end": 2184,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2181,
											"end": 2184,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2181,
											"end": 2184,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 2181,
											"end": 2184,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2181,
											"end": 2184,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2181,
											"end": 2184,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2181,
											"end": 2184,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2142,
											"end": 2523,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "165"
										},
										{
											"begin": 2142,
											"end": 2523,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2142,
											"end": 2523,
											"name": "tag",
											"source": 6,
											"value": "166"
										},
										{
											"begin": 2142,
											"end": 2523,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2142,
											"end": 2523,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2529,
											"end": 2559,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "186"
										},
										{
											"begin": 2546,
											"end": 2558,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2529,
											"end": 2545,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "187"
										},
										{
											"begin": 2529,
											"end": 2559,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 2529,
											"end": 2559,
											"name": "tag",
											"source": 6,
											"value": "186"
										},
										{
											"begin": 2529,
											"end": 2559,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 991,
											"end": 992,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1773,
											"end": 2565,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1773,
											"end": 2565,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1773,
											"end": 2565,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1773,
											"end": 2565,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1773,
											"end": 2565,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 3072,
											"end": 3758,
											"name": "tag",
											"source": 6,
											"value": "79"
										},
										{
											"begin": 3072,
											"end": 3758,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3192,
											"end": 3199,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3211,
											"end": 3235,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3238,
											"end": 3260,
											"name": "PUSH",
											"source": 6,
											"value": "35"
										},
										{
											"begin": 3238,
											"end": 3266,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3261,
											"end": 3265,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 3238,
											"end": 3266,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3238,
											"end": 3266,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3238,
											"end": 3266,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3238,
											"end": 3266,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3238,
											"end": 3266,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3238,
											"end": 3266,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3238,
											"end": 3266,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3238,
											"end": 3266,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3238,
											"end": 3266,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3238,
											"end": 3266,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3238,
											"end": 3266,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3238,
											"end": 3266,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3238,
											"end": 3266,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3238,
											"end": 3266,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3238,
											"end": 3266,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 3238,
											"end": 3266,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 3211,
											"end": 3266,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3211,
											"end": 3266,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3275,
											"end": 3326,
											"name": "PUSH",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 3375,
											"end": 3381,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 3375,
											"end": 3381,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 3375,
											"end": 3388,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3375,
											"end": 3388,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3336,
											"end": 3389,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3336,
											"end": 3389,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3336,
											"end": 3389,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 3336,
											"end": 3389,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3336,
											"end": 3389,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 3336,
											"end": 3389,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "189"
										},
										{
											"begin": 3336,
											"end": 3389,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3336,
											"end": 3389,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3336,
											"end": 3389,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3336,
											"end": 3389,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 3336,
											"end": 3389,
											"name": "tag",
											"source": 6,
											"value": "189"
										},
										{
											"begin": 3336,
											"end": 3389,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3336,
											"end": 3389,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3336,
											"end": 3389,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3336,
											"end": 3389,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3336,
											"end": 3389,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3336,
											"end": 3389,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3336,
											"end": 3389,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3336,
											"end": 3389,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3336,
											"end": 3389,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3336,
											"end": 3389,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3336,
											"end": 3389,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 3336,
											"end": 3389,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3336,
											"end": 3389,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3336,
											"end": 3389,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3336,
											"end": 3389,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3336,
											"end": 3389,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3336,
											"end": 3389,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3336,
											"end": 3389,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3336,
											"end": 3389,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 3336,
											"end": 3389,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "190"
										},
										{
											"begin": 3336,
											"end": 3389,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3336,
											"end": 3389,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3336,
											"end": 3389,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3336,
											"end": 3389,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3336,
											"end": 3389,
											"name": "tag",
											"source": 6,
											"value": "191"
										},
										{
											"begin": 3336,
											"end": 3389,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3336,
											"end": 3389,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "192"
										},
										{
											"begin": 3336,
											"end": 3389,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "193"
										},
										{
											"begin": 3336,
											"end": 3389,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 3336,
											"end": 3389,
											"name": "tag",
											"source": 6,
											"value": "192"
										},
										{
											"begin": 3336,
											"end": 3389,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3336,
											"end": 3389,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3336,
											"end": 3389,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3336,
											"end": 3389,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3336,
											"end": 3389,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3336,
											"end": 3389,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3336,
											"end": 3389,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 3336,
											"end": 3389,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3336,
											"end": 3389,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 3336,
											"end": 3389,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3336,
											"end": 3389,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3336,
											"end": 3389,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "191"
										},
										{
											"begin": 3336,
											"end": 3389,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3336,
											"end": 3389,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3336,
											"end": 3389,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3336,
											"end": 3389,
											"name": "tag",
											"source": 6,
											"value": "190"
										},
										{
											"begin": 3336,
											"end": 3389,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3336,
											"end": 3389,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3275,
											"end": 3389,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3275,
											"end": 3389,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3401,
											"end": 3410,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3396,
											"end": 3638,
											"name": "tag",
											"source": 6,
											"value": "194"
										},
										{
											"begin": 3396,
											"end": 3638,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3420,
											"end": 3426,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 3420,
											"end": 3426,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 3420,
											"end": 3433,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3420,
											"end": 3433,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3416,
											"end": 3417,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3416,
											"end": 3433,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 3396,
											"end": 3638,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 3396,
											"end": 3638,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "195"
										},
										{
											"begin": 3396,
											"end": 3638,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3480,
											"end": 3486,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 3480,
											"end": 3486,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 3487,
											"end": 3488,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3480,
											"end": 3489,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3480,
											"end": 3489,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3480,
											"end": 3489,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 3480,
											"end": 3489,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "197"
										},
										{
											"begin": 3480,
											"end": 3489,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3480,
											"end": 3489,
											"name": "INVALID",
											"source": 6
										},
										{
											"begin": 3480,
											"end": 3489,
											"name": "tag",
											"source": 6,
											"value": "197"
										},
										{
											"begin": 3480,
											"end": 3489,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3480,
											"end": 3489,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3480,
											"end": 3489,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3480,
											"end": 3489,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3480,
											"end": 3489,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 3480,
											"end": 3489,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3480,
											"end": 3489,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3480,
											"end": 3489,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3480,
											"end": 3489,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3480,
											"end": 3489,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3480,
											"end": 3489,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "198"
										},
										{
											"begin": 3480,
											"end": 3489,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3480,
											"end": 3489,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3480,
											"end": 3489,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "30"
										},
										{
											"begin": 3480,
											"end": 3489,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 3480,
											"end": 3489,
											"name": "tag",
											"source": 6,
											"value": "198"
										},
										{
											"begin": 3480,
											"end": 3489,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3449,
											"end": 3458,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3459,
											"end": 3460,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3449,
											"end": 3461,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3449,
											"end": 3461,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3449,
											"end": 3461,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3449,
											"end": 3461,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 3449,
											"end": 3461,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "199"
										},
										{
											"begin": 3449,
											"end": 3461,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3449,
											"end": 3461,
											"name": "INVALID",
											"source": 6
										},
										{
											"begin": 3449,
											"end": 3461,
											"name": "tag",
											"source": 6,
											"value": "199"
										},
										{
											"begin": 3449,
											"end": 3461,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3449,
											"end": 3461,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3449,
											"end": 3461,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 3449,
											"end": 3461,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3449,
											"end": 3461,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3449,
											"end": 3461,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3449,
											"end": 3461,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3449,
											"end": 3477,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3449,
											"end": 3477,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3449,
											"end": 3489,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3449,
											"end": 3489,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3449,
											"end": 3489,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3449,
											"end": 3489,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3449,
											"end": 3489,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3449,
											"end": 3489,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3449,
											"end": 3489,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3449,
											"end": 3489,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3449,
											"end": 3489,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3449,
											"end": 3489,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3449,
											"end": 3489,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3574,
											"end": 3580,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 3574,
											"end": 3580,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 3581,
											"end": 3582,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3574,
											"end": 3583,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3574,
											"end": 3583,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3574,
											"end": 3583,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 3574,
											"end": 3583,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "200"
										},
										{
											"begin": 3574,
											"end": 3583,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3574,
											"end": 3583,
											"name": "INVALID",
											"source": 6
										},
										{
											"begin": 3574,
											"end": 3583,
											"name": "tag",
											"source": 6,
											"value": "200"
										},
										{
											"begin": 3574,
											"end": 3583,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3574,
											"end": 3583,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3574,
											"end": 3583,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3574,
											"end": 3583,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3574,
											"end": 3583,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 3574,
											"end": 3583,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3574,
											"end": 3583,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3574,
											"end": 3583,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3574,
											"end": 3583,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3574,
											"end": 3583,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3574,
											"end": 3583,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "201"
										},
										{
											"begin": 3574,
											"end": 3583,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3574,
											"end": 3583,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3574,
											"end": 3583,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "30"
										},
										{
											"begin": 3574,
											"end": 3583,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 3574,
											"end": 3583,
											"name": "tag",
											"source": 6,
											"value": "201"
										},
										{
											"begin": 3574,
											"end": 3583,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3554,
											"end": 3624,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3554,
											"end": 3624,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3554,
											"end": 3624,
											"name": "PUSH",
											"source": 6,
											"value": "AFBCDC9"
										},
										{
											"begin": 3625,
											"end": 3629,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 3554,
											"end": 3630,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3554,
											"end": 3630,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3554,
											"end": 3630,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3554,
											"end": 3630,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFF"
										},
										{
											"begin": 3554,
											"end": 3630,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3554,
											"end": 3630,
											"name": "PUSH",
											"source": 6,
											"value": "E0"
										},
										{
											"begin": 3554,
											"end": 3630,
											"name": "SHL",
											"source": 6
										},
										{
											"begin": 3554,
											"end": 3630,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3554,
											"end": 3630,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3554,
											"end": 3630,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 3554,
											"end": 3630,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3554,
											"end": 3630,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "202"
										},
										{
											"begin": 3554,
											"end": 3630,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3554,
											"end": 3630,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3554,
											"end": 3630,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "71"
										},
										{
											"begin": 3554,
											"end": 3630,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 3554,
											"end": 3630,
											"name": "tag",
											"source": 6,
											"value": "202"
										},
										{
											"begin": 3554,
											"end": 3630,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3554,
											"end": 3630,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3554,
											"end": 3630,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3554,
											"end": 3630,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3554,
											"end": 3630,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3554,
											"end": 3630,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 3554,
											"end": 3630,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 3554,
											"end": 3630,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3554,
											"end": 3630,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 3554,
											"end": 3630,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3554,
											"end": 3630,
											"name": "EXTCODESIZE",
											"source": 6
										},
										{
											"begin": 3554,
											"end": 3630,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 3554,
											"end": 3630,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3554,
											"end": 3630,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 3554,
											"end": 3630,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "203"
										},
										{
											"begin": 3554,
											"end": 3630,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3554,
											"end": 3630,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3554,
											"end": 3630,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3554,
											"end": 3630,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 3554,
											"end": 3630,
											"name": "tag",
											"source": 6,
											"value": "203"
										},
										{
											"begin": 3554,
											"end": 3630,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3554,
											"end": 3630,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3554,
											"end": 3630,
											"name": "GAS",
											"source": 6
										},
										{
											"begin": 3554,
											"end": 3630,
											"name": "STATICCALL",
											"source": 6
										},
										{
											"begin": 3554,
											"end": 3630,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 3554,
											"end": 3630,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3554,
											"end": 3630,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 3554,
											"end": 3630,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "205"
										},
										{
											"begin": 3554,
											"end": 3630,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3554,
											"end": 3630,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 3554,
											"end": 3630,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3554,
											"end": 3630,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3554,
											"end": 3630,
											"name": "RETURNDATACOPY",
											"source": 6
										},
										{
											"begin": 3554,
											"end": 3630,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 3554,
											"end": 3630,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3554,
											"end": 3630,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 3554,
											"end": 3630,
											"name": "tag",
											"source": 6,
											"value": "205"
										},
										{
											"begin": 3554,
											"end": 3630,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3554,
											"end": 3630,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3554,
											"end": 3630,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3554,
											"end": 3630,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3554,
											"end": 3630,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3554,
											"end": 3630,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3554,
											"end": 3630,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3554,
											"end": 3630,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 3554,
											"end": 3630,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 3554,
											"end": 3630,
											"name": "NOT",
											"source": 6
										},
										{
											"begin": 3554,
											"end": 3630,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 3554,
											"end": 3630,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3554,
											"end": 3630,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3554,
											"end": 3630,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3554,
											"end": 3630,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3554,
											"end": 3630,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3554,
											"end": 3630,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3554,
											"end": 3630,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3554,
											"end": 3630,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3554,
											"end": 3630,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3554,
											"end": 3630,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3554,
											"end": 3630,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3554,
											"end": 3630,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3554,
											"end": 3630,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "206"
										},
										{
											"begin": 3554,
											"end": 3630,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3554,
											"end": 3630,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3554,
											"end": 3630,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "207"
										},
										{
											"begin": 3554,
											"end": 3630,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 3554,
											"end": 3630,
											"name": "tag",
											"source": 6,
											"value": "206"
										},
										{
											"begin": 3554,
											"end": 3630,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3499,
											"end": 3508,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 3509,
											"end": 3510,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 3499,
											"end": 3511,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3499,
											"end": 3511,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3499,
											"end": 3511,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3499,
											"end": 3511,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 3499,
											"end": 3511,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "208"
										},
										{
											"begin": 3499,
											"end": 3511,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3499,
											"end": 3511,
											"name": "INVALID",
											"source": 6
										},
										{
											"begin": 3499,
											"end": 3511,
											"name": "tag",
											"source": 6,
											"value": "208"
										},
										{
											"begin": 3499,
											"end": 3511,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3499,
											"end": 3511,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3499,
											"end": 3511,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 3499,
											"end": 3511,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3499,
											"end": 3511,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3499,
											"end": 3511,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3499,
											"end": 3511,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3499,
											"end": 3524,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3499,
											"end": 3524,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3526,
											"end": 3535,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 3536,
											"end": 3537,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 3526,
											"end": 3538,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3526,
											"end": 3538,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3526,
											"end": 3538,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3526,
											"end": 3538,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 3526,
											"end": 3538,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "209"
										},
										{
											"begin": 3526,
											"end": 3538,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3526,
											"end": 3538,
											"name": "INVALID",
											"source": 6
										},
										{
											"begin": 3526,
											"end": 3538,
											"name": "tag",
											"source": 6,
											"value": "209"
										},
										{
											"begin": 3526,
											"end": 3538,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3526,
											"end": 3538,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3526,
											"end": 3538,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 3526,
											"end": 3538,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3526,
											"end": 3538,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3526,
											"end": 3538,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3526,
											"end": 3538,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3526,
											"end": 3550,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3526,
											"end": 3550,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3498,
											"end": 3630,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3498,
											"end": 3630,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3498,
											"end": 3630,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3498,
											"end": 3630,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3498,
											"end": 3630,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3498,
											"end": 3630,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3498,
											"end": 3630,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3498,
											"end": 3630,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3498,
											"end": 3630,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3498,
											"end": 3630,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3435,
											"end": 3438,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3435,
											"end": 3438,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3435,
											"end": 3438,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 3435,
											"end": 3438,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3435,
											"end": 3438,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3435,
											"end": 3438,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3435,
											"end": 3438,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3396,
											"end": 3638,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "194"
										},
										{
											"begin": 3396,
											"end": 3638,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3396,
											"end": 3638,
											"name": "tag",
											"source": 6,
											"value": "195"
										},
										{
											"begin": 3396,
											"end": 3638,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3396,
											"end": 3638,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3663,
											"end": 3722,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "210"
										},
										{
											"begin": 3684,
											"end": 3721,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "211"
										},
										{
											"begin": 3705,
											"end": 3709,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 3711,
											"end": 3720,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 3684,
											"end": 3704,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "212"
										},
										{
											"begin": 3684,
											"end": 3721,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 3684,
											"end": 3721,
											"name": "tag",
											"source": 6,
											"value": "211"
										},
										{
											"begin": 3684,
											"end": 3721,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3663,
											"end": 3679,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 3663,
											"end": 3683,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "130"
										},
										{
											"begin": 3663,
											"end": 3683,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3663,
											"end": 3722,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3663,
											"end": 3722,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3663,
											"end": 3722,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFF"
										},
										{
											"begin": 3663,
											"end": 3722,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3663,
											"end": 3722,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 3663,
											"end": 3722,
											"name": "tag",
											"source": 6,
											"value": "210"
										},
										{
											"begin": 3663,
											"end": 3722,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3644,
											"end": 3722,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3644,
											"end": 3722,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3736,
											"end": 3752,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3729,
											"end": 3752,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 3729,
											"end": 3752,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3729,
											"end": 3752,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3729,
											"end": 3752,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3072,
											"end": 3758,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 3072,
											"end": 3758,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 3072,
											"end": 3758,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3072,
											"end": 3758,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3072,
											"end": 3758,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3072,
											"end": 3758,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 1543,
											"end": 1648,
											"name": "tag",
											"source": 7,
											"value": "82"
										},
										{
											"begin": 1543,
											"end": 1648,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1603,
											"end": 1610,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1626,
											"end": 1642,
											"name": "PUSH",
											"source": 7,
											"value": "34"
										},
										{
											"begin": 1626,
											"end": 1642,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 1619,
											"end": 1642,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1619,
											"end": 1642,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1543,
											"end": 1648,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1543,
											"end": 1648,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 1026,
											"end": 1072,
											"name": "tag",
											"source": 6,
											"value": "85"
										},
										{
											"begin": 1026,
											"end": 1072,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1026,
											"end": 1072,
											"name": "PUSHIMMUTABLE",
											"source": 6,
											"value": "662"
										},
										{
											"begin": 1026,
											"end": 1072,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1026,
											"end": 1072,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 749,
											"end": 785,
											"name": "tag",
											"source": 7,
											"value": "88"
										},
										{
											"begin": 749,
											"end": 785,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 783,
											"end": 785,
											"name": "PUSH",
											"source": 7,
											"value": "12"
										},
										{
											"begin": 749,
											"end": 785,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 749,
											"end": 785,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 988,
											"end": 1138,
											"name": "tag",
											"source": 5,
											"value": "93"
										},
										{
											"begin": 988,
											"end": 1138,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1040,
											"end": 1056,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1059,
											"end": 1072,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "215"
										},
										{
											"begin": 1059,
											"end": 1070,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "216"
										},
										{
											"begin": 1059,
											"end": 1072,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 1059,
											"end": 1072,
											"name": "tag",
											"source": 4,
											"value": "215"
										},
										{
											"begin": 1059,
											"end": 1072,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1040,
											"end": 1072,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1040,
											"end": 1072,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1097,
											"end": 1120,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1097,
											"end": 1120,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 1086,
											"end": 1094,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1086,
											"end": 1120,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 1078,
											"end": 1171,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "217"
										},
										{
											"begin": 1078,
											"end": 1171,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1078,
											"end": 1171,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1078,
											"end": 1171,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1078,
											"end": 1171,
											"name": "PUSH",
											"source": 4,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1078,
											"end": 1171,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1078,
											"end": 1171,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1078,
											"end": 1171,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 1078,
											"end": 1171,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1078,
											"end": 1171,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1078,
											"end": 1171,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1078,
											"end": 1171,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1078,
											"end": 1171,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1078,
											"end": 1171,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1078,
											"end": 1171,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1078,
											"end": 1171,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 1078,
											"end": 1171,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1078,
											"end": 1171,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1078,
											"end": 1171,
											"name": "PUSH",
											"source": 4,
											"value": "2E"
										},
										{
											"begin": 1078,
											"end": 1171,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1078,
											"end": 1171,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1078,
											"end": 1171,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1078,
											"end": 1171,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1078,
											"end": 1171,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1078,
											"end": 1171,
											"name": "PUSH data",
											"source": 4,
											"value": "9FBBA6C4DCAC9134893B633B9564F36435B3F927C1D5FA152C5C14B20CECB1A4"
										},
										{
											"begin": 1078,
											"end": 1171,
											"name": "PUSH",
											"source": 4,
											"value": "2E"
										},
										{
											"begin": 1078,
											"end": 1171,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1078,
											"end": 1171,
											"name": "CODECOPY",
											"source": 4
										},
										{
											"begin": 1078,
											"end": 1171,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1078,
											"end": 1171,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1078,
											"end": 1171,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1078,
											"end": 1171,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1078,
											"end": 1171,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1078,
											"end": 1171,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1078,
											"end": 1171,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1078,
											"end": 1171,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1078,
											"end": 1171,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1078,
											"end": 1171,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 1078,
											"end": 1171,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1078,
											"end": 1171,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 1078,
											"end": 1171,
											"name": "tag",
											"source": 4,
											"value": "217"
										},
										{
											"begin": 1078,
											"end": 1171,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1204,
											"end": 1212,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1178,
											"end": 1201,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1178,
											"end": 1212,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1178,
											"end": 1212,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1178,
											"end": 1212,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 1178,
											"end": 1212,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1074,
											"end": 1086,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1058,
											"end": 1071,
											"name": "PUSH",
											"source": 5,
											"value": "37"
										},
										{
											"begin": 1058,
											"end": 1071,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1058,
											"end": 1086,
											"name": "PUSH",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 1058,
											"end": 1086,
											"name": "EXP",
											"source": 5
										},
										{
											"begin": 1058,
											"end": 1086,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1058,
											"end": 1086,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 1058,
											"end": 1086,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1058,
											"end": 1086,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1058,
											"end": 1086,
											"name": "MUL",
											"source": 5
										},
										{
											"begin": 1058,
											"end": 1086,
											"name": "NOT",
											"source": 5
										},
										{
											"begin": 1058,
											"end": 1086,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1058,
											"end": 1086,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1058,
											"end": 1086,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1058,
											"end": 1086,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1058,
											"end": 1086,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1058,
											"end": 1086,
											"name": "MUL",
											"source": 5
										},
										{
											"begin": 1058,
											"end": 1086,
											"name": "OR",
											"source": 5
										},
										{
											"begin": 1058,
											"end": 1086,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1058,
											"end": 1086,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 1058,
											"end": 1086,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1118,
											"end": 1131,
											"name": "PUSH",
											"source": 5,
											"value": "37"
										},
										{
											"begin": 1118,
											"end": 1131,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1118,
											"end": 1131,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1118,
											"end": 1131,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 1118,
											"end": 1131,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1118,
											"end": 1131,
											"name": "PUSH",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 1118,
											"end": 1131,
											"name": "EXP",
											"source": 5
										},
										{
											"begin": 1118,
											"end": 1131,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1118,
											"end": 1131,
											"name": "DIV",
											"source": 5
										},
										{
											"begin": 1118,
											"end": 1131,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1118,
											"end": 1131,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1098,
											"end": 1132,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1098,
											"end": 1132,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1098,
											"end": 1132,
											"name": "PUSH",
											"source": 5,
											"value": "28A48CBCE43190D77247F342CF319B1607BFF4EF716CF26B76CF7BB71BAEBAA5"
										},
										{
											"begin": 1098,
											"end": 1132,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1098,
											"end": 1132,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1098,
											"end": 1132,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1098,
											"end": 1132,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1098,
											"end": 1132,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1098,
											"end": 1132,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1098,
											"end": 1132,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1098,
											"end": 1132,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1098,
											"end": 1132,
											"name": "LOG2",
											"source": 5
										},
										{
											"begin": 988,
											"end": 1138,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 988,
											"end": 1138,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 988,
											"end": 1138,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 701,
											"end": 742,
											"name": "tag",
											"source": 7,
											"value": "95"
										},
										{
											"begin": 701,
											"end": 742,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 701,
											"end": 742,
											"name": "PUSHIMMUTABLE",
											"source": 7,
											"value": "1291"
										},
										{
											"begin": 701,
											"end": 742,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 701,
											"end": 742,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 1383,
											"end": 1490,
											"name": "tag",
											"source": 7,
											"value": "98"
										},
										{
											"begin": 1383,
											"end": 1490,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1445,
											"end": 1452,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1468,
											"end": 1484,
											"name": "PUSH",
											"source": 7,
											"value": "34"
										},
										{
											"begin": 1468,
											"end": 1484,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 1461,
											"end": 1484,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1461,
											"end": 1484,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1383,
											"end": 1490,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1383,
											"end": 1490,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 983,
											"end": 1019,
											"name": "tag",
											"source": 6,
											"value": "101"
										},
										{
											"begin": 983,
											"end": 1019,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1018,
											"end": 1019,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 983,
											"end": 1019,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 983,
											"end": 1019,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 1234,
											"end": 1326,
											"name": "tag",
											"source": 5,
											"value": "104"
										},
										{
											"begin": 1234,
											"end": 1326,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1284,
											"end": 1291,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1307,
											"end": 1320,
											"name": "PUSH",
											"source": 5,
											"value": "37"
										},
										{
											"begin": 1307,
											"end": 1320,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1307,
											"end": 1320,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1307,
											"end": 1320,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 1307,
											"end": 1320,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1307,
											"end": 1320,
											"name": "PUSH",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 1307,
											"end": 1320,
											"name": "EXP",
											"source": 5
										},
										{
											"begin": 1307,
											"end": 1320,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1307,
											"end": 1320,
											"name": "DIV",
											"source": 5
										},
										{
											"begin": 1307,
											"end": 1320,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1307,
											"end": 1320,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1300,
											"end": 1320,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1300,
											"end": 1320,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1234,
											"end": 1326,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1234,
											"end": 1326,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 792,
											"end": 835,
											"name": "tag",
											"source": 7,
											"value": "108"
										},
										{
											"begin": 792,
											"end": 835,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 792,
											"end": 835,
											"name": "PUSH",
											"source": 7,
											"value": "33"
										},
										{
											"begin": 792,
											"end": 835,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 792,
											"end": 835,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 792,
											"end": 835,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 792,
											"end": 835,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 792,
											"end": 835,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 792,
											"end": 835,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 792,
											"end": 835,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 792,
											"end": 835,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 792,
											"end": 835,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 792,
											"end": 835,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 792,
											"end": 835,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 792,
											"end": 835,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 792,
											"end": 835,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 792,
											"end": 835,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 792,
											"end": 835,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 792,
											"end": 835,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 792,
											"end": 835,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 792,
											"end": 835,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 792,
											"end": 835,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 792,
											"end": 835,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 792,
											"end": 835,
											"name": "PUSH",
											"source": 7,
											"value": "100"
										},
										{
											"begin": 792,
											"end": 835,
											"name": "EXP",
											"source": 7
										},
										{
											"begin": 792,
											"end": 835,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 792,
											"end": 835,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 792,
											"end": 835,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 792,
											"end": 835,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 792,
											"end": 835,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 792,
											"end": 835,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 792,
											"end": 835,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 792,
											"end": 835,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 792,
											"end": 835,
											"name": "PUSH",
											"source": 7,
											"value": "D"
										},
										{
											"begin": 792,
											"end": 835,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 792,
											"end": 835,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 792,
											"end": 835,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 792,
											"end": 835,
											"name": "PUSH",
											"source": 7,
											"value": "100"
										},
										{
											"begin": 792,
											"end": 835,
											"name": "EXP",
											"source": 7
										},
										{
											"begin": 792,
											"end": 835,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 792,
											"end": 835,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 792,
											"end": 835,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 792,
											"end": 835,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 792,
											"end": 835,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 792,
											"end": 835,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 792,
											"end": 835,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 792,
											"end": 835,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 792,
											"end": 835,
											"name": "PUSH",
											"source": 7,
											"value": "1A"
										},
										{
											"begin": 792,
											"end": 835,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 792,
											"end": 835,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 792,
											"end": 835,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 792,
											"end": 835,
											"name": "PUSH",
											"source": 7,
											"value": "100"
										},
										{
											"begin": 792,
											"end": 835,
											"name": "EXP",
											"source": 7
										},
										{
											"begin": 792,
											"end": 835,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 792,
											"end": 835,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 792,
											"end": 835,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFF"
										},
										{
											"begin": 792,
											"end": 835,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 792,
											"end": 835,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 792,
											"end": 835,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 792,
											"end": 835,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 792,
											"end": 835,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 1485,
											"end": 1647,
											"name": "tag",
											"source": 5,
											"value": "113"
										},
										{
											"begin": 1485,
											"end": 1647,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 942,
											"end": 958,
											"name": "PUSHIMMUTABLE",
											"source": 7,
											"value": "1291"
										},
										{
											"begin": 928,
											"end": 958,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 928,
											"end": 958,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 928,
											"end": 938,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 928,
											"end": 958,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 928,
											"end": 958,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 928,
											"end": 958,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 920,
											"end": 984,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "222"
										},
										{
											"begin": 920,
											"end": 984,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 920,
											"end": 984,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 920,
											"end": 984,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 920,
											"end": 984,
											"name": "PUSH",
											"source": 7,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 920,
											"end": 984,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 920,
											"end": 984,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 920,
											"end": 984,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 920,
											"end": 984,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 920,
											"end": 984,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "223"
										},
										{
											"begin": 920,
											"end": 984,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 920,
											"end": 984,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "136"
										},
										{
											"begin": 920,
											"end": 984,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 920,
											"end": 984,
											"name": "tag",
											"source": 7,
											"value": "223"
										},
										{
											"begin": 920,
											"end": 984,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 920,
											"end": 984,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 920,
											"end": 984,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 920,
											"end": 984,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 920,
											"end": 984,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 920,
											"end": 984,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 920,
											"end": 984,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 920,
											"end": 984,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 920,
											"end": 984,
											"name": "tag",
											"source": 7,
											"value": "222"
										},
										{
											"begin": 920,
											"end": 984,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1584,
											"end": 1596,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1568,
											"end": 1581,
											"name": "PUSH",
											"source": 5,
											"value": "37"
										},
										{
											"begin": 1568,
											"end": 1581,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1568,
											"end": 1596,
											"name": "PUSH",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 1568,
											"end": 1596,
											"name": "EXP",
											"source": 5
										},
										{
											"begin": 1568,
											"end": 1596,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1568,
											"end": 1596,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 1568,
											"end": 1596,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1568,
											"end": 1596,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1568,
											"end": 1596,
											"name": "MUL",
											"source": 5
										},
										{
											"begin": 1568,
											"end": 1596,
											"name": "NOT",
											"source": 5
										},
										{
											"begin": 1568,
											"end": 1596,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1568,
											"end": 1596,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1568,
											"end": 1596,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1568,
											"end": 1596,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1568,
											"end": 1596,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1568,
											"end": 1596,
											"name": "MUL",
											"source": 5
										},
										{
											"begin": 1568,
											"end": 1596,
											"name": "OR",
											"source": 5
										},
										{
											"begin": 1568,
											"end": 1596,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1568,
											"end": 1596,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 1568,
											"end": 1596,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1628,
											"end": 1640,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1608,
											"end": 1641,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1608,
											"end": 1641,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1608,
											"end": 1641,
											"name": "PUSH",
											"source": 5,
											"value": "28A48CBCE43190D77247F342CF319B1607BFF4EF716CF26B76CF7BB71BAEBAA5"
										},
										{
											"begin": 1608,
											"end": 1641,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1608,
											"end": 1641,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1608,
											"end": 1641,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1608,
											"end": 1641,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1608,
											"end": 1641,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1608,
											"end": 1641,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1608,
											"end": 1641,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1608,
											"end": 1641,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1608,
											"end": 1641,
											"name": "LOG2",
											"source": 5
										},
										{
											"begin": 1485,
											"end": 1647,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1485,
											"end": 1647,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 4832,
											"end": 5003,
											"name": "tag",
											"source": 6,
											"value": "116"
										},
										{
											"begin": 4832,
											"end": 5003,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 942,
											"end": 958,
											"name": "PUSHIMMUTABLE",
											"source": 7,
											"value": "1291"
										},
										{
											"begin": 928,
											"end": 958,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 928,
											"end": 958,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 928,
											"end": 938,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 928,
											"end": 958,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 928,
											"end": 958,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 928,
											"end": 958,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 920,
											"end": 984,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "226"
										},
										{
											"begin": 920,
											"end": 984,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 920,
											"end": 984,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 920,
											"end": 984,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 920,
											"end": 984,
											"name": "PUSH",
											"source": 7,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 920,
											"end": 984,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 920,
											"end": 984,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 920,
											"end": 984,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 920,
											"end": 984,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 920,
											"end": 984,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "227"
										},
										{
											"begin": 920,
											"end": 984,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 920,
											"end": 984,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "136"
										},
										{
											"begin": 920,
											"end": 984,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 920,
											"end": 984,
											"name": "tag",
											"source": 7,
											"value": "227"
										},
										{
											"begin": 920,
											"end": 984,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 920,
											"end": 984,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 920,
											"end": 984,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 920,
											"end": 984,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 920,
											"end": 984,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 920,
											"end": 984,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 920,
											"end": 984,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 920,
											"end": 984,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 920,
											"end": 984,
											"name": "tag",
											"source": 7,
											"value": "226"
										},
										{
											"begin": 920,
											"end": 984,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4955,
											"end": 4961,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4927,
											"end": 4946,
											"name": "PUSH",
											"source": 6,
											"value": "36"
										},
										{
											"begin": 4927,
											"end": 4952,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4947,
											"end": 4951,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 4927,
											"end": 4952,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4927,
											"end": 4952,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 4927,
											"end": 4952,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4927,
											"end": 4952,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 4927,
											"end": 4952,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4927,
											"end": 4952,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4927,
											"end": 4952,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 4927,
											"end": 4952,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4927,
											"end": 4952,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4927,
											"end": 4952,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4927,
											"end": 4952,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4927,
											"end": 4952,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 4927,
											"end": 4952,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4927,
											"end": 4952,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4927,
											"end": 4952,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 4927,
											"end": 4952,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4927,
											"end": 4961,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 4927,
											"end": 4961,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 4927,
											"end": 4961,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4927,
											"end": 4961,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 4927,
											"end": 4961,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4927,
											"end": 4961,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4927,
											"end": 4961,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 4927,
											"end": 4961,
											"name": "NOT",
											"source": 6
										},
										{
											"begin": 4927,
											"end": 4961,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 4927,
											"end": 4961,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4927,
											"end": 4961,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 4927,
											"end": 4961,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4927,
											"end": 4961,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 4927,
											"end": 4961,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 4927,
											"end": 4961,
											"name": "OR",
											"source": 6
										},
										{
											"begin": 4927,
											"end": 4961,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4927,
											"end": 4961,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 4927,
											"end": 4961,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4990,
											"end": 4996,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4973,
											"end": 4997,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4973,
											"end": 4997,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 4984,
											"end": 4988,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4973,
											"end": 4997,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4973,
											"end": 4997,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 4973,
											"end": 4997,
											"name": "PUSH",
											"source": 6,
											"value": "4925EAFC82D0C4D67889898EEED64B18488AB19811E61620F387026DEC126A28"
										},
										{
											"begin": 4973,
											"end": 4997,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 4973,
											"end": 4997,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 4973,
											"end": 4997,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 4973,
											"end": 4997,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 4973,
											"end": 4997,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4973,
											"end": 4997,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4973,
											"end": 4997,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 4973,
											"end": 4997,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4973,
											"end": 4997,
											"name": "LOG3",
											"source": 6
										},
										{
											"begin": 4832,
											"end": 5003,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4832,
											"end": 5003,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4832,
											"end": 5003,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 5875,
											"end": 7196,
											"name": "tag",
											"source": 6,
											"value": "124"
										},
										{
											"begin": 5875,
											"end": 7196,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6032,
											"end": 6039,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6062,
											"end": 6063,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 6052,
											"end": 6058,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 6052,
											"end": 6063,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 6048,
											"end": 6090,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 6048,
											"end": 6090,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "230"
										},
										{
											"begin": 6048,
											"end": 6090,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 6081,
											"end": 6082,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6074,
											"end": 6082,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6074,
											"end": 6082,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6074,
											"end": 6082,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "229"
										},
										{
											"begin": 6074,
											"end": 6082,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6048,
											"end": 6090,
											"name": "tag",
											"source": 6,
											"value": "230"
										},
										{
											"begin": 6048,
											"end": 6090,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6096,
											"end": 6120,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6123,
											"end": 6145,
											"name": "PUSH",
											"source": 6,
											"value": "35"
										},
										{
											"begin": 6123,
											"end": 6151,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6146,
											"end": 6150,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 6123,
											"end": 6151,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6123,
											"end": 6151,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 6123,
											"end": 6151,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6123,
											"end": 6151,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 6123,
											"end": 6151,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6123,
											"end": 6151,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 6123,
											"end": 6151,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 6123,
											"end": 6151,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6123,
											"end": 6151,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6123,
											"end": 6151,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6123,
											"end": 6151,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 6123,
											"end": 6151,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 6123,
											"end": 6151,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6123,
											"end": 6151,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6123,
											"end": 6151,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 6123,
											"end": 6151,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 6096,
											"end": 6151,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6096,
											"end": 6151,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6173,
											"end": 6189,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 6164,
											"end": 6170,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 6164,
											"end": 6189,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 6160,
											"end": 6809,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 6160,
											"end": 6809,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "231"
										},
										{
											"begin": 6160,
											"end": 6809,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 6200,
											"end": 6251,
											"name": "PUSH",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 6302,
											"end": 6308,
											"name": "DUP9",
											"source": 6
										},
										{
											"begin": 6302,
											"end": 6308,
											"name": "DUP9",
											"source": 6
										},
										{
											"begin": 6302,
											"end": 6315,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6302,
											"end": 6315,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6263,
											"end": 6316,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6263,
											"end": 6316,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6263,
											"end": 6316,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 6263,
											"end": 6316,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 6263,
											"end": 6316,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 6263,
											"end": 6316,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "232"
										},
										{
											"begin": 6263,
											"end": 6316,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 6263,
											"end": 6316,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6263,
											"end": 6316,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 6263,
											"end": 6316,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 6263,
											"end": 6316,
											"name": "tag",
											"source": 6,
											"value": "232"
										},
										{
											"begin": 6263,
											"end": 6316,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6263,
											"end": 6316,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6263,
											"end": 6316,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 6263,
											"end": 6316,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 6263,
											"end": 6316,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6263,
											"end": 6316,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 6263,
											"end": 6316,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6263,
											"end": 6316,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 6263,
											"end": 6316,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 6263,
											"end": 6316,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 6263,
											"end": 6316,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 6263,
											"end": 6316,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 6263,
											"end": 6316,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6263,
											"end": 6316,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6263,
											"end": 6316,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6263,
											"end": 6316,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 6263,
											"end": 6316,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 6263,
											"end": 6316,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 6263,
											"end": 6316,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 6263,
											"end": 6316,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "233"
										},
										{
											"begin": 6263,
											"end": 6316,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 6263,
											"end": 6316,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6263,
											"end": 6316,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 6263,
											"end": 6316,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6263,
											"end": 6316,
											"name": "tag",
											"source": 6,
											"value": "234"
										},
										{
											"begin": 6263,
											"end": 6316,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6263,
											"end": 6316,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "235"
										},
										{
											"begin": 6263,
											"end": 6316,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "193"
										},
										{
											"begin": 6263,
											"end": 6316,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 6263,
											"end": 6316,
											"name": "tag",
											"source": 6,
											"value": "235"
										},
										{
											"begin": 6263,
											"end": 6316,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6263,
											"end": 6316,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6263,
											"end": 6316,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 6263,
											"end": 6316,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 6263,
											"end": 6316,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6263,
											"end": 6316,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6263,
											"end": 6316,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 6263,
											"end": 6316,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6263,
											"end": 6316,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 6263,
											"end": 6316,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6263,
											"end": 6316,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6263,
											"end": 6316,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "234"
										},
										{
											"begin": 6263,
											"end": 6316,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 6263,
											"end": 6316,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6263,
											"end": 6316,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6263,
											"end": 6316,
											"name": "tag",
											"source": 6,
											"value": "233"
										},
										{
											"begin": 6263,
											"end": 6316,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6263,
											"end": 6316,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6200,
											"end": 6316,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6200,
											"end": 6316,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6330,
											"end": 6339,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6325,
											"end": 6575,
											"name": "tag",
											"source": 6,
											"value": "236"
										},
										{
											"begin": 6325,
											"end": 6575,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6349,
											"end": 6355,
											"name": "DUP10",
											"source": 6
										},
										{
											"begin": 6349,
											"end": 6355,
											"name": "DUP10",
											"source": 6
										},
										{
											"begin": 6349,
											"end": 6362,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6349,
											"end": 6362,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6345,
											"end": 6346,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6345,
											"end": 6362,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 6325,
											"end": 6575,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 6325,
											"end": 6575,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "237"
										},
										{
											"begin": 6325,
											"end": 6575,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 6411,
											"end": 6417,
											"name": "DUP10",
											"source": 6
										},
										{
											"begin": 6411,
											"end": 6417,
											"name": "DUP10",
											"source": 6
										},
										{
											"begin": 6418,
											"end": 6419,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6411,
											"end": 6420,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6411,
											"end": 6420,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6411,
											"end": 6420,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 6411,
											"end": 6420,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "239"
										},
										{
											"begin": 6411,
											"end": 6420,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 6411,
											"end": 6420,
											"name": "INVALID",
											"source": 6
										},
										{
											"begin": 6411,
											"end": 6420,
											"name": "tag",
											"source": 6,
											"value": "239"
										},
										{
											"begin": 6411,
											"end": 6420,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6411,
											"end": 6420,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6411,
											"end": 6420,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6411,
											"end": 6420,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 6411,
											"end": 6420,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 6411,
											"end": 6420,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6411,
											"end": 6420,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 6411,
											"end": 6420,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6411,
											"end": 6420,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6411,
											"end": 6420,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6411,
											"end": 6420,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "240"
										},
										{
											"begin": 6411,
											"end": 6420,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 6411,
											"end": 6420,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6411,
											"end": 6420,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "30"
										},
										{
											"begin": 6411,
											"end": 6420,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 6411,
											"end": 6420,
											"name": "tag",
											"source": 6,
											"value": "240"
										},
										{
											"begin": 6411,
											"end": 6420,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6380,
											"end": 6389,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6390,
											"end": 6391,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6380,
											"end": 6392,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6380,
											"end": 6392,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 6380,
											"end": 6392,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6380,
											"end": 6392,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 6380,
											"end": 6392,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "241"
										},
										{
											"begin": 6380,
											"end": 6392,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 6380,
											"end": 6392,
											"name": "INVALID",
											"source": 6
										},
										{
											"begin": 6380,
											"end": 6392,
											"name": "tag",
											"source": 6,
											"value": "241"
										},
										{
											"begin": 6380,
											"end": 6392,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6380,
											"end": 6392,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 6380,
											"end": 6392,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 6380,
											"end": 6392,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 6380,
											"end": 6392,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6380,
											"end": 6392,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6380,
											"end": 6392,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 6380,
											"end": 6408,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6380,
											"end": 6408,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6380,
											"end": 6420,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6380,
											"end": 6420,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6380,
											"end": 6420,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 6380,
											"end": 6420,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6380,
											"end": 6420,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6380,
											"end": 6420,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6380,
											"end": 6420,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 6380,
											"end": 6420,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6380,
											"end": 6420,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 6380,
											"end": 6420,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6380,
											"end": 6420,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6507,
											"end": 6513,
											"name": "DUP10",
											"source": 6
										},
										{
											"begin": 6507,
											"end": 6513,
											"name": "DUP10",
											"source": 6
										},
										{
											"begin": 6514,
											"end": 6515,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6507,
											"end": 6516,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6507,
											"end": 6516,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6507,
											"end": 6516,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 6507,
											"end": 6516,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "242"
										},
										{
											"begin": 6507,
											"end": 6516,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 6507,
											"end": 6516,
											"name": "INVALID",
											"source": 6
										},
										{
											"begin": 6507,
											"end": 6516,
											"name": "tag",
											"source": 6,
											"value": "242"
										},
										{
											"begin": 6507,
											"end": 6516,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6507,
											"end": 6516,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6507,
											"end": 6516,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6507,
											"end": 6516,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 6507,
											"end": 6516,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 6507,
											"end": 6516,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6507,
											"end": 6516,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 6507,
											"end": 6516,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6507,
											"end": 6516,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6507,
											"end": 6516,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6507,
											"end": 6516,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "243"
										},
										{
											"begin": 6507,
											"end": 6516,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 6507,
											"end": 6516,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6507,
											"end": 6516,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "30"
										},
										{
											"begin": 6507,
											"end": 6516,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 6507,
											"end": 6516,
											"name": "tag",
											"source": 6,
											"value": "243"
										},
										{
											"begin": 6507,
											"end": 6516,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6487,
											"end": 6559,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6487,
											"end": 6559,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 6487,
											"end": 6559,
											"name": "PUSH",
											"source": 6,
											"value": "AFBCDC9"
										},
										{
											"begin": 6560,
											"end": 6564,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 6487,
											"end": 6565,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 6487,
											"end": 6565,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 6487,
											"end": 6565,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6487,
											"end": 6565,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFF"
										},
										{
											"begin": 6487,
											"end": 6565,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 6487,
											"end": 6565,
											"name": "PUSH",
											"source": 6,
											"value": "E0"
										},
										{
											"begin": 6487,
											"end": 6565,
											"name": "SHL",
											"source": 6
										},
										{
											"begin": 6487,
											"end": 6565,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6487,
											"end": 6565,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 6487,
											"end": 6565,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 6487,
											"end": 6565,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6487,
											"end": 6565,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "244"
										},
										{
											"begin": 6487,
											"end": 6565,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 6487,
											"end": 6565,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6487,
											"end": 6565,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "71"
										},
										{
											"begin": 6487,
											"end": 6565,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 6487,
											"end": 6565,
											"name": "tag",
											"source": 6,
											"value": "244"
										},
										{
											"begin": 6487,
											"end": 6565,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6487,
											"end": 6565,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 6487,
											"end": 6565,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 6487,
											"end": 6565,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 6487,
											"end": 6565,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 6487,
											"end": 6565,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 6487,
											"end": 6565,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 6487,
											"end": 6565,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6487,
											"end": 6565,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 6487,
											"end": 6565,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 6487,
											"end": 6565,
											"name": "EXTCODESIZE",
											"source": 6
										},
										{
											"begin": 6487,
											"end": 6565,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 6487,
											"end": 6565,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 6487,
											"end": 6565,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 6487,
											"end": 6565,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "245"
										},
										{
											"begin": 6487,
											"end": 6565,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 6487,
											"end": 6565,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6487,
											"end": 6565,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 6487,
											"end": 6565,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 6487,
											"end": 6565,
											"name": "tag",
											"source": 6,
											"value": "245"
										},
										{
											"begin": 6487,
											"end": 6565,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6487,
											"end": 6565,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6487,
											"end": 6565,
											"name": "GAS",
											"source": 6
										},
										{
											"begin": 6487,
											"end": 6565,
											"name": "STATICCALL",
											"source": 6
										},
										{
											"begin": 6487,
											"end": 6565,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 6487,
											"end": 6565,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 6487,
											"end": 6565,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 6487,
											"end": 6565,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "247"
										},
										{
											"begin": 6487,
											"end": 6565,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 6487,
											"end": 6565,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 6487,
											"end": 6565,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6487,
											"end": 6565,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 6487,
											"end": 6565,
											"name": "RETURNDATACOPY",
											"source": 6
										},
										{
											"begin": 6487,
											"end": 6565,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 6487,
											"end": 6565,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6487,
											"end": 6565,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 6487,
											"end": 6565,
											"name": "tag",
											"source": 6,
											"value": "247"
										},
										{
											"begin": 6487,
											"end": 6565,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6487,
											"end": 6565,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6487,
											"end": 6565,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6487,
											"end": 6565,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6487,
											"end": 6565,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6487,
											"end": 6565,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 6487,
											"end": 6565,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 6487,
											"end": 6565,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 6487,
											"end": 6565,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 6487,
											"end": 6565,
											"name": "NOT",
											"source": 6
										},
										{
											"begin": 6487,
											"end": 6565,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 6487,
											"end": 6565,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6487,
											"end": 6565,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6487,
											"end": 6565,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 6487,
											"end": 6565,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6487,
											"end": 6565,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6487,
											"end": 6565,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 6487,
											"end": 6565,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 6487,
											"end": 6565,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 6487,
											"end": 6565,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6487,
											"end": 6565,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6487,
											"end": 6565,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6487,
											"end": 6565,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6487,
											"end": 6565,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "248"
										},
										{
											"begin": 6487,
											"end": 6565,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 6487,
											"end": 6565,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6487,
											"end": 6565,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "207"
										},
										{
											"begin": 6487,
											"end": 6565,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 6487,
											"end": 6565,
											"name": "tag",
											"source": 6,
											"value": "248"
										},
										{
											"begin": 6487,
											"end": 6565,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6432,
											"end": 6441,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 6442,
											"end": 6443,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 6432,
											"end": 6444,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6432,
											"end": 6444,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 6432,
											"end": 6444,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6432,
											"end": 6444,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 6432,
											"end": 6444,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "249"
										},
										{
											"begin": 6432,
											"end": 6444,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 6432,
											"end": 6444,
											"name": "INVALID",
											"source": 6
										},
										{
											"begin": 6432,
											"end": 6444,
											"name": "tag",
											"source": 6,
											"value": "249"
										},
										{
											"begin": 6432,
											"end": 6444,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6432,
											"end": 6444,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 6432,
											"end": 6444,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 6432,
											"end": 6444,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 6432,
											"end": 6444,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6432,
											"end": 6444,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6432,
											"end": 6444,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 6432,
											"end": 6457,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 6432,
											"end": 6457,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6459,
											"end": 6468,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 6469,
											"end": 6470,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 6459,
											"end": 6471,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6459,
											"end": 6471,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 6459,
											"end": 6471,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6459,
											"end": 6471,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 6459,
											"end": 6471,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "250"
										},
										{
											"begin": 6459,
											"end": 6471,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 6459,
											"end": 6471,
											"name": "INVALID",
											"source": 6
										},
										{
											"begin": 6459,
											"end": 6471,
											"name": "tag",
											"source": 6,
											"value": "250"
										},
										{
											"begin": 6459,
											"end": 6471,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6459,
											"end": 6471,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 6459,
											"end": 6471,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 6459,
											"end": 6471,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 6459,
											"end": 6471,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6459,
											"end": 6471,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6459,
											"end": 6471,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 6459,
											"end": 6483,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 6459,
											"end": 6483,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6431,
											"end": 6565,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6431,
											"end": 6565,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6431,
											"end": 6565,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 6431,
											"end": 6565,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6431,
											"end": 6565,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6431,
											"end": 6565,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6431,
											"end": 6565,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 6431,
											"end": 6565,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6431,
											"end": 6565,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6431,
											"end": 6565,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6364,
											"end": 6367,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 6364,
											"end": 6367,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 6364,
											"end": 6367,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 6364,
											"end": 6367,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6364,
											"end": 6367,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 6364,
											"end": 6367,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6364,
											"end": 6367,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6325,
											"end": 6575,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "236"
										},
										{
											"begin": 6325,
											"end": 6575,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6325,
											"end": 6575,
											"name": "tag",
											"source": 6,
											"value": "237"
										},
										{
											"begin": 6325,
											"end": 6575,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6325,
											"end": 6575,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6585,
											"end": 6607,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6610,
											"end": 6640,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "251"
										},
										{
											"begin": 6624,
											"end": 6628,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 6630,
											"end": 6639,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 6610,
											"end": 6623,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "252"
										},
										{
											"begin": 6610,
											"end": 6640,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 6610,
											"end": 6640,
											"name": "tag",
											"source": 6,
											"value": "251"
										},
										{
											"begin": 6610,
											"end": 6640,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6585,
											"end": 6640,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6585,
											"end": 6640,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6671,
											"end": 6672,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6653,
											"end": 6667,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6653,
											"end": 6672,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 6649,
											"end": 6802,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "253"
										},
										{
											"begin": 6649,
											"end": 6802,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 6704,
											"end": 6740,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "254"
										},
										{
											"begin": 6725,
											"end": 6739,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6704,
											"end": 6720,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 6704,
											"end": 6724,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "130"
										},
										{
											"begin": 6704,
											"end": 6724,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6704,
											"end": 6740,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 6704,
											"end": 6740,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6704,
											"end": 6740,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFF"
										},
										{
											"begin": 6704,
											"end": 6740,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 6704,
											"end": 6740,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 6704,
											"end": 6740,
											"name": "tag",
											"source": 6,
											"value": "254"
										},
										{
											"begin": 6704,
											"end": 6740,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6685,
											"end": 6740,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 6685,
											"end": 6740,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6771,
											"end": 6775,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 6756,
											"end": 6792,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6756,
											"end": 6792,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 6756,
											"end": 6792,
											"name": "PUSH",
											"source": 6,
											"value": "2468F9268C60AD90E2D49EDB0032C8A001E733AE888B3AB8E982EDF535BE1A76"
										},
										{
											"begin": 6777,
											"end": 6791,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6756,
											"end": 6792,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 6756,
											"end": 6792,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 6756,
											"end": 6792,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "255"
										},
										{
											"begin": 6756,
											"end": 6792,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 6756,
											"end": 6792,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6756,
											"end": 6792,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "38"
										},
										{
											"begin": 6756,
											"end": 6792,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 6756,
											"end": 6792,
											"name": "tag",
											"source": 6,
											"value": "255"
										},
										{
											"begin": 6756,
											"end": 6792,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6756,
											"end": 6792,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 6756,
											"end": 6792,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 6756,
											"end": 6792,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 6756,
											"end": 6792,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 6756,
											"end": 6792,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 6756,
											"end": 6792,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6756,
											"end": 6792,
											"name": "LOG2",
											"source": 6
										},
										{
											"begin": 6649,
											"end": 6802,
											"name": "tag",
											"source": 6,
											"value": "253"
										},
										{
											"begin": 6649,
											"end": 6802,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6160,
											"end": 6809,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6160,
											"end": 6809,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6160,
											"end": 6809,
											"name": "tag",
											"source": 6,
											"value": "231"
										},
										{
											"begin": 6160,
											"end": 6809,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6841,
											"end": 6842,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6821,
											"end": 6837,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6821,
											"end": 6842,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 6817,
											"end": 6869,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 6817,
											"end": 6869,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "256"
										},
										{
											"begin": 6817,
											"end": 6869,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 6860,
											"end": 6861,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6853,
											"end": 6861,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 6853,
											"end": 6861,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6853,
											"end": 6861,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6853,
											"end": 6861,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "229"
										},
										{
											"begin": 6853,
											"end": 6861,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6817,
											"end": 6869,
											"name": "tag",
											"source": 6,
											"value": "256"
										},
										{
											"begin": 6817,
											"end": 6869,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6877,
											"end": 6898,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6910,
											"end": 6926,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6901,
											"end": 6907,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 6901,
											"end": 6926,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 6901,
											"end": 6954,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "257"
										},
										{
											"begin": 6901,
											"end": 6954,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 6948,
											"end": 6954,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 6901,
											"end": 6954,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "258"
										},
										{
											"begin": 6901,
											"end": 6954,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6901,
											"end": 6954,
											"name": "tag",
											"source": 6,
											"value": "257"
										},
										{
											"begin": 6901,
											"end": 6954,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6929,
											"end": 6945,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6901,
											"end": 6954,
											"name": "tag",
											"source": 6,
											"value": "258"
										},
										{
											"begin": 6901,
											"end": 6954,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6877,
											"end": 6954,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6877,
											"end": 6954,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7011,
											"end": 7024,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 6992,
											"end": 7008,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6992,
											"end": 7024,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 6961,
											"end": 6983,
											"name": "PUSH",
											"source": 6,
											"value": "35"
										},
										{
											"begin": 6961,
											"end": 6989,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6984,
											"end": 6988,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 6961,
											"end": 6989,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6961,
											"end": 6989,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 6961,
											"end": 6989,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6961,
											"end": 6989,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 6961,
											"end": 6989,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6961,
											"end": 6989,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 6961,
											"end": 6989,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 6961,
											"end": 6989,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6961,
											"end": 6989,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6961,
											"end": 6989,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6961,
											"end": 6989,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 6961,
											"end": 6989,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 6961,
											"end": 6989,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6961,
											"end": 6989,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6961,
											"end": 6989,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 6961,
											"end": 7024,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6961,
											"end": 7024,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6961,
											"end": 7024,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 6961,
											"end": 7024,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7066,
											"end": 7101,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "259"
										},
										{
											"begin": 7083,
											"end": 7085,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 7087,
											"end": 7100,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 7066,
											"end": 7082,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "260"
										},
										{
											"begin": 7066,
											"end": 7101,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 7066,
											"end": 7101,
											"name": "tag",
											"source": 6,
											"value": "259"
										},
										{
											"begin": 7066,
											"end": 7101,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7138,
											"end": 7145,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 7113,
											"end": 7161,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7113,
											"end": 7161,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 7134,
											"end": 7136,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 7113,
											"end": 7161,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7113,
											"end": 7161,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 7128,
											"end": 7132,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 7113,
											"end": 7161,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7113,
											"end": 7161,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 7113,
											"end": 7161,
											"name": "PUSH",
											"source": 6,
											"value": "5637D7F962248A7F05A7AB69EEC6446E31F3D0A299D997F135A65C62806E7891"
										},
										{
											"begin": 7147,
											"end": 7160,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 7113,
											"end": 7161,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 7113,
											"end": 7161,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 7113,
											"end": 7161,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "261"
										},
										{
											"begin": 7113,
											"end": 7161,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 7113,
											"end": 7161,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7113,
											"end": 7161,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "38"
										},
										{
											"begin": 7113,
											"end": 7161,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 7113,
											"end": 7161,
											"name": "tag",
											"source": 6,
											"value": "261"
										},
										{
											"begin": 7113,
											"end": 7161,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7113,
											"end": 7161,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 7113,
											"end": 7161,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 7113,
											"end": 7161,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 7113,
											"end": 7161,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 7113,
											"end": 7161,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 7113,
											"end": 7161,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7113,
											"end": 7161,
											"name": "LOG4",
											"source": 6
										},
										{
											"begin": 7177,
											"end": 7190,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 7170,
											"end": 7190,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 7170,
											"end": 7190,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7170,
											"end": 7190,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7170,
											"end": 7190,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5875,
											"end": 7196,
											"name": "tag",
											"source": 6,
											"value": "229"
										},
										{
											"begin": 5875,
											"end": 7196,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5875,
											"end": 7196,
											"name": "SWAP7",
											"source": 6
										},
										{
											"begin": 5875,
											"end": 7196,
											"name": "SWAP6",
											"source": 6
										},
										{
											"begin": 5875,
											"end": 7196,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5875,
											"end": 7196,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5875,
											"end": 7196,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5875,
											"end": 7196,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5875,
											"end": 7196,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5875,
											"end": 7196,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5875,
											"end": 7196,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 4616,
											"end": 5279,
											"name": "tag",
											"source": 7,
											"value": "127"
										},
										{
											"begin": 4616,
											"end": 5279,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4765,
											"end": 4772,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4781,
											"end": 4808,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 4811,
											"end": 4817,
											"name": "PUSH",
											"source": 7,
											"value": "33"
										},
										{
											"begin": 4811,
											"end": 4824,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4818,
											"end": 4823,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 4811,
											"end": 4824,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4811,
											"end": 4824,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 4811,
											"end": 4824,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4811,
											"end": 4824,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 4811,
											"end": 4824,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4811,
											"end": 4824,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4811,
											"end": 4824,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 4811,
											"end": 4824,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4811,
											"end": 4824,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4811,
											"end": 4824,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4811,
											"end": 4824,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4811,
											"end": 4824,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 4811,
											"end": 4824,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4811,
											"end": 4824,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4811,
											"end": 4824,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 4781,
											"end": 4824,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4781,
											"end": 4824,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4831,
											"end": 4848,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4851,
											"end": 4860,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4851,
											"end": 4866,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 4851,
											"end": 4866,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4851,
											"end": 4872,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4867,
											"end": 4871,
											"name": "DUP9",
											"source": 7
										},
										{
											"begin": 4851,
											"end": 4872,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4851,
											"end": 4872,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 4851,
											"end": 4872,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4851,
											"end": 4872,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 4851,
											"end": 4872,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4851,
											"end": 4872,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4851,
											"end": 4872,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 4851,
											"end": 4872,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4851,
											"end": 4872,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4851,
											"end": 4872,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4851,
											"end": 4872,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4851,
											"end": 4872,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 4851,
											"end": 4872,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4851,
											"end": 4872,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4851,
											"end": 4872,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 4851,
											"end": 4872,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 4831,
											"end": 4872,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4831,
											"end": 4872,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4879,
											"end": 4901,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4914,
											"end": 4930,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 4933,
											"end": 4989,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "263"
										},
										{
											"begin": 4959,
											"end": 4964,
											"name": "DUP9",
											"source": 7
										},
										{
											"begin": 4966,
											"end": 4975,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 4977,
											"end": 4988,
											"name": "DUP9",
											"source": 7
										},
										{
											"begin": 4933,
											"end": 4958,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "264"
										},
										{
											"begin": 4933,
											"end": 4989,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 4933,
											"end": 4989,
											"name": "tag",
											"source": 7,
											"value": "263"
										},
										{
											"begin": 4933,
											"end": 4989,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4914,
											"end": 4989,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4914,
											"end": 4989,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5015,
											"end": 5023,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 5002,
											"end": 5011,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 5002,
											"end": 5023,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 4998,
											"end": 5244,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "265"
										},
										{
											"begin": 4998,
											"end": 5244,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 5054,
											"end": 5055,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5038,
											"end": 5050,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 5038,
											"end": 5055,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 5034,
											"end": 5141,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "266"
										},
										{
											"begin": 5034,
											"end": 5141,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 5085,
											"end": 5131,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "267"
										},
										{
											"begin": 5097,
											"end": 5109,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 5111,
											"end": 5119,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5121,
											"end": 5130,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 5085,
											"end": 5096,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "268"
										},
										{
											"begin": 5085,
											"end": 5131,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 5085,
											"end": 5131,
											"name": "tag",
											"source": 7,
											"value": "267"
										},
										{
											"begin": 5085,
											"end": 5131,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5068,
											"end": 5131,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5068,
											"end": 5131,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5034,
											"end": 5141,
											"name": "tag",
											"source": 7,
											"value": "266"
										},
										{
											"begin": 5034,
											"end": 5141,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5175,
											"end": 5183,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 5151,
											"end": 5160,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 5151,
											"end": 5166,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 5151,
											"end": 5166,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5151,
											"end": 5172,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5167,
											"end": 5171,
											"name": "DUP12",
											"source": 7
										},
										{
											"begin": 5151,
											"end": 5172,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5151,
											"end": 5172,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 5151,
											"end": 5172,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5151,
											"end": 5172,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 5151,
											"end": 5172,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5151,
											"end": 5172,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 5151,
											"end": 5172,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 5151,
											"end": 5172,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5151,
											"end": 5172,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5151,
											"end": 5172,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5151,
											"end": 5172,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 5151,
											"end": 5172,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 5151,
											"end": 5172,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5151,
											"end": 5172,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5151,
											"end": 5172,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 5151,
											"end": 5183,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5151,
											"end": 5183,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5151,
											"end": 5183,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 5151,
											"end": 5183,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5220,
											"end": 5225,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 5197,
											"end": 5236,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5197,
											"end": 5236,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 5214,
											"end": 5218,
											"name": "DUP10",
											"source": 7
										},
										{
											"begin": 5197,
											"end": 5236,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5197,
											"end": 5236,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 5197,
											"end": 5236,
											"name": "PUSH",
											"source": 7,
											"value": "BB123B5C06D5408BBEA3C4FEF481578175CFB432E3B482C6186F02ED9086585B"
										},
										{
											"begin": 5227,
											"end": 5235,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 5197,
											"end": 5236,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 5197,
											"end": 5236,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 5197,
											"end": 5236,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "269"
										},
										{
											"begin": 5197,
											"end": 5236,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5197,
											"end": 5236,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5197,
											"end": 5236,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "38"
										},
										{
											"begin": 5197,
											"end": 5236,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 5197,
											"end": 5236,
											"name": "tag",
											"source": 7,
											"value": "269"
										},
										{
											"begin": 5197,
											"end": 5236,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5197,
											"end": 5236,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 5197,
											"end": 5236,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 5197,
											"end": 5236,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 5197,
											"end": 5236,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5197,
											"end": 5236,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 5197,
											"end": 5236,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5197,
											"end": 5236,
											"name": "LOG3",
											"source": 7
										},
										{
											"begin": 4998,
											"end": 5244,
											"name": "tag",
											"source": 7,
											"value": "265"
										},
										{
											"begin": 4998,
											"end": 5244,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5259,
											"end": 5273,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5252,
											"end": 5273,
											"name": "SWAP5",
											"source": 7
										},
										{
											"begin": 5252,
											"end": 5273,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5252,
											"end": 5273,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5252,
											"end": 5273,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5252,
											"end": 5273,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5252,
											"end": 5273,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4616,
											"end": 5279,
											"name": "SWAP5",
											"source": 7
										},
										{
											"begin": 4616,
											"end": 5279,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 4616,
											"end": 5279,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4616,
											"end": 5279,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4616,
											"end": 5279,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4616,
											"end": 5279,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4616,
											"end": 5279,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 460,
											"end": 573,
											"name": "tag",
											"source": 12,
											"value": "130"
										},
										{
											"begin": 460,
											"end": 573,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 518,
											"end": 527,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 563,
											"end": 564,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 557,
											"end": 558,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 553,
											"end": 554,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 553,
											"end": 558,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 549,
											"end": 558,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 549,
											"end": 558,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 549,
											"end": 558,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 548,
											"end": 564,
											"name": "LT",
											"source": 12
										},
										{
											"begin": 548,
											"end": 564,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 540,
											"end": 565,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "271"
										},
										{
											"begin": 540,
											"end": 565,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 540,
											"end": 565,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 540,
											"end": 565,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 540,
											"end": 565,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 540,
											"end": 565,
											"name": "tag",
											"source": 12,
											"value": "271"
										},
										{
											"begin": 540,
											"end": 565,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 460,
											"end": 573,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 460,
											"end": 573,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 460,
											"end": 573,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 460,
											"end": 573,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 460,
											"end": 573,
											"name": "JUMP",
											"source": 12,
											"value": "[out]"
										},
										{
											"begin": 2242,
											"end": 2885,
											"name": "tag",
											"source": 7,
											"value": "187"
										},
										{
											"begin": 2242,
											"end": 2885,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2360,
											"end": 2369,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2355,
											"end": 2880,
											"name": "tag",
											"source": 7,
											"value": "273"
										},
										{
											"begin": 2355,
											"end": 2880,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2379,
											"end": 2396,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2379,
											"end": 2403,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 2375,
											"end": 2376,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2375,
											"end": 2403,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 2355,
											"end": 2880,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 2355,
											"end": 2880,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "274"
										},
										{
											"begin": 2355,
											"end": 2880,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 2419,
											"end": 2448,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2451,
											"end": 2457,
											"name": "PUSH",
											"source": 7,
											"value": "33"
										},
										{
											"begin": 2451,
											"end": 2495,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2458,
											"end": 2475,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 2476,
											"end": 2477,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 2458,
											"end": 2478,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2458,
											"end": 2478,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 2458,
											"end": 2478,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2458,
											"end": 2478,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 2458,
											"end": 2478,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "276"
										},
										{
											"begin": 2458,
											"end": 2478,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 2458,
											"end": 2478,
											"name": "INVALID",
											"source": 7
										},
										{
											"begin": 2458,
											"end": 2478,
											"name": "tag",
											"source": 7,
											"value": "276"
										},
										{
											"begin": 2458,
											"end": 2478,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2458,
											"end": 2478,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2458,
											"end": 2478,
											"name": "MUL",
											"source": 7
										},
										{
											"begin": 2458,
											"end": 2478,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2458,
											"end": 2478,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2458,
											"end": 2478,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2458,
											"end": 2478,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 2458,
											"end": 2494,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2458,
											"end": 2494,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2458,
											"end": 2494,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 2451,
											"end": 2495,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2451,
											"end": 2495,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2451,
											"end": 2495,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2451,
											"end": 2495,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2451,
											"end": 2495,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2451,
											"end": 2495,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2451,
											"end": 2495,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2451,
											"end": 2495,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2451,
											"end": 2495,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2451,
											"end": 2495,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2451,
											"end": 2495,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2451,
											"end": 2495,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2451,
											"end": 2495,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2451,
											"end": 2495,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2451,
											"end": 2495,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 2419,
											"end": 2495,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2419,
											"end": 2495,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2506,
											"end": 2652,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "277"
										},
										{
											"begin": 2542,
											"end": 2559,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 2560,
											"end": 2561,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 2542,
											"end": 2562,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2542,
											"end": 2562,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 2542,
											"end": 2562,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2542,
											"end": 2562,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 2542,
											"end": 2562,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "278"
										},
										{
											"begin": 2542,
											"end": 2562,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 2542,
											"end": 2562,
											"name": "INVALID",
											"source": 7
										},
										{
											"begin": 2542,
											"end": 2562,
											"name": "tag",
											"source": 7,
											"value": "278"
										},
										{
											"begin": 2542,
											"end": 2562,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2542,
											"end": 2562,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2542,
											"end": 2562,
											"name": "MUL",
											"source": 7
										},
										{
											"begin": 2542,
											"end": 2562,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2542,
											"end": 2562,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2542,
											"end": 2562,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2542,
											"end": 2562,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 2542,
											"end": 2578,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2542,
											"end": 2578,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2542,
											"end": 2578,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 2589,
											"end": 2600,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2611,
											"end": 2628,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 2629,
											"end": 2630,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 2611,
											"end": 2631,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2611,
											"end": 2631,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 2611,
											"end": 2631,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2611,
											"end": 2631,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 2611,
											"end": 2631,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "279"
										},
										{
											"begin": 2611,
											"end": 2631,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 2611,
											"end": 2631,
											"name": "INVALID",
											"source": 7
										},
										{
											"begin": 2611,
											"end": 2631,
											"name": "tag",
											"source": 7,
											"value": "279"
										},
										{
											"begin": 2611,
											"end": 2631,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2611,
											"end": 2631,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2611,
											"end": 2631,
											"name": "MUL",
											"source": 7
										},
										{
											"begin": 2611,
											"end": 2631,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2611,
											"end": 2631,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2611,
											"end": 2631,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2611,
											"end": 2631,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 2611,
											"end": 2643,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2611,
											"end": 2643,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2611,
											"end": 2643,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 2506,
											"end": 2531,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "264"
										},
										{
											"begin": 2506,
											"end": 2652,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 2506,
											"end": 2652,
											"name": "tag",
											"source": 7,
											"value": "277"
										},
										{
											"begin": 2506,
											"end": 2652,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2506,
											"end": 2652,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2695,
											"end": 2712,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2713,
											"end": 2714,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2695,
											"end": 2715,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2695,
											"end": 2715,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 2695,
											"end": 2715,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2695,
											"end": 2715,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 2695,
											"end": 2715,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "280"
										},
										{
											"begin": 2695,
											"end": 2715,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 2695,
											"end": 2715,
											"name": "INVALID",
											"source": 7
										},
										{
											"begin": 2695,
											"end": 2715,
											"name": "tag",
											"source": 7,
											"value": "280"
										},
										{
											"begin": 2695,
											"end": 2715,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2695,
											"end": 2715,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2695,
											"end": 2715,
											"name": "MUL",
											"source": 7
										},
										{
											"begin": 2695,
											"end": 2715,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2695,
											"end": 2715,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2695,
											"end": 2715,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2695,
											"end": 2715,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 2695,
											"end": 2733,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2695,
											"end": 2733,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2695,
											"end": 2733,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 2663,
											"end": 2674,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2663,
											"end": 2692,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2663,
											"end": 2692,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2663,
											"end": 2692,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2663,
											"end": 2733,
											"name": "PUSH",
											"source": 7,
											"value": "100"
										},
										{
											"begin": 2663,
											"end": 2733,
											"name": "EXP",
											"source": 7
										},
										{
											"begin": 2663,
											"end": 2733,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2663,
											"end": 2733,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 2663,
											"end": 2733,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2663,
											"end": 2733,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2663,
											"end": 2733,
											"name": "MUL",
											"source": 7
										},
										{
											"begin": 2663,
											"end": 2733,
											"name": "NOT",
											"source": 7
										},
										{
											"begin": 2663,
											"end": 2733,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2663,
											"end": 2733,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2663,
											"end": 2733,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 2663,
											"end": 2733,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2663,
											"end": 2733,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2663,
											"end": 2733,
											"name": "MUL",
											"source": 7
										},
										{
											"begin": 2663,
											"end": 2733,
											"name": "OR",
											"source": 7
										},
										{
											"begin": 2663,
											"end": 2733,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2663,
											"end": 2733,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 2663,
											"end": 2733,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2778,
											"end": 2795,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2796,
											"end": 2797,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2778,
											"end": 2798,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2778,
											"end": 2798,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 2778,
											"end": 2798,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2778,
											"end": 2798,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 2778,
											"end": 2798,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "281"
										},
										{
											"begin": 2778,
											"end": 2798,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 2778,
											"end": 2798,
											"name": "INVALID",
											"source": 7
										},
										{
											"begin": 2778,
											"end": 2798,
											"name": "tag",
											"source": 7,
											"value": "281"
										},
										{
											"begin": 2778,
											"end": 2798,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2778,
											"end": 2798,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2778,
											"end": 2798,
											"name": "MUL",
											"source": 7
										},
										{
											"begin": 2778,
											"end": 2798,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2778,
											"end": 2798,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2778,
											"end": 2798,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2778,
											"end": 2798,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 2778,
											"end": 2814,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2778,
											"end": 2814,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2778,
											"end": 2814,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 2749,
											"end": 2872,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2749,
											"end": 2872,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2749,
											"end": 2872,
											"name": "PUSH",
											"source": 7,
											"value": "87FA03892A0556CB6B8F97E6D533A150D4D55FCBF275FFF5FA003FA636BCC7FA"
										},
										{
											"begin": 2825,
											"end": 2842,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 2843,
											"end": 2844,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 2825,
											"end": 2845,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2825,
											"end": 2845,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 2825,
											"end": 2845,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2825,
											"end": 2845,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 2825,
											"end": 2845,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "282"
										},
										{
											"begin": 2825,
											"end": 2845,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 2825,
											"end": 2845,
											"name": "INVALID",
											"source": 7
										},
										{
											"begin": 2825,
											"end": 2845,
											"name": "tag",
											"source": 7,
											"value": "282"
										},
										{
											"begin": 2825,
											"end": 2845,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2825,
											"end": 2845,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2825,
											"end": 2845,
											"name": "MUL",
											"source": 7
										},
										{
											"begin": 2825,
											"end": 2845,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2825,
											"end": 2845,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2825,
											"end": 2845,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2825,
											"end": 2845,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 2825,
											"end": 2863,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2825,
											"end": 2863,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2825,
											"end": 2863,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 2749,
											"end": 2872,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2749,
											"end": 2872,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 2749,
											"end": 2872,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "283"
										},
										{
											"begin": 2749,
											"end": 2872,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2749,
											"end": 2872,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2749,
											"end": 2872,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "284"
										},
										{
											"begin": 2749,
											"end": 2872,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 2749,
											"end": 2872,
											"name": "tag",
											"source": 7,
											"value": "283"
										},
										{
											"begin": 2749,
											"end": 2872,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2749,
											"end": 2872,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2749,
											"end": 2872,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 2749,
											"end": 2872,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2749,
											"end": 2872,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2749,
											"end": 2872,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 2749,
											"end": 2872,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2749,
											"end": 2872,
											"name": "LOG2",
											"source": 7
										},
										{
											"begin": 2355,
											"end": 2880,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2405,
											"end": 2408,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2405,
											"end": 2408,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2405,
											"end": 2408,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 2405,
											"end": 2408,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2405,
											"end": 2408,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2405,
											"end": 2408,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2405,
											"end": 2408,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2355,
											"end": 2880,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "273"
										},
										{
											"begin": 2355,
											"end": 2880,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2355,
											"end": 2880,
											"name": "tag",
											"source": 7,
											"value": "274"
										},
										{
											"begin": 2355,
											"end": 2880,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2355,
											"end": 2880,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2242,
											"end": 2885,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2242,
											"end": 2885,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 6351,
											"end": 7048,
											"name": "tag",
											"source": 7,
											"value": "212"
										},
										{
											"begin": 6351,
											"end": 7048,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6483,
											"end": 6490,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6502,
											"end": 6524,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 6527,
											"end": 6528,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6502,
											"end": 6528,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6502,
											"end": 6528,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6542,
											"end": 6551,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6537,
											"end": 7015,
											"name": "tag",
											"source": 7,
											"value": "286"
										},
										{
											"begin": 6537,
											"end": 7015,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6561,
											"end": 6567,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 6561,
											"end": 6574,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 6557,
											"end": 6558,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6557,
											"end": 6574,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 6537,
											"end": 7015,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 6537,
											"end": 7015,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "287"
										},
										{
											"begin": 6537,
											"end": 7015,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 6590,
											"end": 6619,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6622,
											"end": 6628,
											"name": "PUSH",
											"source": 7,
											"value": "33"
										},
										{
											"begin": 6622,
											"end": 6655,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6629,
											"end": 6635,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 6636,
											"end": 6637,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 6629,
											"end": 6638,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6629,
											"end": 6638,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 6629,
											"end": 6638,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6629,
											"end": 6638,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 6629,
											"end": 6638,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "289"
										},
										{
											"begin": 6629,
											"end": 6638,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 6629,
											"end": 6638,
											"name": "INVALID",
											"source": 7
										},
										{
											"begin": 6629,
											"end": 6638,
											"name": "tag",
											"source": 7,
											"value": "289"
										},
										{
											"begin": 6629,
											"end": 6638,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6629,
											"end": 6638,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 6629,
											"end": 6638,
											"name": "MUL",
											"source": 7
										},
										{
											"begin": 6629,
											"end": 6638,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 6629,
											"end": 6638,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6629,
											"end": 6638,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6629,
											"end": 6638,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 6629,
											"end": 6654,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6629,
											"end": 6654,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6629,
											"end": 6654,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 6622,
											"end": 6655,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6622,
											"end": 6655,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 6622,
											"end": 6655,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6622,
											"end": 6655,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 6622,
											"end": 6655,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6622,
											"end": 6655,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 6622,
											"end": 6655,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 6622,
											"end": 6655,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6622,
											"end": 6655,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6622,
											"end": 6655,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6622,
											"end": 6655,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 6622,
											"end": 6655,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 6622,
											"end": 6655,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6622,
											"end": 6655,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6622,
											"end": 6655,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 6590,
											"end": 6655,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6590,
											"end": 6655,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6664,
											"end": 6682,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6694,
											"end": 6869,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "290"
										},
										{
											"begin": 6721,
											"end": 6732,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6721,
											"end": 6738,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6721,
											"end": 6738,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6721,
											"end": 6738,
											"name": "PUSH",
											"source": 7,
											"value": "D"
										},
										{
											"begin": 6721,
											"end": 6738,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6721,
											"end": 6738,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 6721,
											"end": 6738,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6721,
											"end": 6738,
											"name": "PUSH",
											"source": 7,
											"value": "100"
										},
										{
											"begin": 6721,
											"end": 6738,
											"name": "EXP",
											"source": 7
										},
										{
											"begin": 6721,
											"end": 6738,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6721,
											"end": 6738,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 6721,
											"end": 6738,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6721,
											"end": 6738,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 6694,
											"end": 6869,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6694,
											"end": 6869,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 6751,
											"end": 6762,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 6751,
											"end": 6780,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6751,
											"end": 6780,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6751,
											"end": 6780,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6751,
											"end": 6780,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6751,
											"end": 6780,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 6751,
											"end": 6780,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6751,
											"end": 6780,
											"name": "PUSH",
											"source": 7,
											"value": "100"
										},
										{
											"begin": 6751,
											"end": 6780,
											"name": "EXP",
											"source": 7
										},
										{
											"begin": 6751,
											"end": 6780,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6751,
											"end": 6780,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 6751,
											"end": 6780,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6751,
											"end": 6780,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 6694,
											"end": 6869,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6694,
											"end": 6869,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 6793,
											"end": 6804,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 6793,
											"end": 6824,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6793,
											"end": 6824,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6793,
											"end": 6824,
											"name": "PUSH",
											"source": 7,
											"value": "1A"
										},
										{
											"begin": 6793,
											"end": 6824,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6793,
											"end": 6824,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 6793,
											"end": 6824,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6793,
											"end": 6824,
											"name": "PUSH",
											"source": 7,
											"value": "100"
										},
										{
											"begin": 6793,
											"end": 6824,
											"name": "EXP",
											"source": 7
										},
										{
											"begin": 6793,
											"end": 6824,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6793,
											"end": 6824,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 6793,
											"end": 6824,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFF"
										},
										{
											"begin": 6793,
											"end": 6824,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 6694,
											"end": 6869,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFF"
										},
										{
											"begin": 6694,
											"end": 6869,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 6837,
											"end": 6843,
											"name": "DUP10",
											"source": 7
										},
										{
											"begin": 6844,
											"end": 6845,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 6837,
											"end": 6846,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6837,
											"end": 6846,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 6837,
											"end": 6846,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6837,
											"end": 6846,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 6837,
											"end": 6846,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "291"
										},
										{
											"begin": 6837,
											"end": 6846,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 6837,
											"end": 6846,
											"name": "INVALID",
											"source": 7
										},
										{
											"begin": 6837,
											"end": 6846,
											"name": "tag",
											"source": 7,
											"value": "291"
										},
										{
											"begin": 6837,
											"end": 6846,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6837,
											"end": 6846,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 6837,
											"end": 6846,
											"name": "MUL",
											"source": 7
										},
										{
											"begin": 6837,
											"end": 6846,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 6837,
											"end": 6846,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6837,
											"end": 6846,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6837,
											"end": 6846,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 6837,
											"end": 6858,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 6837,
											"end": 6858,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6837,
											"end": 6858,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 6694,
											"end": 6708,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "292"
										},
										{
											"begin": 6694,
											"end": 6869,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 6694,
											"end": 6869,
											"name": "tag",
											"source": 7,
											"value": "290"
										},
										{
											"begin": 6694,
											"end": 6869,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6664,
											"end": 6869,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6664,
											"end": 6869,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6897,
											"end": 7007,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "293"
										},
										{
											"begin": 6926,
											"end": 6998,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "294"
										},
										{
											"begin": 6938,
											"end": 6944,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 6945,
											"end": 6946,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 6938,
											"end": 6947,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6938,
											"end": 6947,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 6938,
											"end": 6947,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6938,
											"end": 6947,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 6938,
											"end": 6947,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "295"
										},
										{
											"begin": 6938,
											"end": 6947,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 6938,
											"end": 6947,
											"name": "INVALID",
											"source": 7
										},
										{
											"begin": 6938,
											"end": 6947,
											"name": "tag",
											"source": 7,
											"value": "295"
										},
										{
											"begin": 6938,
											"end": 6947,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6938,
											"end": 6947,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 6938,
											"end": 6947,
											"name": "MUL",
											"source": 7
										},
										{
											"begin": 6938,
											"end": 6947,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 6938,
											"end": 6947,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6938,
											"end": 6947,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6938,
											"end": 6947,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 6938,
											"end": 6960,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 6938,
											"end": 6960,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6938,
											"end": 6960,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 6962,
											"end": 6972,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 6974,
											"end": 6985,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 6974,
											"end": 6991,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 6974,
											"end": 6991,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6974,
											"end": 6997,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6992,
											"end": 6996,
											"name": "DUP13",
											"source": 7
										},
										{
											"begin": 6974,
											"end": 6997,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6974,
											"end": 6997,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 6974,
											"end": 6997,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6974,
											"end": 6997,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 6974,
											"end": 6997,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6974,
											"end": 6997,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 6974,
											"end": 6997,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 6974,
											"end": 6997,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6974,
											"end": 6997,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6974,
											"end": 6997,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6974,
											"end": 6997,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 6974,
											"end": 6997,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 6974,
											"end": 6997,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6974,
											"end": 6997,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6974,
											"end": 6997,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 6974,
											"end": 6997,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 6926,
											"end": 6937,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "268"
										},
										{
											"begin": 6926,
											"end": 6998,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 6926,
											"end": 6998,
											"name": "tag",
											"source": 7,
											"value": "294"
										},
										{
											"begin": 6926,
											"end": 6998,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6897,
											"end": 6911,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 6897,
											"end": 6915,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "130"
										},
										{
											"begin": 6897,
											"end": 6915,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6897,
											"end": 7007,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 6897,
											"end": 7007,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6897,
											"end": 7007,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFF"
										},
										{
											"begin": 6897,
											"end": 7007,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 6897,
											"end": 7007,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 6897,
											"end": 7007,
											"name": "tag",
											"source": 7,
											"value": "293"
										},
										{
											"begin": 6897,
											"end": 7007,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6880,
											"end": 7007,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 6880,
											"end": 7007,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6537,
											"end": 7015,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6537,
											"end": 7015,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6576,
											"end": 6579,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 6576,
											"end": 6579,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 6576,
											"end": 6579,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 6576,
											"end": 6579,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6576,
											"end": 6579,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 6576,
											"end": 6579,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6576,
											"end": 6579,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6537,
											"end": 7015,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "286"
										},
										{
											"begin": 6537,
											"end": 7015,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6537,
											"end": 7015,
											"name": "tag",
											"source": 7,
											"value": "287"
										},
										{
											"begin": 6537,
											"end": 7015,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6537,
											"end": 7015,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7028,
											"end": 7042,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 7021,
											"end": 7042,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 7021,
											"end": 7042,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7021,
											"end": 7042,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6351,
											"end": 7048,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 6351,
											"end": 7048,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 6351,
											"end": 7048,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6351,
											"end": 7048,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6351,
											"end": 7048,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 5452,
											"end": 5544,
											"name": "tag",
											"source": 6,
											"value": "216"
										},
										{
											"begin": 5452,
											"end": 5544,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5507,
											"end": 5514,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1018,
											"end": 1019,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 5523,
											"end": 5538,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5523,
											"end": 5538,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5452,
											"end": 5544,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5452,
											"end": 5544,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 5591,
											"end": 6070,
											"name": "tag",
											"source": 7,
											"value": "252"
										},
										{
											"begin": 5591,
											"end": 6070,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5706,
											"end": 5713,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5725,
											"end": 5747,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 5750,
											"end": 5751,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5725,
											"end": 5751,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5725,
											"end": 5751,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5765,
											"end": 5774,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5760,
											"end": 6035,
											"name": "tag",
											"source": 7,
											"value": "298"
										},
										{
											"begin": 5760,
											"end": 6035,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5784,
											"end": 5790,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 5784,
											"end": 5797,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 5780,
											"end": 5781,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5780,
											"end": 5797,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 5760,
											"end": 6035,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 5760,
											"end": 6035,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "299"
										},
										{
											"begin": 5760,
											"end": 6035,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 5830,
											"end": 6027,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "301"
										},
										{
											"begin": 5859,
											"end": 6018,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "302"
										},
										{
											"begin": 5896,
											"end": 5900,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 5913,
											"end": 5919,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 5920,
											"end": 5921,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 5913,
											"end": 5922,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5913,
											"end": 5922,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 5913,
											"end": 5922,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5913,
											"end": 5922,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 5913,
											"end": 5922,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "303"
										},
										{
											"begin": 5913,
											"end": 5922,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 5913,
											"end": 5922,
											"name": "INVALID",
											"source": 7
										},
										{
											"begin": 5913,
											"end": 5922,
											"name": "tag",
											"source": 7,
											"value": "303"
										},
										{
											"begin": 5913,
											"end": 5922,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5913,
											"end": 5922,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 5913,
											"end": 5922,
											"name": "MUL",
											"source": 7
										},
										{
											"begin": 5913,
											"end": 5922,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 5913,
											"end": 5922,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5913,
											"end": 5922,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5913,
											"end": 5922,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 5913,
											"end": 5938,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5913,
											"end": 5938,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5913,
											"end": 5938,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 5951,
											"end": 5957,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 5958,
											"end": 5959,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 5951,
											"end": 5960,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5951,
											"end": 5960,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 5951,
											"end": 5960,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5951,
											"end": 5960,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 5951,
											"end": 5960,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "304"
										},
										{
											"begin": 5951,
											"end": 5960,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 5951,
											"end": 5960,
											"name": "INVALID",
											"source": 7
										},
										{
											"begin": 5951,
											"end": 5960,
											"name": "tag",
											"source": 7,
											"value": "304"
										},
										{
											"begin": 5951,
											"end": 5960,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5951,
											"end": 5960,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 5951,
											"end": 5960,
											"name": "MUL",
											"source": 7
										},
										{
											"begin": 5951,
											"end": 5960,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 5951,
											"end": 5960,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5951,
											"end": 5960,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5951,
											"end": 5960,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 5951,
											"end": 5973,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 5951,
											"end": 5973,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5951,
											"end": 5973,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 5986,
											"end": 5992,
											"name": "DUP9",
											"source": 7
										},
										{
											"begin": 5993,
											"end": 5994,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 5986,
											"end": 5995,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5986,
											"end": 5995,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 5986,
											"end": 5995,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5986,
											"end": 5995,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 5986,
											"end": 5995,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "305"
										},
										{
											"begin": 5986,
											"end": 5995,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 5986,
											"end": 5995,
											"name": "INVALID",
											"source": 7
										},
										{
											"begin": 5986,
											"end": 5995,
											"name": "tag",
											"source": 7,
											"value": "305"
										},
										{
											"begin": 5986,
											"end": 5995,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5986,
											"end": 5995,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 5986,
											"end": 5995,
											"name": "MUL",
											"source": 7
										},
										{
											"begin": 5986,
											"end": 5995,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 5986,
											"end": 5995,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5986,
											"end": 5995,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5986,
											"end": 5995,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 5986,
											"end": 6007,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 5986,
											"end": 6007,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5986,
											"end": 6007,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 5859,
											"end": 5883,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "127"
										},
										{
											"begin": 5859,
											"end": 6018,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 5859,
											"end": 6018,
											"name": "tag",
											"source": 7,
											"value": "302"
										},
										{
											"begin": 5859,
											"end": 6018,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5830,
											"end": 5844,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 5830,
											"end": 5848,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "130"
										},
										{
											"begin": 5830,
											"end": 5848,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5830,
											"end": 6027,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5830,
											"end": 6027,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5830,
											"end": 6027,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFF"
										},
										{
											"begin": 5830,
											"end": 6027,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 5830,
											"end": 6027,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 5830,
											"end": 6027,
											"name": "tag",
											"source": 7,
											"value": "301"
										},
										{
											"begin": 5830,
											"end": 6027,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5813,
											"end": 6027,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5813,
											"end": 6027,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5799,
											"end": 5802,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 5799,
											"end": 5802,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 5799,
											"end": 5802,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 5799,
											"end": 5802,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5799,
											"end": 5802,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5799,
											"end": 5802,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5799,
											"end": 5802,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5760,
											"end": 6035,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "298"
										},
										{
											"begin": 5760,
											"end": 6035,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5760,
											"end": 6035,
											"name": "tag",
											"source": 7,
											"value": "299"
										},
										{
											"begin": 5760,
											"end": 6035,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5760,
											"end": 6035,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6050,
											"end": 6064,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 6043,
											"end": 6064,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 6043,
											"end": 6064,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6043,
											"end": 6064,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5591,
											"end": 6070,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 5591,
											"end": 6070,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5591,
											"end": 6070,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5591,
											"end": 6070,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5591,
											"end": 6070,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 1700,
											"end": 1849,
											"name": "tag",
											"source": 5,
											"value": "260"
										},
										{
											"begin": 1700,
											"end": 1849,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1779,
											"end": 1843,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "307"
										},
										{
											"begin": 1817,
											"end": 1830,
											"name": "PUSH",
											"source": 5,
											"value": "37"
										},
										{
											"begin": 1817,
											"end": 1830,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1817,
											"end": 1830,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1817,
											"end": 1830,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 1817,
											"end": 1830,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1817,
											"end": 1830,
											"name": "PUSH",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 1817,
											"end": 1830,
											"name": "EXP",
											"source": 5
										},
										{
											"begin": 1817,
											"end": 1830,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1817,
											"end": 1830,
											"name": "DIV",
											"source": 5
										},
										{
											"begin": 1817,
											"end": 1830,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1817,
											"end": 1830,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1832,
											"end": 1834,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1836,
											"end": 1842,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1786,
											"end": 1798,
											"name": "PUSHIMMUTABLE",
											"source": 5,
											"value": "662"
										},
										{
											"begin": 1779,
											"end": 1816,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1779,
											"end": 1816,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1779,
											"end": 1816,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "308"
										},
										{
											"begin": 1779,
											"end": 1816,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1779,
											"end": 1843,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 1779,
											"end": 1843,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 1779,
											"end": 1843,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1779,
											"end": 1843,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1779,
											"end": 1843,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1779,
											"end": 1843,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1779,
											"end": 1843,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 1779,
											"end": 1843,
											"name": "tag",
											"source": 5,
											"value": "307"
										},
										{
											"begin": 1779,
											"end": 1843,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1700,
											"end": 1849,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1700,
											"end": 1849,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1700,
											"end": 1849,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 3238,
											"end": 4201,
											"name": "tag",
											"source": 7,
											"value": "264"
										},
										{
											"begin": 3238,
											"end": 4201,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3378,
											"end": 3385,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3394,
											"end": 3410,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3413,
											"end": 3424,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 3413,
											"end": 3430,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3413,
											"end": 3430,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3413,
											"end": 3430,
											"name": "PUSH",
											"source": 7,
											"value": "D"
										},
										{
											"begin": 3413,
											"end": 3430,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3413,
											"end": 3430,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 3413,
											"end": 3430,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3413,
											"end": 3430,
											"name": "PUSH",
											"source": 7,
											"value": "100"
										},
										{
											"begin": 3413,
											"end": 3430,
											"name": "EXP",
											"source": 7
										},
										{
											"begin": 3413,
											"end": 3430,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3413,
											"end": 3430,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 3413,
											"end": 3430,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3413,
											"end": 3430,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 3394,
											"end": 3430,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3394,
											"end": 3430,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 3394,
											"end": 3430,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3394,
											"end": 3430,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3437,
											"end": 3462,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3465,
											"end": 3476,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 3465,
											"end": 3494,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3465,
											"end": 3494,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3465,
											"end": 3494,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3465,
											"end": 3494,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3465,
											"end": 3494,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 3465,
											"end": 3494,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3465,
											"end": 3494,
											"name": "PUSH",
											"source": 7,
											"value": "100"
										},
										{
											"begin": 3465,
											"end": 3494,
											"name": "EXP",
											"source": 7
										},
										{
											"begin": 3465,
											"end": 3494,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3465,
											"end": 3494,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 3465,
											"end": 3494,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3465,
											"end": 3494,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 3437,
											"end": 3494,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3437,
											"end": 3494,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 3437,
											"end": 3494,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3437,
											"end": 3494,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3501,
											"end": 3528,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3531,
											"end": 3542,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 3531,
											"end": 3562,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3531,
											"end": 3562,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3531,
											"end": 3562,
											"name": "PUSH",
											"source": 7,
											"value": "1A"
										},
										{
											"begin": 3531,
											"end": 3562,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3531,
											"end": 3562,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 3531,
											"end": 3562,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3531,
											"end": 3562,
											"name": "PUSH",
											"source": 7,
											"value": "100"
										},
										{
											"begin": 3531,
											"end": 3562,
											"name": "EXP",
											"source": 7
										},
										{
											"begin": 3531,
											"end": 3562,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3531,
											"end": 3562,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 3531,
											"end": 3562,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFF"
										},
										{
											"begin": 3531,
											"end": 3562,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 3501,
											"end": 3562,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFF"
										},
										{
											"begin": 3501,
											"end": 3562,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 3501,
											"end": 3562,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3501,
											"end": 3562,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3594,
											"end": 3613,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3575,
											"end": 3613,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3575,
											"end": 3613,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 3575,
											"end": 3590,
											"name": "TIMESTAMP",
											"source": 7
										},
										{
											"begin": 3575,
											"end": 3613,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 3571,
											"end": 3647,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 3571,
											"end": 3647,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "310"
										},
										{
											"begin": 3571,
											"end": 3647,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 3631,
											"end": 3639,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3624,
											"end": 3639,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 3624,
											"end": 3639,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3624,
											"end": 3639,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3624,
											"end": 3639,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3624,
											"end": 3639,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3624,
											"end": 3639,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "309"
										},
										{
											"begin": 3624,
											"end": 3639,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3571,
											"end": 3647,
											"name": "tag",
											"source": 7,
											"value": "310"
										},
										{
											"begin": 3571,
											"end": 3647,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3655,
											"end": 3671,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3681,
											"end": 3758,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "311"
										},
										{
											"begin": 3696,
											"end": 3704,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 3706,
											"end": 3723,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 3725,
											"end": 3744,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 3746,
											"end": 3757,
											"name": "DUP10",
											"source": 7
										},
										{
											"begin": 3681,
											"end": 3695,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "292"
										},
										{
											"begin": 3681,
											"end": 3758,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 3681,
											"end": 3758,
											"name": "tag",
											"source": 7,
											"value": "311"
										},
										{
											"begin": 3681,
											"end": 3758,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3655,
											"end": 3758,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3655,
											"end": 3758,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3783,
											"end": 3791,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 3771,
											"end": 3779,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3771,
											"end": 3791,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 3767,
											"end": 4172,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "312"
										},
										{
											"begin": 3767,
											"end": 4172,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 3831,
											"end": 3839,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3818,
											"end": 3826,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3810,
											"end": 3839,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3810,
											"end": 3839,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 3810,
											"end": 3839,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 3802,
											"end": 3858,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "313"
										},
										{
											"begin": 3802,
											"end": 3858,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 3802,
											"end": 3858,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3802,
											"end": 3858,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 3802,
											"end": 3858,
											"name": "PUSH",
											"source": 7,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3802,
											"end": 3858,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3802,
											"end": 3858,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3802,
											"end": 3858,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 3802,
											"end": 3858,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3802,
											"end": 3858,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "314"
										},
										{
											"begin": 3802,
											"end": 3858,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3802,
											"end": 3858,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "315"
										},
										{
											"begin": 3802,
											"end": 3858,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 3802,
											"end": 3858,
											"name": "tag",
											"source": 7,
											"value": "314"
										},
										{
											"begin": 3802,
											"end": 3858,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3802,
											"end": 3858,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3802,
											"end": 3858,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 3802,
											"end": 3858,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3802,
											"end": 3858,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3802,
											"end": 3858,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 3802,
											"end": 3858,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3802,
											"end": 3858,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 3802,
											"end": 3858,
											"name": "tag",
											"source": 7,
											"value": "313"
										},
										{
											"begin": 3802,
											"end": 3858,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3961,
											"end": 3969,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3933,
											"end": 3944,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 3933,
											"end": 3950,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3933,
											"end": 3950,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3933,
											"end": 3950,
											"name": "PUSH",
											"source": 7,
											"value": "D"
										},
										{
											"begin": 3933,
											"end": 3970,
											"name": "PUSH",
											"source": 7,
											"value": "100"
										},
										{
											"begin": 3933,
											"end": 3970,
											"name": "EXP",
											"source": 7
										},
										{
											"begin": 3933,
											"end": 3970,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3933,
											"end": 3970,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 3933,
											"end": 3970,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3933,
											"end": 3970,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3933,
											"end": 3970,
											"name": "MUL",
											"source": 7
										},
										{
											"begin": 3933,
											"end": 3970,
											"name": "NOT",
											"source": 7
										},
										{
											"begin": 3933,
											"end": 3970,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 3933,
											"end": 3970,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3933,
											"end": 3970,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 3933,
											"end": 3970,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3933,
											"end": 3970,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 3933,
											"end": 3970,
											"name": "MUL",
											"source": 7
										},
										{
											"begin": 3933,
											"end": 3970,
											"name": "OR",
											"source": 7
										},
										{
											"begin": 3933,
											"end": 3970,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3933,
											"end": 3970,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 3933,
											"end": 3970,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4020,
											"end": 4035,
											"name": "TIMESTAMP",
											"source": 7
										},
										{
											"begin": 3979,
											"end": 3990,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 3979,
											"end": 4010,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3979,
											"end": 4010,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3979,
											"end": 4010,
											"name": "PUSH",
											"source": 7,
											"value": "1A"
										},
										{
											"begin": 3979,
											"end": 4036,
											"name": "PUSH",
											"source": 7,
											"value": "100"
										},
										{
											"begin": 3979,
											"end": 4036,
											"name": "EXP",
											"source": 7
										},
										{
											"begin": 3979,
											"end": 4036,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3979,
											"end": 4036,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 3979,
											"end": 4036,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3979,
											"end": 4036,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFF"
										},
										{
											"begin": 3979,
											"end": 4036,
											"name": "MUL",
											"source": 7
										},
										{
											"begin": 3979,
											"end": 4036,
											"name": "NOT",
											"source": 7
										},
										{
											"begin": 3979,
											"end": 4036,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 3979,
											"end": 4036,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3979,
											"end": 4036,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 3979,
											"end": 4036,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFF"
										},
										{
											"begin": 3979,
											"end": 4036,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 3979,
											"end": 4036,
											"name": "MUL",
											"source": 7
										},
										{
											"begin": 3979,
											"end": 4036,
											"name": "OR",
											"source": 7
										},
										{
											"begin": 3979,
											"end": 4036,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3979,
											"end": 4036,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 3979,
											"end": 4036,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4068,
											"end": 4073,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 4050,
											"end": 4084,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4050,
											"end": 4084,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 4050,
											"end": 4084,
											"name": "PUSH",
											"source": 7,
											"value": "5777CA300DFE5BEAD41006FBCE4389794DBC0ED8D6CCCEBFAF94630AA04184BC"
										},
										{
											"begin": 4075,
											"end": 4083,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4050,
											"end": 4084,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 4050,
											"end": 4084,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 4050,
											"end": 4084,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "316"
										},
										{
											"begin": 4050,
											"end": 4084,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4050,
											"end": 4084,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4050,
											"end": 4084,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "38"
										},
										{
											"begin": 4050,
											"end": 4084,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 4050,
											"end": 4084,
											"name": "tag",
											"source": 7,
											"value": "316"
										},
										{
											"begin": 4050,
											"end": 4084,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4050,
											"end": 4084,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 4050,
											"end": 4084,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 4050,
											"end": 4084,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 4050,
											"end": 4084,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4050,
											"end": 4084,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 4050,
											"end": 4084,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4050,
											"end": 4084,
											"name": "LOG2",
											"source": 7
										},
										{
											"begin": 3767,
											"end": 4172,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "317"
										},
										{
											"begin": 3767,
											"end": 4172,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3767,
											"end": 4172,
											"name": "tag",
											"source": 7,
											"value": "312"
										},
										{
											"begin": 3767,
											"end": 4172,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4148,
											"end": 4163,
											"name": "TIMESTAMP",
											"source": 7
										},
										{
											"begin": 4107,
											"end": 4118,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 4107,
											"end": 4138,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4107,
											"end": 4138,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4107,
											"end": 4138,
											"name": "PUSH",
											"source": 7,
											"value": "1A"
										},
										{
											"begin": 4107,
											"end": 4164,
											"name": "PUSH",
											"source": 7,
											"value": "100"
										},
										{
											"begin": 4107,
											"end": 4164,
											"name": "EXP",
											"source": 7
										},
										{
											"begin": 4107,
											"end": 4164,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4107,
											"end": 4164,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 4107,
											"end": 4164,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4107,
											"end": 4164,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFF"
										},
										{
											"begin": 4107,
											"end": 4164,
											"name": "MUL",
											"source": 7
										},
										{
											"begin": 4107,
											"end": 4164,
											"name": "NOT",
											"source": 7
										},
										{
											"begin": 4107,
											"end": 4164,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 4107,
											"end": 4164,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4107,
											"end": 4164,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 4107,
											"end": 4164,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFF"
										},
										{
											"begin": 4107,
											"end": 4164,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 4107,
											"end": 4164,
											"name": "MUL",
											"source": 7
										},
										{
											"begin": 4107,
											"end": 4164,
											"name": "OR",
											"source": 7
										},
										{
											"begin": 4107,
											"end": 4164,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4107,
											"end": 4164,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 4107,
											"end": 4164,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3767,
											"end": 4172,
											"name": "tag",
											"source": 7,
											"value": "317"
										},
										{
											"begin": 3767,
											"end": 4172,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4187,
											"end": 4195,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 4180,
											"end": 4195,
											"name": "SWAP5",
											"source": 7
										},
										{
											"begin": 4180,
											"end": 4195,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4180,
											"end": 4195,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4180,
											"end": 4195,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4180,
											"end": 4195,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4180,
											"end": 4195,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3238,
											"end": 4201,
											"name": "tag",
											"source": 7,
											"value": "309"
										},
										{
											"begin": 3238,
											"end": 4201,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3238,
											"end": 4201,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 3238,
											"end": 4201,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 3238,
											"end": 4201,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3238,
											"end": 4201,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3238,
											"end": 4201,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3238,
											"end": 4201,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 7402,
											"end": 7644,
											"name": "tag",
											"source": 7,
											"value": "268"
										},
										{
											"begin": 7402,
											"end": 7644,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7537,
											"end": 7544,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 783,
											"end": 785,
											"name": "PUSH",
											"source": 7,
											"value": "12"
										},
										{
											"begin": 7620,
											"end": 7638,
											"name": "PUSH",
											"source": 7,
											"value": "FF"
										},
										{
											"begin": 7620,
											"end": 7638,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 7616,
											"end": 7618,
											"name": "PUSH",
											"source": 7,
											"value": "A"
										},
										{
											"begin": 7616,
											"end": 7638,
											"name": "EXP",
											"source": 7
										},
										{
											"begin": 7560,
											"end": 7613,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "319"
										},
										{
											"begin": 7585,
											"end": 7612,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "320"
										},
										{
											"begin": 7602,
											"end": 7611,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 7585,
											"end": 7597,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 7585,
											"end": 7601,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "321"
										},
										{
											"begin": 7585,
											"end": 7601,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7585,
											"end": 7612,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 7585,
											"end": 7612,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7585,
											"end": 7612,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFF"
										},
										{
											"begin": 7585,
											"end": 7612,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 7585,
											"end": 7612,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 7585,
											"end": 7612,
											"name": "tag",
											"source": 7,
											"value": "320"
										},
										{
											"begin": 7585,
											"end": 7612,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7560,
											"end": 7580,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 7560,
											"end": 7584,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "322"
										},
										{
											"begin": 7560,
											"end": 7584,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7560,
											"end": 7613,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 7560,
											"end": 7613,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7560,
											"end": 7613,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFF"
										},
										{
											"begin": 7560,
											"end": 7613,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 7560,
											"end": 7613,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 7560,
											"end": 7613,
											"name": "tag",
											"source": 7,
											"value": "319"
										},
										{
											"begin": 7560,
											"end": 7613,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7560,
											"end": 7638,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 7560,
											"end": 7638,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "323"
										},
										{
											"begin": 7560,
											"end": 7638,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 7560,
											"end": 7638,
											"name": "INVALID",
											"source": 7
										},
										{
											"begin": 7560,
											"end": 7638,
											"name": "tag",
											"source": 7,
											"value": "323"
										},
										{
											"begin": 7560,
											"end": 7638,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7560,
											"end": 7638,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 7553,
											"end": 7638,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7553,
											"end": 7638,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7402,
											"end": 7644,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 7402,
											"end": 7644,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 7402,
											"end": 7644,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7402,
											"end": 7644,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7402,
											"end": 7644,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7402,
											"end": 7644,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 8107,
											"end": 8868,
											"name": "tag",
											"source": 7,
											"value": "292"
										},
										{
											"begin": 8107,
											"end": 8868,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8279,
											"end": 8286,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 8295,
											"end": 8318,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 8321,
											"end": 8337,
											"name": "PUSH",
											"source": 7,
											"value": "34"
										},
										{
											"begin": 8321,
											"end": 8337,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 8295,
											"end": 8337,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 8295,
											"end": 8337,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8377,
											"end": 8378,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 8356,
											"end": 8373,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 8356,
											"end": 8378,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 8356,
											"end": 8406,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 8356,
											"end": 8406,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "325"
										},
										{
											"begin": 8356,
											"end": 8406,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 8356,
											"end": 8406,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8405,
											"end": 8406,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 8389,
											"end": 8401,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 8389,
											"end": 8406,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 8356,
											"end": 8406,
											"name": "tag",
											"source": 7,
											"value": "325"
										},
										{
											"begin": 8356,
											"end": 8406,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8356,
											"end": 8455,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 8356,
											"end": 8455,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "326"
										},
										{
											"begin": 8356,
											"end": 8455,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 8356,
											"end": 8455,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8440,
											"end": 8455,
											"name": "TIMESTAMP",
											"source": 7
										},
										{
											"begin": 8417,
											"end": 8436,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 8417,
											"end": 8455,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8417,
											"end": 8455,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 8417,
											"end": 8455,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 8356,
											"end": 8455,
											"name": "tag",
											"source": 7,
											"value": "326"
										},
										{
											"begin": 8356,
											"end": 8455,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8356,
											"end": 8504,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 8356,
											"end": 8504,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "327"
										},
										{
											"begin": 8356,
											"end": 8504,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 8356,
											"end": 8504,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8489,
											"end": 8504,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 8466,
											"end": 8485,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 8466,
											"end": 8504,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8466,
											"end": 8504,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 8466,
											"end": 8504,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 8466,
											"end": 8504,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 8356,
											"end": 8504,
											"name": "tag",
											"source": 7,
											"value": "327"
										},
										{
											"begin": 8356,
											"end": 8504,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8344,
											"end": 8548,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 8344,
											"end": 8548,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "328"
										},
										{
											"begin": 8344,
											"end": 8548,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 8528,
											"end": 8540,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 8521,
											"end": 8540,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 8521,
											"end": 8540,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8521,
											"end": 8540,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8521,
											"end": 8540,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "324"
										},
										{
											"begin": 8521,
											"end": 8540,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8344,
											"end": 8548,
											"name": "tag",
											"source": 7,
											"value": "328"
										},
										{
											"begin": 8344,
											"end": 8548,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8556,
											"end": 8580,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 8608,
											"end": 8623,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 8590,
											"end": 8605,
											"name": "TIMESTAMP",
											"source": 7
										},
										{
											"begin": 8590,
											"end": 8623,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 8590,
											"end": 8659,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "329"
										},
										{
											"begin": 8590,
											"end": 8659,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 8644,
											"end": 8659,
											"name": "TIMESTAMP",
											"source": 7
										},
										{
											"begin": 8590,
											"end": 8659,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "330"
										},
										{
											"begin": 8590,
											"end": 8659,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8590,
											"end": 8659,
											"name": "tag",
											"source": 7,
											"value": "329"
										},
										{
											"begin": 8590,
											"end": 8659,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8626,
											"end": 8641,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 8590,
											"end": 8659,
											"name": "tag",
											"source": 7,
											"value": "330"
										},
										{
											"begin": 8590,
											"end": 8659,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8556,
											"end": 8659,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 8556,
											"end": 8659,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8666,
											"end": 8683,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 8686,
											"end": 8727,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "331"
										},
										{
											"begin": 8707,
											"end": 8726,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 8686,
											"end": 8727,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8686,
											"end": 8727,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 8686,
											"end": 8702,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 8686,
											"end": 8706,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "321"
										},
										{
											"begin": 8686,
											"end": 8706,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 8686,
											"end": 8727,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 8686,
											"end": 8727,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 8686,
											"end": 8727,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFF"
										},
										{
											"begin": 8686,
											"end": 8727,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 8686,
											"end": 8727,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 8686,
											"end": 8727,
											"name": "tag",
											"source": 7,
											"value": "331"
										},
										{
											"begin": 8686,
											"end": 8727,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8666,
											"end": 8727,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 8666,
											"end": 8727,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8748,
											"end": 8862,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "332"
										},
										{
											"begin": 8841,
											"end": 8853,
											"name": "DUP9",
											"source": 7
										},
										{
											"begin": 8748,
											"end": 8826,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "333"
										},
										{
											"begin": 8813,
											"end": 8825,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 8748,
											"end": 8808,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "334"
										},
										{
											"begin": 783,
											"end": 785,
											"name": "PUSH",
											"source": 7,
											"value": "12"
										},
										{
											"begin": 8789,
											"end": 8807,
											"name": "PUSH",
											"source": 7,
											"value": "FF"
										},
										{
											"begin": 8789,
											"end": 8807,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 8785,
											"end": 8787,
											"name": "PUSH",
											"source": 7,
											"value": "A"
										},
										{
											"begin": 8785,
											"end": 8807,
											"name": "EXP",
											"source": 7
										},
										{
											"begin": 8748,
											"end": 8780,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "335"
										},
										{
											"begin": 8770,
											"end": 8779,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 8748,
											"end": 8765,
											"name": "DUP15",
											"source": 7
										},
										{
											"begin": 8748,
											"end": 8769,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "322"
										},
										{
											"begin": 8748,
											"end": 8769,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 8748,
											"end": 8780,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 8748,
											"end": 8780,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 8748,
											"end": 8780,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFF"
										},
										{
											"begin": 8748,
											"end": 8780,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 8748,
											"end": 8780,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 8748,
											"end": 8780,
											"name": "tag",
											"source": 7,
											"value": "335"
										},
										{
											"begin": 8748,
											"end": 8780,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8748,
											"end": 8784,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "322"
										},
										{
											"begin": 8748,
											"end": 8784,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 8748,
											"end": 8808,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 8748,
											"end": 8808,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 8748,
											"end": 8808,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFF"
										},
										{
											"begin": 8748,
											"end": 8808,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 8748,
											"end": 8808,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 8748,
											"end": 8808,
											"name": "tag",
											"source": 7,
											"value": "334"
										},
										{
											"begin": 8748,
											"end": 8808,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8748,
											"end": 8812,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "336"
										},
										{
											"begin": 8748,
											"end": 8812,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 8748,
											"end": 8826,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 8748,
											"end": 8826,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 8748,
											"end": 8826,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFF"
										},
										{
											"begin": 8748,
											"end": 8826,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 8748,
											"end": 8826,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 8748,
											"end": 8826,
											"name": "tag",
											"source": 7,
											"value": "333"
										},
										{
											"begin": 8748,
											"end": 8826,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8748,
											"end": 8830,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "130"
										},
										{
											"begin": 8748,
											"end": 8830,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 8748,
											"end": 8862,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 8748,
											"end": 8862,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 8748,
											"end": 8862,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFF"
										},
										{
											"begin": 8748,
											"end": 8862,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 8748,
											"end": 8862,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 8748,
											"end": 8862,
											"name": "tag",
											"source": 7,
											"value": "332"
										},
										{
											"begin": 8748,
											"end": 8862,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8734,
											"end": 8862,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 8734,
											"end": 8862,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8734,
											"end": 8862,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8734,
											"end": 8862,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8734,
											"end": 8862,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8107,
											"end": 8868,
											"name": "tag",
											"source": 7,
											"value": "324"
										},
										{
											"begin": 8107,
											"end": 8868,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8107,
											"end": 8868,
											"name": "SWAP5",
											"source": 7
										},
										{
											"begin": 8107,
											"end": 8868,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 8107,
											"end": 8868,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8107,
											"end": 8868,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8107,
											"end": 8868,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8107,
											"end": 8868,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8107,
											"end": 8868,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 978,
											"end": 1194,
											"name": "tag",
											"source": 2,
											"value": "308"
										},
										{
											"begin": 978,
											"end": 1194,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1094,
											"end": 1189,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "338"
										},
										{
											"begin": 1113,
											"end": 1118,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 1143,
											"end": 1170,
											"name": "PUSH",
											"source": 2,
											"value": "23B872DD"
										},
										{
											"begin": 1143,
											"end": 1170,
											"name": "PUSH",
											"source": 2,
											"value": "E0"
										},
										{
											"begin": 1143,
											"end": 1170,
											"name": "SHL",
											"source": 2
										},
										{
											"begin": 1172,
											"end": 1176,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 1178,
											"end": 1180,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 1182,
											"end": 1187,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 1120,
											"end": 1188,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1120,
											"end": 1188,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1120,
											"end": 1188,
											"name": "PUSH",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 1120,
											"end": 1188,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1120,
											"end": 1188,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1120,
											"end": 1188,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 1120,
											"end": 1188,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1120,
											"end": 1188,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1120,
											"end": 1188,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1120,
											"end": 1188,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1120,
											"end": 1188,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1120,
											"end": 1188,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1120,
											"end": 1188,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1120,
											"end": 1188,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1120,
											"end": 1188,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1120,
											"end": 1188,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1120,
											"end": 1188,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1120,
											"end": 1188,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1120,
											"end": 1188,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1120,
											"end": 1188,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1120,
											"end": 1188,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1120,
											"end": 1188,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1120,
											"end": 1188,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1120,
											"end": 1188,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1120,
											"end": 1188,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 1120,
											"end": 1188,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1120,
											"end": 1188,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1120,
											"end": 1188,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1120,
											"end": 1188,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1120,
											"end": 1188,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1120,
											"end": 1188,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1120,
											"end": 1188,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1120,
											"end": 1188,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1120,
											"end": 1188,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1120,
											"end": 1188,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1120,
											"end": 1188,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1120,
											"end": 1188,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1120,
											"end": 1188,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1120,
											"end": 1188,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1120,
											"end": 1188,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1120,
											"end": 1188,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1120,
											"end": 1188,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1120,
											"end": 1188,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1120,
											"end": 1188,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 1120,
											"end": 1188,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1120,
											"end": 1188,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1120,
											"end": 1188,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1120,
											"end": 1188,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1120,
											"end": 1188,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1120,
											"end": 1188,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1120,
											"end": 1188,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1120,
											"end": 1188,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1120,
											"end": 1188,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1120,
											"end": 1188,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1120,
											"end": 1188,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1120,
											"end": 1188,
											"name": "OR",
											"source": 2
										},
										{
											"begin": 1120,
											"end": 1188,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1120,
											"end": 1188,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1120,
											"end": 1188,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1120,
											"end": 1188,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1120,
											"end": 1188,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1120,
											"end": 1188,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1094,
											"end": 1112,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "339"
										},
										{
											"begin": 1094,
											"end": 1189,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1094,
											"end": 1189,
											"name": "tag",
											"source": 2,
											"value": "338"
										},
										{
											"begin": 1094,
											"end": 1189,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 978,
											"end": 1194,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 978,
											"end": 1194,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 978,
											"end": 1194,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 978,
											"end": 1194,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 978,
											"end": 1194,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 743,
											"end": 856,
											"name": "tag",
											"source": 12,
											"value": "321"
										},
										{
											"begin": 743,
											"end": 856,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 801,
											"end": 810,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 846,
											"end": 847,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 840,
											"end": 841,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 836,
											"end": 837,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 836,
											"end": 841,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 832,
											"end": 841,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 832,
											"end": 841,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 832,
											"end": 841,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 831,
											"end": 847,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 831,
											"end": 847,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 823,
											"end": 848,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "341"
										},
										{
											"begin": 823,
											"end": 848,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 823,
											"end": 848,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 823,
											"end": 848,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 823,
											"end": 848,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 823,
											"end": 848,
											"name": "tag",
											"source": 12,
											"value": "341"
										},
										{
											"begin": 823,
											"end": 848,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 743,
											"end": 856,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 743,
											"end": 856,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 743,
											"end": 856,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 743,
											"end": 856,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 743,
											"end": 856,
											"name": "JUMP",
											"source": 12,
											"value": "[out]"
										},
										{
											"begin": 1027,
											"end": 1154,
											"name": "tag",
											"source": 12,
											"value": "322"
										},
										{
											"begin": 1027,
											"end": 1154,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1085,
											"end": 1094,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1120,
											"end": 1121,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1115,
											"end": 1116,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 1115,
											"end": 1121,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 1115,
											"end": 1145,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1115,
											"end": 1145,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "343"
										},
										{
											"begin": 1115,
											"end": 1145,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 1115,
											"end": 1145,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1144,
											"end": 1145,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1139,
											"end": 1140,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 1134,
											"end": 1135,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 1130,
											"end": 1131,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 1130,
											"end": 1135,
											"name": "MUL",
											"source": 12
										},
										{
											"begin": 1126,
											"end": 1135,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 1126,
											"end": 1135,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1126,
											"end": 1135,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 1125,
											"end": 1140,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1125,
											"end": 1140,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "344"
										},
										{
											"begin": 1125,
											"end": 1140,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 1125,
											"end": 1140,
											"name": "INVALID",
											"source": 12
										},
										{
											"begin": 1125,
											"end": 1140,
											"name": "tag",
											"source": 12,
											"value": "344"
										},
										{
											"begin": 1125,
											"end": 1140,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1125,
											"end": 1140,
											"name": "DIV",
											"source": 12
										},
										{
											"begin": 1125,
											"end": 1145,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 1115,
											"end": 1145,
											"name": "tag",
											"source": 12,
											"value": "343"
										},
										{
											"begin": 1115,
											"end": 1145,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1107,
											"end": 1146,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "345"
										},
										{
											"begin": 1107,
											"end": 1146,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 1107,
											"end": 1146,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1107,
											"end": 1146,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1107,
											"end": 1146,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 1107,
											"end": 1146,
											"name": "tag",
											"source": 12,
											"value": "345"
										},
										{
											"begin": 1107,
											"end": 1146,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1027,
											"end": 1154,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 1027,
											"end": 1154,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1027,
											"end": 1154,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1027,
											"end": 1154,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1027,
											"end": 1154,
											"name": "JUMP",
											"source": 12,
											"value": "[out]"
										},
										{
											"begin": 1162,
											"end": 1336,
											"name": "tag",
											"source": 12,
											"value": "336"
										},
										{
											"begin": 1162,
											"end": 1336,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1219,
											"end": 1226,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1327,
											"end": 1328,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1323,
											"end": 1324,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 1323,
											"end": 1328,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1323,
											"end": 1328,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "347"
										},
										{
											"begin": 1323,
											"end": 1328,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 1323,
											"end": 1328,
											"name": "INVALID",
											"source": 12
										},
										{
											"begin": 1323,
											"end": 1328,
											"name": "tag",
											"source": 12,
											"value": "347"
										},
										{
											"begin": 1323,
											"end": 1328,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1323,
											"end": 1328,
											"name": "DIV",
											"source": 12
										},
										{
											"begin": 1316,
											"end": 1328,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1316,
											"end": 1328,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1162,
											"end": 1336,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 1162,
											"end": 1336,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1162,
											"end": 1336,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1162,
											"end": 1336,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1162,
											"end": 1336,
											"name": "JUMP",
											"source": 12,
											"value": "[out]"
										},
										{
											"begin": 1547,
											"end": 2102,
											"name": "tag",
											"source": 2,
											"value": "339"
										},
										{
											"begin": 1547,
											"end": 2102,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1630,
											"end": 1657,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "349"
										},
										{
											"begin": 1638,
											"end": 1643,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1630,
											"end": 1655,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1630,
											"end": 1655,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1630,
											"end": 1655,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "350"
										},
										{
											"begin": 1630,
											"end": 1657,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1630,
											"end": 1657,
											"name": "tag",
											"source": 2,
											"value": "349"
										},
										{
											"begin": 1630,
											"end": 1657,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1622,
											"end": 1693,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "351"
										},
										{
											"begin": 1622,
											"end": 1693,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1622,
											"end": 1693,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1622,
											"end": 1693,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1622,
											"end": 1693,
											"name": "PUSH",
											"source": 2,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1622,
											"end": 1693,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1622,
											"end": 1693,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1622,
											"end": 1693,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1622,
											"end": 1693,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1622,
											"end": 1693,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1622,
											"end": 1693,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1622,
											"end": 1693,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1622,
											"end": 1693,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1622,
											"end": 1693,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1622,
											"end": 1693,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1622,
											"end": 1693,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1622,
											"end": 1693,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1622,
											"end": 1693,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1622,
											"end": 1693,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 1622,
											"end": 1693,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1622,
											"end": 1693,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1622,
											"end": 1693,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1622,
											"end": 1693,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1622,
											"end": 1693,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1622,
											"end": 1693,
											"name": "PUSH",
											"source": 2,
											"value": "5361666545524332303A2063616C6C20746F206E6F6E2D636F6E747261637400"
										},
										{
											"begin": 1622,
											"end": 1693,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1622,
											"end": 1693,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1622,
											"end": 1693,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1622,
											"end": 1693,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1622,
											"end": 1693,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1622,
											"end": 1693,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1622,
											"end": 1693,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1622,
											"end": 1693,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1622,
											"end": 1693,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1622,
											"end": 1693,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1622,
											"end": 1693,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1622,
											"end": 1693,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1622,
											"end": 1693,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1622,
											"end": 1693,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1622,
											"end": 1693,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1622,
											"end": 1693,
											"name": "tag",
											"source": 2,
											"value": "351"
										},
										{
											"begin": 1622,
											"end": 1693,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1756,
											"end": 1768,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1770,
											"end": 1793,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 1805,
											"end": 1810,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1797,
											"end": 1816,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1797,
											"end": 1816,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1817,
											"end": 1821,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1797,
											"end": 1822,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1797,
											"end": 1822,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1797,
											"end": 1822,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1797,
											"end": 1822,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1797,
											"end": 1822,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1797,
											"end": 1822,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1797,
											"end": 1822,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1797,
											"end": 1822,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1797,
											"end": 1822,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1797,
											"end": 1822,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1797,
											"end": 1822,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1797,
											"end": 1822,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1797,
											"end": 1822,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1797,
											"end": 1822,
											"name": "tag",
											"source": 2,
											"value": "352"
										},
										{
											"begin": 1797,
											"end": 1822,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1797,
											"end": 1822,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1797,
											"end": 1822,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1797,
											"end": 1822,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 1797,
											"end": 1822,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "354"
										},
										{
											"begin": 1797,
											"end": 1822,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1797,
											"end": 1822,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1797,
											"end": 1822,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1797,
											"end": 1822,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1797,
											"end": 1822,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1797,
											"end": 1822,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1797,
											"end": 1822,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1797,
											"end": 1822,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1797,
											"end": 1822,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1797,
											"end": 1822,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1797,
											"end": 1822,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1797,
											"end": 1822,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1797,
											"end": 1822,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1797,
											"end": 1822,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1797,
											"end": 1822,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1797,
											"end": 1822,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1797,
											"end": 1822,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1797,
											"end": 1822,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1797,
											"end": 1822,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 1797,
											"end": 1822,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1797,
											"end": 1822,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "352"
										},
										{
											"begin": 1797,
											"end": 1822,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1797,
											"end": 1822,
											"name": "tag",
											"source": 2,
											"value": "354"
										},
										{
											"begin": 1797,
											"end": 1822,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1797,
											"end": 1822,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 1797,
											"end": 1822,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1797,
											"end": 1822,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1797,
											"end": 1822,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1797,
											"end": 1822,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 1797,
											"end": 1822,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 1797,
											"end": 1822,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1797,
											"end": 1822,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1797,
											"end": 1822,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 1797,
											"end": 1822,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1797,
											"end": 1822,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1797,
											"end": 1822,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1797,
											"end": 1822,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1797,
											"end": 1822,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 1797,
											"end": 1822,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1797,
											"end": 1822,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1797,
											"end": 1822,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1797,
											"end": 1822,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1797,
											"end": 1822,
											"name": "OR",
											"source": 2
										},
										{
											"begin": 1797,
											"end": 1822,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 1797,
											"end": 1822,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1797,
											"end": 1822,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1797,
											"end": 1822,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1797,
											"end": 1822,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1797,
											"end": 1822,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1797,
											"end": 1822,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1797,
											"end": 1822,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1797,
											"end": 1822,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1797,
											"end": 1822,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1797,
											"end": 1822,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1797,
											"end": 1822,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1797,
											"end": 1822,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1797,
											"end": 1822,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1797,
											"end": 1822,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1797,
											"end": 1822,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1797,
											"end": 1822,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1797,
											"end": 1822,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1797,
											"end": 1822,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1797,
											"end": 1822,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1797,
											"end": 1822,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1797,
											"end": 1822,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1797,
											"end": 1822,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 1797,
											"end": 1822,
											"name": "GAS",
											"source": 2
										},
										{
											"begin": 1797,
											"end": 1822,
											"name": "CALL",
											"source": 2
										},
										{
											"begin": 1797,
											"end": 1822,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1797,
											"end": 1822,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1797,
											"end": 1822,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1797,
											"end": 1822,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 1797,
											"end": 1822,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1797,
											"end": 1822,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1797,
											"end": 1822,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1797,
											"end": 1822,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 1797,
											"end": 1822,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "357"
										},
										{
											"begin": 1797,
											"end": 1822,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1797,
											"end": 1822,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1797,
											"end": 1822,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1797,
											"end": 1822,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1797,
											"end": 1822,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1797,
											"end": 1822,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 1797,
											"end": 1822,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 1797,
											"end": 1822,
											"name": "PUSH",
											"source": 2,
											"value": "3F"
										},
										{
											"begin": 1797,
											"end": 1822,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 1797,
											"end": 1822,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1797,
											"end": 1822,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1797,
											"end": 1822,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1797,
											"end": 1822,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1797,
											"end": 1822,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1797,
											"end": 1822,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1797,
											"end": 1822,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 1797,
											"end": 1822,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1797,
											"end": 1822,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1797,
											"end": 1822,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 1797,
											"end": 1822,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1797,
											"end": 1822,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1797,
											"end": 1822,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 1797,
											"end": 1822,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1797,
											"end": 1822,
											"name": "RETURNDATACOPY",
											"source": 2
										},
										{
											"begin": 1797,
											"end": 1822,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "356"
										},
										{
											"begin": 1797,
											"end": 1822,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1797,
											"end": 1822,
											"name": "tag",
											"source": 2,
											"value": "357"
										},
										{
											"begin": 1797,
											"end": 1822,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1797,
											"end": 1822,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 1797,
											"end": 1822,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1797,
											"end": 1822,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1797,
											"end": 1822,
											"name": "tag",
											"source": 2,
											"value": "356"
										},
										{
											"begin": 1797,
											"end": 1822,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1797,
											"end": 1822,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1755,
											"end": 1822,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1755,
											"end": 1822,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1755,
											"end": 1822,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1755,
											"end": 1822,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1836,
											"end": 1843,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1828,
											"end": 1880,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "358"
										},
										{
											"begin": 1828,
											"end": 1880,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1828,
											"end": 1880,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1828,
											"end": 1880,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1828,
											"end": 1880,
											"name": "PUSH",
											"source": 2,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1828,
											"end": 1880,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1828,
											"end": 1880,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1828,
											"end": 1880,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1828,
											"end": 1880,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1828,
											"end": 1880,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1828,
											"end": 1880,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1828,
											"end": 1880,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1828,
											"end": 1880,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1828,
											"end": 1880,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1828,
											"end": 1880,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1828,
											"end": 1880,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1828,
											"end": 1880,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1828,
											"end": 1880,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1828,
											"end": 1880,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1828,
											"end": 1880,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1828,
											"end": 1880,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1828,
											"end": 1880,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1828,
											"end": 1880,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1828,
											"end": 1880,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1828,
											"end": 1880,
											"name": "PUSH",
											"source": 2,
											"value": "5361666545524332303A206C6F772D6C6576656C2063616C6C206661696C6564"
										},
										{
											"begin": 1828,
											"end": 1880,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1828,
											"end": 1880,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1828,
											"end": 1880,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1828,
											"end": 1880,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1828,
											"end": 1880,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1828,
											"end": 1880,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1828,
											"end": 1880,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1828,
											"end": 1880,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1828,
											"end": 1880,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1828,
											"end": 1880,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1828,
											"end": 1880,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1828,
											"end": 1880,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1828,
											"end": 1880,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1828,
											"end": 1880,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1828,
											"end": 1880,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1828,
											"end": 1880,
											"name": "tag",
											"source": 2,
											"value": "358"
										},
										{
											"begin": 1828,
											"end": 1880,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1911,
											"end": 1912,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1891,
											"end": 1901,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1891,
											"end": 1908,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1891,
											"end": 1912,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 1887,
											"end": 2098,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1887,
											"end": 2098,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "359"
										},
										{
											"begin": 1887,
											"end": 2098,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2025,
											"end": 2035,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2014,
											"end": 2044,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2014,
											"end": 2044,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2014,
											"end": 2044,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2014,
											"end": 2044,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2014,
											"end": 2044,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2014,
											"end": 2044,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2014,
											"end": 2044,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2014,
											"end": 2044,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 2014,
											"end": 2044,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2014,
											"end": 2044,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "360"
										},
										{
											"begin": 2014,
											"end": 2044,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2014,
											"end": 2044,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2014,
											"end": 2044,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2014,
											"end": 2044,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 2014,
											"end": 2044,
											"name": "tag",
											"source": 2,
											"value": "360"
										},
										{
											"begin": 2014,
											"end": 2044,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2014,
											"end": 2044,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2014,
											"end": 2044,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2014,
											"end": 2044,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2014,
											"end": 2044,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2014,
											"end": 2044,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2014,
											"end": 2044,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2014,
											"end": 2044,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2014,
											"end": 2044,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2014,
											"end": 2044,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2014,
											"end": 2044,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2014,
											"end": 2044,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 2014,
											"end": 2044,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2014,
											"end": 2044,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2014,
											"end": 2044,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2014,
											"end": 2044,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2014,
											"end": 2044,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2006,
											"end": 2091,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "361"
										},
										{
											"begin": 2006,
											"end": 2091,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2006,
											"end": 2091,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2006,
											"end": 2091,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2006,
											"end": 2091,
											"name": "PUSH",
											"source": 2,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2006,
											"end": 2091,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2006,
											"end": 2091,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2006,
											"end": 2091,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2006,
											"end": 2091,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2006,
											"end": 2091,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2006,
											"end": 2091,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2006,
											"end": 2091,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2006,
											"end": 2091,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2006,
											"end": 2091,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2006,
											"end": 2091,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2006,
											"end": 2091,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2006,
											"end": 2091,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2006,
											"end": 2091,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2006,
											"end": 2091,
											"name": "PUSH",
											"source": 2,
											"value": "2A"
										},
										{
											"begin": 2006,
											"end": 2091,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2006,
											"end": 2091,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2006,
											"end": 2091,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2006,
											"end": 2091,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2006,
											"end": 2091,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2006,
											"end": 2091,
											"name": "PUSH data",
											"source": 2,
											"value": "E11AD79D1E4A7F2E5F376964CB99E8E8F7904E3FC16A109F7A7ECB9AA7956DCD"
										},
										{
											"begin": 2006,
											"end": 2091,
											"name": "PUSH",
											"source": 2,
											"value": "2A"
										},
										{
											"begin": 2006,
											"end": 2091,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2006,
											"end": 2091,
											"name": "CODECOPY",
											"source": 2
										},
										{
											"begin": 2006,
											"end": 2091,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2006,
											"end": 2091,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2006,
											"end": 2091,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2006,
											"end": 2091,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2006,
											"end": 2091,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2006,
											"end": 2091,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2006,
											"end": 2091,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2006,
											"end": 2091,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2006,
											"end": 2091,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2006,
											"end": 2091,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2006,
											"end": 2091,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2006,
											"end": 2091,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 2006,
											"end": 2091,
											"name": "tag",
											"source": 2,
											"value": "361"
										},
										{
											"begin": 2006,
											"end": 2091,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1887,
											"end": 2098,
											"name": "tag",
											"source": 2,
											"value": "359"
										},
										{
											"begin": 1887,
											"end": 2098,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1547,
											"end": 2102,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1547,
											"end": 2102,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1547,
											"end": 2102,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1547,
											"end": 2102,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1547,
											"end": 2102,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 743,
											"end": 1329,
											"name": "tag",
											"source": 1,
											"value": "350"
										},
										{
											"begin": 743,
											"end": 1329,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 803,
											"end": 807,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1045,
											"end": 1061,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1067,
											"end": 1086,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1089,
											"end": 1155,
											"name": "PUSH",
											"source": 1,
											"value": "C5D2460186F7233C927E7DB2DCC703C0E500B653CA82273B7BFAD8045D85A470"
										},
										{
											"begin": 1067,
											"end": 1155,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1067,
											"end": 1155,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 1067,
											"end": 1155,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1067,
											"end": 1155,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1254,
											"end": 1261,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1242,
											"end": 1262,
											"name": "EXTCODEHASH",
											"source": 1
										},
										{
											"begin": 1230,
											"end": 1262,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1230,
											"end": 1262,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1293,
											"end": 1304,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1281,
											"end": 1289,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1281,
											"end": 1304,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1281,
											"end": 1304,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1281,
											"end": 1323,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1281,
											"end": 1323,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1281,
											"end": 1323,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "363"
										},
										{
											"begin": 1281,
											"end": 1323,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1281,
											"end": 1323,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1320,
											"end": 1323,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1308,
											"end": 1323,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1308,
											"end": 1323,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 1308,
											"end": 1316,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1308,
											"end": 1323,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1308,
											"end": 1323,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1281,
											"end": 1323,
											"name": "tag",
											"source": 1,
											"value": "363"
										},
										{
											"begin": 1281,
											"end": 1323,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1273,
											"end": 1324,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1273,
											"end": 1324,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1273,
											"end": 1324,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1273,
											"end": 1324,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 743,
											"end": 1329,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 743,
											"end": 1329,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 743,
											"end": 1329,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 743,
											"end": 1329,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "164"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "60"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "AND",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "AND",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMP",
											"source": -1,
											"value": "[out]"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "193"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "60"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "AND",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMP",
											"source": -1,
											"value": "[out]"
										},
										{
											"begin": 7,
											"end": 146,
											"name": "tag",
											"source": 13,
											"value": "365"
										},
										{
											"begin": 7,
											"end": 146,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7,
											"end": 146,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 91,
											"end": 97,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 78,
											"end": 98,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": 69,
											"end": 98,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 69,
											"end": 98,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 107,
											"end": 140,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "367"
										},
										{
											"begin": 134,
											"end": 139,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 107,
											"end": 140,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "368"
										},
										{
											"begin": 107,
											"end": 140,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 107,
											"end": 140,
											"name": "tag",
											"source": 13,
											"value": "367"
										},
										{
											"begin": 107,
											"end": 140,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 59,
											"end": 146,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 59,
											"end": 146,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 59,
											"end": 146,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 59,
											"end": 146,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 59,
											"end": 146,
											"name": "JUMP",
											"source": 13,
											"value": "[out]"
										},
										{
											"begin": 169,
											"end": 536,
											"name": "tag",
											"source": 13,
											"value": "369"
										},
										{
											"begin": 169,
											"end": 536,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 169,
											"end": 536,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 169,
											"end": 536,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 302,
											"end": 305,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 295,
											"end": 299,
											"name": "PUSH",
											"source": 13,
											"value": "1F"
										},
										{
											"begin": 287,
											"end": 293,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 283,
											"end": 300,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 279,
											"end": 306,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 269,
											"end": 271,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "371"
										},
										{
											"begin": 269,
											"end": 271,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 320,
											"end": 321,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 317,
											"end": 318,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 310,
											"end": 322,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 269,
											"end": 271,
											"name": "tag",
											"source": 13,
											"value": "371"
										},
										{
											"begin": 269,
											"end": 271,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 356,
											"end": 362,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 343,
											"end": 363,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": 333,
											"end": 363,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 333,
											"end": 363,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 386,
											"end": 404,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 378,
											"end": 384,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 375,
											"end": 405,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 372,
											"end": 374,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 372,
											"end": 374,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "372"
										},
										{
											"begin": 372,
											"end": 374,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 418,
											"end": 419,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 415,
											"end": 416,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 408,
											"end": 420,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 372,
											"end": 374,
											"name": "tag",
											"source": 13,
											"value": "372"
										},
										{
											"begin": 372,
											"end": 374,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 455,
											"end": 459,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 447,
											"end": 453,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 443,
											"end": 460,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 431,
											"end": 460,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 431,
											"end": 460,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 509,
											"end": 512,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 501,
											"end": 505,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 493,
											"end": 499,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 489,
											"end": 506,
											"name": "MUL",
											"source": 13
										},
										{
											"begin": 479,
											"end": 487,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 475,
											"end": 507,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 472,
											"end": 513,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 469,
											"end": 471,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 469,
											"end": 471,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "373"
										},
										{
											"begin": 469,
											"end": 471,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 526,
											"end": 527,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 523,
											"end": 524,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 516,
											"end": 528,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 469,
											"end": 471,
											"name": "tag",
											"source": 13,
											"value": "373"
										},
										{
											"begin": 469,
											"end": 471,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 259,
											"end": 536,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 259,
											"end": 536,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 259,
											"end": 536,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 259,
											"end": 536,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 259,
											"end": 536,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 259,
											"end": 536,
											"name": "JUMP",
											"source": 13,
											"value": "[out]"
										},
										{
											"begin": 559,
											"end": 926,
											"name": "tag",
											"source": 13,
											"value": "374"
										},
										{
											"begin": 559,
											"end": 926,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 559,
											"end": 926,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 559,
											"end": 926,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 692,
											"end": 695,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 685,
											"end": 689,
											"name": "PUSH",
											"source": 13,
											"value": "1F"
										},
										{
											"begin": 677,
											"end": 683,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 673,
											"end": 690,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 669,
											"end": 696,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 659,
											"end": 661,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "376"
										},
										{
											"begin": 659,
											"end": 661,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 710,
											"end": 711,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 707,
											"end": 708,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 700,
											"end": 712,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 659,
											"end": 661,
											"name": "tag",
											"source": 13,
											"value": "376"
										},
										{
											"begin": 659,
											"end": 661,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 746,
											"end": 752,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 733,
											"end": 753,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": 723,
											"end": 753,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 723,
											"end": 753,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 776,
											"end": 794,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 768,
											"end": 774,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 765,
											"end": 795,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 762,
											"end": 764,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 762,
											"end": 764,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "377"
										},
										{
											"begin": 762,
											"end": 764,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 808,
											"end": 809,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 805,
											"end": 806,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 798,
											"end": 810,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 762,
											"end": 764,
											"name": "tag",
											"source": 13,
											"value": "377"
										},
										{
											"begin": 762,
											"end": 764,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 845,
											"end": 849,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 837,
											"end": 843,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 833,
											"end": 850,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 821,
											"end": 850,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 821,
											"end": 850,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 899,
											"end": 902,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 891,
											"end": 895,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 883,
											"end": 889,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 879,
											"end": 896,
											"name": "MUL",
											"source": 13
										},
										{
											"begin": 869,
											"end": 877,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 865,
											"end": 897,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 862,
											"end": 903,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 859,
											"end": 861,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 859,
											"end": 861,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "378"
										},
										{
											"begin": 859,
											"end": 861,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 916,
											"end": 917,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 913,
											"end": 914,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 906,
											"end": 918,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 859,
											"end": 861,
											"name": "tag",
											"source": 13,
											"value": "378"
										},
										{
											"begin": 859,
											"end": 861,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 649,
											"end": 926,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 649,
											"end": 926,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 649,
											"end": 926,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 649,
											"end": 926,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 649,
											"end": 926,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 649,
											"end": 926,
											"name": "JUMP",
											"source": 13,
											"value": "[out]"
										},
										{
											"begin": 932,
											"end": 1071,
											"name": "tag",
											"source": 13,
											"value": "379"
										},
										{
											"begin": 932,
											"end": 1071,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 932,
											"end": 1071,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1016,
											"end": 1022,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1003,
											"end": 1023,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": 994,
											"end": 1023,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 994,
											"end": 1023,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1032,
											"end": 1065,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "381"
										},
										{
											"begin": 1059,
											"end": 1064,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1032,
											"end": 1065,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "382"
										},
										{
											"begin": 1032,
											"end": 1065,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 1032,
											"end": 1065,
											"name": "tag",
											"source": 13,
											"value": "381"
										},
										{
											"begin": 1032,
											"end": 1065,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 984,
											"end": 1071,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 984,
											"end": 1071,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 984,
											"end": 1071,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 984,
											"end": 1071,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 984,
											"end": 1071,
											"name": "JUMP",
											"source": 13,
											"value": "[out]"
										},
										{
											"begin": 1077,
											"end": 1220,
											"name": "tag",
											"source": 13,
											"value": "383"
										},
										{
											"begin": 1077,
											"end": 1220,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1077,
											"end": 1220,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1165,
											"end": 1171,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1159,
											"end": 1172,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 1150,
											"end": 1172,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1150,
											"end": 1172,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1181,
											"end": 1214,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "385"
										},
										{
											"begin": 1208,
											"end": 1213,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1181,
											"end": 1214,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "382"
										},
										{
											"begin": 1181,
											"end": 1214,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 1181,
											"end": 1214,
											"name": "tag",
											"source": 13,
											"value": "385"
										},
										{
											"begin": 1181,
											"end": 1214,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1140,
											"end": 1220,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 1140,
											"end": 1220,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 1140,
											"end": 1220,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1140,
											"end": 1220,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1140,
											"end": 1220,
											"name": "JUMP",
											"source": 13,
											"value": "[out]"
										},
										{
											"begin": 1226,
											"end": 1486,
											"name": "tag",
											"source": 13,
											"value": "30"
										},
										{
											"begin": 1226,
											"end": 1486,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1226,
											"end": 1486,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1334,
											"end": 1336,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 1322,
											"end": 1331,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 1313,
											"end": 1320,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 1309,
											"end": 1332,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 1305,
											"end": 1337,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 1302,
											"end": 1304,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 1302,
											"end": 1304,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "387"
										},
										{
											"begin": 1302,
											"end": 1304,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 1350,
											"end": 1351,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1347,
											"end": 1348,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1340,
											"end": 1352,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 1302,
											"end": 1304,
											"name": "tag",
											"source": 13,
											"value": "387"
										},
										{
											"begin": 1302,
											"end": 1304,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1392,
											"end": 1393,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1416,
											"end": 1469,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "388"
										},
										{
											"begin": 1461,
											"end": 1468,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 1452,
											"end": 1458,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 1441,
											"end": 1450,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 1437,
											"end": 1459,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1416,
											"end": 1469,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "365"
										},
										{
											"begin": 1416,
											"end": 1469,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 1416,
											"end": 1469,
											"name": "tag",
											"source": 13,
											"value": "388"
										},
										{
											"begin": 1416,
											"end": 1469,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1406,
											"end": 1469,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 1406,
											"end": 1469,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1364,
											"end": 1479,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1292,
											"end": 1486,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 1292,
											"end": 1486,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 1292,
											"end": 1486,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1292,
											"end": 1486,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1292,
											"end": 1486,
											"name": "JUMP",
											"source": 13,
											"value": "[out]"
										},
										{
											"begin": 1492,
											"end": 1895,
											"name": "tag",
											"source": 13,
											"value": "50"
										},
										{
											"begin": 1492,
											"end": 1895,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1492,
											"end": 1895,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1492,
											"end": 1895,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1617,
											"end": 1619,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 1605,
											"end": 1614,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 1596,
											"end": 1603,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 1592,
											"end": 1615,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 1588,
											"end": 1620,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 1585,
											"end": 1587,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 1585,
											"end": 1587,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "390"
										},
										{
											"begin": 1585,
											"end": 1587,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 1633,
											"end": 1634,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1630,
											"end": 1631,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1623,
											"end": 1635,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 1585,
											"end": 1587,
											"name": "tag",
											"source": 13,
											"value": "390"
										},
										{
											"begin": 1585,
											"end": 1587,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1675,
											"end": 1676,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1699,
											"end": 1752,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "391"
										},
										{
											"begin": 1744,
											"end": 1751,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 1735,
											"end": 1741,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 1724,
											"end": 1733,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 1720,
											"end": 1742,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1699,
											"end": 1752,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "365"
										},
										{
											"begin": 1699,
											"end": 1752,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 1699,
											"end": 1752,
											"name": "tag",
											"source": 13,
											"value": "391"
										},
										{
											"begin": 1699,
											"end": 1752,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1689,
											"end": 1752,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 1689,
											"end": 1752,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1647,
											"end": 1762,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1800,
											"end": 1802,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 1825,
											"end": 1878,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "392"
										},
										{
											"begin": 1870,
											"end": 1877,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 1861,
											"end": 1867,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 1850,
											"end": 1859,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 1846,
											"end": 1868,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1825,
											"end": 1878,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "365"
										},
										{
											"begin": 1825,
											"end": 1878,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 1825,
											"end": 1878,
											"name": "tag",
											"source": 13,
											"value": "392"
										},
										{
											"begin": 1825,
											"end": 1878,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1815,
											"end": 1878,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 1815,
											"end": 1878,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1772,
											"end": 1888,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1575,
											"end": 1895,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 1575,
											"end": 1895,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1575,
											"end": 1895,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 1575,
											"end": 1895,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1575,
											"end": 1895,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1575,
											"end": 1895,
											"name": "JUMP",
											"source": 13,
											"value": "[out]"
										},
										{
											"begin": 1901,
											"end": 2447,
											"name": "tag",
											"source": 13,
											"value": "46"
										},
										{
											"begin": 1901,
											"end": 2447,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1901,
											"end": 2447,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1901,
											"end": 2447,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1901,
											"end": 2447,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2043,
											"end": 2045,
											"name": "PUSH",
											"source": 13,
											"value": "60"
										},
										{
											"begin": 2031,
											"end": 2040,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 2022,
											"end": 2029,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 2018,
											"end": 2041,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 2014,
											"end": 2046,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 2011,
											"end": 2013,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 2011,
											"end": 2013,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "394"
										},
										{
											"begin": 2011,
											"end": 2013,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 2059,
											"end": 2060,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2056,
											"end": 2057,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 2049,
											"end": 2061,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 2011,
											"end": 2013,
											"name": "tag",
											"source": 13,
											"value": "394"
										},
										{
											"begin": 2011,
											"end": 2013,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2101,
											"end": 2102,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2125,
											"end": 2178,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "395"
										},
										{
											"begin": 2170,
											"end": 2177,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 2161,
											"end": 2167,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 2150,
											"end": 2159,
											"name": "DUP8",
											"source": 13
										},
										{
											"begin": 2146,
											"end": 2168,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 2125,
											"end": 2178,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "365"
										},
										{
											"begin": 2125,
											"end": 2178,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 2125,
											"end": 2178,
											"name": "tag",
											"source": 13,
											"value": "395"
										},
										{
											"begin": 2125,
											"end": 2178,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2115,
											"end": 2178,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 2115,
											"end": 2178,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2073,
											"end": 2188,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2226,
											"end": 2228,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 2251,
											"end": 2304,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "396"
										},
										{
											"begin": 2296,
											"end": 2303,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 2287,
											"end": 2293,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 2276,
											"end": 2285,
											"name": "DUP8",
											"source": 13
										},
										{
											"begin": 2272,
											"end": 2294,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 2251,
											"end": 2304,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "379"
										},
										{
											"begin": 2251,
											"end": 2304,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 2251,
											"end": 2304,
											"name": "tag",
											"source": 13,
											"value": "396"
										},
										{
											"begin": 2251,
											"end": 2304,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2241,
											"end": 2304,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 2241,
											"end": 2304,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2198,
											"end": 2314,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2352,
											"end": 2354,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 2377,
											"end": 2430,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "397"
										},
										{
											"begin": 2422,
											"end": 2429,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 2413,
											"end": 2419,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 2402,
											"end": 2411,
											"name": "DUP8",
											"source": 13
										},
										{
											"begin": 2398,
											"end": 2420,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 2377,
											"end": 2430,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "379"
										},
										{
											"begin": 2377,
											"end": 2430,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 2377,
											"end": 2430,
											"name": "tag",
											"source": 13,
											"value": "397"
										},
										{
											"begin": 2377,
											"end": 2430,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2367,
											"end": 2430,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 2367,
											"end": 2430,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2324,
											"end": 2440,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2001,
											"end": 2447,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 2001,
											"end": 2447,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2001,
											"end": 2447,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 2001,
											"end": 2447,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2001,
											"end": 2447,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 2001,
											"end": 2447,
											"name": "JUMP",
											"source": 13,
											"value": "[out]"
										},
										{
											"begin": 2453,
											"end": 3019,
											"name": "tag",
											"source": 13,
											"value": "78"
										},
										{
											"begin": 2453,
											"end": 3019,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2453,
											"end": 3019,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2453,
											"end": 3019,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 2453,
											"end": 3019,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2613,
											"end": 2615,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 2601,
											"end": 2610,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 2592,
											"end": 2599,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 2588,
											"end": 2611,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 2584,
											"end": 2616,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 2581,
											"end": 2583,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 2581,
											"end": 2583,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "399"
										},
										{
											"begin": 2581,
											"end": 2583,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 2629,
											"end": 2630,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2626,
											"end": 2627,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 2619,
											"end": 2631,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 2581,
											"end": 2583,
											"name": "tag",
											"source": 13,
											"value": "399"
										},
										{
											"begin": 2581,
											"end": 2583,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2699,
											"end": 2700,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2688,
											"end": 2697,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 2684,
											"end": 2701,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 2671,
											"end": 2702,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": 2729,
											"end": 2747,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2721,
											"end": 2727,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 2718,
											"end": 2748,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 2715,
											"end": 2717,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 2715,
											"end": 2717,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "400"
										},
										{
											"begin": 2715,
											"end": 2717,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 2761,
											"end": 2762,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2758,
											"end": 2759,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 2751,
											"end": 2763,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 2715,
											"end": 2717,
											"name": "tag",
											"source": 13,
											"value": "400"
										},
										{
											"begin": 2715,
											"end": 2717,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2796,
											"end": 2876,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "401"
										},
										{
											"begin": 2868,
											"end": 2875,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 2859,
											"end": 2865,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 2848,
											"end": 2857,
											"name": "DUP8",
											"source": 13
										},
										{
											"begin": 2844,
											"end": 2866,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 2796,
											"end": 2876,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "369"
										},
										{
											"begin": 2796,
											"end": 2876,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 2796,
											"end": 2876,
											"name": "tag",
											"source": 13,
											"value": "401"
										},
										{
											"begin": 2796,
											"end": 2876,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2778,
											"end": 2876,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 2778,
											"end": 2876,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2778,
											"end": 2876,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 2778,
											"end": 2876,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2643,
											"end": 2886,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2924,
											"end": 2926,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 2949,
											"end": 3002,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "402"
										},
										{
											"begin": 2994,
											"end": 3001,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 2985,
											"end": 2991,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 2974,
											"end": 2983,
											"name": "DUP8",
											"source": 13
										},
										{
											"begin": 2970,
											"end": 2992,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 2949,
											"end": 3002,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "365"
										},
										{
											"begin": 2949,
											"end": 3002,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 2949,
											"end": 3002,
											"name": "tag",
											"source": 13,
											"value": "402"
										},
										{
											"begin": 2949,
											"end": 3002,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2939,
											"end": 3002,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 2939,
											"end": 3002,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2896,
											"end": 3012,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2571,
											"end": 3019,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 2571,
											"end": 3019,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2571,
											"end": 3019,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 2571,
											"end": 3019,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2571,
											"end": 3019,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 2571,
											"end": 3019,
											"name": "JUMP",
											"source": 13,
											"value": "[out]"
										},
										{
											"begin": 3025,
											"end": 3754,
											"name": "tag",
											"source": 13,
											"value": "74"
										},
										{
											"begin": 3025,
											"end": 3754,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3025,
											"end": 3754,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3025,
											"end": 3754,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 3025,
											"end": 3754,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3025,
											"end": 3754,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 3220,
											"end": 3222,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 3208,
											"end": 3217,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 3199,
											"end": 3206,
											"name": "DUP8",
											"source": 13
										},
										{
											"begin": 3195,
											"end": 3218,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 3191,
											"end": 3223,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 3188,
											"end": 3190,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 3188,
											"end": 3190,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "404"
										},
										{
											"begin": 3188,
											"end": 3190,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 3236,
											"end": 3237,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3233,
											"end": 3234,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 3226,
											"end": 3238,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 3188,
											"end": 3190,
											"name": "tag",
											"source": 13,
											"value": "404"
										},
										{
											"begin": 3188,
											"end": 3190,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3306,
											"end": 3307,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3295,
											"end": 3304,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 3291,
											"end": 3308,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 3278,
											"end": 3309,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": 3336,
											"end": 3354,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3328,
											"end": 3334,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 3325,
											"end": 3355,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 3322,
											"end": 3324,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 3322,
											"end": 3324,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "405"
										},
										{
											"begin": 3322,
											"end": 3324,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 3368,
											"end": 3369,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3365,
											"end": 3366,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 3358,
											"end": 3370,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 3322,
											"end": 3324,
											"name": "tag",
											"source": 13,
											"value": "405"
										},
										{
											"begin": 3322,
											"end": 3324,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3403,
											"end": 3483,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "406"
										},
										{
											"begin": 3475,
											"end": 3482,
											"name": "DUP8",
											"source": 13
										},
										{
											"begin": 3466,
											"end": 3472,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 3455,
											"end": 3464,
											"name": "DUP9",
											"source": 13
										},
										{
											"begin": 3451,
											"end": 3473,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 3403,
											"end": 3483,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "369"
										},
										{
											"begin": 3403,
											"end": 3483,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 3403,
											"end": 3483,
											"name": "tag",
											"source": 13,
											"value": "406"
										},
										{
											"begin": 3403,
											"end": 3483,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3385,
											"end": 3483,
											"name": "SWAP5",
											"source": 13
										},
										{
											"begin": 3385,
											"end": 3483,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3385,
											"end": 3483,
											"name": "SWAP5",
											"source": 13
										},
										{
											"begin": 3385,
											"end": 3483,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3250,
											"end": 3493,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3559,
											"end": 3561,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 3548,
											"end": 3557,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 3544,
											"end": 3562,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 3531,
											"end": 3563,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": 3590,
											"end": 3608,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3582,
											"end": 3588,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 3579,
											"end": 3609,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 3576,
											"end": 3578,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 3576,
											"end": 3578,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "407"
										},
										{
											"begin": 3576,
											"end": 3578,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 3622,
											"end": 3623,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3619,
											"end": 3620,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 3612,
											"end": 3624,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 3576,
											"end": 3578,
											"name": "tag",
											"source": 13,
											"value": "407"
										},
										{
											"begin": 3576,
											"end": 3578,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3657,
											"end": 3737,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "408"
										},
										{
											"begin": 3729,
											"end": 3736,
											"name": "DUP8",
											"source": 13
										},
										{
											"begin": 3720,
											"end": 3726,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 3709,
											"end": 3718,
											"name": "DUP9",
											"source": 13
										},
										{
											"begin": 3705,
											"end": 3727,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 3657,
											"end": 3737,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "374"
										},
										{
											"begin": 3657,
											"end": 3737,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 3657,
											"end": 3737,
											"name": "tag",
											"source": 13,
											"value": "408"
										},
										{
											"begin": 3657,
											"end": 3737,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3639,
											"end": 3737,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 3639,
											"end": 3737,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3639,
											"end": 3737,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 3639,
											"end": 3737,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3503,
											"end": 3747,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3178,
											"end": 3754,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 3178,
											"end": 3754,
											"name": "SWAP6",
											"source": 13
										},
										{
											"begin": 3178,
											"end": 3754,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 3178,
											"end": 3754,
											"name": "SWAP5",
											"source": 13
										},
										{
											"begin": 3178,
											"end": 3754,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3178,
											"end": 3754,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 3178,
											"end": 3754,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3178,
											"end": 3754,
											"name": "JUMP",
											"source": 13,
											"value": "[out]"
										},
										{
											"begin": 3760,
											"end": 4326,
											"name": "tag",
											"source": 13,
											"value": "59"
										},
										{
											"begin": 3760,
											"end": 4326,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3760,
											"end": 4326,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3760,
											"end": 4326,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 3760,
											"end": 4326,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3920,
											"end": 3922,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 3908,
											"end": 3917,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 3899,
											"end": 3906,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 3895,
											"end": 3918,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 3891,
											"end": 3923,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 3888,
											"end": 3890,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 3888,
											"end": 3890,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "410"
										},
										{
											"begin": 3888,
											"end": 3890,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 3936,
											"end": 3937,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3933,
											"end": 3934,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 3926,
											"end": 3938,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 3888,
											"end": 3890,
											"name": "tag",
											"source": 13,
											"value": "410"
										},
										{
											"begin": 3888,
											"end": 3890,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4006,
											"end": 4007,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3995,
											"end": 4004,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 3991,
											"end": 4008,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 3978,
											"end": 4009,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": 4036,
											"end": 4054,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4028,
											"end": 4034,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 4025,
											"end": 4055,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 4022,
											"end": 4024,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 4022,
											"end": 4024,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "411"
										},
										{
											"begin": 4022,
											"end": 4024,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 4068,
											"end": 4069,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 4065,
											"end": 4066,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 4058,
											"end": 4070,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 4022,
											"end": 4024,
											"name": "tag",
											"source": 13,
											"value": "411"
										},
										{
											"begin": 4022,
											"end": 4024,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4103,
											"end": 4183,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "412"
										},
										{
											"begin": 4175,
											"end": 4182,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 4166,
											"end": 4172,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 4155,
											"end": 4164,
											"name": "DUP8",
											"source": 13
										},
										{
											"begin": 4151,
											"end": 4173,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 4103,
											"end": 4183,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "369"
										},
										{
											"begin": 4103,
											"end": 4183,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 4103,
											"end": 4183,
											"name": "tag",
											"source": 13,
											"value": "412"
										},
										{
											"begin": 4103,
											"end": 4183,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4085,
											"end": 4183,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 4085,
											"end": 4183,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4085,
											"end": 4183,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 4085,
											"end": 4183,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3950,
											"end": 4193,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4231,
											"end": 4233,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 4256,
											"end": 4309,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "413"
										},
										{
											"begin": 4301,
											"end": 4308,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 4292,
											"end": 4298,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 4281,
											"end": 4290,
											"name": "DUP8",
											"source": 13
										},
										{
											"begin": 4277,
											"end": 4299,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 4256,
											"end": 4309,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "379"
										},
										{
											"begin": 4256,
											"end": 4309,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 4256,
											"end": 4309,
											"name": "tag",
											"source": 13,
											"value": "413"
										},
										{
											"begin": 4256,
											"end": 4309,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4246,
											"end": 4309,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 4246,
											"end": 4309,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4203,
											"end": 4319,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3878,
											"end": 4326,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 3878,
											"end": 4326,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3878,
											"end": 4326,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 3878,
											"end": 4326,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3878,
											"end": 4326,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 3878,
											"end": 4326,
											"name": "JUMP",
											"source": 13,
											"value": "[out]"
										},
										{
											"begin": 4332,
											"end": 5041,
											"name": "tag",
											"source": 13,
											"value": "41"
										},
										{
											"begin": 4332,
											"end": 5041,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4332,
											"end": 5041,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 4332,
											"end": 5041,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 4332,
											"end": 5041,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 4332,
											"end": 5041,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 4509,
											"end": 4511,
											"name": "PUSH",
											"source": 13,
											"value": "60"
										},
										{
											"begin": 4497,
											"end": 4506,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 4488,
											"end": 4495,
											"name": "DUP8",
											"source": 13
										},
										{
											"begin": 4484,
											"end": 4507,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 4480,
											"end": 4512,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 4477,
											"end": 4479,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 4477,
											"end": 4479,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "415"
										},
										{
											"begin": 4477,
											"end": 4479,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 4525,
											"end": 4526,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 4522,
											"end": 4523,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 4515,
											"end": 4527,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 4477,
											"end": 4479,
											"name": "tag",
											"source": 13,
											"value": "415"
										},
										{
											"begin": 4477,
											"end": 4479,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4595,
											"end": 4596,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 4584,
											"end": 4593,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 4580,
											"end": 4597,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 4567,
											"end": 4598,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": 4625,
											"end": 4643,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4617,
											"end": 4623,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 4614,
											"end": 4644,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 4611,
											"end": 4613,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 4611,
											"end": 4613,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "416"
										},
										{
											"begin": 4611,
											"end": 4613,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 4657,
											"end": 4658,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 4654,
											"end": 4655,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 4647,
											"end": 4659,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 4611,
											"end": 4613,
											"name": "tag",
											"source": 13,
											"value": "416"
										},
										{
											"begin": 4611,
											"end": 4613,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4692,
											"end": 4772,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "417"
										},
										{
											"begin": 4764,
											"end": 4771,
											"name": "DUP8",
											"source": 13
										},
										{
											"begin": 4755,
											"end": 4761,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 4744,
											"end": 4753,
											"name": "DUP9",
											"source": 13
										},
										{
											"begin": 4740,
											"end": 4762,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 4692,
											"end": 4772,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "369"
										},
										{
											"begin": 4692,
											"end": 4772,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 4692,
											"end": 4772,
											"name": "tag",
											"source": 13,
											"value": "417"
										},
										{
											"begin": 4692,
											"end": 4772,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4674,
											"end": 4772,
											"name": "SWAP5",
											"source": 13
										},
										{
											"begin": 4674,
											"end": 4772,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4674,
											"end": 4772,
											"name": "SWAP5",
											"source": 13
										},
										{
											"begin": 4674,
											"end": 4772,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4539,
											"end": 4782,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4820,
											"end": 4822,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 4845,
											"end": 4898,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "418"
										},
										{
											"begin": 4890,
											"end": 4897,
											"name": "DUP8",
											"source": 13
										},
										{
											"begin": 4881,
											"end": 4887,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 4870,
											"end": 4879,
											"name": "DUP9",
											"source": 13
										},
										{
											"begin": 4866,
											"end": 4888,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 4845,
											"end": 4898,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "379"
										},
										{
											"begin": 4845,
											"end": 4898,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 4845,
											"end": 4898,
											"name": "tag",
											"source": 13,
											"value": "418"
										},
										{
											"begin": 4845,
											"end": 4898,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4835,
											"end": 4898,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 4835,
											"end": 4898,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4792,
											"end": 4908,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4946,
											"end": 4948,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 4971,
											"end": 5024,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "419"
										},
										{
											"begin": 5016,
											"end": 5023,
											"name": "DUP8",
											"source": 13
										},
										{
											"begin": 5007,
											"end": 5013,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 4996,
											"end": 5005,
											"name": "DUP9",
											"source": 13
										},
										{
											"begin": 4992,
											"end": 5014,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 4971,
											"end": 5024,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "365"
										},
										{
											"begin": 4971,
											"end": 5024,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 4971,
											"end": 5024,
											"name": "tag",
											"source": 13,
											"value": "419"
										},
										{
											"begin": 4971,
											"end": 5024,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4961,
											"end": 5024,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 4961,
											"end": 5024,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4918,
											"end": 5034,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4467,
											"end": 5041,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 4467,
											"end": 5041,
											"name": "SWAP6",
											"source": 13
										},
										{
											"begin": 4467,
											"end": 5041,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 4467,
											"end": 5041,
											"name": "SWAP5",
											"source": 13
										},
										{
											"begin": 4467,
											"end": 5041,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4467,
											"end": 5041,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 4467,
											"end": 5041,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4467,
											"end": 5041,
											"name": "JUMP",
											"source": 13,
											"value": "[out]"
										},
										{
											"begin": 5047,
											"end": 5900,
											"name": "tag",
											"source": 13,
											"value": "64"
										},
										{
											"begin": 5047,
											"end": 5900,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5047,
											"end": 5900,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 5047,
											"end": 5900,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 5047,
											"end": 5900,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 5047,
											"end": 5900,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 5047,
											"end": 5900,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 5241,
											"end": 5244,
											"name": "PUSH",
											"source": 13,
											"value": "80"
										},
										{
											"begin": 5229,
											"end": 5238,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 5220,
											"end": 5227,
											"name": "DUP9",
											"source": 13
										},
										{
											"begin": 5216,
											"end": 5239,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 5212,
											"end": 5245,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 5209,
											"end": 5211,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 5209,
											"end": 5211,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "421"
										},
										{
											"begin": 5209,
											"end": 5211,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 5258,
											"end": 5259,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 5255,
											"end": 5256,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 5248,
											"end": 5260,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 5209,
											"end": 5211,
											"name": "tag",
											"source": 13,
											"value": "421"
										},
										{
											"begin": 5209,
											"end": 5211,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5328,
											"end": 5329,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 5317,
											"end": 5326,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 5313,
											"end": 5330,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 5300,
											"end": 5331,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": 5358,
											"end": 5376,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5350,
											"end": 5356,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 5347,
											"end": 5377,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 5344,
											"end": 5346,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 5344,
											"end": 5346,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "422"
										},
										{
											"begin": 5344,
											"end": 5346,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 5390,
											"end": 5391,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 5387,
											"end": 5388,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 5380,
											"end": 5392,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 5344,
											"end": 5346,
											"name": "tag",
											"source": 13,
											"value": "422"
										},
										{
											"begin": 5344,
											"end": 5346,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5425,
											"end": 5505,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "423"
										},
										{
											"begin": 5497,
											"end": 5504,
											"name": "DUP9",
											"source": 13
										},
										{
											"begin": 5488,
											"end": 5494,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 5477,
											"end": 5486,
											"name": "DUP10",
											"source": 13
										},
										{
											"begin": 5473,
											"end": 5495,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 5425,
											"end": 5505,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "369"
										},
										{
											"begin": 5425,
											"end": 5505,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 5425,
											"end": 5505,
											"name": "tag",
											"source": 13,
											"value": "423"
										},
										{
											"begin": 5425,
											"end": 5505,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5407,
											"end": 5505,
											"name": "SWAP6",
											"source": 13
										},
										{
											"begin": 5407,
											"end": 5505,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5407,
											"end": 5505,
											"name": "SWAP6",
											"source": 13
										},
										{
											"begin": 5407,
											"end": 5505,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5272,
											"end": 5515,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5553,
											"end": 5555,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 5578,
											"end": 5631,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "424"
										},
										{
											"begin": 5623,
											"end": 5630,
											"name": "DUP9",
											"source": 13
										},
										{
											"begin": 5614,
											"end": 5620,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 5603,
											"end": 5612,
											"name": "DUP10",
											"source": 13
										},
										{
											"begin": 5599,
											"end": 5621,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 5578,
											"end": 5631,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "379"
										},
										{
											"begin": 5578,
											"end": 5631,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 5578,
											"end": 5631,
											"name": "tag",
											"source": 13,
											"value": "424"
										},
										{
											"begin": 5578,
											"end": 5631,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5568,
											"end": 5631,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 5568,
											"end": 5631,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5525,
											"end": 5641,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5679,
											"end": 5681,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 5704,
											"end": 5757,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "425"
										},
										{
											"begin": 5749,
											"end": 5756,
											"name": "DUP9",
											"source": 13
										},
										{
											"begin": 5740,
											"end": 5746,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 5729,
											"end": 5738,
											"name": "DUP10",
											"source": 13
										},
										{
											"begin": 5725,
											"end": 5747,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 5704,
											"end": 5757,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "365"
										},
										{
											"begin": 5704,
											"end": 5757,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 5704,
											"end": 5757,
											"name": "tag",
											"source": 13,
											"value": "425"
										},
										{
											"begin": 5704,
											"end": 5757,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5694,
											"end": 5757,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 5694,
											"end": 5757,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5651,
											"end": 5767,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5805,
											"end": 5807,
											"name": "PUSH",
											"source": 13,
											"value": "60"
										},
										{
											"begin": 5830,
											"end": 5883,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "426"
										},
										{
											"begin": 5875,
											"end": 5882,
											"name": "DUP9",
											"source": 13
										},
										{
											"begin": 5866,
											"end": 5872,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 5855,
											"end": 5864,
											"name": "DUP10",
											"source": 13
										},
										{
											"begin": 5851,
											"end": 5873,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 5830,
											"end": 5883,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "365"
										},
										{
											"begin": 5830,
											"end": 5883,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 5830,
											"end": 5883,
											"name": "tag",
											"source": 13,
											"value": "426"
										},
										{
											"begin": 5830,
											"end": 5883,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5820,
											"end": 5883,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 5820,
											"end": 5883,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5777,
											"end": 5893,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5199,
											"end": 5900,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 5199,
											"end": 5900,
											"name": "SWAP6",
											"source": 13
										},
										{
											"begin": 5199,
											"end": 5900,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5199,
											"end": 5900,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 5199,
											"end": 5900,
											"name": "SWAP6",
											"source": 13
										},
										{
											"begin": 5199,
											"end": 5900,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 5199,
											"end": 5900,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 5199,
											"end": 5900,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5199,
											"end": 5900,
											"name": "JUMP",
											"source": 13,
											"value": "[out]"
										},
										{
											"begin": 5906,
											"end": 6166,
											"name": "tag",
											"source": 13,
											"value": "55"
										},
										{
											"begin": 5906,
											"end": 6166,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5906,
											"end": 6166,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 6014,
											"end": 6016,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 6002,
											"end": 6011,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 5993,
											"end": 6000,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 5989,
											"end": 6012,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 5985,
											"end": 6017,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 5982,
											"end": 5984,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 5982,
											"end": 5984,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "428"
										},
										{
											"begin": 5982,
											"end": 5984,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 6030,
											"end": 6031,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 6027,
											"end": 6028,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 6020,
											"end": 6032,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 5982,
											"end": 5984,
											"name": "tag",
											"source": 13,
											"value": "428"
										},
										{
											"begin": 5982,
											"end": 5984,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6072,
											"end": 6073,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 6096,
											"end": 6149,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "429"
										},
										{
											"begin": 6141,
											"end": 6148,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 6132,
											"end": 6138,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 6121,
											"end": 6130,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 6117,
											"end": 6139,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 6096,
											"end": 6149,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "379"
										},
										{
											"begin": 6096,
											"end": 6149,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 6096,
											"end": 6149,
											"name": "tag",
											"source": 13,
											"value": "429"
										},
										{
											"begin": 6096,
											"end": 6149,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6086,
											"end": 6149,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 6086,
											"end": 6149,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6044,
											"end": 6159,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5972,
											"end": 6166,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 5972,
											"end": 6166,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 5972,
											"end": 6166,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5972,
											"end": 6166,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5972,
											"end": 6166,
											"name": "JUMP",
											"source": 13,
											"value": "[out]"
										},
										{
											"begin": 6172,
											"end": 6454,
											"name": "tag",
											"source": 13,
											"value": "184"
										},
										{
											"begin": 6172,
											"end": 6454,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6172,
											"end": 6454,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 6291,
											"end": 6293,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 6279,
											"end": 6288,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 6270,
											"end": 6277,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 6266,
											"end": 6289,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 6262,
											"end": 6294,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 6259,
											"end": 6261,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 6259,
											"end": 6261,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "431"
										},
										{
											"begin": 6259,
											"end": 6261,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 6307,
											"end": 6308,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 6304,
											"end": 6305,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 6297,
											"end": 6309,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 6259,
											"end": 6261,
											"name": "tag",
											"source": 13,
											"value": "431"
										},
										{
											"begin": 6259,
											"end": 6261,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6349,
											"end": 6350,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 6373,
											"end": 6437,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "432"
										},
										{
											"begin": 6429,
											"end": 6436,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 6420,
											"end": 6426,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 6409,
											"end": 6418,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 6405,
											"end": 6427,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 6373,
											"end": 6437,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "383"
										},
										{
											"begin": 6373,
											"end": 6437,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 6373,
											"end": 6437,
											"name": "tag",
											"source": 13,
											"value": "432"
										},
										{
											"begin": 6373,
											"end": 6437,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6363,
											"end": 6437,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 6363,
											"end": 6437,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6321,
											"end": 6447,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6249,
											"end": 6454,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 6249,
											"end": 6454,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 6249,
											"end": 6454,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6249,
											"end": 6454,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6249,
											"end": 6454,
											"name": "JUMP",
											"source": 13,
											"value": "[out]"
										},
										{
											"begin": 6460,
											"end": 6896,
											"name": "tag",
											"source": 13,
											"value": "207"
										},
										{
											"begin": 6460,
											"end": 6896,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6460,
											"end": 6896,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 6460,
											"end": 6896,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 6596,
											"end": 6598,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 6584,
											"end": 6593,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 6575,
											"end": 6582,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 6571,
											"end": 6594,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 6567,
											"end": 6599,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 6564,
											"end": 6566,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 6564,
											"end": 6566,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "434"
										},
										{
											"begin": 6564,
											"end": 6566,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 6612,
											"end": 6613,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 6609,
											"end": 6610,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 6602,
											"end": 6614,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 6564,
											"end": 6566,
											"name": "tag",
											"source": 13,
											"value": "434"
										},
										{
											"begin": 6564,
											"end": 6566,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6654,
											"end": 6655,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 6678,
											"end": 6742,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "435"
										},
										{
											"begin": 6734,
											"end": 6741,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 6725,
											"end": 6731,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 6714,
											"end": 6723,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 6710,
											"end": 6732,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 6678,
											"end": 6742,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "383"
										},
										{
											"begin": 6678,
											"end": 6742,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 6678,
											"end": 6742,
											"name": "tag",
											"source": 13,
											"value": "435"
										},
										{
											"begin": 6678,
											"end": 6742,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6668,
											"end": 6742,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 6668,
											"end": 6742,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6626,
											"end": 6752,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6790,
											"end": 6792,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 6815,
											"end": 6879,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "436"
										},
										{
											"begin": 6871,
											"end": 6878,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 6862,
											"end": 6868,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 6851,
											"end": 6860,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 6847,
											"end": 6869,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 6815,
											"end": 6879,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "383"
										},
										{
											"begin": 6815,
											"end": 6879,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 6815,
											"end": 6879,
											"name": "tag",
											"source": 13,
											"value": "436"
										},
										{
											"begin": 6815,
											"end": 6879,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6805,
											"end": 6879,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 6805,
											"end": 6879,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6762,
											"end": 6889,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6554,
											"end": 6896,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 6554,
											"end": 6896,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6554,
											"end": 6896,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 6554,
											"end": 6896,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 6554,
											"end": 6896,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6554,
											"end": 6896,
											"name": "JUMP",
											"source": 13,
											"value": "[out]"
										},
										{
											"begin": 6902,
											"end": 7020,
											"name": "tag",
											"source": 13,
											"value": "437"
										},
										{
											"begin": 6902,
											"end": 7020,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6989,
											"end": 7013,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "439"
										},
										{
											"begin": 7007,
											"end": 7012,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 6989,
											"end": 7013,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "440"
										},
										{
											"begin": 6989,
											"end": 7013,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 6989,
											"end": 7013,
											"name": "tag",
											"source": 13,
											"value": "439"
										},
										{
											"begin": 6989,
											"end": 7013,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6984,
											"end": 6987,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 6977,
											"end": 7014,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 6967,
											"end": 7020,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6967,
											"end": 7020,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6967,
											"end": 7020,
											"name": "JUMP",
											"source": 13,
											"value": "[out]"
										},
										{
											"begin": 7026,
											"end": 7344,
											"name": "tag",
											"source": 13,
											"value": "441"
										},
										{
											"begin": 7026,
											"end": 7344,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7026,
											"end": 7344,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 7189,
											"end": 7256,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "443"
										},
										{
											"begin": 7253,
											"end": 7255,
											"name": "PUSH",
											"source": 13,
											"value": "14"
										},
										{
											"begin": 7248,
											"end": 7251,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 7189,
											"end": 7256,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "444"
										},
										{
											"begin": 7189,
											"end": 7256,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 7189,
											"end": 7256,
											"name": "tag",
											"source": 13,
											"value": "443"
										},
										{
											"begin": 7189,
											"end": 7256,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7182,
											"end": 7256,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 7182,
											"end": 7256,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7286,
											"end": 7308,
											"name": "PUSH",
											"source": 13,
											"value": "494E56414C49445F555345525F41444452455353000000000000000000000000"
										},
										{
											"begin": 7282,
											"end": 7283,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 7277,
											"end": 7280,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 7273,
											"end": 7284,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 7266,
											"end": 7309,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 7335,
											"end": 7337,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 7330,
											"end": 7333,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 7326,
											"end": 7338,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 7319,
											"end": 7338,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 7319,
											"end": 7338,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7172,
											"end": 7344,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 7172,
											"end": 7344,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 7172,
											"end": 7344,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7172,
											"end": 7344,
											"name": "JUMP",
											"source": 13,
											"value": "[out]"
										},
										{
											"begin": 7350,
											"end": 7666,
											"name": "tag",
											"source": 13,
											"value": "445"
										},
										{
											"begin": 7350,
											"end": 7666,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7350,
											"end": 7666,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 7513,
											"end": 7580,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "447"
										},
										{
											"begin": 7577,
											"end": 7579,
											"name": "PUSH",
											"source": 13,
											"value": "12"
										},
										{
											"begin": 7572,
											"end": 7575,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 7513,
											"end": 7580,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "444"
										},
										{
											"begin": 7513,
											"end": 7580,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 7513,
											"end": 7580,
											"name": "tag",
											"source": 13,
											"value": "447"
										},
										{
											"begin": 7513,
											"end": 7580,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7506,
											"end": 7580,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 7506,
											"end": 7580,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7610,
											"end": 7630,
											"name": "PUSH",
											"source": 13,
											"value": "494E56414C49445F544F5F414444524553530000000000000000000000000000"
										},
										{
											"begin": 7606,
											"end": 7607,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 7601,
											"end": 7604,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 7597,
											"end": 7608,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 7590,
											"end": 7631,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 7657,
											"end": 7659,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 7652,
											"end": 7655,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 7648,
											"end": 7660,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 7641,
											"end": 7660,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 7641,
											"end": 7660,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7496,
											"end": 7666,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 7496,
											"end": 7666,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 7496,
											"end": 7666,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7496,
											"end": 7666,
											"name": "JUMP",
											"source": 13,
											"value": "[out]"
										},
										{
											"begin": 7672,
											"end": 7991,
											"name": "tag",
											"source": 13,
											"value": "448"
										},
										{
											"begin": 7672,
											"end": 7991,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7672,
											"end": 7991,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 7835,
											"end": 7902,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "450"
										},
										{
											"begin": 7899,
											"end": 7901,
											"name": "PUSH",
											"source": 13,
											"value": "15"
										},
										{
											"begin": 7894,
											"end": 7897,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 7835,
											"end": 7902,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "444"
										},
										{
											"begin": 7835,
											"end": 7902,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 7835,
											"end": 7902,
											"name": "tag",
											"source": 13,
											"value": "450"
										},
										{
											"begin": 7835,
											"end": 7902,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7828,
											"end": 7902,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 7828,
											"end": 7902,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7932,
											"end": 7955,
											"name": "PUSH",
											"source": 13,
											"value": "494E56414C49445F434F4E46494755524154494F4E0000000000000000000000"
										},
										{
											"begin": 7928,
											"end": 7929,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 7923,
											"end": 7926,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 7919,
											"end": 7930,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 7912,
											"end": 7956,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 7982,
											"end": 7984,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 7977,
											"end": 7980,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 7973,
											"end": 7985,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 7966,
											"end": 7985,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 7966,
											"end": 7985,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7818,
											"end": 7991,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 7818,
											"end": 7991,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 7818,
											"end": 7991,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7818,
											"end": 7991,
											"name": "JUMP",
											"source": 13,
											"value": "[out]"
										},
										{
											"begin": 7997,
											"end": 8365,
											"name": "tag",
											"source": 13,
											"value": "451"
										},
										{
											"begin": 7997,
											"end": 8365,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7997,
											"end": 8365,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 8160,
											"end": 8227,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "453"
										},
										{
											"begin": 8224,
											"end": 8226,
											"name": "PUSH",
											"source": 13,
											"value": "24"
										},
										{
											"begin": 8219,
											"end": 8222,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 8160,
											"end": 8227,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "444"
										},
										{
											"begin": 8160,
											"end": 8227,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 8160,
											"end": 8227,
											"name": "tag",
											"source": 13,
											"value": "453"
										},
										{
											"begin": 8160,
											"end": 8227,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 8153,
											"end": 8227,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 8153,
											"end": 8227,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 8257,
											"end": 8291,
											"name": "PUSH",
											"source": 13,
											"value": "496E646578206F766572666C6F7720617420656D697373696F6E735065725365"
										},
										{
											"begin": 8253,
											"end": 8254,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 8248,
											"end": 8251,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 8244,
											"end": 8255,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 8237,
											"end": 8292,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 8323,
											"end": 8329,
											"name": "PUSH",
											"source": 13,
											"value": "636F6E6400000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 8318,
											"end": 8320,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 8313,
											"end": 8316,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 8309,
											"end": 8321,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 8302,
											"end": 8330,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 8356,
											"end": 8358,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 8351,
											"end": 8354,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 8347,
											"end": 8359,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 8340,
											"end": 8359,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 8340,
											"end": 8359,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 8143,
											"end": 8365,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 8143,
											"end": 8365,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 8143,
											"end": 8365,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 8143,
											"end": 8365,
											"name": "JUMP",
											"source": 13,
											"value": "[out]"
										},
										{
											"begin": 8371,
											"end": 8683,
											"name": "tag",
											"source": 13,
											"value": "454"
										},
										{
											"begin": 8371,
											"end": 8683,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 8371,
											"end": 8683,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 8534,
											"end": 8601,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "456"
										},
										{
											"begin": 8598,
											"end": 8600,
											"name": "PUSH",
											"source": 13,
											"value": "E"
										},
										{
											"begin": 8593,
											"end": 8596,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 8534,
											"end": 8601,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "444"
										},
										{
											"begin": 8534,
											"end": 8601,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 8534,
											"end": 8601,
											"name": "tag",
											"source": 13,
											"value": "456"
										},
										{
											"begin": 8534,
											"end": 8601,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 8527,
											"end": 8601,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 8527,
											"end": 8601,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 8631,
											"end": 8647,
											"name": "PUSH",
											"source": 13,
											"value": "496E646578206F766572666C6F77000000000000000000000000000000000000"
										},
										{
											"begin": 8627,
											"end": 8628,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 8622,
											"end": 8625,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 8618,
											"end": 8629,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 8611,
											"end": 8648,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 8674,
											"end": 8676,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 8669,
											"end": 8672,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 8665,
											"end": 8677,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 8658,
											"end": 8677,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 8658,
											"end": 8677,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 8517,
											"end": 8683,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 8517,
											"end": 8683,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 8517,
											"end": 8683,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 8517,
											"end": 8683,
											"name": "JUMP",
											"source": 13,
											"value": "[out]"
										},
										{
											"begin": 8689,
											"end": 9008,
											"name": "tag",
											"source": 13,
											"value": "457"
										},
										{
											"begin": 8689,
											"end": 9008,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 8689,
											"end": 9008,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 8852,
											"end": 8919,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "459"
										},
										{
											"begin": 8916,
											"end": 8918,
											"name": "PUSH",
											"source": 13,
											"value": "15"
										},
										{
											"begin": 8911,
											"end": 8914,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 8852,
											"end": 8919,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "444"
										},
										{
											"begin": 8852,
											"end": 8919,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 8852,
											"end": 8919,
											"name": "tag",
											"source": 13,
											"value": "459"
										},
										{
											"begin": 8852,
											"end": 8919,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 8845,
											"end": 8919,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 8845,
											"end": 8919,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 8949,
											"end": 8972,
											"name": "PUSH",
											"source": 13,
											"value": "4F4E4C595F454D495353494F4E5F4D414E414745520000000000000000000000"
										},
										{
											"begin": 8945,
											"end": 8946,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 8940,
											"end": 8943,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 8936,
											"end": 8947,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 8929,
											"end": 8973,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 8999,
											"end": 9001,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 8994,
											"end": 8997,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 8990,
											"end": 9002,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 8983,
											"end": 9002,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 8983,
											"end": 9002,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 8835,
											"end": 9008,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 8835,
											"end": 9008,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 8835,
											"end": 9008,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 8835,
											"end": 9008,
											"name": "JUMP",
											"source": 13,
											"value": "[out]"
										},
										{
											"begin": 9014,
											"end": 9332,
											"name": "tag",
											"source": 13,
											"value": "460"
										},
										{
											"begin": 9014,
											"end": 9332,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 9014,
											"end": 9332,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 9177,
											"end": 9244,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "462"
										},
										{
											"begin": 9241,
											"end": 9243,
											"name": "PUSH",
											"source": 13,
											"value": "14"
										},
										{
											"begin": 9236,
											"end": 9239,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 9177,
											"end": 9244,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "444"
										},
										{
											"begin": 9177,
											"end": 9244,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 9177,
											"end": 9244,
											"name": "tag",
											"source": 13,
											"value": "462"
										},
										{
											"begin": 9177,
											"end": 9244,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 9170,
											"end": 9244,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 9170,
											"end": 9244,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 9274,
											"end": 9296,
											"name": "PUSH",
											"source": 13,
											"value": "434C41494D45525F554E415554484F52495A4544000000000000000000000000"
										},
										{
											"begin": 9270,
											"end": 9271,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 9265,
											"end": 9268,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 9261,
											"end": 9272,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 9254,
											"end": 9297,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 9323,
											"end": 9325,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 9318,
											"end": 9321,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 9314,
											"end": 9326,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 9307,
											"end": 9326,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 9307,
											"end": 9326,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 9160,
											"end": 9332,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 9160,
											"end": 9332,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 9160,
											"end": 9332,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 9160,
											"end": 9332,
											"name": "JUMP",
											"source": 13,
											"value": "[out]"
										},
										{
											"begin": 9338,
											"end": 9456,
											"name": "tag",
											"source": 13,
											"value": "463"
										},
										{
											"begin": 9338,
											"end": 9456,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 9425,
											"end": 9449,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "465"
										},
										{
											"begin": 9443,
											"end": 9448,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 9425,
											"end": 9449,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "466"
										},
										{
											"begin": 9425,
											"end": 9449,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 9425,
											"end": 9449,
											"name": "tag",
											"source": 13,
											"value": "465"
										},
										{
											"begin": 9425,
											"end": 9449,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 9420,
											"end": 9423,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 9413,
											"end": 9450,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 9403,
											"end": 9456,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 9403,
											"end": 9456,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 9403,
											"end": 9456,
											"name": "JUMP",
											"source": 13,
											"value": "[out]"
										},
										{
											"begin": 9462,
											"end": 9593,
											"name": "tag",
											"source": 13,
											"value": "467"
										},
										{
											"begin": 9462,
											"end": 9593,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 9549,
											"end": 9586,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "469"
										},
										{
											"begin": 9580,
											"end": 9585,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 9549,
											"end": 9586,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "470"
										},
										{
											"begin": 9549,
											"end": 9586,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 9549,
											"end": 9586,
											"name": "tag",
											"source": 13,
											"value": "469"
										},
										{
											"begin": 9549,
											"end": 9586,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 9544,
											"end": 9547,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 9537,
											"end": 9587,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 9527,
											"end": 9593,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 9527,
											"end": 9593,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 9527,
											"end": 9593,
											"name": "JUMP",
											"source": 13,
											"value": "[out]"
										},
										{
											"begin": 9599,
											"end": 9717,
											"name": "tag",
											"source": 13,
											"value": "471"
										},
										{
											"begin": 9599,
											"end": 9717,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 9686,
											"end": 9710,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "473"
										},
										{
											"begin": 9704,
											"end": 9709,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 9686,
											"end": 9710,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "474"
										},
										{
											"begin": 9686,
											"end": 9710,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 9686,
											"end": 9710,
											"name": "tag",
											"source": 13,
											"value": "473"
										},
										{
											"begin": 9686,
											"end": 9710,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 9681,
											"end": 9684,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 9674,
											"end": 9711,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 9664,
											"end": 9717,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 9664,
											"end": 9717,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 9664,
											"end": 9717,
											"name": "JUMP",
											"source": 13,
											"value": "[out]"
										},
										{
											"begin": 9723,
											"end": 9838,
											"name": "tag",
											"source": 13,
											"value": "475"
										},
										{
											"begin": 9723,
											"end": 9838,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 9808,
											"end": 9831,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "477"
										},
										{
											"begin": 9825,
											"end": 9830,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 9808,
											"end": 9831,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "478"
										},
										{
											"begin": 9808,
											"end": 9831,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 9808,
											"end": 9831,
											"name": "tag",
											"source": 13,
											"value": "477"
										},
										{
											"begin": 9808,
											"end": 9831,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 9803,
											"end": 9806,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 9796,
											"end": 9832,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 9786,
											"end": 9838,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 9786,
											"end": 9838,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 9786,
											"end": 9838,
											"name": "JUMP",
											"source": 13,
											"value": "[out]"
										},
										{
											"begin": 9844,
											"end": 9956,
											"name": "tag",
											"source": 13,
											"value": "479"
										},
										{
											"begin": 9844,
											"end": 9956,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 9927,
											"end": 9949,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "481"
										},
										{
											"begin": 9943,
											"end": 9948,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 9927,
											"end": 9949,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "482"
										},
										{
											"begin": 9927,
											"end": 9949,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 9927,
											"end": 9949,
											"name": "tag",
											"source": 13,
											"value": "481"
										},
										{
											"begin": 9927,
											"end": 9949,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 9922,
											"end": 9925,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 9915,
											"end": 9950,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 9905,
											"end": 9956,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 9905,
											"end": 9956,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 9905,
											"end": 9956,
											"name": "JUMP",
											"source": 13,
											"value": "[out]"
										},
										{
											"begin": 9962,
											"end": 10184,
											"name": "tag",
											"source": 13,
											"value": "71"
										},
										{
											"begin": 9962,
											"end": 10184,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 9962,
											"end": 10184,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 10093,
											"end": 10095,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 10082,
											"end": 10091,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 10078,
											"end": 10096,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 10070,
											"end": 10096,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 10070,
											"end": 10096,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 10106,
											"end": 10177,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "484"
										},
										{
											"begin": 10174,
											"end": 10175,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 10163,
											"end": 10172,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 10159,
											"end": 10176,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 10150,
											"end": 10156,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 10106,
											"end": 10177,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "437"
										},
										{
											"begin": 10106,
											"end": 10177,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 10106,
											"end": 10177,
											"name": "tag",
											"source": 13,
											"value": "484"
										},
										{
											"begin": 10106,
											"end": 10177,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 10060,
											"end": 10184,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 10060,
											"end": 10184,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 10060,
											"end": 10184,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 10060,
											"end": 10184,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 10060,
											"end": 10184,
											"name": "JUMP",
											"source": 13,
											"value": "[out]"
										},
										{
											"begin": 10190,
											"end": 10609,
											"name": "tag",
											"source": 13,
											"value": "148"
										},
										{
											"begin": 10190,
											"end": 10609,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 10190,
											"end": 10609,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 10394,
											"end": 10396,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 10383,
											"end": 10392,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 10379,
											"end": 10397,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 10371,
											"end": 10397,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 10371,
											"end": 10397,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 10443,
											"end": 10452,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 10437,
											"end": 10441,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 10433,
											"end": 10453,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 10429,
											"end": 10430,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 10418,
											"end": 10427,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 10414,
											"end": 10431,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 10407,
											"end": 10454,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 10471,
											"end": 10602,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "486"
										},
										{
											"begin": 10597,
											"end": 10601,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 10471,
											"end": 10602,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "441"
										},
										{
											"begin": 10471,
											"end": 10602,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 10471,
											"end": 10602,
											"name": "tag",
											"source": 13,
											"value": "486"
										},
										{
											"begin": 10471,
											"end": 10602,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 10463,
											"end": 10602,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 10463,
											"end": 10602,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 10361,
											"end": 10609,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 10361,
											"end": 10609,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 10361,
											"end": 10609,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 10361,
											"end": 10609,
											"name": "JUMP",
											"source": 13,
											"value": "[out]"
										},
										{
											"begin": 10615,
											"end": 11034,
											"name": "tag",
											"source": 13,
											"value": "122"
										},
										{
											"begin": 10615,
											"end": 11034,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 10615,
											"end": 11034,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 10819,
											"end": 10821,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 10808,
											"end": 10817,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 10804,
											"end": 10822,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 10796,
											"end": 10822,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 10796,
											"end": 10822,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 10868,
											"end": 10877,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 10862,
											"end": 10866,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 10858,
											"end": 10878,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 10854,
											"end": 10855,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 10843,
											"end": 10852,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 10839,
											"end": 10856,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 10832,
											"end": 10879,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 10896,
											"end": 11027,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "488"
										},
										{
											"begin": 11022,
											"end": 11026,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 10896,
											"end": 11027,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "445"
										},
										{
											"begin": 10896,
											"end": 11027,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 10896,
											"end": 11027,
											"name": "tag",
											"source": 13,
											"value": "488"
										},
										{
											"begin": 10896,
											"end": 11027,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 10888,
											"end": 11027,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 10888,
											"end": 11027,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 10786,
											"end": 11034,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 10786,
											"end": 11034,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 10786,
											"end": 11034,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 10786,
											"end": 11034,
											"name": "JUMP",
											"source": 13,
											"value": "[out]"
										},
										{
											"begin": 11040,
											"end": 11459,
											"name": "tag",
											"source": 13,
											"value": "159"
										},
										{
											"begin": 11040,
											"end": 11459,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 11040,
											"end": 11459,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 11244,
											"end": 11246,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 11233,
											"end": 11242,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 11229,
											"end": 11247,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 11221,
											"end": 11247,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 11221,
											"end": 11247,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 11293,
											"end": 11302,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 11287,
											"end": 11291,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 11283,
											"end": 11303,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 11279,
											"end": 11280,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 11268,
											"end": 11277,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 11264,
											"end": 11281,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 11257,
											"end": 11304,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 11321,
											"end": 11452,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "490"
										},
										{
											"begin": 11447,
											"end": 11451,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 11321,
											"end": 11452,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "448"
										},
										{
											"begin": 11321,
											"end": 11452,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 11321,
											"end": 11452,
											"name": "tag",
											"source": 13,
											"value": "490"
										},
										{
											"begin": 11321,
											"end": 11452,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 11313,
											"end": 11452,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 11313,
											"end": 11452,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 11211,
											"end": 11459,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 11211,
											"end": 11459,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 11211,
											"end": 11459,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 11211,
											"end": 11459,
											"name": "JUMP",
											"source": 13,
											"value": "[out]"
										},
										{
											"begin": 11465,
											"end": 11884,
											"name": "tag",
											"source": 13,
											"value": "172"
										},
										{
											"begin": 11465,
											"end": 11884,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 11465,
											"end": 11884,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 11669,
											"end": 11671,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 11658,
											"end": 11667,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 11654,
											"end": 11672,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 11646,
											"end": 11672,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 11646,
											"end": 11672,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 11718,
											"end": 11727,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 11712,
											"end": 11716,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 11708,
											"end": 11728,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 11704,
											"end": 11705,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 11693,
											"end": 11702,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 11689,
											"end": 11706,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 11682,
											"end": 11729,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 11746,
											"end": 11877,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "492"
										},
										{
											"begin": 11872,
											"end": 11876,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 11746,
											"end": 11877,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "451"
										},
										{
											"begin": 11746,
											"end": 11877,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 11746,
											"end": 11877,
											"name": "tag",
											"source": 13,
											"value": "492"
										},
										{
											"begin": 11746,
											"end": 11877,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 11738,
											"end": 11877,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 11738,
											"end": 11877,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 11636,
											"end": 11884,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 11636,
											"end": 11884,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 11636,
											"end": 11884,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 11636,
											"end": 11884,
											"name": "JUMP",
											"source": 13,
											"value": "[out]"
										},
										{
											"begin": 11890,
											"end": 12309,
											"name": "tag",
											"source": 13,
											"value": "315"
										},
										{
											"begin": 11890,
											"end": 12309,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 11890,
											"end": 12309,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 12094,
											"end": 12096,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 12083,
											"end": 12092,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 12079,
											"end": 12097,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 12071,
											"end": 12097,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 12071,
											"end": 12097,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 12143,
											"end": 12152,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 12137,
											"end": 12141,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 12133,
											"end": 12153,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 12129,
											"end": 12130,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 12118,
											"end": 12127,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 12114,
											"end": 12131,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 12107,
											"end": 12154,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 12171,
											"end": 12302,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "494"
										},
										{
											"begin": 12297,
											"end": 12301,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 12171,
											"end": 12302,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "454"
										},
										{
											"begin": 12171,
											"end": 12302,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 12171,
											"end": 12302,
											"name": "tag",
											"source": 13,
											"value": "494"
										},
										{
											"begin": 12171,
											"end": 12302,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 12163,
											"end": 12302,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 12163,
											"end": 12302,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 12061,
											"end": 12309,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 12061,
											"end": 12309,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 12061,
											"end": 12309,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 12061,
											"end": 12309,
											"name": "JUMP",
											"source": 13,
											"value": "[out]"
										},
										{
											"begin": 12315,
											"end": 12734,
											"name": "tag",
											"source": 13,
											"value": "136"
										},
										{
											"begin": 12315,
											"end": 12734,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 12315,
											"end": 12734,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 12519,
											"end": 12521,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 12508,
											"end": 12517,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 12504,
											"end": 12522,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 12496,
											"end": 12522,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 12496,
											"end": 12522,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 12568,
											"end": 12577,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 12562,
											"end": 12566,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 12558,
											"end": 12578,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 12554,
											"end": 12555,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 12543,
											"end": 12552,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 12539,
											"end": 12556,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 12532,
											"end": 12579,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 12596,
											"end": 12727,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "496"
										},
										{
											"begin": 12722,
											"end": 12726,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 12596,
											"end": 12727,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "457"
										},
										{
											"begin": 12596,
											"end": 12727,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 12596,
											"end": 12727,
											"name": "tag",
											"source": 13,
											"value": "496"
										},
										{
											"begin": 12596,
											"end": 12727,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 12588,
											"end": 12727,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 12588,
											"end": 12727,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 12486,
											"end": 12734,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 12486,
											"end": 12734,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 12486,
											"end": 12734,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 12486,
											"end": 12734,
											"name": "JUMP",
											"source": 13,
											"value": "[out]"
										},
										{
											"begin": 12740,
											"end": 13159,
											"name": "tag",
											"source": 13,
											"value": "144"
										},
										{
											"begin": 12740,
											"end": 13159,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 12740,
											"end": 13159,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 12944,
											"end": 12946,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 12933,
											"end": 12942,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 12929,
											"end": 12947,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 12921,
											"end": 12947,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 12921,
											"end": 12947,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 12993,
											"end": 13002,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 12987,
											"end": 12991,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 12983,
											"end": 13003,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 12979,
											"end": 12980,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 12968,
											"end": 12977,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 12964,
											"end": 12981,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 12957,
											"end": 13004,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 13021,
											"end": 13152,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "498"
										},
										{
											"begin": 13147,
											"end": 13151,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 13021,
											"end": 13152,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "460"
										},
										{
											"begin": 13021,
											"end": 13152,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 13021,
											"end": 13152,
											"name": "tag",
											"source": 13,
											"value": "498"
										},
										{
											"begin": 13021,
											"end": 13152,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 13013,
											"end": 13152,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 13013,
											"end": 13152,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 12911,
											"end": 13159,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 12911,
											"end": 13159,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 12911,
											"end": 13159,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 12911,
											"end": 13159,
											"name": "JUMP",
											"source": 13,
											"value": "[out]"
										},
										{
											"begin": 13165,
											"end": 13387,
											"name": "tag",
											"source": 13,
											"value": "284"
										},
										{
											"begin": 13165,
											"end": 13387,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 13165,
											"end": 13387,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 13296,
											"end": 13298,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 13285,
											"end": 13294,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 13281,
											"end": 13299,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 13273,
											"end": 13299,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 13273,
											"end": 13299,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 13309,
											"end": 13380,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "500"
										},
										{
											"begin": 13377,
											"end": 13378,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 13366,
											"end": 13375,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 13362,
											"end": 13379,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 13353,
											"end": 13359,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 13309,
											"end": 13380,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "467"
										},
										{
											"begin": 13309,
											"end": 13380,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 13309,
											"end": 13380,
											"name": "tag",
											"source": 13,
											"value": "500"
										},
										{
											"begin": 13309,
											"end": 13380,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 13263,
											"end": 13387,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 13263,
											"end": 13387,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 13263,
											"end": 13387,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 13263,
											"end": 13387,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 13263,
											"end": 13387,
											"name": "JUMP",
											"source": 13,
											"value": "[out]"
										},
										{
											"begin": 13393,
											"end": 13831,
											"name": "tag",
											"source": 13,
											"value": "110"
										},
										{
											"begin": 13393,
											"end": 13831,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 13393,
											"end": 13831,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 13578,
											"end": 13580,
											"name": "PUSH",
											"source": 13,
											"value": "60"
										},
										{
											"begin": 13567,
											"end": 13576,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 13563,
											"end": 13581,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 13555,
											"end": 13581,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 13555,
											"end": 13581,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 13591,
											"end": 13662,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "502"
										},
										{
											"begin": 13659,
											"end": 13660,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 13648,
											"end": 13657,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 13644,
											"end": 13661,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 13635,
											"end": 13641,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 13591,
											"end": 13662,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "463"
										},
										{
											"begin": 13591,
											"end": 13662,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 13591,
											"end": 13662,
											"name": "tag",
											"source": 13,
											"value": "502"
										},
										{
											"begin": 13591,
											"end": 13662,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 13672,
											"end": 13744,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "503"
										},
										{
											"begin": 13740,
											"end": 13742,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 13729,
											"end": 13738,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 13725,
											"end": 13743,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 13716,
											"end": 13722,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 13672,
											"end": 13744,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "463"
										},
										{
											"begin": 13672,
											"end": 13744,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 13672,
											"end": 13744,
											"name": "tag",
											"source": 13,
											"value": "503"
										},
										{
											"begin": 13672,
											"end": 13744,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 13754,
											"end": 13824,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "504"
										},
										{
											"begin": 13820,
											"end": 13822,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 13809,
											"end": 13818,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 13805,
											"end": 13823,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 13796,
											"end": 13802,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 13754,
											"end": 13824,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "475"
										},
										{
											"begin": 13754,
											"end": 13824,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 13754,
											"end": 13824,
											"name": "tag",
											"source": 13,
											"value": "504"
										},
										{
											"begin": 13754,
											"end": 13824,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 13545,
											"end": 13831,
											"name": "SWAP5",
											"source": 13
										},
										{
											"begin": 13545,
											"end": 13831,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 13545,
											"end": 13831,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 13545,
											"end": 13831,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 13545,
											"end": 13831,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 13545,
											"end": 13831,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 13545,
											"end": 13831,
											"name": "JUMP",
											"source": 13,
											"value": "[out]"
										},
										{
											"begin": 13837,
											"end": 14059,
											"name": "tag",
											"source": 13,
											"value": "38"
										},
										{
											"begin": 13837,
											"end": 14059,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 13837,
											"end": 14059,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 13968,
											"end": 13970,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 13957,
											"end": 13966,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 13953,
											"end": 13971,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 13945,
											"end": 13971,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 13945,
											"end": 13971,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 13981,
											"end": 14052,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "506"
										},
										{
											"begin": 14049,
											"end": 14050,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 14038,
											"end": 14047,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 14034,
											"end": 14051,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 14025,
											"end": 14031,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 13981,
											"end": 14052,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "471"
										},
										{
											"begin": 13981,
											"end": 14052,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 13981,
											"end": 14052,
											"name": "tag",
											"source": 13,
											"value": "506"
										},
										{
											"begin": 13981,
											"end": 14052,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 13935,
											"end": 14059,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 13935,
											"end": 14059,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 13935,
											"end": 14059,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 13935,
											"end": 14059,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 13935,
											"end": 14059,
											"name": "JUMP",
											"source": 13,
											"value": "[out]"
										},
										{
											"begin": 14065,
											"end": 14507,
											"name": "tag",
											"source": 13,
											"value": "33"
										},
										{
											"begin": 14065,
											"end": 14507,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 14065,
											"end": 14507,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 14252,
											"end": 14254,
											"name": "PUSH",
											"source": 13,
											"value": "60"
										},
										{
											"begin": 14241,
											"end": 14250,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 14237,
											"end": 14255,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 14229,
											"end": 14255,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 14229,
											"end": 14255,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 14265,
											"end": 14336,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "508"
										},
										{
											"begin": 14333,
											"end": 14334,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 14322,
											"end": 14331,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 14318,
											"end": 14335,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 14309,
											"end": 14315,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 14265,
											"end": 14336,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "471"
										},
										{
											"begin": 14265,
											"end": 14336,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 14265,
											"end": 14336,
											"name": "tag",
											"source": 13,
											"value": "508"
										},
										{
											"begin": 14265,
											"end": 14336,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 14346,
											"end": 14418,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "509"
										},
										{
											"begin": 14414,
											"end": 14416,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 14403,
											"end": 14412,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 14399,
											"end": 14417,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 14390,
											"end": 14396,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 14346,
											"end": 14418,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "471"
										},
										{
											"begin": 14346,
											"end": 14418,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 14346,
											"end": 14418,
											"name": "tag",
											"source": 13,
											"value": "509"
										},
										{
											"begin": 14346,
											"end": 14418,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 14428,
											"end": 14500,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "510"
										},
										{
											"begin": 14496,
											"end": 14498,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 14485,
											"end": 14494,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 14481,
											"end": 14499,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 14472,
											"end": 14478,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 14428,
											"end": 14500,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "471"
										},
										{
											"begin": 14428,
											"end": 14500,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 14428,
											"end": 14500,
											"name": "tag",
											"source": 13,
											"value": "510"
										},
										{
											"begin": 14428,
											"end": 14500,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 14219,
											"end": 14507,
											"name": "SWAP5",
											"source": 13
										},
										{
											"begin": 14219,
											"end": 14507,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 14219,
											"end": 14507,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 14219,
											"end": 14507,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 14219,
											"end": 14507,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 14219,
											"end": 14507,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 14219,
											"end": 14507,
											"name": "JUMP",
											"source": 13,
											"value": "[out]"
										},
										{
											"begin": 14513,
											"end": 14727,
											"name": "tag",
											"source": 13,
											"value": "90"
										},
										{
											"begin": 14513,
											"end": 14727,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 14513,
											"end": 14727,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 14640,
											"end": 14642,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 14629,
											"end": 14638,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 14625,
											"end": 14643,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 14617,
											"end": 14643,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 14617,
											"end": 14643,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 14653,
											"end": 14720,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "512"
										},
										{
											"begin": 14717,
											"end": 14718,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 14706,
											"end": 14715,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 14702,
											"end": 14719,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 14693,
											"end": 14699,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 14653,
											"end": 14720,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "479"
										},
										{
											"begin": 14653,
											"end": 14720,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 14653,
											"end": 14720,
											"name": "tag",
											"source": 13,
											"value": "512"
										},
										{
											"begin": 14653,
											"end": 14720,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 14607,
											"end": 14727,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 14607,
											"end": 14727,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 14607,
											"end": 14727,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 14607,
											"end": 14727,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 14607,
											"end": 14727,
											"name": "JUMP",
											"source": 13,
											"value": "[out]"
										},
										{
											"begin": 14733,
											"end": 14902,
											"name": "tag",
											"source": 13,
											"value": "444"
										},
										{
											"begin": 14733,
											"end": 14902,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 14733,
											"end": 14902,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 14851,
											"end": 14857,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 14846,
											"end": 14849,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 14839,
											"end": 14858,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 14891,
											"end": 14895,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 14886,
											"end": 14889,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 14882,
											"end": 14896,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 14867,
											"end": 14896,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 14867,
											"end": 14896,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 14829,
											"end": 14902,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 14829,
											"end": 14902,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 14829,
											"end": 14902,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 14829,
											"end": 14902,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 14829,
											"end": 14902,
											"name": "JUMP",
											"source": 13,
											"value": "[out]"
										},
										{
											"begin": 14908,
											"end": 15004,
											"name": "tag",
											"source": 13,
											"value": "440"
										},
										{
											"begin": 14908,
											"end": 15004,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 14908,
											"end": 15004,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 14974,
											"end": 14998,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "515"
										},
										{
											"begin": 14992,
											"end": 14997,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 14974,
											"end": 14998,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "516"
										},
										{
											"begin": 14974,
											"end": 14998,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 14974,
											"end": 14998,
											"name": "tag",
											"source": 13,
											"value": "515"
										},
										{
											"begin": 14974,
											"end": 14998,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 14963,
											"end": 14998,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 14963,
											"end": 14998,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 14953,
											"end": 15004,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 14953,
											"end": 15004,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 14953,
											"end": 15004,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 14953,
											"end": 15004,
											"name": "JUMP",
											"source": 13,
											"value": "[out]"
										},
										{
											"begin": 15010,
											"end": 15122,
											"name": "tag",
											"source": 13,
											"value": "466"
										},
										{
											"begin": 15010,
											"end": 15122,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 15010,
											"end": 15122,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 15087,
											"end": 15115,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15080,
											"end": 15085,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 15076,
											"end": 15116,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 15065,
											"end": 15116,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 15065,
											"end": 15116,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 15055,
											"end": 15122,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 15055,
											"end": 15122,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 15055,
											"end": 15122,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 15055,
											"end": 15122,
											"name": "JUMP",
											"source": 13,
											"value": "[out]"
										},
										{
											"begin": 15128,
											"end": 15254,
											"name": "tag",
											"source": 13,
											"value": "516"
										},
										{
											"begin": 15128,
											"end": 15254,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 15128,
											"end": 15254,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 15205,
											"end": 15247,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15198,
											"end": 15203,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 15194,
											"end": 15248,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 15183,
											"end": 15248,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 15183,
											"end": 15248,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 15173,
											"end": 15254,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 15173,
											"end": 15254,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 15173,
											"end": 15254,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 15173,
											"end": 15254,
											"name": "JUMP",
											"source": 13,
											"value": "[out]"
										},
										{
											"begin": 15260,
											"end": 15337,
											"name": "tag",
											"source": 13,
											"value": "474"
										},
										{
											"begin": 15260,
											"end": 15337,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 15260,
											"end": 15337,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 15326,
											"end": 15331,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 15315,
											"end": 15331,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 15315,
											"end": 15331,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 15305,
											"end": 15337,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 15305,
											"end": 15337,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 15305,
											"end": 15337,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 15305,
											"end": 15337,
											"name": "JUMP",
											"source": 13,
											"value": "[out]"
										},
										{
											"begin": 15343,
											"end": 15438,
											"name": "tag",
											"source": 13,
											"value": "478"
										},
										{
											"begin": 15343,
											"end": 15438,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 15343,
											"end": 15438,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 15419,
											"end": 15431,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFF"
										},
										{
											"begin": 15412,
											"end": 15417,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 15408,
											"end": 15432,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 15397,
											"end": 15432,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 15397,
											"end": 15432,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 15387,
											"end": 15438,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 15387,
											"end": 15438,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 15387,
											"end": 15438,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 15387,
											"end": 15438,
											"name": "JUMP",
											"source": 13,
											"value": "[out]"
										},
										{
											"begin": 15444,
											"end": 15530,
											"name": "tag",
											"source": 13,
											"value": "482"
										},
										{
											"begin": 15444,
											"end": 15530,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 15444,
											"end": 15530,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 15519,
											"end": 15523,
											"name": "PUSH",
											"source": 13,
											"value": "FF"
										},
										{
											"begin": 15512,
											"end": 15517,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 15508,
											"end": 15524,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 15497,
											"end": 15524,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 15497,
											"end": 15524,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 15487,
											"end": 15530,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 15487,
											"end": 15530,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 15487,
											"end": 15530,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 15487,
											"end": 15530,
											"name": "JUMP",
											"source": 13,
											"value": "[out]"
										},
										{
											"begin": 15536,
											"end": 15649,
											"name": "tag",
											"source": 13,
											"value": "470"
										},
										{
											"begin": 15536,
											"end": 15649,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 15536,
											"end": 15649,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 15619,
											"end": 15643,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "523"
										},
										{
											"begin": 15637,
											"end": 15642,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 15619,
											"end": 15643,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "466"
										},
										{
											"begin": 15619,
											"end": 15643,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 15619,
											"end": 15643,
											"name": "tag",
											"source": 13,
											"value": "523"
										},
										{
											"begin": 15619,
											"end": 15643,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 15606,
											"end": 15643,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 15606,
											"end": 15643,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 15596,
											"end": 15649,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 15596,
											"end": 15649,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 15596,
											"end": 15649,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 15596,
											"end": 15649,
											"name": "JUMP",
											"source": 13,
											"value": "[out]"
										},
										{
											"begin": 15655,
											"end": 15777,
											"name": "tag",
											"source": 13,
											"value": "368"
										},
										{
											"begin": 15655,
											"end": 15777,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 15728,
											"end": 15752,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "525"
										},
										{
											"begin": 15746,
											"end": 15751,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 15728,
											"end": 15752,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "440"
										},
										{
											"begin": 15728,
											"end": 15752,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 15728,
											"end": 15752,
											"name": "tag",
											"source": 13,
											"value": "525"
										},
										{
											"begin": 15728,
											"end": 15752,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 15721,
											"end": 15726,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 15718,
											"end": 15753,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 15708,
											"end": 15710,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "526"
										},
										{
											"begin": 15708,
											"end": 15710,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 15767,
											"end": 15768,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 15764,
											"end": 15765,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 15757,
											"end": 15769,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 15708,
											"end": 15710,
											"name": "tag",
											"source": 13,
											"value": "526"
										},
										{
											"begin": 15708,
											"end": 15710,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 15698,
											"end": 15777,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 15698,
											"end": 15777,
											"name": "JUMP",
											"source": 13,
											"value": "[out]"
										},
										{
											"begin": 15783,
											"end": 15905,
											"name": "tag",
											"source": 13,
											"value": "382"
										},
										{
											"begin": 15783,
											"end": 15905,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 15856,
											"end": 15880,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "528"
										},
										{
											"begin": 15874,
											"end": 15879,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 15856,
											"end": 15880,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "474"
										},
										{
											"begin": 15856,
											"end": 15880,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 15856,
											"end": 15880,
											"name": "tag",
											"source": 13,
											"value": "528"
										},
										{
											"begin": 15856,
											"end": 15880,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 15849,
											"end": 15854,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 15846,
											"end": 15881,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 15836,
											"end": 15838,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "529"
										},
										{
											"begin": 15836,
											"end": 15838,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 15895,
											"end": 15896,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 15892,
											"end": 15893,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 15885,
											"end": 15897,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 15836,
											"end": 15838,
											"name": "tag",
											"source": 13,
											"value": "529"
										},
										{
											"begin": 15836,
											"end": 15838,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 15826,
											"end": 15905,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 15826,
											"end": 15905,
											"name": "JUMP",
											"source": 13,
											"value": "[out]"
										}
									],
									".data": {
										"9FBBA6C4DCAC9134893B633B9564F36435B3F927C1D5FA152C5C14B20CECB1A4": "436f6e747261637420696e7374616e63652068617320616c7265616479206265656e20696e697469616c697a6564",
										"E11AD79D1E4A7F2E5F376964CB99E8E8F7904E3FC16A109F7A7ECB9AA7956DCD": "5361666545524332303a204552433230206f7065726174696f6e20646964206e6f742073756363656564"
									}
								}
							}
						},
						"methodIdentifiers": {
							"DISTRIBUTION_END()": "919cd40f",
							"EMISSION_MANAGER()": "cbcbb507",
							"PRECISION()": "aaf5eb68",
							"REVISION()": "dde43cba",
							"REWARD_TOKEN()": "99248ea7",
							"assets(address)": "f11b8188",
							"claimRewards(address[],uint256,address)": "3111e7b3",
							"claimRewardsOnBehalf(address[],uint256,address,address)": "6d34b96e",
							"claimRewardsToSelf(address[],uint256)": "41485304",
							"configureAssets(address[],uint256[])": "79f171b2",
							"getAssetData(address)": "1652e7b7",
							"getClaimer(address)": "74d945ec",
							"getDistributionEnd()": "cc69afec",
							"getRewardsBalance(address[],address)": "8b599f26",
							"getRewardsVault()": "e23ddec5",
							"getUserAssetData(address,address)": "3373ee4c",
							"getUserUnclaimedRewards(address)": "198fa81e",
							"handleAction(address,uint256,uint256)": "31873e2e",
							"initialize(address)": "c4d66de8",
							"setClaimer(address,address)": "f5cf673b",
							"setDistributionEnd(uint256)": "39ccbdd3",
							"setRewardsVault(address)": "f5bb3e02"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.7.5+commit.eb77ed08\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"rewardToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"emissionManager\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"emission\",\"type\":\"uint256\"}],\"name\":\"AssetConfigUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"AssetIndexUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"claimer\",\"type\":\"address\"}],\"name\":\"ClaimerSet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newDistributionEnd\",\"type\":\"uint256\"}],\"name\":\"DistributionEndUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"RewardsAccrued\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"claimer\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"RewardsClaimed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"vault\",\"type\":\"address\"}],\"name\":\"RewardsVaultUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"UserIndexUpdated\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DISTRIBUTION_END\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"EMISSION_MANAGER\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"PRECISION\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"REVISION\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"REWARD_TOKEN\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"assets\",\"outputs\":[{\"internalType\":\"uint104\",\"name\":\"emissionPerSecond\",\"type\":\"uint104\"},{\"internalType\":\"uint104\",\"name\":\"index\",\"type\":\"uint104\"},{\"internalType\":\"uint40\",\"name\":\"lastUpdateTimestamp\",\"type\":\"uint40\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"assets\",\"type\":\"address[]\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"claimRewards\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"assets\",\"type\":\"address[]\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"claimRewardsOnBehalf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"assets\",\"type\":\"address[]\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"claimRewardsToSelf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"assets\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"emissionsPerSecond\",\"type\":\"uint256[]\"}],\"name\":\"configureAssets\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"}],\"name\":\"getAssetData\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"getClaimer\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getDistributionEnd\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"assets\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"getRewardsBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getRewardsVault\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"}],\"name\":\"getUserAssetData\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"}],\"name\":\"getUserUnclaimedRewards\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"totalSupply\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"userBalance\",\"type\":\"uint256\"}],\"name\":\"handleAction\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"rewardsVault\",\"type\":\"address\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"caller\",\"type\":\"address\"}],\"name\":\"setClaimer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"distributionEnd\",\"type\":\"uint256\"}],\"name\":\"setDistributionEnd\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"rewardsVault\",\"type\":\"address\"}],\"name\":\"setRewardsVault\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"Omnidex*\",\"kind\":\"dev\",\"methods\":{\"DISTRIBUTION_END()\":{\"details\":\"for backwards compatibility with the previous DistributionManager used\",\"returns\":{\"_0\":\"The end of the distribution*\"}},\"claimRewards(address[],uint256,address)\":{\"details\":\"Claims reward for an user to the desired address, on all the assets of the lending pool, accumulating the pending rewards\",\"params\":{\"amount\":\"Amount of rewards to claim\",\"to\":\"Address that will be receiving the rewards\"},\"returns\":{\"_0\":\"Rewards claimed*\"}},\"claimRewardsOnBehalf(address[],uint256,address,address)\":{\"details\":\"Claims reward for an user on behalf, on all the assets of the lending pool, accumulating the pending rewards. The caller must be whitelisted via \\\"allowClaimOnBehalf\\\" function by the RewardsAdmin role manager\",\"params\":{\"amount\":\"Amount of rewards to claim\",\"to\":\"Address that will be receiving the rewards\",\"user\":\"Address to check and claim rewards\"},\"returns\":{\"_0\":\"Rewards claimed*\"}},\"claimRewardsToSelf(address[],uint256)\":{\"details\":\"Claims reward for msg.sender, on all the assets of the lending pool, accumulating the pending rewards\",\"params\":{\"amount\":\"Amount of rewards to claim\"},\"returns\":{\"_0\":\"Rewards claimed*\"}},\"configureAssets(address[],uint256[])\":{\"details\":\"Configure assets for a certain rewards emission\",\"params\":{\"assets\":\"The assets to incentivize\",\"emissionsPerSecond\":\"The emission for each asset\"}},\"getAssetData(address)\":{\"details\":\"Returns the configuration of the distribution for a certain asset\",\"params\":{\"asset\":\"The address of the reference asset of the distribution\"},\"returns\":{\"_0\":\"The asset index, the emission per second and the last updated timestamp*\"}},\"getClaimer(address)\":{\"details\":\"Returns the whitelisted claimer for a certain address (0x0 if not set)\",\"params\":{\"user\":\"The address of the user\"},\"returns\":{\"_0\":\"The claimer address\"}},\"getDistributionEnd()\":{\"details\":\"Gets the end date for the distribution\",\"returns\":{\"_0\":\"The end of the distribution*\"}},\"getRewardsBalance(address[],address)\":{\"details\":\"Returns the total of rewards of an user, already accrued + not yet accrued\",\"params\":{\"user\":\"The address of the user\"},\"returns\":{\"_0\":\"The rewards*\"}},\"getRewardsVault()\":{\"details\":\"returns the current rewards vault contract\",\"returns\":{\"_0\":\"address\"}},\"getUserAssetData(address,address)\":{\"details\":\"Returns the data of an user on a distribution\",\"params\":{\"asset\":\"The address of the reference asset of the distribution\",\"user\":\"Address of the user\"},\"returns\":{\"_0\":\"The new index*\"}},\"getUserUnclaimedRewards(address)\":{\"details\":\"returns the unclaimed rewards of the user\",\"params\":{\"user\":\"the address of the user\"},\"returns\":{\"_0\":\"the unclaimed user rewards\"}},\"handleAction(address,uint256,uint256)\":{\"details\":\"Called by the corresponding asset on any update that affects the rewards distribution\",\"params\":{\"asset\":\"The address of the user\",\"totalSupply\":\"The total supply of the asset in the lending pool*\",\"userBalance\":\"The balance of the user of the asset in the lending pool\"}},\"initialize(address)\":{\"details\":\"Initialize OmnidexIncentivesController\",\"params\":{\"rewardsVault\":\"rewards vault to pull ERC20 funds*\"}},\"setClaimer(address,address)\":{\"details\":\"Whitelists an address to claim the rewards on behalf of another address\",\"params\":{\"claimer\":\"The address of the claimer\",\"user\":\"The address of the user\"}},\"setDistributionEnd(uint256)\":{\"details\":\"Sets the end date for the distribution\",\"params\":{\"distributionEnd\":\"The end date timestamp*\"}},\"setRewardsVault(address)\":{\"details\":\"update the rewards vault address, only allowed by the Rewards admin\",\"params\":{\"rewardsVault\":\"The address of the rewards vault*\"}}},\"title\":\"PullRewardsIncentivesController\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"Distributor contract for ERC20 rewards to the Omnidex protocol participants that pulls ERC20 from external account\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Omnidex-incentives/incentives/PullRewardsIncentivesController.sol\":\"PullRewardsIncentivesController\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@aave/aave-stake/contracts/interfaces/IERC20.sol\":{\"keccak256\":\"0x150506e2e40dc3cea841fe0ade6021b9b0d4e09f7616d312bc7c1300a2d7a94f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d3dbf854f310f20a48cd727e1680067f4d911a4c6d220886935736297a0f89cb\",\"dweb:/ipfs/QmU8xN2AYrURFgmB4hLFLamc7aJe6VD5qkUEcfdrKPcz9C\"]},\"@aave/aave-stake/contracts/lib/Address.sol\":{\"keccak256\":\"0x456a1aebf00cb1f2987ca41f1924e4811703f10800a34ecb759e5d1dc472bb78\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ee41b6968eca15df18d524bb43b928e0405a6fe3d725ffe5950adb73c946cc0b\",\"dweb:/ipfs/QmP4hcWLnx33hoRpFjjQAodx4Hb7oXxHX58kpWcZX8v8cx\"]},\"@aave/aave-stake/contracts/lib/SafeERC20.sol\":{\"keccak256\":\"0xbba27d4b67c08f2a51ecf534aadfd510260996fcf91299691e955ee7539dd5a0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3ea0462318f91a1937d2ab9b51ce675399b2b958c0f9faee08d4c2b721197c3f\",\"dweb:/ipfs/QmZctUrjVX8JJT7umbcjvreTyoTAhzxAEFLi3WhXHBe9r7\"]},\"@aave/aave-stake/contracts/lib/SafeMath.sol\":{\"keccak256\":\"0xf32a71745588178f5f64b96e7766589e48d5402c4679b3c04085760f9437f00b\",\"license\":\"agpl-3.0\",\"urls\":[\"bzz-raw://b05078f9fefe539e3252f8f8c2ffbd50f5106787bccf533a7ad5f7d0c3ff77d2\",\"dweb:/ipfs/QmTXQkKZCmWv8nF7iK1Mwa7AVJzkzfL4AkZvJY2Qx4wXd2\"]},\"@aave/aave-stake/contracts/utils/VersionedInitializable.sol\":{\"keccak256\":\"0xedfec4c491ad24c0a1024fc801c22f2a16d1f316f2a5cdcc883e0bbc451cffc7\",\"license\":\"agpl-3.0\",\"urls\":[\"bzz-raw://e77712031df46b9ffd6ca6d405566177fe35191a427a7278130986eb2889eb57\",\"dweb:/ipfs/QmUEs4hmDe859S9C2jbU7yMPA59ZrhQRqcW268EmfavnrD\"]},\"contracts/Omnidex-incentives/incentives/PullRewardsIncentivesController.sol\":{\"keccak256\":\"0xe6fb27d0204b719864bb7811e1edead3039409ddd0a310e8aff417676283c8ae\",\"license\":\"agpl-3.0\",\"urls\":[\"bzz-raw://6d6814e606e4723f8b8131fc0af4eccaa0bf4693490a6e71b45988de2b0ff7e7\",\"dweb:/ipfs/QmYZTnke2qf1f6ot9Yvajw4WtGSCpeoY3fjm3gYA4v8AKs\"]},\"contracts/Omnidex-incentives/incentives/base/BaseIncentivesController.sol\":{\"keccak256\":\"0x04134ec432e4ef50438e93854442ef0b204ef75f040a791984d00ef0249c2edc\",\"license\":\"agpl-3.0\",\"urls\":[\"bzz-raw://dd86038d54a170da1266dff649985d82b048923930b74107414d5a06b4ae7577\",\"dweb:/ipfs/QmZ5pPeAVqZsQjiESWhuoC7g3ES6giKfU7jX9LrkAk1Fmr\"]},\"contracts/Omnidex-incentives/incentives/base/DistributionManager.sol\":{\"keccak256\":\"0x43b2afa8394898d61bde7ecac7d145cf194b5dfd953d2c9d7694645580a84723\",\"license\":\"agpl-3.0\",\"urls\":[\"bzz-raw://c468a996e248fa021a4886f2a8289426593a6ebe3a7269f4aa08a6af741c232f\",\"dweb:/ipfs/QmUe2xxKETrRMB32joUxdRtn6FVNMm7mVRyEFtftiCZcy1\"]},\"contracts/Omnidex-incentives/interfaces/IOmnidexDistributionManager.sol\":{\"keccak256\":\"0xabf5e1d31a3567f017adf41a4384f0c7a6fce4e81441a7b42fb565f92256a87d\",\"license\":\"agpl-3.0\",\"urls\":[\"bzz-raw://a2aab2cd0efc27da9ced088fcb5534b62c4ebd436688778af86949e706d22fef\",\"dweb:/ipfs/QmPAQiLYLB7QXMKaHjSwWKaK8mN8pgBRteJUqg5ptKebZE\"]},\"contracts/Omnidex-incentives/interfaces/IOmnidexIncentivesController.sol\":{\"keccak256\":\"0x8615452507c06e118914d5bdbd7136745f29030f2bd90fb80101eda042138d84\",\"license\":\"agpl-3.0\",\"urls\":[\"bzz-raw://632c6c2423e567411001205cb0838ed6ccd5a6d36b9f0e27e7262cc79a081e83\",\"dweb:/ipfs/QmSM9PrZzpBZ9Ae6tcDPWoUNztLNrtVpYTCb83bFNjJP4A\"]},\"contracts/Omnidex-incentives/interfaces/IScaledBalanceToken.sol\":{\"keccak256\":\"0x0c6f6980efd0a97e48040fe333c41e32403f8c2ec3629cbd9f714640cf18b213\",\"license\":\"agpl-3.0\",\"urls\":[\"bzz-raw://d5f7a3234e76841405077f4c4d4700d212bb9987328d5b6e8236cdd864c4caf7\",\"dweb:/ipfs/QmZFgW84wn6tZjb4VMW7ifSBWGW1BnPc75iWP3JzS3Ldnr\"]},\"contracts/Omnidex-incentives/lib/DistributionTypes.sol\":{\"keccak256\":\"0xbb24d51b39ff627c1d2dbbaa5063ae7f1d515ec3980cc6ed8f5d171c17ef1d36\",\"license\":\"agpl-3.0\",\"urls\":[\"bzz-raw://30120d3556895da3f517a6ce8954e4419944f9e07b7b4cd3d596df3e8e8103e3\",\"dweb:/ipfs/QmTXPN7Q8ULdJnJVGVTwLbw7Rvy5h17DfabKf8szvprQNb\"]},\"contracts/Omnidex-incentives/lib/SafeMath.sol\":{\"keccak256\":\"0x23218dd12c40acbd9c7c6f799d20dd84c88e1262583e25465f1413ed8c5d67d5\",\"license\":\"agpl-3.0\",\"urls\":[\"bzz-raw://4896e02c7ad212eb804e1ad03a711f964e04eb9b7d6c0024a4cd26b29adc0a1a\",\"dweb:/ipfs/QmamjuX7iGUgpGCgnsPnUsfFMG751kBzrnB2gZFP1tkvxL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 501,
								"contract": "contracts/Omnidex-incentives/incentives/PullRewardsIncentivesController.sol:PullRewardsIncentivesController",
								"label": "lastInitializedRevision",
								"offset": 0,
								"slot": "0",
								"type": "t_uint256"
							},
							{
								"astId": 532,
								"contract": "contracts/Omnidex-incentives/incentives/PullRewardsIncentivesController.sol:PullRewardsIncentivesController",
								"label": "______gap",
								"offset": 0,
								"slot": "1",
								"type": "t_array(t_uint256)50_storage"
							},
							{
								"astId": 1298,
								"contract": "contracts/Omnidex-incentives/incentives/PullRewardsIncentivesController.sol:PullRewardsIncentivesController",
								"label": "assets",
								"offset": 0,
								"slot": "51",
								"type": "t_mapping(t_address,t_struct(AssetData)1289_storage)"
							},
							{
								"astId": 1300,
								"contract": "contracts/Omnidex-incentives/incentives/PullRewardsIncentivesController.sol:PullRewardsIncentivesController",
								"label": "_distributionEnd",
								"offset": 0,
								"slot": "52",
								"type": "t_uint256"
							},
							{
								"astId": 666,
								"contract": "contracts/Omnidex-incentives/incentives/PullRewardsIncentivesController.sol:PullRewardsIncentivesController",
								"label": "_usersUnclaimedRewards",
								"offset": 0,
								"slot": "53",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 670,
								"contract": "contracts/Omnidex-incentives/incentives/PullRewardsIncentivesController.sol:PullRewardsIncentivesController",
								"label": "_authorizedClaimers",
								"offset": 0,
								"slot": "54",
								"type": "t_mapping(t_address,t_address)"
							},
							{
								"astId": 550,
								"contract": "contracts/Omnidex-incentives/incentives/PullRewardsIncentivesController.sol:PullRewardsIncentivesController",
								"label": "_rewardsVault",
								"offset": 0,
								"slot": "55",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_array(t_uint256)50_storage": {
								"base": "t_uint256",
								"encoding": "inplace",
								"label": "uint256[50]",
								"numberOfBytes": "1600"
							},
							"t_mapping(t_address,t_address)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => address)",
								"numberOfBytes": "32",
								"value": "t_address"
							},
							"t_mapping(t_address,t_struct(AssetData)1289_storage)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => struct DistributionManager.AssetData)",
								"numberOfBytes": "32",
								"value": "t_struct(AssetData)1289_storage"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_struct(AssetData)1289_storage": {
								"encoding": "inplace",
								"label": "struct DistributionManager.AssetData",
								"members": [
									{
										"astId": 1280,
										"contract": "contracts/Omnidex-incentives/incentives/PullRewardsIncentivesController.sol:PullRewardsIncentivesController",
										"label": "emissionPerSecond",
										"offset": 0,
										"slot": "0",
										"type": "t_uint104"
									},
									{
										"astId": 1282,
										"contract": "contracts/Omnidex-incentives/incentives/PullRewardsIncentivesController.sol:PullRewardsIncentivesController",
										"label": "index",
										"offset": 13,
										"slot": "0",
										"type": "t_uint104"
									},
									{
										"astId": 1284,
										"contract": "contracts/Omnidex-incentives/incentives/PullRewardsIncentivesController.sol:PullRewardsIncentivesController",
										"label": "lastUpdateTimestamp",
										"offset": 26,
										"slot": "0",
										"type": "t_uint40"
									},
									{
										"astId": 1288,
										"contract": "contracts/Omnidex-incentives/incentives/PullRewardsIncentivesController.sol:PullRewardsIncentivesController",
										"label": "users",
										"offset": 0,
										"slot": "1",
										"type": "t_mapping(t_address,t_uint256)"
									}
								],
								"numberOfBytes": "64"
							},
							"t_uint104": {
								"encoding": "inplace",
								"label": "uint104",
								"numberOfBytes": "13"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							},
							"t_uint40": {
								"encoding": "inplace",
								"label": "uint40",
								"numberOfBytes": "5"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"notice": "Distributor contract for ERC20 rewards to the Omnidex protocol participants that pulls ERC20 from external account",
						"version": 1
					}
				}
			},
			"contracts/Omnidex-incentives/incentives/base/BaseIncentivesController.sol": {
				"BaseIncentivesController": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "asset",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "emission",
									"type": "uint256"
								}
							],
							"name": "AssetConfigUpdated",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "asset",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "index",
									"type": "uint256"
								}
							],
							"name": "AssetIndexUpdated",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "claimer",
									"type": "address"
								}
							],
							"name": "ClaimerSet",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "newDistributionEnd",
									"type": "uint256"
								}
							],
							"name": "DistributionEndUpdated",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "RewardsAccrued",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "claimer",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "RewardsClaimed",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "asset",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "index",
									"type": "uint256"
								}
							],
							"name": "UserIndexUpdated",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "DISTRIBUTION_END",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "EMISSION_MANAGER",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "PRECISION",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "REVISION",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "REWARD_TOKEN",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "assets",
							"outputs": [
								{
									"internalType": "uint104",
									"name": "emissionPerSecond",
									"type": "uint104"
								},
								{
									"internalType": "uint104",
									"name": "index",
									"type": "uint104"
								},
								{
									"internalType": "uint40",
									"name": "lastUpdateTimestamp",
									"type": "uint40"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address[]",
									"name": "assets",
									"type": "address[]"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								}
							],
							"name": "claimRewards",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address[]",
									"name": "assets",
									"type": "address[]"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								}
							],
							"name": "claimRewardsOnBehalf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address[]",
									"name": "assets",
									"type": "address[]"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "claimRewardsToSelf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address[]",
									"name": "assets",
									"type": "address[]"
								},
								{
									"internalType": "uint256[]",
									"name": "emissionsPerSecond",
									"type": "uint256[]"
								}
							],
							"name": "configureAssets",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "asset",
									"type": "address"
								}
							],
							"name": "getAssetData",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "user",
									"type": "address"
								}
							],
							"name": "getClaimer",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getDistributionEnd",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address[]",
									"name": "assets",
									"type": "address[]"
								},
								{
									"internalType": "address",
									"name": "user",
									"type": "address"
								}
							],
							"name": "getRewardsBalance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "asset",
									"type": "address"
								}
							],
							"name": "getUserAssetData",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_user",
									"type": "address"
								}
							],
							"name": "getUserUnclaimedRewards",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "totalSupply",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "userBalance",
									"type": "uint256"
								}
							],
							"name": "handleAction",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "caller",
									"type": "address"
								}
							],
							"name": "setClaimer",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "distributionEnd",
									"type": "uint256"
								}
							],
							"name": "setDistributionEnd",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"author": "Omnidex*",
						"kind": "dev",
						"methods": {
							"DISTRIBUTION_END()": {
								"details": "for backwards compatibility with the previous DistributionManager used",
								"returns": {
									"_0": "The end of the distribution*"
								}
							},
							"claimRewards(address[],uint256,address)": {
								"details": "Claims reward for an user to the desired address, on all the assets of the lending pool, accumulating the pending rewards",
								"params": {
									"amount": "Amount of rewards to claim",
									"to": "Address that will be receiving the rewards"
								},
								"returns": {
									"_0": "Rewards claimed*"
								}
							},
							"claimRewardsOnBehalf(address[],uint256,address,address)": {
								"details": "Claims reward for an user on behalf, on all the assets of the lending pool, accumulating the pending rewards. The caller must be whitelisted via \"allowClaimOnBehalf\" function by the RewardsAdmin role manager",
								"params": {
									"amount": "Amount of rewards to claim",
									"to": "Address that will be receiving the rewards",
									"user": "Address to check and claim rewards"
								},
								"returns": {
									"_0": "Rewards claimed*"
								}
							},
							"claimRewardsToSelf(address[],uint256)": {
								"details": "Claims reward for msg.sender, on all the assets of the lending pool, accumulating the pending rewards",
								"params": {
									"amount": "Amount of rewards to claim"
								},
								"returns": {
									"_0": "Rewards claimed*"
								}
							},
							"configureAssets(address[],uint256[])": {
								"details": "Configure assets for a certain rewards emission",
								"params": {
									"assets": "The assets to incentivize",
									"emissionsPerSecond": "The emission for each asset"
								}
							},
							"getAssetData(address)": {
								"details": "Returns the configuration of the distribution for a certain asset",
								"params": {
									"asset": "The address of the reference asset of the distribution"
								},
								"returns": {
									"_0": "The asset index, the emission per second and the last updated timestamp*"
								}
							},
							"getClaimer(address)": {
								"details": "Returns the whitelisted claimer for a certain address (0x0 if not set)",
								"params": {
									"user": "The address of the user"
								},
								"returns": {
									"_0": "The claimer address"
								}
							},
							"getDistributionEnd()": {
								"details": "Gets the end date for the distribution",
								"returns": {
									"_0": "The end of the distribution*"
								}
							},
							"getRewardsBalance(address[],address)": {
								"details": "Returns the total of rewards of an user, already accrued + not yet accrued",
								"params": {
									"user": "The address of the user"
								},
								"returns": {
									"_0": "The rewards*"
								}
							},
							"getUserAssetData(address,address)": {
								"details": "Returns the data of an user on a distribution",
								"params": {
									"asset": "The address of the reference asset of the distribution",
									"user": "Address of the user"
								},
								"returns": {
									"_0": "The new index*"
								}
							},
							"getUserUnclaimedRewards(address)": {
								"details": "returns the unclaimed rewards of the user",
								"params": {
									"user": "the address of the user"
								},
								"returns": {
									"_0": "the unclaimed user rewards"
								}
							},
							"handleAction(address,uint256,uint256)": {
								"details": "Called by the corresponding asset on any update that affects the rewards distribution",
								"params": {
									"asset": "The address of the user",
									"totalSupply": "The total supply of the asset in the lending pool*",
									"userBalance": "The balance of the user of the asset in the lending pool"
								}
							},
							"setClaimer(address,address)": {
								"details": "Whitelists an address to claim the rewards on behalf of another address",
								"params": {
									"claimer": "The address of the claimer",
									"user": "The address of the user"
								}
							},
							"setDistributionEnd(uint256)": {
								"details": "Sets the end date for the distribution",
								"params": {
									"distributionEnd": "The end date timestamp*"
								}
							}
						},
						"stateVariables": {
							"REWARD_TOKEN": {
								"details": "for backward compatibility with previous implementation of the Incentives controller"
							}
						},
						"title": "BaseIncentivesController",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"DISTRIBUTION_END()": "919cd40f",
							"EMISSION_MANAGER()": "cbcbb507",
							"PRECISION()": "aaf5eb68",
							"REVISION()": "dde43cba",
							"REWARD_TOKEN()": "99248ea7",
							"assets(address)": "f11b8188",
							"claimRewards(address[],uint256,address)": "3111e7b3",
							"claimRewardsOnBehalf(address[],uint256,address,address)": "6d34b96e",
							"claimRewardsToSelf(address[],uint256)": "41485304",
							"configureAssets(address[],uint256[])": "79f171b2",
							"getAssetData(address)": "1652e7b7",
							"getClaimer(address)": "74d945ec",
							"getDistributionEnd()": "cc69afec",
							"getRewardsBalance(address[],address)": "8b599f26",
							"getUserAssetData(address,address)": "3373ee4c",
							"getUserUnclaimedRewards(address)": "198fa81e",
							"handleAction(address,uint256,uint256)": "31873e2e",
							"setClaimer(address,address)": "f5cf673b",
							"setDistributionEnd(uint256)": "39ccbdd3"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.7.5+commit.eb77ed08\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"emission\",\"type\":\"uint256\"}],\"name\":\"AssetConfigUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"AssetIndexUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"claimer\",\"type\":\"address\"}],\"name\":\"ClaimerSet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newDistributionEnd\",\"type\":\"uint256\"}],\"name\":\"DistributionEndUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"RewardsAccrued\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"claimer\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"RewardsClaimed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"UserIndexUpdated\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DISTRIBUTION_END\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"EMISSION_MANAGER\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"PRECISION\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"REVISION\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"REWARD_TOKEN\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"assets\",\"outputs\":[{\"internalType\":\"uint104\",\"name\":\"emissionPerSecond\",\"type\":\"uint104\"},{\"internalType\":\"uint104\",\"name\":\"index\",\"type\":\"uint104\"},{\"internalType\":\"uint40\",\"name\":\"lastUpdateTimestamp\",\"type\":\"uint40\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"assets\",\"type\":\"address[]\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"claimRewards\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"assets\",\"type\":\"address[]\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"claimRewardsOnBehalf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"assets\",\"type\":\"address[]\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"claimRewardsToSelf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"assets\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"emissionsPerSecond\",\"type\":\"uint256[]\"}],\"name\":\"configureAssets\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"}],\"name\":\"getAssetData\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"getClaimer\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getDistributionEnd\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"assets\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"getRewardsBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"}],\"name\":\"getUserAssetData\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"}],\"name\":\"getUserUnclaimedRewards\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"totalSupply\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"userBalance\",\"type\":\"uint256\"}],\"name\":\"handleAction\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"caller\",\"type\":\"address\"}],\"name\":\"setClaimer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"distributionEnd\",\"type\":\"uint256\"}],\"name\":\"setDistributionEnd\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"Omnidex*\",\"kind\":\"dev\",\"methods\":{\"DISTRIBUTION_END()\":{\"details\":\"for backwards compatibility with the previous DistributionManager used\",\"returns\":{\"_0\":\"The end of the distribution*\"}},\"claimRewards(address[],uint256,address)\":{\"details\":\"Claims reward for an user to the desired address, on all the assets of the lending pool, accumulating the pending rewards\",\"params\":{\"amount\":\"Amount of rewards to claim\",\"to\":\"Address that will be receiving the rewards\"},\"returns\":{\"_0\":\"Rewards claimed*\"}},\"claimRewardsOnBehalf(address[],uint256,address,address)\":{\"details\":\"Claims reward for an user on behalf, on all the assets of the lending pool, accumulating the pending rewards. The caller must be whitelisted via \\\"allowClaimOnBehalf\\\" function by the RewardsAdmin role manager\",\"params\":{\"amount\":\"Amount of rewards to claim\",\"to\":\"Address that will be receiving the rewards\",\"user\":\"Address to check and claim rewards\"},\"returns\":{\"_0\":\"Rewards claimed*\"}},\"claimRewardsToSelf(address[],uint256)\":{\"details\":\"Claims reward for msg.sender, on all the assets of the lending pool, accumulating the pending rewards\",\"params\":{\"amount\":\"Amount of rewards to claim\"},\"returns\":{\"_0\":\"Rewards claimed*\"}},\"configureAssets(address[],uint256[])\":{\"details\":\"Configure assets for a certain rewards emission\",\"params\":{\"assets\":\"The assets to incentivize\",\"emissionsPerSecond\":\"The emission for each asset\"}},\"getAssetData(address)\":{\"details\":\"Returns the configuration of the distribution for a certain asset\",\"params\":{\"asset\":\"The address of the reference asset of the distribution\"},\"returns\":{\"_0\":\"The asset index, the emission per second and the last updated timestamp*\"}},\"getClaimer(address)\":{\"details\":\"Returns the whitelisted claimer for a certain address (0x0 if not set)\",\"params\":{\"user\":\"The address of the user\"},\"returns\":{\"_0\":\"The claimer address\"}},\"getDistributionEnd()\":{\"details\":\"Gets the end date for the distribution\",\"returns\":{\"_0\":\"The end of the distribution*\"}},\"getRewardsBalance(address[],address)\":{\"details\":\"Returns the total of rewards of an user, already accrued + not yet accrued\",\"params\":{\"user\":\"The address of the user\"},\"returns\":{\"_0\":\"The rewards*\"}},\"getUserAssetData(address,address)\":{\"details\":\"Returns the data of an user on a distribution\",\"params\":{\"asset\":\"The address of the reference asset of the distribution\",\"user\":\"Address of the user\"},\"returns\":{\"_0\":\"The new index*\"}},\"getUserUnclaimedRewards(address)\":{\"details\":\"returns the unclaimed rewards of the user\",\"params\":{\"user\":\"the address of the user\"},\"returns\":{\"_0\":\"the unclaimed user rewards\"}},\"handleAction(address,uint256,uint256)\":{\"details\":\"Called by the corresponding asset on any update that affects the rewards distribution\",\"params\":{\"asset\":\"The address of the user\",\"totalSupply\":\"The total supply of the asset in the lending pool*\",\"userBalance\":\"The balance of the user of the asset in the lending pool\"}},\"setClaimer(address,address)\":{\"details\":\"Whitelists an address to claim the rewards on behalf of another address\",\"params\":{\"claimer\":\"The address of the claimer\",\"user\":\"The address of the user\"}},\"setDistributionEnd(uint256)\":{\"details\":\"Sets the end date for the distribution\",\"params\":{\"distributionEnd\":\"The end date timestamp*\"}}},\"stateVariables\":{\"REWARD_TOKEN\":{\"details\":\"for backward compatibility with previous implementation of the Incentives controller\"}},\"title\":\"BaseIncentivesController\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"Abstract contract template to build Distributors contracts for ERC20 rewards to protocol participants\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Omnidex-incentives/incentives/base/BaseIncentivesController.sol\":\"BaseIncentivesController\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@aave/aave-stake/contracts/interfaces/IERC20.sol\":{\"keccak256\":\"0x150506e2e40dc3cea841fe0ade6021b9b0d4e09f7616d312bc7c1300a2d7a94f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d3dbf854f310f20a48cd727e1680067f4d911a4c6d220886935736297a0f89cb\",\"dweb:/ipfs/QmU8xN2AYrURFgmB4hLFLamc7aJe6VD5qkUEcfdrKPcz9C\"]},\"@aave/aave-stake/contracts/utils/VersionedInitializable.sol\":{\"keccak256\":\"0xedfec4c491ad24c0a1024fc801c22f2a16d1f316f2a5cdcc883e0bbc451cffc7\",\"license\":\"agpl-3.0\",\"urls\":[\"bzz-raw://e77712031df46b9ffd6ca6d405566177fe35191a427a7278130986eb2889eb57\",\"dweb:/ipfs/QmUEs4hmDe859S9C2jbU7yMPA59ZrhQRqcW268EmfavnrD\"]},\"contracts/Omnidex-incentives/incentives/base/BaseIncentivesController.sol\":{\"keccak256\":\"0x04134ec432e4ef50438e93854442ef0b204ef75f040a791984d00ef0249c2edc\",\"license\":\"agpl-3.0\",\"urls\":[\"bzz-raw://dd86038d54a170da1266dff649985d82b048923930b74107414d5a06b4ae7577\",\"dweb:/ipfs/QmZ5pPeAVqZsQjiESWhuoC7g3ES6giKfU7jX9LrkAk1Fmr\"]},\"contracts/Omnidex-incentives/incentives/base/DistributionManager.sol\":{\"keccak256\":\"0x43b2afa8394898d61bde7ecac7d145cf194b5dfd953d2c9d7694645580a84723\",\"license\":\"agpl-3.0\",\"urls\":[\"bzz-raw://c468a996e248fa021a4886f2a8289426593a6ebe3a7269f4aa08a6af741c232f\",\"dweb:/ipfs/QmUe2xxKETrRMB32joUxdRtn6FVNMm7mVRyEFtftiCZcy1\"]},\"contracts/Omnidex-incentives/interfaces/IOmnidexDistributionManager.sol\":{\"keccak256\":\"0xabf5e1d31a3567f017adf41a4384f0c7a6fce4e81441a7b42fb565f92256a87d\",\"license\":\"agpl-3.0\",\"urls\":[\"bzz-raw://a2aab2cd0efc27da9ced088fcb5534b62c4ebd436688778af86949e706d22fef\",\"dweb:/ipfs/QmPAQiLYLB7QXMKaHjSwWKaK8mN8pgBRteJUqg5ptKebZE\"]},\"contracts/Omnidex-incentives/interfaces/IOmnidexIncentivesController.sol\":{\"keccak256\":\"0x8615452507c06e118914d5bdbd7136745f29030f2bd90fb80101eda042138d84\",\"license\":\"agpl-3.0\",\"urls\":[\"bzz-raw://632c6c2423e567411001205cb0838ed6ccd5a6d36b9f0e27e7262cc79a081e83\",\"dweb:/ipfs/QmSM9PrZzpBZ9Ae6tcDPWoUNztLNrtVpYTCb83bFNjJP4A\"]},\"contracts/Omnidex-incentives/interfaces/IScaledBalanceToken.sol\":{\"keccak256\":\"0x0c6f6980efd0a97e48040fe333c41e32403f8c2ec3629cbd9f714640cf18b213\",\"license\":\"agpl-3.0\",\"urls\":[\"bzz-raw://d5f7a3234e76841405077f4c4d4700d212bb9987328d5b6e8236cdd864c4caf7\",\"dweb:/ipfs/QmZFgW84wn6tZjb4VMW7ifSBWGW1BnPc75iWP3JzS3Ldnr\"]},\"contracts/Omnidex-incentives/lib/DistributionTypes.sol\":{\"keccak256\":\"0xbb24d51b39ff627c1d2dbbaa5063ae7f1d515ec3980cc6ed8f5d171c17ef1d36\",\"license\":\"agpl-3.0\",\"urls\":[\"bzz-raw://30120d3556895da3f517a6ce8954e4419944f9e07b7b4cd3d596df3e8e8103e3\",\"dweb:/ipfs/QmTXPN7Q8ULdJnJVGVTwLbw7Rvy5h17DfabKf8szvprQNb\"]},\"contracts/Omnidex-incentives/lib/SafeMath.sol\":{\"keccak256\":\"0x23218dd12c40acbd9c7c6f799d20dd84c88e1262583e25465f1413ed8c5d67d5\",\"license\":\"agpl-3.0\",\"urls\":[\"bzz-raw://4896e02c7ad212eb804e1ad03a711f964e04eb9b7d6c0024a4cd26b29adc0a1a\",\"dweb:/ipfs/QmamjuX7iGUgpGCgnsPnUsfFMG751kBzrnB2gZFP1tkvxL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 501,
								"contract": "contracts/Omnidex-incentives/incentives/base/BaseIncentivesController.sol:BaseIncentivesController",
								"label": "lastInitializedRevision",
								"offset": 0,
								"slot": "0",
								"type": "t_uint256"
							},
							{
								"astId": 532,
								"contract": "contracts/Omnidex-incentives/incentives/base/BaseIncentivesController.sol:BaseIncentivesController",
								"label": "______gap",
								"offset": 0,
								"slot": "1",
								"type": "t_array(t_uint256)50_storage"
							},
							{
								"astId": 1298,
								"contract": "contracts/Omnidex-incentives/incentives/base/BaseIncentivesController.sol:BaseIncentivesController",
								"label": "assets",
								"offset": 0,
								"slot": "51",
								"type": "t_mapping(t_address,t_struct(AssetData)1289_storage)"
							},
							{
								"astId": 1300,
								"contract": "contracts/Omnidex-incentives/incentives/base/BaseIncentivesController.sol:BaseIncentivesController",
								"label": "_distributionEnd",
								"offset": 0,
								"slot": "52",
								"type": "t_uint256"
							},
							{
								"astId": 666,
								"contract": "contracts/Omnidex-incentives/incentives/base/BaseIncentivesController.sol:BaseIncentivesController",
								"label": "_usersUnclaimedRewards",
								"offset": 0,
								"slot": "53",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 670,
								"contract": "contracts/Omnidex-incentives/incentives/base/BaseIncentivesController.sol:BaseIncentivesController",
								"label": "_authorizedClaimers",
								"offset": 0,
								"slot": "54",
								"type": "t_mapping(t_address,t_address)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_array(t_uint256)50_storage": {
								"base": "t_uint256",
								"encoding": "inplace",
								"label": "uint256[50]",
								"numberOfBytes": "1600"
							},
							"t_mapping(t_address,t_address)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => address)",
								"numberOfBytes": "32",
								"value": "t_address"
							},
							"t_mapping(t_address,t_struct(AssetData)1289_storage)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => struct DistributionManager.AssetData)",
								"numberOfBytes": "32",
								"value": "t_struct(AssetData)1289_storage"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_struct(AssetData)1289_storage": {
								"encoding": "inplace",
								"label": "struct DistributionManager.AssetData",
								"members": [
									{
										"astId": 1280,
										"contract": "contracts/Omnidex-incentives/incentives/base/BaseIncentivesController.sol:BaseIncentivesController",
										"label": "emissionPerSecond",
										"offset": 0,
										"slot": "0",
										"type": "t_uint104"
									},
									{
										"astId": 1282,
										"contract": "contracts/Omnidex-incentives/incentives/base/BaseIncentivesController.sol:BaseIncentivesController",
										"label": "index",
										"offset": 13,
										"slot": "0",
										"type": "t_uint104"
									},
									{
										"astId": 1284,
										"contract": "contracts/Omnidex-incentives/incentives/base/BaseIncentivesController.sol:BaseIncentivesController",
										"label": "lastUpdateTimestamp",
										"offset": 26,
										"slot": "0",
										"type": "t_uint40"
									},
									{
										"astId": 1288,
										"contract": "contracts/Omnidex-incentives/incentives/base/BaseIncentivesController.sol:BaseIncentivesController",
										"label": "users",
										"offset": 0,
										"slot": "1",
										"type": "t_mapping(t_address,t_uint256)"
									}
								],
								"numberOfBytes": "64"
							},
							"t_uint104": {
								"encoding": "inplace",
								"label": "uint104",
								"numberOfBytes": "13"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							},
							"t_uint40": {
								"encoding": "inplace",
								"label": "uint40",
								"numberOfBytes": "5"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"notice": "Abstract contract template to build Distributors contracts for ERC20 rewards to protocol participants",
						"version": 1
					}
				}
			},
			"contracts/Omnidex-incentives/incentives/base/DistributionManager.sol": {
				"DistributionManager": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "emissionManager",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "asset",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "emission",
									"type": "uint256"
								}
							],
							"name": "AssetConfigUpdated",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "asset",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "index",
									"type": "uint256"
								}
							],
							"name": "AssetIndexUpdated",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "newDistributionEnd",
									"type": "uint256"
								}
							],
							"name": "DistributionEndUpdated",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "asset",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "index",
									"type": "uint256"
								}
							],
							"name": "UserIndexUpdated",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "DISTRIBUTION_END",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "EMISSION_MANAGER",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "PRECISION",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "assets",
							"outputs": [
								{
									"internalType": "uint104",
									"name": "emissionPerSecond",
									"type": "uint104"
								},
								{
									"internalType": "uint104",
									"name": "index",
									"type": "uint104"
								},
								{
									"internalType": "uint40",
									"name": "lastUpdateTimestamp",
									"type": "uint40"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "asset",
									"type": "address"
								}
							],
							"name": "getAssetData",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getDistributionEnd",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "asset",
									"type": "address"
								}
							],
							"name": "getUserAssetData",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "distributionEnd",
									"type": "uint256"
								}
							],
							"name": "setDistributionEnd",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"author": "Omnidex*",
						"kind": "dev",
						"methods": {
							"DISTRIBUTION_END()": {
								"details": "for backwards compatibility with the previous DistributionManager used",
								"returns": {
									"_0": "The end of the distribution*"
								}
							},
							"getAssetData(address)": {
								"details": "Returns the configuration of the distribution for a certain asset",
								"params": {
									"asset": "The address of the reference asset of the distribution"
								},
								"returns": {
									"_0": "The asset index, the emission per second and the last updated timestamp*"
								}
							},
							"getDistributionEnd()": {
								"details": "Gets the end date for the distribution",
								"returns": {
									"_0": "The end of the distribution*"
								}
							},
							"getUserAssetData(address,address)": {
								"details": "Returns the data of an user on a distribution",
								"params": {
									"asset": "The address of the reference asset of the distribution",
									"user": "Address of the user"
								},
								"returns": {
									"_0": "The new index*"
								}
							},
							"setDistributionEnd(uint256)": {
								"details": "Sets the end date for the distribution",
								"params": {
									"distributionEnd": "The end date timestamp*"
								}
							}
						},
						"title": "DistributionManager",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/Omnidex-incentives/incentives/base/DistributionManager.sol\":449:8871  contract DistributionManager is IOmnidexDistributionManager {\r... */\n  mstore(0x40, 0xa0)\n    /* \"contracts/Omnidex-incentives/incentives/base/DistributionManager.sol\":1004:1088  constructor(address emissionManager) {\r... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  dup2\n  add\n  swap1\n  tag_2\n  swap2\n  swap1\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"contracts/Omnidex-incentives/incentives/base/DistributionManager.sol\":1067:1082  emissionManager */\n  dup1\n    /* \"contracts/Omnidex-incentives/incentives/base/DistributionManager.sol\":1048:1082  EMISSION_MANAGER = emissionManager */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0x80\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0x60\n  shl\n  dup2\n  mstore\n  pop\n  pop\n    /* \"contracts/Omnidex-incentives/incentives/base/DistributionManager.sol\":1004:1088  constructor(address emissionManager) {\r... */\n  pop\n    /* \"contracts/Omnidex-incentives/incentives/base/DistributionManager.sol\":449:8871  contract DistributionManager is IOmnidexDistributionManager {\r... */\n  jump(tag_6)\n    /* \"#utility.yul\":7:150   */\ntag_8:\n  0x00\n    /* \"#utility.yul\":95:101   */\n  dup2\n    /* \"#utility.yul\":89:102   */\n  mload\n    /* \"#utility.yul\":80:102   */\n  swap1\n  pop\n    /* \"#utility.yul\":111:144   */\n  tag_10\n    /* \"#utility.yul\":138:143   */\n  dup2\n    /* \"#utility.yul\":111:144   */\n  tag_11\n  jump\t// in\ntag_10:\n    /* \"#utility.yul\":70:150   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":156:438   */\ntag_3:\n  0x00\n    /* \"#utility.yul\":275:277   */\n  0x20\n    /* \"#utility.yul\":263:272   */\n  dup3\n    /* \"#utility.yul\":254:261   */\n  dup5\n    /* \"#utility.yul\":250:273   */\n  sub\n    /* \"#utility.yul\":246:278   */\n  slt\n    /* \"#utility.yul\":243:245   */\n  iszero\n  tag_13\n  jumpi\n    /* \"#utility.yul\":291:292   */\n  0x00\n    /* \"#utility.yul\":288:289   */\n  dup1\n    /* \"#utility.yul\":281:293   */\n  revert\n    /* \"#utility.yul\":243:245   */\ntag_13:\n    /* \"#utility.yul\":333:334   */\n  0x00\n    /* \"#utility.yul\":357:421   */\n  tag_14\n    /* \"#utility.yul\":413:420   */\n  dup5\n    /* \"#utility.yul\":404:410   */\n  dup3\n    /* \"#utility.yul\":393:402   */\n  dup6\n    /* \"#utility.yul\":389:411   */\n  add\n    /* \"#utility.yul\":357:421   */\n  tag_8\n  jump\t// in\ntag_14:\n    /* \"#utility.yul\":347:421   */\n  swap2\n  pop\n    /* \"#utility.yul\":305:431   */\n  pop\n    /* \"#utility.yul\":233:438   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":444:540   */\ntag_15:\n  0x00\n    /* \"#utility.yul\":510:534   */\n  tag_17\n    /* \"#utility.yul\":528:533   */\n  dup3\n    /* \"#utility.yul\":510:534   */\n  tag_18\n  jump\t// in\ntag_17:\n    /* \"#utility.yul\":499:534   */\n  swap1\n  pop\n    /* \"#utility.yul\":489:540   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":546:672   */\ntag_18:\n  0x00\n    /* \"#utility.yul\":623:665   */\n  0xffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":616:621   */\n  dup3\n    /* \"#utility.yul\":612:666   */\n  and\n    /* \"#utility.yul\":601:666   */\n  swap1\n  pop\n    /* \"#utility.yul\":591:672   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":678:800   */\ntag_11:\n    /* \"#utility.yul\":751:775   */\n  tag_21\n    /* \"#utility.yul\":769:774   */\n  dup2\n    /* \"#utility.yul\":751:775   */\n  tag_15\n  jump\t// in\ntag_21:\n    /* \"#utility.yul\":744:749   */\n  dup2\n    /* \"#utility.yul\":741:776   */\n  eq\n    /* \"#utility.yul\":731:733   */\n  tag_22\n  jumpi\n    /* \"#utility.yul\":790:791   */\n  0x00\n    /* \"#utility.yul\":787:788   */\n  dup1\n    /* \"#utility.yul\":780:792   */\n  revert\n    /* \"#utility.yul\":731:733   */\ntag_22:\n    /* \"#utility.yul\":721:800   */\n  pop\n  jump\t// out\n    /* \"contracts/Omnidex-incentives/incentives/base/DistributionManager.sol\":449:8871  contract DistributionManager is IOmnidexDistributionManager {\r... */\ntag_6:\n  shr(0x60, mload(0x80))\n  codecopy(0x00, dataOffset(sub_0), dataSize(sub_0))\n  assignImmutable(\"0xfb72c19603b99a84eb94b2a957c683e899e1d0f4b28e255e051e7f1b190ba3b8\")\n  return(0x00, dataSize(sub_0))\nstop\n\nsub_0: assembly {\n        /* \"contracts/Omnidex-incentives/incentives/base/DistributionManager.sol\":449:8871  contract DistributionManager is IOmnidexDistributionManager {\r... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0xaaf5eb68\n      gt\n      tag_11\n      jumpi\n      dup1\n      0xaaf5eb68\n      eq\n      tag_7\n      jumpi\n      dup1\n      0xcbcbb507\n      eq\n      tag_8\n      jumpi\n      dup1\n      0xcc69afec\n      eq\n      tag_9\n      jumpi\n      dup1\n      0xf11b8188\n      eq\n      tag_10\n      jumpi\n      jump(tag_2)\n    tag_11:\n      dup1\n      0x1652e7b7\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x3373ee4c\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x39ccbdd3\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x919cd40f\n      eq\n      tag_6\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"contracts/Omnidex-incentives/incentives/base/DistributionManager.sol\":1893:2096  function getAssetData(address asset) public view override returns (uint256, uint256, uint256) {\r... */\n    tag_3:\n      tag_12\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_13\n      swap2\n      swap1\n      tag_14\n      jump\t// in\n    tag_13:\n      tag_15\n      jump\t// in\n    tag_12:\n      mload(0x40)\n      tag_16\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_17\n      jump\t// in\n    tag_16:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Omnidex-incentives/incentives/base/DistributionManager.sol\":1701:1840  function getUserAssetData(address user, address asset) public view override returns (uint256) {\r... */\n    tag_4:\n      tag_18\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_19\n      swap2\n      swap1\n      tag_20\n      jump\t// in\n    tag_19:\n      tag_21\n      jump\t// in\n    tag_18:\n      mload(0x40)\n      tag_22\n      swap2\n      swap1\n      tag_23\n      jump\t// in\n    tag_22:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Omnidex-incentives/incentives/base/DistributionManager.sol\":1141:1330  function setDistributionEnd(uint256 distributionEnd) external override onlyEmissionManager {\r... */\n    tag_5:\n      tag_24\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_25\n      swap2\n      swap1\n      tag_26\n      jump\t// in\n    tag_25:\n      tag_27\n      jump\t// in\n    tag_24:\n      stop\n        /* \"contracts/Omnidex-incentives/incentives/base/DistributionManager.sol\":1543:1648  function DISTRIBUTION_END() external view override returns (uint256) {\r... */\n    tag_6:\n      tag_28\n      tag_29\n      jump\t// in\n    tag_28:\n      mload(0x40)\n      tag_30\n      swap2\n      swap1\n      tag_23\n      jump\t// in\n    tag_30:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Omnidex-incentives/incentives/base/DistributionManager.sol\":749:785  uint8 public constant PRECISION = 18 */\n    tag_7:\n      tag_31\n      tag_32\n      jump\t// in\n    tag_31:\n      mload(0x40)\n      tag_33\n      swap2\n      swap1\n      tag_34\n      jump\t// in\n    tag_33:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Omnidex-incentives/incentives/base/DistributionManager.sol\":701:742  address public immutable EMISSION_MANAGER */\n    tag_8:\n      tag_35\n      tag_36\n      jump\t// in\n    tag_35:\n      mload(0x40)\n      tag_37\n      swap2\n      swap1\n      tag_38\n      jump\t// in\n    tag_37:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Omnidex-incentives/incentives/base/DistributionManager.sol\":1383:1490  function getDistributionEnd() external view override returns (uint256) {\r... */\n    tag_9:\n      tag_39\n      tag_40\n      jump\t// in\n    tag_39:\n      mload(0x40)\n      tag_41\n      swap2\n      swap1\n      tag_23\n      jump\t// in\n    tag_41:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Omnidex-incentives/incentives/base/DistributionManager.sol\":792:835  mapping(address => AssetData) public assets */\n    tag_10:\n      tag_42\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_43\n      swap2\n      swap1\n      tag_14\n      jump\t// in\n    tag_43:\n      tag_44\n      jump\t// in\n    tag_42:\n      mload(0x40)\n      tag_45\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_46\n      jump\t// in\n    tag_45:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Omnidex-incentives/incentives/base/DistributionManager.sol\":1893:2096  function getAssetData(address asset) public view override returns (uint256, uint256, uint256) {\r... */\n    tag_15:\n        /* \"contracts/Omnidex-incentives/incentives/base/DistributionManager.sol\":1960:1967  uint256 */\n      0x00\n        /* \"contracts/Omnidex-incentives/incentives/base/DistributionManager.sol\":1969:1976  uint256 */\n      dup1\n        /* \"contracts/Omnidex-incentives/incentives/base/DistributionManager.sol\":1978:1985  uint256 */\n      0x00\n        /* \"contracts/Omnidex-incentives/incentives/base/DistributionManager.sol\":2002:2008  assets */\n      dup1\n        /* \"contracts/Omnidex-incentives/incentives/base/DistributionManager.sol\":2002:2015  assets[asset] */\n      0x00\n        /* \"contracts/Omnidex-incentives/incentives/base/DistributionManager.sol\":2009:2014  asset */\n      dup6\n        /* \"contracts/Omnidex-incentives/incentives/base/DistributionManager.sol\":2002:2015  assets[asset] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/Omnidex-incentives/incentives/base/DistributionManager.sol\":2002:2021  assets[asset].index */\n      0x00\n      add\n      0x0d\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffff\n      and\n        /* \"contracts/Omnidex-incentives/incentives/base/DistributionManager.sol\":2023:2029  assets */\n      0x00\n        /* \"contracts/Omnidex-incentives/incentives/base/DistributionManager.sol\":2023:2036  assets[asset] */\n      dup1\n        /* \"contracts/Omnidex-incentives/incentives/base/DistributionManager.sol\":2030:2035  asset */\n      dup7\n        /* \"contracts/Omnidex-incentives/incentives/base/DistributionManager.sol\":2023:2036  assets[asset] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/Omnidex-incentives/incentives/base/DistributionManager.sol\":2023:2054  assets[asset].emissionPerSecond */\n      0x00\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffff\n      and\n        /* \"contracts/Omnidex-incentives/incentives/base/DistributionManager.sol\":2056:2062  assets */\n      0x00\n        /* \"contracts/Omnidex-incentives/incentives/base/DistributionManager.sol\":2056:2069  assets[asset] */\n      dup1\n        /* \"contracts/Omnidex-incentives/incentives/base/DistributionManager.sol\":2063:2068  asset */\n      dup8\n        /* \"contracts/Omnidex-incentives/incentives/base/DistributionManager.sol\":2056:2069  assets[asset] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/Omnidex-incentives/incentives/base/DistributionManager.sol\":2056:2089  assets[asset].lastUpdateTimestamp */\n      0x00\n      add\n      0x1a\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffff\n      and\n        /* \"contracts/Omnidex-incentives/incentives/base/DistributionManager.sol\":1994:2090  return (assets[asset].index, assets[asset].emissionPerSecond, assets[asset].lastUpdateTimestamp) */\n      dup3\n      0xffffffffffffffffffffffffff\n      and\n      swap3\n      pop\n      dup2\n      0xffffffffffffffffffffffffff\n      and\n      swap2\n      pop\n      dup1\n      0xffffffffff\n      and\n      swap1\n      pop\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      pop\n        /* \"contracts/Omnidex-incentives/incentives/base/DistributionManager.sol\":1893:2096  function getAssetData(address asset) public view override returns (uint256, uint256, uint256) {\r... */\n      swap2\n      swap4\n      swap1\n      swap3\n      pop\n      jump\t// out\n        /* \"contracts/Omnidex-incentives/incentives/base/DistributionManager.sol\":1701:1840  function getUserAssetData(address user, address asset) public view override returns (uint256) {\r... */\n    tag_21:\n        /* \"contracts/Omnidex-incentives/incentives/base/DistributionManager.sol\":1786:1793  uint256 */\n      0x00\n        /* \"contracts/Omnidex-incentives/incentives/base/DistributionManager.sol\":1809:1815  assets */\n      dup1\n        /* \"contracts/Omnidex-incentives/incentives/base/DistributionManager.sol\":1809:1822  assets[asset] */\n      0x00\n        /* \"contracts/Omnidex-incentives/incentives/base/DistributionManager.sol\":1816:1821  asset */\n      dup4\n        /* \"contracts/Omnidex-incentives/incentives/base/DistributionManager.sol\":1809:1822  assets[asset] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/Omnidex-incentives/incentives/base/DistributionManager.sol\":1809:1828  assets[asset].users */\n      0x01\n      add\n        /* \"contracts/Omnidex-incentives/incentives/base/DistributionManager.sol\":1809:1834  assets[asset].users[user] */\n      0x00\n        /* \"contracts/Omnidex-incentives/incentives/base/DistributionManager.sol\":1829:1833  user */\n      dup5\n        /* \"contracts/Omnidex-incentives/incentives/base/DistributionManager.sol\":1809:1834  assets[asset].users[user] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/Omnidex-incentives/incentives/base/DistributionManager.sol\":1802:1834  return assets[asset].users[user] */\n      swap1\n      pop\n        /* \"contracts/Omnidex-incentives/incentives/base/DistributionManager.sol\":1701:1840  function getUserAssetData(address user, address asset) public view override returns (uint256) {\r... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/Omnidex-incentives/incentives/base/DistributionManager.sol\":1141:1330  function setDistributionEnd(uint256 distributionEnd) external override onlyEmissionManager {\r... */\n    tag_27:\n        /* \"contracts/Omnidex-incentives/incentives/base/DistributionManager.sol\":942:958  EMISSION_MANAGER */\n      immutable(\"0xfb72c19603b99a84eb94b2a957c683e899e1d0f4b28e255e051e7f1b190ba3b8\")\n        /* \"contracts/Omnidex-incentives/incentives/base/DistributionManager.sol\":928:958  msg.sender == EMISSION_MANAGER */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Omnidex-incentives/incentives/base/DistributionManager.sol\":928:938  msg.sender */\n      caller\n        /* \"contracts/Omnidex-incentives/incentives/base/DistributionManager.sol\":928:958  msg.sender == EMISSION_MANAGER */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/Omnidex-incentives/incentives/base/DistributionManager.sol\":920:984  require(msg.sender == EMISSION_MANAGER, 'ONLY_EMISSION_MANAGER') */\n      tag_50\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_51\n      swap1\n      tag_52\n      jump\t// in\n    tag_51:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_50:\n        /* \"contracts/Omnidex-incentives/incentives/base/DistributionManager.sol\":1258:1273  distributionEnd */\n      dup1\n        /* \"contracts/Omnidex-incentives/incentives/base/DistributionManager.sol\":1239:1255  _distributionEnd */\n      0x01\n        /* \"contracts/Omnidex-incentives/incentives/base/DistributionManager.sol\":1239:1273  _distributionEnd = distributionEnd */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/Omnidex-incentives/incentives/base/DistributionManager.sol\":1285:1324  DistributionEndUpdated(distributionEnd) */\n      0x1cc1849a6602c3e91f2088cadea4381cc5717f2f28584197060ed2ebb434c16f\n        /* \"contracts/Omnidex-incentives/incentives/base/DistributionManager.sol\":1308:1323  distributionEnd */\n      dup2\n        /* \"contracts/Omnidex-incentives/incentives/base/DistributionManager.sol\":1285:1324  DistributionEndUpdated(distributionEnd) */\n      mload(0x40)\n      tag_54\n      swap2\n      swap1\n      tag_23\n      jump\t// in\n    tag_54:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"contracts/Omnidex-incentives/incentives/base/DistributionManager.sol\":1141:1330  function setDistributionEnd(uint256 distributionEnd) external override onlyEmissionManager {\r... */\n      pop\n      jump\t// out\n        /* \"contracts/Omnidex-incentives/incentives/base/DistributionManager.sol\":1543:1648  function DISTRIBUTION_END() external view override returns (uint256) {\r... */\n    tag_29:\n        /* \"contracts/Omnidex-incentives/incentives/base/DistributionManager.sol\":1603:1610  uint256 */\n      0x00\n        /* \"contracts/Omnidex-incentives/incentives/base/DistributionManager.sol\":1626:1642  _distributionEnd */\n      sload(0x01)\n        /* \"contracts/Omnidex-incentives/incentives/base/DistributionManager.sol\":1619:1642  return _distributionEnd */\n      swap1\n      pop\n        /* \"contracts/Omnidex-incentives/incentives/base/DistributionManager.sol\":1543:1648  function DISTRIBUTION_END() external view override returns (uint256) {\r... */\n      swap1\n      jump\t// out\n        /* \"contracts/Omnidex-incentives/incentives/base/DistributionManager.sol\":749:785  uint8 public constant PRECISION = 18 */\n    tag_32:\n        /* \"contracts/Omnidex-incentives/incentives/base/DistributionManager.sol\":783:785  18 */\n      0x12\n        /* \"contracts/Omnidex-incentives/incentives/base/DistributionManager.sol\":749:785  uint8 public constant PRECISION = 18 */\n      dup2\n      jump\t// out\n        /* \"contracts/Omnidex-incentives/incentives/base/DistributionManager.sol\":701:742  address public immutable EMISSION_MANAGER */\n    tag_36:\n      immutable(\"0xfb72c19603b99a84eb94b2a957c683e899e1d0f4b28e255e051e7f1b190ba3b8\")\n      dup2\n      jump\t// out\n        /* \"contracts/Omnidex-incentives/incentives/base/DistributionManager.sol\":1383:1490  function getDistributionEnd() external view override returns (uint256) {\r... */\n    tag_40:\n        /* \"contracts/Omnidex-incentives/incentives/base/DistributionManager.sol\":1445:1452  uint256 */\n      0x00\n        /* \"contracts/Omnidex-incentives/incentives/base/DistributionManager.sol\":1468:1484  _distributionEnd */\n      sload(0x01)\n        /* \"contracts/Omnidex-incentives/incentives/base/DistributionManager.sol\":1461:1484  return _distributionEnd */\n      swap1\n      pop\n        /* \"contracts/Omnidex-incentives/incentives/base/DistributionManager.sol\":1383:1490  function getDistributionEnd() external view override returns (uint256) {\r... */\n      swap1\n      jump\t// out\n        /* \"contracts/Omnidex-incentives/incentives/base/DistributionManager.sol\":792:835  mapping(address => AssetData) public assets */\n    tag_44:\n      mstore(0x20, 0x00)\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      swap1\n      pop\n      dup1\n      0x00\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffff\n      and\n      swap1\n      dup1\n      0x00\n      add\n      0x0d\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffff\n      and\n      swap1\n      dup1\n      0x00\n      add\n      0x1a\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffff\n      and\n      swap1\n      pop\n      dup4\n      jump\t// out\n        /* \"#utility.yul\":7:146   */\n    tag_58:\n      0x00\n        /* \"#utility.yul\":91:97   */\n      dup2\n        /* \"#utility.yul\":78:98   */\n      calldataload\n        /* \"#utility.yul\":69:98   */\n      swap1\n      pop\n        /* \"#utility.yul\":107:140   */\n      tag_60\n        /* \"#utility.yul\":134:139   */\n      dup2\n        /* \"#utility.yul\":107:140   */\n      tag_61\n      jump\t// in\n    tag_60:\n        /* \"#utility.yul\":59:146   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":152:291   */\n    tag_62:\n      0x00\n        /* \"#utility.yul\":236:242   */\n      dup2\n        /* \"#utility.yul\":223:243   */\n      calldataload\n        /* \"#utility.yul\":214:243   */\n      swap1\n      pop\n        /* \"#utility.yul\":252:285   */\n      tag_64\n        /* \"#utility.yul\":279:284   */\n      dup2\n        /* \"#utility.yul\":252:285   */\n      tag_65\n      jump\t// in\n    tag_64:\n        /* \"#utility.yul\":204:291   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":297:557   */\n    tag_14:\n      0x00\n        /* \"#utility.yul\":405:407   */\n      0x20\n        /* \"#utility.yul\":393:402   */\n      dup3\n        /* \"#utility.yul\":384:391   */\n      dup5\n        /* \"#utility.yul\":380:403   */\n      sub\n        /* \"#utility.yul\":376:408   */\n      slt\n        /* \"#utility.yul\":373:375   */\n      iszero\n      tag_67\n      jumpi\n        /* \"#utility.yul\":421:422   */\n      0x00\n        /* \"#utility.yul\":418:419   */\n      dup1\n        /* \"#utility.yul\":411:423   */\n      revert\n        /* \"#utility.yul\":373:375   */\n    tag_67:\n        /* \"#utility.yul\":463:464   */\n      0x00\n        /* \"#utility.yul\":487:540   */\n      tag_68\n        /* \"#utility.yul\":532:539   */\n      dup5\n        /* \"#utility.yul\":523:529   */\n      dup3\n        /* \"#utility.yul\":512:521   */\n      dup6\n        /* \"#utility.yul\":508:530   */\n      add\n        /* \"#utility.yul\":487:540   */\n      tag_58\n      jump\t// in\n    tag_68:\n        /* \"#utility.yul\":477:540   */\n      swap2\n      pop\n        /* \"#utility.yul\":435:550   */\n      pop\n        /* \"#utility.yul\":363:557   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":563:966   */\n    tag_20:\n      0x00\n      dup1\n        /* \"#utility.yul\":688:690   */\n      0x40\n        /* \"#utility.yul\":676:685   */\n      dup4\n        /* \"#utility.yul\":667:674   */\n      dup6\n        /* \"#utility.yul\":663:686   */\n      sub\n        /* \"#utility.yul\":659:691   */\n      slt\n        /* \"#utility.yul\":656:658   */\n      iszero\n      tag_70\n      jumpi\n        /* \"#utility.yul\":704:705   */\n      0x00\n        /* \"#utility.yul\":701:702   */\n      dup1\n        /* \"#utility.yul\":694:706   */\n      revert\n        /* \"#utility.yul\":656:658   */\n    tag_70:\n        /* \"#utility.yul\":746:747   */\n      0x00\n        /* \"#utility.yul\":770:823   */\n      tag_71\n        /* \"#utility.yul\":815:822   */\n      dup6\n        /* \"#utility.yul\":806:812   */\n      dup3\n        /* \"#utility.yul\":795:804   */\n      dup7\n        /* \"#utility.yul\":791:813   */\n      add\n        /* \"#utility.yul\":770:823   */\n      tag_58\n      jump\t// in\n    tag_71:\n        /* \"#utility.yul\":760:823   */\n      swap3\n      pop\n        /* \"#utility.yul\":718:833   */\n      pop\n        /* \"#utility.yul\":871:873   */\n      0x20\n        /* \"#utility.yul\":896:949   */\n      tag_72\n        /* \"#utility.yul\":941:948   */\n      dup6\n        /* \"#utility.yul\":932:938   */\n      dup3\n        /* \"#utility.yul\":921:930   */\n      dup7\n        /* \"#utility.yul\":917:939   */\n      add\n        /* \"#utility.yul\":896:949   */\n      tag_58\n      jump\t// in\n    tag_72:\n        /* \"#utility.yul\":886:949   */\n      swap2\n      pop\n        /* \"#utility.yul\":843:959   */\n      pop\n        /* \"#utility.yul\":646:966   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":972:1232   */\n    tag_26:\n      0x00\n        /* \"#utility.yul\":1080:1082   */\n      0x20\n        /* \"#utility.yul\":1068:1077   */\n      dup3\n        /* \"#utility.yul\":1059:1066   */\n      dup5\n        /* \"#utility.yul\":1055:1078   */\n      sub\n        /* \"#utility.yul\":1051:1083   */\n      slt\n        /* \"#utility.yul\":1048:1050   */\n      iszero\n      tag_74\n      jumpi\n        /* \"#utility.yul\":1096:1097   */\n      0x00\n        /* \"#utility.yul\":1093:1094   */\n      dup1\n        /* \"#utility.yul\":1086:1098   */\n      revert\n        /* \"#utility.yul\":1048:1050   */\n    tag_74:\n        /* \"#utility.yul\":1138:1139   */\n      0x00\n        /* \"#utility.yul\":1162:1215   */\n      tag_75\n        /* \"#utility.yul\":1207:1214   */\n      dup5\n        /* \"#utility.yul\":1198:1204   */\n      dup3\n        /* \"#utility.yul\":1187:1196   */\n      dup6\n        /* \"#utility.yul\":1183:1205   */\n      add\n        /* \"#utility.yul\":1162:1215   */\n      tag_62\n      jump\t// in\n    tag_75:\n        /* \"#utility.yul\":1152:1215   */\n      swap2\n      pop\n        /* \"#utility.yul\":1110:1225   */\n      pop\n        /* \"#utility.yul\":1038:1232   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1238:1356   */\n    tag_76:\n        /* \"#utility.yul\":1325:1349   */\n      tag_78\n        /* \"#utility.yul\":1343:1348   */\n      dup2\n        /* \"#utility.yul\":1325:1349   */\n      tag_79\n      jump\t// in\n    tag_78:\n        /* \"#utility.yul\":1320:1323   */\n      dup3\n        /* \"#utility.yul\":1313:1350   */\n      mstore\n        /* \"#utility.yul\":1303:1356   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1362:1681   */\n    tag_80:\n      0x00\n        /* \"#utility.yul\":1525:1592   */\n      tag_82\n        /* \"#utility.yul\":1589:1591   */\n      0x15\n        /* \"#utility.yul\":1584:1587   */\n      dup4\n        /* \"#utility.yul\":1525:1592   */\n      tag_83\n      jump\t// in\n    tag_82:\n        /* \"#utility.yul\":1518:1592   */\n      swap2\n      pop\n        /* \"#utility.yul\":1622:1645   */\n      0x4f4e4c595f454d495353494f4e5f4d414e414745520000000000000000000000\n        /* \"#utility.yul\":1618:1619   */\n      0x00\n        /* \"#utility.yul\":1613:1616   */\n      dup4\n        /* \"#utility.yul\":1609:1620   */\n      add\n        /* \"#utility.yul\":1602:1646   */\n      mstore\n        /* \"#utility.yul\":1672:1674   */\n      0x20\n        /* \"#utility.yul\":1667:1670   */\n      dup3\n        /* \"#utility.yul\":1663:1675   */\n      add\n        /* \"#utility.yul\":1656:1675   */\n      swap1\n      pop\n        /* \"#utility.yul\":1508:1681   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1687:1805   */\n    tag_84:\n        /* \"#utility.yul\":1774:1798   */\n      tag_86\n        /* \"#utility.yul\":1792:1797   */\n      dup2\n        /* \"#utility.yul\":1774:1798   */\n      tag_87\n      jump\t// in\n    tag_86:\n        /* \"#utility.yul\":1769:1772   */\n      dup3\n        /* \"#utility.yul\":1762:1799   */\n      mstore\n        /* \"#utility.yul\":1752:1805   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1811:1929   */\n    tag_88:\n        /* \"#utility.yul\":1898:1922   */\n      tag_90\n        /* \"#utility.yul\":1916:1921   */\n      dup2\n        /* \"#utility.yul\":1898:1922   */\n      tag_91\n      jump\t// in\n    tag_90:\n        /* \"#utility.yul\":1893:1896   */\n      dup3\n        /* \"#utility.yul\":1886:1923   */\n      mstore\n        /* \"#utility.yul\":1876:1929   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1935:2050   */\n    tag_92:\n        /* \"#utility.yul\":2020:2043   */\n      tag_94\n        /* \"#utility.yul\":2037:2042   */\n      dup2\n        /* \"#utility.yul\":2020:2043   */\n      tag_95\n      jump\t// in\n    tag_94:\n        /* \"#utility.yul\":2015:2018   */\n      dup3\n        /* \"#utility.yul\":2008:2044   */\n      mstore\n        /* \"#utility.yul\":1998:2050   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2056:2168   */\n    tag_96:\n        /* \"#utility.yul\":2139:2161   */\n      tag_98\n        /* \"#utility.yul\":2155:2160   */\n      dup2\n        /* \"#utility.yul\":2139:2161   */\n      tag_99\n      jump\t// in\n    tag_98:\n        /* \"#utility.yul\":2134:2137   */\n      dup3\n        /* \"#utility.yul\":2127:2162   */\n      mstore\n        /* \"#utility.yul\":2117:2168   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2174:2396   */\n    tag_38:\n      0x00\n        /* \"#utility.yul\":2305:2307   */\n      0x20\n        /* \"#utility.yul\":2294:2303   */\n      dup3\n        /* \"#utility.yul\":2290:2308   */\n      add\n        /* \"#utility.yul\":2282:2308   */\n      swap1\n      pop\n        /* \"#utility.yul\":2318:2389   */\n      tag_101\n        /* \"#utility.yul\":2386:2387   */\n      0x00\n        /* \"#utility.yul\":2375:2384   */\n      dup4\n        /* \"#utility.yul\":2371:2388   */\n      add\n        /* \"#utility.yul\":2362:2368   */\n      dup5\n        /* \"#utility.yul\":2318:2389   */\n      tag_76\n      jump\t// in\n    tag_101:\n        /* \"#utility.yul\":2272:2396   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2402:2821   */\n    tag_52:\n      0x00\n        /* \"#utility.yul\":2606:2608   */\n      0x20\n        /* \"#utility.yul\":2595:2604   */\n      dup3\n        /* \"#utility.yul\":2591:2609   */\n      add\n        /* \"#utility.yul\":2583:2609   */\n      swap1\n      pop\n        /* \"#utility.yul\":2655:2664   */\n      dup2\n        /* \"#utility.yul\":2649:2653   */\n      dup2\n        /* \"#utility.yul\":2645:2665   */\n      sub\n        /* \"#utility.yul\":2641:2642   */\n      0x00\n        /* \"#utility.yul\":2630:2639   */\n      dup4\n        /* \"#utility.yul\":2626:2643   */\n      add\n        /* \"#utility.yul\":2619:2666   */\n      mstore\n        /* \"#utility.yul\":2683:2814   */\n      tag_103\n        /* \"#utility.yul\":2809:2813   */\n      dup2\n        /* \"#utility.yul\":2683:2814   */\n      tag_80\n      jump\t// in\n    tag_103:\n        /* \"#utility.yul\":2675:2814   */\n      swap1\n      pop\n        /* \"#utility.yul\":2573:2821   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2827:3265   */\n    tag_46:\n      0x00\n        /* \"#utility.yul\":3012:3014   */\n      0x60\n        /* \"#utility.yul\":3001:3010   */\n      dup3\n        /* \"#utility.yul\":2997:3015   */\n      add\n        /* \"#utility.yul\":2989:3015   */\n      swap1\n      pop\n        /* \"#utility.yul\":3025:3096   */\n      tag_105\n        /* \"#utility.yul\":3093:3094   */\n      0x00\n        /* \"#utility.yul\":3082:3091   */\n      dup4\n        /* \"#utility.yul\":3078:3095   */\n      add\n        /* \"#utility.yul\":3069:3075   */\n      dup7\n        /* \"#utility.yul\":3025:3096   */\n      tag_84\n      jump\t// in\n    tag_105:\n        /* \"#utility.yul\":3106:3178   */\n      tag_106\n        /* \"#utility.yul\":3174:3176   */\n      0x20\n        /* \"#utility.yul\":3163:3172   */\n      dup4\n        /* \"#utility.yul\":3159:3177   */\n      add\n        /* \"#utility.yul\":3150:3156   */\n      dup6\n        /* \"#utility.yul\":3106:3178   */\n      tag_84\n      jump\t// in\n    tag_106:\n        /* \"#utility.yul\":3188:3258   */\n      tag_107\n        /* \"#utility.yul\":3254:3256   */\n      0x40\n        /* \"#utility.yul\":3243:3252   */\n      dup4\n        /* \"#utility.yul\":3239:3257   */\n      add\n        /* \"#utility.yul\":3230:3236   */\n      dup5\n        /* \"#utility.yul\":3188:3258   */\n      tag_92\n      jump\t// in\n    tag_107:\n        /* \"#utility.yul\":2979:3265   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3271:3493   */\n    tag_23:\n      0x00\n        /* \"#utility.yul\":3402:3404   */\n      0x20\n        /* \"#utility.yul\":3391:3400   */\n      dup3\n        /* \"#utility.yul\":3387:3405   */\n      add\n        /* \"#utility.yul\":3379:3405   */\n      swap1\n      pop\n        /* \"#utility.yul\":3415:3486   */\n      tag_109\n        /* \"#utility.yul\":3483:3484   */\n      0x00\n        /* \"#utility.yul\":3472:3481   */\n      dup4\n        /* \"#utility.yul\":3468:3485   */\n      add\n        /* \"#utility.yul\":3459:3465   */\n      dup5\n        /* \"#utility.yul\":3415:3486   */\n      tag_88\n      jump\t// in\n    tag_109:\n        /* \"#utility.yul\":3369:3493   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3499:3941   */\n    tag_17:\n      0x00\n        /* \"#utility.yul\":3686:3688   */\n      0x60\n        /* \"#utility.yul\":3675:3684   */\n      dup3\n        /* \"#utility.yul\":3671:3689   */\n      add\n        /* \"#utility.yul\":3663:3689   */\n      swap1\n      pop\n        /* \"#utility.yul\":3699:3770   */\n      tag_111\n        /* \"#utility.yul\":3767:3768   */\n      0x00\n        /* \"#utility.yul\":3756:3765   */\n      dup4\n        /* \"#utility.yul\":3752:3769   */\n      add\n        /* \"#utility.yul\":3743:3749   */\n      dup7\n        /* \"#utility.yul\":3699:3770   */\n      tag_88\n      jump\t// in\n    tag_111:\n        /* \"#utility.yul\":3780:3852   */\n      tag_112\n        /* \"#utility.yul\":3848:3850   */\n      0x20\n        /* \"#utility.yul\":3837:3846   */\n      dup4\n        /* \"#utility.yul\":3833:3851   */\n      add\n        /* \"#utility.yul\":3824:3830   */\n      dup6\n        /* \"#utility.yul\":3780:3852   */\n      tag_88\n      jump\t// in\n    tag_112:\n        /* \"#utility.yul\":3862:3934   */\n      tag_113\n        /* \"#utility.yul\":3930:3932   */\n      0x40\n        /* \"#utility.yul\":3919:3928   */\n      dup4\n        /* \"#utility.yul\":3915:3933   */\n      add\n        /* \"#utility.yul\":3906:3912   */\n      dup5\n        /* \"#utility.yul\":3862:3934   */\n      tag_88\n      jump\t// in\n    tag_113:\n        /* \"#utility.yul\":3653:3941   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3947:4161   */\n    tag_34:\n      0x00\n        /* \"#utility.yul\":4074:4076   */\n      0x20\n        /* \"#utility.yul\":4063:4072   */\n      dup3\n        /* \"#utility.yul\":4059:4077   */\n      add\n        /* \"#utility.yul\":4051:4077   */\n      swap1\n      pop\n        /* \"#utility.yul\":4087:4154   */\n      tag_115\n        /* \"#utility.yul\":4151:4152   */\n      0x00\n        /* \"#utility.yul\":4140:4149   */\n      dup4\n        /* \"#utility.yul\":4136:4153   */\n      add\n        /* \"#utility.yul\":4127:4133   */\n      dup5\n        /* \"#utility.yul\":4087:4154   */\n      tag_96\n      jump\t// in\n    tag_115:\n        /* \"#utility.yul\":4041:4161   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4167:4336   */\n    tag_83:\n      0x00\n        /* \"#utility.yul\":4285:4291   */\n      dup3\n        /* \"#utility.yul\":4280:4283   */\n      dup3\n        /* \"#utility.yul\":4273:4292   */\n      mstore\n        /* \"#utility.yul\":4325:4329   */\n      0x20\n        /* \"#utility.yul\":4320:4323   */\n      dup3\n        /* \"#utility.yul\":4316:4330   */\n      add\n        /* \"#utility.yul\":4301:4330   */\n      swap1\n      pop\n        /* \"#utility.yul\":4263:4336   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4342:4438   */\n    tag_79:\n      0x00\n        /* \"#utility.yul\":4408:4432   */\n      tag_118\n        /* \"#utility.yul\":4426:4431   */\n      dup3\n        /* \"#utility.yul\":4408:4432   */\n      tag_119\n      jump\t// in\n    tag_118:\n        /* \"#utility.yul\":4397:4432   */\n      swap1\n      pop\n        /* \"#utility.yul\":4387:4438   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4444:4556   */\n    tag_87:\n      0x00\n        /* \"#utility.yul\":4521:4549   */\n      0xffffffffffffffffffffffffff\n        /* \"#utility.yul\":4514:4519   */\n      dup3\n        /* \"#utility.yul\":4510:4550   */\n      and\n        /* \"#utility.yul\":4499:4550   */\n      swap1\n      pop\n        /* \"#utility.yul\":4489:4556   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4562:4688   */\n    tag_119:\n      0x00\n        /* \"#utility.yul\":4639:4681   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":4632:4637   */\n      dup3\n        /* \"#utility.yul\":4628:4682   */\n      and\n        /* \"#utility.yul\":4617:4682   */\n      swap1\n      pop\n        /* \"#utility.yul\":4607:4688   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4694:4771   */\n    tag_91:\n      0x00\n        /* \"#utility.yul\":4760:4765   */\n      dup2\n        /* \"#utility.yul\":4749:4765   */\n      swap1\n      pop\n        /* \"#utility.yul\":4739:4771   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4777:4872   */\n    tag_95:\n      0x00\n        /* \"#utility.yul\":4853:4865   */\n      0xffffffffff\n        /* \"#utility.yul\":4846:4851   */\n      dup3\n        /* \"#utility.yul\":4842:4866   */\n      and\n        /* \"#utility.yul\":4831:4866   */\n      swap1\n      pop\n        /* \"#utility.yul\":4821:4872   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4878:4964   */\n    tag_99:\n      0x00\n        /* \"#utility.yul\":4953:4957   */\n      0xff\n        /* \"#utility.yul\":4946:4951   */\n      dup3\n        /* \"#utility.yul\":4942:4958   */\n      and\n        /* \"#utility.yul\":4931:4958   */\n      swap1\n      pop\n        /* \"#utility.yul\":4921:4964   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4970:5092   */\n    tag_61:\n        /* \"#utility.yul\":5043:5067   */\n      tag_126\n        /* \"#utility.yul\":5061:5066   */\n      dup2\n        /* \"#utility.yul\":5043:5067   */\n      tag_79\n      jump\t// in\n    tag_126:\n        /* \"#utility.yul\":5036:5041   */\n      dup2\n        /* \"#utility.yul\":5033:5068   */\n      eq\n        /* \"#utility.yul\":5023:5025   */\n      tag_127\n      jumpi\n        /* \"#utility.yul\":5082:5083   */\n      0x00\n        /* \"#utility.yul\":5079:5080   */\n      dup1\n        /* \"#utility.yul\":5072:5084   */\n      revert\n        /* \"#utility.yul\":5023:5025   */\n    tag_127:\n        /* \"#utility.yul\":5013:5092   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5098:5220   */\n    tag_65:\n        /* \"#utility.yul\":5171:5195   */\n      tag_129\n        /* \"#utility.yul\":5189:5194   */\n      dup2\n        /* \"#utility.yul\":5171:5195   */\n      tag_91\n      jump\t// in\n    tag_129:\n        /* \"#utility.yul\":5164:5169   */\n      dup2\n        /* \"#utility.yul\":5161:5196   */\n      eq\n        /* \"#utility.yul\":5151:5153   */\n      tag_130\n      jumpi\n        /* \"#utility.yul\":5210:5211   */\n      0x00\n        /* \"#utility.yul\":5207:5208   */\n      dup1\n        /* \"#utility.yul\":5200:5212   */\n      revert\n        /* \"#utility.yul\":5151:5153   */\n    tag_130:\n        /* \"#utility.yul\":5141:5220   */\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220f8e26c54eb4ad9eb64aa27816e54e81760b86b9a85fe40d049a34279bfa24d9064736f6c63430007050033\n}\n",
						"bytecode": {
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:803:13",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "70:80:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "80:22:13",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "95:6:13"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "89:5:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "89:13:13"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "80:5:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "138:5:13"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "111:26:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "111:33:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "111:33:13"
														}
													]
												},
												"name": "abi_decode_t_address_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "48:6:13",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "56:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "64:5:13",
														"type": ""
													}
												],
												"src": "7:143:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "233:205:13",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "279:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "288:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "291:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "281:6:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "281:12:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "281:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "254:7:13"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "263:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "250:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "250:23:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "275:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "246:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "246:32:13"
															},
															"nodeType": "YulIf",
															"src": "243:2:13"
														},
														{
															"nodeType": "YulBlock",
															"src": "305:126:13",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "319:15:13",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "333:1:13",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "323:6:13",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "347:74:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "393:9:13"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "404:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "389:3:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "389:22:13"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "413:7:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "357:31:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "357:64:13"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "347:6:13"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "203:9:13",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "214:7:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "226:6:13",
														"type": ""
													}
												],
												"src": "156:282:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "489:51:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "499:35:13",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "528:5:13"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "510:17:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "510:24:13"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "499:7:13"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "471:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "481:7:13",
														"type": ""
													}
												],
												"src": "444:96:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "591:81:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "601:65:13",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "616:5:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "623:42:13",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "612:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "612:54:13"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "601:7:13"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "573:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "583:7:13",
														"type": ""
													}
												],
												"src": "546:126:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "721:79:13",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "778:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "787:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "790:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "780:6:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "780:12:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "780:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "744:5:13"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "769:5:13"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nodeType": "YulIdentifier",
																					"src": "751:17:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "751:24:13"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "741:2:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "741:35:13"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "734:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "734:43:13"
															},
															"nodeType": "YulIf",
															"src": "731:2:13"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "714:5:13",
														"type": ""
													}
												],
												"src": "678:122:13"
											}
										]
									},
									"contents": "{\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n\n        {\n            let offset := 0\n            value0 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n}\n",
									"id": 13,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "60a060405234801561001057600080fd5b5060405161092238038061092283398181016040528101906100329190610084565b8073ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff1660601b81525050506100f6565b60008151905061007e816100df565b92915050565b60006020828403121561009657600080fd5b60006100a48482850161006f565b91505092915050565b60006100b8826100bf565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6100e8816100ad565b81146100f357600080fd5b50565b60805160601c61080a610118600039806103895280610467525061080a6000f3fe608060405234801561001057600080fd5b50600436106100885760003560e01c8063aaf5eb681161005b578063aaf5eb6814610129578063cbcbb50714610147578063cc69afec14610165578063f11b81881461018357610088565b80631652e7b71461008d5780633373ee4c146100bf57806339ccbdd3146100ef578063919cd40f1461010b575b600080fd5b6100a760048036038101906100a2919061052a565b6101b5565b6040516100b6939291906106d0565b60405180910390f35b6100d960048036038101906100d49190610553565b6102fe565b6040516100e691906106b5565b60405180910390f35b6101096004803603810190610104919061058f565b610387565b005b610113610456565b60405161012091906106b5565b60405180910390f35b610131610460565b60405161013e9190610707565b60405180910390f35b61014f610465565b60405161015c9190610643565b60405180910390f35b61016d610489565b60405161017a91906106b5565b60405180910390f35b61019d6004803603810190610198919061052a565b610493565b6040516101ac9392919061067e565b60405180910390f35b60008060008060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600001600d9054906101000a90046cffffffffffffffffffffffffff166000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160009054906101000a90046cffffffffffffffffffffffffff166000808773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600001601a9054906101000a900464ffffffffff16826cffffffffffffffffffffffffff169250816cffffffffffffffffffffffffff1691508064ffffffffff1690509250925092509193909250565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610415576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161040c9061065e565b60405180910390fd5b806001819055507f1cc1849a6602c3e91f2088cadea4381cc5717f2f28584197060ed2ebb434c16f8160405161044b91906106b5565b60405180910390a150565b6000600154905090565b601281565b7f000000000000000000000000000000000000000000000000000000000000000081565b6000600154905090565b60006020528060005260406000206000915090508060000160009054906101000a90046cffffffffffffffffffffffffff169080600001600d9054906101000a90046cffffffffffffffffffffffffff169080600001601a9054906101000a900464ffffffffff16905083565b60008135905061050f816107a6565b92915050565b600081359050610524816107bd565b92915050565b60006020828403121561053c57600080fd5b600061054a84828501610500565b91505092915050565b6000806040838503121561056657600080fd5b600061057485828601610500565b925050602061058585828601610500565b9150509250929050565b6000602082840312156105a157600080fd5b60006105af84828501610515565b91505092915050565b6105c181610733565b82525050565b60006105d4601583610722565b91507f4f4e4c595f454d495353494f4e5f4d414e4147455200000000000000000000006000830152602082019050919050565b61061081610745565b82525050565b61061f8161077e565b82525050565b61062e81610788565b82525050565b61063d81610799565b82525050565b600060208201905061065860008301846105b8565b92915050565b60006020820190508181036000830152610677816105c7565b9050919050565b60006060820190506106936000830186610607565b6106a06020830185610607565b6106ad6040830184610625565b949350505050565b60006020820190506106ca6000830184610616565b92915050565b60006060820190506106e56000830186610616565b6106f26020830185610616565b6106ff6040830184610616565b949350505050565b600060208201905061071c6000830184610634565b92915050565b600082825260208201905092915050565b600061073e8261075e565b9050919050565b60006cffffffffffffffffffffffffff82169050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600064ffffffffff82169050919050565b600060ff82169050919050565b6107af81610733565b81146107ba57600080fd5b50565b6107c68161077e565b81146107d157600080fd5b5056fea2646970667358221220f8e26c54eb4ad9eb64aa27816e54e81760b86b9a85fe40d049a34279bfa24d9064736f6c63430007050033",
							"opcodes": "PUSH1 0xA0 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x922 CODESIZE SUB DUP1 PUSH2 0x922 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH2 0x32 SWAP2 SWAP1 PUSH2 0x84 JUMP JUMPDEST DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x80 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x60 SHL DUP2 MSTORE POP POP POP PUSH2 0xF6 JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x7E DUP2 PUSH2 0xDF JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x96 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xA4 DUP5 DUP3 DUP6 ADD PUSH2 0x6F JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xB8 DUP3 PUSH2 0xBF JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xE8 DUP2 PUSH2 0xAD JUMP JUMPDEST DUP2 EQ PUSH2 0xF3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x80 MLOAD PUSH1 0x60 SHR PUSH2 0x80A PUSH2 0x118 PUSH1 0x0 CODECOPY DUP1 PUSH2 0x389 MSTORE DUP1 PUSH2 0x467 MSTORE POP PUSH2 0x80A PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x88 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xAAF5EB68 GT PUSH2 0x5B JUMPI DUP1 PUSH4 0xAAF5EB68 EQ PUSH2 0x129 JUMPI DUP1 PUSH4 0xCBCBB507 EQ PUSH2 0x147 JUMPI DUP1 PUSH4 0xCC69AFEC EQ PUSH2 0x165 JUMPI DUP1 PUSH4 0xF11B8188 EQ PUSH2 0x183 JUMPI PUSH2 0x88 JUMP JUMPDEST DUP1 PUSH4 0x1652E7B7 EQ PUSH2 0x8D JUMPI DUP1 PUSH4 0x3373EE4C EQ PUSH2 0xBF JUMPI DUP1 PUSH4 0x39CCBDD3 EQ PUSH2 0xEF JUMPI DUP1 PUSH4 0x919CD40F EQ PUSH2 0x10B JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xA7 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xA2 SWAP2 SWAP1 PUSH2 0x52A JUMP JUMPDEST PUSH2 0x1B5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xB6 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x6D0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xD9 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xD4 SWAP2 SWAP1 PUSH2 0x553 JUMP JUMPDEST PUSH2 0x2FE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xE6 SWAP2 SWAP1 PUSH2 0x6B5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x109 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x104 SWAP2 SWAP1 PUSH2 0x58F JUMP JUMPDEST PUSH2 0x387 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x113 PUSH2 0x456 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x120 SWAP2 SWAP1 PUSH2 0x6B5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x131 PUSH2 0x460 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x13E SWAP2 SWAP1 PUSH2 0x707 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x14F PUSH2 0x465 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x15C SWAP2 SWAP1 PUSH2 0x643 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x16D PUSH2 0x489 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x17A SWAP2 SWAP1 PUSH2 0x6B5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x19D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x198 SWAP2 SWAP1 PUSH2 0x52A JUMP JUMPDEST PUSH2 0x493 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1AC SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x67E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0xD SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH13 0xFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH13 0xFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x1A SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH5 0xFFFFFFFFFF AND DUP3 PUSH13 0xFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP3 POP DUP2 PUSH13 0xFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP2 POP DUP1 PUSH5 0xFFFFFFFFFF AND SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 POP SWAP2 SWAP4 SWAP1 SWAP3 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x415 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x40C SWAP1 PUSH2 0x65E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x1 DUP2 SWAP1 SSTORE POP PUSH32 0x1CC1849A6602C3E91F2088CADEA4381CC5717F2F28584197060ED2EBB434C16F DUP2 PUSH1 0x40 MLOAD PUSH2 0x44B SWAP2 SWAP1 PUSH2 0x6B5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x12 DUP2 JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP DUP1 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH13 0xFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP1 PUSH1 0x0 ADD PUSH1 0xD SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH13 0xFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP1 PUSH1 0x0 ADD PUSH1 0x1A SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH5 0xFFFFFFFFFF AND SWAP1 POP DUP4 JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x50F DUP2 PUSH2 0x7A6 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x524 DUP2 PUSH2 0x7BD JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x53C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x54A DUP5 DUP3 DUP6 ADD PUSH2 0x500 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x566 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x574 DUP6 DUP3 DUP7 ADD PUSH2 0x500 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x585 DUP6 DUP3 DUP7 ADD PUSH2 0x500 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x5A1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x5AF DUP5 DUP3 DUP6 ADD PUSH2 0x515 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x5C1 DUP2 PUSH2 0x733 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5D4 PUSH1 0x15 DUP4 PUSH2 0x722 JUMP JUMPDEST SWAP2 POP PUSH32 0x4F4E4C595F454D495353494F4E5F4D414E414745520000000000000000000000 PUSH1 0x0 DUP4 ADD MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x610 DUP2 PUSH2 0x745 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x61F DUP2 PUSH2 0x77E JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x62E DUP2 PUSH2 0x788 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x63D DUP2 PUSH2 0x799 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x658 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x5B8 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x677 DUP2 PUSH2 0x5C7 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x693 PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x607 JUMP JUMPDEST PUSH2 0x6A0 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x607 JUMP JUMPDEST PUSH2 0x6AD PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x625 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x6CA PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x616 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x6E5 PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x616 JUMP JUMPDEST PUSH2 0x6F2 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x616 JUMP JUMPDEST PUSH2 0x6FF PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x616 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x71C PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x634 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x73E DUP3 PUSH2 0x75E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH13 0xFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH5 0xFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x7AF DUP2 PUSH2 0x733 JUMP JUMPDEST DUP2 EQ PUSH2 0x7BA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x7C6 DUP2 PUSH2 0x77E JUMP JUMPDEST DUP2 EQ PUSH2 0x7D1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xF8 0xE2 PUSH13 0x54EB4AD9EB64AA27816E54E817 PUSH1 0xB8 PUSH12 0x9A85FE40D049A34279BFA24D SWAP1 PUSH5 0x736F6C6343 STOP SMOD SDIV STOP CALLER ",
							"sourceMap": "449:8422:7:-:0;;;1004:84;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1067:15;1048:34;;;;;;;;;;;;1004:84;449:8422;;7:143:13;;95:6;89:13;80:22;;111:33;138:5;111:33;:::i;:::-;70:80;;;;:::o;156:282::-;;275:2;263:9;254:7;250:23;246:32;243:2;;;291:1;288;281:12;243:2;333:1;357:64;413:7;404:6;393:9;389:22;357:64;:::i;:::-;347:74;;305:126;233:205;;;;:::o;444:96::-;;510:24;528:5;510:24;:::i;:::-;499:35;;489:51;;;:::o;546:126::-;;623:42;616:5;612:54;601:65;;591:81;;;:::o;678:122::-;751:24;769:5;751:24;:::i;:::-;744:5;741:35;731:2;;790:1;787;780:12;731:2;721:79;:::o;449:8422:7:-;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:5223:13",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "59:87:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "69:29:13",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "91:6:13"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "78:12:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "78:20:13"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "69:5:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "134:5:13"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "107:26:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "107:33:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "107:33:13"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "37:6:13",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "45:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "53:5:13",
														"type": ""
													}
												],
												"src": "7:139:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "204:87:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "214:29:13",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "236:6:13"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "223:12:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "223:20:13"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "214:5:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "279:5:13"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "252:26:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "252:33:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "252:33:13"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "182:6:13",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "190:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "198:5:13",
														"type": ""
													}
												],
												"src": "152:139:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "363:194:13",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "409:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "418:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "421:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "411:6:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "411:12:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "411:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "384:7:13"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "393:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "380:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "380:23:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "405:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "376:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "376:32:13"
															},
															"nodeType": "YulIf",
															"src": "373:2:13"
														},
														{
															"nodeType": "YulBlock",
															"src": "435:115:13",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "449:15:13",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "463:1:13",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "453:6:13",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "477:63:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "512:9:13"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "523:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "508:3:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "508:22:13"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "532:7:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "487:20:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "487:53:13"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "477:6:13"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "333:9:13",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "344:7:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "356:6:13",
														"type": ""
													}
												],
												"src": "297:260:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "646:320:13",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "692:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "701:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "704:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "694:6:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "694:12:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "694:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "667:7:13"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "676:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "663:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "663:23:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "688:2:13",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "659:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "659:32:13"
															},
															"nodeType": "YulIf",
															"src": "656:2:13"
														},
														{
															"nodeType": "YulBlock",
															"src": "718:115:13",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "732:15:13",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "746:1:13",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "736:6:13",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "760:63:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "795:9:13"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "806:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "791:3:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "791:22:13"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "815:7:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "770:20:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "770:53:13"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "760:6:13"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "843:116:13",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "857:16:13",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "871:2:13",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "861:6:13",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "886:63:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "921:9:13"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "932:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "917:3:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "917:22:13"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "941:7:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "896:20:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "896:53:13"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "886:6:13"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "608:9:13",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "619:7:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "631:6:13",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "639:6:13",
														"type": ""
													}
												],
												"src": "563:403:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1038:194:13",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1084:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1093:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1096:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1086:6:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1086:12:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1086:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1059:7:13"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1068:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1055:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1055:23:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1080:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1051:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "1051:32:13"
															},
															"nodeType": "YulIf",
															"src": "1048:2:13"
														},
														{
															"nodeType": "YulBlock",
															"src": "1110:115:13",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1124:15:13",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1138:1:13",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1128:6:13",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1152:63:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1187:9:13"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1198:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1183:3:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1183:22:13"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1207:7:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "1162:20:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1162:53:13"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "1152:6:13"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1008:9:13",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1019:7:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1031:6:13",
														"type": ""
													}
												],
												"src": "972:260:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1303:53:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1320:3:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1343:5:13"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "1325:17:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1325:24:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1313:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "1313:37:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1313:37:13"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1291:5:13",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "1298:3:13",
														"type": ""
													}
												],
												"src": "1238:118:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1508:173:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1518:74:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1584:3:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1589:2:13",
																		"type": "",
																		"value": "21"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "1525:58:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "1525:67:13"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "1518:3:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "1613:3:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1618:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1609:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1609:11:13"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "1622:23:13",
																		"type": "",
																		"value": "ONLY_EMISSION_MANAGER"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1602:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "1602:44:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1602:44:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1656:19:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1667:3:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1672:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1663:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "1663:12:13"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "1656:3:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_a28d34ff463a8cc689c6ec4b8c995983f85d0a40987242bc4cc3cec37303c18e_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "1496:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "1504:3:13",
														"type": ""
													}
												],
												"src": "1362:319:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1752:53:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1769:3:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1792:5:13"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint104",
																			"nodeType": "YulIdentifier",
																			"src": "1774:17:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1774:24:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1762:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "1762:37:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1762:37:13"
														}
													]
												},
												"name": "abi_encode_t_uint104_to_t_uint104_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1740:5:13",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "1747:3:13",
														"type": ""
													}
												],
												"src": "1687:118:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1876:53:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1893:3:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1916:5:13"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "1898:17:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1898:24:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1886:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "1886:37:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1886:37:13"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1864:5:13",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "1871:3:13",
														"type": ""
													}
												],
												"src": "1811:118:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1998:52:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2015:3:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2037:5:13"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint40",
																			"nodeType": "YulIdentifier",
																			"src": "2020:16:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2020:23:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2008:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "2008:36:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2008:36:13"
														}
													]
												},
												"name": "abi_encode_t_uint40_to_t_uint40_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1986:5:13",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "1993:3:13",
														"type": ""
													}
												],
												"src": "1935:115:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2117:51:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2134:3:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2155:5:13"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint8",
																			"nodeType": "YulIdentifier",
																			"src": "2139:15:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2139:22:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2127:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "2127:35:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2127:35:13"
														}
													]
												},
												"name": "abi_encode_t_uint8_to_t_uint8_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2105:5:13",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "2112:3:13",
														"type": ""
													}
												],
												"src": "2056:112:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2272:124:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2282:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2294:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2305:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2290:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "2290:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2282:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "2362:6:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2375:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2386:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2371:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2371:17:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "2318:43:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "2318:71:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2318:71:13"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2244:9:13",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2256:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2267:4:13",
														"type": ""
													}
												],
												"src": "2174:222:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2573:248:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2583:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2595:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2606:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2591:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "2591:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2583:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2630:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2641:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2626:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2626:17:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "2649:4:13"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2655:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2645:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2645:20:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2619:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "2619:47:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2619:47:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2675:139:13",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "2809:4:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_a28d34ff463a8cc689c6ec4b8c995983f85d0a40987242bc4cc3cec37303c18e_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "2683:124:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "2683:131:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2675:4:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_a28d34ff463a8cc689c6ec4b8c995983f85d0a40987242bc4cc3cec37303c18e__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2553:9:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2568:4:13",
														"type": ""
													}
												],
												"src": "2402:419:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2979:286:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2989:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3001:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3012:2:13",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2997:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "2997:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2989:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "3069:6:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3082:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3093:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3078:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3078:17:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint104_to_t_uint104_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "3025:43:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "3025:71:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3025:71:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "3150:6:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3163:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3174:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3159:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3159:18:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint104_to_t_uint104_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "3106:43:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "3106:72:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3106:72:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "3230:6:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3243:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3254:2:13",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3239:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3239:18:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint40_to_t_uint40_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "3188:41:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "3188:70:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3188:70:13"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint104_t_uint104_t_uint40__to_t_uint104_t_uint104_t_uint40__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2935:9:13",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "2947:6:13",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "2955:6:13",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2963:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2974:4:13",
														"type": ""
													}
												],
												"src": "2827:438:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3369:124:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3379:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3391:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3402:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3387:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "3387:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3379:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "3459:6:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3472:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3483:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3468:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3468:17:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "3415:43:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "3415:71:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3415:71:13"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3341:9:13",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3353:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3364:4:13",
														"type": ""
													}
												],
												"src": "3271:222:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3653:288:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3663:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3675:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3686:2:13",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3671:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "3671:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3663:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "3743:6:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3756:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3767:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3752:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3752:17:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "3699:43:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "3699:71:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3699:71:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "3824:6:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3837:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3848:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3833:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3833:18:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "3780:43:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "3780:72:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3780:72:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "3906:6:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3919:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3930:2:13",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3915:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3915:18:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "3862:43:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "3862:72:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3862:72:13"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3609:9:13",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "3621:6:13",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "3629:6:13",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3637:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3648:4:13",
														"type": ""
													}
												],
												"src": "3499:442:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4041:120:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4051:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4063:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4074:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4059:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "4059:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4051:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "4127:6:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4140:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4151:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4136:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4136:17:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint8_to_t_uint8_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "4087:39:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "4087:67:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4087:67:13"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4013:9:13",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4025:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4036:4:13",
														"type": ""
													}
												],
												"src": "3947:214:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4263:73:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4280:3:13"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "4285:6:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4273:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "4273:19:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4273:19:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4301:29:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4320:3:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4325:4:13",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4316:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "4316:14:13"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "4301:11:13"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "4235:3:13",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "4240:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "4251:11:13",
														"type": ""
													}
												],
												"src": "4167:169:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4387:51:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4397:35:13",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "4426:5:13"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "4408:17:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "4408:24:13"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "4397:7:13"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4369:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "4379:7:13",
														"type": ""
													}
												],
												"src": "4342:96:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4489:67:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4499:51:13",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "4514:5:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4521:28:13",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "4510:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "4510:40:13"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "4499:7:13"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint104",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4471:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "4481:7:13",
														"type": ""
													}
												],
												"src": "4444:112:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4607:81:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4617:65:13",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "4632:5:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4639:42:13",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "4628:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "4628:54:13"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "4617:7:13"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4589:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "4599:7:13",
														"type": ""
													}
												],
												"src": "4562:126:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4739:32:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4749:16:13",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "4760:5:13"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "4749:7:13"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4721:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "4731:7:13",
														"type": ""
													}
												],
												"src": "4694:77:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4821:51:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4831:35:13",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "4846:5:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4853:12:13",
																		"type": "",
																		"value": "0xffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "4842:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "4842:24:13"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "4831:7:13"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint40",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4803:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "4813:7:13",
														"type": ""
													}
												],
												"src": "4777:95:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4921:43:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4931:27:13",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "4946:5:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4953:4:13",
																		"type": "",
																		"value": "0xff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "4942:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "4942:16:13"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "4931:7:13"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4903:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "4913:7:13",
														"type": ""
													}
												],
												"src": "4878:86:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5013:79:13",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5070:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5079:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5082:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "5072:6:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5072:12:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5072:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "5036:5:13"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "5061:5:13"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nodeType": "YulIdentifier",
																					"src": "5043:17:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5043:24:13"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "5033:2:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5033:35:13"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "5026:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "5026:43:13"
															},
															"nodeType": "YulIf",
															"src": "5023:2:13"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "5006:5:13",
														"type": ""
													}
												],
												"src": "4970:122:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5141:79:13",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5198:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5207:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5210:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "5200:6:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5200:12:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5200:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "5164:5:13"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "5189:5:13"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "5171:17:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5171:24:13"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "5161:2:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5161:35:13"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "5154:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "5154:43:13"
															},
															"nodeType": "YulIf",
															"src": "5151:2:13"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "5134:5:13",
														"type": ""
													}
												],
												"src": "5098:122:13"
											}
										]
									},
									"contents": "{\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n\n        {\n            let offset := 0\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n\n        {\n            let offset := 0\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n            let offset := 32\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n\n        {\n            let offset := 0\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_t_stringliteral_a28d34ff463a8cc689c6ec4b8c995983f85d0a40987242bc4cc3cec37303c18e_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 21)\n\n        mstore(add(pos, 0), \"ONLY_EMISSION_MANAGER\")\n\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_uint104_to_t_uint104_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint104(value))\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_t_uint40_to_t_uint40_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint40(value))\n    }\n\n    function abi_encode_t_uint8_to_t_uint8_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint8(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_a28d34ff463a8cc689c6ec4b8c995983f85d0a40987242bc4cc3cec37303c18e__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_a28d34ff463a8cc689c6ec4b8c995983f85d0a40987242bc4cc3cec37303c18e_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_uint104_t_uint104_t_uint40__to_t_uint104_t_uint104_t_uint40__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_uint104_to_t_uint104_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint104_to_t_uint104_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint40_to_t_uint40_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint8_to_t_uint8_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_uint104(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function cleanup_t_uint40(value) -> cleaned {\n        cleaned := and(value, 0xffffffffff)\n    }\n\n    function cleanup_t_uint8(value) -> cleaned {\n        cleaned := and(value, 0xff)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n}\n",
									"id": 13,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {
								"1291": [
									{
										"length": 32,
										"start": 905
									},
									{
										"length": 32,
										"start": 1127
									}
								]
							},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106100885760003560e01c8063aaf5eb681161005b578063aaf5eb6814610129578063cbcbb50714610147578063cc69afec14610165578063f11b81881461018357610088565b80631652e7b71461008d5780633373ee4c146100bf57806339ccbdd3146100ef578063919cd40f1461010b575b600080fd5b6100a760048036038101906100a2919061052a565b6101b5565b6040516100b6939291906106d0565b60405180910390f35b6100d960048036038101906100d49190610553565b6102fe565b6040516100e691906106b5565b60405180910390f35b6101096004803603810190610104919061058f565b610387565b005b610113610456565b60405161012091906106b5565b60405180910390f35b610131610460565b60405161013e9190610707565b60405180910390f35b61014f610465565b60405161015c9190610643565b60405180910390f35b61016d610489565b60405161017a91906106b5565b60405180910390f35b61019d6004803603810190610198919061052a565b610493565b6040516101ac9392919061067e565b60405180910390f35b60008060008060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600001600d9054906101000a90046cffffffffffffffffffffffffff166000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160009054906101000a90046cffffffffffffffffffffffffff166000808773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600001601a9054906101000a900464ffffffffff16826cffffffffffffffffffffffffff169250816cffffffffffffffffffffffffff1691508064ffffffffff1690509250925092509193909250565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610415576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161040c9061065e565b60405180910390fd5b806001819055507f1cc1849a6602c3e91f2088cadea4381cc5717f2f28584197060ed2ebb434c16f8160405161044b91906106b5565b60405180910390a150565b6000600154905090565b601281565b7f000000000000000000000000000000000000000000000000000000000000000081565b6000600154905090565b60006020528060005260406000206000915090508060000160009054906101000a90046cffffffffffffffffffffffffff169080600001600d9054906101000a90046cffffffffffffffffffffffffff169080600001601a9054906101000a900464ffffffffff16905083565b60008135905061050f816107a6565b92915050565b600081359050610524816107bd565b92915050565b60006020828403121561053c57600080fd5b600061054a84828501610500565b91505092915050565b6000806040838503121561056657600080fd5b600061057485828601610500565b925050602061058585828601610500565b9150509250929050565b6000602082840312156105a157600080fd5b60006105af84828501610515565b91505092915050565b6105c181610733565b82525050565b60006105d4601583610722565b91507f4f4e4c595f454d495353494f4e5f4d414e4147455200000000000000000000006000830152602082019050919050565b61061081610745565b82525050565b61061f8161077e565b82525050565b61062e81610788565b82525050565b61063d81610799565b82525050565b600060208201905061065860008301846105b8565b92915050565b60006020820190508181036000830152610677816105c7565b9050919050565b60006060820190506106936000830186610607565b6106a06020830185610607565b6106ad6040830184610625565b949350505050565b60006020820190506106ca6000830184610616565b92915050565b60006060820190506106e56000830186610616565b6106f26020830185610616565b6106ff6040830184610616565b949350505050565b600060208201905061071c6000830184610634565b92915050565b600082825260208201905092915050565b600061073e8261075e565b9050919050565b60006cffffffffffffffffffffffffff82169050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600064ffffffffff82169050919050565b600060ff82169050919050565b6107af81610733565b81146107ba57600080fd5b50565b6107c68161077e565b81146107d157600080fd5b5056fea2646970667358221220f8e26c54eb4ad9eb64aa27816e54e81760b86b9a85fe40d049a34279bfa24d9064736f6c63430007050033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x88 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xAAF5EB68 GT PUSH2 0x5B JUMPI DUP1 PUSH4 0xAAF5EB68 EQ PUSH2 0x129 JUMPI DUP1 PUSH4 0xCBCBB507 EQ PUSH2 0x147 JUMPI DUP1 PUSH4 0xCC69AFEC EQ PUSH2 0x165 JUMPI DUP1 PUSH4 0xF11B8188 EQ PUSH2 0x183 JUMPI PUSH2 0x88 JUMP JUMPDEST DUP1 PUSH4 0x1652E7B7 EQ PUSH2 0x8D JUMPI DUP1 PUSH4 0x3373EE4C EQ PUSH2 0xBF JUMPI DUP1 PUSH4 0x39CCBDD3 EQ PUSH2 0xEF JUMPI DUP1 PUSH4 0x919CD40F EQ PUSH2 0x10B JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xA7 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xA2 SWAP2 SWAP1 PUSH2 0x52A JUMP JUMPDEST PUSH2 0x1B5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xB6 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x6D0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xD9 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xD4 SWAP2 SWAP1 PUSH2 0x553 JUMP JUMPDEST PUSH2 0x2FE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xE6 SWAP2 SWAP1 PUSH2 0x6B5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x109 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x104 SWAP2 SWAP1 PUSH2 0x58F JUMP JUMPDEST PUSH2 0x387 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x113 PUSH2 0x456 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x120 SWAP2 SWAP1 PUSH2 0x6B5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x131 PUSH2 0x460 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x13E SWAP2 SWAP1 PUSH2 0x707 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x14F PUSH2 0x465 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x15C SWAP2 SWAP1 PUSH2 0x643 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x16D PUSH2 0x489 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x17A SWAP2 SWAP1 PUSH2 0x6B5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x19D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x198 SWAP2 SWAP1 PUSH2 0x52A JUMP JUMPDEST PUSH2 0x493 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1AC SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x67E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0xD SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH13 0xFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH13 0xFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x1A SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH5 0xFFFFFFFFFF AND DUP3 PUSH13 0xFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP3 POP DUP2 PUSH13 0xFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP2 POP DUP1 PUSH5 0xFFFFFFFFFF AND SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 POP SWAP2 SWAP4 SWAP1 SWAP3 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x415 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x40C SWAP1 PUSH2 0x65E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x1 DUP2 SWAP1 SSTORE POP PUSH32 0x1CC1849A6602C3E91F2088CADEA4381CC5717F2F28584197060ED2EBB434C16F DUP2 PUSH1 0x40 MLOAD PUSH2 0x44B SWAP2 SWAP1 PUSH2 0x6B5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x12 DUP2 JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP DUP1 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH13 0xFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP1 PUSH1 0x0 ADD PUSH1 0xD SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH13 0xFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP1 PUSH1 0x0 ADD PUSH1 0x1A SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH5 0xFFFFFFFFFF AND SWAP1 POP DUP4 JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x50F DUP2 PUSH2 0x7A6 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x524 DUP2 PUSH2 0x7BD JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x53C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x54A DUP5 DUP3 DUP6 ADD PUSH2 0x500 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x566 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x574 DUP6 DUP3 DUP7 ADD PUSH2 0x500 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x585 DUP6 DUP3 DUP7 ADD PUSH2 0x500 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x5A1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x5AF DUP5 DUP3 DUP6 ADD PUSH2 0x515 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x5C1 DUP2 PUSH2 0x733 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5D4 PUSH1 0x15 DUP4 PUSH2 0x722 JUMP JUMPDEST SWAP2 POP PUSH32 0x4F4E4C595F454D495353494F4E5F4D414E414745520000000000000000000000 PUSH1 0x0 DUP4 ADD MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x610 DUP2 PUSH2 0x745 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x61F DUP2 PUSH2 0x77E JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x62E DUP2 PUSH2 0x788 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x63D DUP2 PUSH2 0x799 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x658 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x5B8 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x677 DUP2 PUSH2 0x5C7 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x693 PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x607 JUMP JUMPDEST PUSH2 0x6A0 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x607 JUMP JUMPDEST PUSH2 0x6AD PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x625 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x6CA PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x616 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x6E5 PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x616 JUMP JUMPDEST PUSH2 0x6F2 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x616 JUMP JUMPDEST PUSH2 0x6FF PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x616 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x71C PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x634 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x73E DUP3 PUSH2 0x75E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH13 0xFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH5 0xFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x7AF DUP2 PUSH2 0x733 JUMP JUMPDEST DUP2 EQ PUSH2 0x7BA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x7C6 DUP2 PUSH2 0x77E JUMP JUMPDEST DUP2 EQ PUSH2 0x7D1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xF8 0xE2 PUSH13 0x54EB4AD9EB64AA27816E54E817 PUSH1 0xB8 PUSH12 0x9A85FE40D049A34279BFA24D SWAP1 PUSH5 0x736F6C6343 STOP SMOD SDIV STOP CALLER ",
							"sourceMap": "449:8422:7:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1893:203;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;;1701:139;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1141:189;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1543:105;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;749:36;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;701:41;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1383:107;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;792:43;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;;1893:203;1960:7;1969;1978;2002:6;:13;2009:5;2002:13;;;;;;;;;;;;;;;:19;;;;;;;;;;;;2023:6;:13;2030:5;2023:13;;;;;;;;;;;;;;;:31;;;;;;;;;;;;2056:6;:13;2063:5;2056:13;;;;;;;;;;;;;;;:33;;;;;;;;;;;;1994:96;;;;;;;;;;;;;;;;;;;;;1893:203;;;;;:::o;1701:139::-;1786:7;1809:6;:13;1816:5;1809:13;;;;;;;;;;;;;;;:19;;:25;1829:4;1809:25;;;;;;;;;;;;;;;;1802:32;;1701:139;;;;:::o;1141:189::-;942:16;928:30;;:10;:30;;;920:64;;;;;;;;;;;;:::i;:::-;;;;;;;;;1258:15:::1;1239:16;:34;;;;1285:39;1308:15;1285:39;;;;;;:::i;:::-;;;;;;;;1141:189:::0;:::o;1543:105::-;1603:7;1626:16;;1619:23;;1543:105;:::o;749:36::-;783:2;749:36;:::o;701:41::-;;;:::o;1383:107::-;1445:7;1468:16;;1461:23;;1383:107;:::o;792:43::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;7:139:13:-;;91:6;78:20;69:29;;107:33;134:5;107:33;:::i;:::-;59:87;;;;:::o;152:139::-;;236:6;223:20;214:29;;252:33;279:5;252:33;:::i;:::-;204:87;;;;:::o;297:260::-;;405:2;393:9;384:7;380:23;376:32;373:2;;;421:1;418;411:12;373:2;463:1;487:53;532:7;523:6;512:9;508:22;487:53;:::i;:::-;477:63;;435:115;363:194;;;;:::o;563:403::-;;;688:2;676:9;667:7;663:23;659:32;656:2;;;704:1;701;694:12;656:2;746:1;770:53;815:7;806:6;795:9;791:22;770:53;:::i;:::-;760:63;;718:115;871:2;896:53;941:7;932:6;921:9;917:22;896:53;:::i;:::-;886:63;;843:116;646:320;;;;;:::o;972:260::-;;1080:2;1068:9;1059:7;1055:23;1051:32;1048:2;;;1096:1;1093;1086:12;1048:2;1138:1;1162:53;1207:7;1198:6;1187:9;1183:22;1162:53;:::i;:::-;1152:63;;1110:115;1038:194;;;;:::o;1238:118::-;1325:24;1343:5;1325:24;:::i;:::-;1320:3;1313:37;1303:53;;:::o;1362:319::-;;1525:67;1589:2;1584:3;1525:67;:::i;:::-;1518:74;;1622:23;1618:1;1613:3;1609:11;1602:44;1672:2;1667:3;1663:12;1656:19;;1508:173;;;:::o;1687:118::-;1774:24;1792:5;1774:24;:::i;:::-;1769:3;1762:37;1752:53;;:::o;1811:118::-;1898:24;1916:5;1898:24;:::i;:::-;1893:3;1886:37;1876:53;;:::o;1935:115::-;2020:23;2037:5;2020:23;:::i;:::-;2015:3;2008:36;1998:52;;:::o;2056:112::-;2139:22;2155:5;2139:22;:::i;:::-;2134:3;2127:35;2117:51;;:::o;2174:222::-;;2305:2;2294:9;2290:18;2282:26;;2318:71;2386:1;2375:9;2371:17;2362:6;2318:71;:::i;:::-;2272:124;;;;:::o;2402:419::-;;2606:2;2595:9;2591:18;2583:26;;2655:9;2649:4;2645:20;2641:1;2630:9;2626:17;2619:47;2683:131;2809:4;2683:131;:::i;:::-;2675:139;;2573:248;;;:::o;2827:438::-;;3012:2;3001:9;2997:18;2989:26;;3025:71;3093:1;3082:9;3078:17;3069:6;3025:71;:::i;:::-;3106:72;3174:2;3163:9;3159:18;3150:6;3106:72;:::i;:::-;3188:70;3254:2;3243:9;3239:18;3230:6;3188:70;:::i;:::-;2979:286;;;;;;:::o;3271:222::-;;3402:2;3391:9;3387:18;3379:26;;3415:71;3483:1;3472:9;3468:17;3459:6;3415:71;:::i;:::-;3369:124;;;;:::o;3499:442::-;;3686:2;3675:9;3671:18;3663:26;;3699:71;3767:1;3756:9;3752:17;3743:6;3699:71;:::i;:::-;3780:72;3848:2;3837:9;3833:18;3824:6;3780:72;:::i;:::-;3862;3930:2;3919:9;3915:18;3906:6;3862:72;:::i;:::-;3653:288;;;;;;:::o;3947:214::-;;4074:2;4063:9;4059:18;4051:26;;4087:67;4151:1;4140:9;4136:17;4127:6;4087:67;:::i;:::-;4041:120;;;;:::o;4167:169::-;;4285:6;4280:3;4273:19;4325:4;4320:3;4316:14;4301:29;;4263:73;;;;:::o;4342:96::-;;4408:24;4426:5;4408:24;:::i;:::-;4397:35;;4387:51;;;:::o;4444:112::-;;4521:28;4514:5;4510:40;4499:51;;4489:67;;;:::o;4562:126::-;;4639:42;4632:5;4628:54;4617:65;;4607:81;;;:::o;4694:77::-;;4760:5;4749:16;;4739:32;;;:::o;4777:95::-;;4853:12;4846:5;4842:24;4831:35;;4821:51;;;:::o;4878:86::-;;4953:4;4946:5;4942:16;4931:27;;4921:43;;;:::o;4970:122::-;5043:24;5061:5;5043:24;:::i;:::-;5036:5;5033:35;5023:2;;5082:1;5079;5072:12;5023:2;5013:79;:::o;5098:122::-;5171:24;5189:5;5171:24;:::i;:::-;5164:5;5161:35;5151:2;;5210:1;5207;5200:12;5151:2;5141:79;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "411600",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"DISTRIBUTION_END()": "1204",
								"EMISSION_MANAGER()": "infinite",
								"PRECISION()": "335",
								"assets(address)": "infinite",
								"getAssetData(address)": "infinite",
								"getDistributionEnd()": "1181",
								"getUserAssetData(address,address)": "infinite",
								"setDistributionEnd(uint256)": "infinite"
							},
							"internal": {
								"_claimRewards(address,struct DistributionTypes.UserStakeInput memory[] memory)": "infinite",
								"_configureAssets(struct DistributionTypes.AssetConfigInput memory[] memory)": "infinite",
								"_getAssetIndex(uint256,uint256,uint128,uint256)": "infinite",
								"_getRewards(uint256,uint256,uint256)": "infinite",
								"_getUnclaimedRewards(address,struct DistributionTypes.UserStakeInput memory[] memory)": "infinite",
								"_updateAssetStateInternal(address,struct DistributionManager.AssetData storage pointer,uint256)": "infinite",
								"_updateUserAssetInternal(address,address,uint256,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 449,
									"end": 8871,
									"name": "PUSH",
									"source": 7,
									"value": "A0"
								},
								{
									"begin": 449,
									"end": 8871,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 449,
									"end": 8871,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 1004,
									"end": 1088,
									"name": "CALLVALUE",
									"source": 7
								},
								{
									"begin": 1004,
									"end": 1088,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 1004,
									"end": 1088,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 1004,
									"end": 1088,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 1004,
									"end": 1088,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 1004,
									"end": 1088,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1004,
									"end": 1088,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 1004,
									"end": 1088,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 1004,
									"end": 1088,
									"name": "tag",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 1004,
									"end": 1088,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1004,
									"end": 1088,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1004,
									"end": 1088,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 1004,
									"end": 1088,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 1004,
									"end": 1088,
									"name": "PUSHSIZE",
									"source": 7
								},
								{
									"begin": 1004,
									"end": 1088,
									"name": "CODESIZE",
									"source": 7
								},
								{
									"begin": 1004,
									"end": 1088,
									"name": "SUB",
									"source": 7
								},
								{
									"begin": 1004,
									"end": 1088,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 1004,
									"end": 1088,
									"name": "PUSHSIZE",
									"source": 7
								},
								{
									"begin": 1004,
									"end": 1088,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 1004,
									"end": 1088,
									"name": "CODECOPY",
									"source": 7
								},
								{
									"begin": 1004,
									"end": 1088,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1004,
									"end": 1088,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1004,
									"end": 1088,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 1004,
									"end": 1088,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 1004,
									"end": 1088,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 1004,
									"end": 1088,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1004,
									"end": 1088,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 1004,
									"end": 1088,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1004,
									"end": 1088,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "2"
								},
								{
									"begin": 1004,
									"end": 1088,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 1004,
									"end": 1088,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1004,
									"end": 1088,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "3"
								},
								{
									"begin": 1004,
									"end": 1088,
									"name": "JUMP",
									"source": 7,
									"value": "[in]"
								},
								{
									"begin": 1004,
									"end": 1088,
									"name": "tag",
									"source": 7,
									"value": "2"
								},
								{
									"begin": 1004,
									"end": 1088,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1067,
									"end": 1082,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 1048,
									"end": 1082,
									"name": "PUSH",
									"source": 7,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1048,
									"end": 1082,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 1048,
									"end": 1082,
									"name": "PUSH",
									"source": 7,
									"value": "80"
								},
								{
									"begin": 1048,
									"end": 1082,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1048,
									"end": 1082,
									"name": "PUSH",
									"source": 7,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1048,
									"end": 1082,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 1048,
									"end": 1082,
									"name": "PUSH",
									"source": 7,
									"value": "60"
								},
								{
									"begin": 1048,
									"end": 1082,
									"name": "SHL",
									"source": 7
								},
								{
									"begin": 1048,
									"end": 1082,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1048,
									"end": 1082,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 1048,
									"end": 1082,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1048,
									"end": 1082,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1004,
									"end": 1088,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 449,
									"end": 8871,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "6"
								},
								{
									"begin": 449,
									"end": 8871,
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 7,
									"end": 150,
									"name": "tag",
									"source": 13,
									"value": "8"
								},
								{
									"begin": 7,
									"end": 150,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 7,
									"end": 150,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 95,
									"end": 101,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 89,
									"end": 102,
									"name": "MLOAD",
									"source": 13
								},
								{
									"begin": 80,
									"end": 102,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 80,
									"end": 102,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 111,
									"end": 144,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "10"
								},
								{
									"begin": 138,
									"end": 143,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 111,
									"end": 144,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "11"
								},
								{
									"begin": 111,
									"end": 144,
									"name": "JUMP",
									"source": 13,
									"value": "[in]"
								},
								{
									"begin": 111,
									"end": 144,
									"name": "tag",
									"source": 13,
									"value": "10"
								},
								{
									"begin": 111,
									"end": 144,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 70,
									"end": 150,
									"name": "SWAP3",
									"source": 13
								},
								{
									"begin": 70,
									"end": 150,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 70,
									"end": 150,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 70,
									"end": 150,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 70,
									"end": 150,
									"name": "JUMP",
									"source": 13,
									"value": "[out]"
								},
								{
									"begin": 156,
									"end": 438,
									"name": "tag",
									"source": 13,
									"value": "3"
								},
								{
									"begin": 156,
									"end": 438,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 156,
									"end": 438,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 275,
									"end": 277,
									"name": "PUSH",
									"source": 13,
									"value": "20"
								},
								{
									"begin": 263,
									"end": 272,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 254,
									"end": 261,
									"name": "DUP5",
									"source": 13
								},
								{
									"begin": 250,
									"end": 273,
									"name": "SUB",
									"source": 13
								},
								{
									"begin": 246,
									"end": 278,
									"name": "SLT",
									"source": 13
								},
								{
									"begin": 243,
									"end": 245,
									"name": "ISZERO",
									"source": 13
								},
								{
									"begin": 243,
									"end": 245,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "13"
								},
								{
									"begin": 243,
									"end": 245,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": 291,
									"end": 292,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 288,
									"end": 289,
									"name": "DUP1",
									"source": 13
								},
								{
									"begin": 281,
									"end": 293,
									"name": "REVERT",
									"source": 13
								},
								{
									"begin": 243,
									"end": 245,
									"name": "tag",
									"source": 13,
									"value": "13"
								},
								{
									"begin": 243,
									"end": 245,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 333,
									"end": 334,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 357,
									"end": 421,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "14"
								},
								{
									"begin": 413,
									"end": 420,
									"name": "DUP5",
									"source": 13
								},
								{
									"begin": 404,
									"end": 410,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 393,
									"end": 402,
									"name": "DUP6",
									"source": 13
								},
								{
									"begin": 389,
									"end": 411,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 357,
									"end": 421,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "8"
								},
								{
									"begin": 357,
									"end": 421,
									"name": "JUMP",
									"source": 13,
									"value": "[in]"
								},
								{
									"begin": 357,
									"end": 421,
									"name": "tag",
									"source": 13,
									"value": "14"
								},
								{
									"begin": 357,
									"end": 421,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 347,
									"end": 421,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 347,
									"end": 421,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 305,
									"end": 431,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 233,
									"end": 438,
									"name": "SWAP3",
									"source": 13
								},
								{
									"begin": 233,
									"end": 438,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 233,
									"end": 438,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 233,
									"end": 438,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 233,
									"end": 438,
									"name": "JUMP",
									"source": 13,
									"value": "[out]"
								},
								{
									"begin": 444,
									"end": 540,
									"name": "tag",
									"source": 13,
									"value": "15"
								},
								{
									"begin": 444,
									"end": 540,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 444,
									"end": 540,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 510,
									"end": 534,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "17"
								},
								{
									"begin": 528,
									"end": 533,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 510,
									"end": 534,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "18"
								},
								{
									"begin": 510,
									"end": 534,
									"name": "JUMP",
									"source": 13,
									"value": "[in]"
								},
								{
									"begin": 510,
									"end": 534,
									"name": "tag",
									"source": 13,
									"value": "17"
								},
								{
									"begin": 510,
									"end": 534,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 499,
									"end": 534,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 499,
									"end": 534,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 489,
									"end": 540,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 489,
									"end": 540,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 489,
									"end": 540,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 489,
									"end": 540,
									"name": "JUMP",
									"source": 13,
									"value": "[out]"
								},
								{
									"begin": 546,
									"end": 672,
									"name": "tag",
									"source": 13,
									"value": "18"
								},
								{
									"begin": 546,
									"end": 672,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 546,
									"end": 672,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 623,
									"end": 665,
									"name": "PUSH",
									"source": 13,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 616,
									"end": 621,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 612,
									"end": 666,
									"name": "AND",
									"source": 13
								},
								{
									"begin": 601,
									"end": 666,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 601,
									"end": 666,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 591,
									"end": 672,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 591,
									"end": 672,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 591,
									"end": 672,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 591,
									"end": 672,
									"name": "JUMP",
									"source": 13,
									"value": "[out]"
								},
								{
									"begin": 678,
									"end": 800,
									"name": "tag",
									"source": 13,
									"value": "11"
								},
								{
									"begin": 678,
									"end": 800,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 751,
									"end": 775,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "21"
								},
								{
									"begin": 769,
									"end": 774,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 751,
									"end": 775,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "15"
								},
								{
									"begin": 751,
									"end": 775,
									"name": "JUMP",
									"source": 13,
									"value": "[in]"
								},
								{
									"begin": 751,
									"end": 775,
									"name": "tag",
									"source": 13,
									"value": "21"
								},
								{
									"begin": 751,
									"end": 775,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 744,
									"end": 749,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 741,
									"end": 776,
									"name": "EQ",
									"source": 13
								},
								{
									"begin": 731,
									"end": 733,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "22"
								},
								{
									"begin": 731,
									"end": 733,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": 790,
									"end": 791,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 787,
									"end": 788,
									"name": "DUP1",
									"source": 13
								},
								{
									"begin": 780,
									"end": 792,
									"name": "REVERT",
									"source": 13
								},
								{
									"begin": 731,
									"end": 733,
									"name": "tag",
									"source": 13,
									"value": "22"
								},
								{
									"begin": 731,
									"end": 733,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 721,
									"end": 800,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 721,
									"end": 800,
									"name": "JUMP",
									"source": 13,
									"value": "[out]"
								},
								{
									"begin": 449,
									"end": 8871,
									"name": "tag",
									"source": 7,
									"value": "6"
								},
								{
									"begin": 449,
									"end": 8871,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 449,
									"end": 8871,
									"name": "PUSH",
									"source": 7,
									"value": "80"
								},
								{
									"begin": 449,
									"end": 8871,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 449,
									"end": 8871,
									"name": "PUSH",
									"source": 7,
									"value": "60"
								},
								{
									"begin": 449,
									"end": 8871,
									"name": "SHR",
									"source": 7
								},
								{
									"begin": 449,
									"end": 8871,
									"name": "PUSH #[$]",
									"source": 7,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 449,
									"end": 8871,
									"name": "PUSH [$]",
									"source": 7,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 449,
									"end": 8871,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 449,
									"end": 8871,
									"name": "CODECOPY",
									"source": 7
								},
								{
									"begin": 449,
									"end": 8871,
									"name": "ASSIGNIMMUTABLE",
									"source": 7,
									"value": "1291"
								},
								{
									"begin": 449,
									"end": 8871,
									"name": "PUSH #[$]",
									"source": 7,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 449,
									"end": 8871,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 449,
									"end": 8871,
									"name": "RETURN",
									"source": 7
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220f8e26c54eb4ad9eb64aa27816e54e81760b86b9a85fe40d049a34279bfa24d9064736f6c63430007050033",
									".code": [
										{
											"begin": 449,
											"end": 8871,
											"name": "PUSH",
											"source": 7,
											"value": "80"
										},
										{
											"begin": 449,
											"end": 8871,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 449,
											"end": 8871,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 449,
											"end": 8871,
											"name": "CALLVALUE",
											"source": 7
										},
										{
											"begin": 449,
											"end": 8871,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 449,
											"end": 8871,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 449,
											"end": 8871,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 449,
											"end": 8871,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 449,
											"end": 8871,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 449,
											"end": 8871,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 449,
											"end": 8871,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 449,
											"end": 8871,
											"name": "tag",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 449,
											"end": 8871,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 449,
											"end": 8871,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 449,
											"end": 8871,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 449,
											"end": 8871,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 449,
											"end": 8871,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 449,
											"end": 8871,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 449,
											"end": 8871,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 449,
											"end": 8871,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 449,
											"end": 8871,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 449,
											"end": 8871,
											"name": "PUSH",
											"source": 7,
											"value": "E0"
										},
										{
											"begin": 449,
											"end": 8871,
											"name": "SHR",
											"source": 7
										},
										{
											"begin": 449,
											"end": 8871,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 449,
											"end": 8871,
											"name": "PUSH",
											"source": 7,
											"value": "AAF5EB68"
										},
										{
											"begin": 449,
											"end": 8871,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 449,
											"end": 8871,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "11"
										},
										{
											"begin": 449,
											"end": 8871,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 449,
											"end": 8871,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 449,
											"end": 8871,
											"name": "PUSH",
											"source": 7,
											"value": "AAF5EB68"
										},
										{
											"begin": 449,
											"end": 8871,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 449,
											"end": 8871,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "7"
										},
										{
											"begin": 449,
											"end": 8871,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 449,
											"end": 8871,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 449,
											"end": 8871,
											"name": "PUSH",
											"source": 7,
											"value": "CBCBB507"
										},
										{
											"begin": 449,
											"end": 8871,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 449,
											"end": 8871,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "8"
										},
										{
											"begin": 449,
											"end": 8871,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 449,
											"end": 8871,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 449,
											"end": 8871,
											"name": "PUSH",
											"source": 7,
											"value": "CC69AFEC"
										},
										{
											"begin": 449,
											"end": 8871,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 449,
											"end": 8871,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "9"
										},
										{
											"begin": 449,
											"end": 8871,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 449,
											"end": 8871,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 449,
											"end": 8871,
											"name": "PUSH",
											"source": 7,
											"value": "F11B8188"
										},
										{
											"begin": 449,
											"end": 8871,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 449,
											"end": 8871,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "10"
										},
										{
											"begin": 449,
											"end": 8871,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 449,
											"end": 8871,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 449,
											"end": 8871,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 449,
											"end": 8871,
											"name": "tag",
											"source": 7,
											"value": "11"
										},
										{
											"begin": 449,
											"end": 8871,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 449,
											"end": 8871,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 449,
											"end": 8871,
											"name": "PUSH",
											"source": 7,
											"value": "1652E7B7"
										},
										{
											"begin": 449,
											"end": 8871,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 449,
											"end": 8871,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "3"
										},
										{
											"begin": 449,
											"end": 8871,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 449,
											"end": 8871,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 449,
											"end": 8871,
											"name": "PUSH",
											"source": 7,
											"value": "3373EE4C"
										},
										{
											"begin": 449,
											"end": 8871,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 449,
											"end": 8871,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 449,
											"end": 8871,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 449,
											"end": 8871,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 449,
											"end": 8871,
											"name": "PUSH",
											"source": 7,
											"value": "39CCBDD3"
										},
										{
											"begin": 449,
											"end": 8871,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 449,
											"end": 8871,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "5"
										},
										{
											"begin": 449,
											"end": 8871,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 449,
											"end": 8871,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 449,
											"end": 8871,
											"name": "PUSH",
											"source": 7,
											"value": "919CD40F"
										},
										{
											"begin": 449,
											"end": 8871,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 449,
											"end": 8871,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "6"
										},
										{
											"begin": 449,
											"end": 8871,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 449,
											"end": 8871,
											"name": "tag",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 449,
											"end": 8871,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 449,
											"end": 8871,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 449,
											"end": 8871,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 449,
											"end": 8871,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 1893,
											"end": 2096,
											"name": "tag",
											"source": 7,
											"value": "3"
										},
										{
											"begin": 1893,
											"end": 2096,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1893,
											"end": 2096,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "12"
										},
										{
											"begin": 1893,
											"end": 2096,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 1893,
											"end": 2096,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1893,
											"end": 2096,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 1893,
											"end": 2096,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 1893,
											"end": 2096,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1893,
											"end": 2096,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1893,
											"end": 2096,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1893,
											"end": 2096,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "13"
										},
										{
											"begin": 1893,
											"end": 2096,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1893,
											"end": 2096,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1893,
											"end": 2096,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "14"
										},
										{
											"begin": 1893,
											"end": 2096,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 1893,
											"end": 2096,
											"name": "tag",
											"source": 7,
											"value": "13"
										},
										{
											"begin": 1893,
											"end": 2096,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1893,
											"end": 2096,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "15"
										},
										{
											"begin": 1893,
											"end": 2096,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 1893,
											"end": 2096,
											"name": "tag",
											"source": 7,
											"value": "12"
										},
										{
											"begin": 1893,
											"end": 2096,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1893,
											"end": 2096,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1893,
											"end": 2096,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1893,
											"end": 2096,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "16"
										},
										{
											"begin": 1893,
											"end": 2096,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 1893,
											"end": 2096,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 1893,
											"end": 2096,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1893,
											"end": 2096,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1893,
											"end": 2096,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "17"
										},
										{
											"begin": 1893,
											"end": 2096,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 1893,
											"end": 2096,
											"name": "tag",
											"source": 7,
											"value": "16"
										},
										{
											"begin": 1893,
											"end": 2096,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1893,
											"end": 2096,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1893,
											"end": 2096,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1893,
											"end": 2096,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1893,
											"end": 2096,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1893,
											"end": 2096,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 1893,
											"end": 2096,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1893,
											"end": 2096,
											"name": "RETURN",
											"source": 7
										},
										{
											"begin": 1701,
											"end": 1840,
											"name": "tag",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 1701,
											"end": 1840,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1701,
											"end": 1840,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "18"
										},
										{
											"begin": 1701,
											"end": 1840,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 1701,
											"end": 1840,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1701,
											"end": 1840,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 1701,
											"end": 1840,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 1701,
											"end": 1840,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1701,
											"end": 1840,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1701,
											"end": 1840,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1701,
											"end": 1840,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "19"
										},
										{
											"begin": 1701,
											"end": 1840,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1701,
											"end": 1840,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1701,
											"end": 1840,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1701,
											"end": 1840,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 1701,
											"end": 1840,
											"name": "tag",
											"source": 7,
											"value": "19"
										},
										{
											"begin": 1701,
											"end": 1840,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1701,
											"end": 1840,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "21"
										},
										{
											"begin": 1701,
											"end": 1840,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 1701,
											"end": 1840,
											"name": "tag",
											"source": 7,
											"value": "18"
										},
										{
											"begin": 1701,
											"end": 1840,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1701,
											"end": 1840,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1701,
											"end": 1840,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1701,
											"end": 1840,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "22"
										},
										{
											"begin": 1701,
											"end": 1840,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1701,
											"end": 1840,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1701,
											"end": 1840,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "23"
										},
										{
											"begin": 1701,
											"end": 1840,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 1701,
											"end": 1840,
											"name": "tag",
											"source": 7,
											"value": "22"
										},
										{
											"begin": 1701,
											"end": 1840,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1701,
											"end": 1840,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1701,
											"end": 1840,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1701,
											"end": 1840,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1701,
											"end": 1840,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1701,
											"end": 1840,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 1701,
											"end": 1840,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1701,
											"end": 1840,
											"name": "RETURN",
											"source": 7
										},
										{
											"begin": 1141,
											"end": 1330,
											"name": "tag",
											"source": 7,
											"value": "5"
										},
										{
											"begin": 1141,
											"end": 1330,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1141,
											"end": 1330,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 1141,
											"end": 1330,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 1141,
											"end": 1330,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1141,
											"end": 1330,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 1141,
											"end": 1330,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 1141,
											"end": 1330,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1141,
											"end": 1330,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1141,
											"end": 1330,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1141,
											"end": 1330,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "25"
										},
										{
											"begin": 1141,
											"end": 1330,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1141,
											"end": 1330,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1141,
											"end": 1330,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "26"
										},
										{
											"begin": 1141,
											"end": 1330,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 1141,
											"end": 1330,
											"name": "tag",
											"source": 7,
											"value": "25"
										},
										{
											"begin": 1141,
											"end": 1330,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1141,
											"end": 1330,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "27"
										},
										{
											"begin": 1141,
											"end": 1330,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 1141,
											"end": 1330,
											"name": "tag",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 1141,
											"end": 1330,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1141,
											"end": 1330,
											"name": "STOP",
											"source": 7
										},
										{
											"begin": 1543,
											"end": 1648,
											"name": "tag",
											"source": 7,
											"value": "6"
										},
										{
											"begin": 1543,
											"end": 1648,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1543,
											"end": 1648,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "28"
										},
										{
											"begin": 1543,
											"end": 1648,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "29"
										},
										{
											"begin": 1543,
											"end": 1648,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 1543,
											"end": 1648,
											"name": "tag",
											"source": 7,
											"value": "28"
										},
										{
											"begin": 1543,
											"end": 1648,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1543,
											"end": 1648,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1543,
											"end": 1648,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1543,
											"end": 1648,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "30"
										},
										{
											"begin": 1543,
											"end": 1648,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1543,
											"end": 1648,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1543,
											"end": 1648,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "23"
										},
										{
											"begin": 1543,
											"end": 1648,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 1543,
											"end": 1648,
											"name": "tag",
											"source": 7,
											"value": "30"
										},
										{
											"begin": 1543,
											"end": 1648,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1543,
											"end": 1648,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1543,
											"end": 1648,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1543,
											"end": 1648,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1543,
											"end": 1648,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1543,
											"end": 1648,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 1543,
											"end": 1648,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1543,
											"end": 1648,
											"name": "RETURN",
											"source": 7
										},
										{
											"begin": 749,
											"end": 785,
											"name": "tag",
											"source": 7,
											"value": "7"
										},
										{
											"begin": 749,
											"end": 785,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 749,
											"end": 785,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "31"
										},
										{
											"begin": 749,
											"end": 785,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "32"
										},
										{
											"begin": 749,
											"end": 785,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 749,
											"end": 785,
											"name": "tag",
											"source": 7,
											"value": "31"
										},
										{
											"begin": 749,
											"end": 785,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 749,
											"end": 785,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 749,
											"end": 785,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 749,
											"end": 785,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "33"
										},
										{
											"begin": 749,
											"end": 785,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 749,
											"end": 785,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 749,
											"end": 785,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "34"
										},
										{
											"begin": 749,
											"end": 785,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 749,
											"end": 785,
											"name": "tag",
											"source": 7,
											"value": "33"
										},
										{
											"begin": 749,
											"end": 785,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 749,
											"end": 785,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 749,
											"end": 785,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 749,
											"end": 785,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 749,
											"end": 785,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 749,
											"end": 785,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 749,
											"end": 785,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 749,
											"end": 785,
											"name": "RETURN",
											"source": 7
										},
										{
											"begin": 701,
											"end": 742,
											"name": "tag",
											"source": 7,
											"value": "8"
										},
										{
											"begin": 701,
											"end": 742,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 701,
											"end": 742,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "35"
										},
										{
											"begin": 701,
											"end": 742,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "36"
										},
										{
											"begin": 701,
											"end": 742,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 701,
											"end": 742,
											"name": "tag",
											"source": 7,
											"value": "35"
										},
										{
											"begin": 701,
											"end": 742,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 701,
											"end": 742,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 701,
											"end": 742,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 701,
											"end": 742,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "37"
										},
										{
											"begin": 701,
											"end": 742,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 701,
											"end": 742,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 701,
											"end": 742,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "38"
										},
										{
											"begin": 701,
											"end": 742,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 701,
											"end": 742,
											"name": "tag",
											"source": 7,
											"value": "37"
										},
										{
											"begin": 701,
											"end": 742,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 701,
											"end": 742,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 701,
											"end": 742,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 701,
											"end": 742,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 701,
											"end": 742,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 701,
											"end": 742,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 701,
											"end": 742,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 701,
											"end": 742,
											"name": "RETURN",
											"source": 7
										},
										{
											"begin": 1383,
											"end": 1490,
											"name": "tag",
											"source": 7,
											"value": "9"
										},
										{
											"begin": 1383,
											"end": 1490,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1383,
											"end": 1490,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "39"
										},
										{
											"begin": 1383,
											"end": 1490,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1383,
											"end": 1490,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 1383,
											"end": 1490,
											"name": "tag",
											"source": 7,
											"value": "39"
										},
										{
											"begin": 1383,
											"end": 1490,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1383,
											"end": 1490,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1383,
											"end": 1490,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1383,
											"end": 1490,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "41"
										},
										{
											"begin": 1383,
											"end": 1490,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1383,
											"end": 1490,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1383,
											"end": 1490,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "23"
										},
										{
											"begin": 1383,
											"end": 1490,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 1383,
											"end": 1490,
											"name": "tag",
											"source": 7,
											"value": "41"
										},
										{
											"begin": 1383,
											"end": 1490,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1383,
											"end": 1490,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1383,
											"end": 1490,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1383,
											"end": 1490,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1383,
											"end": 1490,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1383,
											"end": 1490,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 1383,
											"end": 1490,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1383,
											"end": 1490,
											"name": "RETURN",
											"source": 7
										},
										{
											"begin": 792,
											"end": 835,
											"name": "tag",
											"source": 7,
											"value": "10"
										},
										{
											"begin": 792,
											"end": 835,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 792,
											"end": 835,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "42"
										},
										{
											"begin": 792,
											"end": 835,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 792,
											"end": 835,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 792,
											"end": 835,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 792,
											"end": 835,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 792,
											"end": 835,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 792,
											"end": 835,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 792,
											"end": 835,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 792,
											"end": 835,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "43"
										},
										{
											"begin": 792,
											"end": 835,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 792,
											"end": 835,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 792,
											"end": 835,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "14"
										},
										{
											"begin": 792,
											"end": 835,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 792,
											"end": 835,
											"name": "tag",
											"source": 7,
											"value": "43"
										},
										{
											"begin": 792,
											"end": 835,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 792,
											"end": 835,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 792,
											"end": 835,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 792,
											"end": 835,
											"name": "tag",
											"source": 7,
											"value": "42"
										},
										{
											"begin": 792,
											"end": 835,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 792,
											"end": 835,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 792,
											"end": 835,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 792,
											"end": 835,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "45"
										},
										{
											"begin": 792,
											"end": 835,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 792,
											"end": 835,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 792,
											"end": 835,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 792,
											"end": 835,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 792,
											"end": 835,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "46"
										},
										{
											"begin": 792,
											"end": 835,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 792,
											"end": 835,
											"name": "tag",
											"source": 7,
											"value": "45"
										},
										{
											"begin": 792,
											"end": 835,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 792,
											"end": 835,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 792,
											"end": 835,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 792,
											"end": 835,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 792,
											"end": 835,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 792,
											"end": 835,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 792,
											"end": 835,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 792,
											"end": 835,
											"name": "RETURN",
											"source": 7
										},
										{
											"begin": 1893,
											"end": 2096,
											"name": "tag",
											"source": 7,
											"value": "15"
										},
										{
											"begin": 1893,
											"end": 2096,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1960,
											"end": 1967,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1969,
											"end": 1976,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1978,
											"end": 1985,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2002,
											"end": 2008,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2002,
											"end": 2015,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2009,
											"end": 2014,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 2002,
											"end": 2015,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2002,
											"end": 2015,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2002,
											"end": 2015,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2002,
											"end": 2015,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2002,
											"end": 2015,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2002,
											"end": 2015,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2002,
											"end": 2015,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2002,
											"end": 2015,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2002,
											"end": 2015,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2002,
											"end": 2015,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2002,
											"end": 2015,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2002,
											"end": 2015,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2002,
											"end": 2015,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2002,
											"end": 2015,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2002,
											"end": 2015,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 2002,
											"end": 2021,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2002,
											"end": 2021,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2002,
											"end": 2021,
											"name": "PUSH",
											"source": 7,
											"value": "D"
										},
										{
											"begin": 2002,
											"end": 2021,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2002,
											"end": 2021,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 2002,
											"end": 2021,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2002,
											"end": 2021,
											"name": "PUSH",
											"source": 7,
											"value": "100"
										},
										{
											"begin": 2002,
											"end": 2021,
											"name": "EXP",
											"source": 7
										},
										{
											"begin": 2002,
											"end": 2021,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2002,
											"end": 2021,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 2002,
											"end": 2021,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2002,
											"end": 2021,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2023,
											"end": 2029,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2023,
											"end": 2036,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2030,
											"end": 2035,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 2023,
											"end": 2036,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2023,
											"end": 2036,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2023,
											"end": 2036,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2023,
											"end": 2036,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2023,
											"end": 2036,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2023,
											"end": 2036,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2023,
											"end": 2036,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2023,
											"end": 2036,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2023,
											"end": 2036,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2023,
											"end": 2036,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2023,
											"end": 2036,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2023,
											"end": 2036,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2023,
											"end": 2036,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2023,
											"end": 2036,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2023,
											"end": 2036,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 2023,
											"end": 2054,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2023,
											"end": 2054,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2023,
											"end": 2054,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2023,
											"end": 2054,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2023,
											"end": 2054,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 2023,
											"end": 2054,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2023,
											"end": 2054,
											"name": "PUSH",
											"source": 7,
											"value": "100"
										},
										{
											"begin": 2023,
											"end": 2054,
											"name": "EXP",
											"source": 7
										},
										{
											"begin": 2023,
											"end": 2054,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2023,
											"end": 2054,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 2023,
											"end": 2054,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2023,
											"end": 2054,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2056,
											"end": 2062,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2056,
											"end": 2069,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2063,
											"end": 2068,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 2056,
											"end": 2069,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2056,
											"end": 2069,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2056,
											"end": 2069,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2056,
											"end": 2069,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2056,
											"end": 2069,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2056,
											"end": 2069,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2056,
											"end": 2069,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2056,
											"end": 2069,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2056,
											"end": 2069,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2056,
											"end": 2069,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2056,
											"end": 2069,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2056,
											"end": 2069,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2056,
											"end": 2069,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2056,
											"end": 2069,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2056,
											"end": 2069,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 2056,
											"end": 2089,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2056,
											"end": 2089,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2056,
											"end": 2089,
											"name": "PUSH",
											"source": 7,
											"value": "1A"
										},
										{
											"begin": 2056,
											"end": 2089,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2056,
											"end": 2089,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 2056,
											"end": 2089,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2056,
											"end": 2089,
											"name": "PUSH",
											"source": 7,
											"value": "100"
										},
										{
											"begin": 2056,
											"end": 2089,
											"name": "EXP",
											"source": 7
										},
										{
											"begin": 2056,
											"end": 2089,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2056,
											"end": 2089,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 2056,
											"end": 2089,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFF"
										},
										{
											"begin": 2056,
											"end": 2089,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1994,
											"end": 2090,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1994,
											"end": 2090,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1994,
											"end": 2090,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1994,
											"end": 2090,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 1994,
											"end": 2090,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1994,
											"end": 2090,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1994,
											"end": 2090,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1994,
											"end": 2090,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1994,
											"end": 2090,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1994,
											"end": 2090,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1994,
											"end": 2090,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1994,
											"end": 2090,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFF"
										},
										{
											"begin": 1994,
											"end": 2090,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1994,
											"end": 2090,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1994,
											"end": 2090,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1994,
											"end": 2090,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 1994,
											"end": 2090,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1994,
											"end": 2090,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 1994,
											"end": 2090,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1994,
											"end": 2090,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 1994,
											"end": 2090,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1893,
											"end": 2096,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1893,
											"end": 2096,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 1893,
											"end": 2096,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1893,
											"end": 2096,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 1893,
											"end": 2096,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1893,
											"end": 2096,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 1701,
											"end": 1840,
											"name": "tag",
											"source": 7,
											"value": "21"
										},
										{
											"begin": 1701,
											"end": 1840,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1786,
											"end": 1793,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1809,
											"end": 1815,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1809,
											"end": 1822,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1816,
											"end": 1821,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 1809,
											"end": 1822,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1809,
											"end": 1822,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1809,
											"end": 1822,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1809,
											"end": 1822,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1809,
											"end": 1822,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1809,
											"end": 1822,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1809,
											"end": 1822,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1809,
											"end": 1822,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1809,
											"end": 1822,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1809,
											"end": 1822,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1809,
											"end": 1822,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1809,
											"end": 1822,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1809,
											"end": 1822,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1809,
											"end": 1822,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1809,
											"end": 1822,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 1809,
											"end": 1828,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 1809,
											"end": 1828,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1809,
											"end": 1834,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1829,
											"end": 1833,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 1809,
											"end": 1834,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1809,
											"end": 1834,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1809,
											"end": 1834,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1809,
											"end": 1834,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1809,
											"end": 1834,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1809,
											"end": 1834,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1809,
											"end": 1834,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1809,
											"end": 1834,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1809,
											"end": 1834,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1809,
											"end": 1834,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1809,
											"end": 1834,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1809,
											"end": 1834,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1809,
											"end": 1834,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1809,
											"end": 1834,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1809,
											"end": 1834,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 1809,
											"end": 1834,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 1802,
											"end": 1834,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1802,
											"end": 1834,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1701,
											"end": 1840,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 1701,
											"end": 1840,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1701,
											"end": 1840,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1701,
											"end": 1840,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1701,
											"end": 1840,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 1141,
											"end": 1330,
											"name": "tag",
											"source": 7,
											"value": "27"
										},
										{
											"begin": 1141,
											"end": 1330,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 942,
											"end": 958,
											"name": "PUSHIMMUTABLE",
											"source": 7,
											"value": "1291"
										},
										{
											"begin": 928,
											"end": 958,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 928,
											"end": 958,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 928,
											"end": 938,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 928,
											"end": 958,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 928,
											"end": 958,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 928,
											"end": 958,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 920,
											"end": 984,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "50"
										},
										{
											"begin": 920,
											"end": 984,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 920,
											"end": 984,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 920,
											"end": 984,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 920,
											"end": 984,
											"name": "PUSH",
											"source": 7,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 920,
											"end": 984,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 920,
											"end": 984,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 920,
											"end": 984,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 920,
											"end": 984,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 920,
											"end": 984,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "51"
										},
										{
											"begin": 920,
											"end": 984,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 920,
											"end": 984,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "52"
										},
										{
											"begin": 920,
											"end": 984,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 920,
											"end": 984,
											"name": "tag",
											"source": 7,
											"value": "51"
										},
										{
											"begin": 920,
											"end": 984,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 920,
											"end": 984,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 920,
											"end": 984,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 920,
											"end": 984,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 920,
											"end": 984,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 920,
											"end": 984,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 920,
											"end": 984,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 920,
											"end": 984,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 920,
											"end": 984,
											"name": "tag",
											"source": 7,
											"value": "50"
										},
										{
											"begin": 920,
											"end": 984,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1258,
											"end": 1273,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1239,
											"end": 1255,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 1239,
											"end": 1273,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1239,
											"end": 1273,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1239,
											"end": 1273,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 1239,
											"end": 1273,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1285,
											"end": 1324,
											"name": "PUSH",
											"source": 7,
											"value": "1CC1849A6602C3E91F2088CADEA4381CC5717F2F28584197060ED2EBB434C16F"
										},
										{
											"begin": 1308,
											"end": 1323,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1285,
											"end": 1324,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1285,
											"end": 1324,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1285,
											"end": 1324,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "54"
										},
										{
											"begin": 1285,
											"end": 1324,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1285,
											"end": 1324,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1285,
											"end": 1324,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "23"
										},
										{
											"begin": 1285,
											"end": 1324,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 1285,
											"end": 1324,
											"name": "tag",
											"source": 7,
											"value": "54"
										},
										{
											"begin": 1285,
											"end": 1324,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1285,
											"end": 1324,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1285,
											"end": 1324,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1285,
											"end": 1324,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1285,
											"end": 1324,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1285,
											"end": 1324,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 1285,
											"end": 1324,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1285,
											"end": 1324,
											"name": "LOG1",
											"source": 7
										},
										{
											"begin": 1141,
											"end": 1330,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1141,
											"end": 1330,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 1543,
											"end": 1648,
											"name": "tag",
											"source": 7,
											"value": "29"
										},
										{
											"begin": 1543,
											"end": 1648,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1603,
											"end": 1610,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1626,
											"end": 1642,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 1626,
											"end": 1642,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 1619,
											"end": 1642,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1619,
											"end": 1642,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1543,
											"end": 1648,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1543,
											"end": 1648,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 749,
											"end": 785,
											"name": "tag",
											"source": 7,
											"value": "32"
										},
										{
											"begin": 749,
											"end": 785,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 783,
											"end": 785,
											"name": "PUSH",
											"source": 7,
											"value": "12"
										},
										{
											"begin": 749,
											"end": 785,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 749,
											"end": 785,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 701,
											"end": 742,
											"name": "tag",
											"source": 7,
											"value": "36"
										},
										{
											"begin": 701,
											"end": 742,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 701,
											"end": 742,
											"name": "PUSHIMMUTABLE",
											"source": 7,
											"value": "1291"
										},
										{
											"begin": 701,
											"end": 742,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 701,
											"end": 742,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 1383,
											"end": 1490,
											"name": "tag",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1383,
											"end": 1490,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1445,
											"end": 1452,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1468,
											"end": 1484,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 1468,
											"end": 1484,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 1461,
											"end": 1484,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1461,
											"end": 1484,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1383,
											"end": 1490,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1383,
											"end": 1490,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 792,
											"end": 835,
											"name": "tag",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 792,
											"end": 835,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 792,
											"end": 835,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 792,
											"end": 835,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 792,
											"end": 835,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 792,
											"end": 835,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 792,
											"end": 835,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 792,
											"end": 835,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 792,
											"end": 835,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 792,
											"end": 835,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 792,
											"end": 835,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 792,
											"end": 835,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 792,
											"end": 835,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 792,
											"end": 835,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 792,
											"end": 835,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 792,
											"end": 835,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 792,
											"end": 835,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 792,
											"end": 835,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 792,
											"end": 835,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 792,
											"end": 835,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 792,
											"end": 835,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 792,
											"end": 835,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 792,
											"end": 835,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 792,
											"end": 835,
											"name": "PUSH",
											"source": 7,
											"value": "100"
										},
										{
											"begin": 792,
											"end": 835,
											"name": "EXP",
											"source": 7
										},
										{
											"begin": 792,
											"end": 835,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 792,
											"end": 835,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 792,
											"end": 835,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 792,
											"end": 835,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 792,
											"end": 835,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 792,
											"end": 835,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 792,
											"end": 835,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 792,
											"end": 835,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 792,
											"end": 835,
											"name": "PUSH",
											"source": 7,
											"value": "D"
										},
										{
											"begin": 792,
											"end": 835,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 792,
											"end": 835,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 792,
											"end": 835,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 792,
											"end": 835,
											"name": "PUSH",
											"source": 7,
											"value": "100"
										},
										{
											"begin": 792,
											"end": 835,
											"name": "EXP",
											"source": 7
										},
										{
											"begin": 792,
											"end": 835,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 792,
											"end": 835,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 792,
											"end": 835,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 792,
											"end": 835,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 792,
											"end": 835,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 792,
											"end": 835,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 792,
											"end": 835,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 792,
											"end": 835,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 792,
											"end": 835,
											"name": "PUSH",
											"source": 7,
											"value": "1A"
										},
										{
											"begin": 792,
											"end": 835,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 792,
											"end": 835,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 792,
											"end": 835,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 792,
											"end": 835,
											"name": "PUSH",
											"source": 7,
											"value": "100"
										},
										{
											"begin": 792,
											"end": 835,
											"name": "EXP",
											"source": 7
										},
										{
											"begin": 792,
											"end": 835,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 792,
											"end": 835,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 792,
											"end": 835,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFF"
										},
										{
											"begin": 792,
											"end": 835,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 792,
											"end": 835,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 792,
											"end": 835,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 792,
											"end": 835,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 792,
											"end": 835,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 7,
											"end": 146,
											"name": "tag",
											"source": 13,
											"value": "58"
										},
										{
											"begin": 7,
											"end": 146,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7,
											"end": 146,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 91,
											"end": 97,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 78,
											"end": 98,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": 69,
											"end": 98,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 69,
											"end": 98,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 107,
											"end": 140,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "60"
										},
										{
											"begin": 134,
											"end": 139,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 107,
											"end": 140,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "61"
										},
										{
											"begin": 107,
											"end": 140,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 107,
											"end": 140,
											"name": "tag",
											"source": 13,
											"value": "60"
										},
										{
											"begin": 107,
											"end": 140,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 59,
											"end": 146,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 59,
											"end": 146,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 59,
											"end": 146,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 59,
											"end": 146,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 59,
											"end": 146,
											"name": "JUMP",
											"source": 13,
											"value": "[out]"
										},
										{
											"begin": 152,
											"end": 291,
											"name": "tag",
											"source": 13,
											"value": "62"
										},
										{
											"begin": 152,
											"end": 291,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 152,
											"end": 291,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 236,
											"end": 242,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 223,
											"end": 243,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": 214,
											"end": 243,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 214,
											"end": 243,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 252,
											"end": 285,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "64"
										},
										{
											"begin": 279,
											"end": 284,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 252,
											"end": 285,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "65"
										},
										{
											"begin": 252,
											"end": 285,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 252,
											"end": 285,
											"name": "tag",
											"source": 13,
											"value": "64"
										},
										{
											"begin": 252,
											"end": 285,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 204,
											"end": 291,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 204,
											"end": 291,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 204,
											"end": 291,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 204,
											"end": 291,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 204,
											"end": 291,
											"name": "JUMP",
											"source": 13,
											"value": "[out]"
										},
										{
											"begin": 297,
											"end": 557,
											"name": "tag",
											"source": 13,
											"value": "14"
										},
										{
											"begin": 297,
											"end": 557,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 297,
											"end": 557,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 405,
											"end": 407,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 393,
											"end": 402,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 384,
											"end": 391,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 380,
											"end": 403,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 376,
											"end": 408,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 373,
											"end": 375,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 373,
											"end": 375,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "67"
										},
										{
											"begin": 373,
											"end": 375,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 421,
											"end": 422,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 418,
											"end": 419,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 411,
											"end": 423,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 373,
											"end": 375,
											"name": "tag",
											"source": 13,
											"value": "67"
										},
										{
											"begin": 373,
											"end": 375,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 463,
											"end": 464,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 487,
											"end": 540,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "68"
										},
										{
											"begin": 532,
											"end": 539,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 523,
											"end": 529,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 512,
											"end": 521,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 508,
											"end": 530,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 487,
											"end": 540,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "58"
										},
										{
											"begin": 487,
											"end": 540,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 487,
											"end": 540,
											"name": "tag",
											"source": 13,
											"value": "68"
										},
										{
											"begin": 487,
											"end": 540,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 477,
											"end": 540,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 477,
											"end": 540,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 435,
											"end": 550,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 363,
											"end": 557,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 363,
											"end": 557,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 363,
											"end": 557,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 363,
											"end": 557,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 363,
											"end": 557,
											"name": "JUMP",
											"source": 13,
											"value": "[out]"
										},
										{
											"begin": 563,
											"end": 966,
											"name": "tag",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 563,
											"end": 966,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 563,
											"end": 966,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 563,
											"end": 966,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 688,
											"end": 690,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 676,
											"end": 685,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 667,
											"end": 674,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 663,
											"end": 686,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 659,
											"end": 691,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 656,
											"end": 658,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 656,
											"end": 658,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "70"
										},
										{
											"begin": 656,
											"end": 658,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 704,
											"end": 705,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 701,
											"end": 702,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 694,
											"end": 706,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 656,
											"end": 658,
											"name": "tag",
											"source": 13,
											"value": "70"
										},
										{
											"begin": 656,
											"end": 658,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 746,
											"end": 747,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 770,
											"end": 823,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "71"
										},
										{
											"begin": 815,
											"end": 822,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 806,
											"end": 812,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 795,
											"end": 804,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 791,
											"end": 813,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 770,
											"end": 823,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "58"
										},
										{
											"begin": 770,
											"end": 823,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 770,
											"end": 823,
											"name": "tag",
											"source": 13,
											"value": "71"
										},
										{
											"begin": 770,
											"end": 823,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 760,
											"end": 823,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 760,
											"end": 823,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 718,
											"end": 833,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 871,
											"end": 873,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 896,
											"end": 949,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "72"
										},
										{
											"begin": 941,
											"end": 948,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 932,
											"end": 938,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 921,
											"end": 930,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 917,
											"end": 939,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 896,
											"end": 949,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "58"
										},
										{
											"begin": 896,
											"end": 949,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 896,
											"end": 949,
											"name": "tag",
											"source": 13,
											"value": "72"
										},
										{
											"begin": 896,
											"end": 949,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 886,
											"end": 949,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 886,
											"end": 949,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 843,
											"end": 959,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 646,
											"end": 966,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 646,
											"end": 966,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 646,
											"end": 966,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 646,
											"end": 966,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 646,
											"end": 966,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 646,
											"end": 966,
											"name": "JUMP",
											"source": 13,
											"value": "[out]"
										},
										{
											"begin": 972,
											"end": 1232,
											"name": "tag",
											"source": 13,
											"value": "26"
										},
										{
											"begin": 972,
											"end": 1232,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 972,
											"end": 1232,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1080,
											"end": 1082,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 1068,
											"end": 1077,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 1059,
											"end": 1066,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 1055,
											"end": 1078,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 1051,
											"end": 1083,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 1048,
											"end": 1050,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 1048,
											"end": 1050,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "74"
										},
										{
											"begin": 1048,
											"end": 1050,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 1096,
											"end": 1097,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1093,
											"end": 1094,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1086,
											"end": 1098,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 1048,
											"end": 1050,
											"name": "tag",
											"source": 13,
											"value": "74"
										},
										{
											"begin": 1048,
											"end": 1050,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1138,
											"end": 1139,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1162,
											"end": 1215,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "75"
										},
										{
											"begin": 1207,
											"end": 1214,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 1198,
											"end": 1204,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 1187,
											"end": 1196,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 1183,
											"end": 1205,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1162,
											"end": 1215,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "62"
										},
										{
											"begin": 1162,
											"end": 1215,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 1162,
											"end": 1215,
											"name": "tag",
											"source": 13,
											"value": "75"
										},
										{
											"begin": 1162,
											"end": 1215,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1152,
											"end": 1215,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 1152,
											"end": 1215,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1110,
											"end": 1225,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1038,
											"end": 1232,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 1038,
											"end": 1232,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 1038,
											"end": 1232,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1038,
											"end": 1232,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1038,
											"end": 1232,
											"name": "JUMP",
											"source": 13,
											"value": "[out]"
										},
										{
											"begin": 1238,
											"end": 1356,
											"name": "tag",
											"source": 13,
											"value": "76"
										},
										{
											"begin": 1238,
											"end": 1356,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1325,
											"end": 1349,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "78"
										},
										{
											"begin": 1343,
											"end": 1348,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1325,
											"end": 1349,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "79"
										},
										{
											"begin": 1325,
											"end": 1349,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 1325,
											"end": 1349,
											"name": "tag",
											"source": 13,
											"value": "78"
										},
										{
											"begin": 1325,
											"end": 1349,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1320,
											"end": 1323,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 1313,
											"end": 1350,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 1303,
											"end": 1356,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1303,
											"end": 1356,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1303,
											"end": 1356,
											"name": "JUMP",
											"source": 13,
											"value": "[out]"
										},
										{
											"begin": 1362,
											"end": 1681,
											"name": "tag",
											"source": 13,
											"value": "80"
										},
										{
											"begin": 1362,
											"end": 1681,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1362,
											"end": 1681,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1525,
											"end": 1592,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "82"
										},
										{
											"begin": 1589,
											"end": 1591,
											"name": "PUSH",
											"source": 13,
											"value": "15"
										},
										{
											"begin": 1584,
											"end": 1587,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 1525,
											"end": 1592,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "83"
										},
										{
											"begin": 1525,
											"end": 1592,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 1525,
											"end": 1592,
											"name": "tag",
											"source": 13,
											"value": "82"
										},
										{
											"begin": 1525,
											"end": 1592,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1518,
											"end": 1592,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 1518,
											"end": 1592,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1622,
											"end": 1645,
											"name": "PUSH",
											"source": 13,
											"value": "4F4E4C595F454D495353494F4E5F4D414E414745520000000000000000000000"
										},
										{
											"begin": 1618,
											"end": 1619,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1613,
											"end": 1616,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 1609,
											"end": 1620,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1602,
											"end": 1646,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 1672,
											"end": 1674,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 1667,
											"end": 1670,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 1663,
											"end": 1675,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1656,
											"end": 1675,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1656,
											"end": 1675,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1508,
											"end": 1681,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 1508,
											"end": 1681,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1508,
											"end": 1681,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1508,
											"end": 1681,
											"name": "JUMP",
											"source": 13,
											"value": "[out]"
										},
										{
											"begin": 1687,
											"end": 1805,
											"name": "tag",
											"source": 13,
											"value": "84"
										},
										{
											"begin": 1687,
											"end": 1805,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1774,
											"end": 1798,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "86"
										},
										{
											"begin": 1792,
											"end": 1797,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1774,
											"end": 1798,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "87"
										},
										{
											"begin": 1774,
											"end": 1798,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 1774,
											"end": 1798,
											"name": "tag",
											"source": 13,
											"value": "86"
										},
										{
											"begin": 1774,
											"end": 1798,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1769,
											"end": 1772,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 1762,
											"end": 1799,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 1752,
											"end": 1805,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1752,
											"end": 1805,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1752,
											"end": 1805,
											"name": "JUMP",
											"source": 13,
											"value": "[out]"
										},
										{
											"begin": 1811,
											"end": 1929,
											"name": "tag",
											"source": 13,
											"value": "88"
										},
										{
											"begin": 1811,
											"end": 1929,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1898,
											"end": 1922,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "90"
										},
										{
											"begin": 1916,
											"end": 1921,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1898,
											"end": 1922,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "91"
										},
										{
											"begin": 1898,
											"end": 1922,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 1898,
											"end": 1922,
											"name": "tag",
											"source": 13,
											"value": "90"
										},
										{
											"begin": 1898,
											"end": 1922,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1893,
											"end": 1896,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 1886,
											"end": 1923,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 1876,
											"end": 1929,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1876,
											"end": 1929,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1876,
											"end": 1929,
											"name": "JUMP",
											"source": 13,
											"value": "[out]"
										},
										{
											"begin": 1935,
											"end": 2050,
											"name": "tag",
											"source": 13,
											"value": "92"
										},
										{
											"begin": 1935,
											"end": 2050,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2020,
											"end": 2043,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "94"
										},
										{
											"begin": 2037,
											"end": 2042,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 2020,
											"end": 2043,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "95"
										},
										{
											"begin": 2020,
											"end": 2043,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 2020,
											"end": 2043,
											"name": "tag",
											"source": 13,
											"value": "94"
										},
										{
											"begin": 2020,
											"end": 2043,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2015,
											"end": 2018,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 2008,
											"end": 2044,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 1998,
											"end": 2050,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1998,
											"end": 2050,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1998,
											"end": 2050,
											"name": "JUMP",
											"source": 13,
											"value": "[out]"
										},
										{
											"begin": 2056,
											"end": 2168,
											"name": "tag",
											"source": 13,
											"value": "96"
										},
										{
											"begin": 2056,
											"end": 2168,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2139,
											"end": 2161,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "98"
										},
										{
											"begin": 2155,
											"end": 2160,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 2139,
											"end": 2161,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "99"
										},
										{
											"begin": 2139,
											"end": 2161,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 2139,
											"end": 2161,
											"name": "tag",
											"source": 13,
											"value": "98"
										},
										{
											"begin": 2139,
											"end": 2161,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2134,
											"end": 2137,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 2127,
											"end": 2162,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 2117,
											"end": 2168,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2117,
											"end": 2168,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2117,
											"end": 2168,
											"name": "JUMP",
											"source": 13,
											"value": "[out]"
										},
										{
											"begin": 2174,
											"end": 2396,
											"name": "tag",
											"source": 13,
											"value": "38"
										},
										{
											"begin": 2174,
											"end": 2396,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2174,
											"end": 2396,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2305,
											"end": 2307,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 2294,
											"end": 2303,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 2290,
											"end": 2308,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 2282,
											"end": 2308,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2282,
											"end": 2308,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2318,
											"end": 2389,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "101"
										},
										{
											"begin": 2386,
											"end": 2387,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2375,
											"end": 2384,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 2371,
											"end": 2388,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 2362,
											"end": 2368,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 2318,
											"end": 2389,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "76"
										},
										{
											"begin": 2318,
											"end": 2389,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 2318,
											"end": 2389,
											"name": "tag",
											"source": 13,
											"value": "101"
										},
										{
											"begin": 2318,
											"end": 2389,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2272,
											"end": 2396,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 2272,
											"end": 2396,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 2272,
											"end": 2396,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2272,
											"end": 2396,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2272,
											"end": 2396,
											"name": "JUMP",
											"source": 13,
											"value": "[out]"
										},
										{
											"begin": 2402,
											"end": 2821,
											"name": "tag",
											"source": 13,
											"value": "52"
										},
										{
											"begin": 2402,
											"end": 2821,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2402,
											"end": 2821,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2606,
											"end": 2608,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 2595,
											"end": 2604,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 2591,
											"end": 2609,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 2583,
											"end": 2609,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2583,
											"end": 2609,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2655,
											"end": 2664,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 2649,
											"end": 2653,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 2645,
											"end": 2665,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 2641,
											"end": 2642,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2630,
											"end": 2639,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 2626,
											"end": 2643,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 2619,
											"end": 2666,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 2683,
											"end": 2814,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "103"
										},
										{
											"begin": 2809,
											"end": 2813,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 2683,
											"end": 2814,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "80"
										},
										{
											"begin": 2683,
											"end": 2814,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 2683,
											"end": 2814,
											"name": "tag",
											"source": 13,
											"value": "103"
										},
										{
											"begin": 2683,
											"end": 2814,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2675,
											"end": 2814,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2675,
											"end": 2814,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2573,
											"end": 2821,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 2573,
											"end": 2821,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2573,
											"end": 2821,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2573,
											"end": 2821,
											"name": "JUMP",
											"source": 13,
											"value": "[out]"
										},
										{
											"begin": 2827,
											"end": 3265,
											"name": "tag",
											"source": 13,
											"value": "46"
										},
										{
											"begin": 2827,
											"end": 3265,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2827,
											"end": 3265,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3012,
											"end": 3014,
											"name": "PUSH",
											"source": 13,
											"value": "60"
										},
										{
											"begin": 3001,
											"end": 3010,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 2997,
											"end": 3015,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 2989,
											"end": 3015,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2989,
											"end": 3015,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3025,
											"end": 3096,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "105"
										},
										{
											"begin": 3093,
											"end": 3094,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3082,
											"end": 3091,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 3078,
											"end": 3095,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 3069,
											"end": 3075,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 3025,
											"end": 3096,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "84"
										},
										{
											"begin": 3025,
											"end": 3096,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 3025,
											"end": 3096,
											"name": "tag",
											"source": 13,
											"value": "105"
										},
										{
											"begin": 3025,
											"end": 3096,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3106,
											"end": 3178,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "106"
										},
										{
											"begin": 3174,
											"end": 3176,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 3163,
											"end": 3172,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 3159,
											"end": 3177,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 3150,
											"end": 3156,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 3106,
											"end": 3178,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "84"
										},
										{
											"begin": 3106,
											"end": 3178,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 3106,
											"end": 3178,
											"name": "tag",
											"source": 13,
											"value": "106"
										},
										{
											"begin": 3106,
											"end": 3178,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3188,
											"end": 3258,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "107"
										},
										{
											"begin": 3254,
											"end": 3256,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 3243,
											"end": 3252,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 3239,
											"end": 3257,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 3230,
											"end": 3236,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 3188,
											"end": 3258,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "92"
										},
										{
											"begin": 3188,
											"end": 3258,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 3188,
											"end": 3258,
											"name": "tag",
											"source": 13,
											"value": "107"
										},
										{
											"begin": 3188,
											"end": 3258,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2979,
											"end": 3265,
											"name": "SWAP5",
											"source": 13
										},
										{
											"begin": 2979,
											"end": 3265,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 2979,
											"end": 3265,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2979,
											"end": 3265,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2979,
											"end": 3265,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2979,
											"end": 3265,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2979,
											"end": 3265,
											"name": "JUMP",
											"source": 13,
											"value": "[out]"
										},
										{
											"begin": 3271,
											"end": 3493,
											"name": "tag",
											"source": 13,
											"value": "23"
										},
										{
											"begin": 3271,
											"end": 3493,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3271,
											"end": 3493,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3402,
											"end": 3404,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 3391,
											"end": 3400,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 3387,
											"end": 3405,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 3379,
											"end": 3405,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3379,
											"end": 3405,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3415,
											"end": 3486,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "109"
										},
										{
											"begin": 3483,
											"end": 3484,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3472,
											"end": 3481,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 3468,
											"end": 3485,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 3459,
											"end": 3465,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 3415,
											"end": 3486,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "88"
										},
										{
											"begin": 3415,
											"end": 3486,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 3415,
											"end": 3486,
											"name": "tag",
											"source": 13,
											"value": "109"
										},
										{
											"begin": 3415,
											"end": 3486,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3369,
											"end": 3493,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 3369,
											"end": 3493,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 3369,
											"end": 3493,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3369,
											"end": 3493,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3369,
											"end": 3493,
											"name": "JUMP",
											"source": 13,
											"value": "[out]"
										},
										{
											"begin": 3499,
											"end": 3941,
											"name": "tag",
											"source": 13,
											"value": "17"
										},
										{
											"begin": 3499,
											"end": 3941,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3499,
											"end": 3941,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3686,
											"end": 3688,
											"name": "PUSH",
											"source": 13,
											"value": "60"
										},
										{
											"begin": 3675,
											"end": 3684,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 3671,
											"end": 3689,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 3663,
											"end": 3689,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3663,
											"end": 3689,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3699,
											"end": 3770,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "111"
										},
										{
											"begin": 3767,
											"end": 3768,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3756,
											"end": 3765,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 3752,
											"end": 3769,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 3743,
											"end": 3749,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 3699,
											"end": 3770,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "88"
										},
										{
											"begin": 3699,
											"end": 3770,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 3699,
											"end": 3770,
											"name": "tag",
											"source": 13,
											"value": "111"
										},
										{
											"begin": 3699,
											"end": 3770,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3780,
											"end": 3852,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "112"
										},
										{
											"begin": 3848,
											"end": 3850,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 3837,
											"end": 3846,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 3833,
											"end": 3851,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 3824,
											"end": 3830,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 3780,
											"end": 3852,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "88"
										},
										{
											"begin": 3780,
											"end": 3852,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 3780,
											"end": 3852,
											"name": "tag",
											"source": 13,
											"value": "112"
										},
										{
											"begin": 3780,
											"end": 3852,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3862,
											"end": 3934,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "113"
										},
										{
											"begin": 3930,
											"end": 3932,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 3919,
											"end": 3928,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 3915,
											"end": 3933,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 3906,
											"end": 3912,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 3862,
											"end": 3934,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "88"
										},
										{
											"begin": 3862,
											"end": 3934,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 3862,
											"end": 3934,
											"name": "tag",
											"source": 13,
											"value": "113"
										},
										{
											"begin": 3862,
											"end": 3934,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3653,
											"end": 3941,
											"name": "SWAP5",
											"source": 13
										},
										{
											"begin": 3653,
											"end": 3941,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 3653,
											"end": 3941,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3653,
											"end": 3941,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3653,
											"end": 3941,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3653,
											"end": 3941,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3653,
											"end": 3941,
											"name": "JUMP",
											"source": 13,
											"value": "[out]"
										},
										{
											"begin": 3947,
											"end": 4161,
											"name": "tag",
											"source": 13,
											"value": "34"
										},
										{
											"begin": 3947,
											"end": 4161,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3947,
											"end": 4161,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 4074,
											"end": 4076,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 4063,
											"end": 4072,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 4059,
											"end": 4077,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 4051,
											"end": 4077,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 4051,
											"end": 4077,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4087,
											"end": 4154,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "115"
										},
										{
											"begin": 4151,
											"end": 4152,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 4140,
											"end": 4149,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 4136,
											"end": 4153,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 4127,
											"end": 4133,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 4087,
											"end": 4154,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "96"
										},
										{
											"begin": 4087,
											"end": 4154,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 4087,
											"end": 4154,
											"name": "tag",
											"source": 13,
											"value": "115"
										},
										{
											"begin": 4087,
											"end": 4154,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4041,
											"end": 4161,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 4041,
											"end": 4161,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 4041,
											"end": 4161,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4041,
											"end": 4161,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4041,
											"end": 4161,
											"name": "JUMP",
											"source": 13,
											"value": "[out]"
										},
										{
											"begin": 4167,
											"end": 4336,
											"name": "tag",
											"source": 13,
											"value": "83"
										},
										{
											"begin": 4167,
											"end": 4336,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4167,
											"end": 4336,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 4285,
											"end": 4291,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 4280,
											"end": 4283,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 4273,
											"end": 4292,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 4325,
											"end": 4329,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 4320,
											"end": 4323,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 4316,
											"end": 4330,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 4301,
											"end": 4330,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 4301,
											"end": 4330,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4263,
											"end": 4336,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 4263,
											"end": 4336,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 4263,
											"end": 4336,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4263,
											"end": 4336,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4263,
											"end": 4336,
											"name": "JUMP",
											"source": 13,
											"value": "[out]"
										},
										{
											"begin": 4342,
											"end": 4438,
											"name": "tag",
											"source": 13,
											"value": "79"
										},
										{
											"begin": 4342,
											"end": 4438,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4342,
											"end": 4438,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 4408,
											"end": 4432,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "118"
										},
										{
											"begin": 4426,
											"end": 4431,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 4408,
											"end": 4432,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "119"
										},
										{
											"begin": 4408,
											"end": 4432,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 4408,
											"end": 4432,
											"name": "tag",
											"source": 13,
											"value": "118"
										},
										{
											"begin": 4408,
											"end": 4432,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4397,
											"end": 4432,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 4397,
											"end": 4432,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4387,
											"end": 4438,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 4387,
											"end": 4438,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 4387,
											"end": 4438,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4387,
											"end": 4438,
											"name": "JUMP",
											"source": 13,
											"value": "[out]"
										},
										{
											"begin": 4444,
											"end": 4556,
											"name": "tag",
											"source": 13,
											"value": "87"
										},
										{
											"begin": 4444,
											"end": 4556,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4444,
											"end": 4556,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 4521,
											"end": 4549,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4514,
											"end": 4519,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 4510,
											"end": 4550,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 4499,
											"end": 4550,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 4499,
											"end": 4550,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4489,
											"end": 4556,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 4489,
											"end": 4556,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 4489,
											"end": 4556,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4489,
											"end": 4556,
											"name": "JUMP",
											"source": 13,
											"value": "[out]"
										},
										{
											"begin": 4562,
											"end": 4688,
											"name": "tag",
											"source": 13,
											"value": "119"
										},
										{
											"begin": 4562,
											"end": 4688,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4562,
											"end": 4688,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 4639,
											"end": 4681,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4632,
											"end": 4637,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 4628,
											"end": 4682,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 4617,
											"end": 4682,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 4617,
											"end": 4682,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4607,
											"end": 4688,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 4607,
											"end": 4688,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 4607,
											"end": 4688,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4607,
											"end": 4688,
											"name": "JUMP",
											"source": 13,
											"value": "[out]"
										},
										{
											"begin": 4694,
											"end": 4771,
											"name": "tag",
											"source": 13,
											"value": "91"
										},
										{
											"begin": 4694,
											"end": 4771,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4694,
											"end": 4771,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 4760,
											"end": 4765,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 4749,
											"end": 4765,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 4749,
											"end": 4765,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4739,
											"end": 4771,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 4739,
											"end": 4771,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 4739,
											"end": 4771,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4739,
											"end": 4771,
											"name": "JUMP",
											"source": 13,
											"value": "[out]"
										},
										{
											"begin": 4777,
											"end": 4872,
											"name": "tag",
											"source": 13,
											"value": "95"
										},
										{
											"begin": 4777,
											"end": 4872,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4777,
											"end": 4872,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 4853,
											"end": 4865,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFF"
										},
										{
											"begin": 4846,
											"end": 4851,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 4842,
											"end": 4866,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 4831,
											"end": 4866,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 4831,
											"end": 4866,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4821,
											"end": 4872,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 4821,
											"end": 4872,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 4821,
											"end": 4872,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4821,
											"end": 4872,
											"name": "JUMP",
											"source": 13,
											"value": "[out]"
										},
										{
											"begin": 4878,
											"end": 4964,
											"name": "tag",
											"source": 13,
											"value": "99"
										},
										{
											"begin": 4878,
											"end": 4964,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4878,
											"end": 4964,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 4953,
											"end": 4957,
											"name": "PUSH",
											"source": 13,
											"value": "FF"
										},
										{
											"begin": 4946,
											"end": 4951,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 4942,
											"end": 4958,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 4931,
											"end": 4958,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 4931,
											"end": 4958,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4921,
											"end": 4964,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 4921,
											"end": 4964,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 4921,
											"end": 4964,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4921,
											"end": 4964,
											"name": "JUMP",
											"source": 13,
											"value": "[out]"
										},
										{
											"begin": 4970,
											"end": 5092,
											"name": "tag",
											"source": 13,
											"value": "61"
										},
										{
											"begin": 4970,
											"end": 5092,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5043,
											"end": 5067,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "126"
										},
										{
											"begin": 5061,
											"end": 5066,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 5043,
											"end": 5067,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "79"
										},
										{
											"begin": 5043,
											"end": 5067,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 5043,
											"end": 5067,
											"name": "tag",
											"source": 13,
											"value": "126"
										},
										{
											"begin": 5043,
											"end": 5067,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5036,
											"end": 5041,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 5033,
											"end": 5068,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 5023,
											"end": 5025,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "127"
										},
										{
											"begin": 5023,
											"end": 5025,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 5082,
											"end": 5083,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 5079,
											"end": 5080,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 5072,
											"end": 5084,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 5023,
											"end": 5025,
											"name": "tag",
											"source": 13,
											"value": "127"
										},
										{
											"begin": 5023,
											"end": 5025,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5013,
											"end": 5092,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5013,
											"end": 5092,
											"name": "JUMP",
											"source": 13,
											"value": "[out]"
										},
										{
											"begin": 5098,
											"end": 5220,
											"name": "tag",
											"source": 13,
											"value": "65"
										},
										{
											"begin": 5098,
											"end": 5220,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5171,
											"end": 5195,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "129"
										},
										{
											"begin": 5189,
											"end": 5194,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 5171,
											"end": 5195,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "91"
										},
										{
											"begin": 5171,
											"end": 5195,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 5171,
											"end": 5195,
											"name": "tag",
											"source": 13,
											"value": "129"
										},
										{
											"begin": 5171,
											"end": 5195,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5164,
											"end": 5169,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 5161,
											"end": 5196,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 5151,
											"end": 5153,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "130"
										},
										{
											"begin": 5151,
											"end": 5153,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 5210,
											"end": 5211,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 5207,
											"end": 5208,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 5200,
											"end": 5212,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 5151,
											"end": 5153,
											"name": "tag",
											"source": 13,
											"value": "130"
										},
										{
											"begin": 5151,
											"end": 5153,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5141,
											"end": 5220,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5141,
											"end": 5220,
											"name": "JUMP",
											"source": 13,
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"DISTRIBUTION_END()": "919cd40f",
							"EMISSION_MANAGER()": "cbcbb507",
							"PRECISION()": "aaf5eb68",
							"assets(address)": "f11b8188",
							"getAssetData(address)": "1652e7b7",
							"getDistributionEnd()": "cc69afec",
							"getUserAssetData(address,address)": "3373ee4c",
							"setDistributionEnd(uint256)": "39ccbdd3"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.7.5+commit.eb77ed08\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"emissionManager\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"emission\",\"type\":\"uint256\"}],\"name\":\"AssetConfigUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"AssetIndexUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newDistributionEnd\",\"type\":\"uint256\"}],\"name\":\"DistributionEndUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"UserIndexUpdated\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DISTRIBUTION_END\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"EMISSION_MANAGER\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"PRECISION\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"assets\",\"outputs\":[{\"internalType\":\"uint104\",\"name\":\"emissionPerSecond\",\"type\":\"uint104\"},{\"internalType\":\"uint104\",\"name\":\"index\",\"type\":\"uint104\"},{\"internalType\":\"uint40\",\"name\":\"lastUpdateTimestamp\",\"type\":\"uint40\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"}],\"name\":\"getAssetData\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getDistributionEnd\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"}],\"name\":\"getUserAssetData\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"distributionEnd\",\"type\":\"uint256\"}],\"name\":\"setDistributionEnd\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"Omnidex*\",\"kind\":\"dev\",\"methods\":{\"DISTRIBUTION_END()\":{\"details\":\"for backwards compatibility with the previous DistributionManager used\",\"returns\":{\"_0\":\"The end of the distribution*\"}},\"getAssetData(address)\":{\"details\":\"Returns the configuration of the distribution for a certain asset\",\"params\":{\"asset\":\"The address of the reference asset of the distribution\"},\"returns\":{\"_0\":\"The asset index, the emission per second and the last updated timestamp*\"}},\"getDistributionEnd()\":{\"details\":\"Gets the end date for the distribution\",\"returns\":{\"_0\":\"The end of the distribution*\"}},\"getUserAssetData(address,address)\":{\"details\":\"Returns the data of an user on a distribution\",\"params\":{\"asset\":\"The address of the reference asset of the distribution\",\"user\":\"Address of the user\"},\"returns\":{\"_0\":\"The new index*\"}},\"setDistributionEnd(uint256)\":{\"details\":\"Sets the end date for the distribution\",\"params\":{\"distributionEnd\":\"The end date timestamp*\"}}},\"title\":\"DistributionManager\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"Accounting contract to manage multiple staking distributions\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Omnidex-incentives/incentives/base/DistributionManager.sol\":\"DistributionManager\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/Omnidex-incentives/incentives/base/DistributionManager.sol\":{\"keccak256\":\"0x43b2afa8394898d61bde7ecac7d145cf194b5dfd953d2c9d7694645580a84723\",\"license\":\"agpl-3.0\",\"urls\":[\"bzz-raw://c468a996e248fa021a4886f2a8289426593a6ebe3a7269f4aa08a6af741c232f\",\"dweb:/ipfs/QmUe2xxKETrRMB32joUxdRtn6FVNMm7mVRyEFtftiCZcy1\"]},\"contracts/Omnidex-incentives/interfaces/IOmnidexDistributionManager.sol\":{\"keccak256\":\"0xabf5e1d31a3567f017adf41a4384f0c7a6fce4e81441a7b42fb565f92256a87d\",\"license\":\"agpl-3.0\",\"urls\":[\"bzz-raw://a2aab2cd0efc27da9ced088fcb5534b62c4ebd436688778af86949e706d22fef\",\"dweb:/ipfs/QmPAQiLYLB7QXMKaHjSwWKaK8mN8pgBRteJUqg5ptKebZE\"]},\"contracts/Omnidex-incentives/lib/DistributionTypes.sol\":{\"keccak256\":\"0xbb24d51b39ff627c1d2dbbaa5063ae7f1d515ec3980cc6ed8f5d171c17ef1d36\",\"license\":\"agpl-3.0\",\"urls\":[\"bzz-raw://30120d3556895da3f517a6ce8954e4419944f9e07b7b4cd3d596df3e8e8103e3\",\"dweb:/ipfs/QmTXPN7Q8ULdJnJVGVTwLbw7Rvy5h17DfabKf8szvprQNb\"]},\"contracts/Omnidex-incentives/lib/SafeMath.sol\":{\"keccak256\":\"0x23218dd12c40acbd9c7c6f799d20dd84c88e1262583e25465f1413ed8c5d67d5\",\"license\":\"agpl-3.0\",\"urls\":[\"bzz-raw://4896e02c7ad212eb804e1ad03a711f964e04eb9b7d6c0024a4cd26b29adc0a1a\",\"dweb:/ipfs/QmamjuX7iGUgpGCgnsPnUsfFMG751kBzrnB2gZFP1tkvxL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 1298,
								"contract": "contracts/Omnidex-incentives/incentives/base/DistributionManager.sol:DistributionManager",
								"label": "assets",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_struct(AssetData)1289_storage)"
							},
							{
								"astId": 1300,
								"contract": "contracts/Omnidex-incentives/incentives/base/DistributionManager.sol:DistributionManager",
								"label": "_distributionEnd",
								"offset": 0,
								"slot": "1",
								"type": "t_uint256"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_struct(AssetData)1289_storage)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => struct DistributionManager.AssetData)",
								"numberOfBytes": "32",
								"value": "t_struct(AssetData)1289_storage"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_struct(AssetData)1289_storage": {
								"encoding": "inplace",
								"label": "struct DistributionManager.AssetData",
								"members": [
									{
										"astId": 1280,
										"contract": "contracts/Omnidex-incentives/incentives/base/DistributionManager.sol:DistributionManager",
										"label": "emissionPerSecond",
										"offset": 0,
										"slot": "0",
										"type": "t_uint104"
									},
									{
										"astId": 1282,
										"contract": "contracts/Omnidex-incentives/incentives/base/DistributionManager.sol:DistributionManager",
										"label": "index",
										"offset": 13,
										"slot": "0",
										"type": "t_uint104"
									},
									{
										"astId": 1284,
										"contract": "contracts/Omnidex-incentives/incentives/base/DistributionManager.sol:DistributionManager",
										"label": "lastUpdateTimestamp",
										"offset": 26,
										"slot": "0",
										"type": "t_uint40"
									},
									{
										"astId": 1288,
										"contract": "contracts/Omnidex-incentives/incentives/base/DistributionManager.sol:DistributionManager",
										"label": "users",
										"offset": 0,
										"slot": "1",
										"type": "t_mapping(t_address,t_uint256)"
									}
								],
								"numberOfBytes": "64"
							},
							"t_uint104": {
								"encoding": "inplace",
								"label": "uint104",
								"numberOfBytes": "13"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							},
							"t_uint40": {
								"encoding": "inplace",
								"label": "uint40",
								"numberOfBytes": "5"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"notice": "Accounting contract to manage multiple staking distributions",
						"version": 1
					}
				}
			},
			"contracts/Omnidex-incentives/interfaces/IOmnidexDistributionManager.sol": {
				"IOmnidexDistributionManager": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "asset",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "emission",
									"type": "uint256"
								}
							],
							"name": "AssetConfigUpdated",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "asset",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "index",
									"type": "uint256"
								}
							],
							"name": "AssetIndexUpdated",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "newDistributionEnd",
									"type": "uint256"
								}
							],
							"name": "DistributionEndUpdated",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "asset",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "index",
									"type": "uint256"
								}
							],
							"name": "UserIndexUpdated",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "DISTRIBUTION_END",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "asset",
									"type": "address"
								}
							],
							"name": "getAssetData",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getDistributionEnd",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "asset",
									"type": "address"
								}
							],
							"name": "getUserAssetData",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "distributionEnd",
									"type": "uint256"
								}
							],
							"name": "setDistributionEnd",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"DISTRIBUTION_END()": {
								"details": "for backwards compatibility with the previous DistributionManager used",
								"returns": {
									"_0": "The end of the distribution*"
								}
							},
							"getAssetData(address)": {
								"details": "Returns the configuration of the distribution for a certain asset",
								"params": {
									"asset": "The address of the reference asset of the distribution"
								},
								"returns": {
									"_0": "The asset index, the emission per second and the last updated timestamp*"
								}
							},
							"getDistributionEnd()": {
								"details": "Gets the end date for the distribution",
								"returns": {
									"_0": "The end of the distribution*"
								}
							},
							"getUserAssetData(address,address)": {
								"details": "Returns the data of an user on a distribution",
								"params": {
									"asset": "The address of the reference asset of the distribution",
									"user": "Address of the user"
								},
								"returns": {
									"_0": "The new index*"
								}
							},
							"setDistributionEnd(uint256)": {
								"details": "Sets the end date for the distribution",
								"params": {
									"distributionEnd": "The end date timestamp*"
								}
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"DISTRIBUTION_END()": "919cd40f",
							"getAssetData(address)": "1652e7b7",
							"getDistributionEnd()": "cc69afec",
							"getUserAssetData(address,address)": "3373ee4c",
							"setDistributionEnd(uint256)": "39ccbdd3"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.7.5+commit.eb77ed08\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"emission\",\"type\":\"uint256\"}],\"name\":\"AssetConfigUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"AssetIndexUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newDistributionEnd\",\"type\":\"uint256\"}],\"name\":\"DistributionEndUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"UserIndexUpdated\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DISTRIBUTION_END\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"}],\"name\":\"getAssetData\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getDistributionEnd\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"}],\"name\":\"getUserAssetData\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"distributionEnd\",\"type\":\"uint256\"}],\"name\":\"setDistributionEnd\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"DISTRIBUTION_END()\":{\"details\":\"for backwards compatibility with the previous DistributionManager used\",\"returns\":{\"_0\":\"The end of the distribution*\"}},\"getAssetData(address)\":{\"details\":\"Returns the configuration of the distribution for a certain asset\",\"params\":{\"asset\":\"The address of the reference asset of the distribution\"},\"returns\":{\"_0\":\"The asset index, the emission per second and the last updated timestamp*\"}},\"getDistributionEnd()\":{\"details\":\"Gets the end date for the distribution\",\"returns\":{\"_0\":\"The end of the distribution*\"}},\"getUserAssetData(address,address)\":{\"details\":\"Returns the data of an user on a distribution\",\"params\":{\"asset\":\"The address of the reference asset of the distribution\",\"user\":\"Address of the user\"},\"returns\":{\"_0\":\"The new index*\"}},\"setDistributionEnd(uint256)\":{\"details\":\"Sets the end date for the distribution\",\"params\":{\"distributionEnd\":\"The end date timestamp*\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Omnidex-incentives/interfaces/IOmnidexDistributionManager.sol\":\"IOmnidexDistributionManager\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/Omnidex-incentives/interfaces/IOmnidexDistributionManager.sol\":{\"keccak256\":\"0xabf5e1d31a3567f017adf41a4384f0c7a6fce4e81441a7b42fb565f92256a87d\",\"license\":\"agpl-3.0\",\"urls\":[\"bzz-raw://a2aab2cd0efc27da9ced088fcb5534b62c4ebd436688778af86949e706d22fef\",\"dweb:/ipfs/QmPAQiLYLB7QXMKaHjSwWKaK8mN8pgBRteJUqg5ptKebZE\"]},\"contracts/Omnidex-incentives/lib/DistributionTypes.sol\":{\"keccak256\":\"0xbb24d51b39ff627c1d2dbbaa5063ae7f1d515ec3980cc6ed8f5d171c17ef1d36\",\"license\":\"agpl-3.0\",\"urls\":[\"bzz-raw://30120d3556895da3f517a6ce8954e4419944f9e07b7b4cd3d596df3e8e8103e3\",\"dweb:/ipfs/QmTXPN7Q8ULdJnJVGVTwLbw7Rvy5h17DfabKf8szvprQNb\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/Omnidex-incentives/interfaces/IOmnidexIncentivesController.sol": {
				"IOmnidexIncentivesController": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "asset",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "emission",
									"type": "uint256"
								}
							],
							"name": "AssetConfigUpdated",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "asset",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "index",
									"type": "uint256"
								}
							],
							"name": "AssetIndexUpdated",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "claimer",
									"type": "address"
								}
							],
							"name": "ClaimerSet",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "newDistributionEnd",
									"type": "uint256"
								}
							],
							"name": "DistributionEndUpdated",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "RewardsAccrued",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "claimer",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "RewardsClaimed",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "asset",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "index",
									"type": "uint256"
								}
							],
							"name": "UserIndexUpdated",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "DISTRIBUTION_END",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "REWARD_TOKEN",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address[]",
									"name": "assets",
									"type": "address[]"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								}
							],
							"name": "claimRewards",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address[]",
									"name": "assets",
									"type": "address[]"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								}
							],
							"name": "claimRewardsOnBehalf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address[]",
									"name": "assets",
									"type": "address[]"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "claimRewardsToSelf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address[]",
									"name": "assets",
									"type": "address[]"
								},
								{
									"internalType": "uint256[]",
									"name": "emissionsPerSecond",
									"type": "uint256[]"
								}
							],
							"name": "configureAssets",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "asset",
									"type": "address"
								}
							],
							"name": "getAssetData",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "user",
									"type": "address"
								}
							],
							"name": "getClaimer",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getDistributionEnd",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address[]",
									"name": "assets",
									"type": "address[]"
								},
								{
									"internalType": "address",
									"name": "user",
									"type": "address"
								}
							],
							"name": "getRewardsBalance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "asset",
									"type": "address"
								}
							],
							"name": "getUserAssetData",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "user",
									"type": "address"
								}
							],
							"name": "getUserUnclaimedRewards",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "asset",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "userBalance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "totalSupply",
									"type": "uint256"
								}
							],
							"name": "handleAction",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "claimer",
									"type": "address"
								}
							],
							"name": "setClaimer",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "distributionEnd",
									"type": "uint256"
								}
							],
							"name": "setDistributionEnd",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"DISTRIBUTION_END()": {
								"details": "for backwards compatibility with the previous DistributionManager used",
								"returns": {
									"_0": "The end of the distribution*"
								}
							},
							"REWARD_TOKEN()": {
								"details": "for backward compatibility with previous implementation of the Incentives controller"
							},
							"claimRewards(address[],uint256,address)": {
								"details": "Claims reward for an user to the desired address, on all the assets of the lending pool, accumulating the pending rewards",
								"params": {
									"amount": "Amount of rewards to claim",
									"to": "Address that will be receiving the rewards"
								},
								"returns": {
									"_0": "Rewards claimed*"
								}
							},
							"claimRewardsOnBehalf(address[],uint256,address,address)": {
								"details": "Claims reward for an user on behalf, on all the assets of the lending pool, accumulating the pending rewards. The caller must be whitelisted via \"allowClaimOnBehalf\" function by the RewardsAdmin role manager",
								"params": {
									"amount": "Amount of rewards to claim",
									"to": "Address that will be receiving the rewards",
									"user": "Address to check and claim rewards"
								},
								"returns": {
									"_0": "Rewards claimed*"
								}
							},
							"claimRewardsToSelf(address[],uint256)": {
								"details": "Claims reward for msg.sender, on all the assets of the lending pool, accumulating the pending rewards",
								"params": {
									"amount": "Amount of rewards to claim"
								},
								"returns": {
									"_0": "Rewards claimed*"
								}
							},
							"configureAssets(address[],uint256[])": {
								"details": "Configure assets for a certain rewards emission",
								"params": {
									"assets": "The assets to incentivize",
									"emissionsPerSecond": "The emission for each asset"
								}
							},
							"getAssetData(address)": {
								"details": "Returns the configuration of the distribution for a certain asset",
								"params": {
									"asset": "The address of the reference asset of the distribution"
								},
								"returns": {
									"_0": "The asset index, the emission per second and the last updated timestamp*"
								}
							},
							"getClaimer(address)": {
								"details": "Returns the whitelisted claimer for a certain address (0x0 if not set)",
								"params": {
									"user": "The address of the user"
								},
								"returns": {
									"_0": "The claimer address"
								}
							},
							"getDistributionEnd()": {
								"details": "Gets the end date for the distribution",
								"returns": {
									"_0": "The end of the distribution*"
								}
							},
							"getRewardsBalance(address[],address)": {
								"details": "Returns the total of rewards of an user, already accrued + not yet accrued",
								"params": {
									"user": "The address of the user"
								},
								"returns": {
									"_0": "The rewards*"
								}
							},
							"getUserAssetData(address,address)": {
								"details": "Returns the data of an user on a distribution",
								"params": {
									"asset": "The address of the reference asset of the distribution",
									"user": "Address of the user"
								},
								"returns": {
									"_0": "The new index*"
								}
							},
							"getUserUnclaimedRewards(address)": {
								"details": "returns the unclaimed rewards of the user",
								"params": {
									"user": "the address of the user"
								},
								"returns": {
									"_0": "the unclaimed user rewards"
								}
							},
							"handleAction(address,uint256,uint256)": {
								"details": "Called by the corresponding asset on any update that affects the rewards distribution",
								"params": {
									"asset": "The address of the user",
									"totalSupply": "The total supply of the asset in the lending pool*",
									"userBalance": "The balance of the user of the asset in the lending pool"
								}
							},
							"setClaimer(address,address)": {
								"details": "Whitelists an address to claim the rewards on behalf of another address",
								"params": {
									"claimer": "The address of the claimer",
									"user": "The address of the user"
								}
							},
							"setDistributionEnd(uint256)": {
								"details": "Sets the end date for the distribution",
								"params": {
									"distributionEnd": "The end date timestamp*"
								}
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"DISTRIBUTION_END()": "919cd40f",
							"REWARD_TOKEN()": "99248ea7",
							"claimRewards(address[],uint256,address)": "3111e7b3",
							"claimRewardsOnBehalf(address[],uint256,address,address)": "6d34b96e",
							"claimRewardsToSelf(address[],uint256)": "41485304",
							"configureAssets(address[],uint256[])": "79f171b2",
							"getAssetData(address)": "1652e7b7",
							"getClaimer(address)": "74d945ec",
							"getDistributionEnd()": "cc69afec",
							"getRewardsBalance(address[],address)": "8b599f26",
							"getUserAssetData(address,address)": "3373ee4c",
							"getUserUnclaimedRewards(address)": "198fa81e",
							"handleAction(address,uint256,uint256)": "31873e2e",
							"setClaimer(address,address)": "f5cf673b",
							"setDistributionEnd(uint256)": "39ccbdd3"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.7.5+commit.eb77ed08\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"emission\",\"type\":\"uint256\"}],\"name\":\"AssetConfigUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"AssetIndexUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"claimer\",\"type\":\"address\"}],\"name\":\"ClaimerSet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newDistributionEnd\",\"type\":\"uint256\"}],\"name\":\"DistributionEndUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"RewardsAccrued\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"claimer\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"RewardsClaimed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"UserIndexUpdated\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DISTRIBUTION_END\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"REWARD_TOKEN\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"assets\",\"type\":\"address[]\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"claimRewards\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"assets\",\"type\":\"address[]\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"claimRewardsOnBehalf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"assets\",\"type\":\"address[]\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"claimRewardsToSelf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"assets\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"emissionsPerSecond\",\"type\":\"uint256[]\"}],\"name\":\"configureAssets\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"}],\"name\":\"getAssetData\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"getClaimer\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getDistributionEnd\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"assets\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"getRewardsBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"}],\"name\":\"getUserAssetData\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"getUserUnclaimedRewards\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"userBalance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"totalSupply\",\"type\":\"uint256\"}],\"name\":\"handleAction\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"claimer\",\"type\":\"address\"}],\"name\":\"setClaimer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"distributionEnd\",\"type\":\"uint256\"}],\"name\":\"setDistributionEnd\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"DISTRIBUTION_END()\":{\"details\":\"for backwards compatibility with the previous DistributionManager used\",\"returns\":{\"_0\":\"The end of the distribution*\"}},\"REWARD_TOKEN()\":{\"details\":\"for backward compatibility with previous implementation of the Incentives controller\"},\"claimRewards(address[],uint256,address)\":{\"details\":\"Claims reward for an user to the desired address, on all the assets of the lending pool, accumulating the pending rewards\",\"params\":{\"amount\":\"Amount of rewards to claim\",\"to\":\"Address that will be receiving the rewards\"},\"returns\":{\"_0\":\"Rewards claimed*\"}},\"claimRewardsOnBehalf(address[],uint256,address,address)\":{\"details\":\"Claims reward for an user on behalf, on all the assets of the lending pool, accumulating the pending rewards. The caller must be whitelisted via \\\"allowClaimOnBehalf\\\" function by the RewardsAdmin role manager\",\"params\":{\"amount\":\"Amount of rewards to claim\",\"to\":\"Address that will be receiving the rewards\",\"user\":\"Address to check and claim rewards\"},\"returns\":{\"_0\":\"Rewards claimed*\"}},\"claimRewardsToSelf(address[],uint256)\":{\"details\":\"Claims reward for msg.sender, on all the assets of the lending pool, accumulating the pending rewards\",\"params\":{\"amount\":\"Amount of rewards to claim\"},\"returns\":{\"_0\":\"Rewards claimed*\"}},\"configureAssets(address[],uint256[])\":{\"details\":\"Configure assets for a certain rewards emission\",\"params\":{\"assets\":\"The assets to incentivize\",\"emissionsPerSecond\":\"The emission for each asset\"}},\"getAssetData(address)\":{\"details\":\"Returns the configuration of the distribution for a certain asset\",\"params\":{\"asset\":\"The address of the reference asset of the distribution\"},\"returns\":{\"_0\":\"The asset index, the emission per second and the last updated timestamp*\"}},\"getClaimer(address)\":{\"details\":\"Returns the whitelisted claimer for a certain address (0x0 if not set)\",\"params\":{\"user\":\"The address of the user\"},\"returns\":{\"_0\":\"The claimer address\"}},\"getDistributionEnd()\":{\"details\":\"Gets the end date for the distribution\",\"returns\":{\"_0\":\"The end of the distribution*\"}},\"getRewardsBalance(address[],address)\":{\"details\":\"Returns the total of rewards of an user, already accrued + not yet accrued\",\"params\":{\"user\":\"The address of the user\"},\"returns\":{\"_0\":\"The rewards*\"}},\"getUserAssetData(address,address)\":{\"details\":\"Returns the data of an user on a distribution\",\"params\":{\"asset\":\"The address of the reference asset of the distribution\",\"user\":\"Address of the user\"},\"returns\":{\"_0\":\"The new index*\"}},\"getUserUnclaimedRewards(address)\":{\"details\":\"returns the unclaimed rewards of the user\",\"params\":{\"user\":\"the address of the user\"},\"returns\":{\"_0\":\"the unclaimed user rewards\"}},\"handleAction(address,uint256,uint256)\":{\"details\":\"Called by the corresponding asset on any update that affects the rewards distribution\",\"params\":{\"asset\":\"The address of the user\",\"totalSupply\":\"The total supply of the asset in the lending pool*\",\"userBalance\":\"The balance of the user of the asset in the lending pool\"}},\"setClaimer(address,address)\":{\"details\":\"Whitelists an address to claim the rewards on behalf of another address\",\"params\":{\"claimer\":\"The address of the claimer\",\"user\":\"The address of the user\"}},\"setDistributionEnd(uint256)\":{\"details\":\"Sets the end date for the distribution\",\"params\":{\"distributionEnd\":\"The end date timestamp*\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Omnidex-incentives/interfaces/IOmnidexIncentivesController.sol\":\"IOmnidexIncentivesController\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/Omnidex-incentives/interfaces/IOmnidexDistributionManager.sol\":{\"keccak256\":\"0xabf5e1d31a3567f017adf41a4384f0c7a6fce4e81441a7b42fb565f92256a87d\",\"license\":\"agpl-3.0\",\"urls\":[\"bzz-raw://a2aab2cd0efc27da9ced088fcb5534b62c4ebd436688778af86949e706d22fef\",\"dweb:/ipfs/QmPAQiLYLB7QXMKaHjSwWKaK8mN8pgBRteJUqg5ptKebZE\"]},\"contracts/Omnidex-incentives/interfaces/IOmnidexIncentivesController.sol\":{\"keccak256\":\"0x8615452507c06e118914d5bdbd7136745f29030f2bd90fb80101eda042138d84\",\"license\":\"agpl-3.0\",\"urls\":[\"bzz-raw://632c6c2423e567411001205cb0838ed6ccd5a6d36b9f0e27e7262cc79a081e83\",\"dweb:/ipfs/QmSM9PrZzpBZ9Ae6tcDPWoUNztLNrtVpYTCb83bFNjJP4A\"]},\"contracts/Omnidex-incentives/lib/DistributionTypes.sol\":{\"keccak256\":\"0xbb24d51b39ff627c1d2dbbaa5063ae7f1d515ec3980cc6ed8f5d171c17ef1d36\",\"license\":\"agpl-3.0\",\"urls\":[\"bzz-raw://30120d3556895da3f517a6ce8954e4419944f9e07b7b4cd3d596df3e8e8103e3\",\"dweb:/ipfs/QmTXPN7Q8ULdJnJVGVTwLbw7Rvy5h17DfabKf8szvprQNb\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/Omnidex-incentives/interfaces/IScaledBalanceToken.sol": {
				"IScaledBalanceToken": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "user",
									"type": "address"
								}
							],
							"name": "getScaledUserBalanceAndSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "user",
									"type": "address"
								}
							],
							"name": "scaledBalanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "scaledTotalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"getScaledUserBalanceAndSupply(address)": {
								"details": "Returns the scaled balance of the user and the scaled total supply.",
								"params": {
									"user": "The address of the user"
								},
								"returns": {
									"_0": "The scaled balance of the user",
									"_1": "The scaled balance and the scaled total supply*"
								}
							},
							"scaledBalanceOf(address)": {
								"details": "Returns the scaled balance of the user. The scaled balance is the sum of all the updated stored balance divided by the reserve's liquidity index at the moment of the update",
								"params": {
									"user": "The user whose balance is calculated"
								},
								"returns": {
									"_0": "The scaled balance of the user*"
								}
							},
							"scaledTotalSupply()": {
								"details": "Returns the scaled total supply of the token. Represents sum(debt/index)",
								"returns": {
									"_0": "The scaled total supply*"
								}
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"getScaledUserBalanceAndSupply(address)": "0afbcdc9",
							"scaledBalanceOf(address)": "1da24f3e",
							"scaledTotalSupply()": "b1bf962d"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.7.5+commit.eb77ed08\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"getScaledUserBalanceAndSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"scaledBalanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"scaledTotalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"getScaledUserBalanceAndSupply(address)\":{\"details\":\"Returns the scaled balance of the user and the scaled total supply.\",\"params\":{\"user\":\"The address of the user\"},\"returns\":{\"_0\":\"The scaled balance of the user\",\"_1\":\"The scaled balance and the scaled total supply*\"}},\"scaledBalanceOf(address)\":{\"details\":\"Returns the scaled balance of the user. The scaled balance is the sum of all the updated stored balance divided by the reserve's liquidity index at the moment of the update\",\"params\":{\"user\":\"The user whose balance is calculated\"},\"returns\":{\"_0\":\"The scaled balance of the user*\"}},\"scaledTotalSupply()\":{\"details\":\"Returns the scaled total supply of the token. Represents sum(debt/index)\",\"returns\":{\"_0\":\"The scaled total supply*\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Omnidex-incentives/interfaces/IScaledBalanceToken.sol\":\"IScaledBalanceToken\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/Omnidex-incentives/interfaces/IScaledBalanceToken.sol\":{\"keccak256\":\"0x0c6f6980efd0a97e48040fe333c41e32403f8c2ec3629cbd9f714640cf18b213\",\"license\":\"agpl-3.0\",\"urls\":[\"bzz-raw://d5f7a3234e76841405077f4c4d4700d212bb9987328d5b6e8236cdd864c4caf7\",\"dweb:/ipfs/QmZFgW84wn6tZjb4VMW7ifSBWGW1BnPc75iWP3JzS3Ldnr\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/Omnidex-incentives/lib/DistributionTypes.sol": {
				"DistributionTypes": {
					"abi": [],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/Omnidex-incentives/lib/DistributionTypes.sol\":99:368  library DistributionTypes {\r... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  invalid\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/Omnidex-incentives/lib/DistributionTypes.sol\":99:368  library DistributionTypes {\r... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220f12b1887379d916ffcee02163659cd2c9bcb9d4154814d39b80ce3c32bbbd1ed64736f6c63430007050033\n}\n",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566023600b82828239805160001a607314601657fe5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220f12b1887379d916ffcee02163659cd2c9bcb9d4154814d39b80ce3c32bbbd1ed64736f6c63430007050033",
							"opcodes": "PUSH1 0x56 PUSH1 0x23 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x16 JUMPI INVALID JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CALL 0x2B XOR DUP8 CALLDATACOPY SWAP14 SWAP2 PUSH16 0xFCEE02163659CD2C9BCB9D4154814D39 0xB8 0xC 0xE3 0xC3 0x2B 0xBB 0xD1 0xED PUSH5 0x736F6C6343 STOP SMOD SDIV STOP CALLER ",
							"sourceMap": "99:269:11:-:0;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220f12b1887379d916ffcee02163659cd2c9bcb9d4154814d39b80ce3c32bbbd1ed64736f6c63430007050033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CALL 0x2B XOR DUP8 CALLDATACOPY SWAP14 SWAP2 PUSH16 0xFCEE02163659CD2C9BCB9D4154814D39 0xB8 0xC 0xE3 0xC3 0x2B 0xBB 0xD1 0xED PUSH5 0x736F6C6343 STOP SMOD SDIV STOP CALLER ",
							"sourceMap": "99:269:11:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 99,
									"end": 368,
									"name": "PUSH #[$]",
									"source": 11,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 99,
									"end": 368,
									"name": "PUSH [$]",
									"source": 11,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 99,
									"end": 368,
									"name": "PUSH",
									"source": 11,
									"value": "B"
								},
								{
									"begin": 99,
									"end": 368,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 99,
									"end": 368,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 99,
									"end": 368,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 99,
									"end": 368,
									"name": "CODECOPY",
									"source": 11
								},
								{
									"begin": 99,
									"end": 368,
									"name": "DUP1",
									"source": 11
								},
								{
									"begin": 99,
									"end": 368,
									"name": "MLOAD",
									"source": 11
								},
								{
									"begin": 99,
									"end": 368,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 99,
									"end": 368,
									"name": "BYTE",
									"source": 11
								},
								{
									"begin": 99,
									"end": 368,
									"name": "PUSH",
									"source": 11,
									"value": "73"
								},
								{
									"begin": 99,
									"end": 368,
									"name": "EQ",
									"source": 11
								},
								{
									"begin": 99,
									"end": 368,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "1"
								},
								{
									"begin": 99,
									"end": 368,
									"name": "JUMPI",
									"source": 11
								},
								{
									"begin": 99,
									"end": 368,
									"name": "INVALID",
									"source": 11
								},
								{
									"begin": 99,
									"end": 368,
									"name": "tag",
									"source": 11,
									"value": "1"
								},
								{
									"begin": 99,
									"end": 368,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 99,
									"end": 368,
									"name": "ADDRESS",
									"source": 11
								},
								{
									"begin": 99,
									"end": 368,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 99,
									"end": 368,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 99,
									"end": 368,
									"name": "PUSH",
									"source": 11,
									"value": "73"
								},
								{
									"begin": 99,
									"end": 368,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 99,
									"end": 368,
									"name": "MSTORE8",
									"source": 11
								},
								{
									"begin": 99,
									"end": 368,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 99,
									"end": 368,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 99,
									"end": 368,
									"name": "RETURN",
									"source": 11
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220f12b1887379d916ffcee02163659cd2c9bcb9d4154814d39b80ce3c32bbbd1ed64736f6c63430007050033",
									".code": [
										{
											"begin": 99,
											"end": 368,
											"name": "PUSHDEPLOYADDRESS",
											"source": 11
										},
										{
											"begin": 99,
											"end": 368,
											"name": "ADDRESS",
											"source": 11
										},
										{
											"begin": 99,
											"end": 368,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 99,
											"end": 368,
											"name": "PUSH",
											"source": 11,
											"value": "80"
										},
										{
											"begin": 99,
											"end": 368,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 99,
											"end": 368,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 99,
											"end": 368,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 99,
											"end": 368,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 99,
											"end": 368,
											"name": "REVERT",
											"source": 11
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.7.5+commit.eb77ed08\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Omnidex-incentives/lib/DistributionTypes.sol\":\"DistributionTypes\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/Omnidex-incentives/lib/DistributionTypes.sol\":{\"keccak256\":\"0xbb24d51b39ff627c1d2dbbaa5063ae7f1d515ec3980cc6ed8f5d171c17ef1d36\",\"license\":\"agpl-3.0\",\"urls\":[\"bzz-raw://30120d3556895da3f517a6ce8954e4419944f9e07b7b4cd3d596df3e8e8103e3\",\"dweb:/ipfs/QmTXPN7Q8ULdJnJVGVTwLbw7Rvy5h17DfabKf8szvprQNb\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/Omnidex-incentives/lib/SafeMath.sol": {
				"SafeMath": {
					"abi": [],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"title": "Optimized overflow and underflow safe math operations",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/Omnidex-incentives/lib/SafeMath.sol\":275:1339  library SafeMath {\r... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  invalid\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/Omnidex-incentives/lib/SafeMath.sol\":275:1339  library SafeMath {\r... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220b9796beb1a76f8440285a3dd20197ff5a929fc541cee2f77c09be0e5c1e7d37864736f6c63430007050033\n}\n",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566023600b82828239805160001a607314601657fe5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220b9796beb1a76f8440285a3dd20197ff5a929fc541cee2f77c09be0e5c1e7d37864736f6c63430007050033",
							"opcodes": "PUSH1 0x56 PUSH1 0x23 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x16 JUMPI INVALID JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB9 PUSH26 0x6BEB1A76F8440285A3DD20197FF5A929FC541CEE2F77C09BE0E5 0xC1 0xE7 0xD3 PUSH25 0x64736F6C634300070500330000000000000000000000000000 ",
							"sourceMap": "275:1064:12:-:0;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220b9796beb1a76f8440285a3dd20197ff5a929fc541cee2f77c09be0e5c1e7d37864736f6c63430007050033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB9 PUSH26 0x6BEB1A76F8440285A3DD20197FF5A929FC541CEE2F77C09BE0E5 0xC1 0xE7 0xD3 PUSH25 0x64736F6C634300070500330000000000000000000000000000 ",
							"sourceMap": "275:1064:12:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"add(uint256,uint256)": "infinite",
								"div(uint256,uint256)": "infinite",
								"mul(uint256,uint256)": "infinite",
								"sub(uint256,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 275,
									"end": 1339,
									"name": "PUSH #[$]",
									"source": 12,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 275,
									"end": 1339,
									"name": "PUSH [$]",
									"source": 12,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 275,
									"end": 1339,
									"name": "PUSH",
									"source": 12,
									"value": "B"
								},
								{
									"begin": 275,
									"end": 1339,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 275,
									"end": 1339,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 275,
									"end": 1339,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 275,
									"end": 1339,
									"name": "CODECOPY",
									"source": 12
								},
								{
									"begin": 275,
									"end": 1339,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 275,
									"end": 1339,
									"name": "MLOAD",
									"source": 12
								},
								{
									"begin": 275,
									"end": 1339,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 275,
									"end": 1339,
									"name": "BYTE",
									"source": 12
								},
								{
									"begin": 275,
									"end": 1339,
									"name": "PUSH",
									"source": 12,
									"value": "73"
								},
								{
									"begin": 275,
									"end": 1339,
									"name": "EQ",
									"source": 12
								},
								{
									"begin": 275,
									"end": 1339,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "1"
								},
								{
									"begin": 275,
									"end": 1339,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 275,
									"end": 1339,
									"name": "INVALID",
									"source": 12
								},
								{
									"begin": 275,
									"end": 1339,
									"name": "tag",
									"source": 12,
									"value": "1"
								},
								{
									"begin": 275,
									"end": 1339,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 275,
									"end": 1339,
									"name": "ADDRESS",
									"source": 12
								},
								{
									"begin": 275,
									"end": 1339,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 275,
									"end": 1339,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 275,
									"end": 1339,
									"name": "PUSH",
									"source": 12,
									"value": "73"
								},
								{
									"begin": 275,
									"end": 1339,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 275,
									"end": 1339,
									"name": "MSTORE8",
									"source": 12
								},
								{
									"begin": 275,
									"end": 1339,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 275,
									"end": 1339,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 275,
									"end": 1339,
									"name": "RETURN",
									"source": 12
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220b9796beb1a76f8440285a3dd20197ff5a929fc541cee2f77c09be0e5c1e7d37864736f6c63430007050033",
									".code": [
										{
											"begin": 275,
											"end": 1339,
											"name": "PUSHDEPLOYADDRESS",
											"source": 12
										},
										{
											"begin": 275,
											"end": 1339,
											"name": "ADDRESS",
											"source": 12
										},
										{
											"begin": 275,
											"end": 1339,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 275,
											"end": 1339,
											"name": "PUSH",
											"source": 12,
											"value": "80"
										},
										{
											"begin": 275,
											"end": 1339,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 275,
											"end": 1339,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 275,
											"end": 1339,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 275,
											"end": 1339,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 275,
											"end": 1339,
											"name": "REVERT",
											"source": 12
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.7.5+commit.eb77ed08\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"title\":\"Optimized overflow and underflow safe math operations\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"Contains methods for doing math operations that revert on overflow or underflow for minimal gas cost inspired by uniswap V3\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Omnidex-incentives/lib/SafeMath.sol\":\"SafeMath\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/Omnidex-incentives/lib/SafeMath.sol\":{\"keccak256\":\"0x23218dd12c40acbd9c7c6f799d20dd84c88e1262583e25465f1413ed8c5d67d5\",\"license\":\"agpl-3.0\",\"urls\":[\"bzz-raw://4896e02c7ad212eb804e1ad03a711f964e04eb9b7d6c0024a4cd26b29adc0a1a\",\"dweb:/ipfs/QmamjuX7iGUgpGCgnsPnUsfFMG751kBzrnB2gZFP1tkvxL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"notice": "Contains methods for doing math operations that revert on overflow or underflow for minimal gas cost inspired by uniswap V3",
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@aave/aave-stake/contracts/interfaces/IERC20.sol": {
				"ast": {
					"absolutePath": "@aave/aave-stake/contracts/interfaces/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							77
						]
					},
					"id": 78,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"0.7",
								".5"
							],
							"nodeType": "PragmaDirective",
							"src": "32:22:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 2,
								"nodeType": "StructuredDocumentation",
								"src": "56:133:0",
								"text": " @dev Interface of the ERC20 standard as defined in the EIP.\n From https://github.com/OpenZeppelin/openzeppelin-contracts"
							},
							"fullyImplemented": false,
							"id": 77,
							"linearizedBaseContracts": [
								77
							],
							"name": "IERC20",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 3,
										"nodeType": "StructuredDocumentation",
										"src": "211:62:0",
										"text": " @dev Returns the amount of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 8,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 4,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "296:2:0"
									},
									"returnParameters": {
										"id": 7,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 6,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 8,
												"src": "322:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 5,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "322:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "321:9:0"
									},
									"scope": 77,
									"src": "276:55:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 9,
										"nodeType": "StructuredDocumentation",
										"src": "335:68:0",
										"text": " @dev Returns the amount of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 16,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 11,
												"mutability": "mutable",
												"name": "account",
												"nodeType": "VariableDeclaration",
												"scope": 16,
												"src": "425:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 10,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "425:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "424:17:0"
									},
									"returnParameters": {
										"id": 15,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 14,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 16,
												"src": "465:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 13,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "465:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "464:9:0"
									},
									"scope": 77,
									"src": "406:68:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 17,
										"nodeType": "StructuredDocumentation",
										"src": "478:197:0",
										"text": " @dev Moves `amount` tokens from the caller's account to `recipient`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 26,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 22,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 19,
												"mutability": "mutable",
												"name": "recipient",
												"nodeType": "VariableDeclaration",
												"scope": 26,
												"src": "696:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 18,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "696:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 21,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 26,
												"src": "715:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 20,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "715:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "695:35:0"
									},
									"returnParameters": {
										"id": 25,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 24,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 26,
												"src": "749:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 23,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "749:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "748:6:0"
									},
									"scope": 77,
									"src": "678:77:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 27,
										"nodeType": "StructuredDocumentation",
										"src": "759:252:0",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 36,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 32,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 29,
												"mutability": "mutable",
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"scope": 36,
												"src": "1033:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 28,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1033:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 31,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 36,
												"src": "1048:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 30,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1048:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1032:32:0"
									},
									"returnParameters": {
										"id": 35,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 34,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 36,
												"src": "1088:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 33,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1088:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1087:9:0"
									},
									"scope": 77,
									"src": "1014:83:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 37,
										"nodeType": "StructuredDocumentation",
										"src": "1101:616:0",
										"text": " @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 46,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 42,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 39,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 46,
												"src": "1737:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 38,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1737:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 41,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 46,
												"src": "1754:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 40,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1754:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1736:33:0"
									},
									"returnParameters": {
										"id": 45,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 44,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 46,
												"src": "1788:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 43,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1788:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1787:6:0"
									},
									"scope": 77,
									"src": "1720:74:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 47,
										"nodeType": "StructuredDocumentation",
										"src": "1798:280:0",
										"text": " @dev Moves `amount` tokens from `sender` to `recipient` using the\n allowance mechanism. `amount` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 58,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 54,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 49,
												"mutability": "mutable",
												"name": "sender",
												"nodeType": "VariableDeclaration",
												"scope": 58,
												"src": "2108:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 48,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2108:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 51,
												"mutability": "mutable",
												"name": "recipient",
												"nodeType": "VariableDeclaration",
												"scope": 58,
												"src": "2128:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 50,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2128:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 53,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 58,
												"src": "2151:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 52,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2151:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2102:67:0"
									},
									"returnParameters": {
										"id": 57,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 56,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 58,
												"src": "2188:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 55,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2188:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2187:6:0"
									},
									"scope": 77,
									"src": "2081:113:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 59,
										"nodeType": "StructuredDocumentation",
										"src": "2198:148:0",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"id": 67,
									"name": "Transfer",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 66,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 61,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nodeType": "VariableDeclaration",
												"scope": 67,
												"src": "2364:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 60,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2364:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 63,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 67,
												"src": "2386:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 62,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2386:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 65,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 67,
												"src": "2406:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 64,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2406:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2363:57:0"
									},
									"src": "2349:72:0"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 68,
										"nodeType": "StructuredDocumentation",
										"src": "2425:142:0",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"id": 76,
									"name": "Approval",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 75,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 70,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "2585:21:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 69,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2585:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 72,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "2608:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 71,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2608:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 74,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "2633:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 73,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2633:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2584:63:0"
									},
									"src": "2570:78:0"
								}
							],
							"scope": 78,
							"src": "190:2460:0"
						}
					],
					"src": "32:2619:0"
				},
				"id": 0
			},
			"@aave/aave-stake/contracts/lib/Address.sol": {
				"ast": {
					"absolutePath": "@aave/aave-stake/contracts/lib/Address.sol",
					"exportedSymbols": {
						"Address": [
							141
						]
					},
					"id": 142,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 79,
							"literals": [
								"solidity",
								"0.7",
								".5"
							],
							"nodeType": "PragmaDirective",
							"src": "32:22:1"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 80,
								"nodeType": "StructuredDocumentation",
								"src": "56:130:1",
								"text": " @dev Collection of functions related to the address type\n From https://github.com/OpenZeppelin/openzeppelin-contracts"
							},
							"fullyImplemented": true,
							"id": 141,
							"linearizedBaseContracts": [
								141
							],
							"name": "Address",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 105,
										"nodeType": "Block",
										"src": "809:520:1",
										"statements": [
											{
												"assignments": [
													89
												],
												"declarations": [
													{
														"constant": false,
														"id": 89,
														"mutability": "mutable",
														"name": "codehash",
														"nodeType": "VariableDeclaration",
														"scope": 105,
														"src": "1045:16:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 88,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "1045:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 90,
												"nodeType": "VariableDeclarationStatement",
												"src": "1045:16:1"
											},
											{
												"assignments": [
													92
												],
												"declarations": [
													{
														"constant": false,
														"id": 92,
														"mutability": "mutable",
														"name": "accountHash",
														"nodeType": "VariableDeclaration",
														"scope": 105,
														"src": "1067:19:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 91,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "1067:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 94,
												"initialValue": {
													"hexValue": "307863356432343630313836663732333363393237653764623264636337303363306535303062363533636138323237336237626661643830343564383561343730",
													"id": 93,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "1089:66:1",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_89477152217924674838424037953991966239322087453347756267410168184682657981552_by_1",
														"typeString": "int_const 8947...(69 digits omitted)...1552"
													},
													"value": "0xc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1067:88:1"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "1222:46:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1230:32:1",
															"value": {
																"arguments": [
																	{
																		"name": "account",
																		"nodeType": "YulIdentifier",
																		"src": "1254:7:1"
																	}
																],
																"functionName": {
																	"name": "extcodehash",
																	"nodeType": "YulIdentifier",
																	"src": "1242:11:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1242:20:1"
															},
															"variableNames": [
																{
																	"name": "codehash",
																	"nodeType": "YulIdentifier",
																	"src": "1230:8:1"
																}
															]
														}
													]
												},
												"evmVersion": "istanbul",
												"externalReferences": [
													{
														"declaration": 83,
														"isOffset": false,
														"isSlot": false,
														"src": "1254:7:1",
														"valueSize": 1
													},
													{
														"declaration": 89,
														"isOffset": false,
														"isSlot": false,
														"src": "1230:8:1",
														"valueSize": 1
													}
												],
												"id": 95,
												"nodeType": "InlineAssembly",
												"src": "1213:55:1"
											},
											{
												"expression": {
													"components": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 102,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																},
																"id": 98,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 96,
																	"name": "codehash",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 89,
																	"src": "1281:8:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "!=",
																"rightExpression": {
																	"id": 97,
																	"name": "accountHash",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 92,
																	"src": "1293:11:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																"src": "1281:23:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&&",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																},
																"id": 101,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 99,
																	"name": "codehash",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 89,
																	"src": "1308:8:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "!=",
																"rightExpression": {
																	"hexValue": "307830",
																	"id": 100,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1320:3:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0x0"
																},
																"src": "1308:15:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "1281:42:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"id": 103,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "1280:44:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 87,
												"id": 104,
												"nodeType": "Return",
												"src": "1273:51:1"
											}
										]
									},
									"documentation": {
										"id": 81,
										"nodeType": "StructuredDocumentation",
										"src": "207:533:1",
										"text": " @dev Returns true if `account` is a contract.\n [IMPORTANT]\n ====\n It is unsafe to assume that an address for which this function returns\n false is an externally-owned account (EOA) and not a contract.\n Among others, `isContract` will return false for the following\n types of addresses:\n  - an externally-owned account\n  - a contract in construction\n  - an address where a contract will be created\n  - an address where a contract lived, but was destroyed\n ===="
									},
									"id": 106,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isContract",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 84,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 83,
												"mutability": "mutable",
												"name": "account",
												"nodeType": "VariableDeclaration",
												"scope": 106,
												"src": "763:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 82,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "763:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "762:17:1"
									},
									"returnParameters": {
										"id": 87,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 86,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 106,
												"src": "803:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 85,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "803:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "802:6:1"
									},
									"scope": 141,
									"src": "743:586:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 139,
										"nodeType": "Block",
										"src": "2283:300:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 121,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 117,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": -28,
																			"src": "2305:4:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Address_$141",
																				"typeString": "library Address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Address_$141",
																				"typeString": "library Address"
																			}
																		],
																		"id": 116,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2297:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 115,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "2297:7:1",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 118,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2297:13:1",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 119,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"src": "2297:21:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 120,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 111,
																"src": "2322:6:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2297:31:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20696e73756666696369656e742062616c616e6365",
															"id": 122,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2330:31:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9",
																"typeString": "literal_string \"Address: insufficient balance\""
															},
															"value": "Address: insufficient balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9",
																"typeString": "literal_string \"Address: insufficient balance\""
															}
														],
														"id": 114,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "2289:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 123,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2289:73:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 124,
												"nodeType": "ExpressionStatement",
												"src": "2289:73:1"
											},
											{
												"assignments": [
													126,
													null
												],
												"declarations": [
													{
														"constant": false,
														"id": 126,
														"mutability": "mutable",
														"name": "success",
														"nodeType": "VariableDeclaration",
														"scope": 139,
														"src": "2443:12:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 125,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "2443:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													null
												],
												"id": 133,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "",
															"id": 131,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2491:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"typeString": "literal_string \"\""
																}
															],
															"expression": {
																"id": 127,
																"name": "recipient",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 109,
																"src": "2461:9:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"id": 128,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "2461:14:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 130,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 129,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 111,
																"src": "2483:6:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "2461:29:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 132,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2461:33:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2442:52:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 135,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 126,
															"src": "2508:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20756e61626c6520746f2073656e642076616c75652c20726563697069656e74206d61792068617665207265766572746564",
															"id": 136,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2517:60:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae",
																"typeString": "literal_string \"Address: unable to send value, recipient may have reverted\""
															},
															"value": "Address: unable to send value, recipient may have reverted"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae",
																"typeString": "literal_string \"Address: unable to send value, recipient may have reverted\""
															}
														],
														"id": 134,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "2500:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 137,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2500:78:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 138,
												"nodeType": "ExpressionStatement",
												"src": "2500:78:1"
											}
										]
									},
									"documentation": {
										"id": 107,
										"nodeType": "StructuredDocumentation",
										"src": "1333:876:1",
										"text": " @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n `recipient`, forwarding all available gas and reverting on errors.\n https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n of certain opcodes, possibly making contracts go over the 2300 gas limit\n imposed by `transfer`, making them unable to receive funds via\n `transfer`. {sendValue} removes this limitation.\n https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n IMPORTANT: because control is transferred to `recipient`, care must be\n taken to not create reentrancy vulnerabilities. Consider using\n {ReentrancyGuard} or the\n https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern]."
									},
									"id": 140,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sendValue",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 112,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 109,
												"mutability": "mutable",
												"name": "recipient",
												"nodeType": "VariableDeclaration",
												"scope": 140,
												"src": "2231:25:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 108,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2231:15:1",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 111,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 140,
												"src": "2258:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 110,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2258:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2230:43:1"
									},
									"returnParameters": {
										"id": 113,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2283:0:1"
									},
									"scope": 141,
									"src": "2212:371:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 142,
							"src": "187:2398:1"
						}
					],
					"src": "32:2554:1"
				},
				"id": 1
			},
			"@aave/aave-stake/contracts/lib/SafeERC20.sol": {
				"ast": {
					"absolutePath": "@aave/aave-stake/contracts/lib/SafeERC20.sol",
					"exportedSymbols": {
						"Address": [
							141
						],
						"IERC20": [
							77
						],
						"SafeERC20": [
							298
						],
						"SafeMath": [
							494
						]
					},
					"id": 299,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 143,
							"literals": [
								"solidity",
								"0.7",
								".5"
							],
							"nodeType": "PragmaDirective",
							"src": "33:22:2"
						},
						{
							"absolutePath": "@aave/aave-stake/contracts/interfaces/IERC20.sol",
							"file": "../interfaces/IERC20.sol",
							"id": 145,
							"nodeType": "ImportDirective",
							"scope": 299,
							"sourceUnit": 78,
							"src": "57:48:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 144,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"src": "65:6:2",
										"typeDescriptions": {}
									}
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@aave/aave-stake/contracts/lib/SafeMath.sol",
							"file": "./SafeMath.sol",
							"id": 147,
							"nodeType": "ImportDirective",
							"scope": 299,
							"sourceUnit": 495,
							"src": "106:40:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 146,
										"name": "SafeMath",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"src": "114:8:2",
										"typeDescriptions": {}
									}
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@aave/aave-stake/contracts/lib/Address.sol",
							"file": "./Address.sol",
							"id": 149,
							"nodeType": "ImportDirective",
							"scope": 299,
							"sourceUnit": 142,
							"src": "147:38:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 148,
										"name": "Address",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"src": "155:7:2",
										"typeDescriptions": {}
									}
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 150,
								"nodeType": "StructuredDocumentation",
								"src": "187:520:2",
								"text": " @title SafeERC20\n @dev From https://github.com/OpenZeppelin/openzeppelin-contracts\n Wrappers around ERC20 operations that throw on failure (when the token\n contract returns false). Tokens that return no value (and instead revert or\n throw on failure) are also supported, non-reverting calls are assumed to be\n successful.\n To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\n which allows you to call the safe operations as `token.safeTransfer(...)`, etc."
							},
							"fullyImplemented": true,
							"id": 298,
							"linearizedBaseContracts": [
								298
							],
							"name": "SafeERC20",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"id": 153,
									"libraryName": {
										"id": 151,
										"name": "SafeMath",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 494,
										"src": "736:8:2",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_SafeMath_$494",
											"typeString": "library SafeMath"
										}
									},
									"nodeType": "UsingForDirective",
									"src": "730:27:2",
									"typeName": {
										"id": 152,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "749:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"id": 156,
									"libraryName": {
										"id": 154,
										"name": "Address",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 141,
										"src": "766:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_Address_$141",
											"typeString": "library Address"
										}
									},
									"nodeType": "UsingForDirective",
									"src": "760:26:2",
									"typeName": {
										"id": 155,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "778:7:2",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									}
								},
								{
									"body": {
										"id": 177,
										"nodeType": "Block",
										"src": "878:96:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 166,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 158,
															"src": "903:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$77",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"expression": {
																			"id": 169,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 158,
																			"src": "933:5:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$77",
																				"typeString": "contract IERC20"
																			}
																		},
																		"id": 170,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "transfer",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 26,
																		"src": "933:14:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function (address,uint256) external returns (bool)"
																		}
																	},
																	"id": 171,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"src": "933:23:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"id": 172,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 160,
																	"src": "958:2:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 173,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 162,
																	"src": "962:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 167,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": -1,
																	"src": "910:3:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 168,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"src": "910:22:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 174,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "910:58:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$77",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 165,
														"name": "callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 297,
														"src": "884:18:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$77_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 175,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "884:85:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 176,
												"nodeType": "ExpressionStatement",
												"src": "884:85:2"
											}
										]
									},
									"id": 178,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransfer",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 163,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 158,
												"mutability": "mutable",
												"name": "token",
												"nodeType": "VariableDeclaration",
												"scope": 178,
												"src": "817:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$77",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 157,
													"name": "IERC20",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 77,
													"src": "817:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$77",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 160,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 178,
												"src": "835:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 159,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "835:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 162,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 178,
												"src": "851:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 161,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "851:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "811:57:2"
									},
									"returnParameters": {
										"id": 164,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "878:0:2"
									},
									"scope": 298,
									"src": "790:184:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 202,
										"nodeType": "Block",
										"src": "1088:106:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 190,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 180,
															"src": "1113:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$77",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"expression": {
																			"id": 193,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 180,
																			"src": "1143:5:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$77",
																				"typeString": "contract IERC20"
																			}
																		},
																		"id": 194,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "transferFrom",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 58,
																		"src": "1143:18:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function (address,address,uint256) external returns (bool)"
																		}
																	},
																	"id": 195,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"src": "1143:27:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"id": 196,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 182,
																	"src": "1172:4:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 197,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 184,
																	"src": "1178:2:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 198,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 186,
																	"src": "1182:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 191,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": -1,
																	"src": "1120:3:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 192,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"src": "1120:22:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 199,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1120:68:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$77",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 189,
														"name": "callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 297,
														"src": "1094:18:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$77_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 200,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1094:95:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 201,
												"nodeType": "ExpressionStatement",
												"src": "1094:95:2"
											}
										]
									},
									"id": 203,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 187,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 180,
												"mutability": "mutable",
												"name": "token",
												"nodeType": "VariableDeclaration",
												"scope": 203,
												"src": "1009:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$77",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 179,
													"name": "IERC20",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 77,
													"src": "1009:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$77",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 182,
												"mutability": "mutable",
												"name": "from",
												"nodeType": "VariableDeclaration",
												"scope": 203,
												"src": "1027:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 181,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1027:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 184,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 203,
												"src": "1045:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 183,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1045:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 186,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 203,
												"src": "1061:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 185,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1061:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1003:75:2"
									},
									"returnParameters": {
										"id": 188,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1088:0:2"
									},
									"scope": 298,
									"src": "978:216:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 244,
										"nodeType": "Block",
										"src": "1290:253:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 228,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 215,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 213,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 209,
																			"src": "1312:5:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 214,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1321:1:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "1312:10:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"id": 216,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1311:12:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 226,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"id": 221,
																							"name": "this",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": -28,
																							"src": "1352:4:2",
																							"typeDescriptions": {
																								"typeIdentifier": "t_contract$_SafeERC20_$298",
																								"typeString": "library SafeERC20"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_contract$_SafeERC20_$298",
																								"typeString": "library SafeERC20"
																							}
																						],
																						"id": 220,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"nodeType": "ElementaryTypeNameExpression",
																						"src": "1344:7:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_address_$",
																							"typeString": "type(address)"
																						},
																						"typeName": {
																							"id": 219,
																							"name": "address",
																							"nodeType": "ElementaryTypeName",
																							"src": "1344:7:2",
																							"typeDescriptions": {}
																						}
																					},
																					"id": 222,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "typeConversion",
																					"lValueRequested": false,
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "1344:13:2",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 223,
																					"name": "spender",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 207,
																					"src": "1359:7:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				],
																				"expression": {
																					"id": 217,
																					"name": "token",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 205,
																					"src": "1328:5:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC20_$77",
																						"typeString": "contract IERC20"
																					}
																				},
																				"id": 218,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "allowance",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 36,
																				"src": "1328:15:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
																					"typeString": "function (address,address) view external returns (uint256)"
																				}
																			},
																			"id": 224,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "1328:39:2",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 225,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1371:1:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "1328:44:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"id": 227,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1327:46:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "1311:62:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5361666545524332303a20617070726f76652066726f6d206e6f6e2d7a65726f20746f206e6f6e2d7a65726f20616c6c6f77616e6365",
															"id": 229,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1381:56:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ef945ddb1bfdc0da870feb4560d868b047642b4ac7f2fb7f8b7c51cb4a411e25",
																"typeString": "literal_string \"SafeERC20: approve from non-zero to non-zero allowance\""
															},
															"value": "SafeERC20: approve from non-zero to non-zero allowance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ef945ddb1bfdc0da870feb4560d868b047642b4ac7f2fb7f8b7c51cb4a411e25",
																"typeString": "literal_string \"SafeERC20: approve from non-zero to non-zero allowance\""
															}
														],
														"id": 212,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "1296:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 230,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1296:147:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 231,
												"nodeType": "ExpressionStatement",
												"src": "1296:147:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 233,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 205,
															"src": "1468:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$77",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"expression": {
																			"id": 236,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 205,
																			"src": "1498:5:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$77",
																				"typeString": "contract IERC20"
																			}
																		},
																		"id": 237,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "approve",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 46,
																		"src": "1498:13:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function (address,uint256) external returns (bool)"
																		}
																	},
																	"id": 238,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"src": "1498:22:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"id": 239,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 207,
																	"src": "1522:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 240,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 209,
																	"src": "1531:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 234,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": -1,
																	"src": "1475:3:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 235,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"src": "1475:22:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 241,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1475:62:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$77",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 232,
														"name": "callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 297,
														"src": "1449:18:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$77_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 242,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1449:89:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 243,
												"nodeType": "ExpressionStatement",
												"src": "1449:89:2"
											}
										]
									},
									"id": 245,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeApprove",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 210,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 205,
												"mutability": "mutable",
												"name": "token",
												"nodeType": "VariableDeclaration",
												"scope": 245,
												"src": "1224:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$77",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 204,
													"name": "IERC20",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 77,
													"src": "1224:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$77",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 207,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 245,
												"src": "1242:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 206,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1242:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 209,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 245,
												"src": "1263:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 208,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1263:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1218:62:2"
									},
									"returnParameters": {
										"id": 211,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1290:0:2"
									},
									"scope": 298,
									"src": "1198:345:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 296,
										"nodeType": "Block",
										"src": "1616:486:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"expression": {
																	"arguments": [
																		{
																			"id": 255,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 247,
																			"src": "1638:5:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$77",
																				"typeString": "contract IERC20"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_IERC20_$77",
																				"typeString": "contract IERC20"
																			}
																		],
																		"id": 254,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "1630:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 253,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "1630:7:2",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 256,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1630:14:2",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 257,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "isContract",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 106,
																"src": "1630:25:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$bound_to$_t_address_$",
																	"typeString": "function (address) view returns (bool)"
																}
															},
															"id": 258,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1630:27:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5361666545524332303a2063616c6c20746f206e6f6e2d636f6e7472616374",
															"id": 259,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1659:33:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_f6ce7bfd656f35145dec774d6f7e67f4cba158373d2dd7a0f8273e232f86148d",
																"typeString": "literal_string \"SafeERC20: call to non-contract\""
															},
															"value": "SafeERC20: call to non-contract"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_f6ce7bfd656f35145dec774d6f7e67f4cba158373d2dd7a0f8273e232f86148d",
																"typeString": "literal_string \"SafeERC20: call to non-contract\""
															}
														],
														"id": 252,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "1622:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 260,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1622:71:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 261,
												"nodeType": "ExpressionStatement",
												"src": "1622:71:2"
											},
											{
												"assignments": [
													263,
													265
												],
												"declarations": [
													{
														"constant": false,
														"id": 263,
														"mutability": "mutable",
														"name": "success",
														"nodeType": "VariableDeclaration",
														"scope": 296,
														"src": "1756:12:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 262,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "1756:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 265,
														"mutability": "mutable",
														"name": "returndata",
														"nodeType": "VariableDeclaration",
														"scope": 296,
														"src": "1770:23:2",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 264,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "1770:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 273,
												"initialValue": {
													"arguments": [
														{
															"id": 271,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 249,
															"src": "1817:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 268,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 247,
																	"src": "1805:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$77",
																		"typeString": "contract IERC20"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IERC20_$77",
																		"typeString": "contract IERC20"
																	}
																],
																"id": 267,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1797:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 266,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1797:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 269,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1797:14:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 270,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "call",
														"nodeType": "MemberAccess",
														"src": "1797:19:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 272,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1797:25:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1755:67:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 275,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 263,
															"src": "1836:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564",
															"id": 276,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1845:34:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_47fb62c2c272651d2f0f342bac006756b8ba07f21cc5cb87e0fbb9d50c0c585b",
																"typeString": "literal_string \"SafeERC20: low-level call failed\""
															},
															"value": "SafeERC20: low-level call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_47fb62c2c272651d2f0f342bac006756b8ba07f21cc5cb87e0fbb9d50c0c585b",
																"typeString": "literal_string \"SafeERC20: low-level call failed\""
															}
														],
														"id": 274,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "1828:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 277,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1828:52:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 278,
												"nodeType": "ExpressionStatement",
												"src": "1828:52:2"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 282,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 279,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 265,
															"src": "1891:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 280,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "1891:17:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 281,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1911:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1891:21:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 295,
												"nodeType": "IfStatement",
												"src": "1887:211:2",
												"trueBody": {
													"id": 294,
													"nodeType": "Block",
													"src": "1914:184:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"id": 286,
																				"name": "returndata",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 265,
																				"src": "2025:10:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				}
																			},
																			{
																				"components": [
																					{
																						"id": 288,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"nodeType": "ElementaryTypeNameExpression",
																						"src": "2038:4:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_bool_$",
																							"typeString": "type(bool)"
																						},
																						"typeName": {
																							"id": 287,
																							"name": "bool",
																							"nodeType": "ElementaryTypeName",
																							"src": "2038:4:2",
																							"typeDescriptions": {}
																						}
																					}
																				],
																				"id": 289,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "TupleExpression",
																				"src": "2037:6:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_bool_$",
																					"typeString": "type(bool)"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				},
																				{
																					"typeIdentifier": "t_type$_t_bool_$",
																					"typeString": "type(bool)"
																				}
																			],
																			"expression": {
																				"id": 284,
																				"name": "abi",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": -1,
																				"src": "2014:3:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_abi",
																					"typeString": "abi"
																				}
																			},
																			"id": 285,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"memberName": "decode",
																			"nodeType": "MemberAccess",
																			"src": "2014:10:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
																				"typeString": "function () pure"
																			}
																		},
																		"id": 290,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2014:30:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"hexValue": "5361666545524332303a204552433230206f7065726174696f6e20646964206e6f742073756363656564",
																		"id": 291,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2046:44:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd",
																			"typeString": "literal_string \"SafeERC20: ERC20 operation did not succeed\""
																		},
																		"value": "SafeERC20: ERC20 operation did not succeed"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd",
																			"typeString": "literal_string \"SafeERC20: ERC20 operation did not succeed\""
																		}
																	],
																	"id": 283,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		-18,
																		-18
																	],
																	"referencedDeclaration": -18,
																	"src": "2006:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 292,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2006:85:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 293,
															"nodeType": "ExpressionStatement",
															"src": "2006:85:2"
														}
													]
												}
											}
										]
									},
									"id": 297,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "callOptionalReturn",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 250,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 247,
												"mutability": "mutable",
												"name": "token",
												"nodeType": "VariableDeclaration",
												"scope": 297,
												"src": "1575:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$77",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 246,
													"name": "IERC20",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 77,
													"src": "1575:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$77",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 249,
												"mutability": "mutable",
												"name": "data",
												"nodeType": "VariableDeclaration",
												"scope": 297,
												"src": "1589:17:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 248,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1589:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1574:33:2"
									},
									"returnParameters": {
										"id": 251,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1616:0:2"
									},
									"scope": 298,
									"src": "1547:555:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 299,
							"src": "708:1396:2"
						}
					],
					"src": "33:2072:2"
				},
				"id": 2
			},
			"@aave/aave-stake/contracts/lib/SafeMath.sol": {
				"ast": {
					"absolutePath": "@aave/aave-stake/contracts/lib/SafeMath.sol",
					"exportedSymbols": {
						"SafeMath": [
							494
						]
					},
					"id": 495,
					"license": "agpl-3.0",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 300,
							"literals": [
								"solidity",
								"0.7",
								".5"
							],
							"nodeType": "PragmaDirective",
							"src": "37:22:3"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 301,
								"nodeType": "StructuredDocumentation",
								"src": "61:626:3",
								"text": " @dev From https://github.com/OpenZeppelin/openzeppelin-contracts\n Wrappers over Solidity's arithmetic operations with added overflow\n checks.\n Arithmetic operations in Solidity wrap on overflow. This can easily result\n in bugs, because programmers usually assume that an overflow raises an\n error, which is the standard behavior in high level programming languages.\n `SafeMath` restores this intuition by reverting the transaction when an\n operation overflows.\n Using this library instead of the unchecked operations eliminates an entire\n class of bugs, so it's recommended to use it always."
							},
							"fullyImplemented": true,
							"id": 494,
							"linearizedBaseContracts": [
								494
							],
							"name": "SafeMath",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 326,
										"nodeType": "Block",
										"src": "980:95:3",
										"statements": [
											{
												"assignments": [
													312
												],
												"declarations": [
													{
														"constant": false,
														"id": 312,
														"mutability": "mutable",
														"name": "c",
														"nodeType": "VariableDeclaration",
														"scope": 326,
														"src": "986:9:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 311,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "986:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 316,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 315,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 313,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 304,
														"src": "998:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"id": 314,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 306,
														"src": "1002:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "998:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "986:17:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 320,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 318,
																"name": "c",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 312,
																"src": "1017:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 319,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 304,
																"src": "1022:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1017:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "536166654d6174683a206164646974696f6e206f766572666c6f77",
															"id": 321,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1025:29:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_30cc447bcc13b3e22b45cef0dd9b0b514842d836dd9b6eb384e20dedfb47723a",
																"typeString": "literal_string \"SafeMath: addition overflow\""
															},
															"value": "SafeMath: addition overflow"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_30cc447bcc13b3e22b45cef0dd9b0b514842d836dd9b6eb384e20dedfb47723a",
																"typeString": "literal_string \"SafeMath: addition overflow\""
															}
														],
														"id": 317,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "1009:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 322,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1009:46:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 323,
												"nodeType": "ExpressionStatement",
												"src": "1009:46:3"
											},
											{
												"expression": {
													"id": 324,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 312,
													"src": "1069:1:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 310,
												"id": 325,
												"nodeType": "Return",
												"src": "1062:8:3"
											}
										]
									},
									"documentation": {
										"id": 302,
										"nodeType": "StructuredDocumentation",
										"src": "709:201:3",
										"text": " @dev Returns the addition of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `+` operator.\n Requirements:\n - Addition cannot overflow."
									},
									"id": 327,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "add",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 307,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 304,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 327,
												"src": "926:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 303,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "926:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 306,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 327,
												"src": "937:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 305,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "937:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "925:22:3"
									},
									"returnParameters": {
										"id": 310,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 309,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 327,
												"src": "971:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 308,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "971:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "970:9:3"
									},
									"scope": 494,
									"src": "913:162:3",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 343,
										"nodeType": "Block",
										"src": "1386:61:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 338,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 330,
															"src": "1403:1:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 339,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 332,
															"src": "1406:1:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "536166654d6174683a207375627472616374696f6e206f766572666c6f77",
															"id": 340,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1409:32:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_50b058e9b5320e58880d88223c9801cd9eecdcf90323d5c2318bc1b6b916e862",
																"typeString": "literal_string \"SafeMath: subtraction overflow\""
															},
															"value": "SafeMath: subtraction overflow"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_50b058e9b5320e58880d88223c9801cd9eecdcf90323d5c2318bc1b6b916e862",
																"typeString": "literal_string \"SafeMath: subtraction overflow\""
															}
														],
														"id": 337,
														"name": "sub",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															344,
															372
														],
														"referencedDeclaration": 372,
														"src": "1399:3:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
														}
													},
													"id": 341,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1399:43:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 336,
												"id": 342,
												"nodeType": "Return",
												"src": "1392:50:3"
											}
										]
									},
									"documentation": {
										"id": 328,
										"nodeType": "StructuredDocumentation",
										"src": "1079:237:3",
										"text": " @dev Returns the subtraction of two unsigned integers, reverting on\n overflow (when the result is negative).\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."
									},
									"id": 344,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 333,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 330,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 344,
												"src": "1332:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 329,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1332:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 332,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 344,
												"src": "1343:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 331,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1343:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1331:22:3"
									},
									"returnParameters": {
										"id": 336,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 335,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 344,
												"src": "1377:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 334,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1377:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1376:9:3"
									},
									"scope": 494,
									"src": "1319:128:3",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 371,
										"nodeType": "Block",
										"src": "1822:78:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 359,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 357,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 349,
																"src": "1836:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"id": 358,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 347,
																"src": "1841:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1836:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 360,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 351,
															"src": "1844:12:3",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 356,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "1828:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 361,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1828:29:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 362,
												"nodeType": "ExpressionStatement",
												"src": "1828:29:3"
											},
											{
												"assignments": [
													364
												],
												"declarations": [
													{
														"constant": false,
														"id": 364,
														"mutability": "mutable",
														"name": "c",
														"nodeType": "VariableDeclaration",
														"scope": 371,
														"src": "1863:9:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 363,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1863:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 368,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 367,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 365,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 347,
														"src": "1875:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"id": 366,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 349,
														"src": "1879:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1875:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1863:17:3"
											},
											{
												"expression": {
													"id": 369,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 364,
													"src": "1894:1:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 355,
												"id": 370,
												"nodeType": "Return",
												"src": "1887:8:3"
											}
										]
									},
									"documentation": {
										"id": 345,
										"nodeType": "StructuredDocumentation",
										"src": "1451:257:3",
										"text": " @dev Returns the subtraction of two unsigned integers, reverting with custom message on\n overflow (when the result is negative).\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."
									},
									"id": 372,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 352,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 347,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 372,
												"src": "1729:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 346,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1729:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 349,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 372,
												"src": "1744:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 348,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1744:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 351,
												"mutability": "mutable",
												"name": "errorMessage",
												"nodeType": "VariableDeclaration",
												"scope": 372,
												"src": "1759:26:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 350,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1759:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1723:66:3"
									},
									"returnParameters": {
										"id": 355,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 354,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 372,
												"src": "1813:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 353,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1813:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1812:9:3"
									},
									"scope": 494,
									"src": "1711:189:3",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 406,
										"nodeType": "Block",
										"src": "2187:352:3",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 384,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 382,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 375,
														"src": "2403:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 383,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2408:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "2403:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 388,
												"nodeType": "IfStatement",
												"src": "2399:35:3",
												"trueBody": {
													"id": 387,
													"nodeType": "Block",
													"src": "2411:23:3",
													"statements": [
														{
															"expression": {
																"hexValue": "30",
																"id": 385,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2426:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"functionReturnParameters": 381,
															"id": 386,
															"nodeType": "Return",
															"src": "2419:8:3"
														}
													]
												}
											},
											{
												"assignments": [
													390
												],
												"declarations": [
													{
														"constant": false,
														"id": 390,
														"mutability": "mutable",
														"name": "c",
														"nodeType": "VariableDeclaration",
														"scope": 406,
														"src": "2440:9:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 389,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2440:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 394,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 393,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 391,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 375,
														"src": "2452:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"id": 392,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 377,
														"src": "2456:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2452:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2440:17:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 400,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 398,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 396,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 390,
																	"src": "2471:1:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"id": 397,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 375,
																	"src": "2475:1:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2471:5:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"id": 399,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 377,
																"src": "2480:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2471:10:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f77",
															"id": 401,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2483:35:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9113bb53c2876a3805b2c9242029423fc540a728243ce887ab24c82cf119fba3",
																"typeString": "literal_string \"SafeMath: multiplication overflow\""
															},
															"value": "SafeMath: multiplication overflow"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9113bb53c2876a3805b2c9242029423fc540a728243ce887ab24c82cf119fba3",
																"typeString": "literal_string \"SafeMath: multiplication overflow\""
															}
														],
														"id": 395,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "2463:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 402,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2463:56:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 403,
												"nodeType": "ExpressionStatement",
												"src": "2463:56:3"
											},
											{
												"expression": {
													"id": 404,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 390,
													"src": "2533:1:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 381,
												"id": 405,
												"nodeType": "Return",
												"src": "2526:8:3"
											}
										]
									},
									"documentation": {
										"id": 373,
										"nodeType": "StructuredDocumentation",
										"src": "1904:213:3",
										"text": " @dev Returns the multiplication of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `*` operator.\n Requirements:\n - Multiplication cannot overflow."
									},
									"id": 407,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mul",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 378,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 375,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 407,
												"src": "2133:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 374,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2133:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 377,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 407,
												"src": "2144:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 376,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2144:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2132:22:3"
									},
									"returnParameters": {
										"id": 381,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 380,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 407,
												"src": "2178:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 379,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2178:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2177:9:3"
									},
									"scope": 494,
									"src": "2120:419:3",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 423,
										"nodeType": "Block",
										"src": "3037:57:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 418,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 410,
															"src": "3054:1:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 419,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 412,
															"src": "3057:1:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "536166654d6174683a206469766973696f6e206279207a65726f",
															"id": 420,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3060:28:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_5b7cc70dda4dc2143e5adb63bd5d1f349504f461dbdfd9bc76fac1f8ca6d019f",
																"typeString": "literal_string \"SafeMath: division by zero\""
															},
															"value": "SafeMath: division by zero"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_5b7cc70dda4dc2143e5adb63bd5d1f349504f461dbdfd9bc76fac1f8ca6d019f",
																"typeString": "literal_string \"SafeMath: division by zero\""
															}
														],
														"id": 417,
														"name": "div",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															424,
															452
														],
														"referencedDeclaration": 452,
														"src": "3050:3:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
														}
													},
													"id": 421,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3050:39:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 416,
												"id": 422,
												"nodeType": "Return",
												"src": "3043:46:3"
											}
										]
									},
									"documentation": {
										"id": 408,
										"nodeType": "StructuredDocumentation",
										"src": "2543:424:3",
										"text": " @dev Returns the integer division of two unsigned integers. Reverts on\n division by zero. The result is rounded towards zero.\n Counterpart to Solidity's `/` operator. Note: this function uses a\n `revert` opcode (which leaves remaining gas untouched) while Solidity\n uses an invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 424,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 413,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 410,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 424,
												"src": "2983:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 409,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2983:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 412,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 424,
												"src": "2994:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 411,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2994:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2982:22:3"
									},
									"returnParameters": {
										"id": 416,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 415,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 424,
												"src": "3028:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 414,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3028:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3027:9:3"
									},
									"scope": 494,
									"src": "2970:124:3",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 451,
										"nodeType": "Block",
										"src": "3656:221:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 439,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 437,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 429,
																"src": "3732:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 438,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3736:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "3732:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 440,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 431,
															"src": "3739:12:3",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 436,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "3724:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 441,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3724:28:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 442,
												"nodeType": "ExpressionStatement",
												"src": "3724:28:3"
											},
											{
												"assignments": [
													444
												],
												"declarations": [
													{
														"constant": false,
														"id": 444,
														"mutability": "mutable",
														"name": "c",
														"nodeType": "VariableDeclaration",
														"scope": 451,
														"src": "3758:9:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 443,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3758:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 448,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 447,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 445,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 427,
														"src": "3770:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"id": 446,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 429,
														"src": "3774:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3770:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3758:17:3"
											},
											{
												"expression": {
													"id": 449,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 444,
													"src": "3871:1:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 435,
												"id": 450,
												"nodeType": "Return",
												"src": "3864:8:3"
											}
										]
									},
									"documentation": {
										"id": 425,
										"nodeType": "StructuredDocumentation",
										"src": "3098:444:3",
										"text": " @dev Returns the integer division of two unsigned integers. Reverts with custom message on\n division by zero. The result is rounded towards zero.\n Counterpart to Solidity's `/` operator. Note: this function uses a\n `revert` opcode (which leaves remaining gas untouched) while Solidity\n uses an invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 452,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 432,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 427,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 452,
												"src": "3563:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 426,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3563:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 429,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 452,
												"src": "3578:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 428,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3578:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 431,
												"mutability": "mutable",
												"name": "errorMessage",
												"nodeType": "VariableDeclaration",
												"scope": 452,
												"src": "3593:26:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 430,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3593:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3557:66:3"
									},
									"returnParameters": {
										"id": 435,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 434,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 452,
												"src": "3647:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 433,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3647:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3646:9:3"
									},
									"scope": 494,
									"src": "3545:332:3",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 468,
										"nodeType": "Block",
										"src": "4364:55:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 463,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 455,
															"src": "4381:1:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 464,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 457,
															"src": "4384:1:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "536166654d6174683a206d6f64756c6f206279207a65726f",
															"id": 465,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4387:26:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_726e51f7b81fce0a68f5f214f445e275313b20b1633f08ce954ee39abf8d7832",
																"typeString": "literal_string \"SafeMath: modulo by zero\""
															},
															"value": "SafeMath: modulo by zero"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_726e51f7b81fce0a68f5f214f445e275313b20b1633f08ce954ee39abf8d7832",
																"typeString": "literal_string \"SafeMath: modulo by zero\""
															}
														],
														"id": 462,
														"name": "mod",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															469,
															493
														],
														"referencedDeclaration": 493,
														"src": "4377:3:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
														}
													},
													"id": 466,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4377:37:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 461,
												"id": 467,
												"nodeType": "Return",
												"src": "4370:44:3"
											}
										]
									},
									"documentation": {
										"id": 453,
										"nodeType": "StructuredDocumentation",
										"src": "3881:413:3",
										"text": " @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n Reverts when dividing by zero.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 469,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 458,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 455,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 469,
												"src": "4310:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 454,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4310:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 457,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 469,
												"src": "4321:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 456,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4321:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4309:22:3"
									},
									"returnParameters": {
										"id": 461,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 460,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 469,
												"src": "4355:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 459,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4355:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4354:9:3"
									},
									"scope": 494,
									"src": "4297:122:3",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 492,
										"nodeType": "Block",
										"src": "4970:58:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 484,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 482,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 474,
																"src": "4984:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"hexValue": "30",
																"id": 483,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4989:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "4984:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 485,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 476,
															"src": "4992:12:3",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 481,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "4976:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 486,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4976:29:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 487,
												"nodeType": "ExpressionStatement",
												"src": "4976:29:3"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 490,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 488,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 472,
														"src": "5018:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "%",
													"rightExpression": {
														"id": 489,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 474,
														"src": "5022:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5018:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 480,
												"id": 491,
												"nodeType": "Return",
												"src": "5011:12:3"
											}
										]
									},
									"documentation": {
										"id": 470,
										"nodeType": "StructuredDocumentation",
										"src": "4423:433:3",
										"text": " @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n Reverts with custom message when dividing by zero.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 493,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 477,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 472,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 493,
												"src": "4877:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 471,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4877:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 474,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 493,
												"src": "4892:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 473,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4892:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 476,
												"mutability": "mutable",
												"name": "errorMessage",
												"nodeType": "VariableDeclaration",
												"scope": 493,
												"src": "4907:26:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 475,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "4907:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4871:66:3"
									},
									"returnParameters": {
										"id": 480,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 479,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 493,
												"src": "4961:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 478,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4961:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4960:9:3"
									},
									"scope": 494,
									"src": "4859:169:3",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 495,
							"src": "688:4342:3"
						}
					],
					"src": "37:4994:3"
				},
				"id": 3
			},
			"@aave/aave-stake/contracts/utils/VersionedInitializable.sol": {
				"ast": {
					"absolutePath": "@aave/aave-stake/contracts/utils/VersionedInitializable.sol",
					"exportedSymbols": {
						"VersionedInitializable": [
							533
						]
					},
					"id": 534,
					"license": "agpl-3.0",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 496,
							"literals": [
								"solidity",
								"0.7",
								".5"
							],
							"nodeType": "PragmaDirective",
							"src": "37:22:4"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 497,
								"nodeType": "StructuredDocumentation",
								"src": "61:702:4",
								"text": " @title VersionedInitializable\n @dev Helper contract to support initializer functions. To use it, replace\n the constructor with a function that has the `initializer` modifier.\n WARNING: Unlike constructors, initializer functions must be manually\n invoked. This applies both to deploying an Initializable contract, as well\n as extending an Initializable contract via inheritance.\n WARNING: When used with inheritance, manual care must be taken to not invoke\n a parent initializer twice, or ensure that all initializers are idempotent,\n because this is not dealt with automatically as with constructors.\n @author Aave, inspired by the OpenZeppelin Initializable contract"
							},
							"fullyImplemented": false,
							"id": 533,
							"linearizedBaseContracts": [
								533
							],
							"name": "VersionedInitializable",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"documentation": {
										"id": 498,
										"nodeType": "StructuredDocumentation",
										"src": "809:69:4",
										"text": " @dev Indicates that the contract has been initialized."
									},
									"id": 501,
									"mutability": "mutable",
									"name": "lastInitializedRevision",
									"nodeType": "VariableDeclaration",
									"scope": 533,
									"src": "881:44:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 499,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "881:7:4",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "30",
										"id": 500,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "924:1:4",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_0_by_1",
											"typeString": "int_const 0"
										},
										"value": "0"
									},
									"visibility": "internal"
								},
								{
									"body": {
										"id": 521,
										"nodeType": "Block",
										"src": "1034:191:4",
										"statements": [
											{
												"assignments": [
													505
												],
												"declarations": [
													{
														"constant": false,
														"id": 505,
														"mutability": "mutable",
														"name": "revision",
														"nodeType": "VariableDeclaration",
														"scope": 521,
														"src": "1040:16:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 504,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1040:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 508,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 506,
														"name": "getRevision",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 528,
														"src": "1059:11:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$__$returns$_t_uint256_$",
															"typeString": "function () pure returns (uint256)"
														}
													},
													"id": 507,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1059:13:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1040:32:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 512,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 510,
																"name": "revision",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 505,
																"src": "1086:8:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"id": 511,
																"name": "lastInitializedRevision",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 501,
																"src": "1097:23:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1086:34:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "436f6e747261637420696e7374616e63652068617320616c7265616479206265656e20696e697469616c697a6564",
															"id": 513,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1122:48:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9fbba6c4dcac9134893b633b9564f36435b3f927c1d5fa152c5c14b20cecb1a4",
																"typeString": "literal_string \"Contract instance has already been initialized\""
															},
															"value": "Contract instance has already been initialized"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9fbba6c4dcac9134893b633b9564f36435b3f927c1d5fa152c5c14b20cecb1a4",
																"typeString": "literal_string \"Contract instance has already been initialized\""
															}
														],
														"id": 509,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "1078:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 514,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1078:93:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 515,
												"nodeType": "ExpressionStatement",
												"src": "1078:93:4"
											},
											{
												"expression": {
													"id": 518,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 516,
														"name": "lastInitializedRevision",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 501,
														"src": "1178:23:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 517,
														"name": "revision",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 505,
														"src": "1204:8:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1178:34:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 519,
												"nodeType": "ExpressionStatement",
												"src": "1178:34:4"
											},
											{
												"id": 520,
												"nodeType": "PlaceholderStatement",
												"src": "1219:1:4"
											}
										]
									},
									"documentation": {
										"id": 502,
										"nodeType": "StructuredDocumentation",
										"src": "930:78:4",
										"text": " @dev Modifier to use in the initializer function of a contract."
									},
									"id": 522,
									"name": "initializer",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 503,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1031:2:4"
									},
									"src": "1011:214:4",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"documentation": {
										"id": 523,
										"nodeType": "StructuredDocumentation",
										"src": "1229:117:4",
										"text": "@dev returns the revision number of the contract.\n Needs to be defined in the inherited class as a constant."
									},
									"id": 528,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getRevision",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 524,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1369:2:4"
									},
									"returnParameters": {
										"id": 527,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 526,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 528,
												"src": "1403:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 525,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1403:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1402:9:4"
									},
									"scope": 533,
									"src": "1349:63:4",
									"stateMutability": "pure",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 532,
									"mutability": "mutable",
									"name": "______gap",
									"nodeType": "VariableDeclaration",
									"scope": 533,
									"src": "1487:29:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_array$_t_uint256_$50_storage",
										"typeString": "uint256[50]"
									},
									"typeName": {
										"baseType": {
											"id": 529,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1487:7:4",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"id": 531,
										"length": {
											"hexValue": "3530",
											"id": 530,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "1495:2:4",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_50_by_1",
												"typeString": "int_const 50"
											},
											"value": "50"
										},
										"nodeType": "ArrayTypeName",
										"src": "1487:11:4",
										"typeDescriptions": {
											"typeIdentifier": "t_array$_t_uint256_$50_storage_ptr",
											"typeString": "uint256[50]"
										}
									},
									"visibility": "private"
								}
							],
							"scope": 534,
							"src": "764:755:4"
						}
					],
					"src": "37:1483:4"
				},
				"id": 4
			},
			"contracts/Omnidex-incentives/incentives/PullRewardsIncentivesController.sol": {
				"ast": {
					"absolutePath": "contracts/Omnidex-incentives/incentives/PullRewardsIncentivesController.sol",
					"exportedSymbols": {
						"BaseIncentivesController": [
							1263
						],
						"IERC20": [
							77
						],
						"PullRewardsIncentivesController": [
							629
						],
						"SafeERC20": [
							298
						]
					},
					"id": 630,
					"license": "agpl-3.0",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 535,
							"literals": [
								"solidity",
								"0.7",
								".5"
							],
							"nodeType": "PragmaDirective",
							"src": "38:22:5"
						},
						{
							"id": 536,
							"literals": [
								"experimental",
								"ABIEncoderV2"
							],
							"nodeType": "PragmaDirective",
							"src": "62:33:5"
						},
						{
							"absolutePath": "@aave/aave-stake/contracts/interfaces/IERC20.sol",
							"file": "@aave/aave-stake/contracts/interfaces/IERC20.sol",
							"id": 538,
							"nodeType": "ImportDirective",
							"scope": 630,
							"sourceUnit": 78,
							"src": "99:72:5",
							"symbolAliases": [
								{
									"foreign": {
										"id": 537,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"src": "107:6:5",
										"typeDescriptions": {}
									}
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@aave/aave-stake/contracts/lib/SafeERC20.sol",
							"file": "@aave/aave-stake/contracts/lib/SafeERC20.sol",
							"id": 540,
							"nodeType": "ImportDirective",
							"scope": 630,
							"sourceUnit": 299,
							"src": "173:71:5",
							"symbolAliases": [
								{
									"foreign": {
										"id": 539,
										"name": "SafeERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"src": "181:9:5",
										"typeDescriptions": {}
									}
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/Omnidex-incentives/incentives/base/BaseIncentivesController.sol",
							"file": "./base/BaseIncentivesController.sol",
							"id": 542,
							"nodeType": "ImportDirective",
							"scope": 630,
							"sourceUnit": 1264,
							"src": "248:77:5",
							"symbolAliases": [
								{
									"foreign": {
										"id": 541,
										"name": "BaseIncentivesController",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"src": "256:24:5",
										"typeDescriptions": {}
									}
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 544,
										"name": "BaseIncentivesController",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 1263,
										"src": "577:24:5",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_BaseIncentivesController_$1263",
											"typeString": "contract BaseIncentivesController"
										}
									},
									"id": 545,
									"nodeType": "InheritanceSpecifier",
									"src": "577:24:5"
								}
							],
							"contractDependencies": [
								533,
								1263,
								1869,
								1939,
								2069
							],
							"contractKind": "contract",
							"documentation": {
								"id": 543,
								"nodeType": "StructuredDocumentation",
								"src": "329:199:5",
								"text": " @title PullRewardsIncentivesController\n @notice Distributor contract for ERC20 rewards to the Omnidex protocol participants that pulls ERC20 from external account\n @author Omnidex*"
							},
							"fullyImplemented": true,
							"id": 629,
							"linearizedBaseContracts": [
								629,
								1263,
								1869,
								533,
								2069,
								1939
							],
							"name": "PullRewardsIncentivesController",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"id": 548,
									"libraryName": {
										"id": 546,
										"name": "SafeERC20",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 298,
										"src": "614:9:5",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_SafeERC20_$298",
											"typeString": "library SafeERC20"
										}
									},
									"nodeType": "UsingForDirective",
									"src": "608:27:5",
									"typeName": {
										"id": 547,
										"name": "IERC20",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 77,
										"src": "628:6:5",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$77",
											"typeString": "contract IERC20"
										}
									}
								},
								{
									"constant": false,
									"id": 550,
									"mutability": "mutable",
									"name": "_rewardsVault",
									"nodeType": "VariableDeclaration",
									"scope": 629,
									"src": "641:30:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 549,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "641:7:5",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "internal"
								},
								{
									"anonymous": false,
									"id": 554,
									"name": "RewardsVaultUpdated",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 553,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 552,
												"indexed": true,
												"mutability": "mutable",
												"name": "vault",
												"nodeType": "VariableDeclaration",
												"scope": 554,
												"src": "704:21:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 551,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "704:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "703:23:5"
									},
									"src": "678:49:5"
								},
								{
									"body": {
										"id": 565,
										"nodeType": "Block",
										"src": "855:2:5",
										"statements": []
									},
									"id": 566,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [
										{
											"arguments": [
												{
													"id": 561,
													"name": "rewardToken",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 556,
													"src": "822:11:5",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$77",
														"typeString": "contract IERC20"
													}
												},
												{
													"id": 562,
													"name": "emissionManager",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 558,
													"src": "835:15:5",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												}
											],
											"id": 563,
											"modifierName": {
												"id": 560,
												"name": "BaseIncentivesController",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 1263,
												"src": "797:24:5",
												"typeDescriptions": {
													"typeIdentifier": "t_type$_t_contract$_BaseIncentivesController_$1263_$",
													"typeString": "type(contract BaseIncentivesController)"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "797:54:5"
										}
									],
									"name": "",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 559,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 556,
												"mutability": "mutable",
												"name": "rewardToken",
												"nodeType": "VariableDeclaration",
												"scope": 566,
												"src": "747:18:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$77",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 555,
													"name": "IERC20",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 77,
													"src": "747:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$77",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 558,
												"mutability": "mutable",
												"name": "emissionManager",
												"nodeType": "VariableDeclaration",
												"scope": 566,
												"src": "767:23:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 557,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "767:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "746:45:5"
									},
									"returnParameters": {
										"id": 564,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "855:0:5"
									},
									"scope": 629,
									"src": "735:122:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 582,
										"nodeType": "Block",
										"src": "1051:87:5",
										"statements": [
											{
												"expression": {
													"id": 576,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 574,
														"name": "_rewardsVault",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 550,
														"src": "1058:13:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 575,
														"name": "rewardsVault",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 569,
														"src": "1074:12:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1058:28:5",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 577,
												"nodeType": "ExpressionStatement",
												"src": "1058:28:5"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 579,
															"name": "_rewardsVault",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 550,
															"src": "1118:13:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 578,
														"name": "RewardsVaultUpdated",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 554,
														"src": "1098:19:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 580,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1098:34:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 581,
												"nodeType": "EmitStatement",
												"src": "1093:39:5"
											}
										]
									},
									"documentation": {
										"id": 567,
										"nodeType": "StructuredDocumentation",
										"src": "863:121:5",
										"text": " @dev Initialize OmnidexIncentivesController\n @param rewardsVault rewards vault to pull ERC20 funds*"
									},
									"functionSelector": "c4d66de8",
									"id": 583,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 572,
											"modifierName": {
												"id": 571,
												"name": "initializer",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 522,
												"src": "1039:11:5",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "1039:11:5"
										}
									],
									"name": "initialize",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 570,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 569,
												"mutability": "mutable",
												"name": "rewardsVault",
												"nodeType": "VariableDeclaration",
												"scope": 583,
												"src": "1008:20:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 568,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1008:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1007:22:5"
									},
									"returnParameters": {
										"id": 573,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1051:0:5"
									},
									"scope": 629,
									"src": "988:150:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 591,
										"nodeType": "Block",
										"src": "1293:33:5",
										"statements": [
											{
												"expression": {
													"id": 589,
													"name": "_rewardsVault",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 550,
													"src": "1307:13:5",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 588,
												"id": 590,
												"nodeType": "Return",
												"src": "1300:20:5"
											}
										]
									},
									"documentation": {
										"id": 584,
										"nodeType": "StructuredDocumentation",
										"src": "1144:86:5",
										"text": " @dev returns the current rewards vault contract\n @return address"
									},
									"functionSelector": "e23ddec5",
									"id": 592,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getRewardsVault",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 585,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1258:2:5"
									},
									"returnParameters": {
										"id": 588,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 587,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 592,
												"src": "1284:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 586,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1284:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1283:9:5"
									},
									"scope": 629,
									"src": "1234:92:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 608,
										"nodeType": "Block",
										"src": "1561:86:5",
										"statements": [
											{
												"expression": {
													"id": 602,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 600,
														"name": "_rewardsVault",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 550,
														"src": "1568:13:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 601,
														"name": "rewardsVault",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 595,
														"src": "1584:12:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1568:28:5",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 603,
												"nodeType": "ExpressionStatement",
												"src": "1568:28:5"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 605,
															"name": "rewardsVault",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 595,
															"src": "1628:12:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 604,
														"name": "RewardsVaultUpdated",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 554,
														"src": "1608:19:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 606,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1608:33:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 607,
												"nodeType": "EmitStatement",
												"src": "1603:38:5"
											}
										]
									},
									"documentation": {
										"id": 593,
										"nodeType": "StructuredDocumentation",
										"src": "1332:149:5",
										"text": " @dev update the rewards vault address, only allowed by the Rewards admin\n @param rewardsVault The address of the rewards vault*"
									},
									"functionSelector": "f5bb3e02",
									"id": 609,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 598,
											"modifierName": {
												"id": 597,
												"name": "onlyEmissionManager",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 1312,
												"src": "1541:19:5",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "1541:19:5"
										}
									],
									"name": "setRewardsVault",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 596,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 595,
												"mutability": "mutable",
												"name": "rewardsVault",
												"nodeType": "VariableDeclaration",
												"scope": 609,
												"src": "1510:20:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 594,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1510:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1509:22:5"
									},
									"returnParameters": {
										"id": 599,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1561:0:5"
									},
									"scope": 629,
									"src": "1485:162:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										1262
									],
									"body": {
										"id": 627,
										"nodeType": "Block",
										"src": "1772:77:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 622,
															"name": "_rewardsVault",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 550,
															"src": "1817:13:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 623,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 612,
															"src": "1832:2:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 624,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 614,
															"src": "1836:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 619,
																	"name": "REWARD_TOKEN",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 662,
																	"src": "1786:12:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 618,
																"name": "IERC20",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 77,
																"src": "1779:6:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IERC20_$77_$",
																	"typeString": "type(contract IERC20)"
																}
															},
															"id": 620,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1779:20:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$77",
																"typeString": "contract IERC20"
															}
														},
														"id": 621,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "safeTransferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 203,
														"src": "1779:37:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$77_$_t_address_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$77_$",
															"typeString": "function (contract IERC20,address,address,uint256)"
														}
													},
													"id": 625,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1779:64:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 626,
												"nodeType": "ExpressionStatement",
												"src": "1779:64:5"
											}
										]
									},
									"documentation": {
										"id": 610,
										"nodeType": "StructuredDocumentation",
										"src": "1656:40:5",
										"text": "@inheritdoc BaseIncentivesController"
									},
									"id": 628,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferRewards",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 616,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "1763:8:5"
									},
									"parameters": {
										"id": 615,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 612,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 628,
												"src": "1726:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 611,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1726:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 614,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 628,
												"src": "1738:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 613,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1738:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1725:28:5"
									},
									"returnParameters": {
										"id": 617,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1772:0:5"
									},
									"scope": 629,
									"src": "1700:149:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 630,
							"src": "530:1322:5"
						}
					],
					"src": "38:1814:5"
				},
				"id": 5
			},
			"contracts/Omnidex-incentives/incentives/base/BaseIncentivesController.sol": {
				"ast": {
					"absolutePath": "contracts/Omnidex-incentives/incentives/base/BaseIncentivesController.sol",
					"exportedSymbols": {
						"BaseIncentivesController": [
							1263
						],
						"DistributionManager": [
							1869
						],
						"DistributionTypes": [
							2114
						],
						"IERC20": [
							77
						],
						"IOmnidexIncentivesController": [
							2069
						],
						"IScaledBalanceToken": [
							2096
						],
						"SafeMath": [
							2204
						],
						"VersionedInitializable": [
							533
						]
					},
					"id": 1264,
					"license": "agpl-3.0",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 631,
							"literals": [
								"solidity",
								"0.7",
								".5"
							],
							"nodeType": "PragmaDirective",
							"src": "38:22:6"
						},
						{
							"id": 632,
							"literals": [
								"experimental",
								"ABIEncoderV2"
							],
							"nodeType": "PragmaDirective",
							"src": "62:33:6"
						},
						{
							"absolutePath": "contracts/Omnidex-incentives/lib/SafeMath.sol",
							"file": "../../lib/SafeMath.sol",
							"id": 634,
							"nodeType": "ImportDirective",
							"scope": 1264,
							"sourceUnit": 2205,
							"src": "99:48:6",
							"symbolAliases": [
								{
									"foreign": {
										"id": 633,
										"name": "SafeMath",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"src": "107:8:6",
										"typeDescriptions": {}
									}
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/Omnidex-incentives/lib/DistributionTypes.sol",
							"file": "../../lib/DistributionTypes.sol",
							"id": 636,
							"nodeType": "ImportDirective",
							"scope": 1264,
							"sourceUnit": 2115,
							"src": "149:66:6",
							"symbolAliases": [
								{
									"foreign": {
										"id": 635,
										"name": "DistributionTypes",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"src": "157:17:6",
										"typeDescriptions": {}
									}
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@aave/aave-stake/contracts/utils/VersionedInitializable.sol",
							"file": "@aave/aave-stake/contracts/utils/VersionedInitializable.sol",
							"id": 638,
							"nodeType": "ImportDirective",
							"scope": 1264,
							"sourceUnit": 534,
							"src": "217:99:6",
							"symbolAliases": [
								{
									"foreign": {
										"id": 637,
										"name": "VersionedInitializable",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"src": "225:22:6",
										"typeDescriptions": {}
									}
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/Omnidex-incentives/incentives/base/DistributionManager.sol",
							"file": "./DistributionManager.sol",
							"id": 640,
							"nodeType": "ImportDirective",
							"scope": 1264,
							"sourceUnit": 1870,
							"src": "318:62:6",
							"symbolAliases": [
								{
									"foreign": {
										"id": 639,
										"name": "DistributionManager",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"src": "326:19:6",
										"typeDescriptions": {}
									}
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@aave/aave-stake/contracts/interfaces/IERC20.sol",
							"file": "@aave/aave-stake/contracts/interfaces/IERC20.sol",
							"id": 642,
							"nodeType": "ImportDirective",
							"scope": 1264,
							"sourceUnit": 78,
							"src": "382:72:6",
							"symbolAliases": [
								{
									"foreign": {
										"id": 641,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"src": "390:6:6",
										"typeDescriptions": {}
									}
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/Omnidex-incentives/interfaces/IScaledBalanceToken.sol",
							"file": "../../interfaces/IScaledBalanceToken.sol",
							"id": 644,
							"nodeType": "ImportDirective",
							"scope": 1264,
							"sourceUnit": 2097,
							"src": "456:77:6",
							"symbolAliases": [
								{
									"foreign": {
										"id": 643,
										"name": "IScaledBalanceToken",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"src": "464:19:6",
										"typeDescriptions": {}
									}
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/Omnidex-incentives/interfaces/IOmnidexIncentivesController.sol",
							"file": "../../interfaces/IOmnidexIncentivesController.sol",
							"id": 646,
							"nodeType": "ImportDirective",
							"scope": 1264,
							"sourceUnit": 2070,
							"src": "535:95:6",
							"symbolAliases": [
								{
									"foreign": {
										"id": 645,
										"name": "IOmnidexIncentivesController",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"src": "543:28:6",
										"typeDescriptions": {}
									}
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 648,
										"name": "IOmnidexIncentivesController",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 2069,
										"src": "864:28:6",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IOmnidexIncentivesController_$2069",
											"typeString": "contract IOmnidexIncentivesController"
										}
									},
									"id": 649,
									"nodeType": "InheritanceSpecifier",
									"src": "864:28:6"
								},
								{
									"baseName": {
										"id": 650,
										"name": "VersionedInitializable",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 533,
										"src": "897:22:6",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_VersionedInitializable_$533",
											"typeString": "contract VersionedInitializable"
										}
									},
									"id": 651,
									"nodeType": "InheritanceSpecifier",
									"src": "897:22:6"
								},
								{
									"baseName": {
										"id": 652,
										"name": "DistributionManager",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 1869,
										"src": "924:19:6",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_DistributionManager_$1869",
											"typeString": "contract DistributionManager"
										}
									},
									"id": 653,
									"nodeType": "InheritanceSpecifier",
									"src": "924:19:6"
								}
							],
							"contractDependencies": [
								533,
								1869,
								1939,
								2069
							],
							"contractKind": "contract",
							"documentation": {
								"id": 647,
								"nodeType": "StructuredDocumentation",
								"src": "634:179:6",
								"text": " @title BaseIncentivesController\n @notice Abstract contract template to build Distributors contracts for ERC20 rewards to protocol participants\n @author Omnidex*"
							},
							"fullyImplemented": false,
							"id": 1263,
							"linearizedBaseContracts": [
								1263,
								1869,
								533,
								2069,
								1939
							],
							"name": "BaseIncentivesController",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"id": 656,
									"libraryName": {
										"id": 654,
										"name": "SafeMath",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 2204,
										"src": "956:8:6",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_SafeMath_$2204",
											"typeString": "library SafeMath"
										}
									},
									"nodeType": "UsingForDirective",
									"src": "950:27:6",
									"typeName": {
										"id": 655,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "969:7:6",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"constant": true,
									"functionSelector": "dde43cba",
									"id": 659,
									"mutability": "constant",
									"name": "REVISION",
									"nodeType": "VariableDeclaration",
									"scope": 1263,
									"src": "983:36:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 657,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "983:7:6",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "31",
										"id": 658,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1018:1:6",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1_by_1",
											"typeString": "int_const 1"
										},
										"value": "1"
									},
									"visibility": "public"
								},
								{
									"baseFunctions": [
										2068
									],
									"constant": false,
									"functionSelector": "99248ea7",
									"id": 662,
									"mutability": "immutable",
									"name": "REWARD_TOKEN",
									"nodeType": "VariableDeclaration",
									"overrides": {
										"id": 661,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "1051:8:6"
									},
									"scope": 1263,
									"src": "1026:46:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 660,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "1026:7:6",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 666,
									"mutability": "mutable",
									"name": "_usersUnclaimedRewards",
									"nodeType": "VariableDeclaration",
									"scope": 1263,
									"src": "1079:59:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 665,
										"keyType": {
											"id": 663,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1087:7:6",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1079:27:6",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueType": {
											"id": 664,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1098:7:6",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 670,
									"mutability": "mutable",
									"name": "_authorizedClaimers",
									"nodeType": "VariableDeclaration",
									"scope": 1263,
									"src": "1347:56:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_address_$",
										"typeString": "mapping(address => address)"
									},
									"typeName": {
										"id": 669,
										"keyType": {
											"id": 667,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1355:7:6",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1347:27:6",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_address_$",
											"typeString": "mapping(address => address)"
										},
										"valueType": {
											"id": 668,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1366:7:6",
											"stateMutability": "nonpayable",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										}
									},
									"visibility": "internal"
								},
								{
									"body": {
										"id": 686,
										"nodeType": "Block",
										"src": "1473:90:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 681,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"baseExpression": {
																	"id": 677,
																	"name": "_authorizedClaimers",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 670,
																	"src": "1488:19:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_address_$",
																		"typeString": "mapping(address => address)"
																	}
																},
																"id": 679,
																"indexExpression": {
																	"id": 678,
																	"name": "user",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 674,
																	"src": "1508:4:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "1488:25:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"id": 680,
																"name": "claimer",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 672,
																"src": "1517:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "1488:36:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "434c41494d45525f554e415554484f52495a4544",
															"id": 682,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1526:22:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_dc389f9f05ed02e337a2af628240d9d635867491305ed504870102f5e0924c61",
																"typeString": "literal_string \"CLAIMER_UNAUTHORIZED\""
															},
															"value": "CLAIMER_UNAUTHORIZED"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_dc389f9f05ed02e337a2af628240d9d635867491305ed504870102f5e0924c61",
																"typeString": "literal_string \"CLAIMER_UNAUTHORIZED\""
															}
														],
														"id": 676,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "1480:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 683,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1480:69:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 684,
												"nodeType": "ExpressionStatement",
												"src": "1480:69:6"
											},
											{
												"id": 685,
												"nodeType": "PlaceholderStatement",
												"src": "1556:1:6"
											}
										]
									},
									"id": 687,
									"name": "onlyAuthorizedClaimers",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 675,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 672,
												"mutability": "mutable",
												"name": "claimer",
												"nodeType": "VariableDeclaration",
												"scope": 687,
												"src": "1442:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 671,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1442:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 674,
												"mutability": "mutable",
												"name": "user",
												"nodeType": "VariableDeclaration",
												"scope": 687,
												"src": "1459:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 673,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1459:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1441:31:6"
									},
									"src": "1410:153:6",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 704,
										"nodeType": "Block",
										"src": "1671:48:6",
										"statements": [
											{
												"expression": {
													"id": 702,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 697,
														"name": "REWARD_TOKEN",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 662,
														"src": "1678:12:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 700,
																"name": "rewardToken",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 689,
																"src": "1701:11:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IERC20_$77",
																	"typeString": "contract IERC20"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_contract$_IERC20_$77",
																	"typeString": "contract IERC20"
																}
															],
															"id": 699,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1693:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 698,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "1693:7:6",
																"typeDescriptions": {}
															}
														},
														"id": 701,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1693:20:6",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1678:35:6",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 703,
												"nodeType": "ExpressionStatement",
												"src": "1678:35:6"
											}
										]
									},
									"id": 705,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [
										{
											"arguments": [
												{
													"id": 694,
													"name": "emissionManager",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 691,
													"src": "1651:15:6",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												}
											],
											"id": 695,
											"modifierName": {
												"id": 693,
												"name": "DistributionManager",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 1869,
												"src": "1631:19:6",
												"typeDescriptions": {
													"typeIdentifier": "t_type$_t_contract$_DistributionManager_$1869_$",
													"typeString": "type(contract DistributionManager)"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "1631:36:6"
										}
									],
									"name": "",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 692,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 689,
												"mutability": "mutable",
												"name": "rewardToken",
												"nodeType": "VariableDeclaration",
												"scope": 705,
												"src": "1581:18:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$77",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 688,
													"name": "IERC20",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 77,
													"src": "1581:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$77",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 691,
												"mutability": "mutable",
												"name": "emissionManager",
												"nodeType": "VariableDeclaration",
												"scope": 705,
												"src": "1601:23:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 690,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1601:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1580:45:6"
									},
									"returnParameters": {
										"id": 696,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1671:0:6"
									},
									"scope": 1263,
									"src": "1569:150:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										1994
									],
									"body": {
										"id": 804,
										"nodeType": "Block",
										"src": "1920:645:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 723,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 719,
																	"name": "assets",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 709,
																	"src": "1935:6:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
																		"typeString": "address[] calldata"
																	}
																},
																"id": 720,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "1935:13:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"id": 721,
																	"name": "emissionsPerSecond",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 712,
																	"src": "1952:18:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
																		"typeString": "uint256[] calldata"
																	}
																},
																"id": 722,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "1952:25:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1935:42:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "494e56414c49445f434f4e46494755524154494f4e",
															"id": 724,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1979:23:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_6959a97277e640037a0b87fbc8f4c35f54cb176c97a67a1f1334c0edec62895f",
																"typeString": "literal_string \"INVALID_CONFIGURATION\""
															},
															"value": "INVALID_CONFIGURATION"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_6959a97277e640037a0b87fbc8f4c35f54cb176c97a67a1f1334c0edec62895f",
																"typeString": "literal_string \"INVALID_CONFIGURATION\""
															}
														],
														"id": 718,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "1927:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 725,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1927:76:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 726,
												"nodeType": "ExpressionStatement",
												"src": "1927:76:6"
											},
											{
												"assignments": [
													731
												],
												"declarations": [
													{
														"constant": false,
														"id": 731,
														"mutability": "mutable",
														"name": "assetsConfig",
														"nodeType": "VariableDeclaration",
														"scope": 804,
														"src": "2012:56:6",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_struct$_AssetConfigInput_$2106_memory_ptr_$dyn_memory_ptr",
															"typeString": "struct DistributionTypes.AssetConfigInput[]"
														},
														"typeName": {
															"baseType": {
																"id": 729,
																"name": "DistributionTypes.AssetConfigInput",
																"nodeType": "UserDefinedTypeName",
																"referencedDeclaration": 2106,
																"src": "2012:34:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_AssetConfigInput_$2106_storage_ptr",
																	"typeString": "struct DistributionTypes.AssetConfigInput"
																}
															},
															"id": 730,
															"nodeType": "ArrayTypeName",
															"src": "2012:36:6",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_struct$_AssetConfigInput_$2106_storage_$dyn_storage_ptr",
																"typeString": "struct DistributionTypes.AssetConfigInput[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 738,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"id": 735,
																"name": "assets",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 709,
																"src": "2119:6:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
																	"typeString": "address[] calldata"
																}
															},
															"id": 736,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "2119:13:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 734,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "NewExpression",
														"src": "2078:40:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_struct$_AssetConfigInput_$2106_memory_ptr_$dyn_memory_ptr_$",
															"typeString": "function (uint256) pure returns (struct DistributionTypes.AssetConfigInput memory[] memory)"
														},
														"typeName": {
															"baseType": {
																"id": 732,
																"name": "DistributionTypes.AssetConfigInput",
																"nodeType": "UserDefinedTypeName",
																"referencedDeclaration": 2106,
																"src": "2082:34:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_AssetConfigInput_$2106_storage_ptr",
																	"typeString": "struct DistributionTypes.AssetConfigInput"
																}
															},
															"id": 733,
															"nodeType": "ArrayTypeName",
															"src": "2082:36:6",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_struct$_AssetConfigInput_$2106_storage_$dyn_storage_ptr",
																"typeString": "struct DistributionTypes.AssetConfigInput[]"
															}
														}
													},
													"id": 737,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2078:55:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_struct$_AssetConfigInput_$2106_memory_ptr_$dyn_memory_ptr",
														"typeString": "struct DistributionTypes.AssetConfigInput memory[] memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2012:121:6"
											},
											{
												"body": {
													"id": 798,
													"nodeType": "Block",
													"src": "2186:337:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 760,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"arguments": [
																				{
																					"baseExpression": {
																						"id": 753,
																						"name": "emissionsPerSecond",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 712,
																						"src": "2211:18:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
																							"typeString": "uint256[] calldata"
																						}
																					},
																					"id": 755,
																					"indexExpression": {
																						"id": 754,
																						"name": "i",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 740,
																						"src": "2230:1:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "IndexAccess",
																					"src": "2211:21:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 752,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "2203:7:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_uint104_$",
																					"typeString": "type(uint104)"
																				},
																				"typeName": {
																					"id": 751,
																					"name": "uint104",
																					"nodeType": "ElementaryTypeName",
																					"src": "2203:7:6",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 756,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "2203:30:6",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint104",
																				"typeString": "uint104"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"baseExpression": {
																				"id": 757,
																				"name": "emissionsPerSecond",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 712,
																				"src": "2237:18:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
																					"typeString": "uint256[] calldata"
																				}
																			},
																			"id": 759,
																			"indexExpression": {
																				"id": 758,
																				"name": "i",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 740,
																				"src": "2256:1:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "2237:21:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "2203:55:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"hexValue": "496e646578206f766572666c6f7720617420656d697373696f6e735065725365636f6e64",
																		"id": 761,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2260:38:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_7bbf22fcd0f8524161fb845274fb83ab60dddf8bd31fa7f66f897d29500d0e11",
																			"typeString": "literal_string \"Index overflow at emissionsPerSecond\""
																		},
																		"value": "Index overflow at emissionsPerSecond"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_7bbf22fcd0f8524161fb845274fb83ab60dddf8bd31fa7f66f897d29500d0e11",
																			"typeString": "literal_string \"Index overflow at emissionsPerSecond\""
																		}
																	],
																	"id": 750,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		-18,
																		-18
																	],
																	"referencedDeclaration": -18,
																	"src": "2195:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 762,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2195:104:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 763,
															"nodeType": "ExpressionStatement",
															"src": "2195:104:6"
														},
														{
															"expression": {
																"id": 771,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"baseExpression": {
																			"id": 764,
																			"name": "assetsConfig",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 731,
																			"src": "2308:12:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_array$_t_struct$_AssetConfigInput_$2106_memory_ptr_$dyn_memory_ptr",
																				"typeString": "struct DistributionTypes.AssetConfigInput memory[] memory"
																			}
																		},
																		"id": 766,
																		"indexExpression": {
																			"id": 765,
																			"name": "i",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 740,
																			"src": "2321:1:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "2308:15:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_AssetConfigInput_$2106_memory_ptr",
																			"typeString": "struct DistributionTypes.AssetConfigInput memory"
																		}
																	},
																	"id": 767,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberName": "underlyingAsset",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 2105,
																	"src": "2308:31:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"baseExpression": {
																		"id": 768,
																		"name": "assets",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 709,
																		"src": "2342:6:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
																			"typeString": "address[] calldata"
																		}
																	},
																	"id": 770,
																	"indexExpression": {
																		"id": 769,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 740,
																		"src": "2349:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "2342:9:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "2308:43:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 772,
															"nodeType": "ExpressionStatement",
															"src": "2308:43:6"
														},
														{
															"expression": {
																"id": 783,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"baseExpression": {
																			"id": 773,
																			"name": "assetsConfig",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 731,
																			"src": "2360:12:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_array$_t_struct$_AssetConfigInput_$2106_memory_ptr_$dyn_memory_ptr",
																				"typeString": "struct DistributionTypes.AssetConfigInput memory[] memory"
																			}
																		},
																		"id": 775,
																		"indexExpression": {
																			"id": 774,
																			"name": "i",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 740,
																			"src": "2373:1:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "2360:15:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_AssetConfigInput_$2106_memory_ptr",
																			"typeString": "struct DistributionTypes.AssetConfigInput memory"
																		}
																	},
																	"id": 776,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberName": "emissionPerSecond",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 2101,
																	"src": "2360:33:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint104",
																		"typeString": "uint104"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"baseExpression": {
																				"id": 779,
																				"name": "emissionsPerSecond",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 712,
																				"src": "2404:18:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
																					"typeString": "uint256[] calldata"
																				}
																			},
																			"id": 781,
																			"indexExpression": {
																				"id": 780,
																				"name": "i",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 740,
																				"src": "2423:1:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "2404:21:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 778,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2396:7:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint104_$",
																			"typeString": "type(uint104)"
																		},
																		"typeName": {
																			"id": 777,
																			"name": "uint104",
																			"nodeType": "ElementaryTypeName",
																			"src": "2396:7:6",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 782,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2396:30:6",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint104",
																		"typeString": "uint104"
																	}
																},
																"src": "2360:66:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint104",
																	"typeString": "uint104"
																}
															},
															"id": 784,
															"nodeType": "ExpressionStatement",
															"src": "2360:66:6"
														},
														{
															"expression": {
																"id": 796,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"baseExpression": {
																			"id": 785,
																			"name": "assetsConfig",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 731,
																			"src": "2435:12:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_array$_t_struct$_AssetConfigInput_$2106_memory_ptr_$dyn_memory_ptr",
																				"typeString": "struct DistributionTypes.AssetConfigInput memory[] memory"
																			}
																		},
																		"id": 787,
																		"indexExpression": {
																			"id": 786,
																			"name": "i",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 740,
																			"src": "2448:1:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "2435:15:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_AssetConfigInput_$2106_memory_ptr",
																			"typeString": "struct DistributionTypes.AssetConfigInput memory"
																		}
																	},
																	"id": 788,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberName": "totalStaked",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 2103,
																	"src": "2435:27:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"expression": {
																			"arguments": [
																				{
																					"baseExpression": {
																						"id": 790,
																						"name": "assets",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 709,
																						"src": "2485:6:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
																							"typeString": "address[] calldata"
																						}
																					},
																					"id": 792,
																					"indexExpression": {
																						"id": 791,
																						"name": "i",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 740,
																						"src": "2492:1:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "IndexAccess",
																					"src": "2485:9:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				],
																				"id": 789,
																				"name": "IScaledBalanceToken",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2096,
																				"src": "2465:19:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_contract$_IScaledBalanceToken_$2096_$",
																					"typeString": "type(contract IScaledBalanceToken)"
																				}
																			},
																			"id": 793,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "2465:30:6",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IScaledBalanceToken_$2096",
																				"typeString": "contract IScaledBalanceToken"
																			}
																		},
																		"id": 794,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "scaledTotalSupply",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 2095,
																		"src": "2465:48:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
																			"typeString": "function () view external returns (uint256)"
																		}
																	},
																	"id": 795,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2465:50:6",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2435:80:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 797,
															"nodeType": "ExpressionStatement",
															"src": "2435:80:6"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 746,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 743,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 740,
														"src": "2162:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"id": 744,
															"name": "assets",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 709,
															"src": "2166:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
																"typeString": "address[] calldata"
															}
														},
														"id": 745,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "2166:13:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2162:17:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 799,
												"initializationExpression": {
													"assignments": [
														740
													],
													"declarations": [
														{
															"constant": false,
															"id": 740,
															"mutability": "mutable",
															"name": "i",
															"nodeType": "VariableDeclaration",
															"scope": 799,
															"src": "2147:9:6",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 739,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "2147:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 742,
													"initialValue": {
														"hexValue": "30",
														"id": 741,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2159:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "2147:13:6"
												},
												"loopExpression": {
													"expression": {
														"id": 748,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "2181:3:6",
														"subExpression": {
															"id": 747,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 740,
															"src": "2181:1:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 749,
													"nodeType": "ExpressionStatement",
													"src": "2181:3:6"
												},
												"nodeType": "ForStatement",
												"src": "2142:381:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 801,
															"name": "assetsConfig",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 731,
															"src": "2546:12:6",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_struct$_AssetConfigInput_$2106_memory_ptr_$dyn_memory_ptr",
																"typeString": "struct DistributionTypes.AssetConfigInput memory[] memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_array$_t_struct$_AssetConfigInput_$2106_memory_ptr_$dyn_memory_ptr",
																"typeString": "struct DistributionTypes.AssetConfigInput memory[] memory"
															}
														],
														"id": 800,
														"name": "_configureAssets",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1469,
														"src": "2529:16:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_array$_t_struct$_AssetConfigInput_$2106_memory_ptr_$dyn_memory_ptr_$returns$__$",
															"typeString": "function (struct DistributionTypes.AssetConfigInput memory[] memory)"
														}
													},
													"id": 802,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2529:30:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 803,
												"nodeType": "ExpressionStatement",
												"src": "2529:30:6"
											}
										]
									},
									"documentation": {
										"id": 706,
										"nodeType": "StructuredDocumentation",
										"src": "1725:44:6",
										"text": "@inheritdoc IOmnidexIncentivesController"
									},
									"functionSelector": "79f171b2",
									"id": 805,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 716,
											"modifierName": {
												"id": 715,
												"name": "onlyEmissionManager",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 1312,
												"src": "1897:19:6",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "1897:19:6"
										}
									],
									"name": "configureAssets",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 714,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "1883:8:6"
									},
									"parameters": {
										"id": 713,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 709,
												"mutability": "mutable",
												"name": "assets",
												"nodeType": "VariableDeclaration",
												"scope": 805,
												"src": "1798:25:6",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 707,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "1798:7:6",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 708,
													"nodeType": "ArrayTypeName",
													"src": "1798:9:6",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 712,
												"mutability": "mutable",
												"name": "emissionsPerSecond",
												"nodeType": "VariableDeclaration",
												"scope": 805,
												"src": "1825:37:6",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 710,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "1825:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 711,
													"nodeType": "ArrayTypeName",
													"src": "1825:9:6",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1797:66:6"
									},
									"returnParameters": {
										"id": 717,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1920:0:6"
									},
									"scope": 1263,
									"src": "1773:792:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										2004
									],
									"body": {
										"id": 847,
										"nodeType": "Block",
										"src": "2735:283:6",
										"statements": [
											{
												"assignments": [
													817
												],
												"declarations": [
													{
														"constant": false,
														"id": 817,
														"mutability": "mutable",
														"name": "accruedRewards",
														"nodeType": "VariableDeclaration",
														"scope": 847,
														"src": "2742:22:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 816,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2742:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 825,
												"initialValue": {
													"arguments": [
														{
															"id": 819,
															"name": "user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 808,
															"src": "2792:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"id": 820,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": -15,
																"src": "2798:3:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 821,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "2798:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"id": 822,
															"name": "userBalance",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 812,
															"src": "2810:11:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 823,
															"name": "totalSupply",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 810,
															"src": "2823:11:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 818,
														"name": "_updateUserAssetInternal",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1640,
														"src": "2767:24:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (address,address,uint256,uint256) returns (uint256)"
														}
													},
													"id": 824,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2767:68:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2742:93:6"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 828,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 826,
														"name": "accruedRewards",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 817,
														"src": "2846:14:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30",
														"id": 827,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2864:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "2846:19:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 846,
												"nodeType": "IfStatement",
												"src": "2842:171:6",
												"trueBody": {
													"id": 845,
													"nodeType": "Block",
													"src": "2867:146:6",
													"statements": [
														{
															"expression": {
																"id": 838,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 829,
																		"name": "_usersUnclaimedRewards",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 666,
																		"src": "2876:22:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 831,
																	"indexExpression": {
																		"id": 830,
																		"name": "user",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 808,
																		"src": "2899:4:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "2876:28:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"id": 836,
																			"name": "accruedRewards",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 817,
																			"src": "2940:14:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"baseExpression": {
																				"id": 832,
																				"name": "_usersUnclaimedRewards",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 666,
																				"src": "2907:22:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 834,
																			"indexExpression": {
																				"id": 833,
																				"name": "user",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 808,
																				"src": "2930:4:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "2907:28:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 835,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "add",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 2139,
																		"src": "2907:32:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 837,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2907:48:6",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2876:79:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 839,
															"nodeType": "ExpressionStatement",
															"src": "2876:79:6"
														},
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 841,
																		"name": "user",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 808,
																		"src": "2984:4:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 842,
																		"name": "accruedRewards",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 817,
																		"src": "2990:14:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 840,
																	"name": "RewardsAccrued",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1952,
																	"src": "2969:14:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,uint256)"
																	}
																},
																"id": 843,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2969:36:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 844,
															"nodeType": "EmitStatement",
															"src": "2964:41:6"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 806,
										"nodeType": "StructuredDocumentation",
										"src": "2571:44:6",
										"text": "@inheritdoc IOmnidexIncentivesController"
									},
									"functionSelector": "31873e2e",
									"id": 848,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "handleAction",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 814,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2726:8:6"
									},
									"parameters": {
										"id": 813,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 808,
												"mutability": "mutable",
												"name": "user",
												"nodeType": "VariableDeclaration",
												"scope": 848,
												"src": "2647:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 807,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2647:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 810,
												"mutability": "mutable",
												"name": "totalSupply",
												"nodeType": "VariableDeclaration",
												"scope": 848,
												"src": "2666:19:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 809,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2666:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 812,
												"mutability": "mutable",
												"name": "userBalance",
												"nodeType": "VariableDeclaration",
												"scope": 848,
												"src": "2692:19:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 811,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2692:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2640:76:6"
									},
									"returnParameters": {
										"id": 815,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2735:0:6"
									},
									"scope": 1263,
									"src": "2619:399:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										2015
									],
									"body": {
										"id": 931,
										"nodeType": "Block",
										"src": "3204:554:6",
										"statements": [
											{
												"assignments": [
													861
												],
												"declarations": [
													{
														"constant": false,
														"id": 861,
														"mutability": "mutable",
														"name": "unclaimedRewards",
														"nodeType": "VariableDeclaration",
														"scope": 931,
														"src": "3211:24:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 860,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3211:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 865,
												"initialValue": {
													"baseExpression": {
														"id": 862,
														"name": "_usersUnclaimedRewards",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 666,
														"src": "3238:22:6",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 864,
													"indexExpression": {
														"id": 863,
														"name": "user",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 854,
														"src": "3261:4:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3238:28:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3211:55:6"
											},
											{
												"assignments": [
													870
												],
												"declarations": [
													{
														"constant": false,
														"id": 870,
														"mutability": "mutable",
														"name": "userState",
														"nodeType": "VariableDeclaration",
														"scope": 931,
														"src": "3275:51:6",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_struct$_UserStakeInput_$2113_memory_ptr_$dyn_memory_ptr",
															"typeString": "struct DistributionTypes.UserStakeInput[]"
														},
														"typeName": {
															"baseType": {
																"id": 868,
																"name": "DistributionTypes.UserStakeInput",
																"nodeType": "UserDefinedTypeName",
																"referencedDeclaration": 2113,
																"src": "3275:32:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_UserStakeInput_$2113_storage_ptr",
																	"typeString": "struct DistributionTypes.UserStakeInput"
																}
															},
															"id": 869,
															"nodeType": "ArrayTypeName",
															"src": "3275:34:6",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_struct$_UserStakeInput_$2113_storage_$dyn_storage_ptr",
																"typeString": "struct DistributionTypes.UserStakeInput[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 877,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"id": 874,
																"name": "assets",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 852,
																"src": "3375:6:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
																	"typeString": "address[] calldata"
																}
															},
															"id": 875,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "3375:13:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 873,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "NewExpression",
														"src": "3336:38:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_struct$_UserStakeInput_$2113_memory_ptr_$dyn_memory_ptr_$",
															"typeString": "function (uint256) pure returns (struct DistributionTypes.UserStakeInput memory[] memory)"
														},
														"typeName": {
															"baseType": {
																"id": 871,
																"name": "DistributionTypes.UserStakeInput",
																"nodeType": "UserDefinedTypeName",
																"referencedDeclaration": 2113,
																"src": "3340:32:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_UserStakeInput_$2113_storage_ptr",
																	"typeString": "struct DistributionTypes.UserStakeInput"
																}
															},
															"id": 872,
															"nodeType": "ArrayTypeName",
															"src": "3340:34:6",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_struct$_UserStakeInput_$2113_storage_$dyn_storage_ptr",
																"typeString": "struct DistributionTypes.UserStakeInput[]"
															}
														}
													},
													"id": 876,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3336:53:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_struct$_UserStakeInput_$2113_memory_ptr_$dyn_memory_ptr",
														"typeString": "struct DistributionTypes.UserStakeInput memory[] memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3275:114:6"
											},
											{
												"body": {
													"id": 917,
													"nodeType": "Block",
													"src": "3440:198:6",
													"statements": [
														{
															"expression": {
																"id": 896,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"baseExpression": {
																			"id": 889,
																			"name": "userState",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 870,
																			"src": "3449:9:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_array$_t_struct$_UserStakeInput_$2113_memory_ptr_$dyn_memory_ptr",
																				"typeString": "struct DistributionTypes.UserStakeInput memory[] memory"
																			}
																		},
																		"id": 891,
																		"indexExpression": {
																			"id": 890,
																			"name": "i",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 879,
																			"src": "3459:1:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "3449:12:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_UserStakeInput_$2113_memory_ptr",
																			"typeString": "struct DistributionTypes.UserStakeInput memory"
																		}
																	},
																	"id": 892,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberName": "underlyingAsset",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 2108,
																	"src": "3449:28:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"baseExpression": {
																		"id": 893,
																		"name": "assets",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 852,
																		"src": "3480:6:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
																			"typeString": "address[] calldata"
																		}
																	},
																	"id": 895,
																	"indexExpression": {
																		"id": 894,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 879,
																		"src": "3487:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "3480:9:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "3449:40:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 897,
															"nodeType": "ExpressionStatement",
															"src": "3449:40:6"
														},
														{
															"expression": {
																"id": 915,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"components": [
																		{
																			"expression": {
																				"baseExpression": {
																					"id": 898,
																					"name": "userState",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 870,
																					"src": "3499:9:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_array$_t_struct$_UserStakeInput_$2113_memory_ptr_$dyn_memory_ptr",
																						"typeString": "struct DistributionTypes.UserStakeInput memory[] memory"
																					}
																				},
																				"id": 900,
																				"indexExpression": {
																					"id": 899,
																					"name": "i",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 879,
																					"src": "3509:1:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "IndexAccess",
																				"src": "3499:12:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_UserStakeInput_$2113_memory_ptr",
																					"typeString": "struct DistributionTypes.UserStakeInput memory"
																				}
																			},
																			"id": 901,
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"memberName": "stakedByUser",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 2110,
																			"src": "3499:25:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		{
																			"expression": {
																				"baseExpression": {
																					"id": 902,
																					"name": "userState",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 870,
																					"src": "3526:9:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_array$_t_struct$_UserStakeInput_$2113_memory_ptr_$dyn_memory_ptr",
																						"typeString": "struct DistributionTypes.UserStakeInput memory[] memory"
																					}
																				},
																				"id": 904,
																				"indexExpression": {
																					"id": 903,
																					"name": "i",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 879,
																					"src": "3536:1:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "IndexAccess",
																				"src": "3526:12:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_UserStakeInput_$2113_memory_ptr",
																					"typeString": "struct DistributionTypes.UserStakeInput memory"
																				}
																			},
																			"id": 905,
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"memberName": "totalStaked",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 2112,
																			"src": "3526:24:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 906,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "TupleExpression",
																	"src": "3498:53:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
																		"typeString": "tuple(uint256,uint256)"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"id": 913,
																			"name": "user",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 854,
																			"src": "3625:4:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"expression": {
																			"arguments": [
																				{
																					"baseExpression": {
																						"id": 908,
																						"name": "assets",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 852,
																						"src": "3574:6:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
																							"typeString": "address[] calldata"
																						}
																					},
																					"id": 910,
																					"indexExpression": {
																						"id": 909,
																						"name": "i",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 879,
																						"src": "3581:1:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "IndexAccess",
																					"src": "3574:9:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				],
																				"id": 907,
																				"name": "IScaledBalanceToken",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2096,
																				"src": "3554:19:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_contract$_IScaledBalanceToken_$2096_$",
																					"typeString": "type(contract IScaledBalanceToken)"
																				}
																			},
																			"id": 911,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "3554:30:6",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IScaledBalanceToken_$2096",
																				"typeString": "contract IScaledBalanceToken"
																			}
																		},
																		"id": 912,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "getScaledUserBalanceAndSupply",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 2089,
																		"src": "3554:70:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$_t_uint256_$",
																			"typeString": "function (address) view external returns (uint256,uint256)"
																		}
																	},
																	"id": 914,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3554:76:6",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
																		"typeString": "tuple(uint256,uint256)"
																	}
																},
																"src": "3498:132:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 916,
															"nodeType": "ExpressionStatement",
															"src": "3498:132:6"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 885,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 882,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 879,
														"src": "3416:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"id": 883,
															"name": "assets",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 852,
															"src": "3420:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
																"typeString": "address[] calldata"
															}
														},
														"id": 884,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "3420:13:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3416:17:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 918,
												"initializationExpression": {
													"assignments": [
														879
													],
													"declarations": [
														{
															"constant": false,
															"id": 879,
															"mutability": "mutable",
															"name": "i",
															"nodeType": "VariableDeclaration",
															"scope": 918,
															"src": "3401:9:6",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 878,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "3401:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 881,
													"initialValue": {
														"hexValue": "30",
														"id": 880,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3413:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "3401:13:6"
												},
												"loopExpression": {
													"expression": {
														"id": 887,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "3435:3:6",
														"subExpression": {
															"id": 886,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 879,
															"src": "3435:1:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 888,
													"nodeType": "ExpressionStatement",
													"src": "3435:3:6"
												},
												"nodeType": "ForStatement",
												"src": "3396:242:6"
											},
											{
												"expression": {
													"id": 927,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 919,
														"name": "unclaimedRewards",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 861,
														"src": "3644:16:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"arguments": [
																	{
																		"id": 923,
																		"name": "user",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 854,
																		"src": "3705:4:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 924,
																		"name": "userState",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 870,
																		"src": "3711:9:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_struct$_UserStakeInput_$2113_memory_ptr_$dyn_memory_ptr",
																			"typeString": "struct DistributionTypes.UserStakeInput memory[] memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_array$_t_struct$_UserStakeInput_$2113_memory_ptr_$dyn_memory_ptr",
																			"typeString": "struct DistributionTypes.UserStakeInput memory[] memory"
																		}
																	],
																	"id": 922,
																	"name": "_getUnclaimedRewards",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1764,
																	"src": "3684:20:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_address_$_t_array$_t_struct$_UserStakeInput_$2113_memory_ptr_$dyn_memory_ptr_$returns$_t_uint256_$",
																		"typeString": "function (address,struct DistributionTypes.UserStakeInput memory[] memory) view returns (uint256)"
																	}
																},
																"id": 925,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3684:37:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"id": 920,
																"name": "unclaimedRewards",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 861,
																"src": "3663:16:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 921,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2139,
															"src": "3663:20:6",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 926,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3663:59:6",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3644:78:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 928,
												"nodeType": "ExpressionStatement",
												"src": "3644:78:6"
											},
											{
												"expression": {
													"id": 929,
													"name": "unclaimedRewards",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 861,
													"src": "3736:16:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 859,
												"id": 930,
												"nodeType": "Return",
												"src": "3729:23:6"
											}
										]
									},
									"documentation": {
										"id": 849,
										"nodeType": "StructuredDocumentation",
										"src": "3024:44:6",
										"text": "@inheritdoc IOmnidexIncentivesController"
									},
									"functionSelector": "8b599f26",
									"id": 932,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getRewardsBalance",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 856,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "3169:8:6"
									},
									"parameters": {
										"id": 855,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 852,
												"mutability": "mutable",
												"name": "assets",
												"nodeType": "VariableDeclaration",
												"scope": 932,
												"src": "3099:25:6",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 850,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "3099:7:6",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 851,
													"nodeType": "ArrayTypeName",
													"src": "3099:9:6",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 854,
												"mutability": "mutable",
												"name": "user",
												"nodeType": "VariableDeclaration",
												"scope": 932,
												"src": "3126:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 853,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3126:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3098:41:6"
									},
									"returnParameters": {
										"id": 859,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 858,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 932,
												"src": "3192:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 857,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3192:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3191:9:6"
									},
									"scope": 1263,
									"src": "3072:686:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										2028
									],
									"body": {
										"id": 966,
										"nodeType": "Block",
										"src": "3945:131:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 952,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 947,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 940,
																"src": "3960:2:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 950,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "3974:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 949,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "3966:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 948,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "3966:7:6",
																		"typeDescriptions": {}
																	}
																},
																"id": 951,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3966:10:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "3960:16:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "494e56414c49445f544f5f41444452455353",
															"id": 953,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3978:20:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_60a6ecd9d15a2e4ae360b5943de5e7d94204c8fa7a9b93d3208a26418697ceb3",
																"typeString": "literal_string \"INVALID_TO_ADDRESS\""
															},
															"value": "INVALID_TO_ADDRESS"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_60a6ecd9d15a2e4ae360b5943de5e7d94204c8fa7a9b93d3208a26418697ceb3",
																"typeString": "literal_string \"INVALID_TO_ADDRESS\""
															}
														],
														"id": 946,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "3952:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 954,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3952:47:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 955,
												"nodeType": "ExpressionStatement",
												"src": "3952:47:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 957,
															"name": "assets",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 936,
															"src": "4027:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
																"typeString": "address[] calldata"
															}
														},
														{
															"id": 958,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 938,
															"src": "4035:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"expression": {
																"id": 959,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": -15,
																"src": "4043:3:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 960,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "4043:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"expression": {
																"id": 961,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": -15,
																"src": "4055:3:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 962,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "4055:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"id": 963,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 940,
															"src": "4067:2:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
																"typeString": "address[] calldata"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 956,
														"name": "_claimRewards",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1254,
															1692
														],
														"referencedDeclaration": 1254,
														"src": "4013:13:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_array$_t_address_$dyn_calldata_ptr_$_t_uint256_$_t_address_$_t_address_$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address[] calldata,uint256,address,address,address) returns (uint256)"
														}
													},
													"id": 964,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4013:57:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 945,
												"id": 965,
												"nodeType": "Return",
												"src": "4006:64:6"
											}
										]
									},
									"documentation": {
										"id": 933,
										"nodeType": "StructuredDocumentation",
										"src": "3764:44:6",
										"text": "@inheritdoc IOmnidexIncentivesController"
									},
									"functionSelector": "3111e7b3",
									"id": 967,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "claimRewards",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 942,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "3918:8:6"
									},
									"parameters": {
										"id": 941,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 936,
												"mutability": "mutable",
												"name": "assets",
												"nodeType": "VariableDeclaration",
												"scope": 967,
												"src": "3840:25:6",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 934,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "3840:7:6",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 935,
													"nodeType": "ArrayTypeName",
													"src": "3840:9:6",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 938,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 967,
												"src": "3872:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 937,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3872:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 940,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 967,
												"src": "3893:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 939,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3893:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3833:75:6"
									},
									"returnParameters": {
										"id": 945,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 944,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 967,
												"src": "3936:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 943,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3936:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3935:9:6"
									},
									"scope": 1263,
									"src": "3812:264:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										2043
									],
									"body": {
										"id": 1017,
										"nodeType": "Block",
										"src": "4331:183:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 994,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 989,
																"name": "user",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 975,
																"src": "4346:4:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 992,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "4362:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 991,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "4354:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 990,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "4354:7:6",
																		"typeDescriptions": {}
																	}
																},
																"id": 993,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4354:10:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "4346:18:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "494e56414c49445f555345525f41444452455353",
															"id": 995,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4366:22:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_4058a4fa702d397682b400d1a2d7894f822738ac481455440aeb37a04a780eca",
																"typeString": "literal_string \"INVALID_USER_ADDRESS\""
															},
															"value": "INVALID_USER_ADDRESS"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_4058a4fa702d397682b400d1a2d7894f822738ac481455440aeb37a04a780eca",
																"typeString": "literal_string \"INVALID_USER_ADDRESS\""
															}
														],
														"id": 988,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "4338:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 996,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4338:51:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 997,
												"nodeType": "ExpressionStatement",
												"src": "4338:51:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1004,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 999,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 977,
																"src": "4404:2:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 1002,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "4418:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1001,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "4410:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1000,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "4410:7:6",
																		"typeDescriptions": {}
																	}
																},
																"id": 1003,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4410:10:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "4404:16:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "494e56414c49445f544f5f41444452455353",
															"id": 1005,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4422:20:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_60a6ecd9d15a2e4ae360b5943de5e7d94204c8fa7a9b93d3208a26418697ceb3",
																"typeString": "literal_string \"INVALID_TO_ADDRESS\""
															},
															"value": "INVALID_TO_ADDRESS"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_60a6ecd9d15a2e4ae360b5943de5e7d94204c8fa7a9b93d3208a26418697ceb3",
																"typeString": "literal_string \"INVALID_TO_ADDRESS\""
															}
														],
														"id": 998,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "4396:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1006,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4396:47:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1007,
												"nodeType": "ExpressionStatement",
												"src": "4396:47:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1009,
															"name": "assets",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 971,
															"src": "4471:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
																"typeString": "address[] calldata"
															}
														},
														{
															"id": 1010,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 973,
															"src": "4479:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"expression": {
																"id": 1011,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": -15,
																"src": "4487:3:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1012,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "4487:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"id": 1013,
															"name": "user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 975,
															"src": "4499:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1014,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 977,
															"src": "4505:2:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
																"typeString": "address[] calldata"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1008,
														"name": "_claimRewards",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1254,
															1692
														],
														"referencedDeclaration": 1254,
														"src": "4457:13:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_array$_t_address_$dyn_calldata_ptr_$_t_uint256_$_t_address_$_t_address_$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address[] calldata,uint256,address,address,address) returns (uint256)"
														}
													},
													"id": 1015,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4457:51:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 987,
												"id": 1016,
												"nodeType": "Return",
												"src": "4450:58:6"
											}
										]
									},
									"documentation": {
										"id": 968,
										"nodeType": "StructuredDocumentation",
										"src": "4082:44:6",
										"text": "@inheritdoc IOmnidexIncentivesController"
									},
									"functionSelector": "6d34b96e",
									"id": 1018,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"expression": {
														"id": 981,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": -15,
														"src": "4295:3:6",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 982,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "4295:10:6",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												{
													"id": 983,
													"name": "user",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 975,
													"src": "4307:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												}
											],
											"id": 984,
											"modifierName": {
												"id": 980,
												"name": "onlyAuthorizedClaimers",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 687,
												"src": "4272:22:6",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$_t_address_$_t_address_$",
													"typeString": "modifier (address,address)"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "4272:40:6"
										}
									],
									"name": "claimRewardsOnBehalf",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 979,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "4263:8:6"
									},
									"parameters": {
										"id": 978,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 971,
												"mutability": "mutable",
												"name": "assets",
												"nodeType": "VariableDeclaration",
												"scope": 1018,
												"src": "4166:25:6",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 969,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "4166:7:6",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 970,
													"nodeType": "ArrayTypeName",
													"src": "4166:9:6",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 973,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 1018,
												"src": "4198:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 972,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4198:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 975,
												"mutability": "mutable",
												"name": "user",
												"nodeType": "VariableDeclaration",
												"scope": 1018,
												"src": "4219:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 974,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4219:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 977,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 1018,
												"src": "4238:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 976,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4238:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4159:94:6"
									},
									"returnParameters": {
										"id": 987,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 986,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1018,
												"src": "4322:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 985,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4322:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4321:9:6"
									},
									"scope": 1263,
									"src": "4130:384:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										2054
									],
									"body": {
										"id": 1041,
										"nodeType": "Block",
										"src": "4693:85:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1031,
															"name": "assets",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1022,
															"src": "4721:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
																"typeString": "address[] calldata"
															}
														},
														{
															"id": 1032,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1024,
															"src": "4729:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"expression": {
																"id": 1033,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": -15,
																"src": "4737:3:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1034,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "4737:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"expression": {
																"id": 1035,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": -15,
																"src": "4749:3:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1036,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "4749:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"expression": {
																"id": 1037,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": -15,
																"src": "4761:3:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1038,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "4761:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
																"typeString": "address[] calldata"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														],
														"id": 1030,
														"name": "_claimRewards",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1254,
															1692
														],
														"referencedDeclaration": 1254,
														"src": "4707:13:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_array$_t_address_$dyn_calldata_ptr_$_t_uint256_$_t_address_$_t_address_$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address[] calldata,uint256,address,address,address) returns (uint256)"
														}
													},
													"id": 1039,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4707:65:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1029,
												"id": 1040,
												"nodeType": "Return",
												"src": "4700:72:6"
											}
										]
									},
									"documentation": {
										"id": 1019,
										"nodeType": "StructuredDocumentation",
										"src": "4520:44:6",
										"text": "@inheritdoc IOmnidexIncentivesController"
									},
									"functionSelector": "41485304",
									"id": 1042,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "claimRewardsToSelf",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1026,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "4658:8:6"
									},
									"parameters": {
										"id": 1025,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1022,
												"mutability": "mutable",
												"name": "assets",
												"nodeType": "VariableDeclaration",
												"scope": 1042,
												"src": "4596:25:6",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 1020,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "4596:7:6",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 1021,
													"nodeType": "ArrayTypeName",
													"src": "4596:9:6",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1024,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 1042,
												"src": "4623:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1023,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4623:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4595:43:6"
									},
									"returnParameters": {
										"id": 1029,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1028,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1042,
												"src": "4681:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1027,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4681:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4680:9:6"
									},
									"scope": 1263,
									"src": "4568:210:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										1976
									],
									"body": {
										"id": 1064,
										"nodeType": "Block",
										"src": "4920:83:6",
										"statements": [
											{
												"expression": {
													"id": 1057,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1053,
															"name": "_authorizedClaimers",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 670,
															"src": "4927:19:6",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_address_$",
																"typeString": "mapping(address => address)"
															}
														},
														"id": 1055,
														"indexExpression": {
															"id": 1054,
															"name": "user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1045,
															"src": "4947:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "4927:25:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1056,
														"name": "caller",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1047,
														"src": "4955:6:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "4927:34:6",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1058,
												"nodeType": "ExpressionStatement",
												"src": "4927:34:6"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1060,
															"name": "user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1045,
															"src": "4984:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1061,
															"name": "caller",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1047,
															"src": "4990:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1059,
														"name": "ClaimerSet",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1968,
														"src": "4973:10:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 1062,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4973:24:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1063,
												"nodeType": "EmitStatement",
												"src": "4968:29:6"
											}
										]
									},
									"documentation": {
										"id": 1043,
										"nodeType": "StructuredDocumentation",
										"src": "4784:44:6",
										"text": "@inheritdoc IOmnidexIncentivesController"
									},
									"functionSelector": "f5cf673b",
									"id": 1065,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1051,
											"modifierName": {
												"id": 1050,
												"name": "onlyEmissionManager",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 1312,
												"src": "4900:19:6",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "4900:19:6"
										}
									],
									"name": "setClaimer",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1049,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "4891:8:6"
									},
									"parameters": {
										"id": 1048,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1045,
												"mutability": "mutable",
												"name": "user",
												"nodeType": "VariableDeclaration",
												"scope": 1065,
												"src": "4852:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1044,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4852:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1047,
												"mutability": "mutable",
												"name": "caller",
												"nodeType": "VariableDeclaration",
												"scope": 1065,
												"src": "4866:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1046,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4866:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4851:30:6"
									},
									"returnParameters": {
										"id": 1052,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4920:0:6"
									},
									"scope": 1263,
									"src": "4832:171:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										1984
									],
									"body": {
										"id": 1078,
										"nodeType": "Block",
										"src": "5132:45:6",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 1074,
														"name": "_authorizedClaimers",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 670,
														"src": "5146:19:6",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_address_$",
															"typeString": "mapping(address => address)"
														}
													},
													"id": 1076,
													"indexExpression": {
														"id": 1075,
														"name": "user",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1068,
														"src": "5166:4:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "5146:25:6",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 1073,
												"id": 1077,
												"nodeType": "Return",
												"src": "5139:32:6"
											}
										]
									},
									"documentation": {
										"id": 1066,
										"nodeType": "StructuredDocumentation",
										"src": "5009:44:6",
										"text": "@inheritdoc IOmnidexIncentivesController"
									},
									"functionSelector": "74d945ec",
									"id": 1079,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getClaimer",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1070,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "5105:8:6"
									},
									"parameters": {
										"id": 1069,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1068,
												"mutability": "mutable",
												"name": "user",
												"nodeType": "VariableDeclaration",
												"scope": 1079,
												"src": "5077:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1067,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5077:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5076:14:6"
									},
									"returnParameters": {
										"id": 1073,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1072,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1079,
												"src": "5123:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1071,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5123:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5122:9:6"
									},
									"scope": 1263,
									"src": "5057:120:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										2062
									],
									"body": {
										"id": 1092,
										"nodeType": "Block",
										"src": "5320:49:6",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 1088,
														"name": "_usersUnclaimedRewards",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 666,
														"src": "5334:22:6",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 1090,
													"indexExpression": {
														"id": 1089,
														"name": "_user",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1082,
														"src": "5357:5:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "5334:29:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1087,
												"id": 1091,
												"nodeType": "Return",
												"src": "5327:36:6"
											}
										]
									},
									"documentation": {
										"id": 1080,
										"nodeType": "StructuredDocumentation",
										"src": "5183:44:6",
										"text": "@inheritdoc IOmnidexIncentivesController"
									},
									"functionSelector": "198fa81e",
									"id": 1093,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getUserUnclaimedRewards",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1084,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "5293:8:6"
									},
									"parameters": {
										"id": 1083,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1082,
												"mutability": "mutable",
												"name": "_user",
												"nodeType": "VariableDeclaration",
												"scope": 1093,
												"src": "5264:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1081,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5264:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5263:15:6"
									},
									"returnParameters": {
										"id": 1087,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1086,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1093,
												"src": "5311:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1085,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5311:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5310:9:6"
									},
									"scope": 1263,
									"src": "5231:138:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										528
									],
									"body": {
										"id": 1102,
										"nodeType": "Block",
										"src": "5516:28:6",
										"statements": [
											{
												"expression": {
													"id": 1100,
													"name": "REVISION",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 659,
													"src": "5530:8:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1099,
												"id": 1101,
												"nodeType": "Return",
												"src": "5523:15:6"
											}
										]
									},
									"documentation": {
										"id": 1094,
										"nodeType": "StructuredDocumentation",
										"src": "5375:73:6",
										"text": " @dev returns the revision of the implementation contract"
									},
									"id": 1103,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getRevision",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1096,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "5489:8:6"
									},
									"parameters": {
										"id": 1095,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5472:2:6"
									},
									"returnParameters": {
										"id": 1099,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1098,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1103,
												"src": "5507:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1097,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5507:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5506:9:6"
									},
									"scope": 1263,
									"src": "5452:92:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1253,
										"nodeType": "Block",
										"src": "6041:1155:6",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1122,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1120,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1109,
														"src": "6052:6:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 1121,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6062:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "6052:11:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1126,
												"nodeType": "IfStatement",
												"src": "6048:42:6",
												"trueBody": {
													"id": 1125,
													"nodeType": "Block",
													"src": "6065:25:6",
													"statements": [
														{
															"expression": {
																"hexValue": "30",
																"id": 1123,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6081:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"functionReturnParameters": 1119,
															"id": 1124,
															"nodeType": "Return",
															"src": "6074:8:6"
														}
													]
												}
											},
											{
												"assignments": [
													1128
												],
												"declarations": [
													{
														"constant": false,
														"id": 1128,
														"mutability": "mutable",
														"name": "unclaimedRewards",
														"nodeType": "VariableDeclaration",
														"scope": 1253,
														"src": "6096:24:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1127,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "6096:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1132,
												"initialValue": {
													"baseExpression": {
														"id": 1129,
														"name": "_usersUnclaimedRewards",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 666,
														"src": "6123:22:6",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 1131,
													"indexExpression": {
														"id": 1130,
														"name": "user",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1113,
														"src": "6146:4:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "6123:28:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6096:55:6"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1135,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1133,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1109,
														"src": "6164:6:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"id": 1134,
														"name": "unclaimedRewards",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1128,
														"src": "6173:16:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "6164:25:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1214,
												"nodeType": "IfStatement",
												"src": "6160:649:6",
												"trueBody": {
													"id": 1213,
													"nodeType": "Block",
													"src": "6191:618:6",
													"statements": [
														{
															"assignments": [
																1140
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1140,
																	"mutability": "mutable",
																	"name": "userState",
																	"nodeType": "VariableDeclaration",
																	"scope": 1213,
																	"src": "6200:51:6",
																	"stateVariable": false,
																	"storageLocation": "memory",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_struct$_UserStakeInput_$2113_memory_ptr_$dyn_memory_ptr",
																		"typeString": "struct DistributionTypes.UserStakeInput[]"
																	},
																	"typeName": {
																		"baseType": {
																			"id": 1138,
																			"name": "DistributionTypes.UserStakeInput",
																			"nodeType": "UserDefinedTypeName",
																			"referencedDeclaration": 2113,
																			"src": "6200:32:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_UserStakeInput_$2113_storage_ptr",
																				"typeString": "struct DistributionTypes.UserStakeInput"
																			}
																		},
																		"id": 1139,
																		"nodeType": "ArrayTypeName",
																		"src": "6200:34:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_struct$_UserStakeInput_$2113_storage_$dyn_storage_ptr",
																			"typeString": "struct DistributionTypes.UserStakeInput[]"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1147,
															"initialValue": {
																"arguments": [
																	{
																		"expression": {
																			"id": 1144,
																			"name": "assets",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1107,
																			"src": "6302:6:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
																				"typeString": "address[] calldata"
																			}
																		},
																		"id": 1145,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "length",
																		"nodeType": "MemberAccess",
																		"src": "6302:13:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1143,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "NewExpression",
																	"src": "6263:38:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_struct$_UserStakeInput_$2113_memory_ptr_$dyn_memory_ptr_$",
																		"typeString": "function (uint256) pure returns (struct DistributionTypes.UserStakeInput memory[] memory)"
																	},
																	"typeName": {
																		"baseType": {
																			"id": 1141,
																			"name": "DistributionTypes.UserStakeInput",
																			"nodeType": "UserDefinedTypeName",
																			"referencedDeclaration": 2113,
																			"src": "6267:32:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_UserStakeInput_$2113_storage_ptr",
																				"typeString": "struct DistributionTypes.UserStakeInput"
																			}
																		},
																		"id": 1142,
																		"nodeType": "ArrayTypeName",
																		"src": "6267:34:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_struct$_UserStakeInput_$2113_storage_$dyn_storage_ptr",
																			"typeString": "struct DistributionTypes.UserStakeInput[]"
																		}
																	}
																},
																"id": 1146,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6263:53:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_array$_t_struct$_UserStakeInput_$2113_memory_ptr_$dyn_memory_ptr",
																	"typeString": "struct DistributionTypes.UserStakeInput memory[] memory"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "6200:116:6"
														},
														{
															"body": {
																"id": 1187,
																"nodeType": "Block",
																"src": "6369:206:6",
																"statements": [
																	{
																		"expression": {
																			"id": 1166,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"expression": {
																					"baseExpression": {
																						"id": 1159,
																						"name": "userState",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1140,
																						"src": "6380:9:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_array$_t_struct$_UserStakeInput_$2113_memory_ptr_$dyn_memory_ptr",
																							"typeString": "struct DistributionTypes.UserStakeInput memory[] memory"
																						}
																					},
																					"id": 1161,
																					"indexExpression": {
																						"id": 1160,
																						"name": "i",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1149,
																						"src": "6390:1:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "IndexAccess",
																					"src": "6380:12:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_UserStakeInput_$2113_memory_ptr",
																						"typeString": "struct DistributionTypes.UserStakeInput memory"
																					}
																				},
																				"id": 1162,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": true,
																				"memberName": "underlyingAsset",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 2108,
																				"src": "6380:28:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"baseExpression": {
																					"id": 1163,
																					"name": "assets",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1107,
																					"src": "6411:6:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
																						"typeString": "address[] calldata"
																					}
																				},
																				"id": 1165,
																				"indexExpression": {
																					"id": 1164,
																					"name": "i",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1149,
																					"src": "6418:1:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "IndexAccess",
																				"src": "6411:9:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"src": "6380:40:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"id": 1167,
																		"nodeType": "ExpressionStatement",
																		"src": "6380:40:6"
																	},
																	{
																		"expression": {
																			"id": 1185,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"components": [
																					{
																						"expression": {
																							"baseExpression": {
																								"id": 1168,
																								"name": "userState",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1140,
																								"src": "6432:9:6",
																								"typeDescriptions": {
																									"typeIdentifier": "t_array$_t_struct$_UserStakeInput_$2113_memory_ptr_$dyn_memory_ptr",
																									"typeString": "struct DistributionTypes.UserStakeInput memory[] memory"
																								}
																							},
																							"id": 1170,
																							"indexExpression": {
																								"id": 1169,
																								"name": "i",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1149,
																								"src": "6442:1:6",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"isConstant": false,
																							"isLValue": true,
																							"isPure": false,
																							"lValueRequested": false,
																							"nodeType": "IndexAccess",
																							"src": "6432:12:6",
																							"typeDescriptions": {
																								"typeIdentifier": "t_struct$_UserStakeInput_$2113_memory_ptr",
																								"typeString": "struct DistributionTypes.UserStakeInput memory"
																							}
																						},
																						"id": 1171,
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": true,
																						"memberName": "stakedByUser",
																						"nodeType": "MemberAccess",
																						"referencedDeclaration": 2110,
																						"src": "6432:25:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					{
																						"expression": {
																							"baseExpression": {
																								"id": 1172,
																								"name": "userState",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1140,
																								"src": "6459:9:6",
																								"typeDescriptions": {
																									"typeIdentifier": "t_array$_t_struct$_UserStakeInput_$2113_memory_ptr_$dyn_memory_ptr",
																									"typeString": "struct DistributionTypes.UserStakeInput memory[] memory"
																								}
																							},
																							"id": 1174,
																							"indexExpression": {
																								"id": 1173,
																								"name": "i",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1149,
																								"src": "6469:1:6",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"isConstant": false,
																							"isLValue": true,
																							"isPure": false,
																							"lValueRequested": false,
																							"nodeType": "IndexAccess",
																							"src": "6459:12:6",
																							"typeDescriptions": {
																								"typeIdentifier": "t_struct$_UserStakeInput_$2113_memory_ptr",
																								"typeString": "struct DistributionTypes.UserStakeInput memory"
																							}
																						},
																						"id": 1175,
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": true,
																						"memberName": "totalStaked",
																						"nodeType": "MemberAccess",
																						"referencedDeclaration": 2112,
																						"src": "6459:24:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					}
																				],
																				"id": 1176,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": true,
																				"nodeType": "TupleExpression",
																				"src": "6431:53:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
																					"typeString": "tuple(uint256,uint256)"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"arguments": [
																					{
																						"id": 1183,
																						"name": "user",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1113,
																						"src": "6560:4:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					],
																					"expression": {
																						"arguments": [
																							{
																								"baseExpression": {
																									"id": 1178,
																									"name": "assets",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 1107,
																									"src": "6507:6:6",
																									"typeDescriptions": {
																										"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
																										"typeString": "address[] calldata"
																									}
																								},
																								"id": 1180,
																								"indexExpression": {
																									"id": 1179,
																									"name": "i",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 1149,
																									"src": "6514:1:6",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"nodeType": "IndexAccess",
																								"src": "6507:9:6",
																								"typeDescriptions": {
																									"typeIdentifier": "t_address",
																									"typeString": "address"
																								}
																							}
																						],
																						"expression": {
																							"argumentTypes": [
																								{
																									"typeIdentifier": "t_address",
																									"typeString": "address"
																								}
																							],
																							"id": 1177,
																							"name": "IScaledBalanceToken",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 2096,
																							"src": "6487:19:6",
																							"typeDescriptions": {
																								"typeIdentifier": "t_type$_t_contract$_IScaledBalanceToken_$2096_$",
																								"typeString": "type(contract IScaledBalanceToken)"
																							}
																						},
																						"id": 1181,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"kind": "typeConversion",
																						"lValueRequested": false,
																						"names": [],
																						"nodeType": "FunctionCall",
																						"src": "6487:30:6",
																						"tryCall": false,
																						"typeDescriptions": {
																							"typeIdentifier": "t_contract$_IScaledBalanceToken_$2096",
																							"typeString": "contract IScaledBalanceToken"
																						}
																					},
																					"id": 1182,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberName": "getScaledUserBalanceAndSupply",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 2089,
																					"src": "6487:72:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$_t_uint256_$",
																						"typeString": "function (address) view external returns (uint256,uint256)"
																					}
																				},
																				"id": 1184,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "6487:78:6",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
																					"typeString": "tuple(uint256,uint256)"
																				}
																			},
																			"src": "6431:134:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 1186,
																		"nodeType": "ExpressionStatement",
																		"src": "6431:134:6"
																	}
																]
															},
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1155,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1152,
																	"name": "i",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1149,
																	"src": "6345:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"expression": {
																		"id": 1153,
																		"name": "assets",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1107,
																		"src": "6349:6:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
																			"typeString": "address[] calldata"
																		}
																	},
																	"id": 1154,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "length",
																	"nodeType": "MemberAccess",
																	"src": "6349:13:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6345:17:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1188,
															"initializationExpression": {
																"assignments": [
																	1149
																],
																"declarations": [
																	{
																		"constant": false,
																		"id": 1149,
																		"mutability": "mutable",
																		"name": "i",
																		"nodeType": "VariableDeclaration",
																		"scope": 1188,
																		"src": "6330:9:6",
																		"stateVariable": false,
																		"storageLocation": "default",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"typeName": {
																			"id": 1148,
																			"name": "uint256",
																			"nodeType": "ElementaryTypeName",
																			"src": "6330:7:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"visibility": "internal"
																	}
																],
																"id": 1151,
																"initialValue": {
																	"hexValue": "30",
																	"id": 1150,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "6342:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"nodeType": "VariableDeclarationStatement",
																"src": "6330:13:6"
															},
															"loopExpression": {
																"expression": {
																	"id": 1157,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "UnaryOperation",
																	"operator": "++",
																	"prefix": false,
																	"src": "6364:3:6",
																	"subExpression": {
																		"id": 1156,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1149,
																		"src": "6364:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 1158,
																"nodeType": "ExpressionStatement",
																"src": "6364:3:6"
															},
															"nodeType": "ForStatement",
															"src": "6325:250:6"
														},
														{
															"assignments": [
																1190
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1190,
																	"mutability": "mutable",
																	"name": "accruedRewards",
																	"nodeType": "VariableDeclaration",
																	"scope": 1213,
																	"src": "6585:22:6",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 1189,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "6585:7:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1195,
															"initialValue": {
																"arguments": [
																	{
																		"id": 1192,
																		"name": "user",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1113,
																		"src": "6624:4:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1193,
																		"name": "userState",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1140,
																		"src": "6630:9:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_struct$_UserStakeInput_$2113_memory_ptr_$dyn_memory_ptr",
																			"typeString": "struct DistributionTypes.UserStakeInput memory[] memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_array$_t_struct$_UserStakeInput_$2113_memory_ptr_$dyn_memory_ptr",
																			"typeString": "struct DistributionTypes.UserStakeInput memory[] memory"
																		}
																	],
																	"id": 1191,
																	"name": "_claimRewards",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		1254,
																		1692
																	],
																	"referencedDeclaration": 1692,
																	"src": "6610:13:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_array$_t_struct$_UserStakeInput_$2113_memory_ptr_$dyn_memory_ptr_$returns$_t_uint256_$",
																		"typeString": "function (address,struct DistributionTypes.UserStakeInput memory[] memory) returns (uint256)"
																	}
																},
																"id": 1194,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6610:30:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "6585:55:6"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1198,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1196,
																	"name": "accruedRewards",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1190,
																	"src": "6653:14:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "!=",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 1197,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "6671:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "6653:19:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1212,
															"nodeType": "IfStatement",
															"src": "6649:153:6",
															"trueBody": {
																"id": 1211,
																"nodeType": "Block",
																"src": "6674:128:6",
																"statements": [
																	{
																		"expression": {
																			"id": 1204,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"id": 1199,
																				"name": "unclaimedRewards",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1128,
																				"src": "6685:16:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"arguments": [
																					{
																						"id": 1202,
																						"name": "accruedRewards",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1190,
																						"src": "6725:14:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					],
																					"expression": {
																						"id": 1200,
																						"name": "unclaimedRewards",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1128,
																						"src": "6704:16:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"id": 1201,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberName": "add",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 2139,
																					"src": "6704:20:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																						"typeString": "function (uint256,uint256) pure returns (uint256)"
																					}
																				},
																				"id": 1203,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "6704:36:6",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "6685:55:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 1205,
																		"nodeType": "ExpressionStatement",
																		"src": "6685:55:6"
																	},
																	{
																		"eventCall": {
																			"arguments": [
																				{
																					"id": 1207,
																					"name": "user",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1113,
																					"src": "6771:4:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 1208,
																					"name": "accruedRewards",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1190,
																					"src": "6777:14:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 1206,
																				"name": "RewardsAccrued",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1952,
																				"src": "6756:14:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
																					"typeString": "function (address,uint256)"
																				}
																			},
																			"id": 1209,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "6756:36:6",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 1210,
																		"nodeType": "EmitStatement",
																		"src": "6751:41:6"
																	}
																]
															}
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1217,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1215,
														"name": "unclaimedRewards",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1128,
														"src": "6821:16:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 1216,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6841:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "6821:21:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1221,
												"nodeType": "IfStatement",
												"src": "6817:52:6",
												"trueBody": {
													"id": 1220,
													"nodeType": "Block",
													"src": "6844:25:6",
													"statements": [
														{
															"expression": {
																"hexValue": "30",
																"id": 1218,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6860:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"functionReturnParameters": 1119,
															"id": 1219,
															"nodeType": "Return",
															"src": "6853:8:6"
														}
													]
												}
											},
											{
												"assignments": [
													1223
												],
												"declarations": [
													{
														"constant": false,
														"id": 1223,
														"mutability": "mutable",
														"name": "amountToClaim",
														"nodeType": "VariableDeclaration",
														"scope": 1253,
														"src": "6877:21:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1222,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "6877:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1230,
												"initialValue": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1226,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1224,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1109,
															"src": "6901:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"id": 1225,
															"name": "unclaimedRewards",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1128,
															"src": "6910:16:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "6901:25:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 1228,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1109,
														"src": "6948:6:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1229,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "6901:53:6",
													"trueExpression": {
														"id": 1227,
														"name": "unclaimedRewards",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1128,
														"src": "6929:16:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6877:77:6"
											},
											{
												"expression": {
													"id": 1237,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1231,
															"name": "_usersUnclaimedRewards",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 666,
															"src": "6961:22:6",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1233,
														"indexExpression": {
															"id": 1232,
															"name": "user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1113,
															"src": "6984:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "6961:28:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1236,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1234,
															"name": "unclaimedRewards",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1128,
															"src": "6992:16:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "-",
														"rightExpression": {
															"id": 1235,
															"name": "amountToClaim",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1223,
															"src": "7011:13:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "6992:32:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "6961:63:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1238,
												"nodeType": "ExpressionStatement",
												"src": "6961:63:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1240,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1115,
															"src": "7083:2:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1241,
															"name": "amountToClaim",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1223,
															"src": "7087:13:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1239,
														"name": "_transferRewards",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1262,
														"src": "7066:16:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1242,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7066:35:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1243,
												"nodeType": "ExpressionStatement",
												"src": "7066:35:6"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1245,
															"name": "user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1113,
															"src": "7128:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1246,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1115,
															"src": "7134:2:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1247,
															"name": "claimer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1111,
															"src": "7138:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1248,
															"name": "amountToClaim",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1223,
															"src": "7147:13:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1244,
														"name": "RewardsClaimed",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1962,
														"src": "7113:14:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,address,uint256)"
														}
													},
													"id": 1249,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7113:48:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1250,
												"nodeType": "EmitStatement",
												"src": "7108:53:6"
											},
											{
												"expression": {
													"id": 1251,
													"name": "amountToClaim",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1223,
													"src": "7177:13:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1119,
												"id": 1252,
												"nodeType": "Return",
												"src": "7170:20:6"
											}
										]
									},
									"documentation": {
										"id": 1104,
										"nodeType": "StructuredDocumentation",
										"src": "5550:321:6",
										"text": " @dev Claims reward for an user on behalf, on all the assets of the lending pool, accumulating the pending rewards.\n @param amount Amount of rewards to claim\n @param user Address to check and claim rewards\n @param to Address that will be receiving the rewards\n @return Rewards claimed*"
									},
									"id": 1254,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_claimRewards",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1116,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1107,
												"mutability": "mutable",
												"name": "assets",
												"nodeType": "VariableDeclaration",
												"scope": 1254,
												"src": "5904:25:6",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 1105,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "5904:7:6",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 1106,
													"nodeType": "ArrayTypeName",
													"src": "5904:9:6",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1109,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 1254,
												"src": "5936:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1108,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5936:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1111,
												"mutability": "mutable",
												"name": "claimer",
												"nodeType": "VariableDeclaration",
												"scope": 1254,
												"src": "5957:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1110,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5957:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1113,
												"mutability": "mutable",
												"name": "user",
												"nodeType": "VariableDeclaration",
												"scope": 1254,
												"src": "5979:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1112,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5979:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1115,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 1254,
												"src": "5998:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1114,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5998:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5897:116:6"
									},
									"returnParameters": {
										"id": 1119,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1118,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1254,
												"src": "6032:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1117,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6032:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6031:9:6"
									},
									"scope": 1263,
									"src": "5875:1321:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"documentation": {
										"id": 1255,
										"nodeType": "StructuredDocumentation",
										"src": "7202:184:6",
										"text": " @dev Abstract function to transfer rewards to the desired account\n @param to Account address to send the rewards\n @param amount Amount of rewards to transfer"
									},
									"id": 1262,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "_transferRewards",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1260,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1257,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 1262,
												"src": "7416:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1256,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7416:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1259,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 1262,
												"src": "7428:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1258,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7428:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7415:28:6"
									},
									"returnParameters": {
										"id": 1261,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7460:0:6"
									},
									"scope": 1263,
									"src": "7390:71:6",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 1264,
							"src": "815:6649:6"
						}
					],
					"src": "38:7428:6"
				},
				"id": 6
			},
			"contracts/Omnidex-incentives/incentives/base/DistributionManager.sol": {
				"ast": {
					"absolutePath": "contracts/Omnidex-incentives/incentives/base/DistributionManager.sol",
					"exportedSymbols": {
						"DistributionManager": [
							1869
						],
						"DistributionTypes": [
							2114
						],
						"IOmnidexDistributionManager": [
							1939
						],
						"SafeMath": [
							2204
						]
					},
					"id": 1870,
					"license": "agpl-3.0",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1265,
							"literals": [
								"solidity",
								"0.7",
								".5"
							],
							"nodeType": "PragmaDirective",
							"src": "38:22:7"
						},
						{
							"id": 1266,
							"literals": [
								"experimental",
								"ABIEncoderV2"
							],
							"nodeType": "PragmaDirective",
							"src": "62:33:7"
						},
						{
							"absolutePath": "contracts/Omnidex-incentives/interfaces/IOmnidexDistributionManager.sol",
							"file": "../../interfaces/IOmnidexDistributionManager.sol",
							"id": 1268,
							"nodeType": "ImportDirective",
							"scope": 1870,
							"sourceUnit": 1940,
							"src": "99:93:7",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1267,
										"name": "IOmnidexDistributionManager",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"src": "107:27:7",
										"typeDescriptions": {}
									}
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/Omnidex-incentives/lib/SafeMath.sol",
							"file": "../../lib/SafeMath.sol",
							"id": 1270,
							"nodeType": "ImportDirective",
							"scope": 1870,
							"sourceUnit": 2205,
							"src": "194:48:7",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1269,
										"name": "SafeMath",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"src": "202:8:7",
										"typeDescriptions": {}
									}
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/Omnidex-incentives/lib/DistributionTypes.sol",
							"file": "../../lib/DistributionTypes.sol",
							"id": 1272,
							"nodeType": "ImportDirective",
							"scope": 1870,
							"sourceUnit": 2115,
							"src": "244:66:7",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1271,
										"name": "DistributionTypes",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"src": "252:17:7",
										"typeDescriptions": {}
									}
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1274,
										"name": "IOmnidexDistributionManager",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 1939,
										"src": "481:27:7",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IOmnidexDistributionManager_$1939",
											"typeString": "contract IOmnidexDistributionManager"
										}
									},
									"id": 1275,
									"nodeType": "InheritanceSpecifier",
									"src": "481:27:7"
								}
							],
							"contractDependencies": [
								1939
							],
							"contractKind": "contract",
							"documentation": {
								"id": 1273,
								"nodeType": "StructuredDocumentation",
								"src": "314:133:7",
								"text": " @title DistributionManager\n @notice Accounting contract to manage multiple staking distributions\n @author Omnidex*"
							},
							"fullyImplemented": true,
							"id": 1869,
							"linearizedBaseContracts": [
								1869,
								1939
							],
							"name": "DistributionManager",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"id": 1278,
									"libraryName": {
										"id": 1276,
										"name": "SafeMath",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 2204,
										"src": "520:8:7",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_SafeMath_$2204",
											"typeString": "library SafeMath"
										}
									},
									"nodeType": "UsingForDirective",
									"src": "514:27:7",
									"typeName": {
										"id": 1277,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "533:7:7",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"canonicalName": "DistributionManager.AssetData",
									"id": 1289,
									"members": [
										{
											"constant": false,
											"id": 1280,
											"mutability": "mutable",
											"name": "emissionPerSecond",
											"nodeType": "VariableDeclaration",
											"scope": 1289,
											"src": "571:25:7",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint104",
												"typeString": "uint104"
											},
											"typeName": {
												"id": 1279,
												"name": "uint104",
												"nodeType": "ElementaryTypeName",
												"src": "571:7:7",
												"typeDescriptions": {
													"typeIdentifier": "t_uint104",
													"typeString": "uint104"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1282,
											"mutability": "mutable",
											"name": "index",
											"nodeType": "VariableDeclaration",
											"scope": 1289,
											"src": "603:13:7",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint104",
												"typeString": "uint104"
											},
											"typeName": {
												"id": 1281,
												"name": "uint104",
												"nodeType": "ElementaryTypeName",
												"src": "603:7:7",
												"typeDescriptions": {
													"typeIdentifier": "t_uint104",
													"typeString": "uint104"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1284,
											"mutability": "mutable",
											"name": "lastUpdateTimestamp",
											"nodeType": "VariableDeclaration",
											"scope": 1289,
											"src": "623:26:7",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint40",
												"typeString": "uint40"
											},
											"typeName": {
												"id": 1283,
												"name": "uint40",
												"nodeType": "ElementaryTypeName",
												"src": "623:6:7",
												"typeDescriptions": {
													"typeIdentifier": "t_uint40",
													"typeString": "uint40"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1288,
											"mutability": "mutable",
											"name": "users",
											"nodeType": "VariableDeclaration",
											"scope": 1289,
											"src": "656:33:7",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"typeName": {
												"id": 1287,
												"keyType": {
													"id": 1285,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "664:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "Mapping",
												"src": "656:27:7",
												"typeDescriptions": {
													"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
													"typeString": "mapping(address => uint256)"
												},
												"valueType": {
													"id": 1286,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "675:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												}
											},
											"visibility": "internal"
										}
									],
									"name": "AssetData",
									"nodeType": "StructDefinition",
									"scope": 1869,
									"src": "547:148:7",
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "cbcbb507",
									"id": 1291,
									"mutability": "immutable",
									"name": "EMISSION_MANAGER",
									"nodeType": "VariableDeclaration",
									"scope": 1869,
									"src": "701:41:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 1290,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "701:7:7",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "aaf5eb68",
									"id": 1294,
									"mutability": "constant",
									"name": "PRECISION",
									"nodeType": "VariableDeclaration",
									"scope": 1869,
									"src": "749:36:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint8",
										"typeString": "uint8"
									},
									"typeName": {
										"id": 1292,
										"name": "uint8",
										"nodeType": "ElementaryTypeName",
										"src": "749:5:7",
										"typeDescriptions": {
											"typeIdentifier": "t_uint8",
											"typeString": "uint8"
										}
									},
									"value": {
										"hexValue": "3138",
										"id": 1293,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "783:2:7",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_18_by_1",
											"typeString": "int_const 18"
										},
										"value": "18"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "f11b8188",
									"id": 1298,
									"mutability": "mutable",
									"name": "assets",
									"nodeType": "VariableDeclaration",
									"scope": 1869,
									"src": "792:43:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_struct$_AssetData_$1289_storage_$",
										"typeString": "mapping(address => struct DistributionManager.AssetData)"
									},
									"typeName": {
										"id": 1297,
										"keyType": {
											"id": 1295,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "800:7:7",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "792:29:7",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_struct$_AssetData_$1289_storage_$",
											"typeString": "mapping(address => struct DistributionManager.AssetData)"
										},
										"valueType": {
											"id": 1296,
											"name": "AssetData",
											"nodeType": "UserDefinedTypeName",
											"referencedDeclaration": 1289,
											"src": "811:9:7",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_AssetData_$1289_storage_ptr",
												"typeString": "struct DistributionManager.AssetData"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 1300,
									"mutability": "mutable",
									"name": "_distributionEnd",
									"nodeType": "VariableDeclaration",
									"scope": 1869,
									"src": "842:33:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1299,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "842:7:7",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1311,
										"nodeType": "Block",
										"src": "913:85:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1306,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 1303,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": -15,
																	"src": "928:3:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 1304,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "928:10:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"id": 1305,
																"name": "EMISSION_MANAGER",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1291,
																"src": "942:16:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "928:30:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f4e4c595f454d495353494f4e5f4d414e41474552",
															"id": 1307,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "960:23:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_a28d34ff463a8cc689c6ec4b8c995983f85d0a40987242bc4cc3cec37303c18e",
																"typeString": "literal_string \"ONLY_EMISSION_MANAGER\""
															},
															"value": "ONLY_EMISSION_MANAGER"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_a28d34ff463a8cc689c6ec4b8c995983f85d0a40987242bc4cc3cec37303c18e",
																"typeString": "literal_string \"ONLY_EMISSION_MANAGER\""
															}
														],
														"id": 1302,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "920:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1308,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "920:64:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1309,
												"nodeType": "ExpressionStatement",
												"src": "920:64:7"
											},
											{
												"id": 1310,
												"nodeType": "PlaceholderStatement",
												"src": "991:1:7"
											}
										]
									},
									"id": 1312,
									"name": "onlyEmissionManager",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 1301,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "910:2:7"
									},
									"src": "882:116:7",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1321,
										"nodeType": "Block",
										"src": "1041:47:7",
										"statements": [
											{
												"expression": {
													"id": 1319,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1317,
														"name": "EMISSION_MANAGER",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1291,
														"src": "1048:16:7",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1318,
														"name": "emissionManager",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1314,
														"src": "1067:15:7",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1048:34:7",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1320,
												"nodeType": "ExpressionStatement",
												"src": "1048:34:7"
											}
										]
									},
									"id": 1322,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1315,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1314,
												"mutability": "mutable",
												"name": "emissionManager",
												"nodeType": "VariableDeclaration",
												"scope": 1322,
												"src": "1016:23:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1313,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1016:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1015:25:7"
									},
									"returnParameters": {
										"id": 1316,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1041:0:7"
									},
									"scope": 1869,
									"src": "1004:84:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1904
									],
									"body": {
										"id": 1339,
										"nodeType": "Block",
										"src": "1232:98:7",
										"statements": [
											{
												"expression": {
													"id": 1333,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1331,
														"name": "_distributionEnd",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1300,
														"src": "1239:16:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1332,
														"name": "distributionEnd",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1325,
														"src": "1258:15:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1239:34:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1334,
												"nodeType": "ExpressionStatement",
												"src": "1239:34:7"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1336,
															"name": "distributionEnd",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1325,
															"src": "1308:15:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1335,
														"name": "DistributionEndUpdated",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1898,
														"src": "1285:22:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 1337,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1285:39:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1338,
												"nodeType": "EmitStatement",
												"src": "1280:44:7"
											}
										]
									},
									"documentation": {
										"id": 1323,
										"nodeType": "StructuredDocumentation",
										"src": "1094:43:7",
										"text": "@inheritdoc IOmnidexDistributionManager"
									},
									"functionSelector": "39ccbdd3",
									"id": 1340,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1329,
											"modifierName": {
												"id": 1328,
												"name": "onlyEmissionManager",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 1312,
												"src": "1212:19:7",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "1212:19:7"
										}
									],
									"name": "setDistributionEnd",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1327,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "1203:8:7"
									},
									"parameters": {
										"id": 1326,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1325,
												"mutability": "mutable",
												"name": "distributionEnd",
												"nodeType": "VariableDeclaration",
												"scope": 1340,
												"src": "1169:23:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1324,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1169:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1168:25:7"
									},
									"returnParameters": {
										"id": 1330,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1232:0:7"
									},
									"scope": 1869,
									"src": "1141:189:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										1910
									],
									"body": {
										"id": 1349,
										"nodeType": "Block",
										"src": "1454:36:7",
										"statements": [
											{
												"expression": {
													"id": 1347,
													"name": "_distributionEnd",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1300,
													"src": "1468:16:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1346,
												"id": 1348,
												"nodeType": "Return",
												"src": "1461:23:7"
											}
										]
									},
									"documentation": {
										"id": 1341,
										"nodeType": "StructuredDocumentation",
										"src": "1336:43:7",
										"text": "@inheritdoc IOmnidexDistributionManager"
									},
									"functionSelector": "cc69afec",
									"id": 1350,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getDistributionEnd",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1343,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "1427:8:7"
									},
									"parameters": {
										"id": 1342,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1410:2:7"
									},
									"returnParameters": {
										"id": 1346,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1345,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1350,
												"src": "1445:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1344,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1445:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1444:9:7"
									},
									"scope": 1869,
									"src": "1383:107:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										1916
									],
									"body": {
										"id": 1359,
										"nodeType": "Block",
										"src": "1612:36:7",
										"statements": [
											{
												"expression": {
													"id": 1357,
													"name": "_distributionEnd",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1300,
													"src": "1626:16:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1356,
												"id": 1358,
												"nodeType": "Return",
												"src": "1619:23:7"
											}
										]
									},
									"documentation": {
										"id": 1351,
										"nodeType": "StructuredDocumentation",
										"src": "1496:43:7",
										"text": "@inheritdoc IOmnidexDistributionManager"
									},
									"functionSelector": "919cd40f",
									"id": 1360,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "DISTRIBUTION_END",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1353,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "1585:8:7"
									},
									"parameters": {
										"id": 1352,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1568:2:7"
									},
									"returnParameters": {
										"id": 1356,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1355,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1360,
												"src": "1603:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1354,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1603:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1602:9:7"
									},
									"scope": 1869,
									"src": "1543:105:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										1926
									],
									"body": {
										"id": 1378,
										"nodeType": "Block",
										"src": "1795:45:7",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"expression": {
															"baseExpression": {
																"id": 1371,
																"name": "assets",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1298,
																"src": "1809:6:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_struct$_AssetData_$1289_storage_$",
																	"typeString": "mapping(address => struct DistributionManager.AssetData storage ref)"
																}
															},
															"id": 1373,
															"indexExpression": {
																"id": 1372,
																"name": "asset",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1365,
																"src": "1816:5:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "1809:13:7",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_AssetData_$1289_storage",
																"typeString": "struct DistributionManager.AssetData storage ref"
															}
														},
														"id": 1374,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "users",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1288,
														"src": "1809:19:7",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 1376,
													"indexExpression": {
														"id": 1375,
														"name": "user",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1363,
														"src": "1829:4:7",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "1809:25:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1370,
												"id": 1377,
												"nodeType": "Return",
												"src": "1802:32:7"
											}
										]
									},
									"documentation": {
										"id": 1361,
										"nodeType": "StructuredDocumentation",
										"src": "1654:43:7",
										"text": "@inheritdoc IOmnidexDistributionManager"
									},
									"functionSelector": "3373ee4c",
									"id": 1379,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getUserAssetData",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1367,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "1768:8:7"
									},
									"parameters": {
										"id": 1366,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1363,
												"mutability": "mutable",
												"name": "user",
												"nodeType": "VariableDeclaration",
												"scope": 1379,
												"src": "1727:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1362,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1727:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1365,
												"mutability": "mutable",
												"name": "asset",
												"nodeType": "VariableDeclaration",
												"scope": 1379,
												"src": "1741:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1364,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1741:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1726:29:7"
									},
									"returnParameters": {
										"id": 1370,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1369,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1379,
												"src": "1786:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1368,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1786:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1785:9:7"
									},
									"scope": 1869,
									"src": "1701:139:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1938
									],
									"body": {
										"id": 1406,
										"nodeType": "Block",
										"src": "1987:109:7",
										"statements": [
											{
												"expression": {
													"components": [
														{
															"expression": {
																"baseExpression": {
																	"id": 1392,
																	"name": "assets",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1298,
																	"src": "2002:6:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_struct$_AssetData_$1289_storage_$",
																		"typeString": "mapping(address => struct DistributionManager.AssetData storage ref)"
																	}
																},
																"id": 1394,
																"indexExpression": {
																	"id": 1393,
																	"name": "asset",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1382,
																	"src": "2009:5:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "2002:13:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_AssetData_$1289_storage",
																	"typeString": "struct DistributionManager.AssetData storage ref"
																}
															},
															"id": 1395,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "index",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1282,
															"src": "2002:19:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint104",
																"typeString": "uint104"
															}
														},
														{
															"expression": {
																"baseExpression": {
																	"id": 1396,
																	"name": "assets",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1298,
																	"src": "2023:6:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_struct$_AssetData_$1289_storage_$",
																		"typeString": "mapping(address => struct DistributionManager.AssetData storage ref)"
																	}
																},
																"id": 1398,
																"indexExpression": {
																	"id": 1397,
																	"name": "asset",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1382,
																	"src": "2030:5:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "2023:13:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_AssetData_$1289_storage",
																	"typeString": "struct DistributionManager.AssetData storage ref"
																}
															},
															"id": 1399,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "emissionPerSecond",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1280,
															"src": "2023:31:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint104",
																"typeString": "uint104"
															}
														},
														{
															"expression": {
																"baseExpression": {
																	"id": 1400,
																	"name": "assets",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1298,
																	"src": "2056:6:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_struct$_AssetData_$1289_storage_$",
																		"typeString": "mapping(address => struct DistributionManager.AssetData storage ref)"
																	}
																},
																"id": 1402,
																"indexExpression": {
																	"id": 1401,
																	"name": "asset",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1382,
																	"src": "2063:5:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "2056:13:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_AssetData_$1289_storage",
																	"typeString": "struct DistributionManager.AssetData storage ref"
																}
															},
															"id": 1403,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "lastUpdateTimestamp",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1284,
															"src": "2056:33:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint40",
																"typeString": "uint40"
															}
														}
													],
													"id": 1404,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "2001:89:7",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_uint104_$_t_uint104_$_t_uint40_$",
														"typeString": "tuple(uint104,uint104,uint40)"
													}
												},
												"functionReturnParameters": 1391,
												"id": 1405,
												"nodeType": "Return",
												"src": "1994:96:7"
											}
										]
									},
									"documentation": {
										"id": 1380,
										"nodeType": "StructuredDocumentation",
										"src": "1846:43:7",
										"text": "@inheritdoc IOmnidexDistributionManager"
									},
									"functionSelector": "1652e7b7",
									"id": 1407,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getAssetData",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1384,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "1942:8:7"
									},
									"parameters": {
										"id": 1383,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1382,
												"mutability": "mutable",
												"name": "asset",
												"nodeType": "VariableDeclaration",
												"scope": 1407,
												"src": "1915:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1381,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1915:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1914:15:7"
									},
									"returnParameters": {
										"id": 1391,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1386,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1407,
												"src": "1960:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1385,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1960:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1388,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1407,
												"src": "1969:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1387,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1969:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1390,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1407,
												"src": "1978:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1389,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1978:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1959:27:7"
									},
									"scope": 1869,
									"src": "1893:203:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1468,
										"nodeType": "Block",
										"src": "2348:537:7",
										"statements": [
											{
												"body": {
													"id": 1466,
													"nodeType": "Block",
													"src": "2410:470:7",
													"statements": [
														{
															"assignments": [
																1426
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1426,
																	"mutability": "mutable",
																	"name": "assetConfig",
																	"nodeType": "VariableDeclaration",
																	"scope": 1466,
																	"src": "2419:29:7",
																	"stateVariable": false,
																	"storageLocation": "storage",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_AssetData_$1289_storage_ptr",
																		"typeString": "struct DistributionManager.AssetData"
																	},
																	"typeName": {
																		"id": 1425,
																		"name": "AssetData",
																		"nodeType": "UserDefinedTypeName",
																		"referencedDeclaration": 1289,
																		"src": "2419:9:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_AssetData_$1289_storage_ptr",
																			"typeString": "struct DistributionManager.AssetData"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1433,
															"initialValue": {
																"baseExpression": {
																	"id": 1427,
																	"name": "assets",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1298,
																	"src": "2451:6:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_struct$_AssetData_$1289_storage_$",
																		"typeString": "mapping(address => struct DistributionManager.AssetData storage ref)"
																	}
																},
																"id": 1432,
																"indexExpression": {
																	"expression": {
																		"baseExpression": {
																			"id": 1428,
																			"name": "assetsConfigInput",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1411,
																			"src": "2458:17:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_array$_t_struct$_AssetConfigInput_$2106_memory_ptr_$dyn_memory_ptr",
																				"typeString": "struct DistributionTypes.AssetConfigInput memory[] memory"
																			}
																		},
																		"id": 1430,
																		"indexExpression": {
																			"id": 1429,
																			"name": "i",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1415,
																			"src": "2476:1:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "2458:20:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_AssetConfigInput_$2106_memory_ptr",
																			"typeString": "struct DistributionTypes.AssetConfigInput memory"
																		}
																	},
																	"id": 1431,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "underlyingAsset",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 2105,
																	"src": "2458:36:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "2451:44:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_AssetData_$1289_storage",
																	"typeString": "struct DistributionManager.AssetData storage ref"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "2419:76:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"expression": {
																			"baseExpression": {
																				"id": 1435,
																				"name": "assetsConfigInput",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1411,
																				"src": "2542:17:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_array$_t_struct$_AssetConfigInput_$2106_memory_ptr_$dyn_memory_ptr",
																					"typeString": "struct DistributionTypes.AssetConfigInput memory[] memory"
																				}
																			},
																			"id": 1437,
																			"indexExpression": {
																				"id": 1436,
																				"name": "i",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1415,
																				"src": "2560:1:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "2542:20:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_AssetConfigInput_$2106_memory_ptr",
																				"typeString": "struct DistributionTypes.AssetConfigInput memory"
																			}
																		},
																		"id": 1438,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "underlyingAsset",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 2105,
																		"src": "2542:36:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1439,
																		"name": "assetConfig",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1426,
																		"src": "2589:11:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_AssetData_$1289_storage_ptr",
																			"typeString": "struct DistributionManager.AssetData storage pointer"
																		}
																	},
																	{
																		"expression": {
																			"baseExpression": {
																				"id": 1440,
																				"name": "assetsConfigInput",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1411,
																				"src": "2611:17:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_array$_t_struct$_AssetConfigInput_$2106_memory_ptr_$dyn_memory_ptr",
																					"typeString": "struct DistributionTypes.AssetConfigInput memory[] memory"
																				}
																			},
																			"id": 1442,
																			"indexExpression": {
																				"id": 1441,
																				"name": "i",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1415,
																				"src": "2629:1:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "2611:20:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_AssetConfigInput_$2106_memory_ptr",
																				"typeString": "struct DistributionTypes.AssetConfigInput memory"
																			}
																		},
																		"id": 1443,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "totalStaked",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 2103,
																		"src": "2611:32:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_struct$_AssetData_$1289_storage_ptr",
																			"typeString": "struct DistributionManager.AssetData storage pointer"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1434,
																	"name": "_updateAssetStateInternal",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1566,
																	"src": "2506:25:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_struct$_AssetData_$1289_storage_ptr_$_t_uint256_$returns$_t_uint256_$",
																		"typeString": "function (address,struct DistributionManager.AssetData storage pointer,uint256) returns (uint256)"
																	}
																},
																"id": 1444,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2506:146:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1445,
															"nodeType": "ExpressionStatement",
															"src": "2506:146:7"
														},
														{
															"expression": {
																"id": 1453,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"id": 1446,
																		"name": "assetConfig",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1426,
																		"src": "2663:11:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_AssetData_$1289_storage_ptr",
																			"typeString": "struct DistributionManager.AssetData storage pointer"
																		}
																	},
																	"id": 1448,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberName": "emissionPerSecond",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1280,
																	"src": "2663:29:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint104",
																		"typeString": "uint104"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"expression": {
																		"baseExpression": {
																			"id": 1449,
																			"name": "assetsConfigInput",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1411,
																			"src": "2695:17:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_array$_t_struct$_AssetConfigInput_$2106_memory_ptr_$dyn_memory_ptr",
																				"typeString": "struct DistributionTypes.AssetConfigInput memory[] memory"
																			}
																		},
																		"id": 1451,
																		"indexExpression": {
																			"id": 1450,
																			"name": "i",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1415,
																			"src": "2713:1:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "2695:20:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_AssetConfigInput_$2106_memory_ptr",
																			"typeString": "struct DistributionTypes.AssetConfigInput memory"
																		}
																	},
																	"id": 1452,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "emissionPerSecond",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 2101,
																	"src": "2695:38:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint104",
																		"typeString": "uint104"
																	}
																},
																"src": "2663:70:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint104",
																	"typeString": "uint104"
																}
															},
															"id": 1454,
															"nodeType": "ExpressionStatement",
															"src": "2663:70:7"
														},
														{
															"eventCall": {
																"arguments": [
																	{
																		"expression": {
																			"baseExpression": {
																				"id": 1456,
																				"name": "assetsConfigInput",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1411,
																				"src": "2778:17:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_array$_t_struct$_AssetConfigInput_$2106_memory_ptr_$dyn_memory_ptr",
																					"typeString": "struct DistributionTypes.AssetConfigInput memory[] memory"
																				}
																			},
																			"id": 1458,
																			"indexExpression": {
																				"id": 1457,
																				"name": "i",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1415,
																				"src": "2796:1:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "2778:20:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_AssetConfigInput_$2106_memory_ptr",
																				"typeString": "struct DistributionTypes.AssetConfigInput memory"
																			}
																		},
																		"id": 1459,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "underlyingAsset",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 2105,
																		"src": "2778:36:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"expression": {
																			"baseExpression": {
																				"id": 1460,
																				"name": "assetsConfigInput",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1411,
																				"src": "2825:17:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_array$_t_struct$_AssetConfigInput_$2106_memory_ptr_$dyn_memory_ptr",
																					"typeString": "struct DistributionTypes.AssetConfigInput memory[] memory"
																				}
																			},
																			"id": 1462,
																			"indexExpression": {
																				"id": 1461,
																				"name": "i",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1415,
																				"src": "2843:1:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "2825:20:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_AssetConfigInput_$2106_memory_ptr",
																				"typeString": "struct DistributionTypes.AssetConfigInput memory"
																			}
																		},
																		"id": 1463,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "emissionPerSecond",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 2101,
																		"src": "2825:38:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint104",
																			"typeString": "uint104"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint104",
																			"typeString": "uint104"
																		}
																	],
																	"id": 1455,
																	"name": "AssetConfigUpdated",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1880,
																	"src": "2749:18:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,uint256)"
																	}
																},
																"id": 1464,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2749:123:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1465,
															"nodeType": "EmitStatement",
															"src": "2744:128:7"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1421,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1418,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1415,
														"src": "2375:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"id": 1419,
															"name": "assetsConfigInput",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1411,
															"src": "2379:17:7",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_struct$_AssetConfigInput_$2106_memory_ptr_$dyn_memory_ptr",
																"typeString": "struct DistributionTypes.AssetConfigInput memory[] memory"
															}
														},
														"id": 1420,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "2379:24:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2375:28:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1467,
												"initializationExpression": {
													"assignments": [
														1415
													],
													"declarations": [
														{
															"constant": false,
															"id": 1415,
															"mutability": "mutable",
															"name": "i",
															"nodeType": "VariableDeclaration",
															"scope": 1467,
															"src": "2360:9:7",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 1414,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "2360:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 1417,
													"initialValue": {
														"hexValue": "30",
														"id": 1416,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2372:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "2360:13:7"
												},
												"loopExpression": {
													"expression": {
														"id": 1423,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "2405:3:7",
														"subExpression": {
															"id": 1422,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1415,
															"src": "2405:1:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1424,
													"nodeType": "ExpressionStatement",
													"src": "2405:3:7"
												},
												"nodeType": "ForStatement",
												"src": "2355:525:7"
											}
										]
									},
									"documentation": {
										"id": 1408,
										"nodeType": "StructuredDocumentation",
										"src": "2102:136:7",
										"text": " @dev Configure the assets for a specific emission\n @param assetsConfigInput The array of each asset configuration*"
									},
									"id": 1469,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_configureAssets",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1412,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1411,
												"mutability": "mutable",
												"name": "assetsConfigInput",
												"nodeType": "VariableDeclaration",
												"scope": 1469,
												"src": "2268:61:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_struct$_AssetConfigInput_$2106_memory_ptr_$dyn_memory_ptr",
													"typeString": "struct DistributionTypes.AssetConfigInput[]"
												},
												"typeName": {
													"baseType": {
														"id": 1409,
														"name": "DistributionTypes.AssetConfigInput",
														"nodeType": "UserDefinedTypeName",
														"referencedDeclaration": 2106,
														"src": "2268:34:7",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_AssetConfigInput_$2106_storage_ptr",
															"typeString": "struct DistributionTypes.AssetConfigInput"
														}
													},
													"id": 1410,
													"nodeType": "ArrayTypeName",
													"src": "2268:36:7",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_struct$_AssetConfigInput_$2106_storage_$dyn_storage_ptr",
														"typeString": "struct DistributionTypes.AssetConfigInput[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2267:63:7"
									},
									"returnParameters": {
										"id": 1413,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2348:0:7"
									},
									"scope": 1869,
									"src": "2242:643:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1565,
										"nodeType": "Block",
										"src": "3387:814:7",
										"statements": [
											{
												"assignments": [
													1482
												],
												"declarations": [
													{
														"constant": false,
														"id": 1482,
														"mutability": "mutable",
														"name": "oldIndex",
														"nodeType": "VariableDeclaration",
														"scope": 1565,
														"src": "3394:16:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1481,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3394:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1485,
												"initialValue": {
													"expression": {
														"id": 1483,
														"name": "assetConfig",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1474,
														"src": "3413:11:7",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_AssetData_$1289_storage_ptr",
															"typeString": "struct DistributionManager.AssetData storage pointer"
														}
													},
													"id": 1484,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "index",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 1282,
													"src": "3413:17:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint104",
														"typeString": "uint104"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3394:36:7"
											},
											{
												"assignments": [
													1487
												],
												"declarations": [
													{
														"constant": false,
														"id": 1487,
														"mutability": "mutable",
														"name": "emissionPerSecond",
														"nodeType": "VariableDeclaration",
														"scope": 1565,
														"src": "3437:25:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1486,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3437:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1490,
												"initialValue": {
													"expression": {
														"id": 1488,
														"name": "assetConfig",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1474,
														"src": "3465:11:7",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_AssetData_$1289_storage_ptr",
															"typeString": "struct DistributionManager.AssetData storage pointer"
														}
													},
													"id": 1489,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "emissionPerSecond",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 1280,
													"src": "3465:29:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint104",
														"typeString": "uint104"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3437:57:7"
											},
											{
												"assignments": [
													1492
												],
												"declarations": [
													{
														"constant": false,
														"id": 1492,
														"mutability": "mutable",
														"name": "lastUpdateTimestamp",
														"nodeType": "VariableDeclaration",
														"scope": 1565,
														"src": "3501:27:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint128",
															"typeString": "uint128"
														},
														"typeName": {
															"id": 1491,
															"name": "uint128",
															"nodeType": "ElementaryTypeName",
															"src": "3501:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint128",
																"typeString": "uint128"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1495,
												"initialValue": {
													"expression": {
														"id": 1493,
														"name": "assetConfig",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1474,
														"src": "3531:11:7",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_AssetData_$1289_storage_ptr",
															"typeString": "struct DistributionManager.AssetData storage pointer"
														}
													},
													"id": 1494,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "lastUpdateTimestamp",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 1284,
													"src": "3531:31:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint40",
														"typeString": "uint40"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3501:61:7"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1499,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 1496,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": -4,
															"src": "3575:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 1497,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "timestamp",
														"nodeType": "MemberAccess",
														"src": "3575:15:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"id": 1498,
														"name": "lastUpdateTimestamp",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1492,
														"src": "3594:19:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint128",
															"typeString": "uint128"
														}
													},
													"src": "3575:38:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1503,
												"nodeType": "IfStatement",
												"src": "3571:76:7",
												"trueBody": {
													"id": 1502,
													"nodeType": "Block",
													"src": "3615:32:7",
													"statements": [
														{
															"expression": {
																"id": 1500,
																"name": "oldIndex",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1482,
																"src": "3631:8:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"functionReturnParameters": 1480,
															"id": 1501,
															"nodeType": "Return",
															"src": "3624:15:7"
														}
													]
												}
											},
											{
												"assignments": [
													1505
												],
												"declarations": [
													{
														"constant": false,
														"id": 1505,
														"mutability": "mutable",
														"name": "newIndex",
														"nodeType": "VariableDeclaration",
														"scope": 1565,
														"src": "3655:16:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1504,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3655:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1512,
												"initialValue": {
													"arguments": [
														{
															"id": 1507,
															"name": "oldIndex",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1482,
															"src": "3696:8:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1508,
															"name": "emissionPerSecond",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1487,
															"src": "3706:17:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1509,
															"name": "lastUpdateTimestamp",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1492,
															"src": "3725:19:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint128",
																"typeString": "uint128"
															}
														},
														{
															"id": 1510,
															"name": "totalStaked",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1476,
															"src": "3746:11:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint128",
																"typeString": "uint128"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1506,
														"name": "_getAssetIndex",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1868,
														"src": "3681:14:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$_t_uint256_$_t_uint128_$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256,uint128,uint256) view returns (uint256)"
														}
													},
													"id": 1511,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3681:77:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3655:103:7"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1515,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1513,
														"name": "newIndex",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1505,
														"src": "3771:8:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 1514,
														"name": "oldIndex",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1482,
														"src": "3783:8:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3771:20:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1561,
													"nodeType": "Block",
													"src": "4098:74:7",
													"statements": [
														{
															"expression": {
																"id": 1559,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"id": 1551,
																		"name": "assetConfig",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1474,
																		"src": "4107:11:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_AssetData_$1289_storage_ptr",
																			"typeString": "struct DistributionManager.AssetData storage pointer"
																		}
																	},
																	"id": 1553,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberName": "lastUpdateTimestamp",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1284,
																	"src": "4107:31:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint40",
																		"typeString": "uint40"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"expression": {
																				"id": 1556,
																				"name": "block",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": -4,
																				"src": "4148:5:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_block",
																					"typeString": "block"
																				}
																			},
																			"id": 1557,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "timestamp",
																			"nodeType": "MemberAccess",
																			"src": "4148:15:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 1555,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "4141:6:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint40_$",
																			"typeString": "type(uint40)"
																		},
																		"typeName": {
																			"id": 1554,
																			"name": "uint40",
																			"nodeType": "ElementaryTypeName",
																			"src": "4141:6:7",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1558,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "4141:23:7",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint40",
																		"typeString": "uint40"
																	}
																},
																"src": "4107:57:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint40",
																	"typeString": "uint40"
																}
															},
															"id": 1560,
															"nodeType": "ExpressionStatement",
															"src": "4107:57:7"
														}
													]
												},
												"id": 1562,
												"nodeType": "IfStatement",
												"src": "3767:405:7",
												"trueBody": {
													"id": 1550,
													"nodeType": "Block",
													"src": "3793:299:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1522,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"arguments": [
																				{
																					"id": 1519,
																					"name": "newIndex",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1505,
																					"src": "3818:8:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 1518,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "3810:7:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_uint104_$",
																					"typeString": "type(uint104)"
																				},
																				"typeName": {
																					"id": 1517,
																					"name": "uint104",
																					"nodeType": "ElementaryTypeName",
																					"src": "3810:7:7",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 1520,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "3810:17:7",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint104",
																				"typeString": "uint104"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"id": 1521,
																			"name": "newIndex",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1505,
																			"src": "3831:8:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "3810:29:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"hexValue": "496e646578206f766572666c6f77",
																		"id": 1523,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "3841:16:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_88066702ff2a817045c06422ff60e138f1b9ed6ff5eae8db2038ccb44cf1a522",
																			"typeString": "literal_string \"Index overflow\""
																		},
																		"value": "Index overflow"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_88066702ff2a817045c06422ff60e138f1b9ed6ff5eae8db2038ccb44cf1a522",
																			"typeString": "literal_string \"Index overflow\""
																		}
																	],
																	"id": 1516,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		-18,
																		-18
																	],
																	"referencedDeclaration": -18,
																	"src": "3802:7:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 1524,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3802:56:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1525,
															"nodeType": "ExpressionStatement",
															"src": "3802:56:7"
														},
														{
															"expression": {
																"id": 1533,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"id": 1526,
																		"name": "assetConfig",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1474,
																		"src": "3933:11:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_AssetData_$1289_storage_ptr",
																			"typeString": "struct DistributionManager.AssetData storage pointer"
																		}
																	},
																	"id": 1528,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberName": "index",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1282,
																	"src": "3933:17:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint104",
																		"typeString": "uint104"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"id": 1531,
																			"name": "newIndex",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1505,
																			"src": "3961:8:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 1530,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "3953:7:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint104_$",
																			"typeString": "type(uint104)"
																		},
																		"typeName": {
																			"id": 1529,
																			"name": "uint104",
																			"nodeType": "ElementaryTypeName",
																			"src": "3953:7:7",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1532,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3953:17:7",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint104",
																		"typeString": "uint104"
																	}
																},
																"src": "3933:37:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint104",
																	"typeString": "uint104"
																}
															},
															"id": 1534,
															"nodeType": "ExpressionStatement",
															"src": "3933:37:7"
														},
														{
															"expression": {
																"id": 1543,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"id": 1535,
																		"name": "assetConfig",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1474,
																		"src": "3979:11:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_AssetData_$1289_storage_ptr",
																			"typeString": "struct DistributionManager.AssetData storage pointer"
																		}
																	},
																	"id": 1537,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberName": "lastUpdateTimestamp",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1284,
																	"src": "3979:31:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint40",
																		"typeString": "uint40"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"expression": {
																				"id": 1540,
																				"name": "block",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": -4,
																				"src": "4020:5:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_block",
																					"typeString": "block"
																				}
																			},
																			"id": 1541,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "timestamp",
																			"nodeType": "MemberAccess",
																			"src": "4020:15:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 1539,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "4013:6:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint40_$",
																			"typeString": "type(uint40)"
																		},
																		"typeName": {
																			"id": 1538,
																			"name": "uint40",
																			"nodeType": "ElementaryTypeName",
																			"src": "4013:6:7",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1542,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "4013:23:7",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint40",
																		"typeString": "uint40"
																	}
																},
																"src": "3979:57:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint40",
																	"typeString": "uint40"
																}
															},
															"id": 1544,
															"nodeType": "ExpressionStatement",
															"src": "3979:57:7"
														},
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 1546,
																		"name": "asset",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1472,
																		"src": "4068:5:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1547,
																		"name": "newIndex",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1505,
																		"src": "4075:8:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1545,
																	"name": "AssetIndexUpdated",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1886,
																	"src": "4050:17:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,uint256)"
																	}
																},
																"id": 1548,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4050:34:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1549,
															"nodeType": "EmitStatement",
															"src": "4045:39:7"
														}
													]
												}
											},
											{
												"expression": {
													"id": 1563,
													"name": "newIndex",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1505,
													"src": "4187:8:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1480,
												"id": 1564,
												"nodeType": "Return",
												"src": "4180:15:7"
											}
										]
									},
									"documentation": {
										"id": 1470,
										"nodeType": "StructuredDocumentation",
										"src": "2891:343:7",
										"text": " @dev Updates the state of one distribution, mainly rewards index and timestamp\n @param asset The address of the asset being updated\n @param assetConfig Storage pointer to the distribution's config\n @param totalStaked Current total of staked assets for this distribution\n @return The new distribution index*"
									},
									"id": 1566,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_updateAssetStateInternal",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1477,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1472,
												"mutability": "mutable",
												"name": "asset",
												"nodeType": "VariableDeclaration",
												"scope": 1566,
												"src": "3279:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1471,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3279:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1474,
												"mutability": "mutable",
												"name": "assetConfig",
												"nodeType": "VariableDeclaration",
												"scope": 1566,
												"src": "3299:29:7",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_AssetData_$1289_storage_ptr",
													"typeString": "struct DistributionManager.AssetData"
												},
												"typeName": {
													"id": 1473,
													"name": "AssetData",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 1289,
													"src": "3299:9:7",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_AssetData_$1289_storage_ptr",
														"typeString": "struct DistributionManager.AssetData"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1476,
												"mutability": "mutable",
												"name": "totalStaked",
												"nodeType": "VariableDeclaration",
												"scope": 1566,
												"src": "3335:19:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1475,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3335:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3272:87:7"
									},
									"returnParameters": {
										"id": 1480,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1479,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1566,
												"src": "3378:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1478,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3378:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3377:9:7"
									},
									"scope": 1869,
									"src": "3238:963:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1639,
										"nodeType": "Block",
										"src": "4774:505:7",
										"statements": [
											{
												"assignments": [
													1581
												],
												"declarations": [
													{
														"constant": false,
														"id": 1581,
														"mutability": "mutable",
														"name": "assetData",
														"nodeType": "VariableDeclaration",
														"scope": 1639,
														"src": "4781:27:7",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_AssetData_$1289_storage_ptr",
															"typeString": "struct DistributionManager.AssetData"
														},
														"typeName": {
															"id": 1580,
															"name": "AssetData",
															"nodeType": "UserDefinedTypeName",
															"referencedDeclaration": 1289,
															"src": "4781:9:7",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_AssetData_$1289_storage_ptr",
																"typeString": "struct DistributionManager.AssetData"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1585,
												"initialValue": {
													"baseExpression": {
														"id": 1582,
														"name": "assets",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1298,
														"src": "4811:6:7",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_struct$_AssetData_$1289_storage_$",
															"typeString": "mapping(address => struct DistributionManager.AssetData storage ref)"
														}
													},
													"id": 1584,
													"indexExpression": {
														"id": 1583,
														"name": "asset",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1571,
														"src": "4818:5:7",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "4811:13:7",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_AssetData_$1289_storage",
														"typeString": "struct DistributionManager.AssetData storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4781:43:7"
											},
											{
												"assignments": [
													1587
												],
												"declarations": [
													{
														"constant": false,
														"id": 1587,
														"mutability": "mutable",
														"name": "userIndex",
														"nodeType": "VariableDeclaration",
														"scope": 1639,
														"src": "4831:17:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1586,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "4831:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1592,
												"initialValue": {
													"baseExpression": {
														"expression": {
															"id": 1588,
															"name": "assetData",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1581,
															"src": "4851:9:7",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_AssetData_$1289_storage_ptr",
																"typeString": "struct DistributionManager.AssetData storage pointer"
															}
														},
														"id": 1589,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "users",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1288,
														"src": "4851:15:7",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 1591,
													"indexExpression": {
														"id": 1590,
														"name": "user",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1569,
														"src": "4867:4:7",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "4851:21:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4831:41:7"
											},
											{
												"assignments": [
													1594
												],
												"declarations": [
													{
														"constant": false,
														"id": 1594,
														"mutability": "mutable",
														"name": "accruedRewards",
														"nodeType": "VariableDeclaration",
														"scope": 1639,
														"src": "4879:22:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1593,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "4879:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1596,
												"initialValue": {
													"hexValue": "30",
													"id": 1595,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "4904:1:7",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4879:26:7"
											},
											{
												"assignments": [
													1598
												],
												"declarations": [
													{
														"constant": false,
														"id": 1598,
														"mutability": "mutable",
														"name": "newIndex",
														"nodeType": "VariableDeclaration",
														"scope": 1639,
														"src": "4914:16:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1597,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "4914:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1604,
												"initialValue": {
													"arguments": [
														{
															"id": 1600,
															"name": "asset",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1571,
															"src": "4959:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1601,
															"name": "assetData",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1581,
															"src": "4966:9:7",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_AssetData_$1289_storage_ptr",
																"typeString": "struct DistributionManager.AssetData storage pointer"
															}
														},
														{
															"id": 1602,
															"name": "totalStaked",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1575,
															"src": "4977:11:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_struct$_AssetData_$1289_storage_ptr",
																"typeString": "struct DistributionManager.AssetData storage pointer"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1599,
														"name": "_updateAssetStateInternal",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1566,
														"src": "4933:25:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_struct$_AssetData_$1289_storage_ptr_$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (address,struct DistributionManager.AssetData storage pointer,uint256) returns (uint256)"
														}
													},
													"id": 1603,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4933:56:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4914:75:7"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1607,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1605,
														"name": "userIndex",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1587,
														"src": "5002:9:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 1606,
														"name": "newIndex",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1598,
														"src": "5015:8:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5002:21:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1636,
												"nodeType": "IfStatement",
												"src": "4998:246:7",
												"trueBody": {
													"id": 1635,
													"nodeType": "Block",
													"src": "5025:219:7",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1610,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1608,
																	"name": "stakedByUser",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1573,
																	"src": "5038:12:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "!=",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 1609,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5054:1:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "5038:17:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1620,
															"nodeType": "IfStatement",
															"src": "5034:107:7",
															"trueBody": {
																"id": 1619,
																"nodeType": "Block",
																"src": "5057:84:7",
																"statements": [
																	{
																		"expression": {
																			"id": 1617,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"id": 1611,
																				"name": "accruedRewards",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1594,
																				"src": "5068:14:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"arguments": [
																					{
																						"id": 1613,
																						"name": "stakedByUser",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1573,
																						"src": "5097:12:7",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					{
																						"id": 1614,
																						"name": "newIndex",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1598,
																						"src": "5111:8:7",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					{
																						"id": 1615,
																						"name": "userIndex",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1587,
																						"src": "5121:9:7",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						},
																						{
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						},
																						{
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					],
																					"id": 1612,
																					"name": "_getRewards",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1792,
																					"src": "5085:11:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																						"typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
																					}
																				},
																				"id": 1616,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "5085:46:7",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "5068:63:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 1618,
																		"nodeType": "ExpressionStatement",
																		"src": "5068:63:7"
																	}
																]
															}
														},
														{
															"expression": {
																"id": 1627,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"expression": {
																			"id": 1621,
																			"name": "assetData",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1581,
																			"src": "5151:9:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_AssetData_$1289_storage_ptr",
																				"typeString": "struct DistributionManager.AssetData storage pointer"
																			}
																		},
																		"id": 1624,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "users",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1288,
																		"src": "5151:15:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 1625,
																	"indexExpression": {
																		"id": 1623,
																		"name": "user",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1569,
																		"src": "5167:4:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "5151:21:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"id": 1626,
																	"name": "newIndex",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1598,
																	"src": "5175:8:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5151:32:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1628,
															"nodeType": "ExpressionStatement",
															"src": "5151:32:7"
														},
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 1630,
																		"name": "user",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1569,
																		"src": "5214:4:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1631,
																		"name": "asset",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1571,
																		"src": "5220:5:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1632,
																		"name": "newIndex",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1598,
																		"src": "5227:8:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1629,
																	"name": "UserIndexUpdated",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1894,
																	"src": "5197:16:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,address,uint256)"
																	}
																},
																"id": 1633,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5197:39:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1634,
															"nodeType": "EmitStatement",
															"src": "5192:44:7"
														}
													]
												}
											},
											{
												"expression": {
													"id": 1637,
													"name": "accruedRewards",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1594,
													"src": "5259:14:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1579,
												"id": 1638,
												"nodeType": "Return",
												"src": "5252:21:7"
											}
										]
									},
									"documentation": {
										"id": 1567,
										"nodeType": "StructuredDocumentation",
										"src": "4207:405:7",
										"text": " @dev Updates the state of an user in a distribution\n @param user The user's address\n @param asset The address of the reference asset of the distribution\n @param stakedByUser Amount of tokens staked by the user in the distribution at the moment\n @param totalStaked Total tokens staked in the distribution\n @return The accrued rewards for the user until the moment*"
									},
									"id": 1640,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_updateUserAssetInternal",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1576,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1569,
												"mutability": "mutable",
												"name": "user",
												"nodeType": "VariableDeclaration",
												"scope": 1640,
												"src": "4656:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1568,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4656:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1571,
												"mutability": "mutable",
												"name": "asset",
												"nodeType": "VariableDeclaration",
												"scope": 1640,
												"src": "4675:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1570,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4675:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1573,
												"mutability": "mutable",
												"name": "stakedByUser",
												"nodeType": "VariableDeclaration",
												"scope": 1640,
												"src": "4695:20:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1572,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4695:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1575,
												"mutability": "mutable",
												"name": "totalStaked",
												"nodeType": "VariableDeclaration",
												"scope": 1640,
												"src": "4722:19:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1574,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4722:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4649:97:7"
									},
									"returnParameters": {
										"id": 1579,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1578,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1640,
												"src": "4765:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1577,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4765:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4764:9:7"
									},
									"scope": 1869,
									"src": "4616:663:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1691,
										"nodeType": "Block",
										"src": "5718:352:7",
										"statements": [
											{
												"assignments": [
													1652
												],
												"declarations": [
													{
														"constant": false,
														"id": 1652,
														"mutability": "mutable",
														"name": "accruedRewards",
														"nodeType": "VariableDeclaration",
														"scope": 1691,
														"src": "5725:22:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1651,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "5725:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1654,
												"initialValue": {
													"hexValue": "30",
													"id": 1653,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "5750:1:7",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5725:26:7"
											},
											{
												"body": {
													"id": 1687,
													"nodeType": "Block",
													"src": "5804:231:7",
													"statements": [
														{
															"expression": {
																"id": 1685,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1666,
																	"name": "accruedRewards",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1652,
																	"src": "5813:14:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"id": 1670,
																					"name": "user",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1643,
																					"src": "5896:4:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"expression": {
																						"baseExpression": {
																							"id": 1671,
																							"name": "stakes",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1646,
																							"src": "5913:6:7",
																							"typeDescriptions": {
																								"typeIdentifier": "t_array$_t_struct$_UserStakeInput_$2113_memory_ptr_$dyn_memory_ptr",
																								"typeString": "struct DistributionTypes.UserStakeInput memory[] memory"
																							}
																						},
																						"id": 1673,
																						"indexExpression": {
																							"id": 1672,
																							"name": "i",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1656,
																							"src": "5920:1:7",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": false,
																						"nodeType": "IndexAccess",
																						"src": "5913:9:7",
																						"typeDescriptions": {
																							"typeIdentifier": "t_struct$_UserStakeInput_$2113_memory_ptr",
																							"typeString": "struct DistributionTypes.UserStakeInput memory"
																						}
																					},
																					"id": 1674,
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberName": "underlyingAsset",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 2108,
																					"src": "5913:25:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"expression": {
																						"baseExpression": {
																							"id": 1675,
																							"name": "stakes",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1646,
																							"src": "5951:6:7",
																							"typeDescriptions": {
																								"typeIdentifier": "t_array$_t_struct$_UserStakeInput_$2113_memory_ptr_$dyn_memory_ptr",
																								"typeString": "struct DistributionTypes.UserStakeInput memory[] memory"
																							}
																						},
																						"id": 1677,
																						"indexExpression": {
																							"id": 1676,
																							"name": "i",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1656,
																							"src": "5958:1:7",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": false,
																						"nodeType": "IndexAccess",
																						"src": "5951:9:7",
																						"typeDescriptions": {
																							"typeIdentifier": "t_struct$_UserStakeInput_$2113_memory_ptr",
																							"typeString": "struct DistributionTypes.UserStakeInput memory"
																						}
																					},
																					"id": 1678,
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberName": "stakedByUser",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 2110,
																					"src": "5951:22:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"expression": {
																						"baseExpression": {
																							"id": 1679,
																							"name": "stakes",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1646,
																							"src": "5986:6:7",
																							"typeDescriptions": {
																								"typeIdentifier": "t_array$_t_struct$_UserStakeInput_$2113_memory_ptr_$dyn_memory_ptr",
																								"typeString": "struct DistributionTypes.UserStakeInput memory[] memory"
																							}
																						},
																						"id": 1681,
																						"indexExpression": {
																							"id": 1680,
																							"name": "i",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1656,
																							"src": "5993:1:7",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": false,
																						"nodeType": "IndexAccess",
																						"src": "5986:9:7",
																						"typeDescriptions": {
																							"typeIdentifier": "t_struct$_UserStakeInput_$2113_memory_ptr",
																							"typeString": "struct DistributionTypes.UserStakeInput memory"
																						}
																					},
																					"id": 1682,
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberName": "totalStaked",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 2112,
																					"src": "5986:21:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 1669,
																				"name": "_updateUserAssetInternal",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1640,
																				"src": "5859:24:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																					"typeString": "function (address,address,uint256,uint256) returns (uint256)"
																				}
																			},
																			"id": 1683,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "5859:159:7",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"id": 1667,
																			"name": "accruedRewards",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1652,
																			"src": "5830:14:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 1668,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "add",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 2139,
																		"src": "5830:18:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 1684,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "5830:197:7",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5813:214:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1686,
															"nodeType": "ExpressionStatement",
															"src": "5813:214:7"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1662,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1659,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1656,
														"src": "5780:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"id": 1660,
															"name": "stakes",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1646,
															"src": "5784:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_struct$_UserStakeInput_$2113_memory_ptr_$dyn_memory_ptr",
																"typeString": "struct DistributionTypes.UserStakeInput memory[] memory"
															}
														},
														"id": 1661,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "5784:13:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5780:17:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1688,
												"initializationExpression": {
													"assignments": [
														1656
													],
													"declarations": [
														{
															"constant": false,
															"id": 1656,
															"mutability": "mutable",
															"name": "i",
															"nodeType": "VariableDeclaration",
															"scope": 1688,
															"src": "5765:9:7",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 1655,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "5765:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 1658,
													"initialValue": {
														"hexValue": "30",
														"id": 1657,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5777:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "5765:13:7"
												},
												"loopExpression": {
													"expression": {
														"id": 1664,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "5799:3:7",
														"subExpression": {
															"id": 1663,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1656,
															"src": "5799:1:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1665,
													"nodeType": "ExpressionStatement",
													"src": "5799:3:7"
												},
												"nodeType": "ForStatement",
												"src": "5760:275:7"
											},
											{
												"expression": {
													"id": 1689,
													"name": "accruedRewards",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1652,
													"src": "6050:14:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1650,
												"id": 1690,
												"nodeType": "Return",
												"src": "6043:21:7"
											}
										]
									},
									"documentation": {
										"id": 1641,
										"nodeType": "StructuredDocumentation",
										"src": "5285:302:7",
										"text": " @dev Used by \"frontend\" stake contracts to update the data of an user when claiming rewards from there\n @param user The address of the user\n @param stakes List of structs of the user data related with his stake\n @return The accrued rewards for the user until the moment*"
									},
									"id": 1692,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_claimRewards",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1647,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1643,
												"mutability": "mutable",
												"name": "user",
												"nodeType": "VariableDeclaration",
												"scope": 1692,
												"src": "5614:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1642,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5614:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1646,
												"mutability": "mutable",
												"name": "stakes",
												"nodeType": "VariableDeclaration",
												"scope": 1692,
												"src": "5628:48:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_struct$_UserStakeInput_$2113_memory_ptr_$dyn_memory_ptr",
													"typeString": "struct DistributionTypes.UserStakeInput[]"
												},
												"typeName": {
													"baseType": {
														"id": 1644,
														"name": "DistributionTypes.UserStakeInput",
														"nodeType": "UserDefinedTypeName",
														"referencedDeclaration": 2113,
														"src": "5628:32:7",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_UserStakeInput_$2113_storage_ptr",
															"typeString": "struct DistributionTypes.UserStakeInput"
														}
													},
													"id": 1645,
													"nodeType": "ArrayTypeName",
													"src": "5628:34:7",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_struct$_UserStakeInput_$2113_storage_$dyn_storage_ptr",
														"typeString": "struct DistributionTypes.UserStakeInput[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5613:64:7"
									},
									"returnParameters": {
										"id": 1650,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1649,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1692,
												"src": "5706:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1648,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5706:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5705:9:7"
									},
									"scope": 1869,
									"src": "5591:479:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1763,
										"nodeType": "Block",
										"src": "6495:553:7",
										"statements": [
											{
												"assignments": [
													1704
												],
												"declarations": [
													{
														"constant": false,
														"id": 1704,
														"mutability": "mutable",
														"name": "accruedRewards",
														"nodeType": "VariableDeclaration",
														"scope": 1763,
														"src": "6502:22:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1703,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "6502:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1706,
												"initialValue": {
													"hexValue": "30",
													"id": 1705,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "6527:1:7",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6502:26:7"
											},
											{
												"body": {
													"id": 1759,
													"nodeType": "Block",
													"src": "6581:434:7",
													"statements": [
														{
															"assignments": [
																1719
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1719,
																	"mutability": "mutable",
																	"name": "assetConfig",
																	"nodeType": "VariableDeclaration",
																	"scope": 1759,
																	"src": "6590:29:7",
																	"stateVariable": false,
																	"storageLocation": "storage",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_AssetData_$1289_storage_ptr",
																		"typeString": "struct DistributionManager.AssetData"
																	},
																	"typeName": {
																		"id": 1718,
																		"name": "AssetData",
																		"nodeType": "UserDefinedTypeName",
																		"referencedDeclaration": 1289,
																		"src": "6590:9:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_AssetData_$1289_storage_ptr",
																			"typeString": "struct DistributionManager.AssetData"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1726,
															"initialValue": {
																"baseExpression": {
																	"id": 1720,
																	"name": "assets",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1298,
																	"src": "6622:6:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_struct$_AssetData_$1289_storage_$",
																		"typeString": "mapping(address => struct DistributionManager.AssetData storage ref)"
																	}
																},
																"id": 1725,
																"indexExpression": {
																	"expression": {
																		"baseExpression": {
																			"id": 1721,
																			"name": "stakes",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1698,
																			"src": "6629:6:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_array$_t_struct$_UserStakeInput_$2113_memory_ptr_$dyn_memory_ptr",
																				"typeString": "struct DistributionTypes.UserStakeInput memory[] memory"
																			}
																		},
																		"id": 1723,
																		"indexExpression": {
																			"id": 1722,
																			"name": "i",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1708,
																			"src": "6636:1:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "6629:9:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_UserStakeInput_$2113_memory_ptr",
																			"typeString": "struct DistributionTypes.UserStakeInput memory"
																		}
																	},
																	"id": 1724,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "underlyingAsset",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 2108,
																	"src": "6629:25:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "6622:33:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_AssetData_$1289_storage",
																	"typeString": "struct DistributionManager.AssetData storage ref"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "6590:65:7"
														},
														{
															"assignments": [
																1728
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1728,
																	"mutability": "mutable",
																	"name": "assetIndex",
																	"nodeType": "VariableDeclaration",
																	"scope": 1759,
																	"src": "6664:18:7",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 1727,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "6664:7:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1741,
															"initialValue": {
																"arguments": [
																	{
																		"expression": {
																			"id": 1730,
																			"name": "assetConfig",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1719,
																			"src": "6721:11:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_AssetData_$1289_storage_ptr",
																				"typeString": "struct DistributionManager.AssetData storage pointer"
																			}
																		},
																		"id": 1731,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "index",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1282,
																		"src": "6721:17:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint104",
																			"typeString": "uint104"
																		}
																	},
																	{
																		"expression": {
																			"id": 1732,
																			"name": "assetConfig",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1719,
																			"src": "6751:11:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_AssetData_$1289_storage_ptr",
																				"typeString": "struct DistributionManager.AssetData storage pointer"
																			}
																		},
																		"id": 1733,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "emissionPerSecond",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1280,
																		"src": "6751:29:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint104",
																			"typeString": "uint104"
																		}
																	},
																	{
																		"expression": {
																			"id": 1734,
																			"name": "assetConfig",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1719,
																			"src": "6793:11:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_AssetData_$1289_storage_ptr",
																				"typeString": "struct DistributionManager.AssetData storage pointer"
																			}
																		},
																		"id": 1735,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "lastUpdateTimestamp",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1284,
																		"src": "6793:31:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint40",
																			"typeString": "uint40"
																		}
																	},
																	{
																		"expression": {
																			"baseExpression": {
																				"id": 1736,
																				"name": "stakes",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1698,
																				"src": "6837:6:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_array$_t_struct$_UserStakeInput_$2113_memory_ptr_$dyn_memory_ptr",
																					"typeString": "struct DistributionTypes.UserStakeInput memory[] memory"
																				}
																			},
																			"id": 1738,
																			"indexExpression": {
																				"id": 1737,
																				"name": "i",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1708,
																				"src": "6844:1:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "6837:9:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_UserStakeInput_$2113_memory_ptr",
																				"typeString": "struct DistributionTypes.UserStakeInput memory"
																			}
																		},
																		"id": 1739,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "totalStaked",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 2112,
																		"src": "6837:21:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint104",
																			"typeString": "uint104"
																		},
																		{
																			"typeIdentifier": "t_uint104",
																			"typeString": "uint104"
																		},
																		{
																			"typeIdentifier": "t_uint40",
																			"typeString": "uint40"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1729,
																	"name": "_getAssetIndex",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1868,
																	"src": "6694:14:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_uint256_$_t_uint256_$_t_uint128_$_t_uint256_$returns$_t_uint256_$",
																		"typeString": "function (uint256,uint256,uint128,uint256) view returns (uint256)"
																	}
																},
																"id": 1740,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6694:175:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "6664:205:7"
														},
														{
															"expression": {
																"id": 1757,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1742,
																	"name": "accruedRewards",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1704,
																	"src": "6880:14:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"expression": {
																						"baseExpression": {
																							"id": 1746,
																							"name": "stakes",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1698,
																							"src": "6938:6:7",
																							"typeDescriptions": {
																								"typeIdentifier": "t_array$_t_struct$_UserStakeInput_$2113_memory_ptr_$dyn_memory_ptr",
																								"typeString": "struct DistributionTypes.UserStakeInput memory[] memory"
																							}
																						},
																						"id": 1748,
																						"indexExpression": {
																							"id": 1747,
																							"name": "i",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1708,
																							"src": "6945:1:7",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": false,
																						"nodeType": "IndexAccess",
																						"src": "6938:9:7",
																						"typeDescriptions": {
																							"typeIdentifier": "t_struct$_UserStakeInput_$2113_memory_ptr",
																							"typeString": "struct DistributionTypes.UserStakeInput memory"
																						}
																					},
																					"id": 1749,
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberName": "stakedByUser",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 2110,
																					"src": "6938:22:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 1750,
																					"name": "assetIndex",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1728,
																					"src": "6962:10:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"baseExpression": {
																						"expression": {
																							"id": 1751,
																							"name": "assetConfig",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1719,
																							"src": "6974:11:7",
																							"typeDescriptions": {
																								"typeIdentifier": "t_struct$_AssetData_$1289_storage_ptr",
																								"typeString": "struct DistributionManager.AssetData storage pointer"
																							}
																						},
																						"id": 1752,
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberName": "users",
																						"nodeType": "MemberAccess",
																						"referencedDeclaration": 1288,
																						"src": "6974:17:7",
																						"typeDescriptions": {
																							"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																							"typeString": "mapping(address => uint256)"
																						}
																					},
																					"id": 1754,
																					"indexExpression": {
																						"id": 1753,
																						"name": "user",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1695,
																						"src": "6992:4:7",
																						"typeDescriptions": {
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					},
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "IndexAccess",
																					"src": "6974:23:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 1745,
																				"name": "_getRewards",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1792,
																				"src": "6926:11:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																					"typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
																				}
																			},
																			"id": 1755,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "6926:72:7",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"id": 1743,
																			"name": "accruedRewards",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1704,
																			"src": "6897:14:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 1744,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "add",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 2139,
																		"src": "6897:18:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 1756,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "6897:110:7",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6880:127:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1758,
															"nodeType": "ExpressionStatement",
															"src": "6880:127:7"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1714,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1711,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1708,
														"src": "6557:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"id": 1712,
															"name": "stakes",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1698,
															"src": "6561:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_struct$_UserStakeInput_$2113_memory_ptr_$dyn_memory_ptr",
																"typeString": "struct DistributionTypes.UserStakeInput memory[] memory"
															}
														},
														"id": 1713,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "6561:13:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "6557:17:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1760,
												"initializationExpression": {
													"assignments": [
														1708
													],
													"declarations": [
														{
															"constant": false,
															"id": 1708,
															"mutability": "mutable",
															"name": "i",
															"nodeType": "VariableDeclaration",
															"scope": 1760,
															"src": "6542:9:7",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 1707,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "6542:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 1710,
													"initialValue": {
														"hexValue": "30",
														"id": 1709,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6554:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "6542:13:7"
												},
												"loopExpression": {
													"expression": {
														"id": 1716,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "6576:3:7",
														"subExpression": {
															"id": 1715,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1708,
															"src": "6576:1:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1717,
													"nodeType": "ExpressionStatement",
													"src": "6576:3:7"
												},
												"nodeType": "ForStatement",
												"src": "6537:478:7"
											},
											{
												"expression": {
													"id": 1761,
													"name": "accruedRewards",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1704,
													"src": "7028:14:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1702,
												"id": 1762,
												"nodeType": "Return",
												"src": "7021:21:7"
											}
										]
									},
									"documentation": {
										"id": 1693,
										"nodeType": "StructuredDocumentation",
										"src": "6076:271:7",
										"text": " @dev Return the accrued rewards for an user over a list of distribution\n @param user The address of the user\n @param stakes List of structs of the user data related with his stake\n @return The accrued rewards for the user until the moment*"
									},
									"id": 1764,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_getUnclaimedRewards",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1699,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1695,
												"mutability": "mutable",
												"name": "user",
												"nodeType": "VariableDeclaration",
												"scope": 1764,
												"src": "6381:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1694,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6381:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1698,
												"mutability": "mutable",
												"name": "stakes",
												"nodeType": "VariableDeclaration",
												"scope": 1764,
												"src": "6395:48:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_struct$_UserStakeInput_$2113_memory_ptr_$dyn_memory_ptr",
													"typeString": "struct DistributionTypes.UserStakeInput[]"
												},
												"typeName": {
													"baseType": {
														"id": 1696,
														"name": "DistributionTypes.UserStakeInput",
														"nodeType": "UserDefinedTypeName",
														"referencedDeclaration": 2113,
														"src": "6395:32:7",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_UserStakeInput_$2113_storage_ptr",
															"typeString": "struct DistributionTypes.UserStakeInput"
														}
													},
													"id": 1697,
													"nodeType": "ArrayTypeName",
													"src": "6395:34:7",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_struct$_UserStakeInput_$2113_storage_$dyn_storage_ptr",
														"typeString": "struct DistributionTypes.UserStakeInput[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6380:64:7"
									},
									"returnParameters": {
										"id": 1702,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1701,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1764,
												"src": "6483:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1700,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6483:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6482:9:7"
									},
									"scope": 1869,
									"src": "6351:697:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1791,
										"nodeType": "Block",
										"src": "7546:98:7",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1789,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"arguments": [
																	{
																		"id": 1780,
																		"name": "userIndex",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1771,
																		"src": "7602:9:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 1778,
																		"name": "reserveIndex",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1769,
																		"src": "7585:12:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1779,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sub",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 2161,
																	"src": "7585:16:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																		"typeString": "function (uint256,uint256) pure returns (uint256)"
																	}
																},
																"id": 1781,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7585:27:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"id": 1776,
																"name": "principalUserBalance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1767,
																"src": "7560:20:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1777,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "mul",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2189,
															"src": "7560:24:7",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 1782,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7560:53:7",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1788,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"leftExpression": {
															"hexValue": "3130",
															"id": 1783,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7616:2:7",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_10_by_1",
																"typeString": "int_const 10"
															},
															"value": "10"
														},
														"nodeType": "BinaryOperation",
														"operator": "**",
														"rightExpression": {
															"arguments": [
																{
																	"id": 1786,
																	"name": "PRECISION",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1294,
																	"src": "7628:9:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	}
																],
																"id": 1785,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "7620:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint256_$",
																	"typeString": "type(uint256)"
																},
																"typeName": {
																	"id": 1784,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "7620:7:7",
																	"typeDescriptions": {}
																}
															},
															"id": 1787,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7620:18:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "7616:22:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "7560:78:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1775,
												"id": 1790,
												"nodeType": "Return",
												"src": "7553:85:7"
											}
										]
									},
									"documentation": {
										"id": 1765,
										"nodeType": "StructuredDocumentation",
										"src": "7054:344:7",
										"text": " @dev Internal function for the calculation of user's rewards on a distribution\n @param principalUserBalance Amount staked by the user on a distribution\n @param reserveIndex Current index of the distribution\n @param userIndex Index stored for the user, representation his staking moment\n @return The rewards*"
									},
									"id": 1792,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_getRewards",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1772,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1767,
												"mutability": "mutable",
												"name": "principalUserBalance",
												"nodeType": "VariableDeclaration",
												"scope": 1792,
												"src": "7429:28:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1766,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7429:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1769,
												"mutability": "mutable",
												"name": "reserveIndex",
												"nodeType": "VariableDeclaration",
												"scope": 1792,
												"src": "7464:20:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1768,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7464:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1771,
												"mutability": "mutable",
												"name": "userIndex",
												"nodeType": "VariableDeclaration",
												"scope": 1792,
												"src": "7491:17:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1770,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7491:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7422:91:7"
									},
									"returnParameters": {
										"id": 1775,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1774,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1792,
												"src": "7537:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1773,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7537:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7536:9:7"
									},
									"scope": 1869,
									"src": "7402:242:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1867,
										"nodeType": "Block",
										"src": "8288:580:7",
										"statements": [
											{
												"assignments": [
													1807
												],
												"declarations": [
													{
														"constant": false,
														"id": 1807,
														"mutability": "mutable",
														"name": "distributionEnd",
														"nodeType": "VariableDeclaration",
														"scope": 1867,
														"src": "8295:23:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1806,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "8295:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1809,
												"initialValue": {
													"id": 1808,
													"name": "_distributionEnd",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1300,
													"src": "8321:16:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8295:42:7"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 1825,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"id": 1821,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 1816,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1812,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1810,
																	"name": "emissionPerSecond",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1797,
																	"src": "8356:17:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 1811,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8377:1:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "8356:22:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1815,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1813,
																	"name": "totalBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1801,
																	"src": "8389:12:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 1814,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8405:1:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "8389:17:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "8356:50:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "||",
														"rightExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1820,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1817,
																"name": "lastUpdateTimestamp",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1799,
																"src": "8417:19:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint128",
																	"typeString": "uint128"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"id": 1818,
																	"name": "block",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": -4,
																	"src": "8440:5:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_block",
																		"typeString": "block"
																	}
																},
																"id": 1819,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "timestamp",
																"nodeType": "MemberAccess",
																"src": "8440:15:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "8417:38:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"src": "8356:99:7",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1824,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1822,
															"name": "lastUpdateTimestamp",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1799,
															"src": "8466:19:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint128",
																"typeString": "uint128"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">=",
														"rightExpression": {
															"id": 1823,
															"name": "distributionEnd",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1807,
															"src": "8489:15:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "8466:38:7",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "8356:148:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1829,
												"nodeType": "IfStatement",
												"src": "8344:204:7",
												"trueBody": {
													"id": 1828,
													"nodeType": "Block",
													"src": "8512:36:7",
													"statements": [
														{
															"expression": {
																"id": 1826,
																"name": "currentIndex",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1795,
																"src": "8528:12:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"functionReturnParameters": 1805,
															"id": 1827,
															"nodeType": "Return",
															"src": "8521:19:7"
														}
													]
												}
											},
											{
												"assignments": [
													1831
												],
												"declarations": [
													{
														"constant": false,
														"id": 1831,
														"mutability": "mutable",
														"name": "currentTimestamp",
														"nodeType": "VariableDeclaration",
														"scope": 1867,
														"src": "8556:24:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1830,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "8556:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1840,
												"initialValue": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1835,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"id": 1832,
																"name": "block",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": -4,
																"src": "8590:5:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_block",
																	"typeString": "block"
																}
															},
															"id": 1833,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "timestamp",
															"nodeType": "MemberAccess",
															"src": "8590:15:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"id": 1834,
															"name": "distributionEnd",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1807,
															"src": "8608:15:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "8590:33:7",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"expression": {
															"id": 1837,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": -4,
															"src": "8644:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 1838,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "timestamp",
														"nodeType": "MemberAccess",
														"src": "8644:15:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1839,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "8590:69:7",
													"trueExpression": {
														"id": 1836,
														"name": "distributionEnd",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1807,
														"src": "8626:15:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8556:103:7"
											},
											{
												"assignments": [
													1842
												],
												"declarations": [
													{
														"constant": false,
														"id": 1842,
														"mutability": "mutable",
														"name": "timeDelta",
														"nodeType": "VariableDeclaration",
														"scope": 1867,
														"src": "8666:17:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1841,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "8666:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1847,
												"initialValue": {
													"arguments": [
														{
															"id": 1845,
															"name": "lastUpdateTimestamp",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1799,
															"src": "8707:19:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint128",
																"typeString": "uint128"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint128",
																"typeString": "uint128"
															}
														],
														"expression": {
															"id": 1843,
															"name": "currentTimestamp",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1831,
															"src": "8686:16:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1844,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sub",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2161,
														"src": "8686:20:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 1846,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8686:41:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8666:61:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1864,
															"name": "currentIndex",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1795,
															"src": "8841:12:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 1861,
																	"name": "totalBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1801,
																	"src": "8813:12:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"arguments": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1858,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 1853,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "8785:2:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"arguments": [
																					{
																						"id": 1856,
																						"name": "PRECISION",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1294,
																						"src": "8797:9:7",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint8",
																							"typeString": "uint8"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_uint8",
																							"typeString": "uint8"
																						}
																					],
																					"id": 1855,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "ElementaryTypeNameExpression",
																					"src": "8789:7:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_uint256_$",
																						"typeString": "type(uint256)"
																					},
																					"typeName": {
																						"id": 1854,
																						"name": "uint256",
																						"nodeType": "ElementaryTypeName",
																						"src": "8789:7:7",
																						"typeDescriptions": {}
																					}
																				},
																				"id": 1857,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "typeConversion",
																				"lValueRequested": false,
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "8789:18:7",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "8785:22:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"arguments": [
																				{
																					"id": 1850,
																					"name": "timeDelta",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1842,
																					"src": "8770:9:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"expression": {
																					"id": 1848,
																					"name": "emissionPerSecond",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1797,
																					"src": "8748:17:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"id": 1849,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "mul",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 2189,
																				"src": "8748:21:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																					"typeString": "function (uint256,uint256) pure returns (uint256)"
																				}
																			},
																			"id": 1851,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "8748:32:7",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 1852,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "mul",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 2189,
																		"src": "8748:36:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 1859,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "8748:60:7",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 1860,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "div",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 2203,
																"src": "8748:64:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 1862,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8748:78:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1863,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "add",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2139,
														"src": "8748:82:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 1865,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8748:114:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1805,
												"id": 1866,
												"nodeType": "Return",
												"src": "8734:128:7"
											}
										]
									},
									"documentation": {
										"id": 1793,
										"nodeType": "StructuredDocumentation",
										"src": "7650:453:7",
										"text": " @dev Calculates the next value of an specific distribution index, with validations\n @param currentIndex Current index of the distribution\n @param emissionPerSecond Representing the total rewards distributed per second per asset unit, on the distribution\n @param lastUpdateTimestamp Last moment this distribution was updated\n @param totalBalance of tokens considered for the distribution\n @return The new index.*"
									},
									"id": 1868,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_getAssetIndex",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1802,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1795,
												"mutability": "mutable",
												"name": "currentIndex",
												"nodeType": "VariableDeclaration",
												"scope": 1868,
												"src": "8137:20:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1794,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8137:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1797,
												"mutability": "mutable",
												"name": "emissionPerSecond",
												"nodeType": "VariableDeclaration",
												"scope": 1868,
												"src": "8164:25:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1796,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8164:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1799,
												"mutability": "mutable",
												"name": "lastUpdateTimestamp",
												"nodeType": "VariableDeclaration",
												"scope": 1868,
												"src": "8196:27:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 1798,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "8196:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1801,
												"mutability": "mutable",
												"name": "totalBalance",
												"nodeType": "VariableDeclaration",
												"scope": 1868,
												"src": "8230:20:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1800,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8230:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8130:125:7"
									},
									"returnParameters": {
										"id": 1805,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1804,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1868,
												"src": "8279:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1803,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8279:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8278:9:7"
									},
									"scope": 1869,
									"src": "8107:761:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1870,
							"src": "449:8422:7"
						}
					],
					"src": "38:8835:7"
				},
				"id": 7
			},
			"contracts/Omnidex-incentives/interfaces/IOmnidexDistributionManager.sol": {
				"ast": {
					"absolutePath": "contracts/Omnidex-incentives/interfaces/IOmnidexDistributionManager.sol",
					"exportedSymbols": {
						"DistributionTypes": [
							2114
						],
						"IOmnidexDistributionManager": [
							1939
						]
					},
					"id": 1940,
					"license": "agpl-3.0",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1871,
							"literals": [
								"solidity",
								"0.7",
								".5"
							],
							"nodeType": "PragmaDirective",
							"src": "38:22:8"
						},
						{
							"id": 1872,
							"literals": [
								"experimental",
								"ABIEncoderV2"
							],
							"nodeType": "PragmaDirective",
							"src": "62:33:8"
						},
						{
							"absolutePath": "contracts/Omnidex-incentives/lib/DistributionTypes.sol",
							"file": "../lib/DistributionTypes.sol",
							"id": 1874,
							"nodeType": "ImportDirective",
							"scope": 1940,
							"sourceUnit": 2115,
							"src": "99:63:8",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1873,
										"name": "DistributionTypes",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"src": "107:17:8",
										"typeDescriptions": {}
									}
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 1939,
							"linearizedBaseContracts": [
								1939
							],
							"name": "IOmnidexDistributionManager",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"id": 1880,
									"name": "AssetConfigUpdated",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1879,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1876,
												"indexed": true,
												"mutability": "mutable",
												"name": "asset",
												"nodeType": "VariableDeclaration",
												"scope": 1880,
												"src": "238:21:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1875,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "238:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1878,
												"indexed": false,
												"mutability": "mutable",
												"name": "emission",
												"nodeType": "VariableDeclaration",
												"scope": 1880,
												"src": "261:16:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1877,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "261:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "237:41:8"
									},
									"src": "213:66:8"
								},
								{
									"anonymous": false,
									"id": 1886,
									"name": "AssetIndexUpdated",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1885,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1882,
												"indexed": true,
												"mutability": "mutable",
												"name": "asset",
												"nodeType": "VariableDeclaration",
												"scope": 1886,
												"src": "307:21:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1881,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "307:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1884,
												"indexed": false,
												"mutability": "mutable",
												"name": "index",
												"nodeType": "VariableDeclaration",
												"scope": 1886,
												"src": "330:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1883,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "330:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "306:38:8"
									},
									"src": "283:62:8"
								},
								{
									"anonymous": false,
									"id": 1894,
									"name": "UserIndexUpdated",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1893,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1888,
												"indexed": true,
												"mutability": "mutable",
												"name": "user",
												"nodeType": "VariableDeclaration",
												"scope": 1894,
												"src": "372:20:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1887,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "372:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1890,
												"indexed": true,
												"mutability": "mutable",
												"name": "asset",
												"nodeType": "VariableDeclaration",
												"scope": 1894,
												"src": "394:21:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1889,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "394:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1892,
												"indexed": false,
												"mutability": "mutable",
												"name": "index",
												"nodeType": "VariableDeclaration",
												"scope": 1894,
												"src": "417:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1891,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "417:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "371:60:8"
									},
									"src": "349:83:8"
								},
								{
									"anonymous": false,
									"id": 1898,
									"name": "DistributionEndUpdated",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1897,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1896,
												"indexed": false,
												"mutability": "mutable",
												"name": "newDistributionEnd",
												"nodeType": "VariableDeclaration",
												"scope": 1898,
												"src": "465:26:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1895,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "465:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "464:28:8"
									},
									"src": "436:57:8"
								},
								{
									"documentation": {
										"id": 1899,
										"nodeType": "StructuredDocumentation",
										"src": "499:110:8",
										"text": " @dev Sets the end date for the distribution\n @param distributionEnd The end date timestamp*"
									},
									"functionSelector": "39ccbdd3",
									"id": 1904,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setDistributionEnd",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1902,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1901,
												"mutability": "mutable",
												"name": "distributionEnd",
												"nodeType": "VariableDeclaration",
												"scope": 1904,
												"src": "641:23:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1900,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "641:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "640:25:8"
									},
									"returnParameters": {
										"id": 1903,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "674:0:8"
									},
									"scope": 1939,
									"src": "613:62:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1905,
										"nodeType": "StructuredDocumentation",
										"src": "681:100:8",
										"text": " @dev Gets the end date for the distribution\n @return The end of the distribution*"
									},
									"functionSelector": "cc69afec",
									"id": 1910,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getDistributionEnd",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1906,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "812:2:8"
									},
									"returnParameters": {
										"id": 1909,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1908,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1910,
												"src": "838:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1907,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "838:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "837:9:8"
									},
									"scope": 1939,
									"src": "785:62:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1911,
										"nodeType": "StructuredDocumentation",
										"src": "853:132:8",
										"text": " @dev for backwards compatibility with the previous DistributionManager used\n @return The end of the distribution*"
									},
									"functionSelector": "919cd40f",
									"id": 1916,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "DISTRIBUTION_END",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1912,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1014:2:8"
									},
									"returnParameters": {
										"id": 1915,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1914,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1916,
												"src": "1039:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1913,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1039:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1038:9:8"
									},
									"scope": 1939,
									"src": "989:59:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1917,
										"nodeType": "StructuredDocumentation",
										"src": "1055:208:8",
										"text": " @dev Returns the data of an user on a distribution\n @param user Address of the user\n @param asset The address of the reference asset of the distribution\n @return The new index*"
									},
									"functionSelector": "3373ee4c",
									"id": 1926,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getUserAssetData",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1922,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1919,
												"mutability": "mutable",
												"name": "user",
												"nodeType": "VariableDeclaration",
												"scope": 1926,
												"src": "1294:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1918,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1294:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1921,
												"mutability": "mutable",
												"name": "asset",
												"nodeType": "VariableDeclaration",
												"scope": 1926,
												"src": "1308:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1920,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1308:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1293:29:8"
									},
									"returnParameters": {
										"id": 1925,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1924,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1926,
												"src": "1346:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1923,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1346:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1345:9:8"
									},
									"scope": 1939,
									"src": "1268:87:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1927,
										"nodeType": "StructuredDocumentation",
										"src": "1362:248:8",
										"text": " @dev Returns the configuration of the distribution for a certain asset\n @param asset The address of the reference asset of the distribution\n @return The asset index, the emission per second and the last updated timestamp*"
									},
									"functionSelector": "1652e7b7",
									"id": 1938,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getAssetData",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1930,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1929,
												"mutability": "mutable",
												"name": "asset",
												"nodeType": "VariableDeclaration",
												"scope": 1938,
												"src": "1637:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1928,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1637:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1636:15:8"
									},
									"returnParameters": {
										"id": 1937,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1932,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1938,
												"src": "1675:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1931,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1675:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1934,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1938,
												"src": "1684:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1933,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1684:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1936,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1938,
												"src": "1693:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1935,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1693:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1674:27:8"
									},
									"scope": 1939,
									"src": "1615:87:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1940,
							"src": "166:1539:8"
						}
					],
					"src": "38:1669:8"
				},
				"id": 8
			},
			"contracts/Omnidex-incentives/interfaces/IOmnidexIncentivesController.sol": {
				"ast": {
					"absolutePath": "contracts/Omnidex-incentives/interfaces/IOmnidexIncentivesController.sol",
					"exportedSymbols": {
						"IOmnidexDistributionManager": [
							1939
						],
						"IOmnidexIncentivesController": [
							2069
						]
					},
					"id": 2070,
					"license": "agpl-3.0",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1941,
							"literals": [
								"solidity",
								"0.7",
								".5"
							],
							"nodeType": "PragmaDirective",
							"src": "38:22:9"
						},
						{
							"id": 1942,
							"literals": [
								"experimental",
								"ABIEncoderV2"
							],
							"nodeType": "PragmaDirective",
							"src": "64:33:9"
						},
						{
							"absolutePath": "contracts/Omnidex-incentives/interfaces/IOmnidexDistributionManager.sol",
							"file": "../interfaces/IOmnidexDistributionManager.sol",
							"id": 1944,
							"nodeType": "ImportDirective",
							"scope": 2070,
							"sourceUnit": 1940,
							"src": "101:90:9",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1943,
										"name": "IOmnidexDistributionManager",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"src": "109:27:9",
										"typeDescriptions": {}
									}
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1945,
										"name": "IOmnidexDistributionManager",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 1939,
										"src": "237:27:9",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IOmnidexDistributionManager_$1939",
											"typeString": "contract IOmnidexDistributionManager"
										}
									},
									"id": 1946,
									"nodeType": "InheritanceSpecifier",
									"src": "237:27:9"
								}
							],
							"contractDependencies": [
								1939
							],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 2069,
							"linearizedBaseContracts": [
								2069,
								1939
							],
							"name": "IOmnidexIncentivesController",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"id": 1952,
									"name": "RewardsAccrued",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1951,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1948,
												"indexed": true,
												"mutability": "mutable",
												"name": "user",
												"nodeType": "VariableDeclaration",
												"scope": 1952,
												"src": "291:20:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1947,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "291:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1950,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 1952,
												"src": "313:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1949,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "313:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "290:38:9"
									},
									"src": "270:59:9"
								},
								{
									"anonymous": false,
									"id": 1962,
									"name": "RewardsClaimed",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1961,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1954,
												"indexed": true,
												"mutability": "mutable",
												"name": "user",
												"nodeType": "VariableDeclaration",
												"scope": 1962,
												"src": "362:20:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1953,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "362:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1956,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 1962,
												"src": "389:18:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1955,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "389:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1958,
												"indexed": true,
												"mutability": "mutable",
												"name": "claimer",
												"nodeType": "VariableDeclaration",
												"scope": 1962,
												"src": "414:23:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1957,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "414:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1960,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 1962,
												"src": "444:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1959,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "444:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "355:108:9"
									},
									"src": "335:129:9"
								},
								{
									"anonymous": false,
									"id": 1968,
									"name": "ClaimerSet",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1967,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1964,
												"indexed": true,
												"mutability": "mutable",
												"name": "user",
												"nodeType": "VariableDeclaration",
												"scope": 1968,
												"src": "487:20:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1963,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "487:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1966,
												"indexed": true,
												"mutability": "mutable",
												"name": "claimer",
												"nodeType": "VariableDeclaration",
												"scope": 1968,
												"src": "509:23:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1965,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "509:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "486:47:9"
									},
									"src": "470:64:9"
								},
								{
									"documentation": {
										"id": 1969,
										"nodeType": "StructuredDocumentation",
										"src": "540:183:9",
										"text": " @dev Whitelists an address to claim the rewards on behalf of another address\n @param user The address of the user\n @param claimer The address of the claimer"
									},
									"functionSelector": "f5cf673b",
									"id": 1976,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setClaimer",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1974,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1971,
												"mutability": "mutable",
												"name": "user",
												"nodeType": "VariableDeclaration",
												"scope": 1976,
												"src": "747:12:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1970,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "747:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1973,
												"mutability": "mutable",
												"name": "claimer",
												"nodeType": "VariableDeclaration",
												"scope": 1976,
												"src": "761:15:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1972,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "761:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "746:31:9"
									},
									"returnParameters": {
										"id": 1975,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "786:0:9"
									},
									"scope": 2069,
									"src": "727:60:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1977,
										"nodeType": "StructuredDocumentation",
										"src": "793:168:9",
										"text": " @dev Returns the whitelisted claimer for a certain address (0x0 if not set)\n @param user The address of the user\n @return The claimer address"
									},
									"functionSelector": "74d945ec",
									"id": 1984,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getClaimer",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1980,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1979,
												"mutability": "mutable",
												"name": "user",
												"nodeType": "VariableDeclaration",
												"scope": 1984,
												"src": "985:12:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1978,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "985:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "984:14:9"
									},
									"returnParameters": {
										"id": 1983,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1982,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1984,
												"src": "1022:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1981,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1022:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1021:9:9"
									},
									"scope": 2069,
									"src": "965:66:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1985,
										"nodeType": "StructuredDocumentation",
										"src": "1037:175:9",
										"text": " @dev Configure assets for a certain rewards emission\n @param assets The assets to incentivize\n @param emissionsPerSecond The emission for each asset"
									},
									"functionSelector": "79f171b2",
									"id": 1994,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "configureAssets",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1992,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1988,
												"mutability": "mutable",
												"name": "assets",
												"nodeType": "VariableDeclaration",
												"scope": 1994,
												"src": "1241:25:9",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 1986,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "1241:7:9",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 1987,
													"nodeType": "ArrayTypeName",
													"src": "1241:9:9",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1991,
												"mutability": "mutable",
												"name": "emissionsPerSecond",
												"nodeType": "VariableDeclaration",
												"scope": 1994,
												"src": "1268:37:9",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1989,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "1268:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1990,
													"nodeType": "ArrayTypeName",
													"src": "1268:9:9",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1240:66:9"
									},
									"returnParameters": {
										"id": 1993,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1320:0:9"
									},
									"scope": 2069,
									"src": "1216:105:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1995,
										"nodeType": "StructuredDocumentation",
										"src": "1327:308:9",
										"text": " @dev Called by the corresponding asset on any update that affects the rewards distribution\n @param asset The address of the user\n @param userBalance The balance of the user of the asset in the lending pool\n @param totalSupply The total supply of the asset in the lending pool*"
									},
									"functionSelector": "31873e2e",
									"id": 2004,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "handleAction",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2002,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1997,
												"mutability": "mutable",
												"name": "asset",
												"nodeType": "VariableDeclaration",
												"scope": 2004,
												"src": "1667:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1996,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1667:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1999,
												"mutability": "mutable",
												"name": "userBalance",
												"nodeType": "VariableDeclaration",
												"scope": 2004,
												"src": "1687:19:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1998,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1687:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2001,
												"mutability": "mutable",
												"name": "totalSupply",
												"nodeType": "VariableDeclaration",
												"scope": 2004,
												"src": "1713:19:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2000,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1713:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1660:77:9"
									},
									"returnParameters": {
										"id": 2003,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1746:0:9"
									},
									"scope": 2069,
									"src": "1639:108:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 2005,
										"nodeType": "StructuredDocumentation",
										"src": "1753:165:9",
										"text": " @dev Returns the total of rewards of an user, already accrued + not yet accrued\n @param user The address of the user\n @return The rewards*"
									},
									"functionSelector": "8b599f26",
									"id": 2015,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getRewardsBalance",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2011,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2008,
												"mutability": "mutable",
												"name": "assets",
												"nodeType": "VariableDeclaration",
												"scope": 2015,
												"src": "1949:25:9",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 2006,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "1949:7:9",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 2007,
													"nodeType": "ArrayTypeName",
													"src": "1949:9:9",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2010,
												"mutability": "mutable",
												"name": "user",
												"nodeType": "VariableDeclaration",
												"scope": 2015,
												"src": "1976:12:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2009,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1976:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1948:41:9"
									},
									"returnParameters": {
										"id": 2014,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2013,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 2015,
												"src": "2028:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2012,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2028:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2027:9:9"
									},
									"scope": 2069,
									"src": "1922:115:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 2016,
										"nodeType": "StructuredDocumentation",
										"src": "2043:280:9",
										"text": " @dev Claims reward for an user to the desired address, on all the assets of the lending pool, accumulating the pending rewards\n @param amount Amount of rewards to claim\n @param to Address that will be receiving the rewards\n @return Rewards claimed*"
									},
									"functionSelector": "3111e7b3",
									"id": 2028,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "claimRewards",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2024,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2019,
												"mutability": "mutable",
												"name": "assets",
												"nodeType": "VariableDeclaration",
												"scope": 2028,
												"src": "2355:25:9",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 2017,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "2355:7:9",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 2018,
													"nodeType": "ArrayTypeName",
													"src": "2355:9:9",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2021,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 2028,
												"src": "2387:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2020,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2387:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2023,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 2028,
												"src": "2408:10:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2022,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2408:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2348:75:9"
									},
									"returnParameters": {
										"id": 2027,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2026,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 2028,
												"src": "2442:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2025,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2442:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2441:9:9"
									},
									"scope": 2069,
									"src": "2327:124:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 2029,
										"nodeType": "StructuredDocumentation",
										"src": "2457:425:9",
										"text": " @dev Claims reward for an user on behalf, on all the assets of the lending pool, accumulating the pending rewards. The caller must\n be whitelisted via \"allowClaimOnBehalf\" function by the RewardsAdmin role manager\n @param amount Amount of rewards to claim\n @param user Address to check and claim rewards\n @param to Address that will be receiving the rewards\n @return Rewards claimed*"
									},
									"functionSelector": "6d34b96e",
									"id": 2043,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "claimRewardsOnBehalf",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2039,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2032,
												"mutability": "mutable",
												"name": "assets",
												"nodeType": "VariableDeclaration",
												"scope": 2043,
												"src": "2922:25:9",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 2030,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "2922:7:9",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 2031,
													"nodeType": "ArrayTypeName",
													"src": "2922:9:9",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2034,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 2043,
												"src": "2954:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2033,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2954:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2036,
												"mutability": "mutable",
												"name": "user",
												"nodeType": "VariableDeclaration",
												"scope": 2043,
												"src": "2975:12:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2035,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2975:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2038,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 2043,
												"src": "2994:10:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2037,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2994:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2915:94:9"
									},
									"returnParameters": {
										"id": 2042,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2041,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 2043,
												"src": "3028:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2040,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3028:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3027:9:9"
									},
									"scope": 2069,
									"src": "2886:151:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 2044,
										"nodeType": "StructuredDocumentation",
										"src": "3043:201:9",
										"text": " @dev Claims reward for msg.sender, on all the assets of the lending pool, accumulating the pending rewards\n @param amount Amount of rewards to claim\n @return Rewards claimed*"
									},
									"functionSelector": "41485304",
									"id": 2054,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "claimRewardsToSelf",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2050,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2047,
												"mutability": "mutable",
												"name": "assets",
												"nodeType": "VariableDeclaration",
												"scope": 2054,
												"src": "3276:25:9",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 2045,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "3276:7:9",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 2046,
													"nodeType": "ArrayTypeName",
													"src": "3276:9:9",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2049,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 2054,
												"src": "3303:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2048,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3303:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3275:43:9"
									},
									"returnParameters": {
										"id": 2053,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2052,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 2054,
												"src": "3337:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2051,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3337:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3336:9:9"
									},
									"scope": 2069,
									"src": "3248:98:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 2055,
										"nodeType": "StructuredDocumentation",
										"src": "3352:146:9",
										"text": " @dev returns the unclaimed rewards of the user\n @param user the address of the user\n @return the unclaimed user rewards"
									},
									"functionSelector": "198fa81e",
									"id": 2062,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getUserUnclaimedRewards",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2058,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2057,
												"mutability": "mutable",
												"name": "user",
												"nodeType": "VariableDeclaration",
												"scope": 2062,
												"src": "3535:12:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2056,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3535:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3534:14:9"
									},
									"returnParameters": {
										"id": 2061,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2060,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 2062,
												"src": "3572:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2059,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3572:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3571:9:9"
									},
									"scope": 2069,
									"src": "3502:79:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 2063,
										"nodeType": "StructuredDocumentation",
										"src": "3587:106:9",
										"text": " @dev for backward compatibility with previous implementation of the Incentives controller"
									},
									"functionSelector": "99248ea7",
									"id": 2068,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "REWARD_TOKEN",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2064,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3718:2:9"
									},
									"returnParameters": {
										"id": 2067,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2066,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 2068,
												"src": "3744:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2065,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3744:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3743:9:9"
									},
									"scope": 2069,
									"src": "3697:56:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 2070,
							"src": "195:3561:9"
						}
					],
					"src": "38:3720:9"
				},
				"id": 9
			},
			"contracts/Omnidex-incentives/interfaces/IScaledBalanceToken.sol": {
				"ast": {
					"absolutePath": "contracts/Omnidex-incentives/interfaces/IScaledBalanceToken.sol",
					"exportedSymbols": {
						"IScaledBalanceToken": [
							2096
						]
					},
					"id": 2097,
					"license": "agpl-3.0",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2071,
							"literals": [
								"solidity",
								"0.7",
								".5"
							],
							"nodeType": "PragmaDirective",
							"src": "38:22:10"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 2096,
							"linearizedBaseContracts": [
								2096
							],
							"name": "IScaledBalanceToken",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 2072,
										"nodeType": "StructuredDocumentation",
										"src": "99:301:10",
										"text": " @dev Returns the scaled balance of the user. The scaled balance is the sum of all the\n updated stored balance divided by the reserve's liquidity index at the moment of the update\n @param user The user whose balance is calculated\n @return The scaled balance of the user*"
									},
									"functionSelector": "1da24f3e",
									"id": 2079,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "scaledBalanceOf",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2075,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2074,
												"mutability": "mutable",
												"name": "user",
												"nodeType": "VariableDeclaration",
												"scope": 2079,
												"src": "429:12:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2073,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "429:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "428:14:10"
									},
									"returnParameters": {
										"id": 2078,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2077,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 2079,
												"src": "466:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2076,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "466:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "465:9:10"
									},
									"scope": 2096,
									"src": "404:71:10",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 2080,
										"nodeType": "StructuredDocumentation",
										"src": "481:238:10",
										"text": " @dev Returns the scaled balance of the user and the scaled total supply.\n @param user The address of the user\n @return The scaled balance of the user\n @return The scaled balance and the scaled total supply*"
									},
									"functionSelector": "0afbcdc9",
									"id": 2089,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getScaledUserBalanceAndSupply",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2083,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2082,
												"mutability": "mutable",
												"name": "user",
												"nodeType": "VariableDeclaration",
												"scope": 2089,
												"src": "762:12:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2081,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "762:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "761:14:10"
									},
									"returnParameters": {
										"id": 2088,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2085,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 2089,
												"src": "799:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2084,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "799:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2087,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 2089,
												"src": "808:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2086,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "808:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "798:18:10"
									},
									"scope": 2096,
									"src": "723:94:10",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 2090,
										"nodeType": "StructuredDocumentation",
										"src": "823:133:10",
										"text": " @dev Returns the scaled total supply of the token. Represents sum(debt/index)\n @return The scaled total supply*"
									},
									"functionSelector": "b1bf962d",
									"id": 2095,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "scaledTotalSupply",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2091,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "986:2:10"
									},
									"returnParameters": {
										"id": 2094,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2093,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 2095,
												"src": "1012:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2092,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1012:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1011:9:10"
									},
									"scope": 2096,
									"src": "960:61:10",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 2097,
							"src": "64:960:10"
						}
					],
					"src": "38:988:10"
				},
				"id": 10
			},
			"contracts/Omnidex-incentives/lib/DistributionTypes.sol": {
				"ast": {
					"absolutePath": "contracts/Omnidex-incentives/lib/DistributionTypes.sol",
					"exportedSymbols": {
						"DistributionTypes": [
							2114
						]
					},
					"id": 2115,
					"license": "agpl-3.0",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2098,
							"literals": [
								"solidity",
								"0.7",
								".5"
							],
							"nodeType": "PragmaDirective",
							"src": "38:22:11"
						},
						{
							"id": 2099,
							"literals": [
								"experimental",
								"ABIEncoderV2"
							],
							"nodeType": "PragmaDirective",
							"src": "62:33:11"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"fullyImplemented": true,
							"id": 2114,
							"linearizedBaseContracts": [
								2114
							],
							"name": "DistributionTypes",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "DistributionTypes.AssetConfigInput",
									"id": 2106,
									"members": [
										{
											"constant": false,
											"id": 2101,
											"mutability": "mutable",
											"name": "emissionPerSecond",
											"nodeType": "VariableDeclaration",
											"scope": 2106,
											"src": "161:25:11",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint104",
												"typeString": "uint104"
											},
											"typeName": {
												"id": 2100,
												"name": "uint104",
												"nodeType": "ElementaryTypeName",
												"src": "161:7:11",
												"typeDescriptions": {
													"typeIdentifier": "t_uint104",
													"typeString": "uint104"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2103,
											"mutability": "mutable",
											"name": "totalStaked",
											"nodeType": "VariableDeclaration",
											"scope": 2106,
											"src": "193:19:11",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 2102,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "193:7:11",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2105,
											"mutability": "mutable",
											"name": "underlyingAsset",
											"nodeType": "VariableDeclaration",
											"scope": 2106,
											"src": "219:23:11",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 2104,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "219:7:11",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "AssetConfigInput",
									"nodeType": "StructDefinition",
									"scope": 2114,
									"src": "130:118:11",
									"visibility": "public"
								},
								{
									"canonicalName": "DistributionTypes.UserStakeInput",
									"id": 2113,
									"members": [
										{
											"constant": false,
											"id": 2108,
											"mutability": "mutable",
											"name": "underlyingAsset",
											"nodeType": "VariableDeclaration",
											"scope": 2113,
											"src": "283:23:11",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 2107,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "283:7:11",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2110,
											"mutability": "mutable",
											"name": "stakedByUser",
											"nodeType": "VariableDeclaration",
											"scope": 2113,
											"src": "313:20:11",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 2109,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "313:7:11",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2112,
											"mutability": "mutable",
											"name": "totalStaked",
											"nodeType": "VariableDeclaration",
											"scope": 2113,
											"src": "340:19:11",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 2111,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "340:7:11",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "UserStakeInput",
									"nodeType": "StructDefinition",
									"scope": 2114,
									"src": "254:111:11",
									"visibility": "public"
								}
							],
							"scope": 2115,
							"src": "99:269:11"
						}
					],
					"src": "38:332:11"
				},
				"id": 11
			},
			"contracts/Omnidex-incentives/lib/SafeMath.sol": {
				"ast": {
					"absolutePath": "contracts/Omnidex-incentives/lib/SafeMath.sol",
					"exportedSymbols": {
						"SafeMath": [
							2204
						]
					},
					"id": 2205,
					"license": "agpl-3.0",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2116,
							"literals": [
								"solidity",
								"^",
								"0.7",
								".5"
							],
							"nodeType": "PragmaDirective",
							"src": "40:23:12"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 2117,
								"nodeType": "StructuredDocumentation",
								"src": "67:208:12",
								"text": "@title Optimized overflow and underflow safe math operations\n @notice Contains methods for doing math operations that revert on overflow or underflow for minimal gas cost\n inspired by uniswap V3"
							},
							"fullyImplemented": true,
							"id": 2204,
							"linearizedBaseContracts": [
								2204
							],
							"name": "SafeMath",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 2138,
										"nodeType": "Block",
										"src": "529:44:12",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2135,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"id": 2132,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2128,
																			"name": "z",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2125,
																			"src": "549:1:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2131,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2129,
																				"name": "x",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2120,
																				"src": "553:1:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"id": 2130,
																				"name": "y",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2122,
																				"src": "557:1:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "553:5:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "549:9:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 2133,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "548:11:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 2134,
																"name": "x",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2120,
																"src": "563:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "548:16:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 2127,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "540:7:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 2136,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "540:25:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2137,
												"nodeType": "ExpressionStatement",
												"src": "540:25:12"
											}
										]
									},
									"documentation": {
										"id": 2118,
										"nodeType": "StructuredDocumentation",
										"src": "299:155:12",
										"text": "@notice Returns x + y, reverts if sum overflows uint256\n @param x The augend\n @param y The addend\n @return z The sum of x and y"
									},
									"id": 2139,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "add",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2123,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2120,
												"mutability": "mutable",
												"name": "x",
												"nodeType": "VariableDeclaration",
												"scope": 2139,
												"src": "473:9:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2119,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "473:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2122,
												"mutability": "mutable",
												"name": "y",
												"nodeType": "VariableDeclaration",
												"scope": 2139,
												"src": "484:9:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2121,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "484:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "472:22:12"
									},
									"returnParameters": {
										"id": 2126,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2125,
												"mutability": "mutable",
												"name": "z",
												"nodeType": "VariableDeclaration",
												"scope": 2139,
												"src": "518:9:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2124,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "518:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "517:11:12"
									},
									"scope": 2204,
									"src": "460:113:12",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2160,
										"nodeType": "Block",
										"src": "812:44:12",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2157,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"id": 2154,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2150,
																			"name": "z",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2147,
																			"src": "832:1:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2153,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2151,
																				"name": "x",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2142,
																				"src": "836:1:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "-",
																			"rightExpression": {
																				"id": 2152,
																				"name": "y",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2144,
																				"src": "840:1:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "836:5:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "832:9:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 2155,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "831:11:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"id": 2156,
																"name": "x",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2142,
																"src": "846:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "831:16:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 2149,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "823:7:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 2158,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "823:25:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2159,
												"nodeType": "ExpressionStatement",
												"src": "823:25:12"
											}
										]
									},
									"documentation": {
										"id": 2140,
										"nodeType": "StructuredDocumentation",
										"src": "581:156:12",
										"text": "@notice Returns x - y, reverts if underflows\n @param x The minuend\n @param y The subtrahend\n @return z The difference of x and y"
									},
									"id": 2161,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2145,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2142,
												"mutability": "mutable",
												"name": "x",
												"nodeType": "VariableDeclaration",
												"scope": 2161,
												"src": "756:9:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2141,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "756:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2144,
												"mutability": "mutable",
												"name": "y",
												"nodeType": "VariableDeclaration",
												"scope": 2161,
												"src": "767:9:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2143,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "767:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "755:22:12"
									},
									"returnParameters": {
										"id": 2148,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2147,
												"mutability": "mutable",
												"name": "z",
												"nodeType": "VariableDeclaration",
												"scope": 2161,
												"src": "801:9:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2146,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "801:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "800:11:12"
									},
									"scope": 2204,
									"src": "743:113:12",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2188,
										"nodeType": "Block",
										"src": "1096:58:12",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 2185,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2174,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2172,
																	"name": "x",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2164,
																	"src": "1115:1:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 2173,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1120:1:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "1115:6:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2184,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2182,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"components": [
																			{
																				"id": 2179,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftHandSide": {
																					"id": 2175,
																					"name": "z",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2169,
																					"src": "1126:1:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "Assignment",
																				"operator": "=",
																				"rightHandSide": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 2178,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 2176,
																						"name": "x",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2164,
																						"src": "1130:1:12",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "*",
																					"rightExpression": {
																						"id": 2177,
																						"name": "y",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2166,
																						"src": "1134:1:12",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "1130:5:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "1126:9:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"id": 2180,
																		"isConstant": false,
																		"isInlineArray": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "TupleExpression",
																		"src": "1125:11:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"id": 2181,
																		"name": "x",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2164,
																		"src": "1139:1:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "1125:15:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"id": 2183,
																	"name": "y",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2166,
																	"src": "1144:1:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1125:20:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "1115:30:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 2171,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "1107:7:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 2186,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1107:39:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2187,
												"nodeType": "ExpressionStatement",
												"src": "1107:39:12"
											}
										]
									},
									"documentation": {
										"id": 2162,
										"nodeType": "StructuredDocumentation",
										"src": "864:157:12",
										"text": "@notice Returns x * y, reverts if overflows\n @param x The multiplicand\n @param y The multiplier\n @return z The product of x and y"
									},
									"id": 2189,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mul",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2167,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2164,
												"mutability": "mutable",
												"name": "x",
												"nodeType": "VariableDeclaration",
												"scope": 2189,
												"src": "1040:9:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2163,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1040:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2166,
												"mutability": "mutable",
												"name": "y",
												"nodeType": "VariableDeclaration",
												"scope": 2189,
												"src": "1051:9:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2165,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1051:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1039:22:12"
									},
									"returnParameters": {
										"id": 2170,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2169,
												"mutability": "mutable",
												"name": "z",
												"nodeType": "VariableDeclaration",
												"scope": 2189,
												"src": "1085:9:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2168,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1085:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1084:11:12"
									},
									"scope": 2204,
									"src": "1027:127:12",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2202,
										"nodeType": "Block",
										"src": "1228:108:12",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2200,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2198,
														"name": "x",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2191,
														"src": "1323:1:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"id": 2199,
														"name": "y",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2193,
														"src": "1327:1:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1323:5:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2197,
												"id": 2201,
												"nodeType": "Return",
												"src": "1316:12:12"
											}
										]
									},
									"id": 2203,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2194,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2191,
												"mutability": "mutable",
												"name": "x",
												"nodeType": "VariableDeclaration",
												"scope": 2203,
												"src": "1175:9:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2190,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1175:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2193,
												"mutability": "mutable",
												"name": "y",
												"nodeType": "VariableDeclaration",
												"scope": 2203,
												"src": "1186:9:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2192,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1186:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1174:22:12"
									},
									"returnParameters": {
										"id": 2197,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2196,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 2203,
												"src": "1219:7:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2195,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1219:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1218:9:12"
									},
									"scope": 2204,
									"src": "1162:174:12",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 2205,
							"src": "275:1064:12"
						}
					],
					"src": "40:1299:12"
				},
				"id": 12
			}
		}
	}
}