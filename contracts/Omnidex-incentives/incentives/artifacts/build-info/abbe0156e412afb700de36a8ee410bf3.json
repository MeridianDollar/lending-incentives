{
	"id": "abbe0156e412afb700de36a8ee410bf3",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.7.5",
	"solcLongVersion": "0.7.5+commit.eb77ed08",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/Omnidex-incentives/incentives/OmnidexIncentivesVault.sol": {
				"content": "pragma solidity 0.7.5;\n\nimport 'https://github.com/OmniDexFinance/helper/blob/master/%40openzeppelin/contracts/utils/Pausable.sol';\nimport 'https://github.com/OmniDexFinance/helper/blob/master/%40openzeppelin/contracts/access/Ownable.sol';\nimport 'https://github.com/OmniDexFinance/helper/blob/master/%40openzeppelin/contracts/token/ERC20/SafeERC20.sol';\nimport 'https://github.com/OmniDexFinance/helper/blob/master/%40openzeppelin/contracts/math/SafeMath.sol';\nimport 'https://github.com/OmniDexFinance/helper/blob/master/%40openzeppelin/contracts/token/ERC20/IERC20.sol';\n\ncontract OmnidexIncentivesVault is Ownable, Pausable {\n    using SafeERC20 for IERC20;\n    using SafeMath for uint256;\n\n    IERC20 public immutable token; // incentive token\n    address public admin;\n    address public approvedSpender;\n    uint public dailyLimit;\n    uint public lastDay;\n    uint public spentToday;\n\n    event Deposit(address indexed sender, uint256 amount);\n    event Withdraw(address indexed sender, uint256 amount);\n    event Pause();\n    event Unpause();\n\n    /**\n     * @notice Constructor\n     * @param _token: Incentives token contract\n     * @param _approvedSpender: PullRewardsIncentivesController contract\n     * @param _admin: address of the admin\n     * @param _dailyLimit: max permitted incentives spend each day\n     */\n    constructor(\n        IERC20 _token,\n        address _approvedSpender,\n        address _admin,\n        uint _dailyLimit\n    ) {\n        token = _token;\n        approvedSpender = _approvedSpender;\n        admin = _admin;\n        dailyLimit = _dailyLimit;\n\n        // Infinite approve\n        IERC20(_token).safeApprove(address(_approvedSpender), uint256(-1));\n    }\n\n    /**\n     * @notice Checks if the msg.sender is the admin address\n     */\n    modifier onlyAdmin() {\n        require(msg.sender == admin, \"Only admin permitted\");\n        _;\n    }\n\n    /**\n     * @notice Checks if the msg.sender is authorised to spend\n     */\n    modifier onlyAuth() {\n        require(msg.sender == approvedSpender, \"Not an authorised spender\");\n        _;\n    }\n\n    /**\n     * @notice Deposits funds into the  Vault\n     * @dev Only possible when contract not paused.\n     * @param _amount: number of tokens to deposit (in TLOS)\n     */\n    function deposit(uint256 _amount) external whenNotPaused {\n        require(_amount > 0, \"Nothing to deposit\");\n        token.safeTransferFrom(msg.sender, address(this), _amount);\n\n        emit Deposit(msg.sender, _amount);\n    }\n\n    function getIncentivesBalance() public view returns (uint) {\n        return token.balanceOf(address(this));\n    }\n\n    /**\n     * @notice Withdraws all funds back to owner\n     */\n    function withdrawAll() external onlyOwner {\n        token.safeTransfer(msg.sender, token.balanceOf(address(this)));\n    }\n\n    /**\n     * @notice Sets new daily limit\n     * @dev Only callable by the contract owner.\n     */\n    function setDailyLimit(uint _newDailyLimit) external onlyOwner {\n        require(_newDailyLimit >=0 , \"Cannot be negative number\");\n        dailyLimit = _newDailyLimit;\n    }\n\n    function getDailyLimit() public view returns (uint) {\n        return dailyLimit;\n    }\n\n    /**\n     * @notice Sets admin address\n     * @dev Only callable by the contract owner.\n     */\n    function setAdmin(address _admin) external onlyOwner {\n        require(_admin != address(0), \"Cannot be zero address\");\n        admin = _admin;\n    }\n\n    /**\n     * @notice Withdraw unexpected tokens sent to the Charm Vault\n     */\n    function inCaseTokensGetStuck(address _token) external onlyAdmin {\n        require(_token != address(token), \"Token cannot be same as incentives token\");\n        uint256 amount = IERC20(_token).balanceOf(address(this));\n        IERC20(_token).safeTransfer(msg.sender, amount);\n    }\n\n    /**\n     * @notice Triggers stopped state\n     * @dev Only possible when contract not paused.\n     */\n    function pause() external onlyAdmin whenNotPaused {\n        _pause();\n        emit Pause();\n    }\n\n    /**\n     * @notice Returns to normal state\n     * @dev Only possible when contract is paused.\n     */\n    function unpause() external onlyAdmin whenPaused {\n        _unpause();\n        emit Unpause();\n    }\n\n    /**\n     * @notice Withdraws incentives from funds in the Vault\n     * @notice can only be called by authorised spenders\n     * @param _amount: amount to withdraw\n     */\n    function withdraw(address _to, uint256 _amount) public whenNotPaused onlyAuth {\n        require(_amount > 0, \"Nothing to withdraw\");\n        require(token.balanceOf(address(this)) > _amount, \"Insufficient incentives available\");\n        if (isUnderLimit(_amount)){\n            spentToday += _amount;\n            token.safeTransfer(_to, _amount);\n        }\n\n        emit Withdraw(_to, _amount);\n    }\n\n     /*\n     * Internal functions\n     */\n    /// @dev Returns if amount is within daily limit and resets spentToday after one day.\n    /// @param amount Amount to withdraw.\n    /// @return Returns if amount is under daily limit.\n    function isUnderLimit(uint amount)\n        internal\n        returns (bool)\n    {\n        if (block.timestamp > lastDay + 24 hours) {\n            lastDay = block.timestamp;\n            spentToday = 0;\n        }\n        if (spentToday + amount > dailyLimit || spentToday + amount < spentToday)\n            return false;\n        return true;\n    }\n}"
			},
			"https://github.com/OmniDexFinance/helper/blob/master/%40openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n\npragma solidity >=0.6.0 <0.8.0;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Returns the amount of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the amount of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves `amount` tokens from the caller's account to `recipient`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address recipient, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Moves `amount` tokens from `sender` to `recipient` using the\n     * allowance mechanism. `amount` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address sender, address recipient, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n}\n"
			},
			"https://github.com/OmniDexFinance/helper/blob/master/%40openzeppelin/contracts/math/SafeMath.sol": {
				"content": "// SPDX-License-Identifier: MIT\n\npragma solidity >=0.6.0 <0.8.0;\n\n/**\n * @dev Wrappers over Solidity's arithmetic operations with added overflow\n * checks.\n *\n * Arithmetic operations in Solidity wrap on overflow. This can easily result\n * in bugs, because programmers usually assume that an overflow raises an\n * error, which is the standard behavior in high level programming languages.\n * `SafeMath` restores this intuition by reverting the transaction when an\n * operation overflows.\n *\n * Using this library instead of the unchecked operations eliminates an entire\n * class of bugs, so it's recommended to use it always.\n */\nlibrary SafeMath {\n    /**\n     * @dev Returns the addition of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryAdd(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        uint256 c = a + b;\n        if (c < a) return (false, 0);\n        return (true, c);\n    }\n\n    /**\n     * @dev Returns the substraction of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function trySub(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        if (b > a) return (false, 0);\n        return (true, a - b);\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryMul(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\n        // benefit is lost if 'b' is also tested.\n        // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\n        if (a == 0) return (true, 0);\n        uint256 c = a * b;\n        if (c / a != b) return (false, 0);\n        return (true, c);\n    }\n\n    /**\n     * @dev Returns the division of two unsigned integers, with a division by zero flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryDiv(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        if (b == 0) return (false, 0);\n        return (true, a / b);\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryMod(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        if (b == 0) return (false, 0);\n        return (true, a % b);\n    }\n\n    /**\n     * @dev Returns the addition of two unsigned integers, reverting on\n     * overflow.\n     *\n     * Counterpart to Solidity's `+` operator.\n     *\n     * Requirements:\n     *\n     * - Addition cannot overflow.\n     */\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\n        uint256 c = a + b;\n        require(c >= a, \"SafeMath: addition overflow\");\n        return c;\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, reverting on\n     * overflow (when the result is negative).\n     *\n     * Counterpart to Solidity's `-` operator.\n     *\n     * Requirements:\n     *\n     * - Subtraction cannot overflow.\n     */\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\n        require(b <= a, \"SafeMath: subtraction overflow\");\n        return a - b;\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, reverting on\n     * overflow.\n     *\n     * Counterpart to Solidity's `*` operator.\n     *\n     * Requirements:\n     *\n     * - Multiplication cannot overflow.\n     */\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\n        if (a == 0) return 0;\n        uint256 c = a * b;\n        require(c / a == b, \"SafeMath: multiplication overflow\");\n        return c;\n    }\n\n    /**\n     * @dev Returns the integer division of two unsigned integers, reverting on\n     * division by zero. The result is rounded towards zero.\n     *\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\n     * uses an invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\n        require(b > 0, \"SafeMath: division by zero\");\n        return a / b;\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n     * reverting when dividing by zero.\n     *\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\n     * invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function mod(uint256 a, uint256 b) internal pure returns (uint256) {\n        require(b > 0, \"SafeMath: modulo by zero\");\n        return a % b;\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, reverting with custom message on\n     * overflow (when the result is negative).\n     *\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\n     * message unnecessarily. For custom revert reasons use {trySub}.\n     *\n     * Counterpart to Solidity's `-` operator.\n     *\n     * Requirements:\n     *\n     * - Subtraction cannot overflow.\n     */\n    function sub(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\n        require(b <= a, errorMessage);\n        return a - b;\n    }\n\n    /**\n     * @dev Returns the integer division of two unsigned integers, reverting with custom message on\n     * division by zero. The result is rounded towards zero.\n     *\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\n     * message unnecessarily. For custom revert reasons use {tryDiv}.\n     *\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\n     * uses an invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function div(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\n        require(b > 0, errorMessage);\n        return a / b;\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n     * reverting with custom message when dividing by zero.\n     *\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\n     * message unnecessarily. For custom revert reasons use {tryMod}.\n     *\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\n     * invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function mod(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\n        require(b > 0, errorMessage);\n        return a % b;\n    }\n}\n"
			},
			"https://github.com/OmniDexFinance/helper/blob/master/%40openzeppelin/contracts/token/ERC20/SafeERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n\npragma solidity >=0.6.0 <0.8.0;\n\nimport \"./IERC20.sol\";\nimport \"../../math/SafeMath.sol\";\nimport \"../../utils/Address.sol\";\n\n/**\n * @title SafeERC20\n * @dev Wrappers around ERC20 operations that throw on failure (when the token\n * contract returns false). Tokens that return no value (and instead revert or\n * throw on failure) are also supported, non-reverting calls are assumed to be\n * successful.\n * To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\n * which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\n */\nlibrary SafeERC20 {\n    using SafeMath for uint256;\n    using Address for address;\n\n    function safeTransfer(IERC20 token, address to, uint256 value) internal {\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transfer.selector, to, value));\n    }\n\n    function safeTransferFrom(IERC20 token, address from, address to, uint256 value) internal {\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transferFrom.selector, from, to, value));\n    }\n\n    /**\n     * @dev Deprecated. This function has issues similar to the ones found in\n     * {IERC20-approve}, and its usage is discouraged.\n     *\n     * Whenever possible, use {safeIncreaseAllowance} and\n     * {safeDecreaseAllowance} instead.\n     */\n    function safeApprove(IERC20 token, address spender, uint256 value) internal {\n        // safeApprove should only be called when setting an initial allowance,\n        // or when resetting it to zero. To increase and decrease it, use\n        // 'safeIncreaseAllowance' and 'safeDecreaseAllowance'\n        // solhint-disable-next-line max-line-length\n        require((value == 0) || (token.allowance(address(this), spender) == 0),\n            \"SafeERC20: approve from non-zero to non-zero allowance\"\n        );\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, value));\n    }\n\n    function safeIncreaseAllowance(IERC20 token, address spender, uint256 value) internal {\n        uint256 newAllowance = token.allowance(address(this), spender).add(value);\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, newAllowance));\n    }\n\n    function safeDecreaseAllowance(IERC20 token, address spender, uint256 value) internal {\n        uint256 newAllowance = token.allowance(address(this), spender).sub(value, \"SafeERC20: decreased allowance below zero\");\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, newAllowance));\n    }\n\n    /**\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\n     * @param token The token targeted by the call.\n     * @param data The call data (encoded using abi.encode or one of its variants).\n     */\n    function _callOptionalReturn(IERC20 token, bytes memory data) private {\n        // We need to perform a low level call here, to bypass Solidity's return data size checking mechanism, since\n        // we're implementing it ourselves. We use {Address.functionCall} to perform this call, which verifies that\n        // the target address contains contract code and also asserts for success in the low-level call.\n\n        bytes memory returndata = address(token).functionCall(data, \"SafeERC20: low-level call failed\");\n        if (returndata.length > 0) { // Return data is optional\n            // solhint-disable-next-line max-line-length\n            require(abi.decode(returndata, (bool)), \"SafeERC20: ERC20 operation did not succeed\");\n        }\n    }\n}\n"
			},
			"https://github.com/OmniDexFinance/helper/blob/master/%40openzeppelin/contracts/access/Ownable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n\npragma solidity >=0.6.0 <0.8.0;\n\nimport \"../utils/Context.sol\";\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * By default, the owner account will be the one that deploys the contract. This\n * can later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the deployer as the initial owner.\n     */\n    constructor () internal {\n        address msgSender = _msgSender();\n        _owner = msgSender;\n        emit OwnershipTransferred(address(0), msgSender);\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        require(owner() == _msgSender(), \"Ownable: caller is not the owner\");\n        _;\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby removing any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        emit OwnershipTransferred(_owner, address(0));\n        _owner = address(0);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        require(newOwner != address(0), \"Ownable: new owner is the zero address\");\n        emit OwnershipTransferred(_owner, newOwner);\n        _owner = newOwner;\n    }\n}\n"
			},
			"https://github.com/OmniDexFinance/helper/blob/master/%40openzeppelin/contracts/utils/Pausable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n\npragma solidity >=0.6.0 <0.8.0;\n\nimport \"./Context.sol\";\n\n/**\n * @dev Contract module which allows children to implement an emergency stop\n * mechanism that can be triggered by an authorized account.\n *\n * This module is used through inheritance. It will make available the\n * modifiers `whenNotPaused` and `whenPaused`, which can be applied to\n * the functions of your contract. Note that they will not be pausable by\n * simply including this module, only once the modifiers are put in place.\n */\nabstract contract Pausable is Context {\n    /**\n     * @dev Emitted when the pause is triggered by `account`.\n     */\n    event Paused(address account);\n\n    /**\n     * @dev Emitted when the pause is lifted by `account`.\n     */\n    event Unpaused(address account);\n\n    bool private _paused;\n\n    /**\n     * @dev Initializes the contract in unpaused state.\n     */\n    constructor () internal {\n        _paused = false;\n    }\n\n    /**\n     * @dev Returns true if the contract is paused, and false otherwise.\n     */\n    function paused() public view virtual returns (bool) {\n        return _paused;\n    }\n\n    /**\n     * @dev Modifier to make a function callable only when the contract is not paused.\n     *\n     * Requirements:\n     *\n     * - The contract must not be paused.\n     */\n    modifier whenNotPaused() {\n        require(!paused(), \"Pausable: paused\");\n        _;\n    }\n\n    /**\n     * @dev Modifier to make a function callable only when the contract is paused.\n     *\n     * Requirements:\n     *\n     * - The contract must be paused.\n     */\n    modifier whenPaused() {\n        require(paused(), \"Pausable: not paused\");\n        _;\n    }\n\n    /**\n     * @dev Triggers stopped state.\n     *\n     * Requirements:\n     *\n     * - The contract must not be paused.\n     */\n    function _pause() internal virtual whenNotPaused {\n        _paused = true;\n        emit Paused(_msgSender());\n    }\n\n    /**\n     * @dev Returns to normal state.\n     *\n     * Requirements:\n     *\n     * - The contract must be paused.\n     */\n    function _unpause() internal virtual whenPaused {\n        _paused = false;\n        emit Unpaused(_msgSender());\n    }\n}\n"
			},
			"https://github.com/OmniDexFinance/helper/blob/master/%40openzeppelin/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n\npragma solidity >=0.6.0 <0.8.0;\n\n/*\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with GSN meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address payable) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes memory) {\n        this; // silence state mutability warning without generating bytecode - see https://github.com/ethereum/solidity/issues/2691\n        return msg.data;\n    }\n}\n"
			},
			"https://github.com/OmniDexFinance/helper/blob/master/%40openzeppelin/contracts/utils/Address.sol": {
				"content": "// SPDX-License-Identifier: MIT\n\npragma solidity >=0.6.2 <0.8.0;\n\n/**\n * @dev Collection of functions related to the address type\n */\nlibrary Address {\n    /**\n     * @dev Returns true if `account` is a contract.\n     *\n     * [IMPORTANT]\n     * ====\n     * It is unsafe to assume that an address for which this function returns\n     * false is an externally-owned account (EOA) and not a contract.\n     *\n     * Among others, `isContract` will return false for the following\n     * types of addresses:\n     *\n     *  - an externally-owned account\n     *  - a contract in construction\n     *  - an address where a contract will be created\n     *  - an address where a contract lived, but was destroyed\n     * ====\n     */\n    function isContract(address account) internal view returns (bool) {\n        // This method relies on extcodesize, which returns 0 for contracts in\n        // construction, since the code is only stored at the end of the\n        // constructor execution.\n\n        uint256 size;\n        // solhint-disable-next-line no-inline-assembly\n        assembly { size := extcodesize(account) }\n        return size > 0;\n    }\n\n    /**\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n     * `recipient`, forwarding all available gas and reverting on errors.\n     *\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\n     * imposed by `transfer`, making them unable to receive funds via\n     * `transfer`. {sendValue} removes this limitation.\n     *\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n     *\n     * IMPORTANT: because control is transferred to `recipient`, care must be\n     * taken to not create reentrancy vulnerabilities. Consider using\n     * {ReentrancyGuard} or the\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\n     */\n    function sendValue(address payable recipient, uint256 amount) internal {\n        require(address(this).balance >= amount, \"Address: insufficient balance\");\n\n        // solhint-disable-next-line avoid-low-level-calls, avoid-call-value\n        (bool success, ) = recipient.call{ value: amount }(\"\");\n        require(success, \"Address: unable to send value, recipient may have reverted\");\n    }\n\n    /**\n     * @dev Performs a Solidity function call using a low level `call`. A\n     * plain`call` is an unsafe replacement for a function call: use this\n     * function instead.\n     *\n     * If `target` reverts with a revert reason, it is bubbled up by this\n     * function (like regular Solidity function calls).\n     *\n     * Returns the raw returned data. To convert to the expected return value,\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n     *\n     * Requirements:\n     *\n     * - `target` must be a contract.\n     * - calling `target` with `data` must not revert.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\n      return functionCall(target, data, \"Address: low-level call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n     * `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(address target, bytes memory data, string memory errorMessage) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but also transferring `value` wei to `target`.\n     *\n     * Requirements:\n     *\n     * - the calling contract must have an ETH balance of at least `value`.\n     * - the called Solidity function must be `payable`.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, value, \"Address: low-level call with value failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(address target, bytes memory data, uint256 value, string memory errorMessage) internal returns (bytes memory) {\n        require(address(this).balance >= value, \"Address: insufficient balance for call\");\n        require(isContract(target), \"Address: call to non-contract\");\n\n        // solhint-disable-next-line avoid-low-level-calls\n        (bool success, bytes memory returndata) = target.call{ value: value }(data);\n        return _verifyCallResult(success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\n        return functionStaticCall(target, data, \"Address: low-level static call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(address target, bytes memory data, string memory errorMessage) internal view returns (bytes memory) {\n        require(isContract(target), \"Address: static call to non-contract\");\n\n        // solhint-disable-next-line avoid-low-level-calls\n        (bool success, bytes memory returndata) = target.staticcall(data);\n        return _verifyCallResult(success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a delegate call.\n     *\n     * _Available since v3.4._\n     */\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionDelegateCall(target, data, \"Address: low-level delegate call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a delegate call.\n     *\n     * _Available since v3.4._\n     */\n    function functionDelegateCall(address target, bytes memory data, string memory errorMessage) internal returns (bytes memory) {\n        require(isContract(target), \"Address: delegate call to non-contract\");\n\n        // solhint-disable-next-line avoid-low-level-calls\n        (bool success, bytes memory returndata) = target.delegatecall(data);\n        return _verifyCallResult(success, returndata, errorMessage);\n    }\n\n    function _verifyCallResult(bool success, bytes memory returndata, string memory errorMessage) private pure returns(bytes memory) {\n        if (success) {\n            return returndata;\n        } else {\n            // Look for revert reason and bubble it up if present\n            if (returndata.length > 0) {\n                // The easiest way to bubble the revert reason is using memory via assembly\n\n                // solhint-disable-next-line no-inline-assembly\n                assembly {\n                    let returndata_size := mload(returndata)\n                    revert(add(32, returndata), returndata_size)\n                }\n            } else {\n                revert(errorMessage);\n            }\n        }\n    }\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"contracts/Omnidex-incentives/incentives/OmnidexIncentivesVault.sol": {
				"OmnidexIncentivesVault": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "contract IERC20",
									"name": "_token",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_approvedSpender",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_admin",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_dailyLimit",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "Deposit",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [],
							"name": "Pause",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "Paused",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [],
							"name": "Unpause",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "Unpaused",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "Withdraw",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "admin",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "approvedSpender",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "dailyLimit",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_amount",
									"type": "uint256"
								}
							],
							"name": "deposit",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getDailyLimit",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getIncentivesBalance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_token",
									"type": "address"
								}
							],
							"name": "inCaseTokensGetStuck",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "lastDay",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "pause",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "paused",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_admin",
									"type": "address"
								}
							],
							"name": "setAdmin",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_newDailyLimit",
									"type": "uint256"
								}
							],
							"name": "setDailyLimit",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "spentToday",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "token",
							"outputs": [
								{
									"internalType": "contract IERC20",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "unpause",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_amount",
									"type": "uint256"
								}
							],
							"name": "withdraw",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "withdrawAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"constructor": {
								"params": {
									"_admin": ": address of the admin",
									"_approvedSpender": ": PullRewardsIncentivesController contract",
									"_dailyLimit": ": max permitted incentives spend each day",
									"_token": ": Incentives token contract"
								}
							},
							"deposit(uint256)": {
								"details": "Only possible when contract not paused.",
								"params": {
									"_amount": ": number of tokens to deposit (in TLOS)"
								}
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"pause()": {
								"details": "Only possible when contract not paused."
							},
							"paused()": {
								"details": "Returns true if the contract is paused, and false otherwise."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
							},
							"setAdmin(address)": {
								"details": "Only callable by the contract owner."
							},
							"setDailyLimit(uint256)": {
								"details": "Only callable by the contract owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							},
							"unpause()": {
								"details": "Only possible when contract is paused."
							},
							"withdraw(address,uint256)": {
								"params": {
									"_amount": ": amount to withdraw"
								}
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/Omnidex-incentives/incentives/OmnidexIncentivesVault.sol\":575:5378  contract OmnidexIncentivesVault is Ownable, Pausable {... */\n  mstore(0x40, 0xa0)\n    /* \"contracts/Omnidex-incentives/incentives/OmnidexIncentivesVault.sol\":1331:1694  constructor(... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  0x80\n  dup2\n  lt\n  iszero\n  tag_2\n  jumpi\n  0x00\n  dup1\n  revert\ntag_2:\n  pop\n  dup1\n  mload\n  0x20\n  dup3\n  add\n  mload\n  0x40\n  dup4\n  add\n  mload\n  0x60\n  swap1\n  swap4\n  add\n  mload\n  swap2\n  swap3\n  swap1\n  swap2\n    /* \"https://github.com/OmniDexFinance/helper/blob/master/%40openzeppelin/contracts/access/Ownable.sol\":884:901  address msgSender */\n  0x00\n    /* \"https://github.com/OmniDexFinance/helper/blob/master/%40openzeppelin/contracts/access/Ownable.sol\":904:916  _msgSender() */\n  tag_7\n    /* \"https://github.com/OmniDexFinance/helper/blob/master/%40openzeppelin/contracts/access/Ownable.sol\":904:914  _msgSender */\n  tag_8\n    /* \"https://github.com/OmniDexFinance/helper/blob/master/%40openzeppelin/contracts/access/Ownable.sol\":904:916  _msgSender() */\n  jump\t// in\ntag_7:\n    /* \"https://github.com/OmniDexFinance/helper/blob/master/%40openzeppelin/contracts/access/Ownable.sol\":926:932  _owner */\n  0x00\n    /* \"https://github.com/OmniDexFinance/helper/blob/master/%40openzeppelin/contracts/access/Ownable.sol\":926:944  _owner = msgSender */\n  dup1\n  sload\n  not(sub(shl(0xa0, 0x01), 0x01))\n  and\n  sub(shl(0xa0, 0x01), 0x01)\n  dup4\n  and\n  swap1\n  dup2\n  or\n  dup3\n  sstore\n    /* \"https://github.com/OmniDexFinance/helper/blob/master/%40openzeppelin/contracts/access/Ownable.sol\":959:1002  OwnershipTransferred(address(0), msgSender) */\n  mload(0x40)\n    /* \"https://github.com/OmniDexFinance/helper/blob/master/%40openzeppelin/contracts/access/Ownable.sol\":926:944  _owner = msgSender */\n  swap3\n  swap4\n  pop\n  swap2\n    /* \"https://github.com/OmniDexFinance/helper/blob/master/%40openzeppelin/contracts/access/Ownable.sol\":959:1002  OwnershipTransferred(address(0), msgSender) */\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  swap1\n    /* \"https://github.com/OmniDexFinance/helper/blob/master/%40openzeppelin/contracts/access/Ownable.sol\":926:932  _owner */\n  dup3\n  swap1\n    /* \"https://github.com/OmniDexFinance/helper/blob/master/%40openzeppelin/contracts/access/Ownable.sol\":959:1002  OwnershipTransferred(address(0), msgSender) */\n  log3\n  pop\n    /* \"https://github.com/OmniDexFinance/helper/blob/master/%40openzeppelin/contracts/utils/Pausable.sol\":945:950  false */\n  0x00\n    /* \"https://github.com/OmniDexFinance/helper/blob/master/%40openzeppelin/contracts/utils/Pausable.sol\":935:950  _paused = false */\n  dup1\n  sload\n  not(shl(0xa0, 0xff))\n  and\n  swap1\n  sstore\n    /* \"contracts/Omnidex-incentives/incentives/OmnidexIncentivesVault.sol\":1466:1480  token = _token */\n  0x60\n  dup5\n  swap1\n  shl\n  not(sub(shl(0x60, 0x01), 0x01))\n  and\n  0x80\n  mstore\n    /* \"contracts/Omnidex-incentives/incentives/OmnidexIncentivesVault.sol\":1490:1505  approvedSpender */\n  0x02\n    /* \"contracts/Omnidex-incentives/incentives/OmnidexIncentivesVault.sol\":1490:1524  approvedSpender = _approvedSpender */\n  dup1\n  sload\n  not(sub(shl(0xa0, 0x01), 0x01))\n  swap1\n  dup2\n  and\n  sub(shl(0xa0, 0x01), 0x01)\n  dup7\n  dup2\n  and\n  swap2\n  swap1\n  swap2\n  or\n  swap1\n  swap3\n  sstore\n  0x01\n    /* \"contracts/Omnidex-incentives/incentives/OmnidexIncentivesVault.sol\":1534:1548  admin = _admin */\n  dup1\n  sload\n  swap1\n  swap2\n  and\n  dup5\n  dup4\n  and\n  or\n  swap1\n  sstore\n    /* \"contracts/Omnidex-incentives/incentives/OmnidexIncentivesVault.sol\":1558:1568  dailyLimit */\n  0x03\n    /* \"contracts/Omnidex-incentives/incentives/OmnidexIncentivesVault.sol\":1558:1582  dailyLimit = _dailyLimit */\n  dup3\n  swap1\n  sstore\n    /* \"contracts/Omnidex-incentives/incentives/OmnidexIncentivesVault.sol\":1621:1687  IERC20(_token).safeApprove(address(_approvedSpender), uint256(-1)) */\n  tag_11\n  swap1\n    /* \"contracts/Omnidex-incentives/incentives/OmnidexIncentivesVault.sol\":1466:1480  token = _token */\n  dup6\n  and\n    /* \"contracts/Omnidex-incentives/incentives/OmnidexIncentivesVault.sol\":1490:1524  approvedSpender = _approvedSpender */\n  dup5\n  not(0x00)\n    /* \"contracts/Omnidex-incentives/incentives/OmnidexIncentivesVault.sol\":1621:1647  IERC20(_token).safeApprove */\n  tag_12\n  0x20\n  swap1\n  dup2\n  shl\n  tag_0_72\n  or\n    /* \"contracts/Omnidex-incentives/incentives/OmnidexIncentivesVault.sol\":1621:1687  IERC20(_token).safeApprove(address(_approvedSpender), uint256(-1)) */\n  swap1\n  shr\n  jump\t// in\ntag_11:\n    /* \"contracts/Omnidex-incentives/incentives/OmnidexIncentivesVault.sol\":1331:1694  constructor(... */\n  pop\n  pop\n  pop\n  pop\n    /* \"contracts/Omnidex-incentives/incentives/OmnidexIncentivesVault.sol\":575:5378  contract OmnidexIncentivesVault is Ownable, Pausable {... */\n  jump(tag_13)\n    /* \"https://github.com/OmniDexFinance/helper/blob/master/%40openzeppelin/contracts/utils/Context.sol\":598:702  function _msgSender() internal view virtual returns (address payable) {... */\ntag_8:\n    /* \"https://github.com/OmniDexFinance/helper/blob/master/%40openzeppelin/contracts/utils/Context.sol\":685:695  msg.sender */\n  caller\n    /* \"https://github.com/OmniDexFinance/helper/blob/master/%40openzeppelin/contracts/utils/Context.sol\":598:702  function _msgSender() internal view virtual returns (address payable) {... */\n  swap1\n  jump\t// out\n    /* \"https://github.com/OmniDexFinance/helper/blob/master/%40openzeppelin/contracts/token/ERC20/SafeERC20.sol\":1348:1961  function safeApprove(IERC20 token, address spender, uint256 value) internal {... */\ntag_12:\n    /* \"https://github.com/OmniDexFinance/helper/blob/master/%40openzeppelin/contracts/token/ERC20/SafeERC20.sol\":1713:1723  value == 0 */\n  dup1\n  iszero\n  dup1\n    /* \"https://github.com/OmniDexFinance/helper/blob/master/%40openzeppelin/contracts/token/ERC20/SafeERC20.sol\":1712:1774  (value == 0) || (token.allowance(address(this), spender) == 0) */\n  tag_16\n  jumpi\n  pop\n    /* \"https://github.com/OmniDexFinance/helper/blob/master/%40openzeppelin/contracts/token/ERC20/SafeERC20.sol\":1729:1768  token.allowance(address(this), spender) */\n  0x40\n  dup1\n  mload\n  shl(0xe1, 0x6eb1769f)\n  dup2\n  mstore\n    /* \"https://github.com/OmniDexFinance/helper/blob/master/%40openzeppelin/contracts/token/ERC20/SafeERC20.sol\":1753:1757  this */\n  address\n    /* \"https://github.com/OmniDexFinance/helper/blob/master/%40openzeppelin/contracts/token/ERC20/SafeERC20.sol\":1729:1768  token.allowance(address(this), spender) */\n  0x04\n  dup3\n  add\n  mstore\n  sub(shl(0xa0, 0x01), 0x01)\n  dup5\n  dup2\n  and\n  0x24\n  dup4\n  add\n  mstore\n  swap2\n  mload\n    /* \"https://github.com/OmniDexFinance/helper/blob/master/%40openzeppelin/contracts/token/ERC20/SafeERC20.sol\":1729:1744  token.allowance */\n  swap2\n  dup6\n  and\n  swap2\n  0xdd62ed3e\n  swap2\n    /* \"https://github.com/OmniDexFinance/helper/blob/master/%40openzeppelin/contracts/token/ERC20/SafeERC20.sol\":1729:1768  token.allowance(address(this), spender) */\n  0x44\n  dup1\n  dup3\n  add\n  swap3\n  0x20\n  swap3\n  swap1\n  swap2\n  swap1\n  dup3\n  swap1\n  sub\n  add\n  dup2\n    /* \"https://github.com/OmniDexFinance/helper/blob/master/%40openzeppelin/contracts/token/ERC20/SafeERC20.sol\":1729:1744  token.allowance */\n  dup7\n    /* \"https://github.com/OmniDexFinance/helper/blob/master/%40openzeppelin/contracts/token/ERC20/SafeERC20.sol\":1729:1768  token.allowance(address(this), spender) */\n  dup1\n  extcodesize\n  iszero\n  dup1\n  iszero\n  tag_17\n  jumpi\n  0x00\n  dup1\n  revert\ntag_17:\n  pop\n  gas\n  staticcall\n  iszero\n  dup1\n  iszero\n  tag_19\n  jumpi\n  returndatasize\n  0x00\n  dup1\n  returndatacopy\n  revert(0x00, returndatasize)\ntag_19:\n  pop\n  pop\n  pop\n  pop\n  mload(0x40)\n  returndatasize\n  0x20\n  dup2\n  lt\n  iszero\n  tag_20\n  jumpi\n  0x00\n  dup1\n  revert\ntag_20:\n  pop\n  mload\n    /* \"https://github.com/OmniDexFinance/helper/blob/master/%40openzeppelin/contracts/token/ERC20/SafeERC20.sol\":1729:1773  token.allowance(address(this), spender) == 0 */\n  iszero\n    /* \"https://github.com/OmniDexFinance/helper/blob/master/%40openzeppelin/contracts/token/ERC20/SafeERC20.sol\":1712:1774  (value == 0) || (token.allowance(address(this), spender) == 0) */\ntag_16:\n    /* \"https://github.com/OmniDexFinance/helper/blob/master/%40openzeppelin/contracts/token/ERC20/SafeERC20.sol\":1704:1854  require((value == 0) || (token.allowance(address(this), spender) == 0),... */\n  tag_21\n  jumpi\n  mload(0x40)\n  shl(0xe5, 0x461bcd)\n  dup2\n  mstore\n  0x04\n  add\n  dup1\n  dup1\n  0x20\n  add\n  dup3\n  dup2\n  sub\n  dup3\n  mstore\n  0x36\n  dup2\n  mstore\n  0x20\n  add\n  dup1\n  data_ef945ddb1bfdc0da870feb4560d868b047642b4ac7f2fb7f8b7c51cb4a411e25\n  0x36\n  swap2\n  codecopy\n  0x40\n  add\n  swap2\n  pop\n  pop\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\ntag_21:\n    /* \"https://github.com/OmniDexFinance/helper/blob/master/%40openzeppelin/contracts/token/ERC20/SafeERC20.sol\":1891:1953  abi.encodeWithSelector(token.approve.selector, spender, value) */\n  0x40\n  dup1\n  mload\n  sub(shl(0xa0, 0x01), 0x01)\n  dup5\n  and\n  0x24\n  dup3\n  add\n  mstore\n  0x44\n  dup1\n  dup3\n  add\n  dup5\n  swap1\n  mstore\n  dup3\n  mload\n  dup1\n  dup4\n  sub\n  swap1\n  swap2\n  add\n  dup2\n  mstore\n  0x64\n  swap1\n  swap2\n  add\n  swap1\n  swap2\n  mstore\n  0x20\n  dup2\n  add\n  dup1\n  mload\n  sub(shl(0xe0, 0x01), 0x01)\n  swap1\n  dup2\n  and\n  shl(0xe0, 0x095ea7b3)\n  or\n  swap1\n  swap2\n  mstore\n    /* \"https://github.com/OmniDexFinance/helper/blob/master/%40openzeppelin/contracts/token/ERC20/SafeERC20.sol\":1864:1954  _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, value)) */\n  tag_22\n  swap2\n    /* \"https://github.com/OmniDexFinance/helper/blob/master/%40openzeppelin/contracts/token/ERC20/SafeERC20.sol\":1884:1889  token */\n  dup6\n  swap2\n    /* \"https://github.com/OmniDexFinance/helper/blob/master/%40openzeppelin/contracts/token/ERC20/SafeERC20.sol\":1864:1883  _callOptionalReturn */\n  tag_23\n    /* \"https://github.com/OmniDexFinance/helper/blob/master/%40openzeppelin/contracts/token/ERC20/SafeERC20.sol\":1864:1954  _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, value)) */\n  and\n  jump\t// in\ntag_22:\n    /* \"https://github.com/OmniDexFinance/helper/blob/master/%40openzeppelin/contracts/token/ERC20/SafeERC20.sol\":1348:1961  function safeApprove(IERC20 token, address spender, uint256 value) internal {... */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"https://github.com/OmniDexFinance/helper/blob/master/%40openzeppelin/contracts/token/ERC20/SafeERC20.sol\":2967:3718  function _callOptionalReturn(IERC20 token, bytes memory data) private {... */\ntag_23:\n    /* \"https://github.com/OmniDexFinance/helper/blob/master/%40openzeppelin/contracts/token/ERC20/SafeERC20.sol\":3386:3409  bytes memory returndata */\n  0x60\n    /* \"https://github.com/OmniDexFinance/helper/blob/master/%40openzeppelin/contracts/token/ERC20/SafeERC20.sol\":3412:3481  address(token).functionCall(data, \"SafeERC20: low-level call failed\") */\n  tag_25\n    /* \"https://github.com/OmniDexFinance/helper/blob/master/%40openzeppelin/contracts/token/ERC20/SafeERC20.sol\":3440:3444  data */\n  dup3\n    /* \"https://github.com/OmniDexFinance/helper/blob/master/%40openzeppelin/contracts/token/ERC20/SafeERC20.sol\":3412:3481  address(token).functionCall(data, \"SafeERC20: low-level call failed\") */\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x20\n  dup2\n  mstore\n  0x20\n  add\n  0x5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564\n  dup2\n  mstore\n  pop\n    /* \"https://github.com/OmniDexFinance/helper/blob/master/%40openzeppelin/contracts/token/ERC20/SafeERC20.sol\":3420:3425  token */\n  dup6\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"https://github.com/OmniDexFinance/helper/blob/master/%40openzeppelin/contracts/token/ERC20/SafeERC20.sol\":3412:3439  address(token).functionCall */\n  and\n  or(tag_0_73, shl(0x20, tag_26))\n  swap1\n    /* \"https://github.com/OmniDexFinance/helper/blob/master/%40openzeppelin/contracts/token/ERC20/SafeERC20.sol\":3412:3481  address(token).functionCall(data, \"SafeERC20: low-level call failed\") */\n  swap3\n  swap2\n  swap1\n  0x20\n  shr\n  jump\t// in\ntag_25:\n    /* \"https://github.com/OmniDexFinance/helper/blob/master/%40openzeppelin/contracts/token/ERC20/SafeERC20.sol\":3495:3512  returndata.length */\n  dup1\n  mload\n    /* \"https://github.com/OmniDexFinance/helper/blob/master/%40openzeppelin/contracts/token/ERC20/SafeERC20.sol\":3386:3481  bytes memory returndata = address(token).functionCall(data, \"SafeERC20: low-level call failed\") */\n  swap1\n  swap2\n  pop\n    /* \"https://github.com/OmniDexFinance/helper/blob/master/%40openzeppelin/contracts/token/ERC20/SafeERC20.sol\":3495:3516  returndata.length > 0 */\n  iszero\n    /* \"https://github.com/OmniDexFinance/helper/blob/master/%40openzeppelin/contracts/token/ERC20/SafeERC20.sol\":3491:3712  if (returndata.length > 0) { // Return data is optional... */\n  tag_22\n  jumpi\n    /* \"https://github.com/OmniDexFinance/helper/blob/master/%40openzeppelin/contracts/token/ERC20/SafeERC20.sol\":3635:3645  returndata */\n  dup1\n    /* \"https://github.com/OmniDexFinance/helper/blob/master/%40openzeppelin/contracts/token/ERC20/SafeERC20.sol\":3624:3654  abi.decode(returndata, (bool)) */\n  dup1\n  0x20\n  add\n  swap1\n  mload\n  0x20\n  dup2\n  lt\n  iszero\n  tag_28\n  jumpi\n  0x00\n  dup1\n  revert\ntag_28:\n  pop\n  mload\n    /* \"https://github.com/OmniDexFinance/helper/blob/master/%40openzeppelin/contracts/token/ERC20/SafeERC20.sol\":3616:3701  require(abi.decode(returndata, (bool)), \"SafeERC20: ERC20 operation did not succeed\") */\n  tag_22\n  jumpi\n  mload(0x40)\n  shl(0xe5, 0x461bcd)\n  dup2\n  mstore\n  0x04\n  add\n  dup1\n  dup1\n  0x20\n  add\n  dup3\n  dup2\n  sub\n  dup3\n  mstore\n  0x2a\n  dup2\n  mstore\n  0x20\n  add\n  dup1\n  data_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd\n  0x2a\n  swap2\n  codecopy\n  0x40\n  add\n  swap2\n  pop\n  pop\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"https://github.com/OmniDexFinance/helper/blob/master/%40openzeppelin/contracts/utils/Address.sol\":3581:3774  function functionCall(address target, bytes memory data, string memory errorMessage) internal returns (bytes memory) {... */\ntag_26:\n    /* \"https://github.com/OmniDexFinance/helper/blob/master/%40openzeppelin/contracts/utils/Address.sol\":3684:3696  bytes memory */\n  0x60\n    /* \"https://github.com/OmniDexFinance/helper/blob/master/%40openzeppelin/contracts/utils/Address.sol\":3715:3767  functionCallWithValue(target, data, 0, errorMessage) */\n  tag_31\n    /* \"https://github.com/OmniDexFinance/helper/blob/master/%40openzeppelin/contracts/utils/Address.sol\":3737:3743  target */\n  dup5\n    /* \"https://github.com/OmniDexFinance/helper/blob/master/%40openzeppelin/contracts/utils/Address.sol\":3745:3749  data */\n  dup5\n    /* \"https://github.com/OmniDexFinance/helper/blob/master/%40openzeppelin/contracts/utils/Address.sol\":3751:3752  0 */\n  0x00\n    /* \"https://github.com/OmniDexFinance/helper/blob/master/%40openzeppelin/contracts/utils/Address.sol\":3754:3766  errorMessage */\n  dup6\n    /* \"https://github.com/OmniDexFinance/helper/blob/master/%40openzeppelin/contracts/utils/Address.sol\":3715:3736  functionCallWithValue */\n  tag_32\n    /* \"https://github.com/OmniDexFinance/helper/blob/master/%40openzeppelin/contracts/utils/Address.sol\":3715:3767  functionCallWithValue(target, data, 0, errorMessage) */\n  jump\t// in\ntag_31:\n    /* \"https://github.com/OmniDexFinance/helper/blob/master/%40openzeppelin/contracts/utils/Address.sol\":3708:3767  return functionCallWithValue(target, data, 0, errorMessage) */\n  swap1\n  pop\n    /* \"https://github.com/OmniDexFinance/helper/blob/master/%40openzeppelin/contracts/utils/Address.sol\":3581:3774  function functionCall(address target, bytes memory data, string memory errorMessage) internal returns (bytes memory) {... */\ntag_30:\n  swap4\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"https://github.com/OmniDexFinance/helper/blob/master/%40openzeppelin/contracts/utils/Address.sol\":4608:5131  function functionCallWithValue(address target, bytes memory data, uint256 value, string memory errorMessage) internal returns (bytes memory) {... */\ntag_32:\n    /* \"https://github.com/OmniDexFinance/helper/blob/master/%40openzeppelin/contracts/utils/Address.sol\":4735:4747  bytes memory */\n  0x60\n    /* \"https://github.com/OmniDexFinance/helper/blob/master/%40openzeppelin/contracts/utils/Address.sol\":4792:4797  value */\n  dup3\n    /* \"https://github.com/OmniDexFinance/helper/blob/master/%40openzeppelin/contracts/utils/Address.sol\":4767:4788  address(this).balance */\n  selfbalance\n    /* \"https://github.com/OmniDexFinance/helper/blob/master/%40openzeppelin/contracts/utils/Address.sol\":4767:4797  address(this).balance >= value */\n  lt\n  iszero\n    /* \"https://github.com/OmniDexFinance/helper/blob/master/%40openzeppelin/contracts/utils/Address.sol\":4759:4840  require(address(this).balance >= value, \"Address: insufficient balance for call\") */\n  tag_34\n  jumpi\n  mload(0x40)\n  shl(0xe5, 0x461bcd)\n  dup2\n  mstore\n  0x04\n  add\n  dup1\n  dup1\n  0x20\n  add\n  dup3\n  dup2\n  sub\n  dup3\n  mstore\n  0x26\n  dup2\n  mstore\n  0x20\n  add\n  dup1\n  data_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c\n  0x26\n  swap2\n  codecopy\n  0x40\n  add\n  swap2\n  pop\n  pop\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\ntag_34:\n    /* \"https://github.com/OmniDexFinance/helper/blob/master/%40openzeppelin/contracts/utils/Address.sol\":4858:4876  isContract(target) */\n  tag_35\n    /* \"https://github.com/OmniDexFinance/helper/blob/master/%40openzeppelin/contracts/utils/Address.sol\":4869:4875  target */\n  dup6\n    /* \"https://github.com/OmniDexFinance/helper/blob/master/%40openzeppelin/contracts/utils/Address.sol\":4858:4868  isContract */\n  tag_36\n    /* \"https://github.com/OmniDexFinance/helper/blob/master/%40openzeppelin/contracts/utils/Address.sol\":4858:4876  isContract(target) */\n  jump\t// in\ntag_35:\n    /* \"https://github.com/OmniDexFinance/helper/blob/master/%40openzeppelin/contracts/utils/Address.sol\":4850:4910  require(isContract(target), \"Address: call to non-contract\") */\n  tag_37\n  jumpi\n  0x40\n  dup1\n  mload\n  shl(0xe5, 0x461bcd)\n  dup2\n  mstore\n  0x20\n  0x04\n  dup3\n  add\n  mstore\n  0x1d\n  0x24\n  dup3\n  add\n  mstore\n  0x416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000\n  0x44\n  dup3\n  add\n  mstore\n  swap1\n  mload\n  swap1\n  dup2\n  swap1\n  sub\n  0x64\n  add\n  swap1\n  revert\ntag_37:\n    /* \"https://github.com/OmniDexFinance/helper/blob/master/%40openzeppelin/contracts/utils/Address.sol\":4981:4993  bool success */\n  0x00\n    /* \"https://github.com/OmniDexFinance/helper/blob/master/%40openzeppelin/contracts/utils/Address.sol\":4995:5018  bytes memory returndata */\n  0x60\n    /* \"https://github.com/OmniDexFinance/helper/blob/master/%40openzeppelin/contracts/utils/Address.sol\":5022:5028  target */\n  dup7\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"https://github.com/OmniDexFinance/helper/blob/master/%40openzeppelin/contracts/utils/Address.sol\":5022:5033  target.call */\n  and\n    /* \"https://github.com/OmniDexFinance/helper/blob/master/%40openzeppelin/contracts/utils/Address.sol\":5042:5047  value */\n  dup6\n    /* \"https://github.com/OmniDexFinance/helper/blob/master/%40openzeppelin/contracts/utils/Address.sol\":5050:5054  data */\n  dup8\n    /* \"https://github.com/OmniDexFinance/helper/blob/master/%40openzeppelin/contracts/utils/Address.sol\":5022:5055  target.call{ value: value }(data) */\n  mload(0x40)\n  dup1\n  dup3\n  dup1\n  mload\n  swap1\n  0x20\n  add\n  swap1\n  dup1\n  dup4\n  dup4\ntag_38:\n  0x20\n  dup4\n  lt\n  tag_40\n  jumpi\n  dup1\n  mload\n  dup3\n  mstore\n  not(0x1f)\n  swap1\n  swap3\n  add\n  swap2\n  0x20\n  swap2\n  dup3\n  add\n  swap2\n  add\n  jump(tag_38)\ntag_40:\n  0x01\n  dup4\n  0x20\n  sub\n  0x0100\n  exp\n  sub\n  dup1\n  not\n  dup3\n  mload\n  and\n  dup2\n  dup5\n  mload\n  and\n  dup1\n  dup3\n  or\n  dup6\n  mstore\n  pop\n  pop\n  pop\n  pop\n  pop\n  pop\n  swap1\n  pop\n  add\n  swap2\n  pop\n  pop\n  0x00\n  mload(0x40)\n  dup1\n  dup4\n  sub\n  dup2\n  dup6\n  dup8\n  gas\n  call\n  swap3\n  pop\n  pop\n  pop\n  returndatasize\n  dup1\n  0x00\n  dup2\n  eq\n  tag_43\n  jumpi\n  mload(0x40)\n  swap2\n  pop\n  and(add(returndatasize, 0x3f), not(0x1f))\n  dup3\n  add\n  0x40\n  mstore\n  returndatasize\n  dup3\n  mstore\n  returndatasize\n  0x00\n  0x20\n  dup5\n  add\n  returndatacopy\n  jump(tag_42)\ntag_43:\n  0x60\n  swap2\n  pop\ntag_42:\n  pop\n    /* \"https://github.com/OmniDexFinance/helper/blob/master/%40openzeppelin/contracts/utils/Address.sol\":4980:5055  (bool success, bytes memory returndata) = target.call{ value: value }(data) */\n  swap1\n  swap3\n  pop\n  swap1\n  pop\n    /* \"https://github.com/OmniDexFinance/helper/blob/master/%40openzeppelin/contracts/utils/Address.sol\":5072:5124  _verifyCallResult(success, returndata, errorMessage) */\n  tag_44\n    /* \"https://github.com/OmniDexFinance/helper/blob/master/%40openzeppelin/contracts/utils/Address.sol\":4980:5055  (bool success, bytes memory returndata) = target.call{ value: value }(data) */\n  dup3\n  dup3\n    /* \"https://github.com/OmniDexFinance/helper/blob/master/%40openzeppelin/contracts/utils/Address.sol\":5111:5123  errorMessage */\n  dup7\n    /* \"https://github.com/OmniDexFinance/helper/blob/master/%40openzeppelin/contracts/utils/Address.sol\":5072:5089  _verifyCallResult */\n  tag_45\n    /* \"https://github.com/OmniDexFinance/helper/blob/master/%40openzeppelin/contracts/utils/Address.sol\":5072:5124  _verifyCallResult(success, returndata, errorMessage) */\n  jump\t// in\ntag_44:\n    /* \"https://github.com/OmniDexFinance/helper/blob/master/%40openzeppelin/contracts/utils/Address.sol\":5065:5124  return _verifyCallResult(success, returndata, errorMessage) */\n  swap8\n    /* \"https://github.com/OmniDexFinance/helper/blob/master/%40openzeppelin/contracts/utils/Address.sol\":4608:5131  function functionCallWithValue(address target, bytes memory data, uint256 value, string memory errorMessage) internal returns (bytes memory) {... */\n  swap7\n  pop\n  pop\n  pop\n  pop\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"https://github.com/OmniDexFinance/helper/blob/master/%40openzeppelin/contracts/utils/Address.sol\":726:1139  function isContract(address account) internal view returns (bool) {... */\ntag_36:\n    /* \"https://github.com/OmniDexFinance/helper/blob/master/%40openzeppelin/contracts/utils/Address.sol\":1086:1106  extcodesize(account) */\n  extcodesize\n    /* \"https://github.com/OmniDexFinance/helper/blob/master/%40openzeppelin/contracts/utils/Address.sol\":1124:1132  size > 0 */\n  iszero\n  iszero\n  swap1\n    /* \"https://github.com/OmniDexFinance/helper/blob/master/%40openzeppelin/contracts/utils/Address.sol\":726:1139  function isContract(address account) internal view returns (bool) {... */\n  jump\t// out\n    /* \"https://github.com/OmniDexFinance/helper/blob/master/%40openzeppelin/contracts/utils/Address.sol\":7091:7816  function _verifyCallResult(bool success, bytes memory returndata, string memory errorMessage) private pure returns(bytes memory) {... */\ntag_45:\n    /* \"https://github.com/OmniDexFinance/helper/blob/master/%40openzeppelin/contracts/utils/Address.sol\":7206:7218  bytes memory */\n  0x60\n    /* \"https://github.com/OmniDexFinance/helper/blob/master/%40openzeppelin/contracts/utils/Address.sol\":7234:7241  success */\n  dup4\n    /* \"https://github.com/OmniDexFinance/helper/blob/master/%40openzeppelin/contracts/utils/Address.sol\":7230:7810  if (success) {... */\n  iszero\n  tag_48\n  jumpi\n  pop\n    /* \"https://github.com/OmniDexFinance/helper/blob/master/%40openzeppelin/contracts/utils/Address.sol\":7264:7274  returndata */\n  dup2\n    /* \"https://github.com/OmniDexFinance/helper/blob/master/%40openzeppelin/contracts/utils/Address.sol\":7257:7274  return returndata */\n  jump(tag_30)\n    /* \"https://github.com/OmniDexFinance/helper/blob/master/%40openzeppelin/contracts/utils/Address.sol\":7230:7810  if (success) {... */\ntag_48:\n    /* \"https://github.com/OmniDexFinance/helper/blob/master/%40openzeppelin/contracts/utils/Address.sol\":7375:7392  returndata.length */\n  dup3\n  mload\n    /* \"https://github.com/OmniDexFinance/helper/blob/master/%40openzeppelin/contracts/utils/Address.sol\":7375:7396  returndata.length > 0 */\n  iszero\n    /* \"https://github.com/OmniDexFinance/helper/blob/master/%40openzeppelin/contracts/utils/Address.sol\":7371:7800  if (returndata.length > 0) {... */\n  tag_50\n  jumpi\n    /* \"https://github.com/OmniDexFinance/helper/blob/master/%40openzeppelin/contracts/utils/Address.sol\":7633:7643  returndata */\n  dup3\n    /* \"https://github.com/OmniDexFinance/helper/blob/master/%40openzeppelin/contracts/utils/Address.sol\":7627:7644  mload(returndata) */\n  mload\n    /* \"https://github.com/OmniDexFinance/helper/blob/master/%40openzeppelin/contracts/utils/Address.sol\":7693:7708  returndata_size */\n  dup1\n    /* \"https://github.com/OmniDexFinance/helper/blob/master/%40openzeppelin/contracts/utils/Address.sol\":7680:7690  returndata */\n  dup5\n    /* \"https://github.com/OmniDexFinance/helper/blob/master/%40openzeppelin/contracts/utils/Address.sol\":7676:7678  32 */\n  0x20\n    /* \"https://github.com/OmniDexFinance/helper/blob/master/%40openzeppelin/contracts/utils/Address.sol\":7672:7691  add(32, returndata) */\n  add\n    /* \"https://github.com/OmniDexFinance/helper/blob/master/%40openzeppelin/contracts/utils/Address.sol\":7665:7709  revert(add(32, returndata), returndata_size) */\n  revert\n    /* \"https://github.com/OmniDexFinance/helper/blob/master/%40openzeppelin/contracts/utils/Address.sol\":7582:7727  {... */\ntag_50:\n    /* \"https://github.com/OmniDexFinance/helper/blob/master/%40openzeppelin/contracts/utils/Address.sol\":7772:7784  errorMessage */\n  dup2\n    /* \"https://github.com/OmniDexFinance/helper/blob/master/%40openzeppelin/contracts/utils/Address.sol\":7765:7785  revert(errorMessage) */\n  mload(0x40)\n  shl(0xe5, 0x461bcd)\n  dup2\n  mstore\n  0x04\n  add\n  dup1\n  dup1\n  0x20\n  add\n  dup3\n  dup2\n  sub\n  dup3\n  mstore\n  dup4\n  dup2\n  dup2\n  mload\n  dup2\n  mstore\n  0x20\n  add\n  swap2\n  pop\n  dup1\n  mload\n  swap1\n  0x20\n  add\n  swap1\n  dup1\n  dup4\n  dup4\n  0x00\ntag_52:\n  dup4\n  dup2\n  lt\n  iszero\n  tag_54\n  jumpi\n  dup2\n  dup2\n  add\n  mload\n  dup4\n  dup3\n  add\n  mstore\n  0x20\n  add\n  jump(tag_52)\ntag_54:\n  pop\n  pop\n  pop\n  pop\n  swap1\n  pop\n  swap1\n  dup2\n  add\n  swap1\n  0x1f\n  and\n  dup1\n  iszero\n  tag_55\n  jumpi\n  dup1\n  dup3\n  sub\n  dup1\n  mload\n  0x01\n  dup4\n  0x20\n  sub\n  0x0100\n  exp\n  sub\n  not\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap2\n  pop\ntag_55:\n  pop\n  swap3\n  pop\n  pop\n  pop\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"contracts/Omnidex-incentives/incentives/OmnidexIncentivesVault.sol\":575:5378  contract OmnidexIncentivesVault is Ownable, Pausable {... */\ntag_13:\n  shr(0x60, mload(0x80))\n  codecopy(0x00, dataOffset(sub_0), dataSize(sub_0))\n  assignImmutable(\"0x8fef2229291b68be841adf029e58b87f39ba144b2d3b0af1760243d0a9bc6a1c\")\n  return(0x00, dataSize(sub_0))\nstop\ndata_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c 416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c6c\ndata_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd 5361666545524332303a204552433230206f7065726174696f6e20646964206e6f742073756363656564\ndata_ef945ddb1bfdc0da870feb4560d868b047642b4ac7f2fb7f8b7c51cb4a411e25 5361666545524332303a20617070726f76652066726f6d206e6f6e2d7a65726f20746f206e6f6e2d7a65726f20616c6c6f77616e6365\n\nsub_0: assembly {\n        /* \"contracts/Omnidex-incentives/incentives/OmnidexIncentivesVault.sol\":575:5378  contract OmnidexIncentivesVault is Ownable, Pausable {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x9f9ff3e8\n      gt\n      tag_23\n      jumpi\n      dup1\n      0xf059cf2b\n      gt\n      tag_24\n      jumpi\n      dup1\n      0xf059cf2b\n      eq\n      tag_18\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_19\n      jumpi\n      dup1\n      0xf3fef3a3\n      eq\n      tag_20\n      jumpi\n      dup1\n      0xf851a440\n      eq\n      tag_21\n      jumpi\n      dup1\n      0xfc0c546a\n      eq\n      tag_22\n      jumpi\n      jump(tag_2)\n    tag_24:\n      dup1\n      0x9f9ff3e8\n      eq\n      tag_13\n      jumpi\n      dup1\n      0xa6895b5a\n      eq\n      tag_14\n      jumpi\n      dup1\n      0xb20d30a9\n      eq\n      tag_15\n      jumpi\n      dup1\n      0xb6b55f25\n      eq\n      tag_16\n      jumpi\n      dup1\n      0xdef68a9c\n      eq\n      tag_17\n      jumpi\n      jump(tag_2)\n    tag_23:\n      dup1\n      0x715018a6\n      gt\n      tag_25\n      jumpi\n      dup1\n      0x715018a6\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x8456cb59\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x853828b6\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_11\n      jumpi\n      dup1\n      0x8ef57f5e\n      eq\n      tag_12\n      jumpi\n      jump(tag_2)\n    tag_25:\n      dup1\n      0x3f4ba83a\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x5c975abb\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x67eeba0c\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x6b0c932d\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x704b6c02\n      eq\n      tag_7\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"contracts/Omnidex-incentives/incentives/OmnidexIncentivesVault.sol\":4116:4216  function unpause() external onlyAdmin whenPaused {... */\n    tag_3:\n      tag_26\n      tag_27\n      jump\t// in\n    tag_26:\n      stop\n        /* \"https://github.com/OmniDexFinance/helper/blob/master/%40openzeppelin/contracts/utils/Pausable.sol\":1052:1136  function paused() public view virtual returns (bool) {... */\n    tag_4:\n      tag_28\n      tag_29\n      jump\t// in\n    tag_28:\n      0x40\n      dup1\n      mload\n      swap2\n      iszero\n      iszero\n      dup3\n      mstore\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x20\n      add\n      swap1\n      return\n        /* \"contracts/Omnidex-incentives/incentives/OmnidexIncentivesVault.sol\":815:837  uint public dailyLimit */\n    tag_5:\n      tag_30\n      tag_31\n      jump\t// in\n    tag_30:\n      0x40\n      dup1\n      mload\n      swap2\n      dup3\n      mstore\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x20\n      add\n      swap1\n      return\n        /* \"contracts/Omnidex-incentives/incentives/OmnidexIncentivesVault.sol\":843:862  uint public lastDay */\n    tag_6:\n      tag_30\n      tag_33\n      jump\t// in\n        /* \"contracts/Omnidex-incentives/incentives/OmnidexIncentivesVault.sol\":3276:3425  function setAdmin(address _admin) external onlyOwner {... */\n    tag_7:\n      tag_26\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x20\n      dup2\n      lt\n      iszero\n      tag_35\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_35:\n      pop\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      tag_36\n      jump\t// in\n        /* \"https://github.com/OmniDexFinance/helper/blob/master/%40openzeppelin/contracts/access/Ownable.sol\":1717:1862  function renounceOwnership() public virtual onlyOwner {... */\n    tag_8:\n      tag_26\n      tag_38\n      jump\t// in\n        /* \"contracts/Omnidex-incentives/incentives/OmnidexIncentivesVault.sol\":3907:4004  function pause() external onlyAdmin whenNotPaused {... */\n    tag_9:\n      tag_26\n      tag_40\n      jump\t// in\n        /* \"contracts/Omnidex-incentives/incentives/OmnidexIncentivesVault.sol\":2677:2798  function withdrawAll() external onlyOwner {... */\n    tag_10:\n      tag_26\n      tag_42\n      jump\t// in\n        /* \"https://github.com/OmniDexFinance/helper/blob/master/%40openzeppelin/contracts/access/Ownable.sol\":1085:1170  function owner() public view virtual returns (address) {... */\n    tag_11:\n      tag_43\n      tag_44\n      jump\t// in\n    tag_43:\n      0x40\n      dup1\n      mload\n      sub(shl(0xa0, 0x01), 0x01)\n      swap1\n      swap3\n      and\n      dup3\n      mstore\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x20\n      add\n      swap1\n      return\n        /* \"contracts/Omnidex-incentives/incentives/OmnidexIncentivesVault.sol\":779:809  address public approvedSpender */\n    tag_12:\n      tag_43\n      tag_46\n      jump\t// in\n        /* \"contracts/Omnidex-incentives/incentives/OmnidexIncentivesVault.sol\":2493:2606  function getIncentivesBalance() public view returns (uint) {... */\n    tag_13:\n      tag_30\n      tag_48\n      jump\t// in\n        /* \"contracts/Omnidex-incentives/incentives/OmnidexIncentivesVault.sol\":3085:3171  function getDailyLimit() public view returns (uint) {... */\n    tag_14:\n      tag_30\n      tag_50\n      jump\t// in\n        /* \"contracts/Omnidex-incentives/incentives/OmnidexIncentivesVault.sol\":2905:3079  function setDailyLimit(uint _newDailyLimit) external onlyOwner {... */\n    tag_15:\n      tag_26\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x20\n      dup2\n      lt\n      iszero\n      tag_52\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_52:\n      pop\n      calldataload\n      tag_53\n      jump\t// in\n        /* \"contracts/Omnidex-incentives/incentives/OmnidexIncentivesVault.sol\":2259:2487  function deposit(uint256 _amount) external whenNotPaused {... */\n    tag_16:\n      tag_26\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x20\n      dup2\n      lt\n      iszero\n      tag_55\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_55:\n      pop\n      calldataload\n      tag_56\n      jump\t// in\n        /* \"contracts/Omnidex-incentives/incentives/OmnidexIncentivesVault.sol\":3513:3795  function inCaseTokensGetStuck(address _token) external onlyAdmin {... */\n    tag_17:\n      tag_26\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x20\n      dup2\n      lt\n      iszero\n      tag_58\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_58:\n      pop\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      tag_59\n      jump\t// in\n        /* \"contracts/Omnidex-incentives/incentives/OmnidexIncentivesVault.sol\":868:890  uint public spentToday */\n    tag_18:\n      tag_30\n      tag_61\n      jump\t// in\n        /* \"https://github.com/OmniDexFinance/helper/blob/master/%40openzeppelin/contracts/access/Ownable.sol\":2011:2251  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_19:\n      tag_26\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x20\n      dup2\n      lt\n      iszero\n      tag_63\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_63:\n      pop\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      tag_64\n      jump\t// in\n        /* \"contracts/Omnidex-incentives/incentives/OmnidexIncentivesVault.sol\":4397:4796  function withdraw(address _to, uint256 _amount) public whenNotPaused onlyAuth {... */\n    tag_20:\n      tag_26\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x40\n      dup2\n      lt\n      iszero\n      tag_66\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_66:\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n      dup2\n      calldataload\n      and\n      swap1\n      0x20\n      add\n      calldataload\n      tag_67\n      jump\t// in\n        /* \"contracts/Omnidex-incentives/incentives/OmnidexIncentivesVault.sol\":753:773  address public admin */\n    tag_21:\n      tag_43\n      tag_69\n      jump\t// in\n        /* \"contracts/Omnidex-incentives/incentives/OmnidexIncentivesVault.sol\":699:728  IERC20 public immutable token */\n    tag_22:\n      tag_43\n      tag_71\n      jump\t// in\n        /* \"contracts/Omnidex-incentives/incentives/OmnidexIncentivesVault.sol\":4116:4216  function unpause() external onlyAdmin whenPaused {... */\n    tag_27:\n        /* \"contracts/Omnidex-incentives/incentives/OmnidexIncentivesVault.sol\":1830:1835  admin */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x01))\n        /* \"contracts/Omnidex-incentives/incentives/OmnidexIncentivesVault.sol\":1816:1826  msg.sender */\n      caller\n        /* \"contracts/Omnidex-incentives/incentives/OmnidexIncentivesVault.sol\":1816:1835  msg.sender == admin */\n      eq\n        /* \"contracts/Omnidex-incentives/incentives/OmnidexIncentivesVault.sol\":1808:1860  require(msg.sender == admin, \"Only admin permitted\") */\n      tag_75\n      jumpi\n      0x40\n      dup1\n      mload\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x14\n      0x24\n      dup3\n      add\n      mstore\n      shl(0x62, 0x13db9b1e4818591b5a5b881c195c9b5a5d1d1959)\n      0x44\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x64\n      add\n      swap1\n      revert\n    tag_75:\n        /* \"https://github.com/OmniDexFinance/helper/blob/master/%40openzeppelin/contracts/utils/Pausable.sol\":1631:1639  paused() */\n      tag_77\n        /* \"https://github.com/OmniDexFinance/helper/blob/master/%40openzeppelin/contracts/utils/Pausable.sol\":1631:1637  paused */\n      tag_29\n        /* \"https://github.com/OmniDexFinance/helper/blob/master/%40openzeppelin/contracts/utils/Pausable.sol\":1631:1639  paused() */\n      jump\t// in\n    tag_77:\n        /* \"https://github.com/OmniDexFinance/helper/blob/master/%40openzeppelin/contracts/utils/Pausable.sol\":1623:1664  require(paused(), \"Pausable: not paused\") */\n      tag_78\n      jumpi\n      0x40\n      dup1\n      mload\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x14\n      0x24\n      dup3\n      add\n      mstore\n      shl(0x62, 0x14185d5cd8589b194e881b9bdd081c185d5cd959)\n      0x44\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x64\n      add\n      swap1\n      revert\n    tag_78:\n        /* \"contracts/Omnidex-incentives/incentives/OmnidexIncentivesVault.sol\":4175:4185  _unpause() */\n      tag_80\n        /* \"contracts/Omnidex-incentives/incentives/OmnidexIncentivesVault.sol\":4175:4183  _unpause */\n      tag_81\n        /* \"contracts/Omnidex-incentives/incentives/OmnidexIncentivesVault.sol\":4175:4185  _unpause() */\n      jump\t// in\n    tag_80:\n        /* \"contracts/Omnidex-incentives/incentives/OmnidexIncentivesVault.sol\":4200:4209  Unpause() */\n      mload(0x40)\n      0x7805862f689e2f13df9f062ff482ad3ad112aca9e0847911ed832e158c525b33\n      swap1\n      0x00\n      swap1\n      log1\n        /* \"contracts/Omnidex-incentives/incentives/OmnidexIncentivesVault.sol\":4116:4216  function unpause() external onlyAdmin whenPaused {... */\n      jump\t// out\n        /* \"https://github.com/OmniDexFinance/helper/blob/master/%40openzeppelin/contracts/utils/Pausable.sol\":1052:1136  function paused() public view virtual returns (bool) {... */\n    tag_29:\n        /* \"https://github.com/OmniDexFinance/helper/blob/master/%40openzeppelin/contracts/utils/Pausable.sol\":1099:1103  bool */\n      0x00\n        /* \"https://github.com/OmniDexFinance/helper/blob/master/%40openzeppelin/contracts/utils/Pausable.sol\":1122:1129  _paused */\n      sload\n      shl(0xa0, 0x01)\n      swap1\n      div\n      0xff\n      and\n      swap1\n        /* \"https://github.com/OmniDexFinance/helper/blob/master/%40openzeppelin/contracts/utils/Pausable.sol\":1052:1136  function paused() public view virtual returns (bool) {... */\n      jump\t// out\n        /* \"contracts/Omnidex-incentives/incentives/OmnidexIncentivesVault.sol\":815:837  uint public dailyLimit */\n    tag_31:\n      sload(0x03)\n      dup2\n      jump\t// out\n        /* \"contracts/Omnidex-incentives/incentives/OmnidexIncentivesVault.sol\":843:862  uint public lastDay */\n    tag_33:\n      sload(0x04)\n      dup2\n      jump\t// out\n        /* \"contracts/Omnidex-incentives/incentives/OmnidexIncentivesVault.sol\":3276:3425  function setAdmin(address _admin) external onlyOwner {... */\n    tag_36:\n        /* \"https://github.com/OmniDexFinance/helper/blob/master/%40openzeppelin/contracts/access/Ownable.sol\":1308:1320  _msgSender() */\n      tag_84\n        /* \"https://github.com/OmniDexFinance/helper/blob/master/%40openzeppelin/contracts/access/Ownable.sol\":1308:1318  _msgSender */\n      tag_85\n        /* \"https://github.com/OmniDexFinance/helper/blob/master/%40openzeppelin/contracts/access/Ownable.sol\":1308:1320  _msgSender() */\n      jump\t// in\n    tag_84:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"https://github.com/OmniDexFinance/helper/blob/master/%40openzeppelin/contracts/access/Ownable.sol\":1297:1320  owner() == _msgSender() */\n      and\n        /* \"https://github.com/OmniDexFinance/helper/blob/master/%40openzeppelin/contracts/access/Ownable.sol\":1297:1304  owner() */\n      tag_86\n        /* \"https://github.com/OmniDexFinance/helper/blob/master/%40openzeppelin/contracts/access/Ownable.sol\":1297:1302  owner */\n      tag_44\n        /* \"https://github.com/OmniDexFinance/helper/blob/master/%40openzeppelin/contracts/access/Ownable.sol\":1297:1304  owner() */\n      jump\t// in\n    tag_86:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"https://github.com/OmniDexFinance/helper/blob/master/%40openzeppelin/contracts/access/Ownable.sol\":1297:1320  owner() == _msgSender() */\n      and\n      eq\n        /* \"https://github.com/OmniDexFinance/helper/blob/master/%40openzeppelin/contracts/access/Ownable.sol\":1289:1357  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_87\n      jumpi\n      0x40\n      dup1\n      mload\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      dup2\n      swap1\n      mstore\n      0x24\n      dup3\n      add\n      mstore\n      0x00\n      dup1\n      mload\n      0x20\n      data_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n      0x44\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x64\n      add\n      swap1\n      revert\n    tag_87:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Omnidex-incentives/incentives/OmnidexIncentivesVault.sol\":3347:3367  _admin != address(0) */\n      dup2\n      and\n        /* \"contracts/Omnidex-incentives/incentives/OmnidexIncentivesVault.sol\":3339:3394  require(_admin != address(0), \"Cannot be zero address\") */\n      tag_89\n      jumpi\n      0x40\n      dup1\n      mload\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x16\n      0x24\n      dup3\n      add\n      mstore\n      shl(0x50, 0x43616e6e6f74206265207a65726f2061646472657373)\n      0x44\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x64\n      add\n      swap1\n      revert\n    tag_89:\n        /* \"contracts/Omnidex-incentives/incentives/OmnidexIncentivesVault.sol\":3404:3409  admin */\n      0x01\n        /* \"contracts/Omnidex-incentives/incentives/OmnidexIncentivesVault.sol\":3404:3418  admin = _admin */\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      swap3\n      swap1\n      swap3\n      and\n      swap2\n      swap1\n      swap2\n      or\n      swap1\n      sstore\n        /* \"contracts/Omnidex-incentives/incentives/OmnidexIncentivesVault.sol\":3276:3425  function setAdmin(address _admin) external onlyOwner {... */\n      jump\t// out\n        /* \"https://github.com/OmniDexFinance/helper/blob/master/%40openzeppelin/contracts/access/Ownable.sol\":1717:1862  function renounceOwnership() public virtual onlyOwner {... */\n    tag_38:\n        /* \"https://github.com/OmniDexFinance/helper/blob/master/%40openzeppelin/contracts/access/Ownable.sol\":1308:1320  _msgSender() */\n      tag_91\n        /* \"https://github.com/OmniDexFinance/helper/blob/master/%40openzeppelin/contracts/access/Ownable.sol\":1308:1318  _msgSender */\n      tag_85\n        /* \"https://github.com/OmniDexFinance/helper/blob/master/%40openzeppelin/contracts/access/Ownable.sol\":1308:1320  _msgSender() */\n      jump\t// in\n    tag_91:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"https://github.com/OmniDexFinance/helper/blob/master/%40openzeppelin/contracts/access/Ownable.sol\":1297:1320  owner() == _msgSender() */\n      and\n        /* \"https://github.com/OmniDexFinance/helper/blob/master/%40openzeppelin/contracts/access/Ownable.sol\":1297:1304  owner() */\n      tag_92\n        /* \"https://github.com/OmniDexFinance/helper/blob/master/%40openzeppelin/contracts/access/Ownable.sol\":1297:1302  owner */\n      tag_44\n        /* \"https://github.com/OmniDexFinance/helper/blob/master/%40openzeppelin/contracts/access/Ownable.sol\":1297:1304  owner() */\n      jump\t// in\n    tag_92:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"https://github.com/OmniDexFinance/helper/blob/master/%40openzeppelin/contracts/access/Ownable.sol\":1297:1320  owner() == _msgSender() */\n      and\n      eq\n        /* \"https://github.com/OmniDexFinance/helper/blob/master/%40openzeppelin/contracts/access/Ownable.sol\":1289:1357  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_93\n      jumpi\n      0x40\n      dup1\n      mload\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      dup2\n      swap1\n      mstore\n      0x24\n      dup3\n      add\n      mstore\n      0x00\n      dup1\n      mload\n      0x20\n      data_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n      0x44\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x64\n      add\n      swap1\n      revert\n    tag_93:\n        /* \"https://github.com/OmniDexFinance/helper/blob/master/%40openzeppelin/contracts/access/Ownable.sol\":1823:1824  0 */\n      0x00\n        /* \"https://github.com/OmniDexFinance/helper/blob/master/%40openzeppelin/contracts/access/Ownable.sol\":1807:1813  _owner */\n      dup1\n      sload\n        /* \"https://github.com/OmniDexFinance/helper/blob/master/%40openzeppelin/contracts/access/Ownable.sol\":1786:1826  OwnershipTransferred(_owner, address(0)) */\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"https://github.com/OmniDexFinance/helper/blob/master/%40openzeppelin/contracts/access/Ownable.sol\":1807:1813  _owner */\n      swap1\n      swap2\n      and\n      swap1\n        /* \"https://github.com/OmniDexFinance/helper/blob/master/%40openzeppelin/contracts/access/Ownable.sol\":1786:1826  OwnershipTransferred(_owner, address(0)) */\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      swap1\n        /* \"https://github.com/OmniDexFinance/helper/blob/master/%40openzeppelin/contracts/access/Ownable.sol\":1823:1824  0 */\n      dup4\n      swap1\n        /* \"https://github.com/OmniDexFinance/helper/blob/master/%40openzeppelin/contracts/access/Ownable.sol\":1786:1826  OwnershipTransferred(_owner, address(0)) */\n      log3\n        /* \"https://github.com/OmniDexFinance/helper/blob/master/%40openzeppelin/contracts/access/Ownable.sol\":1853:1854  0 */\n      0x00\n        /* \"https://github.com/OmniDexFinance/helper/blob/master/%40openzeppelin/contracts/access/Ownable.sol\":1836:1855  _owner = address(0) */\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      swap1\n      sstore\n        /* \"https://github.com/OmniDexFinance/helper/blob/master/%40openzeppelin/contracts/access/Ownable.sol\":1717:1862  function renounceOwnership() public virtual onlyOwner {... */\n      jump\t// out\n        /* \"contracts/Omnidex-incentives/incentives/OmnidexIncentivesVault.sol\":3907:4004  function pause() external onlyAdmin whenNotPaused {... */\n    tag_40:\n        /* \"contracts/Omnidex-incentives/incentives/OmnidexIncentivesVault.sol\":1830:1835  admin */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x01))\n        /* \"contracts/Omnidex-incentives/incentives/OmnidexIncentivesVault.sol\":1816:1826  msg.sender */\n      caller\n        /* \"contracts/Omnidex-incentives/incentives/OmnidexIncentivesVault.sol\":1816:1835  msg.sender == admin */\n      eq\n        /* \"contracts/Omnidex-incentives/incentives/OmnidexIncentivesVault.sol\":1808:1860  require(msg.sender == admin, \"Only admin permitted\") */\n      tag_96\n      jumpi\n      0x40\n      dup1\n      mload\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x14\n      0x24\n      dup3\n      add\n      mstore\n      shl(0x62, 0x13db9b1e4818591b5a5b881c195c9b5a5d1d1959)\n      0x44\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x64\n      add\n      swap1\n      revert\n    tag_96:\n        /* \"https://github.com/OmniDexFinance/helper/blob/master/%40openzeppelin/contracts/utils/Pausable.sol\":1366:1374  paused() */\n      tag_98\n        /* \"https://github.com/OmniDexFinance/helper/blob/master/%40openzeppelin/contracts/utils/Pausable.sol\":1366:1372  paused */\n      tag_29\n        /* \"https://github.com/OmniDexFinance/helper/blob/master/%40openzeppelin/contracts/utils/Pausable.sol\":1366:1374  paused() */\n      jump\t// in\n    tag_98:\n        /* \"https://github.com/OmniDexFinance/helper/blob/master/%40openzeppelin/contracts/utils/Pausable.sol\":1365:1374  !paused() */\n      iszero\n        /* \"https://github.com/OmniDexFinance/helper/blob/master/%40openzeppelin/contracts/utils/Pausable.sol\":1357:1395  require(!paused(), \"Pausable: paused\") */\n      tag_99\n      jumpi\n      0x40\n      dup1\n      mload\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x10\n      0x24\n      dup3\n      add\n      mstore\n      shl(0x82, 0x14185d5cd8589b194e881c185d5cd959)\n      0x44\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x64\n      add\n      swap1\n      revert\n    tag_99:\n        /* \"contracts/Omnidex-incentives/incentives/OmnidexIncentivesVault.sol\":3967:3975  _pause() */\n      tag_101\n        /* \"contracts/Omnidex-incentives/incentives/OmnidexIncentivesVault.sol\":3967:3973  _pause */\n      tag_102\n        /* \"contracts/Omnidex-incentives/incentives/OmnidexIncentivesVault.sol\":3967:3975  _pause() */\n      jump\t// in\n    tag_101:\n        /* \"contracts/Omnidex-incentives/incentives/OmnidexIncentivesVault.sol\":3990:3997  Pause() */\n      mload(0x40)\n      0x6985a02210a168e66602d3235cb6db0e70f92b3ba4d376a33c0f3d9434bff625\n      swap1\n      0x00\n      swap1\n      log1\n        /* \"contracts/Omnidex-incentives/incentives/OmnidexIncentivesVault.sol\":3907:4004  function pause() external onlyAdmin whenNotPaused {... */\n      jump\t// out\n        /* \"contracts/Omnidex-incentives/incentives/OmnidexIncentivesVault.sol\":2677:2798  function withdrawAll() external onlyOwner {... */\n    tag_42:\n        /* \"https://github.com/OmniDexFinance/helper/blob/master/%40openzeppelin/contracts/access/Ownable.sol\":1308:1320  _msgSender() */\n      tag_104\n        /* \"https://github.com/OmniDexFinance/helper/blob/master/%40openzeppelin/contracts/access/Ownable.sol\":1308:1318  _msgSender */\n      tag_85\n        /* \"https://github.com/OmniDexFinance/helper/blob/master/%40openzeppelin/contracts/access/Ownable.sol\":1308:1320  _msgSender() */\n      jump\t// in\n    tag_104:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"https://github.com/OmniDexFinance/helper/blob/master/%40openzeppelin/contracts/access/Ownable.sol\":1297:1320  owner() == _msgSender() */\n      and\n        /* \"https://github.com/OmniDexFinance/helper/blob/master/%40openzeppelin/contracts/access/Ownable.sol\":1297:1304  owner() */\n      tag_105\n        /* \"https://github.com/OmniDexFinance/helper/blob/master/%40openzeppelin/contracts/access/Ownable.sol\":1297:1302  owner */\n      tag_44\n        /* \"https://github.com/OmniDexFinance/helper/blob/master/%40openzeppelin/contracts/access/Ownable.sol\":1297:1304  owner() */\n      jump\t// in\n    tag_105:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"https://github.com/OmniDexFinance/helper/blob/master/%40openzeppelin/contracts/access/Ownable.sol\":1297:1320  owner() == _msgSender() */\n      and\n      eq\n        /* \"https://github.com/OmniDexFinance/helper/blob/master/%40openzeppelin/contracts/access/Ownable.sol\":1289:1357  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_106\n      jumpi\n      0x40\n      dup1\n      mload\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      dup2\n      swap1\n      mstore\n      0x24\n      dup3\n      add\n      mstore\n      0x00\n      dup1\n      mload\n      0x20\n      data_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n      0x44\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x64\n      add\n      swap1\n      revert\n    tag_106:\n        /* \"contracts/Omnidex-incentives/incentives/OmnidexIncentivesVault.sol\":2729:2791  token.safeTransfer(msg.sender, token.balanceOf(address(this))) */\n      tag_108\n        /* \"contracts/Omnidex-incentives/incentives/OmnidexIncentivesVault.sol\":2748:2758  msg.sender */\n      caller\n        /* \"contracts/Omnidex-incentives/incentives/OmnidexIncentivesVault.sol\":2760:2765  token */\n      immutable(\"0x8fef2229291b68be841adf029e58b87f39ba144b2d3b0af1760243d0a9bc6a1c\")\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Omnidex-incentives/incentives/OmnidexIncentivesVault.sol\":2760:2775  token.balanceOf */\n      and\n      0x70a08231\n        /* \"contracts/Omnidex-incentives/incentives/OmnidexIncentivesVault.sol\":2784:2788  this */\n      address\n        /* \"contracts/Omnidex-incentives/incentives/OmnidexIncentivesVault.sol\":2760:2790  token.balanceOf(address(this)) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup3\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_109\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_109:\n      pop\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_111\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_111:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      0x20\n      dup2\n      lt\n      iszero\n      tag_112\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_112:\n      pop\n      mload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Omnidex-incentives/incentives/OmnidexIncentivesVault.sol\":2729:2734  token */\n      immutable(\"0x8fef2229291b68be841adf029e58b87f39ba144b2d3b0af1760243d0a9bc6a1c\")\n        /* \"contracts/Omnidex-incentives/incentives/OmnidexIncentivesVault.sol\":2729:2747  token.safeTransfer */\n      and\n      swap2\n        /* \"contracts/Omnidex-incentives/incentives/OmnidexIncentivesVault.sol\":2729:2791  token.safeTransfer(msg.sender, token.balanceOf(address(this))) */\n      swap1\n        /* \"contracts/Omnidex-incentives/incentives/OmnidexIncentivesVault.sol\":2729:2747  token.safeTransfer */\n      tag_113\n        /* \"contracts/Omnidex-incentives/incentives/OmnidexIncentivesVault.sol\":2729:2791  token.safeTransfer(msg.sender, token.balanceOf(address(this))) */\n      jump\t// in\n    tag_108:\n        /* \"contracts/Omnidex-incentives/incentives/OmnidexIncentivesVault.sol\":2677:2798  function withdrawAll() external onlyOwner {... */\n      jump\t// out\n        /* \"https://github.com/OmniDexFinance/helper/blob/master/%40openzeppelin/contracts/access/Ownable.sol\":1085:1170  function owner() public view virtual returns (address) {... */\n    tag_44:\n        /* \"https://github.com/OmniDexFinance/helper/blob/master/%40openzeppelin/contracts/access/Ownable.sol\":1131:1138  address */\n      0x00\n        /* \"https://github.com/OmniDexFinance/helper/blob/master/%40openzeppelin/contracts/access/Ownable.sol\":1157:1163  _owner */\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"https://github.com/OmniDexFinance/helper/blob/master/%40openzeppelin/contracts/access/Ownable.sol\":1085:1170  function owner() public view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/Omnidex-incentives/incentives/OmnidexIncentivesVault.sol\":779:809  address public approvedSpender */\n    tag_46:\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x02))\n      dup2\n      jump\t// out\n        /* \"contracts/Omnidex-incentives/incentives/OmnidexIncentivesVault.sol\":2493:2606  function getIncentivesBalance() public view returns (uint) {... */\n    tag_48:\n        /* \"contracts/Omnidex-incentives/incentives/OmnidexIncentivesVault.sol\":2546:2550  uint */\n      0x00\n        /* \"contracts/Omnidex-incentives/incentives/OmnidexIncentivesVault.sol\":2569:2574  token */\n      immutable(\"0x8fef2229291b68be841adf029e58b87f39ba144b2d3b0af1760243d0a9bc6a1c\")\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Omnidex-incentives/incentives/OmnidexIncentivesVault.sol\":2569:2584  token.balanceOf */\n      and\n      0x70a08231\n        /* \"contracts/Omnidex-incentives/incentives/OmnidexIncentivesVault.sol\":2593:2597  this */\n      address\n        /* \"contracts/Omnidex-incentives/incentives/OmnidexIncentivesVault.sol\":2569:2599  token.balanceOf(address(this)) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup3\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_116\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_116:\n      pop\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_118\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_118:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      0x20\n      dup2\n      lt\n      iszero\n      tag_119\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_119:\n      pop\n      mload\n      swap1\n      pop\n        /* \"contracts/Omnidex-incentives/incentives/OmnidexIncentivesVault.sol\":2493:2606  function getIncentivesBalance() public view returns (uint) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/Omnidex-incentives/incentives/OmnidexIncentivesVault.sol\":3085:3171  function getDailyLimit() public view returns (uint) {... */\n    tag_50:\n        /* \"contracts/Omnidex-incentives/incentives/OmnidexIncentivesVault.sol\":3154:3164  dailyLimit */\n      sload(0x03)\n        /* \"contracts/Omnidex-incentives/incentives/OmnidexIncentivesVault.sol\":3085:3171  function getDailyLimit() public view returns (uint) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/Omnidex-incentives/incentives/OmnidexIncentivesVault.sol\":2905:3079  function setDailyLimit(uint _newDailyLimit) external onlyOwner {... */\n    tag_53:\n        /* \"https://github.com/OmniDexFinance/helper/blob/master/%40openzeppelin/contracts/access/Ownable.sol\":1308:1320  _msgSender() */\n      tag_122\n        /* \"https://github.com/OmniDexFinance/helper/blob/master/%40openzeppelin/contracts/access/Ownable.sol\":1308:1318  _msgSender */\n      tag_85\n        /* \"https://github.com/OmniDexFinance/helper/blob/master/%40openzeppelin/contracts/access/Ownable.sol\":1308:1320  _msgSender() */\n      jump\t// in\n    tag_122:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"https://github.com/OmniDexFinance/helper/blob/master/%40openzeppelin/contracts/access/Ownable.sol\":1297:1320  owner() == _msgSender() */\n      and\n        /* \"https://github.com/OmniDexFinance/helper/blob/master/%40openzeppelin/contracts/access/Ownable.sol\":1297:1304  owner() */\n      tag_123\n        /* \"https://github.com/OmniDexFinance/helper/blob/master/%40openzeppelin/contracts/access/Ownable.sol\":1297:1302  owner */\n      tag_44\n        /* \"https://github.com/OmniDexFinance/helper/blob/master/%40openzeppelin/contracts/access/Ownable.sol\":1297:1304  owner() */\n      jump\t// in\n    tag_123:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"https://github.com/OmniDexFinance/helper/blob/master/%40openzeppelin/contracts/access/Ownable.sol\":1297:1320  owner() == _msgSender() */\n      and\n      eq\n        /* \"https://github.com/OmniDexFinance/helper/blob/master/%40openzeppelin/contracts/access/Ownable.sol\":1289:1357  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_124\n      jumpi\n      0x40\n      dup1\n      mload\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      dup2\n      swap1\n      mstore\n      0x24\n      dup3\n      add\n      mstore\n      0x00\n      dup1\n      mload\n      0x20\n      data_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n      0x44\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x64\n      add\n      swap1\n      revert\n    tag_124:\n        /* \"contracts/Omnidex-incentives/incentives/OmnidexIncentivesVault.sol\":3045:3055  dailyLimit */\n      0x03\n        /* \"contracts/Omnidex-incentives/incentives/OmnidexIncentivesVault.sol\":3045:3072  dailyLimit = _newDailyLimit */\n      sstore\n        /* \"contracts/Omnidex-incentives/incentives/OmnidexIncentivesVault.sol\":2905:3079  function setDailyLimit(uint _newDailyLimit) external onlyOwner {... */\n      jump\t// out\n        /* \"contracts/Omnidex-incentives/incentives/OmnidexIncentivesVault.sol\":2259:2487  function deposit(uint256 _amount) external whenNotPaused {... */\n    tag_56:\n        /* \"https://github.com/OmniDexFinance/helper/blob/master/%40openzeppelin/contracts/utils/Pausable.sol\":1366:1374  paused() */\n      tag_128\n        /* \"https://github.com/OmniDexFinance/helper/blob/master/%40openzeppelin/contracts/utils/Pausable.sol\":1366:1372  paused */\n      tag_29\n        /* \"https://github.com/OmniDexFinance/helper/blob/master/%40openzeppelin/contracts/utils/Pausable.sol\":1366:1374  paused() */\n      jump\t// in\n    tag_128:\n        /* \"https://github.com/OmniDexFinance/helper/blob/master/%40openzeppelin/contracts/utils/Pausable.sol\":1365:1374  !paused() */\n      iszero\n        /* \"https://github.com/OmniDexFinance/helper/blob/master/%40openzeppelin/contracts/utils/Pausable.sol\":1357:1395  require(!paused(), \"Pausable: paused\") */\n      tag_129\n      jumpi\n      0x40\n      dup1\n      mload\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x10\n      0x24\n      dup3\n      add\n      mstore\n      shl(0x82, 0x14185d5cd8589b194e881c185d5cd959)\n      0x44\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x64\n      add\n      swap1\n      revert\n    tag_129:\n        /* \"contracts/Omnidex-incentives/incentives/OmnidexIncentivesVault.sol\":2344:2345  0 */\n      0x00\n        /* \"contracts/Omnidex-incentives/incentives/OmnidexIncentivesVault.sol\":2334:2341  _amount */\n      dup2\n        /* \"contracts/Omnidex-incentives/incentives/OmnidexIncentivesVault.sol\":2334:2345  _amount > 0 */\n      gt\n        /* \"contracts/Omnidex-incentives/incentives/OmnidexIncentivesVault.sol\":2326:2368  require(_amount > 0, \"Nothing to deposit\") */\n      tag_131\n      jumpi\n      0x40\n      dup1\n      mload\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x12\n      0x24\n      dup3\n      add\n      mstore\n      shl(0x72, 0x139bdd1a1a5b99c81d1bc819195c1bdcda5d)\n      0x44\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x64\n      add\n      swap1\n      revert\n    tag_131:\n        /* \"contracts/Omnidex-incentives/incentives/OmnidexIncentivesVault.sol\":2378:2436  token.safeTransferFrom(msg.sender, address(this), _amount) */\n      tag_132\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Omnidex-incentives/incentives/OmnidexIncentivesVault.sol\":2378:2383  token */\n      immutable(\"0x8fef2229291b68be841adf029e58b87f39ba144b2d3b0af1760243d0a9bc6a1c\")\n        /* \"contracts/Omnidex-incentives/incentives/OmnidexIncentivesVault.sol\":2378:2400  token.safeTransferFrom */\n      and\n        /* \"contracts/Omnidex-incentives/incentives/OmnidexIncentivesVault.sol\":2401:2411  msg.sender */\n      caller\n        /* \"contracts/Omnidex-incentives/incentives/OmnidexIncentivesVault.sol\":2421:2425  this */\n      address\n        /* \"contracts/Omnidex-incentives/incentives/OmnidexIncentivesVault.sol\":2428:2435  _amount */\n      dup5\n        /* \"contracts/Omnidex-incentives/incentives/OmnidexIncentivesVault.sol\":2378:2400  token.safeTransferFrom */\n      tag_133\n        /* \"contracts/Omnidex-incentives/incentives/OmnidexIncentivesVault.sol\":2378:2436  token.safeTransferFrom(msg.sender, address(this), _amount) */\n      jump\t// in\n    tag_132:\n        /* \"contracts/Omnidex-incentives/incentives/OmnidexIncentivesVault.sol\":2452:2480  Deposit(msg.sender, _amount) */\n      0x40\n      dup1\n      mload\n      dup3\n      dup2\n      mstore\n      swap1\n      mload\n        /* \"contracts/Omnidex-incentives/incentives/OmnidexIncentivesVault.sol\":2460:2470  msg.sender */\n      caller\n      swap2\n        /* \"contracts/Omnidex-incentives/incentives/OmnidexIncentivesVault.sol\":2452:2480  Deposit(msg.sender, _amount) */\n      0xe1fffcc4923d04b559f4d29a8bfc6cda04eb5b0d3c460751c2402c5c5cc9109c\n      swap2\n      swap1\n      dup2\n      swap1\n      sub\n      0x20\n      add\n      swap1\n      log2\n        /* \"contracts/Omnidex-incentives/incentives/OmnidexIncentivesVault.sol\":2259:2487  function deposit(uint256 _amount) external whenNotPaused {... */\n      pop\n      jump\t// out\n        /* \"contracts/Omnidex-incentives/incentives/OmnidexIncentivesVault.sol\":3513:3795  function inCaseTokensGetStuck(address _token) external onlyAdmin {... */\n    tag_59:\n        /* \"contracts/Omnidex-incentives/incentives/OmnidexIncentivesVault.sol\":1830:1835  admin */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x01))\n        /* \"contracts/Omnidex-incentives/incentives/OmnidexIncentivesVault.sol\":1816:1826  msg.sender */\n      caller\n        /* \"contracts/Omnidex-incentives/incentives/OmnidexIncentivesVault.sol\":1816:1835  msg.sender == admin */\n      eq\n        /* \"contracts/Omnidex-incentives/incentives/OmnidexIncentivesVault.sol\":1808:1860  require(msg.sender == admin, \"Only admin permitted\") */\n      tag_135\n      jumpi\n      0x40\n      dup1\n      mload\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x14\n      0x24\n      dup3\n      add\n      mstore\n      shl(0x62, 0x13db9b1e4818591b5a5b881c195c9b5a5d1d1959)\n      0x44\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x64\n      add\n      swap1\n      revert\n    tag_135:\n        /* \"contracts/Omnidex-incentives/incentives/OmnidexIncentivesVault.sol\":3614:3619  token */\n      immutable(\"0x8fef2229291b68be841adf029e58b87f39ba144b2d3b0af1760243d0a9bc6a1c\")\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Omnidex-incentives/incentives/OmnidexIncentivesVault.sol\":3596:3620  _token != address(token) */\n      and\n        /* \"contracts/Omnidex-incentives/incentives/OmnidexIncentivesVault.sol\":3596:3602  _token */\n      dup2\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Omnidex-incentives/incentives/OmnidexIncentivesVault.sol\":3596:3620  _token != address(token) */\n      and\n      eq\n      iszero\n        /* \"contracts/Omnidex-incentives/incentives/OmnidexIncentivesVault.sol\":3588:3665  require(_token != address(token), \"Token cannot be same as incentives token\") */\n      tag_137\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x28\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_bcc168664a3c14c72586057eda5ba29201ba9e86de7cd2fcc768efe9bd2f6ac9\n      0x28\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_137:\n        /* \"contracts/Omnidex-incentives/incentives/OmnidexIncentivesVault.sol\":3675:3689  uint256 amount */\n      0x00\n        /* \"contracts/Omnidex-incentives/incentives/OmnidexIncentivesVault.sol\":3699:3705  _token */\n      dup2\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Omnidex-incentives/incentives/OmnidexIncentivesVault.sol\":3692:3716  IERC20(_token).balanceOf */\n      and\n      0x70a08231\n        /* \"contracts/Omnidex-incentives/incentives/OmnidexIncentivesVault.sol\":3725:3729  this */\n      address\n        /* \"contracts/Omnidex-incentives/incentives/OmnidexIncentivesVault.sol\":3692:3731  IERC20(_token).balanceOf(address(this)) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup3\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_138\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_138:\n      pop\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_140\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_140:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      0x20\n      dup2\n      lt\n      iszero\n      tag_141\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_141:\n      pop\n      mload\n      swap1\n      pop\n        /* \"contracts/Omnidex-incentives/incentives/OmnidexIncentivesVault.sol\":3741:3788  IERC20(_token).safeTransfer(msg.sender, amount) */\n      tag_142\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Omnidex-incentives/incentives/OmnidexIncentivesVault.sol\":3741:3768  IERC20(_token).safeTransfer */\n      dup4\n      and\n        /* \"contracts/Omnidex-incentives/incentives/OmnidexIncentivesVault.sol\":3769:3779  msg.sender */\n      caller\n        /* \"contracts/Omnidex-incentives/incentives/OmnidexIncentivesVault.sol\":3692:3731  IERC20(_token).balanceOf(address(this)) */\n      dup4\n        /* \"contracts/Omnidex-incentives/incentives/OmnidexIncentivesVault.sol\":3741:3768  IERC20(_token).safeTransfer */\n      tag_113\n        /* \"contracts/Omnidex-incentives/incentives/OmnidexIncentivesVault.sol\":3741:3788  IERC20(_token).safeTransfer(msg.sender, amount) */\n      jump\t// in\n    tag_142:\n        /* \"contracts/Omnidex-incentives/incentives/OmnidexIncentivesVault.sol\":1870:1871  _ */\n      pop\n        /* \"contracts/Omnidex-incentives/incentives/OmnidexIncentivesVault.sol\":3513:3795  function inCaseTokensGetStuck(address _token) external onlyAdmin {... */\n      pop\n      jump\t// out\n        /* \"contracts/Omnidex-incentives/incentives/OmnidexIncentivesVault.sol\":868:890  uint public spentToday */\n    tag_61:\n      sload(0x05)\n      dup2\n      jump\t// out\n        /* \"https://github.com/OmniDexFinance/helper/blob/master/%40openzeppelin/contracts/access/Ownable.sol\":2011:2251  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_64:\n        /* \"https://github.com/OmniDexFinance/helper/blob/master/%40openzeppelin/contracts/access/Ownable.sol\":1308:1320  _msgSender() */\n      tag_144\n        /* \"https://github.com/OmniDexFinance/helper/blob/master/%40openzeppelin/contracts/access/Ownable.sol\":1308:1318  _msgSender */\n      tag_85\n        /* \"https://github.com/OmniDexFinance/helper/blob/master/%40openzeppelin/contracts/access/Ownable.sol\":1308:1320  _msgSender() */\n      jump\t// in\n    tag_144:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"https://github.com/OmniDexFinance/helper/blob/master/%40openzeppelin/contracts/access/Ownable.sol\":1297:1320  owner() == _msgSender() */\n      and\n        /* \"https://github.com/OmniDexFinance/helper/blob/master/%40openzeppelin/contracts/access/Ownable.sol\":1297:1304  owner() */\n      tag_145\n        /* \"https://github.com/OmniDexFinance/helper/blob/master/%40openzeppelin/contracts/access/Ownable.sol\":1297:1302  owner */\n      tag_44\n        /* \"https://github.com/OmniDexFinance/helper/blob/master/%40openzeppelin/contracts/access/Ownable.sol\":1297:1304  owner() */\n      jump\t// in\n    tag_145:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"https://github.com/OmniDexFinance/helper/blob/master/%40openzeppelin/contracts/access/Ownable.sol\":1297:1320  owner() == _msgSender() */\n      and\n      eq\n        /* \"https://github.com/OmniDexFinance/helper/blob/master/%40openzeppelin/contracts/access/Ownable.sol\":1289:1357  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_146\n      jumpi\n      0x40\n      dup1\n      mload\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      dup2\n      swap1\n      mstore\n      0x24\n      dup3\n      add\n      mstore\n      0x00\n      dup1\n      mload\n      0x20\n      data_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n      0x44\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x64\n      add\n      swap1\n      revert\n    tag_146:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"https://github.com/OmniDexFinance/helper/blob/master/%40openzeppelin/contracts/access/Ownable.sol\":2099:2121  newOwner != address(0) */\n      dup2\n      and\n        /* \"https://github.com/OmniDexFinance/helper/blob/master/%40openzeppelin/contracts/access/Ownable.sol\":2091:2164  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n      tag_148\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x26\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe\n      0x26\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_148:\n        /* \"https://github.com/OmniDexFinance/helper/blob/master/%40openzeppelin/contracts/access/Ownable.sol\":2200:2206  _owner */\n      0x00\n      dup1\n      sload\n        /* \"https://github.com/OmniDexFinance/helper/blob/master/%40openzeppelin/contracts/access/Ownable.sol\":2179:2217  OwnershipTransferred(_owner, newOwner) */\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n      dup1\n      dup6\n      and\n      swap4\n        /* \"https://github.com/OmniDexFinance/helper/blob/master/%40openzeppelin/contracts/access/Ownable.sol\":2200:2206  _owner */\n      swap3\n      and\n      swap2\n        /* \"https://github.com/OmniDexFinance/helper/blob/master/%40openzeppelin/contracts/access/Ownable.sol\":2179:2217  OwnershipTransferred(_owner, newOwner) */\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      swap2\n      log3\n        /* \"https://github.com/OmniDexFinance/helper/blob/master/%40openzeppelin/contracts/access/Ownable.sol\":2227:2233  _owner */\n      0x00\n        /* \"https://github.com/OmniDexFinance/helper/blob/master/%40openzeppelin/contracts/access/Ownable.sol\":2227:2244  _owner = newOwner */\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      swap3\n      swap1\n      swap3\n      and\n      swap2\n      swap1\n      swap2\n      or\n      swap1\n      sstore\n        /* \"https://github.com/OmniDexFinance/helper/blob/master/%40openzeppelin/contracts/access/Ownable.sol\":2011:2251  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n      jump\t// out\n        /* \"contracts/Omnidex-incentives/incentives/OmnidexIncentivesVault.sol\":4397:4796  function withdraw(address _to, uint256 _amount) public whenNotPaused onlyAuth {... */\n    tag_67:\n        /* \"https://github.com/OmniDexFinance/helper/blob/master/%40openzeppelin/contracts/utils/Pausable.sol\":1366:1374  paused() */\n      tag_150\n        /* \"https://github.com/OmniDexFinance/helper/blob/master/%40openzeppelin/contracts/utils/Pausable.sol\":1366:1372  paused */\n      tag_29\n        /* \"https://github.com/OmniDexFinance/helper/blob/master/%40openzeppelin/contracts/utils/Pausable.sol\":1366:1374  paused() */\n      jump\t// in\n    tag_150:\n        /* \"https://github.com/OmniDexFinance/helper/blob/master/%40openzeppelin/contracts/utils/Pausable.sol\":1365:1374  !paused() */\n      iszero\n        /* \"https://github.com/OmniDexFinance/helper/blob/master/%40openzeppelin/contracts/utils/Pausable.sol\":1357:1395  require(!paused(), \"Pausable: paused\") */\n      tag_151\n      jumpi\n      0x40\n      dup1\n      mload\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x10\n      0x24\n      dup3\n      add\n      mstore\n      shl(0x82, 0x14185d5cd8589b194e881c185d5cd959)\n      0x44\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x64\n      add\n      swap1\n      revert\n    tag_151:\n        /* \"contracts/Omnidex-incentives/incentives/OmnidexIncentivesVault.sol\":2015:2030  approvedSpender */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x02))\n        /* \"contracts/Omnidex-incentives/incentives/OmnidexIncentivesVault.sol\":2001:2011  msg.sender */\n      caller\n        /* \"contracts/Omnidex-incentives/incentives/OmnidexIncentivesVault.sol\":2001:2030  msg.sender == approvedSpender */\n      eq\n        /* \"contracts/Omnidex-incentives/incentives/OmnidexIncentivesVault.sol\":1993:2060  require(msg.sender == approvedSpender, \"Not an authorised spender\") */\n      tag_153\n      jumpi\n      0x40\n      dup1\n      mload\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x19\n      0x24\n      dup3\n      add\n      mstore\n      0x4e6f7420616e20617574686f7269736564207370656e64657200000000000000\n      0x44\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x64\n      add\n      swap1\n      revert\n    tag_153:\n        /* \"contracts/Omnidex-incentives/incentives/OmnidexIncentivesVault.sol\":4503:4504  0 */\n      0x00\n        /* \"contracts/Omnidex-incentives/incentives/OmnidexIncentivesVault.sol\":4493:4500  _amount */\n      dup2\n        /* \"contracts/Omnidex-incentives/incentives/OmnidexIncentivesVault.sol\":4493:4504  _amount > 0 */\n      gt\n        /* \"contracts/Omnidex-incentives/incentives/OmnidexIncentivesVault.sol\":4485:4528  require(_amount > 0, \"Nothing to withdraw\") */\n      tag_155\n      jumpi\n      0x40\n      dup1\n      mload\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x13\n      0x24\n      dup3\n      add\n      mstore\n      shl(0x68, 0x4e6f7468696e6720746f207769746864726177)\n      0x44\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x64\n      add\n      swap1\n      revert\n    tag_155:\n        /* \"contracts/Omnidex-incentives/incentives/OmnidexIncentivesVault.sol\":4579:4586  _amount */\n      dup1\n        /* \"contracts/Omnidex-incentives/incentives/OmnidexIncentivesVault.sol\":4546:4551  token */\n      immutable(\"0x8fef2229291b68be841adf029e58b87f39ba144b2d3b0af1760243d0a9bc6a1c\")\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Omnidex-incentives/incentives/OmnidexIncentivesVault.sol\":4546:4561  token.balanceOf */\n      and\n      0x70a08231\n        /* \"contracts/Omnidex-incentives/incentives/OmnidexIncentivesVault.sol\":4570:4574  this */\n      address\n        /* \"contracts/Omnidex-incentives/incentives/OmnidexIncentivesVault.sol\":4546:4576  token.balanceOf(address(this)) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup3\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_156\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_156:\n      pop\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_158\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_158:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      0x20\n      dup2\n      lt\n      iszero\n      tag_159\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_159:\n      pop\n      mload\n        /* \"contracts/Omnidex-incentives/incentives/OmnidexIncentivesVault.sol\":4546:4586  token.balanceOf(address(this)) > _amount */\n      gt\n        /* \"contracts/Omnidex-incentives/incentives/OmnidexIncentivesVault.sol\":4538:4624  require(token.balanceOf(address(this)) > _amount, \"Insufficient incentives available\") */\n      tag_160\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x21\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_2186895f526e488d7755616513a09664eedf819bfafe4f6fa94396f5afb14e38\n      0x21\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_160:\n        /* \"contracts/Omnidex-incentives/incentives/OmnidexIncentivesVault.sol\":4638:4659  isUnderLimit(_amount) */\n      tag_161\n        /* \"contracts/Omnidex-incentives/incentives/OmnidexIncentivesVault.sol\":4651:4658  _amount */\n      dup2\n        /* \"contracts/Omnidex-incentives/incentives/OmnidexIncentivesVault.sol\":4638:4650  isUnderLimit */\n      tag_162\n        /* \"contracts/Omnidex-incentives/incentives/OmnidexIncentivesVault.sol\":4638:4659  isUnderLimit(_amount) */\n      jump\t// in\n    tag_161:\n        /* \"contracts/Omnidex-incentives/incentives/OmnidexIncentivesVault.sol\":4634:4752  if (isUnderLimit(_amount)){... */\n      iszero\n      tag_164\n      jumpi\n        /* \"contracts/Omnidex-incentives/incentives/OmnidexIncentivesVault.sol\":4674:4684  spentToday */\n      0x05\n        /* \"contracts/Omnidex-incentives/incentives/OmnidexIncentivesVault.sol\":4674:4695  spentToday += _amount */\n      dup1\n      sload\n      dup3\n      add\n      swap1\n      sstore\n        /* \"contracts/Omnidex-incentives/incentives/OmnidexIncentivesVault.sol\":4709:4741  token.safeTransfer(_to, _amount) */\n      tag_164\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Omnidex-incentives/incentives/OmnidexIncentivesVault.sol\":4709:4714  token */\n      immutable(\"0x8fef2229291b68be841adf029e58b87f39ba144b2d3b0af1760243d0a9bc6a1c\")\n        /* \"contracts/Omnidex-incentives/incentives/OmnidexIncentivesVault.sol\":4709:4727  token.safeTransfer */\n      and\n        /* \"contracts/Omnidex-incentives/incentives/OmnidexIncentivesVault.sol\":4728:4731  _to */\n      dup4\n        /* \"contracts/Omnidex-incentives/incentives/OmnidexIncentivesVault.sol\":4688:4695  _amount */\n      dup4\n        /* \"contracts/Omnidex-incentives/incentives/OmnidexIncentivesVault.sol\":4709:4727  token.safeTransfer */\n      tag_113\n        /* \"contracts/Omnidex-incentives/incentives/OmnidexIncentivesVault.sol\":4709:4741  token.safeTransfer(_to, _amount) */\n      jump\t// in\n    tag_164:\n        /* \"contracts/Omnidex-incentives/incentives/OmnidexIncentivesVault.sol\":4767:4789  Withdraw(_to, _amount) */\n      0x40\n      dup1\n      mload\n      dup3\n      dup2\n      mstore\n      swap1\n      mload\n      sub(shl(0xa0, 0x01), 0x01)\n      dup5\n      and\n      swap2\n      0x884edad9ce6fa2440d8a54cc123490eb96d2768479d49ff9c7366125a9424364\n      swap2\n      swap1\n      dup2\n      swap1\n      sub\n      0x20\n      add\n      swap1\n      log2\n        /* \"contracts/Omnidex-incentives/incentives/OmnidexIncentivesVault.sol\":4397:4796  function withdraw(address _to, uint256 _amount) public whenNotPaused onlyAuth {... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/Omnidex-incentives/incentives/OmnidexIncentivesVault.sol\":753:773  address public admin */\n    tag_69:\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x01))\n      dup2\n      jump\t// out\n        /* \"contracts/Omnidex-incentives/incentives/OmnidexIncentivesVault.sol\":699:728  IERC20 public immutable token */\n    tag_71:\n      immutable(\"0x8fef2229291b68be841adf029e58b87f39ba144b2d3b0af1760243d0a9bc6a1c\")\n      dup2\n      jump\t// out\n        /* \"https://github.com/OmniDexFinance/helper/blob/master/%40openzeppelin/contracts/token/ERC20/SafeERC20.sol\":1348:1961  function safeApprove(IERC20 token, address spender, uint256 value) internal {... */\n    tag_72:\n        /* \"https://github.com/OmniDexFinance/helper/blob/master/%40openzeppelin/contracts/token/ERC20/SafeERC20.sol\":1713:1723  value == 0 */\n      dup1\n      iszero\n      dup1\n        /* \"https://github.com/OmniDexFinance/helper/blob/master/%40openzeppelin/contracts/token/ERC20/SafeERC20.sol\":1712:1774  (value == 0) || (token.allowance(address(this), spender) == 0) */\n      tag_166\n      jumpi\n      pop\n        /* \"https://github.com/OmniDexFinance/helper/blob/master/%40openzeppelin/contracts/token/ERC20/SafeERC20.sol\":1729:1768  token.allowance(address(this), spender) */\n      0x40\n      dup1\n      mload\n      shl(0xe1, 0x6eb1769f)\n      dup2\n      mstore\n        /* \"https://github.com/OmniDexFinance/helper/blob/master/%40openzeppelin/contracts/token/ERC20/SafeERC20.sol\":1753:1757  this */\n      address\n        /* \"https://github.com/OmniDexFinance/helper/blob/master/%40openzeppelin/contracts/token/ERC20/SafeERC20.sol\":1729:1768  token.allowance(address(this), spender) */\n      0x04\n      dup3\n      add\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n      dup5\n      dup2\n      and\n      0x24\n      dup4\n      add\n      mstore\n      swap2\n      mload\n        /* \"https://github.com/OmniDexFinance/helper/blob/master/%40openzeppelin/contracts/token/ERC20/SafeERC20.sol\":1729:1744  token.allowance */\n      swap2\n      dup6\n      and\n      swap2\n      0xdd62ed3e\n      swap2\n        /* \"https://github.com/OmniDexFinance/helper/blob/master/%40openzeppelin/contracts/token/ERC20/SafeERC20.sol\":1729:1768  token.allowance(address(this), spender) */\n      0x44\n      dup1\n      dup3\n      add\n      swap3\n      0x20\n      swap3\n      swap1\n      swap2\n      swap1\n      dup3\n      swap1\n      sub\n      add\n      dup2\n        /* \"https://github.com/OmniDexFinance/helper/blob/master/%40openzeppelin/contracts/token/ERC20/SafeERC20.sol\":1729:1744  token.allowance */\n      dup7\n        /* \"https://github.com/OmniDexFinance/helper/blob/master/%40openzeppelin/contracts/token/ERC20/SafeERC20.sol\":1729:1768  token.allowance(address(this), spender) */\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_167\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_167:\n      pop\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_169\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_169:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      0x20\n      dup2\n      lt\n      iszero\n      tag_170\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_170:\n      pop\n      mload\n        /* \"https://github.com/OmniDexFinance/helper/blob/master/%40openzeppelin/contracts/token/ERC20/SafeERC20.sol\":1729:1773  token.allowance(address(this), spender) == 0 */\n      iszero\n        /* \"https://github.com/OmniDexFinance/helper/blob/master/%40openzeppelin/contracts/token/ERC20/SafeERC20.sol\":1712:1774  (value == 0) || (token.allowance(address(this), spender) == 0) */\n    tag_166:\n        /* \"https://github.com/OmniDexFinance/helper/blob/master/%40openzeppelin/contracts/token/ERC20/SafeERC20.sol\":1704:1854  require((value == 0) || (token.allowance(address(this), spender) == 0),... */\n      tag_171\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x36\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_ef945ddb1bfdc0da870feb4560d868b047642b4ac7f2fb7f8b7c51cb4a411e25\n      0x36\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_171:\n        /* \"https://github.com/OmniDexFinance/helper/blob/master/%40openzeppelin/contracts/token/ERC20/SafeERC20.sol\":1891:1953  abi.encodeWithSelector(token.approve.selector, spender, value) */\n      0x40\n      dup1\n      mload\n      sub(shl(0xa0, 0x01), 0x01)\n      dup5\n      and\n      0x24\n      dup3\n      add\n      mstore\n      0x44\n      dup1\n      dup3\n      add\n      dup5\n      swap1\n      mstore\n      dup3\n      mload\n      dup1\n      dup4\n      sub\n      swap1\n      swap2\n      add\n      dup2\n      mstore\n      0x64\n      swap1\n      swap2\n      add\n      swap1\n      swap2\n      mstore\n      0x20\n      dup2\n      add\n      dup1\n      mload\n      sub(shl(0xe0, 0x01), 0x01)\n      and\n      shl(0xe0, 0x095ea7b3)\n      or\n      swap1\n      mstore\n        /* \"https://github.com/OmniDexFinance/helper/blob/master/%40openzeppelin/contracts/token/ERC20/SafeERC20.sol\":1864:1954  _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, value)) */\n      tag_172\n      swap1\n        /* \"https://github.com/OmniDexFinance/helper/blob/master/%40openzeppelin/contracts/token/ERC20/SafeERC20.sol\":1884:1889  token */\n      dup5\n      swap1\n        /* \"https://github.com/OmniDexFinance/helper/blob/master/%40openzeppelin/contracts/token/ERC20/SafeERC20.sol\":1864:1883  _callOptionalReturn */\n      tag_173\n        /* \"https://github.com/OmniDexFinance/helper/blob/master/%40openzeppelin/contracts/token/ERC20/SafeERC20.sol\":1864:1954  _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, value)) */\n      jump\t// in\n    tag_172:\n        /* \"https://github.com/OmniDexFinance/helper/blob/master/%40openzeppelin/contracts/token/ERC20/SafeERC20.sol\":1348:1961  function safeApprove(IERC20 token, address spender, uint256 value) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"https://github.com/OmniDexFinance/helper/blob/master/%40openzeppelin/contracts/utils/Address.sol\":3581:3774  function functionCall(address target, bytes memory data, string memory errorMessage) internal returns (bytes memory) {... */\n    tag_73:\n        /* \"https://github.com/OmniDexFinance/helper/blob/master/%40openzeppelin/contracts/utils/Address.sol\":3684:3696  bytes memory */\n      0x60\n        /* \"https://github.com/OmniDexFinance/helper/blob/master/%40openzeppelin/contracts/utils/Address.sol\":3715:3767  functionCallWithValue(target, data, 0, errorMessage) */\n      tag_175\n        /* \"https://github.com/OmniDexFinance/helper/blob/master/%40openzeppelin/contracts/utils/Address.sol\":3737:3743  target */\n      dup5\n        /* \"https://github.com/OmniDexFinance/helper/blob/master/%40openzeppelin/contracts/utils/Address.sol\":3745:3749  data */\n      dup5\n        /* \"https://github.com/OmniDexFinance/helper/blob/master/%40openzeppelin/contracts/utils/Address.sol\":3751:3752  0 */\n      0x00\n        /* \"https://github.com/OmniDexFinance/helper/blob/master/%40openzeppelin/contracts/utils/Address.sol\":3754:3766  errorMessage */\n      dup6\n        /* \"https://github.com/OmniDexFinance/helper/blob/master/%40openzeppelin/contracts/utils/Address.sol\":3715:3736  functionCallWithValue */\n      tag_176\n        /* \"https://github.com/OmniDexFinance/helper/blob/master/%40openzeppelin/contracts/utils/Address.sol\":3715:3767  functionCallWithValue(target, data, 0, errorMessage) */\n      jump\t// in\n    tag_175:\n        /* \"https://github.com/OmniDexFinance/helper/blob/master/%40openzeppelin/contracts/utils/Address.sol\":3708:3767  return functionCallWithValue(target, data, 0, errorMessage) */\n      swap1\n      pop\n        /* \"https://github.com/OmniDexFinance/helper/blob/master/%40openzeppelin/contracts/utils/Address.sol\":3581:3774  function functionCall(address target, bytes memory data, string memory errorMessage) internal returns (bytes memory) {... */\n    tag_174:\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"https://github.com/OmniDexFinance/helper/blob/master/%40openzeppelin/contracts/utils/Pausable.sol\":2064:2181  function _unpause() internal virtual whenPaused {... */\n    tag_81:\n        /* \"https://github.com/OmniDexFinance/helper/blob/master/%40openzeppelin/contracts/utils/Pausable.sol\":1631:1639  paused() */\n      tag_178\n        /* \"https://github.com/OmniDexFinance/helper/blob/master/%40openzeppelin/contracts/utils/Pausable.sol\":1631:1637  paused */\n      tag_29\n        /* \"https://github.com/OmniDexFinance/helper/blob/master/%40openzeppelin/contracts/utils/Pausable.sol\":1631:1639  paused() */\n      jump\t// in\n    tag_178:\n        /* \"https://github.com/OmniDexFinance/helper/blob/master/%40openzeppelin/contracts/utils/Pausable.sol\":1623:1664  require(paused(), \"Pausable: not paused\") */\n      tag_179\n      jumpi\n      0x40\n      dup1\n      mload\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x14\n      0x24\n      dup3\n      add\n      mstore\n      shl(0x62, 0x14185d5cd8589b194e881b9bdd081c185d5cd959)\n      0x44\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x64\n      add\n      swap1\n      revert\n    tag_179:\n        /* \"https://github.com/OmniDexFinance/helper/blob/master/%40openzeppelin/contracts/utils/Pausable.sol\":2132:2137  false */\n      0x00\n        /* \"https://github.com/OmniDexFinance/helper/blob/master/%40openzeppelin/contracts/utils/Pausable.sol\":2122:2137  _paused = false */\n      dup1\n      sload\n      not(shl(0xa0, 0xff))\n      and\n      swap1\n      sstore\n        /* \"https://github.com/OmniDexFinance/helper/blob/master/%40openzeppelin/contracts/utils/Pausable.sol\":2152:2174  Unpaused(_msgSender()) */\n      0x5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa\n        /* \"https://github.com/OmniDexFinance/helper/blob/master/%40openzeppelin/contracts/utils/Pausable.sol\":2161:2173  _msgSender() */\n      tag_181\n        /* \"https://github.com/OmniDexFinance/helper/blob/master/%40openzeppelin/contracts/utils/Pausable.sol\":2161:2171  _msgSender */\n      tag_85\n        /* \"https://github.com/OmniDexFinance/helper/blob/master/%40openzeppelin/contracts/utils/Pausable.sol\":2161:2173  _msgSender() */\n      jump\t// in\n    tag_181:\n        /* \"https://github.com/OmniDexFinance/helper/blob/master/%40openzeppelin/contracts/utils/Pausable.sol\":2152:2174  Unpaused(_msgSender()) */\n      0x40\n      dup1\n      mload\n      sub(shl(0xa0, 0x01), 0x01)\n      swap1\n      swap3\n      and\n      dup3\n      mstore\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x20\n      add\n      swap1\n      log1\n        /* \"https://github.com/OmniDexFinance/helper/blob/master/%40openzeppelin/contracts/utils/Pausable.sol\":2064:2181  function _unpause() internal virtual whenPaused {... */\n      jump\t// out\n        /* \"https://github.com/OmniDexFinance/helper/blob/master/%40openzeppelin/contracts/utils/Context.sol\":598:702  function _msgSender() internal view virtual returns (address payable) {... */\n    tag_85:\n        /* \"https://github.com/OmniDexFinance/helper/blob/master/%40openzeppelin/contracts/utils/Context.sol\":685:695  msg.sender */\n      caller\n        /* \"https://github.com/OmniDexFinance/helper/blob/master/%40openzeppelin/contracts/utils/Context.sol\":598:702  function _msgSender() internal view virtual returns (address payable) {... */\n      swap1\n      jump\t// out\n        /* \"https://github.com/OmniDexFinance/helper/blob/master/%40openzeppelin/contracts/utils/Pausable.sol\":1817:1932  function _pause() internal virtual whenNotPaused {... */\n    tag_102:\n        /* \"https://github.com/OmniDexFinance/helper/blob/master/%40openzeppelin/contracts/utils/Pausable.sol\":1366:1374  paused() */\n      tag_184\n        /* \"https://github.com/OmniDexFinance/helper/blob/master/%40openzeppelin/contracts/utils/Pausable.sol\":1366:1372  paused */\n      tag_29\n        /* \"https://github.com/OmniDexFinance/helper/blob/master/%40openzeppelin/contracts/utils/Pausable.sol\":1366:1374  paused() */\n      jump\t// in\n    tag_184:\n        /* \"https://github.com/OmniDexFinance/helper/blob/master/%40openzeppelin/contracts/utils/Pausable.sol\":1365:1374  !paused() */\n      iszero\n        /* \"https://github.com/OmniDexFinance/helper/blob/master/%40openzeppelin/contracts/utils/Pausable.sol\":1357:1395  require(!paused(), \"Pausable: paused\") */\n      tag_185\n      jumpi\n      0x40\n      dup1\n      mload\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x10\n      0x24\n      dup3\n      add\n      mstore\n      shl(0x82, 0x14185d5cd8589b194e881c185d5cd959)\n      0x44\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x64\n      add\n      swap1\n      revert\n    tag_185:\n        /* \"https://github.com/OmniDexFinance/helper/blob/master/%40openzeppelin/contracts/utils/Pausable.sol\":1876:1883  _paused */\n      0x00\n        /* \"https://github.com/OmniDexFinance/helper/blob/master/%40openzeppelin/contracts/utils/Pausable.sol\":1876:1890  _paused = true */\n      dup1\n      sload\n      not(shl(0xa0, 0xff))\n      and\n      shl(0xa0, 0x01)\n      or\n      swap1\n      sstore\n        /* \"https://github.com/OmniDexFinance/helper/blob/master/%40openzeppelin/contracts/utils/Pausable.sol\":1905:1925  Paused(_msgSender()) */\n      0x62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258\n        /* \"https://github.com/OmniDexFinance/helper/blob/master/%40openzeppelin/contracts/utils/Pausable.sol\":1912:1924  _msgSender() */\n      tag_181\n        /* \"https://github.com/OmniDexFinance/helper/blob/master/%40openzeppelin/contracts/utils/Pausable.sol\":1912:1922  _msgSender */\n      tag_85\n        /* \"https://github.com/OmniDexFinance/helper/blob/master/%40openzeppelin/contracts/utils/Pausable.sol\":1912:1924  _msgSender() */\n      jump\t// in\n        /* \"https://github.com/OmniDexFinance/helper/blob/master/%40openzeppelin/contracts/token/ERC20/SafeERC20.sol\":704:879  function safeTransfer(IERC20 token, address to, uint256 value) internal {... */\n    tag_113:\n        /* \"https://github.com/OmniDexFinance/helper/blob/master/%40openzeppelin/contracts/token/ERC20/SafeERC20.sol\":813:871  abi.encodeWithSelector(token.transfer.selector, to, value) */\n      0x40\n      dup1\n      mload\n      sub(shl(0xa0, 0x01), 0x01)\n      dup5\n      and\n      0x24\n      dup3\n      add\n      mstore\n      0x44\n      dup1\n      dup3\n      add\n      dup5\n      swap1\n      mstore\n      dup3\n      mload\n      dup1\n      dup4\n      sub\n      swap1\n      swap2\n      add\n      dup2\n      mstore\n      0x64\n      swap1\n      swap2\n      add\n      swap1\n      swap2\n      mstore\n      0x20\n      dup2\n      add\n      dup1\n      mload\n      sub(shl(0xe0, 0x01), 0x01)\n      and\n      shl(0xe0, 0xa9059cbb)\n      or\n      swap1\n      mstore\n        /* \"https://github.com/OmniDexFinance/helper/blob/master/%40openzeppelin/contracts/token/ERC20/SafeERC20.sol\":786:872  _callOptionalReturn(token, abi.encodeWithSelector(token.transfer.selector, to, value)) */\n      tag_172\n      swap1\n        /* \"https://github.com/OmniDexFinance/helper/blob/master/%40openzeppelin/contracts/token/ERC20/SafeERC20.sol\":806:811  token */\n      dup5\n      swap1\n        /* \"https://github.com/OmniDexFinance/helper/blob/master/%40openzeppelin/contracts/token/ERC20/SafeERC20.sol\":786:805  _callOptionalReturn */\n      tag_173\n        /* \"https://github.com/OmniDexFinance/helper/blob/master/%40openzeppelin/contracts/token/ERC20/SafeERC20.sol\":786:872  _callOptionalReturn(token, abi.encodeWithSelector(token.transfer.selector, to, value)) */\n      jump\t// in\n        /* \"https://github.com/OmniDexFinance/helper/blob/master/%40openzeppelin/contracts/token/ERC20/SafeERC20.sol\":885:1088  function safeTransferFrom(IERC20 token, address from, address to, uint256 value) internal {... */\n    tag_133:\n        /* \"https://github.com/OmniDexFinance/helper/blob/master/%40openzeppelin/contracts/token/ERC20/SafeERC20.sol\":1012:1080  abi.encodeWithSelector(token.transferFrom.selector, from, to, value) */\n      0x40\n      dup1\n      mload\n      sub(shl(0xa0, 0x01), 0x01)\n      dup1\n      dup7\n      and\n      0x24\n      dup4\n      add\n      mstore\n      dup5\n      and\n      0x44\n      dup3\n      add\n      mstore\n      0x64\n      dup1\n      dup3\n      add\n      dup5\n      swap1\n      mstore\n      dup3\n      mload\n      dup1\n      dup4\n      sub\n      swap1\n      swap2\n      add\n      dup2\n      mstore\n      0x84\n      swap1\n      swap2\n      add\n      swap1\n      swap2\n      mstore\n      0x20\n      dup2\n      add\n      dup1\n      mload\n      sub(shl(0xe0, 0x01), 0x01)\n      and\n      shl(0xe0, 0x23b872dd)\n      or\n      swap1\n      mstore\n        /* \"https://github.com/OmniDexFinance/helper/blob/master/%40openzeppelin/contracts/token/ERC20/SafeERC20.sol\":985:1081  _callOptionalReturn(token, abi.encodeWithSelector(token.transferFrom.selector, from, to, value)) */\n      tag_191\n      swap1\n        /* \"https://github.com/OmniDexFinance/helper/blob/master/%40openzeppelin/contracts/token/ERC20/SafeERC20.sol\":1005:1010  token */\n      dup6\n      swap1\n        /* \"https://github.com/OmniDexFinance/helper/blob/master/%40openzeppelin/contracts/token/ERC20/SafeERC20.sol\":985:1004  _callOptionalReturn */\n      tag_173\n        /* \"https://github.com/OmniDexFinance/helper/blob/master/%40openzeppelin/contracts/token/ERC20/SafeERC20.sol\":985:1081  _callOptionalReturn(token, abi.encodeWithSelector(token.transferFrom.selector, from, to, value)) */\n      jump\t// in\n    tag_191:\n        /* \"https://github.com/OmniDexFinance/helper/blob/master/%40openzeppelin/contracts/token/ERC20/SafeERC20.sol\":885:1088  function safeTransferFrom(IERC20 token, address from, address to, uint256 value) internal {... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/Omnidex-incentives/incentives/OmnidexIncentivesVault.sol\":5032:5376  function isUnderLimit(uint amount)... */\n    tag_162:\n        /* \"contracts/Omnidex-incentives/incentives/OmnidexIncentivesVault.sol\":5101:5105  bool */\n      0x00\n        /* \"contracts/Omnidex-incentives/incentives/OmnidexIncentivesVault.sol\":5143:5150  lastDay */\n      sload(0x04)\n        /* \"contracts/Omnidex-incentives/incentives/OmnidexIncentivesVault.sol\":5153:5161  24 hours */\n      0x015180\n        /* \"contracts/Omnidex-incentives/incentives/OmnidexIncentivesVault.sol\":5143:5161  lastDay + 24 hours */\n      add\n        /* \"contracts/Omnidex-incentives/incentives/OmnidexIncentivesVault.sol\":5125:5140  block.timestamp */\n      timestamp\n        /* \"contracts/Omnidex-incentives/incentives/OmnidexIncentivesVault.sol\":5125:5161  block.timestamp > lastDay + 24 hours */\n      gt\n        /* \"contracts/Omnidex-incentives/incentives/OmnidexIncentivesVault.sol\":5121:5241  if (block.timestamp > lastDay + 24 hours) {... */\n      iszero\n      tag_193\n      jumpi\n        /* \"contracts/Omnidex-incentives/incentives/OmnidexIncentivesVault.sol\":5187:5202  block.timestamp */\n      timestamp\n        /* \"contracts/Omnidex-incentives/incentives/OmnidexIncentivesVault.sol\":5177:5184  lastDay */\n      0x04\n        /* \"contracts/Omnidex-incentives/incentives/OmnidexIncentivesVault.sol\":5177:5202  lastDay = block.timestamp */\n      sstore\n        /* \"contracts/Omnidex-incentives/incentives/OmnidexIncentivesVault.sol\":5229:5230  0 */\n      0x00\n        /* \"contracts/Omnidex-incentives/incentives/OmnidexIncentivesVault.sol\":5216:5226  spentToday */\n      0x05\n        /* \"contracts/Omnidex-incentives/incentives/OmnidexIncentivesVault.sol\":5216:5230  spentToday = 0 */\n      sstore\n        /* \"contracts/Omnidex-incentives/incentives/OmnidexIncentivesVault.sol\":5121:5241  if (block.timestamp > lastDay + 24 hours) {... */\n    tag_193:\n        /* \"contracts/Omnidex-incentives/incentives/OmnidexIncentivesVault.sol\":5276:5286  dailyLimit */\n      sload(0x03)\n        /* \"contracts/Omnidex-incentives/incentives/OmnidexIncentivesVault.sol\":5267:5273  amount */\n      dup3\n        /* \"contracts/Omnidex-incentives/incentives/OmnidexIncentivesVault.sol\":5254:5264  spentToday */\n      sload(0x05)\n        /* \"contracts/Omnidex-incentives/incentives/OmnidexIncentivesVault.sol\":5254:5273  spentToday + amount */\n      add\n        /* \"contracts/Omnidex-incentives/incentives/OmnidexIncentivesVault.sol\":5254:5286  spentToday + amount > dailyLimit */\n      gt\n        /* \"contracts/Omnidex-incentives/incentives/OmnidexIncentivesVault.sol\":5254:5322  spentToday + amount > dailyLimit || spentToday + amount < spentToday */\n      dup1\n      tag_194\n      jumpi\n      pop\n        /* \"contracts/Omnidex-incentives/incentives/OmnidexIncentivesVault.sol\":5312:5322  spentToday */\n      sload(0x05)\n        /* \"contracts/Omnidex-incentives/incentives/OmnidexIncentivesVault.sol\":5290:5309  spentToday + amount */\n      dup3\n      dup2\n      add\n        /* \"contracts/Omnidex-incentives/incentives/OmnidexIncentivesVault.sol\":5290:5322  spentToday + amount < spentToday */\n      lt\n        /* \"contracts/Omnidex-incentives/incentives/OmnidexIncentivesVault.sol\":5254:5322  spentToday + amount > dailyLimit || spentToday + amount < spentToday */\n    tag_194:\n        /* \"contracts/Omnidex-incentives/incentives/OmnidexIncentivesVault.sol\":5250:5348  if (spentToday + amount > dailyLimit || spentToday + amount < spentToday)... */\n      iszero\n      tag_195\n      jumpi\n      pop\n        /* \"contracts/Omnidex-incentives/incentives/OmnidexIncentivesVault.sol\":5343:5348  false */\n      0x00\n        /* \"contracts/Omnidex-incentives/incentives/OmnidexIncentivesVault.sol\":5336:5348  return false */\n      jump(tag_192)\n        /* \"contracts/Omnidex-incentives/incentives/OmnidexIncentivesVault.sol\":5250:5348  if (spentToday + amount > dailyLimit || spentToday + amount < spentToday)... */\n    tag_195:\n      pop\n        /* \"contracts/Omnidex-incentives/incentives/OmnidexIncentivesVault.sol\":5365:5369  true */\n      0x01\n        /* \"contracts/Omnidex-incentives/incentives/OmnidexIncentivesVault.sol\":5032:5376  function isUnderLimit(uint amount)... */\n    tag_192:\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"https://github.com/OmniDexFinance/helper/blob/master/%40openzeppelin/contracts/token/ERC20/SafeERC20.sol\":2967:3718  function _callOptionalReturn(IERC20 token, bytes memory data) private {... */\n    tag_173:\n        /* \"https://github.com/OmniDexFinance/helper/blob/master/%40openzeppelin/contracts/token/ERC20/SafeERC20.sol\":3386:3409  bytes memory returndata */\n      0x60\n        /* \"https://github.com/OmniDexFinance/helper/blob/master/%40openzeppelin/contracts/token/ERC20/SafeERC20.sol\":3412:3481  address(token).functionCall(data, \"SafeERC20: low-level call failed\") */\n      tag_197\n        /* \"https://github.com/OmniDexFinance/helper/blob/master/%40openzeppelin/contracts/token/ERC20/SafeERC20.sol\":3440:3444  data */\n      dup3\n        /* \"https://github.com/OmniDexFinance/helper/blob/master/%40openzeppelin/contracts/token/ERC20/SafeERC20.sol\":3412:3481  address(token).functionCall(data, \"SafeERC20: low-level call failed\") */\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x20\n      dup2\n      mstore\n      0x20\n      add\n      0x5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564\n      dup2\n      mstore\n      pop\n        /* \"https://github.com/OmniDexFinance/helper/blob/master/%40openzeppelin/contracts/token/ERC20/SafeERC20.sol\":3420:3425  token */\n      dup6\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"https://github.com/OmniDexFinance/helper/blob/master/%40openzeppelin/contracts/token/ERC20/SafeERC20.sol\":3412:3439  address(token).functionCall */\n      and\n      tag_73\n      swap1\n        /* \"https://github.com/OmniDexFinance/helper/blob/master/%40openzeppelin/contracts/token/ERC20/SafeERC20.sol\":3412:3481  address(token).functionCall(data, \"SafeERC20: low-level call failed\") */\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_197:\n        /* \"https://github.com/OmniDexFinance/helper/blob/master/%40openzeppelin/contracts/token/ERC20/SafeERC20.sol\":3495:3512  returndata.length */\n      dup1\n      mload\n        /* \"https://github.com/OmniDexFinance/helper/blob/master/%40openzeppelin/contracts/token/ERC20/SafeERC20.sol\":3386:3481  bytes memory returndata = address(token).functionCall(data, \"SafeERC20: low-level call failed\") */\n      swap1\n      swap2\n      pop\n        /* \"https://github.com/OmniDexFinance/helper/blob/master/%40openzeppelin/contracts/token/ERC20/SafeERC20.sol\":3495:3516  returndata.length > 0 */\n      iszero\n        /* \"https://github.com/OmniDexFinance/helper/blob/master/%40openzeppelin/contracts/token/ERC20/SafeERC20.sol\":3491:3712  if (returndata.length > 0) { // Return data is optional... */\n      tag_172\n      jumpi\n        /* \"https://github.com/OmniDexFinance/helper/blob/master/%40openzeppelin/contracts/token/ERC20/SafeERC20.sol\":3635:3645  returndata */\n      dup1\n        /* \"https://github.com/OmniDexFinance/helper/blob/master/%40openzeppelin/contracts/token/ERC20/SafeERC20.sol\":3624:3654  abi.decode(returndata, (bool)) */\n      dup1\n      0x20\n      add\n      swap1\n      mload\n      0x20\n      dup2\n      lt\n      iszero\n      tag_199\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_199:\n      pop\n      mload\n        /* \"https://github.com/OmniDexFinance/helper/blob/master/%40openzeppelin/contracts/token/ERC20/SafeERC20.sol\":3616:3701  require(abi.decode(returndata, (bool)), \"SafeERC20: ERC20 operation did not succeed\") */\n      tag_172\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x2a\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd\n      0x2a\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"https://github.com/OmniDexFinance/helper/blob/master/%40openzeppelin/contracts/utils/Address.sol\":4608:5131  function functionCallWithValue(address target, bytes memory data, uint256 value, string memory errorMessage) internal returns (bytes memory) {... */\n    tag_176:\n        /* \"https://github.com/OmniDexFinance/helper/blob/master/%40openzeppelin/contracts/utils/Address.sol\":4735:4747  bytes memory */\n      0x60\n        /* \"https://github.com/OmniDexFinance/helper/blob/master/%40openzeppelin/contracts/utils/Address.sol\":4792:4797  value */\n      dup3\n        /* \"https://github.com/OmniDexFinance/helper/blob/master/%40openzeppelin/contracts/utils/Address.sol\":4767:4788  address(this).balance */\n      selfbalance\n        /* \"https://github.com/OmniDexFinance/helper/blob/master/%40openzeppelin/contracts/utils/Address.sol\":4767:4797  address(this).balance >= value */\n      lt\n      iszero\n        /* \"https://github.com/OmniDexFinance/helper/blob/master/%40openzeppelin/contracts/utils/Address.sol\":4759:4840  require(address(this).balance >= value, \"Address: insufficient balance for call\") */\n      tag_202\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x26\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c\n      0x26\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_202:\n        /* \"https://github.com/OmniDexFinance/helper/blob/master/%40openzeppelin/contracts/utils/Address.sol\":4858:4876  isContract(target) */\n      tag_203\n        /* \"https://github.com/OmniDexFinance/helper/blob/master/%40openzeppelin/contracts/utils/Address.sol\":4869:4875  target */\n      dup6\n        /* \"https://github.com/OmniDexFinance/helper/blob/master/%40openzeppelin/contracts/utils/Address.sol\":4858:4868  isContract */\n      tag_204\n        /* \"https://github.com/OmniDexFinance/helper/blob/master/%40openzeppelin/contracts/utils/Address.sol\":4858:4876  isContract(target) */\n      jump\t// in\n    tag_203:\n        /* \"https://github.com/OmniDexFinance/helper/blob/master/%40openzeppelin/contracts/utils/Address.sol\":4850:4910  require(isContract(target), \"Address: call to non-contract\") */\n      tag_205\n      jumpi\n      0x40\n      dup1\n      mload\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x1d\n      0x24\n      dup3\n      add\n      mstore\n      0x416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000\n      0x44\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x64\n      add\n      swap1\n      revert\n    tag_205:\n        /* \"https://github.com/OmniDexFinance/helper/blob/master/%40openzeppelin/contracts/utils/Address.sol\":4981:4993  bool success */\n      0x00\n        /* \"https://github.com/OmniDexFinance/helper/blob/master/%40openzeppelin/contracts/utils/Address.sol\":4995:5018  bytes memory returndata */\n      0x60\n        /* \"https://github.com/OmniDexFinance/helper/blob/master/%40openzeppelin/contracts/utils/Address.sol\":5022:5028  target */\n      dup7\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"https://github.com/OmniDexFinance/helper/blob/master/%40openzeppelin/contracts/utils/Address.sol\":5022:5033  target.call */\n      and\n        /* \"https://github.com/OmniDexFinance/helper/blob/master/%40openzeppelin/contracts/utils/Address.sol\":5042:5047  value */\n      dup6\n        /* \"https://github.com/OmniDexFinance/helper/blob/master/%40openzeppelin/contracts/utils/Address.sol\":5050:5054  data */\n      dup8\n        /* \"https://github.com/OmniDexFinance/helper/blob/master/%40openzeppelin/contracts/utils/Address.sol\":5022:5055  target.call{ value: value }(data) */\n      mload(0x40)\n      dup1\n      dup3\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      dup1\n      dup4\n      dup4\n    tag_206:\n      0x20\n      dup4\n      lt\n      tag_208\n      jumpi\n      dup1\n      mload\n      dup3\n      mstore\n      not(0x1f)\n      swap1\n      swap3\n      add\n      swap2\n      0x20\n      swap2\n      dup3\n      add\n      swap2\n      add\n      jump(tag_206)\n    tag_208:\n      0x01\n      dup4\n      0x20\n      sub\n      0x0100\n      exp\n      sub\n      dup1\n      not\n      dup3\n      mload\n      and\n      dup2\n      dup5\n      mload\n      and\n      dup1\n      dup3\n      or\n      dup6\n      mstore\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n      add\n      swap2\n      pop\n      pop\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup8\n      gas\n      call\n      swap3\n      pop\n      pop\n      pop\n      returndatasize\n      dup1\n      0x00\n      dup2\n      eq\n      tag_211\n      jumpi\n      mload(0x40)\n      swap2\n      pop\n      and(add(returndatasize, 0x3f), not(0x1f))\n      dup3\n      add\n      0x40\n      mstore\n      returndatasize\n      dup3\n      mstore\n      returndatasize\n      0x00\n      0x20\n      dup5\n      add\n      returndatacopy\n      jump(tag_210)\n    tag_211:\n      0x60\n      swap2\n      pop\n    tag_210:\n      pop\n        /* \"https://github.com/OmniDexFinance/helper/blob/master/%40openzeppelin/contracts/utils/Address.sol\":4980:5055  (bool success, bytes memory returndata) = target.call{ value: value }(data) */\n      swap2\n      pop\n      swap2\n      pop\n        /* \"https://github.com/OmniDexFinance/helper/blob/master/%40openzeppelin/contracts/utils/Address.sol\":5072:5124  _verifyCallResult(success, returndata, errorMessage) */\n      tag_212\n        /* \"https://github.com/OmniDexFinance/helper/blob/master/%40openzeppelin/contracts/utils/Address.sol\":5090:5097  success */\n      dup3\n        /* \"https://github.com/OmniDexFinance/helper/blob/master/%40openzeppelin/contracts/utils/Address.sol\":5099:5109  returndata */\n      dup3\n        /* \"https://github.com/OmniDexFinance/helper/blob/master/%40openzeppelin/contracts/utils/Address.sol\":5111:5123  errorMessage */\n      dup7\n        /* \"https://github.com/OmniDexFinance/helper/blob/master/%40openzeppelin/contracts/utils/Address.sol\":5072:5089  _verifyCallResult */\n      tag_213\n        /* \"https://github.com/OmniDexFinance/helper/blob/master/%40openzeppelin/contracts/utils/Address.sol\":5072:5124  _verifyCallResult(success, returndata, errorMessage) */\n      jump\t// in\n    tag_212:\n        /* \"https://github.com/OmniDexFinance/helper/blob/master/%40openzeppelin/contracts/utils/Address.sol\":5065:5124  return _verifyCallResult(success, returndata, errorMessage) */\n      swap8\n        /* \"https://github.com/OmniDexFinance/helper/blob/master/%40openzeppelin/contracts/utils/Address.sol\":4608:5131  function functionCallWithValue(address target, bytes memory data, uint256 value, string memory errorMessage) internal returns (bytes memory) {... */\n      swap7\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"https://github.com/OmniDexFinance/helper/blob/master/%40openzeppelin/contracts/utils/Address.sol\":726:1139  function isContract(address account) internal view returns (bool) {... */\n    tag_204:\n        /* \"https://github.com/OmniDexFinance/helper/blob/master/%40openzeppelin/contracts/utils/Address.sol\":1086:1106  extcodesize(account) */\n      extcodesize\n        /* \"https://github.com/OmniDexFinance/helper/blob/master/%40openzeppelin/contracts/utils/Address.sol\":1124:1132  size > 0 */\n      iszero\n      iszero\n      swap1\n        /* \"https://github.com/OmniDexFinance/helper/blob/master/%40openzeppelin/contracts/utils/Address.sol\":726:1139  function isContract(address account) internal view returns (bool) {... */\n      jump\t// out\n        /* \"https://github.com/OmniDexFinance/helper/blob/master/%40openzeppelin/contracts/utils/Address.sol\":7091:7816  function _verifyCallResult(bool success, bytes memory returndata, string memory errorMessage) private pure returns(bytes memory) {... */\n    tag_213:\n        /* \"https://github.com/OmniDexFinance/helper/blob/master/%40openzeppelin/contracts/utils/Address.sol\":7206:7218  bytes memory */\n      0x60\n        /* \"https://github.com/OmniDexFinance/helper/blob/master/%40openzeppelin/contracts/utils/Address.sol\":7234:7241  success */\n      dup4\n        /* \"https://github.com/OmniDexFinance/helper/blob/master/%40openzeppelin/contracts/utils/Address.sol\":7230:7810  if (success) {... */\n      iszero\n      tag_216\n      jumpi\n      pop\n        /* \"https://github.com/OmniDexFinance/helper/blob/master/%40openzeppelin/contracts/utils/Address.sol\":7264:7274  returndata */\n      dup2\n        /* \"https://github.com/OmniDexFinance/helper/blob/master/%40openzeppelin/contracts/utils/Address.sol\":7257:7274  return returndata */\n      jump(tag_174)\n        /* \"https://github.com/OmniDexFinance/helper/blob/master/%40openzeppelin/contracts/utils/Address.sol\":7230:7810  if (success) {... */\n    tag_216:\n        /* \"https://github.com/OmniDexFinance/helper/blob/master/%40openzeppelin/contracts/utils/Address.sol\":7375:7392  returndata.length */\n      dup3\n      mload\n        /* \"https://github.com/OmniDexFinance/helper/blob/master/%40openzeppelin/contracts/utils/Address.sol\":7375:7396  returndata.length > 0 */\n      iszero\n        /* \"https://github.com/OmniDexFinance/helper/blob/master/%40openzeppelin/contracts/utils/Address.sol\":7371:7800  if (returndata.length > 0) {... */\n      tag_218\n      jumpi\n        /* \"https://github.com/OmniDexFinance/helper/blob/master/%40openzeppelin/contracts/utils/Address.sol\":7633:7643  returndata */\n      dup3\n        /* \"https://github.com/OmniDexFinance/helper/blob/master/%40openzeppelin/contracts/utils/Address.sol\":7627:7644  mload(returndata) */\n      mload\n        /* \"https://github.com/OmniDexFinance/helper/blob/master/%40openzeppelin/contracts/utils/Address.sol\":7693:7708  returndata_size */\n      dup1\n        /* \"https://github.com/OmniDexFinance/helper/blob/master/%40openzeppelin/contracts/utils/Address.sol\":7680:7690  returndata */\n      dup5\n        /* \"https://github.com/OmniDexFinance/helper/blob/master/%40openzeppelin/contracts/utils/Address.sol\":7676:7678  32 */\n      0x20\n        /* \"https://github.com/OmniDexFinance/helper/blob/master/%40openzeppelin/contracts/utils/Address.sol\":7672:7691  add(32, returndata) */\n      add\n        /* \"https://github.com/OmniDexFinance/helper/blob/master/%40openzeppelin/contracts/utils/Address.sol\":7665:7709  revert(add(32, returndata), returndata_size) */\n      revert\n        /* \"https://github.com/OmniDexFinance/helper/blob/master/%40openzeppelin/contracts/utils/Address.sol\":7582:7727  {... */\n    tag_218:\n        /* \"https://github.com/OmniDexFinance/helper/blob/master/%40openzeppelin/contracts/utils/Address.sol\":7772:7784  errorMessage */\n      dup2\n        /* \"https://github.com/OmniDexFinance/helper/blob/master/%40openzeppelin/contracts/utils/Address.sol\":7765:7785  revert(errorMessage) */\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      dup4\n      dup2\n      dup2\n      mload\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      dup1\n      dup4\n      dup4\n      0x00\n    tag_220:\n      dup4\n      dup2\n      lt\n      iszero\n      tag_222\n      jumpi\n      dup2\n      dup2\n      add\n      mload\n      dup4\n      dup3\n      add\n      mstore\n      0x20\n      add\n      jump(tag_220)\n    tag_222:\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n      swap1\n      dup2\n      add\n      swap1\n      0x1f\n      and\n      dup1\n      iszero\n      tag_223\n      jumpi\n      dup1\n      dup3\n      sub\n      dup1\n      mload\n      0x01\n      dup4\n      0x20\n      sub\n      0x0100\n      exp\n      sub\n      not\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n    tag_223:\n      pop\n      swap3\n      pop\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    stop\n    data_2186895f526e488d7755616513a09664eedf819bfafe4f6fa94396f5afb14e38 496e73756666696369656e7420696e63656e746976657320617661696c61626c65\n    data_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe 4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373\n    data_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c 416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c6c\n    data_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe 4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572\n    data_bcc168664a3c14c72586057eda5ba29201ba9e86de7cd2fcc768efe9bd2f6ac9 546f6b656e2063616e6e6f742062652073616d6520617320696e63656e746976657320746f6b656e\n    data_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd 5361666545524332303a204552433230206f7065726174696f6e20646964206e6f742073756363656564\n    data_ef945ddb1bfdc0da870feb4560d868b047642b4ac7f2fb7f8b7c51cb4a411e25 5361666545524332303a20617070726f76652066726f6d206e6f6e2d7a65726f20746f206e6f6e2d7a65726f20616c6c6f77616e6365\n\n    auxdata: 0xa264697066735822122056c5867140c5288753d62a996ed854a35cabf862b7fd34af4218297efc9336a764736f6c63430007050033\n}\n",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "60a06040523480156200001157600080fd5b5060405162001bb838038062001bb8833981810160405260808110156200003757600080fd5b508051602082015160408301516060909301519192909160006200005a6200011e565b600080546001600160a01b0319166001600160a01b0383169081178255604051929350917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908290a3506000805460ff60a01b19169055606084901b6001600160601b031916608052600280546001600160a01b03199081166001600160a01b0386811691909117909255600180549091168483161790556003829055620001149085168460001962000122602090811b62000e5f17901c565b5050505062000535565b3390565b801580620001ac575060408051636eb1769f60e11b81523060048201526001600160a01b03848116602483015291519185169163dd62ed3e91604480820192602092909190829003018186803b1580156200017c57600080fd5b505afa15801562000191573d6000803e3d6000fd5b505050506040513d6020811015620001a857600080fd5b5051155b620001e95760405162461bcd60e51b815260040180806020018281038252603681526020018062001b826036913960400191505060405180910390fd5b604080516001600160a01b038416602482015260448082018490528251808303909101815260649091019091526020810180516001600160e01b0390811663095ea7b360e01b17909152620002419185916200024616565b505050565b6060620002a2826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b03166200030260201b62000f77179092919060201c565b8051909150156200024157808060200190516020811015620002c357600080fd5b5051620002415760405162461bcd60e51b815260040180806020018281038252602a81526020018062001b58602a913960400191505060405180910390fd5b60606200031384846000856200031d565b90505b9392505050565b606082471015620003605760405162461bcd60e51b815260040180806020018281038252602681526020018062001b326026913960400191505060405180910390fd5b6200036b8562000485565b620003bd576040805162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000604482015290519081900360640190fd5b60006060866001600160a01b031685876040518082805190602001908083835b60208310620003fe5780518252601f199092019160209182019101620003dd565b6001836020036101000a03801982511681845116808217855250505050505090500191505060006040518083038185875af1925050503d806000811462000462576040519150601f19603f3d011682016040523d82523d6000602084013e62000467565b606091505b5090925090506200047a8282866200048b565b979650505050505050565b3b151590565b606083156200049c57508162000316565b825115620004ad5782518084602001fd5b8160405162461bcd60e51b81526004018080602001828103825283818151815260200191508051906020019080838360005b83811015620004f9578181015183820152602001620004df565b50505050905090810190601f168015620005275780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b60805160601c6115bc620005766000398061067452806107155280610760528061090d52806109c65280610ccc5280610dc25280610e3d52506115bc6000f3fe608060405234801561001057600080fd5b506004361061012c5760003560e01c80639f9ff3e8116100ad578063f059cf2b11610071578063f059cf2b14610253578063f2fde38b1461025b578063f3fef3a314610281578063f851a440146102ad578063fc0c546a146102b55761012c565b80639f9ff3e8146101e3578063a6895b5a146101eb578063b20d30a9146101f3578063b6b55f2514610210578063def68a9c1461022d5761012c565b8063715018a6116100f4578063715018a61461019f5780638456cb59146101a7578063853828b6146101af5780638da5cb5b146101b75780638ef57f5e146101db5761012c565b80633f4ba83a146101315780635c975abb1461013b57806367eeba0c146101575780636b0c932d14610171578063704b6c0214610179575b600080fd5b6101396102bd565b005b610143610396565b604080519115158252519081900360200190f35b61015f6103a6565b60408051918252519081900360200190f35b61015f6103ac565b6101396004803603602081101561018f57600080fd5b50356001600160a01b03166103b2565b61013961048a565b610139610536565b61013961060c565b6101bf61073e565b604080516001600160a01b039092168252519081900360200190f35b6101bf61074d565b61015f61075c565b61015f6107fc565b6101396004803603602081101561020957600080fd5b5035610802565b6101396004803603602081101561022657600080fd5b5035610869565b6101396004803603602081101561024357600080fd5b50356001600160a01b031661096e565b61015f610aca565b6101396004803603602081101561027157600080fd5b50356001600160a01b0316610ad0565b6101396004803603604081101561029757600080fd5b506001600160a01b038135169060200135610bd2565b6101bf610e2c565b6101bf610e3b565b6001546001600160a01b03163314610313576040805162461bcd60e51b815260206004820152601460248201527313db9b1e4818591b5a5b881c195c9b5a5d1d195960621b604482015290519081900360640190fd5b61031b610396565b610363576040805162461bcd60e51b815260206004820152601460248201527314185d5cd8589b194e881b9bdd081c185d5cd95960621b604482015290519081900360640190fd5b61036b610f90565b6040517f7805862f689e2f13df9f062ff482ad3ad112aca9e0847911ed832e158c525b3390600090a1565b600054600160a01b900460ff1690565b60035481565b60045481565b6103ba611033565b6001600160a01b03166103cb61073e565b6001600160a01b031614610414576040805162461bcd60e51b815260206004820181905260248201526000805160206114df833981519152604482015290519081900360640190fd5b6001600160a01b038116610468576040805162461bcd60e51b815260206004820152601660248201527543616e6e6f74206265207a65726f206164647265737360501b604482015290519081900360640190fd5b600180546001600160a01b0319166001600160a01b0392909216919091179055565b610492611033565b6001600160a01b03166104a361073e565b6001600160a01b0316146104ec576040805162461bcd60e51b815260206004820181905260248201526000805160206114df833981519152604482015290519081900360640190fd5b600080546040516001600160a01b03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600080546001600160a01b0319169055565b6001546001600160a01b0316331461058c576040805162461bcd60e51b815260206004820152601460248201527313db9b1e4818591b5a5b881c195c9b5a5d1d195960621b604482015290519081900360640190fd5b610594610396565b156105d9576040805162461bcd60e51b815260206004820152601060248201526f14185d5cd8589b194e881c185d5cd95960821b604482015290519081900360640190fd5b6105e1611037565b6040517f6985a02210a168e66602d3235cb6db0e70f92b3ba4d376a33c0f3d9434bff62590600090a1565b610614611033565b6001600160a01b031661062561073e565b6001600160a01b03161461066e576040805162461bcd60e51b815260206004820181905260248201526000805160206114df833981519152604482015290519081900360640190fd5b61073c337f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166370a08231306040518263ffffffff1660e01b815260040180826001600160a01b0316815260200191505060206040518083038186803b1580156106df57600080fd5b505afa1580156106f3573d6000803e3d6000fd5b505050506040513d602081101561070957600080fd5b50516001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001691906110c0565b565b6000546001600160a01b031690565b6002546001600160a01b031681565b60007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166370a08231306040518263ffffffff1660e01b815260040180826001600160a01b0316815260200191505060206040518083038186803b1580156107cb57600080fd5b505afa1580156107df573d6000803e3d6000fd5b505050506040513d60208110156107f557600080fd5b5051905090565b60035490565b61080a611033565b6001600160a01b031661081b61073e565b6001600160a01b031614610864576040805162461bcd60e51b815260206004820181905260248201526000805160206114df833981519152604482015290519081900360640190fd5b600355565b610871610396565b156108b6576040805162461bcd60e51b815260206004820152601060248201526f14185d5cd8589b194e881c185d5cd95960821b604482015290519081900360640190fd5b60008111610900576040805162461bcd60e51b8152602060048201526012602482015271139bdd1a1a5b99c81d1bc819195c1bdcda5d60721b604482015290519081900360640190fd5b6109356001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016333084611112565b60408051828152905133917fe1fffcc4923d04b559f4d29a8bfc6cda04eb5b0d3c460751c2402c5c5cc9109c919081900360200190a250565b6001546001600160a01b031633146109c4576040805162461bcd60e51b815260206004820152601460248201527313db9b1e4818591b5a5b881c195c9b5a5d1d195960621b604482015290519081900360640190fd5b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316816001600160a01b03161415610a355760405162461bcd60e51b81526004018080602001828103825260288152602001806114ff6028913960400191505060405180910390fd5b6000816001600160a01b03166370a08231306040518263ffffffff1660e01b815260040180826001600160a01b0316815260200191505060206040518083038186803b158015610a8457600080fd5b505afa158015610a98573d6000803e3d6000fd5b505050506040513d6020811015610aae57600080fd5b50519050610ac66001600160a01b03831633836110c0565b5050565b60055481565b610ad8611033565b6001600160a01b0316610ae961073e565b6001600160a01b031614610b32576040805162461bcd60e51b815260206004820181905260248201526000805160206114df833981519152604482015290519081900360640190fd5b6001600160a01b038116610b775760405162461bcd60e51b81526004018080602001828103825260268152602001806114936026913960400191505060405180910390fd5b600080546040516001600160a01b03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600080546001600160a01b0319166001600160a01b0392909216919091179055565b610bda610396565b15610c1f576040805162461bcd60e51b815260206004820152601060248201526f14185d5cd8589b194e881c185d5cd95960821b604482015290519081900360640190fd5b6002546001600160a01b03163314610c7e576040805162461bcd60e51b815260206004820152601960248201527f4e6f7420616e20617574686f7269736564207370656e64657200000000000000604482015290519081900360640190fd5b60008111610cc9576040805162461bcd60e51b81526020600482015260136024820152724e6f7468696e6720746f20776974686472617760681b604482015290519081900360640190fd5b807f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166370a08231306040518263ffffffff1660e01b815260040180826001600160a01b0316815260200191505060206040518083038186803b158015610d3757600080fd5b505afa158015610d4b573d6000803e3d6000fd5b505050506040513d6020811015610d6157600080fd5b505111610d9f5760405162461bcd60e51b81526004018080602001828103825260218152602001806114726021913960400191505060405180910390fd5b610da881611172565b15610de9576005805482019055610de96001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001683836110c0565b6040805182815290516001600160a01b038416917f884edad9ce6fa2440d8a54cc123490eb96d2768479d49ff9c7366125a9424364919081900360200190a25050565b6001546001600160a01b031681565b7f000000000000000000000000000000000000000000000000000000000000000081565b801580610ee5575060408051636eb1769f60e11b81523060048201526001600160a01b03848116602483015291519185169163dd62ed3e91604480820192602092909190829003018186803b158015610eb757600080fd5b505afa158015610ecb573d6000803e3d6000fd5b505050506040513d6020811015610ee157600080fd5b5051155b610f205760405162461bcd60e51b81526004018080602001828103825260368152602001806115516036913960400191505060405180910390fd5b604080516001600160a01b038416602482015260448082018490528251808303909101815260649091019091526020810180516001600160e01b031663095ea7b360e01b179052610f729084906111ba565b505050565b6060610f86848460008561126b565b90505b9392505050565b610f98610396565b610fe0576040805162461bcd60e51b815260206004820152601460248201527314185d5cd8589b194e881b9bdd081c185d5cd95960621b604482015290519081900360640190fd5b6000805460ff60a01b191690557f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa611016611033565b604080516001600160a01b039092168252519081900360200190a1565b3390565b61103f610396565b15611084576040805162461bcd60e51b815260206004820152601060248201526f14185d5cd8589b194e881c185d5cd95960821b604482015290519081900360640190fd5b6000805460ff60a01b1916600160a01b1790557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258611016611033565b604080516001600160a01b038416602482015260448082018490528251808303909101815260649091019091526020810180516001600160e01b031663a9059cbb60e01b179052610f729084906111ba565b604080516001600160a01b0380861660248301528416604482015260648082018490528251808303909101815260849091019091526020810180516001600160e01b03166323b872dd60e01b17905261116c9085906111ba565b50505050565b6000600454620151800142111561118d574260045560006005555b600354826005540111806111a45750600554828101105b156111b1575060006111b5565b5060015b919050565b606061120f826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b0316610f779092919063ffffffff16565b805190915015610f725780806020019051602081101561122e57600080fd5b5051610f725760405162461bcd60e51b815260040180806020018281038252602a815260200180611527602a913960400191505060405180910390fd5b6060824710156112ac5760405162461bcd60e51b81526004018080602001828103825260268152602001806114b96026913960400191505060405180910390fd5b6112b5856113c7565b611306576040805162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000604482015290519081900360640190fd5b60006060866001600160a01b031685876040518082805190602001908083835b602083106113455780518252601f199092019160209182019101611326565b6001836020036101000a03801982511681845116808217855250505050505090500191505060006040518083038185875af1925050503d80600081146113a7576040519150601f19603f3d011682016040523d82523d6000602084013e6113ac565b606091505b50915091506113bc8282866113cd565b979650505050505050565b3b151590565b606083156113dc575081610f89565b8251156113ec5782518084602001fd5b8160405162461bcd60e51b81526004018080602001828103825283818151815260200191508051906020019080838360005b8381101561143657818101518382015260200161141e565b50505050905090810190601f1680156114635780820380516001836020036101000a031916815260200191505b509250505060405180910390fdfe496e73756666696369656e7420696e63656e746976657320617661696c61626c654f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c6c4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572546f6b656e2063616e6e6f742062652073616d6520617320696e63656e746976657320746f6b656e5361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565645361666545524332303a20617070726f76652066726f6d206e6f6e2d7a65726f20746f206e6f6e2d7a65726f20616c6c6f77616e6365a264697066735822122056c5867140c5288753d62a996ed854a35cabf862b7fd34af4218297efc9336a764736f6c63430007050033416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c6c5361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565645361666545524332303a20617070726f76652066726f6d206e6f6e2d7a65726f20746f206e6f6e2d7a65726f20616c6c6f77616e6365",
							"opcodes": "PUSH1 0xA0 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x1BB8 CODESIZE SUB DUP1 PUSH3 0x1BB8 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE PUSH1 0x80 DUP2 LT ISZERO PUSH3 0x37 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP1 MLOAD PUSH1 0x20 DUP3 ADD MLOAD PUSH1 0x40 DUP4 ADD MLOAD PUSH1 0x60 SWAP1 SWAP4 ADD MLOAD SWAP2 SWAP3 SWAP1 SWAP2 PUSH1 0x0 PUSH3 0x5A PUSH3 0x11E JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 DUP2 OR DUP3 SSTORE PUSH1 0x40 MLOAD SWAP3 SWAP4 POP SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 DUP3 SWAP1 LOG3 POP PUSH1 0x0 DUP1 SLOAD PUSH1 0xFF PUSH1 0xA0 SHL NOT AND SWAP1 SSTORE PUSH1 0x60 DUP5 SWAP1 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB NOT AND PUSH1 0x80 MSTORE PUSH1 0x2 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP1 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 DUP2 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SWAP3 SSTORE PUSH1 0x1 DUP1 SLOAD SWAP1 SWAP2 AND DUP5 DUP4 AND OR SWAP1 SSTORE PUSH1 0x3 DUP3 SWAP1 SSTORE PUSH3 0x114 SWAP1 DUP6 AND DUP5 PUSH1 0x0 NOT PUSH3 0x122 PUSH1 0x20 SWAP1 DUP2 SHL PUSH3 0xE5F OR SWAP1 SHR JUMP JUMPDEST POP POP POP POP PUSH3 0x535 JUMP JUMPDEST CALLER SWAP1 JUMP JUMPDEST DUP1 ISZERO DUP1 PUSH3 0x1AC JUMPI POP PUSH1 0x40 DUP1 MLOAD PUSH4 0x6EB1769F PUSH1 0xE1 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND PUSH1 0x24 DUP4 ADD MSTORE SWAP2 MLOAD SWAP2 DUP6 AND SWAP2 PUSH4 0xDD62ED3E SWAP2 PUSH1 0x44 DUP1 DUP3 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP1 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH3 0x17C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH3 0x191 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH3 0x1A8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD ISZERO JUMPDEST PUSH3 0x1E9 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x36 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH3 0x1B82 PUSH1 0x36 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP1 DUP3 ADD DUP5 SWAP1 MSTORE DUP3 MLOAD DUP1 DUP4 SUB SWAP1 SWAP2 ADD DUP2 MSTORE PUSH1 0x64 SWAP1 SWAP2 ADD SWAP1 SWAP2 MSTORE PUSH1 0x20 DUP2 ADD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB SWAP1 DUP2 AND PUSH4 0x95EA7B3 PUSH1 0xE0 SHL OR SWAP1 SWAP2 MSTORE PUSH3 0x241 SWAP2 DUP6 SWAP2 PUSH3 0x246 AND JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH3 0x2A2 DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x5361666545524332303A206C6F772D6C6576656C2063616C6C206661696C6564 DUP2 MSTORE POP DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH3 0x302 PUSH1 0x20 SHL PUSH3 0xF77 OR SWAP1 SWAP3 SWAP2 SWAP1 PUSH1 0x20 SHR JUMP JUMPDEST DUP1 MLOAD SWAP1 SWAP2 POP ISZERO PUSH3 0x241 JUMPI DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD PUSH1 0x20 DUP2 LT ISZERO PUSH3 0x2C3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH3 0x241 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x2A DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH3 0x1B58 PUSH1 0x2A SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x60 PUSH3 0x313 DUP5 DUP5 PUSH1 0x0 DUP6 PUSH3 0x31D JUMP JUMPDEST SWAP1 POP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP3 SELFBALANCE LT ISZERO PUSH3 0x360 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x26 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH3 0x1B32 PUSH1 0x26 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH3 0x36B DUP6 PUSH3 0x485 JUMP JUMPDEST PUSH3 0x3BD JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 DUP8 PUSH1 0x40 MLOAD DUP1 DUP3 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 JUMPDEST PUSH1 0x20 DUP4 LT PUSH3 0x3FE JUMPI DUP1 MLOAD DUP3 MSTORE PUSH1 0x1F NOT SWAP1 SWAP3 ADD SWAP2 PUSH1 0x20 SWAP2 DUP3 ADD SWAP2 ADD PUSH3 0x3DD JUMP JUMPDEST PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB DUP1 NOT DUP3 MLOAD AND DUP2 DUP5 MLOAD AND DUP1 DUP3 OR DUP6 MSTORE POP POP POP POP POP POP SWAP1 POP ADD SWAP2 POP POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH3 0x462 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH3 0x467 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP1 SWAP3 POP SWAP1 POP PUSH3 0x47A DUP3 DUP3 DUP7 PUSH3 0x48B JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST EXTCODESIZE ISZERO ISZERO SWAP1 JUMP JUMPDEST PUSH1 0x60 DUP4 ISZERO PUSH3 0x49C JUMPI POP DUP2 PUSH3 0x316 JUMP JUMPDEST DUP3 MLOAD ISZERO PUSH3 0x4AD JUMPI DUP3 MLOAD DUP1 DUP5 PUSH1 0x20 ADD REVERT JUMPDEST DUP2 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH3 0x4F9 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH3 0x4DF JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH3 0x527 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x80 MLOAD PUSH1 0x60 SHR PUSH2 0x15BC PUSH3 0x576 PUSH1 0x0 CODECOPY DUP1 PUSH2 0x674 MSTORE DUP1 PUSH2 0x715 MSTORE DUP1 PUSH2 0x760 MSTORE DUP1 PUSH2 0x90D MSTORE DUP1 PUSH2 0x9C6 MSTORE DUP1 PUSH2 0xCCC MSTORE DUP1 PUSH2 0xDC2 MSTORE DUP1 PUSH2 0xE3D MSTORE POP PUSH2 0x15BC PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x12C JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x9F9FF3E8 GT PUSH2 0xAD JUMPI DUP1 PUSH4 0xF059CF2B GT PUSH2 0x71 JUMPI DUP1 PUSH4 0xF059CF2B EQ PUSH2 0x253 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x25B JUMPI DUP1 PUSH4 0xF3FEF3A3 EQ PUSH2 0x281 JUMPI DUP1 PUSH4 0xF851A440 EQ PUSH2 0x2AD JUMPI DUP1 PUSH4 0xFC0C546A EQ PUSH2 0x2B5 JUMPI PUSH2 0x12C JUMP JUMPDEST DUP1 PUSH4 0x9F9FF3E8 EQ PUSH2 0x1E3 JUMPI DUP1 PUSH4 0xA6895B5A EQ PUSH2 0x1EB JUMPI DUP1 PUSH4 0xB20D30A9 EQ PUSH2 0x1F3 JUMPI DUP1 PUSH4 0xB6B55F25 EQ PUSH2 0x210 JUMPI DUP1 PUSH4 0xDEF68A9C EQ PUSH2 0x22D JUMPI PUSH2 0x12C JUMP JUMPDEST DUP1 PUSH4 0x715018A6 GT PUSH2 0xF4 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x19F JUMPI DUP1 PUSH4 0x8456CB59 EQ PUSH2 0x1A7 JUMPI DUP1 PUSH4 0x853828B6 EQ PUSH2 0x1AF JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x1B7 JUMPI DUP1 PUSH4 0x8EF57F5E EQ PUSH2 0x1DB JUMPI PUSH2 0x12C JUMP JUMPDEST DUP1 PUSH4 0x3F4BA83A EQ PUSH2 0x131 JUMPI DUP1 PUSH4 0x5C975ABB EQ PUSH2 0x13B JUMPI DUP1 PUSH4 0x67EEBA0C EQ PUSH2 0x157 JUMPI DUP1 PUSH4 0x6B0C932D EQ PUSH2 0x171 JUMPI DUP1 PUSH4 0x704B6C02 EQ PUSH2 0x179 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x139 PUSH2 0x2BD JUMP JUMPDEST STOP JUMPDEST PUSH2 0x143 PUSH2 0x396 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 ISZERO ISZERO DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x15F PUSH2 0x3A6 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x15F PUSH2 0x3AC JUMP JUMPDEST PUSH2 0x139 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x18F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x3B2 JUMP JUMPDEST PUSH2 0x139 PUSH2 0x48A JUMP JUMPDEST PUSH2 0x139 PUSH2 0x536 JUMP JUMPDEST PUSH2 0x139 PUSH2 0x60C JUMP JUMPDEST PUSH2 0x1BF PUSH2 0x73E JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x1BF PUSH2 0x74D JUMP JUMPDEST PUSH2 0x15F PUSH2 0x75C JUMP JUMPDEST PUSH2 0x15F PUSH2 0x7FC JUMP JUMPDEST PUSH2 0x139 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x209 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH2 0x802 JUMP JUMPDEST PUSH2 0x139 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x226 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH2 0x869 JUMP JUMPDEST PUSH2 0x139 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x243 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x96E JUMP JUMPDEST PUSH2 0x15F PUSH2 0xACA JUMP JUMPDEST PUSH2 0x139 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x271 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0xAD0 JUMP JUMPDEST PUSH2 0x139 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x297 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0xBD2 JUMP JUMPDEST PUSH2 0x1BF PUSH2 0xE2C JUMP JUMPDEST PUSH2 0x1BF PUSH2 0xE3B JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x313 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x13DB9B1E4818591B5A5B881C195C9B5A5D1D1959 PUSH1 0x62 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH2 0x31B PUSH2 0x396 JUMP JUMPDEST PUSH2 0x363 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x14185D5CD8589B194E881B9BDD081C185D5CD959 PUSH1 0x62 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH2 0x36B PUSH2 0xF90 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x7805862F689E2F13DF9F062FF482AD3AD112ACA9E0847911ED832E158C525B33 SWAP1 PUSH1 0x0 SWAP1 LOG1 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH1 0x3 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x4 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x3BA PUSH2 0x1033 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x3CB PUSH2 0x73E JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x414 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x14DF DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x468 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x43616E6E6F74206265207A65726F2061646472657373 PUSH1 0x50 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x1 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH2 0x492 PUSH2 0x1033 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x4A3 PUSH2 0x73E JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x4EC JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x14DF DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 DUP4 SWAP1 LOG3 PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x58C JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x13DB9B1E4818591B5A5B881C195C9B5A5D1D1959 PUSH1 0x62 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH2 0x594 PUSH2 0x396 JUMP JUMPDEST ISZERO PUSH2 0x5D9 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH16 0x14185D5CD8589B194E881C185D5CD959 PUSH1 0x82 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH2 0x5E1 PUSH2 0x1037 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x6985A02210A168E66602D3235CB6DB0E70F92B3BA4D376A33C0F3D9434BFF625 SWAP1 PUSH1 0x0 SWAP1 LOG1 JUMP JUMPDEST PUSH2 0x614 PUSH2 0x1033 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x625 PUSH2 0x73E JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x66E JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x14DF DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH2 0x73C CALLER PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x6DF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x6F3 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x709 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND SWAP2 SWAP1 PUSH2 0x10C0 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x7CB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x7DF JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x7F5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x3 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x80A PUSH2 0x1033 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x81B PUSH2 0x73E JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x864 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x14DF DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x3 SSTORE JUMP JUMPDEST PUSH2 0x871 PUSH2 0x396 JUMP JUMPDEST ISZERO PUSH2 0x8B6 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH16 0x14185D5CD8589B194E881C185D5CD959 PUSH1 0x82 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP2 GT PUSH2 0x900 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH18 0x139BDD1A1A5B99C81D1BC819195C1BDCDA5D PUSH1 0x72 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH2 0x935 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND CALLER ADDRESS DUP5 PUSH2 0x1112 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP3 DUP2 MSTORE SWAP1 MLOAD CALLER SWAP2 PUSH32 0xE1FFFCC4923D04B559F4D29A8BFC6CDA04EB5B0D3C460751C2402C5C5CC9109C SWAP2 SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 LOG2 POP JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x9C4 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x13DB9B1E4818591B5A5B881C195C9B5A5D1D1959 PUSH1 0x62 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO PUSH2 0xA35 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x28 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x14FF PUSH1 0x28 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xA84 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xA98 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xAAE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP1 POP PUSH2 0xAC6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND CALLER DUP4 PUSH2 0x10C0 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x5 SLOAD DUP2 JUMP JUMPDEST PUSH2 0xAD8 PUSH2 0x1033 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0xAE9 PUSH2 0x73E JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0xB32 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x14DF DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0xB77 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x26 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x1493 PUSH1 0x26 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND SWAP4 SWAP3 AND SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 LOG3 PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH2 0xBDA PUSH2 0x396 JUMP JUMPDEST ISZERO PUSH2 0xC1F JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH16 0x14185D5CD8589B194E881C185D5CD959 PUSH1 0x82 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xC7E JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E6F7420616E20617574686F7269736564207370656E64657200000000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP2 GT PUSH2 0xCC9 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH19 0x4E6F7468696E6720746F207769746864726177 PUSH1 0x68 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST DUP1 PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xD37 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xD4B JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xD61 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD GT PUSH2 0xD9F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x21 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x1472 PUSH1 0x21 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xDA8 DUP2 PUSH2 0x1172 JUMP JUMPDEST ISZERO PUSH2 0xDE9 JUMPI PUSH1 0x5 DUP1 SLOAD DUP3 ADD SWAP1 SSTORE PUSH2 0xDE9 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND DUP4 DUP4 PUSH2 0x10C0 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP3 DUP2 MSTORE SWAP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND SWAP2 PUSH32 0x884EDAD9CE6FA2440D8A54CC123490EB96D2768479D49FF9C7366125A9424364 SWAP2 SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 LOG2 POP POP JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST DUP1 ISZERO DUP1 PUSH2 0xEE5 JUMPI POP PUSH1 0x40 DUP1 MLOAD PUSH4 0x6EB1769F PUSH1 0xE1 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND PUSH1 0x24 DUP4 ADD MSTORE SWAP2 MLOAD SWAP2 DUP6 AND SWAP2 PUSH4 0xDD62ED3E SWAP2 PUSH1 0x44 DUP1 DUP3 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP1 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xEB7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xECB JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xEE1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD ISZERO JUMPDEST PUSH2 0xF20 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x36 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x1551 PUSH1 0x36 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP1 DUP3 ADD DUP5 SWAP1 MSTORE DUP3 MLOAD DUP1 DUP4 SUB SWAP1 SWAP2 ADD DUP2 MSTORE PUSH1 0x64 SWAP1 SWAP2 ADD SWAP1 SWAP2 MSTORE PUSH1 0x20 DUP2 ADD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND PUSH4 0x95EA7B3 PUSH1 0xE0 SHL OR SWAP1 MSTORE PUSH2 0xF72 SWAP1 DUP5 SWAP1 PUSH2 0x11BA JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0xF86 DUP5 DUP5 PUSH1 0x0 DUP6 PUSH2 0x126B JUMP JUMPDEST SWAP1 POP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0xF98 PUSH2 0x396 JUMP JUMPDEST PUSH2 0xFE0 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x14185D5CD8589B194E881B9BDD081C185D5CD959 PUSH1 0x62 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0xFF PUSH1 0xA0 SHL NOT AND SWAP1 SSTORE PUSH32 0x5DB9EE0A495BF2E6FF9C91A7834C1BA4FDD244A5E8AA4E537BD38AEAE4B073AA PUSH2 0x1016 PUSH2 0x1033 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 LOG1 JUMP JUMPDEST CALLER SWAP1 JUMP JUMPDEST PUSH2 0x103F PUSH2 0x396 JUMP JUMPDEST ISZERO PUSH2 0x1084 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH16 0x14185D5CD8589B194E881C185D5CD959 PUSH1 0x82 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0xFF PUSH1 0xA0 SHL NOT AND PUSH1 0x1 PUSH1 0xA0 SHL OR SWAP1 SSTORE PUSH32 0x62E78CEA01BEE320CD4E420270B5EA74000D11B0C9F74754EBDBFC544B05A258 PUSH2 0x1016 PUSH2 0x1033 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP1 DUP3 ADD DUP5 SWAP1 MSTORE DUP3 MLOAD DUP1 DUP4 SUB SWAP1 SWAP2 ADD DUP2 MSTORE PUSH1 0x64 SWAP1 SWAP2 ADD SWAP1 SWAP2 MSTORE PUSH1 0x20 DUP2 ADD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND PUSH4 0xA9059CBB PUSH1 0xE0 SHL OR SWAP1 MSTORE PUSH2 0xF72 SWAP1 DUP5 SWAP1 PUSH2 0x11BA JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP7 AND PUSH1 0x24 DUP4 ADD MSTORE DUP5 AND PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 DUP1 DUP3 ADD DUP5 SWAP1 MSTORE DUP3 MLOAD DUP1 DUP4 SUB SWAP1 SWAP2 ADD DUP2 MSTORE PUSH1 0x84 SWAP1 SWAP2 ADD SWAP1 SWAP2 MSTORE PUSH1 0x20 DUP2 ADD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND PUSH4 0x23B872DD PUSH1 0xE0 SHL OR SWAP1 MSTORE PUSH2 0x116C SWAP1 DUP6 SWAP1 PUSH2 0x11BA JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x4 SLOAD PUSH3 0x15180 ADD TIMESTAMP GT ISZERO PUSH2 0x118D JUMPI TIMESTAMP PUSH1 0x4 SSTORE PUSH1 0x0 PUSH1 0x5 SSTORE JUMPDEST PUSH1 0x3 SLOAD DUP3 PUSH1 0x5 SLOAD ADD GT DUP1 PUSH2 0x11A4 JUMPI POP PUSH1 0x5 SLOAD DUP3 DUP2 ADD LT JUMPDEST ISZERO PUSH2 0x11B1 JUMPI POP PUSH1 0x0 PUSH2 0x11B5 JUMP JUMPDEST POP PUSH1 0x1 JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x120F DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x5361666545524332303A206C6F772D6C6576656C2063616C6C206661696C6564 DUP2 MSTORE POP DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0xF77 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP1 MLOAD SWAP1 SWAP2 POP ISZERO PUSH2 0xF72 JUMPI DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x122E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH2 0xF72 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x2A DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x1527 PUSH1 0x2A SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x60 DUP3 SELFBALANCE LT ISZERO PUSH2 0x12AC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x26 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x14B9 PUSH1 0x26 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x12B5 DUP6 PUSH2 0x13C7 JUMP JUMPDEST PUSH2 0x1306 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 DUP8 PUSH1 0x40 MLOAD DUP1 DUP3 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 JUMPDEST PUSH1 0x20 DUP4 LT PUSH2 0x1345 JUMPI DUP1 MLOAD DUP3 MSTORE PUSH1 0x1F NOT SWAP1 SWAP3 ADD SWAP2 PUSH1 0x20 SWAP2 DUP3 ADD SWAP2 ADD PUSH2 0x1326 JUMP JUMPDEST PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB DUP1 NOT DUP3 MLOAD AND DUP2 DUP5 MLOAD AND DUP1 DUP3 OR DUP6 MSTORE POP POP POP POP POP POP SWAP1 POP ADD SWAP2 POP POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x13A7 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x13AC JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0x13BC DUP3 DUP3 DUP7 PUSH2 0x13CD JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST EXTCODESIZE ISZERO ISZERO SWAP1 JUMP JUMPDEST PUSH1 0x60 DUP4 ISZERO PUSH2 0x13DC JUMPI POP DUP2 PUSH2 0xF89 JUMP JUMPDEST DUP3 MLOAD ISZERO PUSH2 0x13EC JUMPI DUP3 MLOAD DUP1 DUP5 PUSH1 0x20 ADD REVERT JUMPDEST DUP2 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1436 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x141E JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x1463 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT INVALID 0x49 PUSH15 0x73756666696369656E7420696E6365 PUSH15 0x746976657320617661696C61626C65 0x4F PUSH24 0x6E61626C653A206E6577206F776E65722069732074686520 PUSH27 0x65726F2061646472657373416464726573733A20696E7375666669 PUSH4 0x69656E74 KECCAK256 PUSH3 0x616C61 PUSH15 0x636520666F722063616C6C4F776E61 PUSH3 0x6C653A KECCAK256 PUSH4 0x616C6C65 PUSH19 0x206973206E6F7420746865206F776E6572546F PUSH12 0x656E2063616E6E6F74206265 KECCAK256 PUSH20 0x616D6520617320696E63656E746976657320746F PUSH12 0x656E5361666545524332303A KECCAK256 GASLIMIT MSTORE NUMBER ORIGIN ADDRESS KECCAK256 PUSH16 0x7065726174696F6E20646964206E6F74 KECCAK256 PUSH20 0x7563636565645361666545524332303A20617070 PUSH19 0x6F76652066726F6D206E6F6E2D7A65726F2074 PUSH16 0x206E6F6E2D7A65726F20616C6C6F7761 PUSH15 0x6365A264697066735822122056C586 PUSH18 0x40C5288753D62A996ED854A35CABF862B7FD CALLVALUE 0xAF TIMESTAMP XOR 0x29 PUSH31 0xFC9336A764736F6C63430007050033416464726573733A20696E7375666669 PUSH4 0x69656E74 KECCAK256 PUSH3 0x616C61 PUSH15 0x636520666F722063616C6C53616665 GASLIMIT MSTORE NUMBER ORIGIN ADDRESS GASPRICE KECCAK256 GASLIMIT MSTORE NUMBER ORIGIN ADDRESS KECCAK256 PUSH16 0x7065726174696F6E20646964206E6F74 KECCAK256 PUSH20 0x7563636565645361666545524332303A20617070 PUSH19 0x6F76652066726F6D206E6F6E2D7A65726F2074 PUSH16 0x206E6F6E2D7A65726F20616C6C6F7761 PUSH15 0x636500000000000000000000000000 ",
							"sourceMap": "575:4803:0:-:0;;;1331:363;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1331:363:0;;;;;;;;;;;;;;;;;;;884:17:1;904:12;:10;:12::i;:::-;926:6;:18;;-1:-1:-1;;;;;;926:18:1;-1:-1:-1;;;;;926:18:1;;;;;;;959:43;;926:18;;-1:-1:-1;926:18:1;959:43;;926:6;;959:43;-1:-1:-1;945:5:7;935:15;;-1:-1:-1;;;;935:15:7;;;1466:14:0;;;;-1:-1:-1;;;;;;1466:14:0;;;1490:15;:34;;-1:-1:-1;;;;;;1490:34:0;;;-1:-1:-1;;;;;1490:34:0;;;;;;;;;;-1:-1:-1;1534:14:0;;;;;;;;;;;1558:10;:24;;;1621:66;;1466:14;;1490:34;-1:-1:-1;;1621:26:0;;;;;;;:66;;:::i;:::-;1331:363;;;;575:4803;;598:104:6;685:10;598:104;:::o;1348:613:4:-;1713:10;;;1712:62;;-1:-1:-1;1729:39:4;;;-1:-1:-1;;;1729:39:4;;1753:4;1729:39;;;;-1:-1:-1;;;;;1729:39:4;;;;;;;;;:15;;;;;;:39;;;;;;;;;;;;;;;:15;:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1729:39:4;:44;1712:62;1704:150;;;;-1:-1:-1;;;1704:150:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1891:62;;;-1:-1:-1;;;;;1891:62:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1891:62:4;;;-1:-1:-1;;;1891:62:4;;;;1864:90;;1884:5;;1864:19;:90;:::i;:::-;1348:613;;;:::o;2967:751::-;3386:23;3412:69;3440:4;3412:69;;;;;;;;;;;;;;;;;3420:5;-1:-1:-1;;;;;3412:27:4;;;;;;;:69;;;;;:::i;:::-;3495:17;;3386:95;;-1:-1:-1;3495:21:4;3491:221;;3635:10;3624:30;;;;;;;;;;;;;;;-1:-1:-1;3624:30:4;3616:85;;;;-1:-1:-1;;;3616:85:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3581:193:5;3684:12;3715:52;3737:6;3745:4;3751:1;3754:12;3715:21;:52::i;:::-;3708:59;;3581:193;;;;;;:::o;4608:523::-;4735:12;4792:5;4767:21;:30;;4759:81;;;;-1:-1:-1;;;4759:81:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4858:18;4869:6;4858:10;:18::i;:::-;4850:60;;;;;-1:-1:-1;;;4850:60:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;4981:12;4995:23;5022:6;-1:-1:-1;;;;;5022:11:5;5042:5;5050:4;5022:33;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;5022:33:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;4980:75:5;;-1:-1:-1;4980:75:5;-1:-1:-1;5072:52:5;4980:75;;5111:12;5072:17;:52::i;:::-;5065:59;4608:523;-1:-1:-1;;;;;;;4608:523:5:o;726:413::-;1086:20;1124:8;;;726:413::o;7091:725::-;7206:12;7234:7;7230:580;;;-1:-1:-1;7264:10:5;7257:17;;7230:580;7375:17;;:21;7371:429;;7633:10;7627:17;7693:15;7680:10;7676:2;7672:19;7665:44;7582:145;7772:12;7765:20;;-1:-1:-1;;;7765:20:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;575:4803:0;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {
								"18": [
									{
										"length": 32,
										"start": 1652
									},
									{
										"length": 32,
										"start": 1813
									},
									{
										"length": 32,
										"start": 1888
									},
									{
										"length": 32,
										"start": 2317
									},
									{
										"length": 32,
										"start": 2502
									},
									{
										"length": 32,
										"start": 3276
									},
									{
										"length": 32,
										"start": 3522
									},
									{
										"length": 32,
										"start": 3645
									}
								]
							},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b506004361061012c5760003560e01c80639f9ff3e8116100ad578063f059cf2b11610071578063f059cf2b14610253578063f2fde38b1461025b578063f3fef3a314610281578063f851a440146102ad578063fc0c546a146102b55761012c565b80639f9ff3e8146101e3578063a6895b5a146101eb578063b20d30a9146101f3578063b6b55f2514610210578063def68a9c1461022d5761012c565b8063715018a6116100f4578063715018a61461019f5780638456cb59146101a7578063853828b6146101af5780638da5cb5b146101b75780638ef57f5e146101db5761012c565b80633f4ba83a146101315780635c975abb1461013b57806367eeba0c146101575780636b0c932d14610171578063704b6c0214610179575b600080fd5b6101396102bd565b005b610143610396565b604080519115158252519081900360200190f35b61015f6103a6565b60408051918252519081900360200190f35b61015f6103ac565b6101396004803603602081101561018f57600080fd5b50356001600160a01b03166103b2565b61013961048a565b610139610536565b61013961060c565b6101bf61073e565b604080516001600160a01b039092168252519081900360200190f35b6101bf61074d565b61015f61075c565b61015f6107fc565b6101396004803603602081101561020957600080fd5b5035610802565b6101396004803603602081101561022657600080fd5b5035610869565b6101396004803603602081101561024357600080fd5b50356001600160a01b031661096e565b61015f610aca565b6101396004803603602081101561027157600080fd5b50356001600160a01b0316610ad0565b6101396004803603604081101561029757600080fd5b506001600160a01b038135169060200135610bd2565b6101bf610e2c565b6101bf610e3b565b6001546001600160a01b03163314610313576040805162461bcd60e51b815260206004820152601460248201527313db9b1e4818591b5a5b881c195c9b5a5d1d195960621b604482015290519081900360640190fd5b61031b610396565b610363576040805162461bcd60e51b815260206004820152601460248201527314185d5cd8589b194e881b9bdd081c185d5cd95960621b604482015290519081900360640190fd5b61036b610f90565b6040517f7805862f689e2f13df9f062ff482ad3ad112aca9e0847911ed832e158c525b3390600090a1565b600054600160a01b900460ff1690565b60035481565b60045481565b6103ba611033565b6001600160a01b03166103cb61073e565b6001600160a01b031614610414576040805162461bcd60e51b815260206004820181905260248201526000805160206114df833981519152604482015290519081900360640190fd5b6001600160a01b038116610468576040805162461bcd60e51b815260206004820152601660248201527543616e6e6f74206265207a65726f206164647265737360501b604482015290519081900360640190fd5b600180546001600160a01b0319166001600160a01b0392909216919091179055565b610492611033565b6001600160a01b03166104a361073e565b6001600160a01b0316146104ec576040805162461bcd60e51b815260206004820181905260248201526000805160206114df833981519152604482015290519081900360640190fd5b600080546040516001600160a01b03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600080546001600160a01b0319169055565b6001546001600160a01b0316331461058c576040805162461bcd60e51b815260206004820152601460248201527313db9b1e4818591b5a5b881c195c9b5a5d1d195960621b604482015290519081900360640190fd5b610594610396565b156105d9576040805162461bcd60e51b815260206004820152601060248201526f14185d5cd8589b194e881c185d5cd95960821b604482015290519081900360640190fd5b6105e1611037565b6040517f6985a02210a168e66602d3235cb6db0e70f92b3ba4d376a33c0f3d9434bff62590600090a1565b610614611033565b6001600160a01b031661062561073e565b6001600160a01b03161461066e576040805162461bcd60e51b815260206004820181905260248201526000805160206114df833981519152604482015290519081900360640190fd5b61073c337f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166370a08231306040518263ffffffff1660e01b815260040180826001600160a01b0316815260200191505060206040518083038186803b1580156106df57600080fd5b505afa1580156106f3573d6000803e3d6000fd5b505050506040513d602081101561070957600080fd5b50516001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001691906110c0565b565b6000546001600160a01b031690565b6002546001600160a01b031681565b60007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166370a08231306040518263ffffffff1660e01b815260040180826001600160a01b0316815260200191505060206040518083038186803b1580156107cb57600080fd5b505afa1580156107df573d6000803e3d6000fd5b505050506040513d60208110156107f557600080fd5b5051905090565b60035490565b61080a611033565b6001600160a01b031661081b61073e565b6001600160a01b031614610864576040805162461bcd60e51b815260206004820181905260248201526000805160206114df833981519152604482015290519081900360640190fd5b600355565b610871610396565b156108b6576040805162461bcd60e51b815260206004820152601060248201526f14185d5cd8589b194e881c185d5cd95960821b604482015290519081900360640190fd5b60008111610900576040805162461bcd60e51b8152602060048201526012602482015271139bdd1a1a5b99c81d1bc819195c1bdcda5d60721b604482015290519081900360640190fd5b6109356001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016333084611112565b60408051828152905133917fe1fffcc4923d04b559f4d29a8bfc6cda04eb5b0d3c460751c2402c5c5cc9109c919081900360200190a250565b6001546001600160a01b031633146109c4576040805162461bcd60e51b815260206004820152601460248201527313db9b1e4818591b5a5b881c195c9b5a5d1d195960621b604482015290519081900360640190fd5b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316816001600160a01b03161415610a355760405162461bcd60e51b81526004018080602001828103825260288152602001806114ff6028913960400191505060405180910390fd5b6000816001600160a01b03166370a08231306040518263ffffffff1660e01b815260040180826001600160a01b0316815260200191505060206040518083038186803b158015610a8457600080fd5b505afa158015610a98573d6000803e3d6000fd5b505050506040513d6020811015610aae57600080fd5b50519050610ac66001600160a01b03831633836110c0565b5050565b60055481565b610ad8611033565b6001600160a01b0316610ae961073e565b6001600160a01b031614610b32576040805162461bcd60e51b815260206004820181905260248201526000805160206114df833981519152604482015290519081900360640190fd5b6001600160a01b038116610b775760405162461bcd60e51b81526004018080602001828103825260268152602001806114936026913960400191505060405180910390fd5b600080546040516001600160a01b03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600080546001600160a01b0319166001600160a01b0392909216919091179055565b610bda610396565b15610c1f576040805162461bcd60e51b815260206004820152601060248201526f14185d5cd8589b194e881c185d5cd95960821b604482015290519081900360640190fd5b6002546001600160a01b03163314610c7e576040805162461bcd60e51b815260206004820152601960248201527f4e6f7420616e20617574686f7269736564207370656e64657200000000000000604482015290519081900360640190fd5b60008111610cc9576040805162461bcd60e51b81526020600482015260136024820152724e6f7468696e6720746f20776974686472617760681b604482015290519081900360640190fd5b807f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166370a08231306040518263ffffffff1660e01b815260040180826001600160a01b0316815260200191505060206040518083038186803b158015610d3757600080fd5b505afa158015610d4b573d6000803e3d6000fd5b505050506040513d6020811015610d6157600080fd5b505111610d9f5760405162461bcd60e51b81526004018080602001828103825260218152602001806114726021913960400191505060405180910390fd5b610da881611172565b15610de9576005805482019055610de96001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001683836110c0565b6040805182815290516001600160a01b038416917f884edad9ce6fa2440d8a54cc123490eb96d2768479d49ff9c7366125a9424364919081900360200190a25050565b6001546001600160a01b031681565b7f000000000000000000000000000000000000000000000000000000000000000081565b801580610ee5575060408051636eb1769f60e11b81523060048201526001600160a01b03848116602483015291519185169163dd62ed3e91604480820192602092909190829003018186803b158015610eb757600080fd5b505afa158015610ecb573d6000803e3d6000fd5b505050506040513d6020811015610ee157600080fd5b5051155b610f205760405162461bcd60e51b81526004018080602001828103825260368152602001806115516036913960400191505060405180910390fd5b604080516001600160a01b038416602482015260448082018490528251808303909101815260649091019091526020810180516001600160e01b031663095ea7b360e01b179052610f729084906111ba565b505050565b6060610f86848460008561126b565b90505b9392505050565b610f98610396565b610fe0576040805162461bcd60e51b815260206004820152601460248201527314185d5cd8589b194e881b9bdd081c185d5cd95960621b604482015290519081900360640190fd5b6000805460ff60a01b191690557f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa611016611033565b604080516001600160a01b039092168252519081900360200190a1565b3390565b61103f610396565b15611084576040805162461bcd60e51b815260206004820152601060248201526f14185d5cd8589b194e881c185d5cd95960821b604482015290519081900360640190fd5b6000805460ff60a01b1916600160a01b1790557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258611016611033565b604080516001600160a01b038416602482015260448082018490528251808303909101815260649091019091526020810180516001600160e01b031663a9059cbb60e01b179052610f729084906111ba565b604080516001600160a01b0380861660248301528416604482015260648082018490528251808303909101815260849091019091526020810180516001600160e01b03166323b872dd60e01b17905261116c9085906111ba565b50505050565b6000600454620151800142111561118d574260045560006005555b600354826005540111806111a45750600554828101105b156111b1575060006111b5565b5060015b919050565b606061120f826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b0316610f779092919063ffffffff16565b805190915015610f725780806020019051602081101561122e57600080fd5b5051610f725760405162461bcd60e51b815260040180806020018281038252602a815260200180611527602a913960400191505060405180910390fd5b6060824710156112ac5760405162461bcd60e51b81526004018080602001828103825260268152602001806114b96026913960400191505060405180910390fd5b6112b5856113c7565b611306576040805162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000604482015290519081900360640190fd5b60006060866001600160a01b031685876040518082805190602001908083835b602083106113455780518252601f199092019160209182019101611326565b6001836020036101000a03801982511681845116808217855250505050505090500191505060006040518083038185875af1925050503d80600081146113a7576040519150601f19603f3d011682016040523d82523d6000602084013e6113ac565b606091505b50915091506113bc8282866113cd565b979650505050505050565b3b151590565b606083156113dc575081610f89565b8251156113ec5782518084602001fd5b8160405162461bcd60e51b81526004018080602001828103825283818151815260200191508051906020019080838360005b8381101561143657818101518382015260200161141e565b50505050905090810190601f1680156114635780820380516001836020036101000a031916815260200191505b509250505060405180910390fdfe496e73756666696369656e7420696e63656e746976657320617661696c61626c654f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c6c4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572546f6b656e2063616e6e6f742062652073616d6520617320696e63656e746976657320746f6b656e5361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565645361666545524332303a20617070726f76652066726f6d206e6f6e2d7a65726f20746f206e6f6e2d7a65726f20616c6c6f77616e6365a264697066735822122056c5867140c5288753d62a996ed854a35cabf862b7fd34af4218297efc9336a764736f6c63430007050033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x12C JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x9F9FF3E8 GT PUSH2 0xAD JUMPI DUP1 PUSH4 0xF059CF2B GT PUSH2 0x71 JUMPI DUP1 PUSH4 0xF059CF2B EQ PUSH2 0x253 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x25B JUMPI DUP1 PUSH4 0xF3FEF3A3 EQ PUSH2 0x281 JUMPI DUP1 PUSH4 0xF851A440 EQ PUSH2 0x2AD JUMPI DUP1 PUSH4 0xFC0C546A EQ PUSH2 0x2B5 JUMPI PUSH2 0x12C JUMP JUMPDEST DUP1 PUSH4 0x9F9FF3E8 EQ PUSH2 0x1E3 JUMPI DUP1 PUSH4 0xA6895B5A EQ PUSH2 0x1EB JUMPI DUP1 PUSH4 0xB20D30A9 EQ PUSH2 0x1F3 JUMPI DUP1 PUSH4 0xB6B55F25 EQ PUSH2 0x210 JUMPI DUP1 PUSH4 0xDEF68A9C EQ PUSH2 0x22D JUMPI PUSH2 0x12C JUMP JUMPDEST DUP1 PUSH4 0x715018A6 GT PUSH2 0xF4 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x19F JUMPI DUP1 PUSH4 0x8456CB59 EQ PUSH2 0x1A7 JUMPI DUP1 PUSH4 0x853828B6 EQ PUSH2 0x1AF JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x1B7 JUMPI DUP1 PUSH4 0x8EF57F5E EQ PUSH2 0x1DB JUMPI PUSH2 0x12C JUMP JUMPDEST DUP1 PUSH4 0x3F4BA83A EQ PUSH2 0x131 JUMPI DUP1 PUSH4 0x5C975ABB EQ PUSH2 0x13B JUMPI DUP1 PUSH4 0x67EEBA0C EQ PUSH2 0x157 JUMPI DUP1 PUSH4 0x6B0C932D EQ PUSH2 0x171 JUMPI DUP1 PUSH4 0x704B6C02 EQ PUSH2 0x179 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x139 PUSH2 0x2BD JUMP JUMPDEST STOP JUMPDEST PUSH2 0x143 PUSH2 0x396 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 ISZERO ISZERO DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x15F PUSH2 0x3A6 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x15F PUSH2 0x3AC JUMP JUMPDEST PUSH2 0x139 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x18F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x3B2 JUMP JUMPDEST PUSH2 0x139 PUSH2 0x48A JUMP JUMPDEST PUSH2 0x139 PUSH2 0x536 JUMP JUMPDEST PUSH2 0x139 PUSH2 0x60C JUMP JUMPDEST PUSH2 0x1BF PUSH2 0x73E JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x1BF PUSH2 0x74D JUMP JUMPDEST PUSH2 0x15F PUSH2 0x75C JUMP JUMPDEST PUSH2 0x15F PUSH2 0x7FC JUMP JUMPDEST PUSH2 0x139 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x209 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH2 0x802 JUMP JUMPDEST PUSH2 0x139 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x226 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH2 0x869 JUMP JUMPDEST PUSH2 0x139 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x243 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x96E JUMP JUMPDEST PUSH2 0x15F PUSH2 0xACA JUMP JUMPDEST PUSH2 0x139 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x271 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0xAD0 JUMP JUMPDEST PUSH2 0x139 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x297 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0xBD2 JUMP JUMPDEST PUSH2 0x1BF PUSH2 0xE2C JUMP JUMPDEST PUSH2 0x1BF PUSH2 0xE3B JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x313 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x13DB9B1E4818591B5A5B881C195C9B5A5D1D1959 PUSH1 0x62 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH2 0x31B PUSH2 0x396 JUMP JUMPDEST PUSH2 0x363 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x14185D5CD8589B194E881B9BDD081C185D5CD959 PUSH1 0x62 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH2 0x36B PUSH2 0xF90 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x7805862F689E2F13DF9F062FF482AD3AD112ACA9E0847911ED832E158C525B33 SWAP1 PUSH1 0x0 SWAP1 LOG1 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH1 0x3 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x4 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x3BA PUSH2 0x1033 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x3CB PUSH2 0x73E JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x414 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x14DF DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x468 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x43616E6E6F74206265207A65726F2061646472657373 PUSH1 0x50 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x1 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH2 0x492 PUSH2 0x1033 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x4A3 PUSH2 0x73E JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x4EC JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x14DF DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 DUP4 SWAP1 LOG3 PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x58C JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x13DB9B1E4818591B5A5B881C195C9B5A5D1D1959 PUSH1 0x62 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH2 0x594 PUSH2 0x396 JUMP JUMPDEST ISZERO PUSH2 0x5D9 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH16 0x14185D5CD8589B194E881C185D5CD959 PUSH1 0x82 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH2 0x5E1 PUSH2 0x1037 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x6985A02210A168E66602D3235CB6DB0E70F92B3BA4D376A33C0F3D9434BFF625 SWAP1 PUSH1 0x0 SWAP1 LOG1 JUMP JUMPDEST PUSH2 0x614 PUSH2 0x1033 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x625 PUSH2 0x73E JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x66E JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x14DF DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH2 0x73C CALLER PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x6DF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x6F3 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x709 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND SWAP2 SWAP1 PUSH2 0x10C0 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x7CB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x7DF JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x7F5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x3 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x80A PUSH2 0x1033 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x81B PUSH2 0x73E JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x864 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x14DF DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x3 SSTORE JUMP JUMPDEST PUSH2 0x871 PUSH2 0x396 JUMP JUMPDEST ISZERO PUSH2 0x8B6 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH16 0x14185D5CD8589B194E881C185D5CD959 PUSH1 0x82 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP2 GT PUSH2 0x900 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH18 0x139BDD1A1A5B99C81D1BC819195C1BDCDA5D PUSH1 0x72 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH2 0x935 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND CALLER ADDRESS DUP5 PUSH2 0x1112 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP3 DUP2 MSTORE SWAP1 MLOAD CALLER SWAP2 PUSH32 0xE1FFFCC4923D04B559F4D29A8BFC6CDA04EB5B0D3C460751C2402C5C5CC9109C SWAP2 SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 LOG2 POP JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x9C4 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x13DB9B1E4818591B5A5B881C195C9B5A5D1D1959 PUSH1 0x62 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO PUSH2 0xA35 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x28 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x14FF PUSH1 0x28 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xA84 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xA98 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xAAE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP1 POP PUSH2 0xAC6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND CALLER DUP4 PUSH2 0x10C0 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x5 SLOAD DUP2 JUMP JUMPDEST PUSH2 0xAD8 PUSH2 0x1033 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0xAE9 PUSH2 0x73E JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0xB32 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x14DF DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0xB77 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x26 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x1493 PUSH1 0x26 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND SWAP4 SWAP3 AND SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 LOG3 PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH2 0xBDA PUSH2 0x396 JUMP JUMPDEST ISZERO PUSH2 0xC1F JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH16 0x14185D5CD8589B194E881C185D5CD959 PUSH1 0x82 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xC7E JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E6F7420616E20617574686F7269736564207370656E64657200000000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP2 GT PUSH2 0xCC9 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH19 0x4E6F7468696E6720746F207769746864726177 PUSH1 0x68 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST DUP1 PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xD37 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xD4B JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xD61 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD GT PUSH2 0xD9F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x21 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x1472 PUSH1 0x21 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xDA8 DUP2 PUSH2 0x1172 JUMP JUMPDEST ISZERO PUSH2 0xDE9 JUMPI PUSH1 0x5 DUP1 SLOAD DUP3 ADD SWAP1 SSTORE PUSH2 0xDE9 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND DUP4 DUP4 PUSH2 0x10C0 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP3 DUP2 MSTORE SWAP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND SWAP2 PUSH32 0x884EDAD9CE6FA2440D8A54CC123490EB96D2768479D49FF9C7366125A9424364 SWAP2 SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 LOG2 POP POP JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST DUP1 ISZERO DUP1 PUSH2 0xEE5 JUMPI POP PUSH1 0x40 DUP1 MLOAD PUSH4 0x6EB1769F PUSH1 0xE1 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND PUSH1 0x24 DUP4 ADD MSTORE SWAP2 MLOAD SWAP2 DUP6 AND SWAP2 PUSH4 0xDD62ED3E SWAP2 PUSH1 0x44 DUP1 DUP3 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP1 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xEB7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xECB JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xEE1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD ISZERO JUMPDEST PUSH2 0xF20 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x36 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x1551 PUSH1 0x36 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP1 DUP3 ADD DUP5 SWAP1 MSTORE DUP3 MLOAD DUP1 DUP4 SUB SWAP1 SWAP2 ADD DUP2 MSTORE PUSH1 0x64 SWAP1 SWAP2 ADD SWAP1 SWAP2 MSTORE PUSH1 0x20 DUP2 ADD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND PUSH4 0x95EA7B3 PUSH1 0xE0 SHL OR SWAP1 MSTORE PUSH2 0xF72 SWAP1 DUP5 SWAP1 PUSH2 0x11BA JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0xF86 DUP5 DUP5 PUSH1 0x0 DUP6 PUSH2 0x126B JUMP JUMPDEST SWAP1 POP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0xF98 PUSH2 0x396 JUMP JUMPDEST PUSH2 0xFE0 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x14185D5CD8589B194E881B9BDD081C185D5CD959 PUSH1 0x62 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0xFF PUSH1 0xA0 SHL NOT AND SWAP1 SSTORE PUSH32 0x5DB9EE0A495BF2E6FF9C91A7834C1BA4FDD244A5E8AA4E537BD38AEAE4B073AA PUSH2 0x1016 PUSH2 0x1033 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 LOG1 JUMP JUMPDEST CALLER SWAP1 JUMP JUMPDEST PUSH2 0x103F PUSH2 0x396 JUMP JUMPDEST ISZERO PUSH2 0x1084 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH16 0x14185D5CD8589B194E881C185D5CD959 PUSH1 0x82 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0xFF PUSH1 0xA0 SHL NOT AND PUSH1 0x1 PUSH1 0xA0 SHL OR SWAP1 SSTORE PUSH32 0x62E78CEA01BEE320CD4E420270B5EA74000D11B0C9F74754EBDBFC544B05A258 PUSH2 0x1016 PUSH2 0x1033 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP1 DUP3 ADD DUP5 SWAP1 MSTORE DUP3 MLOAD DUP1 DUP4 SUB SWAP1 SWAP2 ADD DUP2 MSTORE PUSH1 0x64 SWAP1 SWAP2 ADD SWAP1 SWAP2 MSTORE PUSH1 0x20 DUP2 ADD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND PUSH4 0xA9059CBB PUSH1 0xE0 SHL OR SWAP1 MSTORE PUSH2 0xF72 SWAP1 DUP5 SWAP1 PUSH2 0x11BA JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP7 AND PUSH1 0x24 DUP4 ADD MSTORE DUP5 AND PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 DUP1 DUP3 ADD DUP5 SWAP1 MSTORE DUP3 MLOAD DUP1 DUP4 SUB SWAP1 SWAP2 ADD DUP2 MSTORE PUSH1 0x84 SWAP1 SWAP2 ADD SWAP1 SWAP2 MSTORE PUSH1 0x20 DUP2 ADD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND PUSH4 0x23B872DD PUSH1 0xE0 SHL OR SWAP1 MSTORE PUSH2 0x116C SWAP1 DUP6 SWAP1 PUSH2 0x11BA JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x4 SLOAD PUSH3 0x15180 ADD TIMESTAMP GT ISZERO PUSH2 0x118D JUMPI TIMESTAMP PUSH1 0x4 SSTORE PUSH1 0x0 PUSH1 0x5 SSTORE JUMPDEST PUSH1 0x3 SLOAD DUP3 PUSH1 0x5 SLOAD ADD GT DUP1 PUSH2 0x11A4 JUMPI POP PUSH1 0x5 SLOAD DUP3 DUP2 ADD LT JUMPDEST ISZERO PUSH2 0x11B1 JUMPI POP PUSH1 0x0 PUSH2 0x11B5 JUMP JUMPDEST POP PUSH1 0x1 JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x120F DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x5361666545524332303A206C6F772D6C6576656C2063616C6C206661696C6564 DUP2 MSTORE POP DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0xF77 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP1 MLOAD SWAP1 SWAP2 POP ISZERO PUSH2 0xF72 JUMPI DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x122E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH2 0xF72 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x2A DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x1527 PUSH1 0x2A SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x60 DUP3 SELFBALANCE LT ISZERO PUSH2 0x12AC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x26 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x14B9 PUSH1 0x26 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x12B5 DUP6 PUSH2 0x13C7 JUMP JUMPDEST PUSH2 0x1306 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 DUP8 PUSH1 0x40 MLOAD DUP1 DUP3 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 JUMPDEST PUSH1 0x20 DUP4 LT PUSH2 0x1345 JUMPI DUP1 MLOAD DUP3 MSTORE PUSH1 0x1F NOT SWAP1 SWAP3 ADD SWAP2 PUSH1 0x20 SWAP2 DUP3 ADD SWAP2 ADD PUSH2 0x1326 JUMP JUMPDEST PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB DUP1 NOT DUP3 MLOAD AND DUP2 DUP5 MLOAD AND DUP1 DUP3 OR DUP6 MSTORE POP POP POP POP POP POP SWAP1 POP ADD SWAP2 POP POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x13A7 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x13AC JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0x13BC DUP3 DUP3 DUP7 PUSH2 0x13CD JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST EXTCODESIZE ISZERO ISZERO SWAP1 JUMP JUMPDEST PUSH1 0x60 DUP4 ISZERO PUSH2 0x13DC JUMPI POP DUP2 PUSH2 0xF89 JUMP JUMPDEST DUP3 MLOAD ISZERO PUSH2 0x13EC JUMPI DUP3 MLOAD DUP1 DUP5 PUSH1 0x20 ADD REVERT JUMPDEST DUP2 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1436 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x141E JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x1463 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT INVALID 0x49 PUSH15 0x73756666696369656E7420696E6365 PUSH15 0x746976657320617661696C61626C65 0x4F PUSH24 0x6E61626C653A206E6577206F776E65722069732074686520 PUSH27 0x65726F2061646472657373416464726573733A20696E7375666669 PUSH4 0x69656E74 KECCAK256 PUSH3 0x616C61 PUSH15 0x636520666F722063616C6C4F776E61 PUSH3 0x6C653A KECCAK256 PUSH4 0x616C6C65 PUSH19 0x206973206E6F7420746865206F776E6572546F PUSH12 0x656E2063616E6E6F74206265 KECCAK256 PUSH20 0x616D6520617320696E63656E746976657320746F PUSH12 0x656E5361666545524332303A KECCAK256 GASLIMIT MSTORE NUMBER ORIGIN ADDRESS KECCAK256 PUSH16 0x7065726174696F6E20646964206E6F74 KECCAK256 PUSH20 0x7563636565645361666545524332303A20617070 PUSH19 0x6F76652066726F6D206E6F6E2D7A65726F2074 PUSH16 0x206E6F6E2D7A65726F20616C6C6F7761 PUSH15 0x6365A264697066735822122056C586 PUSH18 0x40C5288753D62A996ED854A35CABF862B7FD CALLVALUE 0xAF TIMESTAMP XOR 0x29 PUSH31 0xFC9336A764736F6C6343000705003300000000000000000000000000000000 ",
							"sourceMap": "575:4803:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4116:100;;;:::i;:::-;;1052:84:7;;;:::i;:::-;;;;;;;;;;;;;;;;;;815:22:0;;;:::i;:::-;;;;;;;;;;;;;;;;843:19;;;:::i;3276:149::-;;;;;;;;;;;;;;;;-1:-1:-1;3276:149:0;-1:-1:-1;;;;;3276:149:0;;:::i;1717:145:1:-;;;:::i;3907:97:0:-;;;:::i;2677:121::-;;;:::i;1085:85:1:-;;;:::i;:::-;;;;-1:-1:-1;;;;;1085:85:1;;;;;;;;;;;;;;779:30:0;;;:::i;2493:113::-;;;:::i;3085:86::-;;;:::i;2905:174::-;;;;;;;;;;;;;;;;-1:-1:-1;2905:174:0;;:::i;2259:228::-;;;;;;;;;;;;;;;;-1:-1:-1;2259:228:0;;:::i;3513:282::-;;;;;;;;;;;;;;;;-1:-1:-1;3513:282:0;-1:-1:-1;;;;;3513:282:0;;:::i;868:22::-;;;:::i;2011:240:1:-;;;;;;;;;;;;;;;;-1:-1:-1;2011:240:1;-1:-1:-1;;;;;2011:240:1;;:::i;4397:399:0:-;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;4397:399:0;;;;;;;;:::i;753:20::-;;;:::i;699:29::-;;;:::i;4116:100::-;1830:5;;-1:-1:-1;;;;;1830:5:0;1816:10;:19;1808:52;;;;;-1:-1:-1;;;1808:52:0;;;;;;;;;;;;-1:-1:-1;;;1808:52:0;;;;;;;;;;;;;;;1631:8:7::1;:6;:8::i;:::-;1623:41;;;::::0;;-1:-1:-1;;;1623:41:7;;::::1;;::::0;::::1;::::0;::::1;::::0;;;;-1:-1:-1;;;1623:41:7;;;;;;;;;;;;;::::1;;4175:10:0::2;:8;:10::i;:::-;4200:9;::::0;::::2;::::0;;;::::2;4116:100::o:0;1052:84:7:-;1099:4;1122:7;-1:-1:-1;;;1122:7:7;;;;;1052:84::o;815:22:0:-;;;;:::o;843:19::-;;;;:::o;3276:149::-;1308:12:1;:10;:12::i;:::-;-1:-1:-1;;;;;1297:23:1;:7;:5;:7::i;:::-;-1:-1:-1;;;;;1297:23:1;;1289:68;;;;;-1:-1:-1;;;1289:68:1;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;1289:68:1;;;;;;;;;;;;;;;-1:-1:-1;;;;;3347:20:0;::::1;3339:55;;;::::0;;-1:-1:-1;;;3339:55:0;;::::1;;::::0;::::1;::::0;::::1;::::0;;;;-1:-1:-1;;;3339:55:0;;;;;;;;;;;;;::::1;;3404:5;:14:::0;;-1:-1:-1;;;;;;3404:14:0::1;-1:-1:-1::0;;;;;3404:14:0;;;::::1;::::0;;;::::1;::::0;;3276:149::o;1717:145:1:-;1308:12;:10;:12::i;:::-;-1:-1:-1;;;;;1297:23:1;:7;:5;:7::i;:::-;-1:-1:-1;;;;;1297:23:1;;1289:68;;;;;-1:-1:-1;;;1289:68:1;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;1289:68:1;;;;;;;;;;;;;;;1823:1:::1;1807:6:::0;;1786:40:::1;::::0;-1:-1:-1;;;;;1807:6:1;;::::1;::::0;1786:40:::1;::::0;1823:1;;1786:40:::1;1853:1;1836:19:::0;;-1:-1:-1;;;;;;1836:19:1::1;::::0;;1717:145::o;3907:97:0:-;1830:5;;-1:-1:-1;;;;;1830:5:0;1816:10;:19;1808:52;;;;;-1:-1:-1;;;1808:52:0;;;;;;;;;;;;-1:-1:-1;;;1808:52:0;;;;;;;;;;;;;;;1366:8:7::1;:6;:8::i;:::-;1365:9;1357:38;;;::::0;;-1:-1:-1;;;1357:38:7;;::::1;;::::0;::::1;::::0;::::1;::::0;;;;-1:-1:-1;;;1357:38:7;;;;;;;;;;;;;::::1;;3967:8:0::2;:6;:8::i;:::-;3990:7;::::0;::::2;::::0;;;::::2;3907:97::o:0;2677:121::-;1308:12:1;:10;:12::i;:::-;-1:-1:-1;;;;;1297:23:1;:7;:5;:7::i;:::-;-1:-1:-1;;;;;1297:23:1;;1289:68;;;;;-1:-1:-1;;;1289:68:1;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;1289:68:1;;;;;;;;;;;;;;;2729:62:0::1;2748:10;2760:5;-1:-1:-1::0;;;;;2760:15:0::1;;2784:4;2760:30;;;;;;;;;;;;;-1:-1:-1::0;;;;;2760:30:0::1;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;::::0;::::1;;-1:-1:-1::0;2760:30:0;-1:-1:-1;;;;;2729:5:0::1;:18;::::0;:62;:18:::1;:62::i;:::-;2677:121::o:0;1085:85:1:-;1131:7;1157:6;-1:-1:-1;;;;;1157:6:1;1085:85;:::o;779:30:0:-;;;-1:-1:-1;;;;;779:30:0;;:::o;2493:113::-;2546:4;2569:5;-1:-1:-1;;;;;2569:15:0;;2593:4;2569:30;;;;;;;;;;;;;-1:-1:-1;;;;;2569:30:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2569:30:0;;-1:-1:-1;2493:113:0;:::o;3085:86::-;3154:10;;3085:86;:::o;2905:174::-;1308:12:1;:10;:12::i;:::-;-1:-1:-1;;;;;1297:23:1;:7;:5;:7::i;:::-;-1:-1:-1;;;;;1297:23:1;;1289:68;;;;;-1:-1:-1;;;1289:68:1;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;1289:68:1;;;;;;;;;;;;;;;3045:10:0::1;:27:::0;2905:174::o;2259:228::-;1366:8:7;:6;:8::i;:::-;1365:9;1357:38;;;;;-1:-1:-1;;;1357:38:7;;;;;;;;;;;;-1:-1:-1;;;1357:38:7;;;;;;;;;;;;;;;2344:1:0::1;2334:7;:11;2326:42;;;::::0;;-1:-1:-1;;;2326:42:0;;::::1;;::::0;::::1;::::0;::::1;::::0;;;;-1:-1:-1;;;2326:42:0;;;;;;;;;;;;;::::1;;2378:58;-1:-1:-1::0;;;;;2378:5:0::1;:22;2401:10;2421:4;2428:7:::0;2378:22:::1;:58::i;:::-;2452:28;::::0;;;;;;;2460:10:::1;::::0;2452:28:::1;::::0;;;;;::::1;::::0;;::::1;2259:228:::0;:::o;3513:282::-;1830:5;;-1:-1:-1;;;;;1830:5:0;1816:10;:19;1808:52;;;;;-1:-1:-1;;;1808:52:0;;;;;;;;;;;;-1:-1:-1;;;1808:52:0;;;;;;;;;;;;;;;3614:5:::1;-1:-1:-1::0;;;;;3596:24:0::1;:6;-1:-1:-1::0;;;;;3596:24:0::1;;;3588:77;;;;-1:-1:-1::0;;;3588:77:0::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3675:14;3699:6;-1:-1:-1::0;;;;;3692:24:0::1;;3725:4;3692:39;;;;;;;;;;;;;-1:-1:-1::0;;;;;3692:39:0::1;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;::::0;::::1;;-1:-1:-1::0;3692:39:0;;-1:-1:-1;3741:47:0::1;-1:-1:-1::0;;;;;3741:27:0;::::1;3769:10;3692:39:::0;3741:27:::1;:47::i;:::-;1870:1;3513:282:::0;:::o;868:22::-;;;;:::o;2011:240:1:-;1308:12;:10;:12::i;:::-;-1:-1:-1;;;;;1297:23:1;:7;:5;:7::i;:::-;-1:-1:-1;;;;;1297:23:1;;1289:68;;;;;-1:-1:-1;;;1289:68:1;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;1289:68:1;;;;;;;;;;;;;;;-1:-1:-1;;;;;2099:22:1;::::1;2091:73;;;;-1:-1:-1::0;;;2091:73:1::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2200:6;::::0;;2179:38:::1;::::0;-1:-1:-1;;;;;2179:38:1;;::::1;::::0;2200:6;::::1;::::0;2179:38:::1;::::0;::::1;2227:6;:17:::0;;-1:-1:-1;;;;;;2227:17:1::1;-1:-1:-1::0;;;;;2227:17:1;;;::::1;::::0;;;::::1;::::0;;2011:240::o;4397:399:0:-;1366:8:7;:6;:8::i;:::-;1365:9;1357:38;;;;;-1:-1:-1;;;1357:38:7;;;;;;;;;;;;-1:-1:-1;;;1357:38:7;;;;;;;;;;;;;;;2015:15:0::1;::::0;-1:-1:-1;;;;;2015:15:0::1;2001:10;:29;1993:67;;;::::0;;-1:-1:-1;;;1993:67:0;;::::1;;::::0;::::1;::::0;::::1;::::0;;;;::::1;::::0;;;;;;;;;;;;;::::1;;4503:1:::2;4493:7;:11;4485:43;;;::::0;;-1:-1:-1;;;4485:43:0;;::::2;;::::0;::::2;::::0;::::2;::::0;;;;-1:-1:-1;;;4485:43:0;;;;;;;;;;;;;::::2;;4579:7;4546:5;-1:-1:-1::0;;;;;4546:15:0::2;;4570:4;4546:30;;;;;;;;;;;;;-1:-1:-1::0;;;;;4546:30:0::2;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;;;;;;;;::::0;::::2;;-1:-1:-1::0;4546:30:0;:40:::2;4538:86;;;;-1:-1:-1::0;;;4538:86:0::2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4638:21;4651:7;4638:12;:21::i;:::-;4634:118;;;4674:10;:21:::0;;;::::2;::::0;;4709:32:::2;-1:-1:-1::0;;;;;4709:5:0::2;:18;4728:3:::0;4688:7;4709:18:::2;:32::i;:::-;4767:22;::::0;;;;;;;-1:-1:-1;;;;;4767:22:0;::::2;::::0;::::2;::::0;;;;;::::2;::::0;;::::2;4397:399:::0;;:::o;753:20::-;;;-1:-1:-1;;;;;753:20:0;;:::o;699:29::-;;;:::o;1348:613:4:-;1713:10;;;1712:62;;-1:-1:-1;1729:39:4;;;-1:-1:-1;;;1729:39:4;;1753:4;1729:39;;;;-1:-1:-1;;;;;1729:39:4;;;;;;;;;:15;;;;;;:39;;;;;;;;;;;;;;;:15;:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1729:39:4;:44;1712:62;1704:150;;;;-1:-1:-1;;;1704:150:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1891:62;;;-1:-1:-1;;;;;1891:62:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1891:62:4;-1:-1:-1;;;1891:62:4;;;1864:90;;1884:5;;1864:19;:90::i;:::-;1348:613;;;:::o;3581:193:5:-;3684:12;3715:52;3737:6;3745:4;3751:1;3754:12;3715:21;:52::i;:::-;3708:59;;3581:193;;;;;;:::o;2064:117:7:-;1631:8;:6;:8::i;:::-;1623:41;;;;;-1:-1:-1;;;1623:41:7;;;;;;;;;;;;-1:-1:-1;;;1623:41:7;;;;;;;;;;;;;;;2132:5:::1;2122:15:::0;;-1:-1:-1;;;;2122:15:7::1;::::0;;2152:22:::1;2161:12;:10;:12::i;:::-;2152:22;::::0;;-1:-1:-1;;;;;2152:22:7;;::::1;::::0;;;;;;;::::1;::::0;;::::1;2064:117::o:0;598:104:6:-;685:10;598:104;:::o;1817:115:7:-;1366:8;:6;:8::i;:::-;1365:9;1357:38;;;;;-1:-1:-1;;;1357:38:7;;;;;;;;;;;;-1:-1:-1;;;1357:38:7;;;;;;;;;;;;;;;1876:7:::1;:14:::0;;-1:-1:-1;;;;1876:14:7::1;-1:-1:-1::0;;;1876:14:7::1;::::0;;1905:20:::1;1912:12;:10;:12::i;704:175:4:-:0;813:58;;;-1:-1:-1;;;;;813:58:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;813:58:4;-1:-1:-1;;;813:58:4;;;786:86;;806:5;;786:19;:86::i;885:203::-;1012:68;;;-1:-1:-1;;;;;1012:68:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1012:68:4;-1:-1:-1;;;1012:68:4;;;985:96;;1005:5;;985:19;:96::i;:::-;885:203;;;;:::o;5032:344:0:-;5101:4;5143:7;;5153:8;5143:18;5125:15;:36;5121:120;;;5187:15;5177:7;:25;5229:1;5216:10;:14;5121:120;5276:10;;5267:6;5254:10;;:19;:32;:68;;;-1:-1:-1;5312:10:0;;5290:19;;;:32;5254:68;5250:98;;;-1:-1:-1;5343:5:0;5336:12;;5250:98;-1:-1:-1;5365:4:0;5032:344;;;;:::o;2967:751:4:-;3386:23;3412:69;3440:4;3412:69;;;;;;;;;;;;;;;;;3420:5;-1:-1:-1;;;;;3412:27:4;;;:69;;;;;:::i;:::-;3495:17;;3386:95;;-1:-1:-1;3495:21:4;3491:221;;3635:10;3624:30;;;;;;;;;;;;;;;-1:-1:-1;3624:30:4;3616:85;;;;-1:-1:-1;;;3616:85:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4608:523:5;4735:12;4792:5;4767:21;:30;;4759:81;;;;-1:-1:-1;;;4759:81:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4858:18;4869:6;4858:10;:18::i;:::-;4850:60;;;;;-1:-1:-1;;;4850:60:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;4981:12;4995:23;5022:6;-1:-1:-1;;;;;5022:11:5;5042:5;5050:4;5022:33;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;5022:33:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4980:75;;;;5072:52;5090:7;5099:10;5111:12;5072:17;:52::i;:::-;5065:59;4608:523;-1:-1:-1;;;;;;;4608:523:5:o;726:413::-;1086:20;1124:8;;;726:413::o;7091:725::-;7206:12;7234:7;7230:580;;;-1:-1:-1;7264:10:5;7257:17;;7230:580;7375:17;;:21;7371:429;;7633:10;7627:17;7693:15;7680:10;7676:2;7672:19;7665:44;7582:145;7772:12;7765:20;;-1:-1:-1;;;7765:20:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "1112800",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"admin()": "1125",
								"approvedSpender()": "1148",
								"dailyLimit()": "1066",
								"deposit(uint256)": "infinite",
								"getDailyLimit()": "1043",
								"getIncentivesBalance()": "infinite",
								"inCaseTokensGetStuck(address)": "infinite",
								"lastDay()": "1088",
								"owner()": "1126",
								"pause()": "infinite",
								"paused()": "1073",
								"renounceOwnership()": "infinite",
								"setAdmin(address)": "infinite",
								"setDailyLimit(uint256)": "infinite",
								"spentToday()": "1020",
								"token()": "infinite",
								"transferOwnership(address)": "infinite",
								"unpause()": "infinite",
								"withdraw(address,uint256)": "infinite",
								"withdrawAll()": "infinite"
							},
							"internal": {
								"isUnderLimit(uint256)": "28334"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 575,
									"end": 5378,
									"name": "PUSH",
									"source": 0,
									"value": "A0"
								},
								{
									"begin": 575,
									"end": 5378,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 575,
									"end": 5378,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 1331,
									"end": 1694,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 1331,
									"end": 1694,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1331,
									"end": 1694,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 1331,
									"end": 1694,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 1331,
									"end": 1694,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 1331,
									"end": 1694,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1331,
									"end": 1694,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1331,
									"end": 1694,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 1331,
									"end": 1694,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 1331,
									"end": 1694,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1331,
									"end": 1694,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 1331,
									"end": 1694,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1331,
									"end": 1694,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1331,
									"end": 1694,
									"name": "PUSHSIZE",
									"source": 0
								},
								{
									"begin": 1331,
									"end": 1694,
									"name": "CODESIZE",
									"source": 0
								},
								{
									"begin": 1331,
									"end": 1694,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 1331,
									"end": 1694,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1331,
									"end": 1694,
									"name": "PUSHSIZE",
									"source": 0
								},
								{
									"begin": 1331,
									"end": 1694,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 1331,
									"end": 1694,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 1331,
									"end": 1694,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1331,
									"end": 1694,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1331,
									"end": 1694,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 1331,
									"end": 1694,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1331,
									"end": 1694,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 1331,
									"end": 1694,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 1331,
									"end": 1694,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1331,
									"end": 1694,
									"name": "LT",
									"source": 0
								},
								{
									"begin": 1331,
									"end": 1694,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 1331,
									"end": 1694,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 1331,
									"end": 1694,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 1331,
									"end": 1694,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1331,
									"end": 1694,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1331,
									"end": 1694,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 1331,
									"end": 1694,
									"name": "tag",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 1331,
									"end": 1694,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 1331,
									"end": 1694,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1331,
									"end": 1694,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1331,
									"end": 1694,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 1331,
									"end": 1694,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 1331,
									"end": 1694,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 1331,
									"end": 1694,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1331,
									"end": 1694,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1331,
									"end": 1694,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 1331,
									"end": 1694,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 1331,
									"end": 1694,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1331,
									"end": 1694,
									"name": "PUSH",
									"source": 0,
									"value": "60"
								},
								{
									"begin": 1331,
									"end": 1694,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1331,
									"end": 1694,
									"name": "SWAP4",
									"source": 0
								},
								{
									"begin": 1331,
									"end": 1694,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 1331,
									"end": 1694,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1331,
									"end": 1694,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1331,
									"end": 1694,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 1331,
									"end": 1694,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1331,
									"end": 1694,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 884,
									"end": 901,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 904,
									"end": 916,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "7"
								},
								{
									"begin": 904,
									"end": 914,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "8"
								},
								{
									"begin": 904,
									"end": 916,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 904,
									"end": 916,
									"name": "tag",
									"source": 1,
									"value": "7"
								},
								{
									"begin": 904,
									"end": 916,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 926,
									"end": 932,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 926,
									"end": 944,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 926,
									"end": 944,
									"name": "SLOAD",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 926,
									"end": 944,
									"name": "AND",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 926,
									"end": 944,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 926,
									"end": 944,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 926,
									"end": 944,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 926,
									"end": 944,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 926,
									"end": 944,
									"name": "OR",
									"source": 1
								},
								{
									"begin": 926,
									"end": 944,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 926,
									"end": 944,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 959,
									"end": 1002,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 959,
									"end": 1002,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 926,
									"end": 944,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 926,
									"end": 944,
									"name": "SWAP4",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 926,
									"end": 944,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 959,
									"end": 1002,
									"name": "PUSH",
									"source": 1,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 959,
									"end": 1002,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 926,
									"end": 932,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 926,
									"end": 932,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 959,
									"end": 1002,
									"name": "LOG3",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 945,
									"end": 950,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 935,
									"end": 950,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 935,
									"end": 950,
									"name": "SLOAD",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "FF"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 935,
									"end": 950,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 935,
									"end": 950,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 935,
									"end": 950,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 1466,
									"end": 1480,
									"name": "PUSH",
									"source": 0,
									"value": "60"
								},
								{
									"begin": 1466,
									"end": 1480,
									"name": "DUP5",
									"source": 0
								},
								{
									"begin": 1466,
									"end": 1480,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1466,
									"end": 1480,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "60"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 1466,
									"end": 1480,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1466,
									"end": 1480,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 1466,
									"end": 1480,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 1490,
									"end": 1505,
									"name": "PUSH",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 1490,
									"end": 1524,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1490,
									"end": 1524,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 1490,
									"end": 1524,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1490,
									"end": 1524,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1490,
									"end": 1524,
									"name": "AND",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 1490,
									"end": 1524,
									"name": "DUP7",
									"source": 0
								},
								{
									"begin": 1490,
									"end": 1524,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1490,
									"end": 1524,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1490,
									"end": 1524,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1490,
									"end": 1524,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1490,
									"end": 1524,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1490,
									"end": 1524,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 1490,
									"end": 1524,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1490,
									"end": 1524,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 1490,
									"end": 1524,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": 1534,
									"end": 1548,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1534,
									"end": 1548,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 1534,
									"end": 1548,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1534,
									"end": 1548,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1534,
									"end": 1548,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1534,
									"end": 1548,
									"name": "DUP5",
									"source": 0
								},
								{
									"begin": 1534,
									"end": 1548,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 1534,
									"end": 1548,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1534,
									"end": 1548,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 1534,
									"end": 1548,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1534,
									"end": 1548,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 1558,
									"end": 1568,
									"name": "PUSH",
									"source": 0,
									"value": "3"
								},
								{
									"begin": 1558,
									"end": 1582,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 1558,
									"end": 1582,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1558,
									"end": 1582,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 1621,
									"end": 1687,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "11"
								},
								{
									"begin": 1621,
									"end": 1687,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1466,
									"end": 1480,
									"name": "DUP6",
									"source": 0
								},
								{
									"begin": 1466,
									"end": 1480,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1490,
									"end": 1524,
									"name": "DUP5",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 1621,
									"end": 1647,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 1621,
									"end": 1647,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 1621,
									"end": 1647,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1621,
									"end": 1647,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1621,
									"end": 1647,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 1621,
									"end": 1647,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "18446744073709551688"
								},
								{
									"begin": 1621,
									"end": 1647,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 1621,
									"end": 1687,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1621,
									"end": 1687,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 1621,
									"end": 1687,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 1621,
									"end": 1687,
									"name": "tag",
									"source": 0,
									"value": "11"
								},
								{
									"begin": 1621,
									"end": 1687,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1331,
									"end": 1694,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 1331,
									"end": 1694,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 1331,
									"end": 1694,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 1331,
									"end": 1694,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 575,
									"end": 5378,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "13"
								},
								{
									"begin": 575,
									"end": 5378,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 598,
									"end": 702,
									"name": "tag",
									"source": 6,
									"value": "8"
								},
								{
									"begin": 598,
									"end": 702,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 685,
									"end": 695,
									"name": "CALLER",
									"source": 6
								},
								{
									"begin": 598,
									"end": 702,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 598,
									"end": 702,
									"name": "JUMP",
									"source": 6,
									"value": "[out]"
								},
								{
									"begin": 1348,
									"end": 1961,
									"name": "tag",
									"source": 4,
									"value": "12"
								},
								{
									"begin": 1348,
									"end": 1961,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1713,
									"end": 1723,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 1713,
									"end": 1723,
									"name": "ISZERO",
									"source": 4
								},
								{
									"begin": 1713,
									"end": 1723,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 1712,
									"end": 1774,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "16"
								},
								{
									"begin": 1712,
									"end": 1774,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 1729,
									"end": 1768,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 1729,
									"end": 1768,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 1729,
									"end": 1768,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "6EB1769F"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 1729,
									"end": 1768,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 1729,
									"end": 1768,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 1753,
									"end": 1757,
									"name": "ADDRESS",
									"source": 4
								},
								{
									"begin": 1729,
									"end": 1768,
									"name": "PUSH",
									"source": 4,
									"value": "4"
								},
								{
									"begin": 1729,
									"end": 1768,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 1729,
									"end": 1768,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 1729,
									"end": 1768,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 1729,
									"end": 1768,
									"name": "DUP5",
									"source": 4
								},
								{
									"begin": 1729,
									"end": 1768,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 1729,
									"end": 1768,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 1729,
									"end": 1768,
									"name": "PUSH",
									"source": 4,
									"value": "24"
								},
								{
									"begin": 1729,
									"end": 1768,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 1729,
									"end": 1768,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 1729,
									"end": 1768,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 1729,
									"end": 1768,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 1729,
									"end": 1768,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 1729,
									"end": 1744,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 1729,
									"end": 1744,
									"name": "DUP6",
									"source": 4
								},
								{
									"begin": 1729,
									"end": 1744,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 1729,
									"end": 1744,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 1729,
									"end": 1744,
									"name": "PUSH",
									"source": 4,
									"value": "DD62ED3E"
								},
								{
									"begin": 1729,
									"end": 1744,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 1729,
									"end": 1768,
									"name": "PUSH",
									"source": 4,
									"value": "44"
								},
								{
									"begin": 1729,
									"end": 1768,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 1729,
									"end": 1768,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 1729,
									"end": 1768,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 1729,
									"end": 1768,
									"name": "SWAP3",
									"source": 4
								},
								{
									"begin": 1729,
									"end": 1768,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 1729,
									"end": 1768,
									"name": "SWAP3",
									"source": 4
								},
								{
									"begin": 1729,
									"end": 1768,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 1729,
									"end": 1768,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 1729,
									"end": 1768,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 1729,
									"end": 1768,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 1729,
									"end": 1768,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 1729,
									"end": 1768,
									"name": "SUB",
									"source": 4
								},
								{
									"begin": 1729,
									"end": 1768,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 1729,
									"end": 1768,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 1729,
									"end": 1744,
									"name": "DUP7",
									"source": 4
								},
								{
									"begin": 1729,
									"end": 1768,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 1729,
									"end": 1768,
									"name": "EXTCODESIZE",
									"source": 4
								},
								{
									"begin": 1729,
									"end": 1768,
									"name": "ISZERO",
									"source": 4
								},
								{
									"begin": 1729,
									"end": 1768,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 1729,
									"end": 1768,
									"name": "ISZERO",
									"source": 4
								},
								{
									"begin": 1729,
									"end": 1768,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "17"
								},
								{
									"begin": 1729,
									"end": 1768,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 1729,
									"end": 1768,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 1729,
									"end": 1768,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 1729,
									"end": 1768,
									"name": "REVERT",
									"source": 4
								},
								{
									"begin": 1729,
									"end": 1768,
									"name": "tag",
									"source": 4,
									"value": "17"
								},
								{
									"begin": 1729,
									"end": 1768,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1729,
									"end": 1768,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1729,
									"end": 1768,
									"name": "GAS",
									"source": 4
								},
								{
									"begin": 1729,
									"end": 1768,
									"name": "STATICCALL",
									"source": 4
								},
								{
									"begin": 1729,
									"end": 1768,
									"name": "ISZERO",
									"source": 4
								},
								{
									"begin": 1729,
									"end": 1768,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 1729,
									"end": 1768,
									"name": "ISZERO",
									"source": 4
								},
								{
									"begin": 1729,
									"end": 1768,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "19"
								},
								{
									"begin": 1729,
									"end": 1768,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 1729,
									"end": 1768,
									"name": "RETURNDATASIZE",
									"source": 4
								},
								{
									"begin": 1729,
									"end": 1768,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 1729,
									"end": 1768,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 1729,
									"end": 1768,
									"name": "RETURNDATACOPY",
									"source": 4
								},
								{
									"begin": 1729,
									"end": 1768,
									"name": "RETURNDATASIZE",
									"source": 4
								},
								{
									"begin": 1729,
									"end": 1768,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 1729,
									"end": 1768,
									"name": "REVERT",
									"source": 4
								},
								{
									"begin": 1729,
									"end": 1768,
									"name": "tag",
									"source": 4,
									"value": "19"
								},
								{
									"begin": 1729,
									"end": 1768,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1729,
									"end": 1768,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1729,
									"end": 1768,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1729,
									"end": 1768,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1729,
									"end": 1768,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1729,
									"end": 1768,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 1729,
									"end": 1768,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 1729,
									"end": 1768,
									"name": "RETURNDATASIZE",
									"source": 4
								},
								{
									"begin": 1729,
									"end": 1768,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 1729,
									"end": 1768,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 1729,
									"end": 1768,
									"name": "LT",
									"source": 4
								},
								{
									"begin": 1729,
									"end": 1768,
									"name": "ISZERO",
									"source": 4
								},
								{
									"begin": 1729,
									"end": 1768,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 1729,
									"end": 1768,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 1729,
									"end": 1768,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 1729,
									"end": 1768,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 1729,
									"end": 1768,
									"name": "REVERT",
									"source": 4
								},
								{
									"begin": 1729,
									"end": 1768,
									"name": "tag",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 1729,
									"end": 1768,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 1729,
									"end": 1768,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 1729,
									"end": 1773,
									"name": "ISZERO",
									"source": 4
								},
								{
									"begin": 1712,
									"end": 1774,
									"name": "tag",
									"source": 4,
									"value": "16"
								},
								{
									"begin": 1712,
									"end": 1774,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1704,
									"end": 1854,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "21"
								},
								{
									"begin": 1704,
									"end": 1854,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 1704,
									"end": 1854,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 1704,
									"end": 1854,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "461BCD"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E5"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 1704,
									"end": 1854,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 1704,
									"end": 1854,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 1704,
									"end": 1854,
									"name": "PUSH",
									"source": 4,
									"value": "4"
								},
								{
									"begin": 1704,
									"end": 1854,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 1704,
									"end": 1854,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 1704,
									"end": 1854,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 1704,
									"end": 1854,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 1704,
									"end": 1854,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 1704,
									"end": 1854,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 1704,
									"end": 1854,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 1704,
									"end": 1854,
									"name": "SUB",
									"source": 4
								},
								{
									"begin": 1704,
									"end": 1854,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 1704,
									"end": 1854,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 1704,
									"end": 1854,
									"name": "PUSH",
									"source": 4,
									"value": "36"
								},
								{
									"begin": 1704,
									"end": 1854,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 1704,
									"end": 1854,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 1704,
									"end": 1854,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 1704,
									"end": 1854,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 1704,
									"end": 1854,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 1704,
									"end": 1854,
									"name": "PUSH data",
									"source": 4,
									"value": "EF945DDB1BFDC0DA870FEB4560D868B047642B4AC7F2FB7F8B7C51CB4A411E25"
								},
								{
									"begin": 1704,
									"end": 1854,
									"name": "PUSH",
									"source": 4,
									"value": "36"
								},
								{
									"begin": 1704,
									"end": 1854,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 1704,
									"end": 1854,
									"name": "CODECOPY",
									"source": 4
								},
								{
									"begin": 1704,
									"end": 1854,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 1704,
									"end": 1854,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 1704,
									"end": 1854,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 1704,
									"end": 1854,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1704,
									"end": 1854,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1704,
									"end": 1854,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 1704,
									"end": 1854,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 1704,
									"end": 1854,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 1704,
									"end": 1854,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 1704,
									"end": 1854,
									"name": "SUB",
									"source": 4
								},
								{
									"begin": 1704,
									"end": 1854,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 1704,
									"end": 1854,
									"name": "REVERT",
									"source": 4
								},
								{
									"begin": 1704,
									"end": 1854,
									"name": "tag",
									"source": 4,
									"value": "21"
								},
								{
									"begin": 1704,
									"end": 1854,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1891,
									"end": 1953,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 1891,
									"end": 1953,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 1891,
									"end": 1953,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 1891,
									"end": 1953,
									"name": "DUP5",
									"source": 4
								},
								{
									"begin": 1891,
									"end": 1953,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 1891,
									"end": 1953,
									"name": "PUSH",
									"source": 4,
									"value": "24"
								},
								{
									"begin": 1891,
									"end": 1953,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 1891,
									"end": 1953,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 1891,
									"end": 1953,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 1891,
									"end": 1953,
									"name": "PUSH",
									"source": 4,
									"value": "44"
								},
								{
									"begin": 1891,
									"end": 1953,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 1891,
									"end": 1953,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 1891,
									"end": 1953,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 1891,
									"end": 1953,
									"name": "DUP5",
									"source": 4
								},
								{
									"begin": 1891,
									"end": 1953,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 1891,
									"end": 1953,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 1891,
									"end": 1953,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 1891,
									"end": 1953,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 1891,
									"end": 1953,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 1891,
									"end": 1953,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 1891,
									"end": 1953,
									"name": "SUB",
									"source": 4
								},
								{
									"begin": 1891,
									"end": 1953,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 1891,
									"end": 1953,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 1891,
									"end": 1953,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 1891,
									"end": 1953,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 1891,
									"end": 1953,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 1891,
									"end": 1953,
									"name": "PUSH",
									"source": 4,
									"value": "64"
								},
								{
									"begin": 1891,
									"end": 1953,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 1891,
									"end": 1953,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 1891,
									"end": 1953,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 1891,
									"end": 1953,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 1891,
									"end": 1953,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 1891,
									"end": 1953,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 1891,
									"end": 1953,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 1891,
									"end": 1953,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 1891,
									"end": 1953,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 1891,
									"end": 1953,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 1891,
									"end": 1953,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 1891,
									"end": 1953,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 1891,
									"end": 1953,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 1891,
									"end": 1953,
									"name": "AND",
									"source": 4
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "95EA7B3"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 1891,
									"end": 1953,
									"name": "OR",
									"source": 4
								},
								{
									"begin": 1891,
									"end": 1953,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 1891,
									"end": 1953,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 1891,
									"end": 1953,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 1864,
									"end": 1954,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "22"
								},
								{
									"begin": 1864,
									"end": 1954,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 1884,
									"end": 1889,
									"name": "DUP6",
									"source": 4
								},
								{
									"begin": 1884,
									"end": 1889,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 1864,
									"end": 1883,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "23"
								},
								{
									"begin": 1864,
									"end": 1954,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 1864,
									"end": 1954,
									"name": "JUMP",
									"source": 4,
									"value": "[in]"
								},
								{
									"begin": 1864,
									"end": 1954,
									"name": "tag",
									"source": 4,
									"value": "22"
								},
								{
									"begin": 1864,
									"end": 1954,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1348,
									"end": 1961,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1348,
									"end": 1961,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1348,
									"end": 1961,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1348,
									"end": 1961,
									"name": "JUMP",
									"source": 4,
									"value": "[out]"
								},
								{
									"begin": 2967,
									"end": 3718,
									"name": "tag",
									"source": 4,
									"value": "23"
								},
								{
									"begin": 2967,
									"end": 3718,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 3386,
									"end": 3409,
									"name": "PUSH",
									"source": 4,
									"value": "60"
								},
								{
									"begin": 3412,
									"end": 3481,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "25"
								},
								{
									"begin": 3440,
									"end": 3444,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 3412,
									"end": 3481,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 3412,
									"end": 3481,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 3412,
									"end": 3481,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 3412,
									"end": 3481,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 3412,
									"end": 3481,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 3412,
									"end": 3481,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 3412,
									"end": 3481,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 3412,
									"end": 3481,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 3412,
									"end": 3481,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 3412,
									"end": 3481,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 3412,
									"end": 3481,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 3412,
									"end": 3481,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 3412,
									"end": 3481,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 3412,
									"end": 3481,
									"name": "PUSH",
									"source": 4,
									"value": "5361666545524332303A206C6F772D6C6576656C2063616C6C206661696C6564"
								},
								{
									"begin": 3412,
									"end": 3481,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 3412,
									"end": 3481,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 3412,
									"end": 3481,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 3420,
									"end": 3425,
									"name": "DUP6",
									"source": 4
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 3412,
									"end": 3439,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 3412,
									"end": 3439,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "26"
								},
								{
									"begin": 3412,
									"end": 3439,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 3412,
									"end": 3439,
									"name": "SHL",
									"source": 4
								},
								{
									"begin": 3412,
									"end": 3439,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "18446744073709551689"
								},
								{
									"begin": 3412,
									"end": 3439,
									"name": "OR",
									"source": 4
								},
								{
									"begin": 3412,
									"end": 3439,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 3412,
									"end": 3481,
									"name": "SWAP3",
									"source": 4
								},
								{
									"begin": 3412,
									"end": 3481,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 3412,
									"end": 3481,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 3412,
									"end": 3481,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 3412,
									"end": 3481,
									"name": "SHR",
									"source": 4
								},
								{
									"begin": 3412,
									"end": 3481,
									"name": "JUMP",
									"source": 4,
									"value": "[in]"
								},
								{
									"begin": 3412,
									"end": 3481,
									"name": "tag",
									"source": 4,
									"value": "25"
								},
								{
									"begin": 3412,
									"end": 3481,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 3495,
									"end": 3512,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 3495,
									"end": 3512,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 3386,
									"end": 3481,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 3386,
									"end": 3481,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 3495,
									"end": 3516,
									"name": "ISZERO",
									"source": 4
								},
								{
									"begin": 3491,
									"end": 3712,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "22"
								},
								{
									"begin": 3491,
									"end": 3712,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 3635,
									"end": 3645,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 3624,
									"end": 3654,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 3624,
									"end": 3654,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 3624,
									"end": 3654,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 3624,
									"end": 3654,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 3624,
									"end": 3654,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 3624,
									"end": 3654,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 3624,
									"end": 3654,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 3624,
									"end": 3654,
									"name": "LT",
									"source": 4
								},
								{
									"begin": 3624,
									"end": 3654,
									"name": "ISZERO",
									"source": 4
								},
								{
									"begin": 3624,
									"end": 3654,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "28"
								},
								{
									"begin": 3624,
									"end": 3654,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 3624,
									"end": 3654,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 3624,
									"end": 3654,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 3624,
									"end": 3654,
									"name": "REVERT",
									"source": 4
								},
								{
									"begin": 3624,
									"end": 3654,
									"name": "tag",
									"source": 4,
									"value": "28"
								},
								{
									"begin": 3624,
									"end": 3654,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 3624,
									"end": 3654,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 3616,
									"end": 3701,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "22"
								},
								{
									"begin": 3616,
									"end": 3701,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 3616,
									"end": 3701,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 3616,
									"end": 3701,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "461BCD"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E5"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 3616,
									"end": 3701,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 3616,
									"end": 3701,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 3616,
									"end": 3701,
									"name": "PUSH",
									"source": 4,
									"value": "4"
								},
								{
									"begin": 3616,
									"end": 3701,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 3616,
									"end": 3701,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 3616,
									"end": 3701,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 3616,
									"end": 3701,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 3616,
									"end": 3701,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 3616,
									"end": 3701,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 3616,
									"end": 3701,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 3616,
									"end": 3701,
									"name": "SUB",
									"source": 4
								},
								{
									"begin": 3616,
									"end": 3701,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 3616,
									"end": 3701,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 3616,
									"end": 3701,
									"name": "PUSH",
									"source": 4,
									"value": "2A"
								},
								{
									"begin": 3616,
									"end": 3701,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 3616,
									"end": 3701,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 3616,
									"end": 3701,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 3616,
									"end": 3701,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 3616,
									"end": 3701,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 3616,
									"end": 3701,
									"name": "PUSH data",
									"source": 4,
									"value": "E11AD79D1E4A7F2E5F376964CB99E8E8F7904E3FC16A109F7A7ECB9AA7956DCD"
								},
								{
									"begin": 3616,
									"end": 3701,
									"name": "PUSH",
									"source": 4,
									"value": "2A"
								},
								{
									"begin": 3616,
									"end": 3701,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 3616,
									"end": 3701,
									"name": "CODECOPY",
									"source": 4
								},
								{
									"begin": 3616,
									"end": 3701,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 3616,
									"end": 3701,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 3616,
									"end": 3701,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 3616,
									"end": 3701,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 3616,
									"end": 3701,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 3616,
									"end": 3701,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 3616,
									"end": 3701,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 3616,
									"end": 3701,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 3616,
									"end": 3701,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 3616,
									"end": 3701,
									"name": "SUB",
									"source": 4
								},
								{
									"begin": 3616,
									"end": 3701,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 3616,
									"end": 3701,
									"name": "REVERT",
									"source": 4
								},
								{
									"begin": 3581,
									"end": 3774,
									"name": "tag",
									"source": 5,
									"value": "26"
								},
								{
									"begin": 3581,
									"end": 3774,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 3684,
									"end": 3696,
									"name": "PUSH",
									"source": 5,
									"value": "60"
								},
								{
									"begin": 3715,
									"end": 3767,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "31"
								},
								{
									"begin": 3737,
									"end": 3743,
									"name": "DUP5",
									"source": 5
								},
								{
									"begin": 3745,
									"end": 3749,
									"name": "DUP5",
									"source": 5
								},
								{
									"begin": 3751,
									"end": 3752,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 3754,
									"end": 3766,
									"name": "DUP6",
									"source": 5
								},
								{
									"begin": 3715,
									"end": 3736,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "32"
								},
								{
									"begin": 3715,
									"end": 3767,
									"name": "JUMP",
									"source": 5,
									"value": "[in]"
								},
								{
									"begin": 3715,
									"end": 3767,
									"name": "tag",
									"source": 5,
									"value": "31"
								},
								{
									"begin": 3715,
									"end": 3767,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 3708,
									"end": 3767,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 3708,
									"end": 3767,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 3581,
									"end": 3774,
									"name": "tag",
									"source": 5,
									"value": "30"
								},
								{
									"begin": 3581,
									"end": 3774,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 3581,
									"end": 3774,
									"name": "SWAP4",
									"source": 5
								},
								{
									"begin": 3581,
									"end": 3774,
									"name": "SWAP3",
									"source": 5
								},
								{
									"begin": 3581,
									"end": 3774,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 3581,
									"end": 3774,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 3581,
									"end": 3774,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 3581,
									"end": 3774,
									"name": "JUMP",
									"source": 5,
									"value": "[out]"
								},
								{
									"begin": 4608,
									"end": 5131,
									"name": "tag",
									"source": 5,
									"value": "32"
								},
								{
									"begin": 4608,
									"end": 5131,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 4735,
									"end": 4747,
									"name": "PUSH",
									"source": 5,
									"value": "60"
								},
								{
									"begin": 4792,
									"end": 4797,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 4767,
									"end": 4788,
									"name": "SELFBALANCE",
									"source": 5
								},
								{
									"begin": 4767,
									"end": 4797,
									"name": "LT",
									"source": 5
								},
								{
									"begin": 4767,
									"end": 4797,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 4759,
									"end": 4840,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "34"
								},
								{
									"begin": 4759,
									"end": 4840,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 4759,
									"end": 4840,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 4759,
									"end": 4840,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "461BCD"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E5"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 4759,
									"end": 4840,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 4759,
									"end": 4840,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 4759,
									"end": 4840,
									"name": "PUSH",
									"source": 5,
									"value": "4"
								},
								{
									"begin": 4759,
									"end": 4840,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 4759,
									"end": 4840,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 4759,
									"end": 4840,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 4759,
									"end": 4840,
									"name": "PUSH",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 4759,
									"end": 4840,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 4759,
									"end": 4840,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 4759,
									"end": 4840,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 4759,
									"end": 4840,
									"name": "SUB",
									"source": 5
								},
								{
									"begin": 4759,
									"end": 4840,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 4759,
									"end": 4840,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 4759,
									"end": 4840,
									"name": "PUSH",
									"source": 5,
									"value": "26"
								},
								{
									"begin": 4759,
									"end": 4840,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 4759,
									"end": 4840,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 4759,
									"end": 4840,
									"name": "PUSH",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 4759,
									"end": 4840,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 4759,
									"end": 4840,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 4759,
									"end": 4840,
									"name": "PUSH data",
									"source": 5,
									"value": "565F1A77334FC4792800921178C71E4521ACFFAB18FF9E7885B49377EE80AB4C"
								},
								{
									"begin": 4759,
									"end": 4840,
									"name": "PUSH",
									"source": 5,
									"value": "26"
								},
								{
									"begin": 4759,
									"end": 4840,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 4759,
									"end": 4840,
									"name": "CODECOPY",
									"source": 5
								},
								{
									"begin": 4759,
									"end": 4840,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 4759,
									"end": 4840,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 4759,
									"end": 4840,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 4759,
									"end": 4840,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 4759,
									"end": 4840,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 4759,
									"end": 4840,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 4759,
									"end": 4840,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 4759,
									"end": 4840,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 4759,
									"end": 4840,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 4759,
									"end": 4840,
									"name": "SUB",
									"source": 5
								},
								{
									"begin": 4759,
									"end": 4840,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 4759,
									"end": 4840,
									"name": "REVERT",
									"source": 5
								},
								{
									"begin": 4759,
									"end": 4840,
									"name": "tag",
									"source": 5,
									"value": "34"
								},
								{
									"begin": 4759,
									"end": 4840,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 4858,
									"end": 4876,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "35"
								},
								{
									"begin": 4869,
									"end": 4875,
									"name": "DUP6",
									"source": 5
								},
								{
									"begin": 4858,
									"end": 4868,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "36"
								},
								{
									"begin": 4858,
									"end": 4876,
									"name": "JUMP",
									"source": 5,
									"value": "[in]"
								},
								{
									"begin": 4858,
									"end": 4876,
									"name": "tag",
									"source": 5,
									"value": "35"
								},
								{
									"begin": 4858,
									"end": 4876,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 4850,
									"end": 4910,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "37"
								},
								{
									"begin": 4850,
									"end": 4910,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 4850,
									"end": 4910,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 4850,
									"end": 4910,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 4850,
									"end": 4910,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "461BCD"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E5"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 4850,
									"end": 4910,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 4850,
									"end": 4910,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 4850,
									"end": 4910,
									"name": "PUSH",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 4850,
									"end": 4910,
									"name": "PUSH",
									"source": 5,
									"value": "4"
								},
								{
									"begin": 4850,
									"end": 4910,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 4850,
									"end": 4910,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 4850,
									"end": 4910,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 4850,
									"end": 4910,
									"name": "PUSH",
									"source": 5,
									"value": "1D"
								},
								{
									"begin": 4850,
									"end": 4910,
									"name": "PUSH",
									"source": 5,
									"value": "24"
								},
								{
									"begin": 4850,
									"end": 4910,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 4850,
									"end": 4910,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 4850,
									"end": 4910,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 4850,
									"end": 4910,
									"name": "PUSH",
									"source": 5,
									"value": "416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000"
								},
								{
									"begin": 4850,
									"end": 4910,
									"name": "PUSH",
									"source": 5,
									"value": "44"
								},
								{
									"begin": 4850,
									"end": 4910,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 4850,
									"end": 4910,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 4850,
									"end": 4910,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 4850,
									"end": 4910,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 4850,
									"end": 4910,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 4850,
									"end": 4910,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 4850,
									"end": 4910,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 4850,
									"end": 4910,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 4850,
									"end": 4910,
									"name": "SUB",
									"source": 5
								},
								{
									"begin": 4850,
									"end": 4910,
									"name": "PUSH",
									"source": 5,
									"value": "64"
								},
								{
									"begin": 4850,
									"end": 4910,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 4850,
									"end": 4910,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 4850,
									"end": 4910,
									"name": "REVERT",
									"source": 5
								},
								{
									"begin": 4850,
									"end": 4910,
									"name": "tag",
									"source": 5,
									"value": "37"
								},
								{
									"begin": 4850,
									"end": 4910,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 4981,
									"end": 4993,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 4995,
									"end": 5018,
									"name": "PUSH",
									"source": 5,
									"value": "60"
								},
								{
									"begin": 5022,
									"end": 5028,
									"name": "DUP7",
									"source": 5
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 5022,
									"end": 5033,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 5042,
									"end": 5047,
									"name": "DUP6",
									"source": 5
								},
								{
									"begin": 5050,
									"end": 5054,
									"name": "DUP8",
									"source": 5
								},
								{
									"begin": 5022,
									"end": 5055,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 5022,
									"end": 5055,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 5022,
									"end": 5055,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 5022,
									"end": 5055,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 5022,
									"end": 5055,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 5022,
									"end": 5055,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 5022,
									"end": 5055,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 5022,
									"end": 5055,
									"name": "PUSH",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 5022,
									"end": 5055,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 5022,
									"end": 5055,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 5022,
									"end": 5055,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 5022,
									"end": 5055,
									"name": "DUP4",
									"source": 5
								},
								{
									"begin": 5022,
									"end": 5055,
									"name": "DUP4",
									"source": 5
								},
								{
									"begin": 5022,
									"end": 5055,
									"name": "tag",
									"source": 5,
									"value": "38"
								},
								{
									"begin": 5022,
									"end": 5055,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 5022,
									"end": 5055,
									"name": "PUSH",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 5022,
									"end": 5055,
									"name": "DUP4",
									"source": 5
								},
								{
									"begin": 5022,
									"end": 5055,
									"name": "LT",
									"source": 5
								},
								{
									"begin": 5022,
									"end": 5055,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 5022,
									"end": 5055,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 5022,
									"end": 5055,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 5022,
									"end": 5055,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 5022,
									"end": 5055,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 5022,
									"end": 5055,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1F"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 5022,
									"end": 5055,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 5022,
									"end": 5055,
									"name": "SWAP3",
									"source": 5
								},
								{
									"begin": 5022,
									"end": 5055,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 5022,
									"end": 5055,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 5022,
									"end": 5055,
									"name": "PUSH",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 5022,
									"end": 5055,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 5022,
									"end": 5055,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 5022,
									"end": 5055,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 5022,
									"end": 5055,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 5022,
									"end": 5055,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 5022,
									"end": 5055,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "38"
								},
								{
									"begin": 5022,
									"end": 5055,
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 5022,
									"end": 5055,
									"name": "tag",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 5022,
									"end": 5055,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 5022,
									"end": 5055,
									"name": "PUSH",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 5022,
									"end": 5055,
									"name": "DUP4",
									"source": 5
								},
								{
									"begin": 5022,
									"end": 5055,
									"name": "PUSH",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 5022,
									"end": 5055,
									"name": "SUB",
									"source": 5
								},
								{
									"begin": 5022,
									"end": 5055,
									"name": "PUSH",
									"source": 5,
									"value": "100"
								},
								{
									"begin": 5022,
									"end": 5055,
									"name": "EXP",
									"source": 5
								},
								{
									"begin": 5022,
									"end": 5055,
									"name": "SUB",
									"source": 5
								},
								{
									"begin": 5022,
									"end": 5055,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 5022,
									"end": 5055,
									"name": "NOT",
									"source": 5
								},
								{
									"begin": 5022,
									"end": 5055,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 5022,
									"end": 5055,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 5022,
									"end": 5055,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 5022,
									"end": 5055,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 5022,
									"end": 5055,
									"name": "DUP5",
									"source": 5
								},
								{
									"begin": 5022,
									"end": 5055,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 5022,
									"end": 5055,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 5022,
									"end": 5055,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 5022,
									"end": 5055,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 5022,
									"end": 5055,
									"name": "OR",
									"source": 5
								},
								{
									"begin": 5022,
									"end": 5055,
									"name": "DUP6",
									"source": 5
								},
								{
									"begin": 5022,
									"end": 5055,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 5022,
									"end": 5055,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 5022,
									"end": 5055,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 5022,
									"end": 5055,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 5022,
									"end": 5055,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 5022,
									"end": 5055,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 5022,
									"end": 5055,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 5022,
									"end": 5055,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 5022,
									"end": 5055,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 5022,
									"end": 5055,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 5022,
									"end": 5055,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 5022,
									"end": 5055,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 5022,
									"end": 5055,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 5022,
									"end": 5055,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 5022,
									"end": 5055,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 5022,
									"end": 5055,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 5022,
									"end": 5055,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 5022,
									"end": 5055,
									"name": "DUP4",
									"source": 5
								},
								{
									"begin": 5022,
									"end": 5055,
									"name": "SUB",
									"source": 5
								},
								{
									"begin": 5022,
									"end": 5055,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 5022,
									"end": 5055,
									"name": "DUP6",
									"source": 5
								},
								{
									"begin": 5022,
									"end": 5055,
									"name": "DUP8",
									"source": 5
								},
								{
									"begin": 5022,
									"end": 5055,
									"name": "GAS",
									"source": 5
								},
								{
									"begin": 5022,
									"end": 5055,
									"name": "CALL",
									"source": 5
								},
								{
									"begin": 5022,
									"end": 5055,
									"name": "SWAP3",
									"source": 5
								},
								{
									"begin": 5022,
									"end": 5055,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 5022,
									"end": 5055,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 5022,
									"end": 5055,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 5022,
									"end": 5055,
									"name": "RETURNDATASIZE",
									"source": 5
								},
								{
									"begin": 5022,
									"end": 5055,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 5022,
									"end": 5055,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 5022,
									"end": 5055,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 5022,
									"end": 5055,
									"name": "EQ",
									"source": 5
								},
								{
									"begin": 5022,
									"end": 5055,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "43"
								},
								{
									"begin": 5022,
									"end": 5055,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 5022,
									"end": 5055,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 5022,
									"end": 5055,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 5022,
									"end": 5055,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 5022,
									"end": 5055,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 5022,
									"end": 5055,
									"name": "PUSH",
									"source": 5,
									"value": "1F"
								},
								{
									"begin": 5022,
									"end": 5055,
									"name": "NOT",
									"source": 5
								},
								{
									"begin": 5022,
									"end": 5055,
									"name": "PUSH",
									"source": 5,
									"value": "3F"
								},
								{
									"begin": 5022,
									"end": 5055,
									"name": "RETURNDATASIZE",
									"source": 5
								},
								{
									"begin": 5022,
									"end": 5055,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 5022,
									"end": 5055,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 5022,
									"end": 5055,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 5022,
									"end": 5055,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 5022,
									"end": 5055,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 5022,
									"end": 5055,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 5022,
									"end": 5055,
									"name": "RETURNDATASIZE",
									"source": 5
								},
								{
									"begin": 5022,
									"end": 5055,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 5022,
									"end": 5055,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 5022,
									"end": 5055,
									"name": "RETURNDATASIZE",
									"source": 5
								},
								{
									"begin": 5022,
									"end": 5055,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 5022,
									"end": 5055,
									"name": "PUSH",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 5022,
									"end": 5055,
									"name": "DUP5",
									"source": 5
								},
								{
									"begin": 5022,
									"end": 5055,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 5022,
									"end": 5055,
									"name": "RETURNDATACOPY",
									"source": 5
								},
								{
									"begin": 5022,
									"end": 5055,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "42"
								},
								{
									"begin": 5022,
									"end": 5055,
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 5022,
									"end": 5055,
									"name": "tag",
									"source": 5,
									"value": "43"
								},
								{
									"begin": 5022,
									"end": 5055,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 5022,
									"end": 5055,
									"name": "PUSH",
									"source": 5,
									"value": "60"
								},
								{
									"begin": 5022,
									"end": 5055,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 5022,
									"end": 5055,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 5022,
									"end": 5055,
									"name": "tag",
									"source": 5,
									"value": "42"
								},
								{
									"begin": 5022,
									"end": 5055,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 4980,
									"end": 5055,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 4980,
									"end": 5055,
									"name": "SWAP3",
									"source": 5
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 4980,
									"end": 5055,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 5072,
									"end": 5124,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "44"
								},
								{
									"begin": 4980,
									"end": 5055,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 4980,
									"end": 5055,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 5111,
									"end": 5123,
									"name": "DUP7",
									"source": 5
								},
								{
									"begin": 5072,
									"end": 5089,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "45"
								},
								{
									"begin": 5072,
									"end": 5124,
									"name": "JUMP",
									"source": 5,
									"value": "[in]"
								},
								{
									"begin": 5072,
									"end": 5124,
									"name": "tag",
									"source": 5,
									"value": "44"
								},
								{
									"begin": 5072,
									"end": 5124,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 5065,
									"end": 5124,
									"name": "SWAP8",
									"source": 5
								},
								{
									"begin": 4608,
									"end": 5131,
									"name": "SWAP7",
									"source": 5
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 4608,
									"end": 5131,
									"name": "JUMP",
									"source": 5,
									"value": "[out]"
								},
								{
									"begin": 726,
									"end": 1139,
									"name": "tag",
									"source": 5,
									"value": "36"
								},
								{
									"begin": 726,
									"end": 1139,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1086,
									"end": 1106,
									"name": "EXTCODESIZE",
									"source": 5
								},
								{
									"begin": 1124,
									"end": 1132,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 1124,
									"end": 1132,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 1124,
									"end": 1132,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 726,
									"end": 1139,
									"name": "JUMP",
									"source": 5,
									"value": "[out]"
								},
								{
									"begin": 7091,
									"end": 7816,
									"name": "tag",
									"source": 5,
									"value": "45"
								},
								{
									"begin": 7091,
									"end": 7816,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 7206,
									"end": 7218,
									"name": "PUSH",
									"source": 5,
									"value": "60"
								},
								{
									"begin": 7234,
									"end": 7241,
									"name": "DUP4",
									"source": 5
								},
								{
									"begin": 7230,
									"end": 7810,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 7230,
									"end": 7810,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "48"
								},
								{
									"begin": 7230,
									"end": 7810,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 7264,
									"end": 7274,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 7257,
									"end": 7274,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "30"
								},
								{
									"begin": 7257,
									"end": 7274,
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 7230,
									"end": 7810,
									"name": "tag",
									"source": 5,
									"value": "48"
								},
								{
									"begin": 7230,
									"end": 7810,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 7375,
									"end": 7392,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 7375,
									"end": 7392,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 7375,
									"end": 7396,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 7371,
									"end": 7800,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "50"
								},
								{
									"begin": 7371,
									"end": 7800,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 7633,
									"end": 7643,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 7627,
									"end": 7644,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 7693,
									"end": 7708,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 7680,
									"end": 7690,
									"name": "DUP5",
									"source": 5
								},
								{
									"begin": 7676,
									"end": 7678,
									"name": "PUSH",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 7672,
									"end": 7691,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 7665,
									"end": 7709,
									"name": "REVERT",
									"source": 5
								},
								{
									"begin": 7582,
									"end": 7727,
									"name": "tag",
									"source": 5,
									"value": "50"
								},
								{
									"begin": 7582,
									"end": 7727,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 7772,
									"end": 7784,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 7765,
									"end": 7785,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 7765,
									"end": 7785,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "461BCD"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E5"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 7765,
									"end": 7785,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 7765,
									"end": 7785,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 7765,
									"end": 7785,
									"name": "PUSH",
									"source": 5,
									"value": "4"
								},
								{
									"begin": 7765,
									"end": 7785,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 7765,
									"end": 7785,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 7765,
									"end": 7785,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 7765,
									"end": 7785,
									"name": "PUSH",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 7765,
									"end": 7785,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 7765,
									"end": 7785,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 7765,
									"end": 7785,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 7765,
									"end": 7785,
									"name": "SUB",
									"source": 5
								},
								{
									"begin": 7765,
									"end": 7785,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 7765,
									"end": 7785,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 7765,
									"end": 7785,
									"name": "DUP4",
									"source": 5
								},
								{
									"begin": 7765,
									"end": 7785,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 7765,
									"end": 7785,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 7765,
									"end": 7785,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 7765,
									"end": 7785,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 7765,
									"end": 7785,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 7765,
									"end": 7785,
									"name": "PUSH",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 7765,
									"end": 7785,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 7765,
									"end": 7785,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 7765,
									"end": 7785,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 7765,
									"end": 7785,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 7765,
									"end": 7785,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 7765,
									"end": 7785,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 7765,
									"end": 7785,
									"name": "PUSH",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 7765,
									"end": 7785,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 7765,
									"end": 7785,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 7765,
									"end": 7785,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 7765,
									"end": 7785,
									"name": "DUP4",
									"source": 5
								},
								{
									"begin": 7765,
									"end": 7785,
									"name": "DUP4",
									"source": 5
								},
								{
									"begin": 7765,
									"end": 7785,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 7765,
									"end": 7785,
									"name": "tag",
									"source": 5,
									"value": "52"
								},
								{
									"begin": 7765,
									"end": 7785,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 7765,
									"end": 7785,
									"name": "DUP4",
									"source": 5
								},
								{
									"begin": 7765,
									"end": 7785,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 7765,
									"end": 7785,
									"name": "LT",
									"source": 5
								},
								{
									"begin": 7765,
									"end": 7785,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 7765,
									"end": 7785,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "54"
								},
								{
									"begin": 7765,
									"end": 7785,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 7765,
									"end": 7785,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 7765,
									"end": 7785,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 7765,
									"end": 7785,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 7765,
									"end": 7785,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 7765,
									"end": 7785,
									"name": "DUP4",
									"source": 5
								},
								{
									"begin": 7765,
									"end": 7785,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 7765,
									"end": 7785,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 7765,
									"end": 7785,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 7765,
									"end": 7785,
									"name": "PUSH",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 7765,
									"end": 7785,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 7765,
									"end": 7785,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "52"
								},
								{
									"begin": 7765,
									"end": 7785,
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 7765,
									"end": 7785,
									"name": "tag",
									"source": 5,
									"value": "54"
								},
								{
									"begin": 7765,
									"end": 7785,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 7765,
									"end": 7785,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 7765,
									"end": 7785,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 7765,
									"end": 7785,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 7765,
									"end": 7785,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 7765,
									"end": 7785,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 7765,
									"end": 7785,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 7765,
									"end": 7785,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 7765,
									"end": 7785,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 7765,
									"end": 7785,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 7765,
									"end": 7785,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 7765,
									"end": 7785,
									"name": "PUSH",
									"source": 5,
									"value": "1F"
								},
								{
									"begin": 7765,
									"end": 7785,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 7765,
									"end": 7785,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 7765,
									"end": 7785,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 7765,
									"end": 7785,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "55"
								},
								{
									"begin": 7765,
									"end": 7785,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 7765,
									"end": 7785,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 7765,
									"end": 7785,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 7765,
									"end": 7785,
									"name": "SUB",
									"source": 5
								},
								{
									"begin": 7765,
									"end": 7785,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 7765,
									"end": 7785,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 7765,
									"end": 7785,
									"name": "PUSH",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 7765,
									"end": 7785,
									"name": "DUP4",
									"source": 5
								},
								{
									"begin": 7765,
									"end": 7785,
									"name": "PUSH",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 7765,
									"end": 7785,
									"name": "SUB",
									"source": 5
								},
								{
									"begin": 7765,
									"end": 7785,
									"name": "PUSH",
									"source": 5,
									"value": "100"
								},
								{
									"begin": 7765,
									"end": 7785,
									"name": "EXP",
									"source": 5
								},
								{
									"begin": 7765,
									"end": 7785,
									"name": "SUB",
									"source": 5
								},
								{
									"begin": 7765,
									"end": 7785,
									"name": "NOT",
									"source": 5
								},
								{
									"begin": 7765,
									"end": 7785,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 7765,
									"end": 7785,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 7765,
									"end": 7785,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 7765,
									"end": 7785,
									"name": "PUSH",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 7765,
									"end": 7785,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 7765,
									"end": 7785,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 7765,
									"end": 7785,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 7765,
									"end": 7785,
									"name": "tag",
									"source": 5,
									"value": "55"
								},
								{
									"begin": 7765,
									"end": 7785,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 7765,
									"end": 7785,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 7765,
									"end": 7785,
									"name": "SWAP3",
									"source": 5
								},
								{
									"begin": 7765,
									"end": 7785,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 7765,
									"end": 7785,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 7765,
									"end": 7785,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 7765,
									"end": 7785,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 7765,
									"end": 7785,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 7765,
									"end": 7785,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 7765,
									"end": 7785,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 7765,
									"end": 7785,
									"name": "SUB",
									"source": 5
								},
								{
									"begin": 7765,
									"end": 7785,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 7765,
									"end": 7785,
									"name": "REVERT",
									"source": 5
								},
								{
									"begin": 575,
									"end": 5378,
									"name": "tag",
									"source": 0,
									"value": "13"
								},
								{
									"begin": 575,
									"end": 5378,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 575,
									"end": 5378,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 575,
									"end": 5378,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 575,
									"end": 5378,
									"name": "PUSH",
									"source": 0,
									"value": "60"
								},
								{
									"begin": 575,
									"end": 5378,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 575,
									"end": 5378,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 575,
									"end": 5378,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 575,
									"end": 5378,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 575,
									"end": 5378,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 575,
									"end": 5378,
									"name": "ASSIGNIMMUTABLE",
									"source": 0,
									"value": "18"
								},
								{
									"begin": 575,
									"end": 5378,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 575,
									"end": 5378,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 575,
									"end": 5378,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122056c5867140c5288753d62a996ed854a35cabf862b7fd34af4218297efc9336a764736f6c63430007050033",
									".code": [
										{
											"begin": 575,
											"end": 5378,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 575,
											"end": 5378,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 575,
											"end": 5378,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 575,
											"end": 5378,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 575,
											"end": 5378,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 575,
											"end": 5378,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 575,
											"end": 5378,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 575,
											"end": 5378,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 575,
											"end": 5378,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 575,
											"end": 5378,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 575,
											"end": 5378,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 575,
											"end": 5378,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 575,
											"end": 5378,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 575,
											"end": 5378,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 575,
											"end": 5378,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 575,
											"end": 5378,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 575,
											"end": 5378,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 575,
											"end": 5378,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 575,
											"end": 5378,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 575,
											"end": 5378,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 575,
											"end": 5378,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 575,
											"end": 5378,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 575,
											"end": 5378,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 575,
											"end": 5378,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 575,
											"end": 5378,
											"name": "PUSH",
											"source": 0,
											"value": "9F9FF3E8"
										},
										{
											"begin": 575,
											"end": 5378,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 575,
											"end": 5378,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 575,
											"end": 5378,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 575,
											"end": 5378,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 575,
											"end": 5378,
											"name": "PUSH",
											"source": 0,
											"value": "F059CF2B"
										},
										{
											"begin": 575,
											"end": 5378,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 575,
											"end": 5378,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 575,
											"end": 5378,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 575,
											"end": 5378,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 575,
											"end": 5378,
											"name": "PUSH",
											"source": 0,
											"value": "F059CF2B"
										},
										{
											"begin": 575,
											"end": 5378,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 575,
											"end": 5378,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 575,
											"end": 5378,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 575,
											"end": 5378,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 575,
											"end": 5378,
											"name": "PUSH",
											"source": 0,
											"value": "F2FDE38B"
										},
										{
											"begin": 575,
											"end": 5378,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 575,
											"end": 5378,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 575,
											"end": 5378,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 575,
											"end": 5378,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 575,
											"end": 5378,
											"name": "PUSH",
											"source": 0,
											"value": "F3FEF3A3"
										},
										{
											"begin": 575,
											"end": 5378,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 575,
											"end": 5378,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 575,
											"end": 5378,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 575,
											"end": 5378,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 575,
											"end": 5378,
											"name": "PUSH",
											"source": 0,
											"value": "F851A440"
										},
										{
											"begin": 575,
											"end": 5378,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 575,
											"end": 5378,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 575,
											"end": 5378,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 575,
											"end": 5378,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 575,
											"end": 5378,
											"name": "PUSH",
											"source": 0,
											"value": "FC0C546A"
										},
										{
											"begin": 575,
											"end": 5378,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 575,
											"end": 5378,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 575,
											"end": 5378,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 575,
											"end": 5378,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 575,
											"end": 5378,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 575,
											"end": 5378,
											"name": "tag",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 575,
											"end": 5378,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 575,
											"end": 5378,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 575,
											"end": 5378,
											"name": "PUSH",
											"source": 0,
											"value": "9F9FF3E8"
										},
										{
											"begin": 575,
											"end": 5378,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 575,
											"end": 5378,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 575,
											"end": 5378,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 575,
											"end": 5378,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 575,
											"end": 5378,
											"name": "PUSH",
											"source": 0,
											"value": "A6895B5A"
										},
										{
											"begin": 575,
											"end": 5378,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 575,
											"end": 5378,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 575,
											"end": 5378,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 575,
											"end": 5378,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 575,
											"end": 5378,
											"name": "PUSH",
											"source": 0,
											"value": "B20D30A9"
										},
										{
											"begin": 575,
											"end": 5378,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 575,
											"end": 5378,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 575,
											"end": 5378,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 575,
											"end": 5378,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 575,
											"end": 5378,
											"name": "PUSH",
											"source": 0,
											"value": "B6B55F25"
										},
										{
											"begin": 575,
											"end": 5378,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 575,
											"end": 5378,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 575,
											"end": 5378,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 575,
											"end": 5378,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 575,
											"end": 5378,
											"name": "PUSH",
											"source": 0,
											"value": "DEF68A9C"
										},
										{
											"begin": 575,
											"end": 5378,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 575,
											"end": 5378,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 575,
											"end": 5378,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 575,
											"end": 5378,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 575,
											"end": 5378,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 575,
											"end": 5378,
											"name": "tag",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 575,
											"end": 5378,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 575,
											"end": 5378,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 575,
											"end": 5378,
											"name": "PUSH",
											"source": 0,
											"value": "715018A6"
										},
										{
											"begin": 575,
											"end": 5378,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 575,
											"end": 5378,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 575,
											"end": 5378,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 575,
											"end": 5378,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 575,
											"end": 5378,
											"name": "PUSH",
											"source": 0,
											"value": "715018A6"
										},
										{
											"begin": 575,
											"end": 5378,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 575,
											"end": 5378,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 575,
											"end": 5378,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 575,
											"end": 5378,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 575,
											"end": 5378,
											"name": "PUSH",
											"source": 0,
											"value": "8456CB59"
										},
										{
											"begin": 575,
											"end": 5378,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 575,
											"end": 5378,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 575,
											"end": 5378,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 575,
											"end": 5378,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 575,
											"end": 5378,
											"name": "PUSH",
											"source": 0,
											"value": "853828B6"
										},
										{
											"begin": 575,
											"end": 5378,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 575,
											"end": 5378,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 575,
											"end": 5378,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 575,
											"end": 5378,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 575,
											"end": 5378,
											"name": "PUSH",
											"source": 0,
											"value": "8DA5CB5B"
										},
										{
											"begin": 575,
											"end": 5378,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 575,
											"end": 5378,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 575,
											"end": 5378,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 575,
											"end": 5378,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 575,
											"end": 5378,
											"name": "PUSH",
											"source": 0,
											"value": "8EF57F5E"
										},
										{
											"begin": 575,
											"end": 5378,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 575,
											"end": 5378,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 575,
											"end": 5378,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 575,
											"end": 5378,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 575,
											"end": 5378,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 575,
											"end": 5378,
											"name": "tag",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 575,
											"end": 5378,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 575,
											"end": 5378,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 575,
											"end": 5378,
											"name": "PUSH",
											"source": 0,
											"value": "3F4BA83A"
										},
										{
											"begin": 575,
											"end": 5378,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 575,
											"end": 5378,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 575,
											"end": 5378,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 575,
											"end": 5378,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 575,
											"end": 5378,
											"name": "PUSH",
											"source": 0,
											"value": "5C975ABB"
										},
										{
											"begin": 575,
											"end": 5378,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 575,
											"end": 5378,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 575,
											"end": 5378,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 575,
											"end": 5378,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 575,
											"end": 5378,
											"name": "PUSH",
											"source": 0,
											"value": "67EEBA0C"
										},
										{
											"begin": 575,
											"end": 5378,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 575,
											"end": 5378,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 575,
											"end": 5378,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 575,
											"end": 5378,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 575,
											"end": 5378,
											"name": "PUSH",
											"source": 0,
											"value": "6B0C932D"
										},
										{
											"begin": 575,
											"end": 5378,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 575,
											"end": 5378,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 575,
											"end": 5378,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 575,
											"end": 5378,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 575,
											"end": 5378,
											"name": "PUSH",
											"source": 0,
											"value": "704B6C02"
										},
										{
											"begin": 575,
											"end": 5378,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 575,
											"end": 5378,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 575,
											"end": 5378,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 575,
											"end": 5378,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 575,
											"end": 5378,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 575,
											"end": 5378,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 575,
											"end": 5378,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 575,
											"end": 5378,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 4116,
											"end": 4216,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 4116,
											"end": 4216,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4116,
											"end": 4216,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 4116,
											"end": 4216,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 4116,
											"end": 4216,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 4116,
											"end": 4216,
											"name": "tag",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 4116,
											"end": 4216,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4116,
											"end": 4216,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 1052,
											"end": 1136,
											"name": "tag",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 1052,
											"end": 1136,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1052,
											"end": 1136,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "28"
										},
										{
											"begin": 1052,
											"end": 1136,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "29"
										},
										{
											"begin": 1052,
											"end": 1136,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 1052,
											"end": 1136,
											"name": "tag",
											"source": 7,
											"value": "28"
										},
										{
											"begin": 1052,
											"end": 1136,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1052,
											"end": 1136,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1052,
											"end": 1136,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1052,
											"end": 1136,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1052,
											"end": 1136,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1052,
											"end": 1136,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 1052,
											"end": 1136,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 1052,
											"end": 1136,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1052,
											"end": 1136,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1052,
											"end": 1136,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1052,
											"end": 1136,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1052,
											"end": 1136,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1052,
											"end": 1136,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1052,
											"end": 1136,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 1052,
											"end": 1136,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1052,
											"end": 1136,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1052,
											"end": 1136,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1052,
											"end": 1136,
											"name": "RETURN",
											"source": 7
										},
										{
											"begin": 815,
											"end": 837,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 815,
											"end": 837,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 815,
											"end": 837,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 815,
											"end": 837,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 815,
											"end": 837,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 815,
											"end": 837,
											"name": "tag",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 815,
											"end": 837,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 815,
											"end": 837,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 815,
											"end": 837,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 815,
											"end": 837,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 815,
											"end": 837,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 815,
											"end": 837,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 815,
											"end": 837,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 815,
											"end": 837,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 815,
											"end": 837,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 815,
											"end": 837,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 815,
											"end": 837,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 815,
											"end": 837,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 815,
											"end": 837,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 815,
											"end": 837,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 815,
											"end": 837,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 815,
											"end": 837,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 843,
											"end": 862,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 843,
											"end": 862,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 843,
											"end": 862,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 843,
											"end": 862,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 843,
											"end": 862,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 3276,
											"end": 3425,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 3276,
											"end": 3425,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3276,
											"end": 3425,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 3276,
											"end": 3425,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3276,
											"end": 3425,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3276,
											"end": 3425,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 3276,
											"end": 3425,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3276,
											"end": 3425,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3276,
											"end": 3425,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3276,
											"end": 3425,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 3276,
											"end": 3425,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 3276,
											"end": 3425,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 3276,
											"end": 3425,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3276,
											"end": 3425,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3276,
											"end": 3425,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3276,
											"end": 3425,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 3276,
											"end": 3425,
											"name": "tag",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 3276,
											"end": 3425,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3276,
											"end": 3425,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3276,
											"end": 3425,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3276,
											"end": 3425,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 3276,
											"end": 3425,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1717,
											"end": 1862,
											"name": "tag",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 1717,
											"end": 1862,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1717,
											"end": 1862,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 1717,
											"end": 1862,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "38"
										},
										{
											"begin": 1717,
											"end": 1862,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3907,
											"end": 4004,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 3907,
											"end": 4004,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3907,
											"end": 4004,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 3907,
											"end": 4004,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3907,
											"end": 4004,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2677,
											"end": 2798,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 2677,
											"end": 2798,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2677,
											"end": 2798,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 2677,
											"end": 2798,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 2677,
											"end": 2798,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1085,
											"end": 1170,
											"name": "tag",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 1085,
											"end": 1170,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1085,
											"end": 1170,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "43"
										},
										{
											"begin": 1085,
											"end": 1170,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 1085,
											"end": 1170,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1085,
											"end": 1170,
											"name": "tag",
											"source": 1,
											"value": "43"
										},
										{
											"begin": 1085,
											"end": 1170,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1085,
											"end": 1170,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1085,
											"end": 1170,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1085,
											"end": 1170,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1085,
											"end": 1170,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1085,
											"end": 1170,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1085,
											"end": 1170,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1085,
											"end": 1170,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1085,
											"end": 1170,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1085,
											"end": 1170,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1085,
											"end": 1170,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1085,
											"end": 1170,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1085,
											"end": 1170,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1085,
											"end": 1170,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1085,
											"end": 1170,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1085,
											"end": 1170,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1085,
											"end": 1170,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1085,
											"end": 1170,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 779,
											"end": 809,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 779,
											"end": 809,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 779,
											"end": 809,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 779,
											"end": 809,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 779,
											"end": 809,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2493,
											"end": 2606,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 2493,
											"end": 2606,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2493,
											"end": 2606,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 2493,
											"end": 2606,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 2493,
											"end": 2606,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 3085,
											"end": 3171,
											"name": "tag",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 3085,
											"end": 3171,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3085,
											"end": 3171,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 3085,
											"end": 3171,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 3085,
											"end": 3171,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2905,
											"end": 3079,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 2905,
											"end": 3079,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2905,
											"end": 3079,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 2905,
											"end": 3079,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2905,
											"end": 3079,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2905,
											"end": 3079,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2905,
											"end": 3079,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2905,
											"end": 3079,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2905,
											"end": 3079,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2905,
											"end": 3079,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 2905,
											"end": 3079,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2905,
											"end": 3079,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 2905,
											"end": 3079,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2905,
											"end": 3079,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2905,
											"end": 3079,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2905,
											"end": 3079,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2905,
											"end": 3079,
											"name": "tag",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 2905,
											"end": 3079,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2905,
											"end": 3079,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 2905,
											"end": 3079,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 2905,
											"end": 3079,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2259,
											"end": 2487,
											"name": "tag",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 2259,
											"end": 2487,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2259,
											"end": 2487,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 2259,
											"end": 2487,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2259,
											"end": 2487,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2259,
											"end": 2487,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2259,
											"end": 2487,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2259,
											"end": 2487,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2259,
											"end": 2487,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2259,
											"end": 2487,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 2259,
											"end": 2487,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2259,
											"end": 2487,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 2259,
											"end": 2487,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2259,
											"end": 2487,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2259,
											"end": 2487,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2259,
											"end": 2487,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2259,
											"end": 2487,
											"name": "tag",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 2259,
											"end": 2487,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2259,
											"end": 2487,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 2259,
											"end": 2487,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 2259,
											"end": 2487,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 3513,
											"end": 3795,
											"name": "tag",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 3513,
											"end": 3795,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3513,
											"end": 3795,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 3513,
											"end": 3795,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3513,
											"end": 3795,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3513,
											"end": 3795,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 3513,
											"end": 3795,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3513,
											"end": 3795,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3513,
											"end": 3795,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3513,
											"end": 3795,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 3513,
											"end": 3795,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 3513,
											"end": 3795,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 3513,
											"end": 3795,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3513,
											"end": 3795,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3513,
											"end": 3795,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3513,
											"end": 3795,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 3513,
											"end": 3795,
											"name": "tag",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 3513,
											"end": 3795,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3513,
											"end": 3795,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3513,
											"end": 3795,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3513,
											"end": 3795,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 3513,
											"end": 3795,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 868,
											"end": 890,
											"name": "tag",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 868,
											"end": 890,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 868,
											"end": 890,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 868,
											"end": 890,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 868,
											"end": 890,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2011,
											"end": 2251,
											"name": "tag",
											"source": 1,
											"value": "19"
										},
										{
											"begin": 2011,
											"end": 2251,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2011,
											"end": 2251,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 2011,
											"end": 2251,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 2011,
											"end": 2251,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2011,
											"end": 2251,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 2011,
											"end": 2251,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2011,
											"end": 2251,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2011,
											"end": 2251,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2011,
											"end": 2251,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 2011,
											"end": 2251,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2011,
											"end": 2251,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "63"
										},
										{
											"begin": 2011,
											"end": 2251,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2011,
											"end": 2251,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2011,
											"end": 2251,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2011,
											"end": 2251,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2011,
											"end": 2251,
											"name": "tag",
											"source": 1,
											"value": "63"
										},
										{
											"begin": 2011,
											"end": 2251,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2011,
											"end": 2251,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2011,
											"end": 2251,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2011,
											"end": 2251,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 2011,
											"end": 2251,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 4397,
											"end": 4796,
											"name": "tag",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4397,
											"end": 4796,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4397,
											"end": 4796,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 4397,
											"end": 4796,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 4397,
											"end": 4796,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4397,
											"end": 4796,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 4397,
											"end": 4796,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 4397,
											"end": 4796,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4397,
											"end": 4796,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4397,
											"end": 4796,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 4397,
											"end": 4796,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 4397,
											"end": 4796,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 4397,
											"end": 4796,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 4397,
											"end": 4796,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4397,
											"end": 4796,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4397,
											"end": 4796,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 4397,
											"end": 4796,
											"name": "tag",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 4397,
											"end": 4796,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4397,
											"end": 4796,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4397,
											"end": 4796,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 4397,
											"end": 4796,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4397,
											"end": 4796,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4397,
											"end": 4796,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4397,
											"end": 4796,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4397,
											"end": 4796,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 4397,
											"end": 4796,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 4397,
											"end": 4796,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 753,
											"end": 773,
											"name": "tag",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 753,
											"end": 773,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 753,
											"end": 773,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 753,
											"end": 773,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 753,
											"end": 773,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 699,
											"end": 728,
											"name": "tag",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 699,
											"end": 728,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 699,
											"end": 728,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 699,
											"end": 728,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 699,
											"end": 728,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 4116,
											"end": 4216,
											"name": "tag",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 4116,
											"end": 4216,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1830,
											"end": 1835,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 1830,
											"end": 1835,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1830,
											"end": 1835,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1816,
											"end": 1826,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 1816,
											"end": 1835,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1808,
											"end": 1860,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 1808,
											"end": 1860,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1808,
											"end": 1860,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1808,
											"end": 1860,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1808,
											"end": 1860,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1808,
											"end": 1860,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1808,
											"end": 1860,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1808,
											"end": 1860,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1808,
											"end": 1860,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1808,
											"end": 1860,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1808,
											"end": 1860,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1808,
											"end": 1860,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1808,
											"end": 1860,
											"name": "PUSH",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 1808,
											"end": 1860,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 1808,
											"end": 1860,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1808,
											"end": 1860,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1808,
											"end": 1860,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "13DB9B1E4818591B5A5B881C195C9B5A5D1D1959"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "62"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1808,
											"end": 1860,
											"name": "PUSH",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 1808,
											"end": 1860,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1808,
											"end": 1860,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1808,
											"end": 1860,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1808,
											"end": 1860,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1808,
											"end": 1860,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1808,
											"end": 1860,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1808,
											"end": 1860,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1808,
											"end": 1860,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1808,
											"end": 1860,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1808,
											"end": 1860,
											"name": "PUSH",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 1808,
											"end": 1860,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1808,
											"end": 1860,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1808,
											"end": 1860,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1808,
											"end": 1860,
											"name": "tag",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 1808,
											"end": 1860,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1631,
											"end": 1639,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "77"
										},
										{
											"begin": 1631,
											"end": 1637,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "29"
										},
										{
											"begin": 1631,
											"end": 1639,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 1631,
											"end": 1639,
											"name": "tag",
											"source": 7,
											"value": "77"
										},
										{
											"begin": 1631,
											"end": 1639,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1623,
											"end": 1664,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "78"
										},
										{
											"begin": 1623,
											"end": 1664,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 1623,
											"end": 1664,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1623,
											"end": 1664,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1623,
											"end": 1664,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1623,
											"end": 1664,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1623,
											"end": 1664,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1623,
											"end": 1664,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1623,
											"end": 1664,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 1623,
											"end": 1664,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1623,
											"end": 1664,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1623,
											"end": 1664,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1623,
											"end": 1664,
											"name": "PUSH",
											"source": 7,
											"value": "14"
										},
										{
											"begin": 1623,
											"end": 1664,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 1623,
											"end": 1664,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1623,
											"end": 1664,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1623,
											"end": 1664,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "14185D5CD8589B194E881B9BDD081C185D5CD959"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "62"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1623,
											"end": 1664,
											"name": "PUSH",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 1623,
											"end": 1664,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1623,
											"end": 1664,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1623,
											"end": 1664,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1623,
											"end": 1664,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1623,
											"end": 1664,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1623,
											"end": 1664,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1623,
											"end": 1664,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1623,
											"end": 1664,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1623,
											"end": 1664,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 1623,
											"end": 1664,
											"name": "PUSH",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 1623,
											"end": 1664,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1623,
											"end": 1664,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1623,
											"end": 1664,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 1623,
											"end": 1664,
											"name": "tag",
											"source": 7,
											"value": "78"
										},
										{
											"begin": 1623,
											"end": 1664,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4175,
											"end": 4185,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 4175,
											"end": 4183,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 4175,
											"end": 4185,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 4175,
											"end": 4185,
											"name": "tag",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 4175,
											"end": 4185,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4200,
											"end": 4209,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4200,
											"end": 4209,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 4200,
											"end": 4209,
											"name": "PUSH",
											"source": 0,
											"value": "7805862F689E2F13DF9F062FF482AD3AD112ACA9E0847911ED832E158C525B33"
										},
										{
											"begin": 4200,
											"end": 4209,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4200,
											"end": 4209,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4200,
											"end": 4209,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4200,
											"end": 4209,
											"name": "LOG1",
											"source": 0
										},
										{
											"begin": 4116,
											"end": 4216,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 1052,
											"end": 1136,
											"name": "tag",
											"source": 7,
											"value": "29"
										},
										{
											"begin": 1052,
											"end": 1136,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1099,
											"end": 1103,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1122,
											"end": 1129,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1122,
											"end": 1129,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1122,
											"end": 1129,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 1122,
											"end": 1129,
											"name": "PUSH",
											"source": 7,
											"value": "FF"
										},
										{
											"begin": 1122,
											"end": 1129,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1122,
											"end": 1129,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1052,
											"end": 1136,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 815,
											"end": 837,
											"name": "tag",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 815,
											"end": 837,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 815,
											"end": 837,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 815,
											"end": 837,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 815,
											"end": 837,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 815,
											"end": 837,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 843,
											"end": 862,
											"name": "tag",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 843,
											"end": 862,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 843,
											"end": 862,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 843,
											"end": 862,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 843,
											"end": 862,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 843,
											"end": 862,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 3276,
											"end": 3425,
											"name": "tag",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 3276,
											"end": 3425,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1308,
											"end": 1320,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 1308,
											"end": 1318,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "85"
										},
										{
											"begin": 1308,
											"end": 1320,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1308,
											"end": 1320,
											"name": "tag",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 1308,
											"end": 1320,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1297,
											"end": 1320,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1297,
											"end": 1304,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "86"
										},
										{
											"begin": 1297,
											"end": 1302,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 1297,
											"end": 1304,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1297,
											"end": 1304,
											"name": "tag",
											"source": 1,
											"value": "86"
										},
										{
											"begin": 1297,
											"end": 1304,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1297,
											"end": 1320,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1297,
											"end": 1320,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "87"
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"source": -1,
											"value": "9924EBDF1ADD33D25D4EF888E16131F0A5687B0580A36C21B5C301A6C462EFFE"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "tag",
											"source": 1,
											"value": "87"
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3347,
											"end": 3367,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3347,
											"end": 3367,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3339,
											"end": 3394,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "89"
										},
										{
											"begin": 3339,
											"end": 3394,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3339,
											"end": 3394,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3339,
											"end": 3394,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3339,
											"end": 3394,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3339,
											"end": 3394,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3339,
											"end": 3394,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3339,
											"end": 3394,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3339,
											"end": 3394,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3339,
											"end": 3394,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3339,
											"end": 3394,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3339,
											"end": 3394,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3339,
											"end": 3394,
											"name": "PUSH",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 3339,
											"end": 3394,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 3339,
											"end": 3394,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3339,
											"end": 3394,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3339,
											"end": 3394,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "43616E6E6F74206265207A65726F2061646472657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "50"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3339,
											"end": 3394,
											"name": "PUSH",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 3339,
											"end": 3394,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3339,
											"end": 3394,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3339,
											"end": 3394,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3339,
											"end": 3394,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3339,
											"end": 3394,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3339,
											"end": 3394,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3339,
											"end": 3394,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3339,
											"end": 3394,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3339,
											"end": 3394,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3339,
											"end": 3394,
											"name": "PUSH",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 3339,
											"end": 3394,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3339,
											"end": 3394,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3339,
											"end": 3394,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 3339,
											"end": 3394,
											"name": "tag",
											"source": 0,
											"value": "89"
										},
										{
											"begin": 3339,
											"end": 3394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3404,
											"end": 3409,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 3404,
											"end": 3418,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3404,
											"end": 3418,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 3404,
											"end": 3418,
											"name": "AND",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3404,
											"end": 3418,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 3404,
											"end": 3418,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3404,
											"end": 3418,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 3404,
											"end": 3418,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3404,
											"end": 3418,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3404,
											"end": 3418,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3404,
											"end": 3418,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3404,
											"end": 3418,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 3404,
											"end": 3418,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3404,
											"end": 3418,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 3276,
											"end": 3425,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 1717,
											"end": 1862,
											"name": "tag",
											"source": 1,
											"value": "38"
										},
										{
											"begin": 1717,
											"end": 1862,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1308,
											"end": 1320,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "91"
										},
										{
											"begin": 1308,
											"end": 1318,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "85"
										},
										{
											"begin": 1308,
											"end": 1320,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1308,
											"end": 1320,
											"name": "tag",
											"source": 1,
											"value": "91"
										},
										{
											"begin": 1308,
											"end": 1320,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1297,
											"end": 1320,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1297,
											"end": 1304,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "92"
										},
										{
											"begin": 1297,
											"end": 1302,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 1297,
											"end": 1304,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1297,
											"end": 1304,
											"name": "tag",
											"source": 1,
											"value": "92"
										},
										{
											"begin": 1297,
											"end": 1304,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1297,
											"end": 1320,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1297,
											"end": 1320,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "93"
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"source": -1,
											"value": "9924EBDF1ADD33D25D4EF888E16131F0A5687B0580A36C21B5C301A6C462EFFE"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "tag",
											"source": 1,
											"value": "93"
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1823,
											"end": 1824,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1807,
											"end": 1813,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1807,
											"end": 1813,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 1786,
											"end": 1826,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1786,
											"end": 1826,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1807,
											"end": 1813,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1807,
											"end": 1813,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1807,
											"end": 1813,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1807,
											"end": 1813,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1786,
											"end": 1826,
											"name": "PUSH",
											"source": 1,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 1786,
											"end": 1826,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1823,
											"end": 1824,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1823,
											"end": 1824,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1786,
											"end": 1826,
											"name": "LOG3",
											"source": 1
										},
										{
											"begin": 1853,
											"end": 1854,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1836,
											"end": 1855,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1836,
											"end": 1855,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1836,
											"end": 1855,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1836,
											"end": 1855,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1836,
											"end": 1855,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 1717,
											"end": 1862,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 3907,
											"end": 4004,
											"name": "tag",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3907,
											"end": 4004,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1830,
											"end": 1835,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 1830,
											"end": 1835,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1830,
											"end": 1835,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1816,
											"end": 1826,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 1816,
											"end": 1835,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1808,
											"end": 1860,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "96"
										},
										{
											"begin": 1808,
											"end": 1860,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1808,
											"end": 1860,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1808,
											"end": 1860,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1808,
											"end": 1860,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1808,
											"end": 1860,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1808,
											"end": 1860,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1808,
											"end": 1860,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1808,
											"end": 1860,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1808,
											"end": 1860,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1808,
											"end": 1860,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1808,
											"end": 1860,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1808,
											"end": 1860,
											"name": "PUSH",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 1808,
											"end": 1860,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 1808,
											"end": 1860,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1808,
											"end": 1860,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1808,
											"end": 1860,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "13DB9B1E4818591B5A5B881C195C9B5A5D1D1959"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "62"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1808,
											"end": 1860,
											"name": "PUSH",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 1808,
											"end": 1860,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1808,
											"end": 1860,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1808,
											"end": 1860,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1808,
											"end": 1860,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1808,
											"end": 1860,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1808,
											"end": 1860,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1808,
											"end": 1860,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1808,
											"end": 1860,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1808,
											"end": 1860,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1808,
											"end": 1860,
											"name": "PUSH",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 1808,
											"end": 1860,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1808,
											"end": 1860,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1808,
											"end": 1860,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1808,
											"end": 1860,
											"name": "tag",
											"source": 0,
											"value": "96"
										},
										{
											"begin": 1808,
											"end": 1860,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1366,
											"end": 1374,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "98"
										},
										{
											"begin": 1366,
											"end": 1372,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "29"
										},
										{
											"begin": 1366,
											"end": 1374,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 1366,
											"end": 1374,
											"name": "tag",
											"source": 7,
											"value": "98"
										},
										{
											"begin": 1366,
											"end": 1374,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1365,
											"end": 1374,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 1357,
											"end": 1395,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "99"
										},
										{
											"begin": 1357,
											"end": 1395,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 1357,
											"end": 1395,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1357,
											"end": 1395,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1357,
											"end": 1395,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1357,
											"end": 1395,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1357,
											"end": 1395,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1357,
											"end": 1395,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1357,
											"end": 1395,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 1357,
											"end": 1395,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1357,
											"end": 1395,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1357,
											"end": 1395,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1357,
											"end": 1395,
											"name": "PUSH",
											"source": 7,
											"value": "10"
										},
										{
											"begin": 1357,
											"end": 1395,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 1357,
											"end": 1395,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1357,
											"end": 1395,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1357,
											"end": 1395,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "14185D5CD8589B194E881C185D5CD959"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "82"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1357,
											"end": 1395,
											"name": "PUSH",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 1357,
											"end": 1395,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1357,
											"end": 1395,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1357,
											"end": 1395,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1357,
											"end": 1395,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1357,
											"end": 1395,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1357,
											"end": 1395,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1357,
											"end": 1395,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1357,
											"end": 1395,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1357,
											"end": 1395,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 1357,
											"end": 1395,
											"name": "PUSH",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 1357,
											"end": 1395,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1357,
											"end": 1395,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1357,
											"end": 1395,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 1357,
											"end": 1395,
											"name": "tag",
											"source": 7,
											"value": "99"
										},
										{
											"begin": 1357,
											"end": 1395,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3967,
											"end": 3975,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "101"
										},
										{
											"begin": 3967,
											"end": 3973,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "102"
										},
										{
											"begin": 3967,
											"end": 3975,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 3967,
											"end": 3975,
											"name": "tag",
											"source": 0,
											"value": "101"
										},
										{
											"begin": 3967,
											"end": 3975,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3990,
											"end": 3997,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3990,
											"end": 3997,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3990,
											"end": 3997,
											"name": "PUSH",
											"source": 0,
											"value": "6985A02210A168E66602D3235CB6DB0E70F92B3BA4D376A33C0F3D9434BFF625"
										},
										{
											"begin": 3990,
											"end": 3997,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3990,
											"end": 3997,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3990,
											"end": 3997,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3990,
											"end": 3997,
											"name": "LOG1",
											"source": 0
										},
										{
											"begin": 3907,
											"end": 4004,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 2677,
											"end": 2798,
											"name": "tag",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 2677,
											"end": 2798,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1308,
											"end": 1320,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "104"
										},
										{
											"begin": 1308,
											"end": 1318,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "85"
										},
										{
											"begin": 1308,
											"end": 1320,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1308,
											"end": 1320,
											"name": "tag",
											"source": 1,
											"value": "104"
										},
										{
											"begin": 1308,
											"end": 1320,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1297,
											"end": 1320,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1297,
											"end": 1304,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "105"
										},
										{
											"begin": 1297,
											"end": 1302,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 1297,
											"end": 1304,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1297,
											"end": 1304,
											"name": "tag",
											"source": 1,
											"value": "105"
										},
										{
											"begin": 1297,
											"end": 1304,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1297,
											"end": 1320,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1297,
											"end": 1320,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "106"
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"source": -1,
											"value": "9924EBDF1ADD33D25D4EF888E16131F0A5687B0580A36C21B5C301A6C462EFFE"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "tag",
											"source": 1,
											"value": "106"
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2729,
											"end": 2791,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "108"
										},
										{
											"begin": 2748,
											"end": 2758,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 2760,
											"end": 2765,
											"name": "PUSHIMMUTABLE",
											"source": 0,
											"value": "18"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2760,
											"end": 2775,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2760,
											"end": 2775,
											"name": "PUSH",
											"source": 0,
											"value": "70A08231"
										},
										{
											"begin": 2784,
											"end": 2788,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 2760,
											"end": 2790,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2760,
											"end": 2790,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2760,
											"end": 2790,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2760,
											"end": 2790,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2760,
											"end": 2790,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2760,
											"end": 2790,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 2760,
											"end": 2790,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 2760,
											"end": 2790,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2760,
											"end": 2790,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2760,
											"end": 2790,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2760,
											"end": 2790,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2760,
											"end": 2790,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2760,
											"end": 2790,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2760,
											"end": 2790,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2760,
											"end": 2790,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2760,
											"end": 2790,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2760,
											"end": 2790,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2760,
											"end": 2790,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2760,
											"end": 2790,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2760,
											"end": 2790,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2760,
											"end": 2790,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2760,
											"end": 2790,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2760,
											"end": 2790,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2760,
											"end": 2790,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2760,
											"end": 2790,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2760,
											"end": 2790,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2760,
											"end": 2790,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2760,
											"end": 2790,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2760,
											"end": 2790,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 2760,
											"end": 2790,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2760,
											"end": 2790,
											"name": "EXTCODESIZE",
											"source": 0
										},
										{
											"begin": 2760,
											"end": 2790,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2760,
											"end": 2790,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2760,
											"end": 2790,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2760,
											"end": 2790,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "109"
										},
										{
											"begin": 2760,
											"end": 2790,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2760,
											"end": 2790,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2760,
											"end": 2790,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2760,
											"end": 2790,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2760,
											"end": 2790,
											"name": "tag",
											"source": 0,
											"value": "109"
										},
										{
											"begin": 2760,
											"end": 2790,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2760,
											"end": 2790,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2760,
											"end": 2790,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 2760,
											"end": 2790,
											"name": "STATICCALL",
											"source": 0
										},
										{
											"begin": 2760,
											"end": 2790,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2760,
											"end": 2790,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2760,
											"end": 2790,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2760,
											"end": 2790,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "111"
										},
										{
											"begin": 2760,
											"end": 2790,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2760,
											"end": 2790,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 2760,
											"end": 2790,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2760,
											"end": 2790,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2760,
											"end": 2790,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 2760,
											"end": 2790,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 2760,
											"end": 2790,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2760,
											"end": 2790,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2760,
											"end": 2790,
											"name": "tag",
											"source": 0,
											"value": "111"
										},
										{
											"begin": 2760,
											"end": 2790,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2760,
											"end": 2790,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2760,
											"end": 2790,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2760,
											"end": 2790,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2760,
											"end": 2790,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2760,
											"end": 2790,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2760,
											"end": 2790,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2760,
											"end": 2790,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 2760,
											"end": 2790,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2760,
											"end": 2790,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2760,
											"end": 2790,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 2760,
											"end": 2790,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2760,
											"end": 2790,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 2760,
											"end": 2790,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2760,
											"end": 2790,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2760,
											"end": 2790,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2760,
											"end": 2790,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2760,
											"end": 2790,
											"name": "tag",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 2760,
											"end": 2790,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2760,
											"end": 2790,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2729,
											"end": 2734,
											"name": "PUSHIMMUTABLE",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 2729,
											"end": 2747,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2729,
											"end": 2747,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2729,
											"end": 2791,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2729,
											"end": 2747,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "113"
										},
										{
											"begin": 2729,
											"end": 2791,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2729,
											"end": 2791,
											"name": "tag",
											"source": 0,
											"value": "108"
										},
										{
											"begin": 2729,
											"end": 2791,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2677,
											"end": 2798,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 1085,
											"end": 1170,
											"name": "tag",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 1085,
											"end": 1170,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1131,
											"end": 1138,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1157,
											"end": 1163,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1157,
											"end": 1163,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1085,
											"end": 1170,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1085,
											"end": 1170,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 779,
											"end": 809,
											"name": "tag",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 779,
											"end": 809,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 779,
											"end": 809,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 779,
											"end": 809,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 779,
											"end": 809,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 779,
											"end": 809,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 779,
											"end": 809,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 2493,
											"end": 2606,
											"name": "tag",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 2493,
											"end": 2606,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2546,
											"end": 2550,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2569,
											"end": 2574,
											"name": "PUSHIMMUTABLE",
											"source": 0,
											"value": "18"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2569,
											"end": 2584,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2569,
											"end": 2584,
											"name": "PUSH",
											"source": 0,
											"value": "70A08231"
										},
										{
											"begin": 2593,
											"end": 2597,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 2569,
											"end": 2599,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2569,
											"end": 2599,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2569,
											"end": 2599,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2569,
											"end": 2599,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2569,
											"end": 2599,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2569,
											"end": 2599,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 2569,
											"end": 2599,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 2569,
											"end": 2599,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2569,
											"end": 2599,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2569,
											"end": 2599,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2569,
											"end": 2599,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2569,
											"end": 2599,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2569,
											"end": 2599,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2569,
											"end": 2599,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2569,
											"end": 2599,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2569,
											"end": 2599,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2569,
											"end": 2599,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2569,
											"end": 2599,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2569,
											"end": 2599,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2569,
											"end": 2599,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2569,
											"end": 2599,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2569,
											"end": 2599,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2569,
											"end": 2599,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2569,
											"end": 2599,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2569,
											"end": 2599,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2569,
											"end": 2599,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2569,
											"end": 2599,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2569,
											"end": 2599,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2569,
											"end": 2599,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 2569,
											"end": 2599,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2569,
											"end": 2599,
											"name": "EXTCODESIZE",
											"source": 0
										},
										{
											"begin": 2569,
											"end": 2599,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2569,
											"end": 2599,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2569,
											"end": 2599,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2569,
											"end": 2599,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "116"
										},
										{
											"begin": 2569,
											"end": 2599,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2569,
											"end": 2599,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2569,
											"end": 2599,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2569,
											"end": 2599,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2569,
											"end": 2599,
											"name": "tag",
											"source": 0,
											"value": "116"
										},
										{
											"begin": 2569,
											"end": 2599,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2569,
											"end": 2599,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2569,
											"end": 2599,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 2569,
											"end": 2599,
											"name": "STATICCALL",
											"source": 0
										},
										{
											"begin": 2569,
											"end": 2599,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2569,
											"end": 2599,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2569,
											"end": 2599,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2569,
											"end": 2599,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "118"
										},
										{
											"begin": 2569,
											"end": 2599,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2569,
											"end": 2599,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 2569,
											"end": 2599,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2569,
											"end": 2599,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2569,
											"end": 2599,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 2569,
											"end": 2599,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 2569,
											"end": 2599,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2569,
											"end": 2599,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2569,
											"end": 2599,
											"name": "tag",
											"source": 0,
											"value": "118"
										},
										{
											"begin": 2569,
											"end": 2599,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2569,
											"end": 2599,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2569,
											"end": 2599,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2569,
											"end": 2599,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2569,
											"end": 2599,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2569,
											"end": 2599,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2569,
											"end": 2599,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2569,
											"end": 2599,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 2569,
											"end": 2599,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2569,
											"end": 2599,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2569,
											"end": 2599,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 2569,
											"end": 2599,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2569,
											"end": 2599,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "119"
										},
										{
											"begin": 2569,
											"end": 2599,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2569,
											"end": 2599,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2569,
											"end": 2599,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2569,
											"end": 2599,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2569,
											"end": 2599,
											"name": "tag",
											"source": 0,
											"value": "119"
										},
										{
											"begin": 2569,
											"end": 2599,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2569,
											"end": 2599,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2569,
											"end": 2599,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2493,
											"end": 2606,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2493,
											"end": 2606,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 3085,
											"end": 3171,
											"name": "tag",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 3085,
											"end": 3171,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3154,
											"end": 3164,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 3154,
											"end": 3164,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3085,
											"end": 3171,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3085,
											"end": 3171,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 2905,
											"end": 3079,
											"name": "tag",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 2905,
											"end": 3079,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1308,
											"end": 1320,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "122"
										},
										{
											"begin": 1308,
											"end": 1318,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "85"
										},
										{
											"begin": 1308,
											"end": 1320,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1308,
											"end": 1320,
											"name": "tag",
											"source": 1,
											"value": "122"
										},
										{
											"begin": 1308,
											"end": 1320,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1297,
											"end": 1320,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1297,
											"end": 1304,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "123"
										},
										{
											"begin": 1297,
											"end": 1302,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 1297,
											"end": 1304,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1297,
											"end": 1304,
											"name": "tag",
											"source": 1,
											"value": "123"
										},
										{
											"begin": 1297,
											"end": 1304,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1297,
											"end": 1320,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1297,
											"end": 1320,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "124"
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"source": -1,
											"value": "9924EBDF1ADD33D25D4EF888E16131F0A5687B0580A36C21B5C301A6C462EFFE"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "tag",
											"source": 1,
											"value": "124"
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3045,
											"end": 3055,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 3045,
											"end": 3072,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 2905,
											"end": 3079,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 2259,
											"end": 2487,
											"name": "tag",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 2259,
											"end": 2487,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1366,
											"end": 1374,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "128"
										},
										{
											"begin": 1366,
											"end": 1372,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "29"
										},
										{
											"begin": 1366,
											"end": 1374,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 1366,
											"end": 1374,
											"name": "tag",
											"source": 7,
											"value": "128"
										},
										{
											"begin": 1366,
											"end": 1374,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1365,
											"end": 1374,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 1357,
											"end": 1395,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "129"
										},
										{
											"begin": 1357,
											"end": 1395,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 1357,
											"end": 1395,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1357,
											"end": 1395,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1357,
											"end": 1395,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1357,
											"end": 1395,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1357,
											"end": 1395,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1357,
											"end": 1395,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1357,
											"end": 1395,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 1357,
											"end": 1395,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1357,
											"end": 1395,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1357,
											"end": 1395,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1357,
											"end": 1395,
											"name": "PUSH",
											"source": 7,
											"value": "10"
										},
										{
											"begin": 1357,
											"end": 1395,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 1357,
											"end": 1395,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1357,
											"end": 1395,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1357,
											"end": 1395,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "14185D5CD8589B194E881C185D5CD959"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "82"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1357,
											"end": 1395,
											"name": "PUSH",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 1357,
											"end": 1395,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1357,
											"end": 1395,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1357,
											"end": 1395,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1357,
											"end": 1395,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1357,
											"end": 1395,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1357,
											"end": 1395,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1357,
											"end": 1395,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1357,
											"end": 1395,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1357,
											"end": 1395,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 1357,
											"end": 1395,
											"name": "PUSH",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 1357,
											"end": 1395,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1357,
											"end": 1395,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1357,
											"end": 1395,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 1357,
											"end": 1395,
											"name": "tag",
											"source": 7,
											"value": "129"
										},
										{
											"begin": 1357,
											"end": 1395,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2344,
											"end": 2345,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2334,
											"end": 2341,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2334,
											"end": 2345,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 2326,
											"end": 2368,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "131"
										},
										{
											"begin": 2326,
											"end": 2368,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2326,
											"end": 2368,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2326,
											"end": 2368,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2326,
											"end": 2368,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2326,
											"end": 2368,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2326,
											"end": 2368,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2326,
											"end": 2368,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2326,
											"end": 2368,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2326,
											"end": 2368,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2326,
											"end": 2368,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2326,
											"end": 2368,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2326,
											"end": 2368,
											"name": "PUSH",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 2326,
											"end": 2368,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 2326,
											"end": 2368,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2326,
											"end": 2368,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2326,
											"end": 2368,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "139BDD1A1A5B99C81D1BC819195C1BDCDA5D"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "72"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2326,
											"end": 2368,
											"name": "PUSH",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 2326,
											"end": 2368,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2326,
											"end": 2368,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2326,
											"end": 2368,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2326,
											"end": 2368,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2326,
											"end": 2368,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2326,
											"end": 2368,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2326,
											"end": 2368,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2326,
											"end": 2368,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2326,
											"end": 2368,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2326,
											"end": 2368,
											"name": "PUSH",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 2326,
											"end": 2368,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2326,
											"end": 2368,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2326,
											"end": 2368,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2326,
											"end": 2368,
											"name": "tag",
											"source": 0,
											"value": "131"
										},
										{
											"begin": 2326,
											"end": 2368,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2378,
											"end": 2436,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "132"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2378,
											"end": 2383,
											"name": "PUSHIMMUTABLE",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 2378,
											"end": 2400,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2401,
											"end": 2411,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 2421,
											"end": 2425,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 2428,
											"end": 2435,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 2378,
											"end": 2400,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "133"
										},
										{
											"begin": 2378,
											"end": 2436,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2378,
											"end": 2436,
											"name": "tag",
											"source": 0,
											"value": "132"
										},
										{
											"begin": 2378,
											"end": 2436,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2452,
											"end": 2480,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2452,
											"end": 2480,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2452,
											"end": 2480,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2452,
											"end": 2480,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2452,
											"end": 2480,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2452,
											"end": 2480,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2452,
											"end": 2480,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2452,
											"end": 2480,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2460,
											"end": 2470,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 2460,
											"end": 2470,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2452,
											"end": 2480,
											"name": "PUSH",
											"source": 0,
											"value": "E1FFFCC4923D04B559F4D29A8BFC6CDA04EB5B0D3C460751C2402C5C5CC9109C"
										},
										{
											"begin": 2452,
											"end": 2480,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2452,
											"end": 2480,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2452,
											"end": 2480,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2452,
											"end": 2480,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2452,
											"end": 2480,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2452,
											"end": 2480,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2452,
											"end": 2480,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2452,
											"end": 2480,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2452,
											"end": 2480,
											"name": "LOG2",
											"source": 0
										},
										{
											"begin": 2259,
											"end": 2487,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2259,
											"end": 2487,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 3513,
											"end": 3795,
											"name": "tag",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 3513,
											"end": 3795,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1830,
											"end": 1835,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 1830,
											"end": 1835,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1830,
											"end": 1835,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1816,
											"end": 1826,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 1816,
											"end": 1835,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1808,
											"end": 1860,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "135"
										},
										{
											"begin": 1808,
											"end": 1860,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1808,
											"end": 1860,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1808,
											"end": 1860,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1808,
											"end": 1860,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1808,
											"end": 1860,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1808,
											"end": 1860,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1808,
											"end": 1860,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1808,
											"end": 1860,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1808,
											"end": 1860,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1808,
											"end": 1860,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1808,
											"end": 1860,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1808,
											"end": 1860,
											"name": "PUSH",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 1808,
											"end": 1860,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 1808,
											"end": 1860,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1808,
											"end": 1860,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1808,
											"end": 1860,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "13DB9B1E4818591B5A5B881C195C9B5A5D1D1959"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "62"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1808,
											"end": 1860,
											"name": "PUSH",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 1808,
											"end": 1860,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1808,
											"end": 1860,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1808,
											"end": 1860,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1808,
											"end": 1860,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1808,
											"end": 1860,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1808,
											"end": 1860,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1808,
											"end": 1860,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1808,
											"end": 1860,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1808,
											"end": 1860,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1808,
											"end": 1860,
											"name": "PUSH",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 1808,
											"end": 1860,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1808,
											"end": 1860,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1808,
											"end": 1860,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1808,
											"end": 1860,
											"name": "tag",
											"source": 0,
											"value": "135"
										},
										{
											"begin": 1808,
											"end": 1860,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3614,
											"end": 3619,
											"name": "PUSHIMMUTABLE",
											"source": 0,
											"value": "18"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3596,
											"end": 3620,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3596,
											"end": 3602,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3596,
											"end": 3620,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3596,
											"end": 3620,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 3596,
											"end": 3620,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 3588,
											"end": 3665,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "137"
										},
										{
											"begin": 3588,
											"end": 3665,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3588,
											"end": 3665,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3588,
											"end": 3665,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3588,
											"end": 3665,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3588,
											"end": 3665,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3588,
											"end": 3665,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3588,
											"end": 3665,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3588,
											"end": 3665,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3588,
											"end": 3665,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3588,
											"end": 3665,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3588,
											"end": 3665,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3588,
											"end": 3665,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3588,
											"end": 3665,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3588,
											"end": 3665,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3588,
											"end": 3665,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3588,
											"end": 3665,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3588,
											"end": 3665,
											"name": "PUSH",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 3588,
											"end": 3665,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3588,
											"end": 3665,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3588,
											"end": 3665,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3588,
											"end": 3665,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3588,
											"end": 3665,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3588,
											"end": 3665,
											"name": "PUSH data",
											"source": 0,
											"value": "BCC168664A3C14C72586057EDA5BA29201BA9E86DE7CD2FCC768EFE9BD2F6AC9"
										},
										{
											"begin": 3588,
											"end": 3665,
											"name": "PUSH",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 3588,
											"end": 3665,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3588,
											"end": 3665,
											"name": "CODECOPY",
											"source": 0
										},
										{
											"begin": 3588,
											"end": 3665,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3588,
											"end": 3665,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3588,
											"end": 3665,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3588,
											"end": 3665,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3588,
											"end": 3665,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3588,
											"end": 3665,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3588,
											"end": 3665,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3588,
											"end": 3665,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3588,
											"end": 3665,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3588,
											"end": 3665,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3588,
											"end": 3665,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3588,
											"end": 3665,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 3588,
											"end": 3665,
											"name": "tag",
											"source": 0,
											"value": "137"
										},
										{
											"begin": 3588,
											"end": 3665,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3675,
											"end": 3689,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3699,
											"end": 3705,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3692,
											"end": 3716,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3692,
											"end": 3716,
											"name": "PUSH",
											"source": 0,
											"value": "70A08231"
										},
										{
											"begin": 3725,
											"end": 3729,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 3692,
											"end": 3731,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3692,
											"end": 3731,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3692,
											"end": 3731,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3692,
											"end": 3731,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 3692,
											"end": 3731,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3692,
											"end": 3731,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 3692,
											"end": 3731,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 3692,
											"end": 3731,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3692,
											"end": 3731,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3692,
											"end": 3731,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3692,
											"end": 3731,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3692,
											"end": 3731,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3692,
											"end": 3731,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3692,
											"end": 3731,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3692,
											"end": 3731,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3692,
											"end": 3731,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3692,
											"end": 3731,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3692,
											"end": 3731,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3692,
											"end": 3731,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3692,
											"end": 3731,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3692,
											"end": 3731,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3692,
											"end": 3731,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3692,
											"end": 3731,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3692,
											"end": 3731,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3692,
											"end": 3731,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3692,
											"end": 3731,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3692,
											"end": 3731,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3692,
											"end": 3731,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3692,
											"end": 3731,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 3692,
											"end": 3731,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3692,
											"end": 3731,
											"name": "EXTCODESIZE",
											"source": 0
										},
										{
											"begin": 3692,
											"end": 3731,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 3692,
											"end": 3731,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3692,
											"end": 3731,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 3692,
											"end": 3731,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "138"
										},
										{
											"begin": 3692,
											"end": 3731,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3692,
											"end": 3731,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3692,
											"end": 3731,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3692,
											"end": 3731,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 3692,
											"end": 3731,
											"name": "tag",
											"source": 0,
											"value": "138"
										},
										{
											"begin": 3692,
											"end": 3731,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3692,
											"end": 3731,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3692,
											"end": 3731,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 3692,
											"end": 3731,
											"name": "STATICCALL",
											"source": 0
										},
										{
											"begin": 3692,
											"end": 3731,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 3692,
											"end": 3731,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3692,
											"end": 3731,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 3692,
											"end": 3731,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "140"
										},
										{
											"begin": 3692,
											"end": 3731,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3692,
											"end": 3731,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 3692,
											"end": 3731,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3692,
											"end": 3731,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3692,
											"end": 3731,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 3692,
											"end": 3731,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 3692,
											"end": 3731,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3692,
											"end": 3731,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 3692,
											"end": 3731,
											"name": "tag",
											"source": 0,
											"value": "140"
										},
										{
											"begin": 3692,
											"end": 3731,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3692,
											"end": 3731,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3692,
											"end": 3731,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3692,
											"end": 3731,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3692,
											"end": 3731,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3692,
											"end": 3731,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3692,
											"end": 3731,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3692,
											"end": 3731,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 3692,
											"end": 3731,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3692,
											"end": 3731,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3692,
											"end": 3731,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 3692,
											"end": 3731,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 3692,
											"end": 3731,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "141"
										},
										{
											"begin": 3692,
											"end": 3731,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3692,
											"end": 3731,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3692,
											"end": 3731,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3692,
											"end": 3731,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 3692,
											"end": 3731,
											"name": "tag",
											"source": 0,
											"value": "141"
										},
										{
											"begin": 3692,
											"end": 3731,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3692,
											"end": 3731,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3692,
											"end": 3731,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3741,
											"end": 3788,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "142"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3741,
											"end": 3768,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3741,
											"end": 3768,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3769,
											"end": 3779,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 3692,
											"end": 3731,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3741,
											"end": 3768,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "113"
										},
										{
											"begin": 3741,
											"end": 3788,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 3741,
											"end": 3788,
											"name": "tag",
											"source": 0,
											"value": "142"
										},
										{
											"begin": 3741,
											"end": 3788,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1870,
											"end": 1871,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3513,
											"end": 3795,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3513,
											"end": 3795,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 868,
											"end": 890,
											"name": "tag",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 868,
											"end": 890,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 868,
											"end": 890,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 868,
											"end": 890,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 868,
											"end": 890,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 868,
											"end": 890,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 2011,
											"end": 2251,
											"name": "tag",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 2011,
											"end": 2251,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1308,
											"end": 1320,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "144"
										},
										{
											"begin": 1308,
											"end": 1318,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "85"
										},
										{
											"begin": 1308,
											"end": 1320,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1308,
											"end": 1320,
											"name": "tag",
											"source": 1,
											"value": "144"
										},
										{
											"begin": 1308,
											"end": 1320,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1297,
											"end": 1320,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1297,
											"end": 1304,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "145"
										},
										{
											"begin": 1297,
											"end": 1302,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 1297,
											"end": 1304,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1297,
											"end": 1304,
											"name": "tag",
											"source": 1,
											"value": "145"
										},
										{
											"begin": 1297,
											"end": 1304,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1297,
											"end": 1320,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1297,
											"end": 1320,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "146"
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"source": -1,
											"value": "9924EBDF1ADD33D25D4EF888E16131F0A5687B0580A36C21B5C301A6C462EFFE"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "tag",
											"source": 1,
											"value": "146"
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2099,
											"end": 2121,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2099,
											"end": 2121,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2091,
											"end": 2164,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "148"
										},
										{
											"begin": 2091,
											"end": 2164,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2091,
											"end": 2164,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2091,
											"end": 2164,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2091,
											"end": 2164,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2091,
											"end": 2164,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2091,
											"end": 2164,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 2091,
											"end": 2164,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2091,
											"end": 2164,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2091,
											"end": 2164,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2091,
											"end": 2164,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2091,
											"end": 2164,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2091,
											"end": 2164,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2091,
											"end": 2164,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2091,
											"end": 2164,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2091,
											"end": 2164,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2091,
											"end": 2164,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2091,
											"end": 2164,
											"name": "PUSH",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 2091,
											"end": 2164,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2091,
											"end": 2164,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2091,
											"end": 2164,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2091,
											"end": 2164,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2091,
											"end": 2164,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2091,
											"end": 2164,
											"name": "PUSH data",
											"source": 1,
											"value": "245F15FF17F551913A7A18385165551503906A406F905AC1C2437281A7CD0CFE"
										},
										{
											"begin": 2091,
											"end": 2164,
											"name": "PUSH",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 2091,
											"end": 2164,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2091,
											"end": 2164,
											"name": "CODECOPY",
											"source": 1
										},
										{
											"begin": 2091,
											"end": 2164,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2091,
											"end": 2164,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2091,
											"end": 2164,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2091,
											"end": 2164,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2091,
											"end": 2164,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2091,
											"end": 2164,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2091,
											"end": 2164,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2091,
											"end": 2164,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2091,
											"end": 2164,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2091,
											"end": 2164,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2091,
											"end": 2164,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2091,
											"end": 2164,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2091,
											"end": 2164,
											"name": "tag",
											"source": 1,
											"value": "148"
										},
										{
											"begin": 2091,
											"end": 2164,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2200,
											"end": 2206,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2200,
											"end": 2206,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2200,
											"end": 2206,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2179,
											"end": 2217,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2179,
											"end": 2217,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2179,
											"end": 2217,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2179,
											"end": 2217,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 2179,
											"end": 2217,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2179,
											"end": 2217,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 2200,
											"end": 2206,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2200,
											"end": 2206,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2200,
											"end": 2206,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2179,
											"end": 2217,
											"name": "PUSH",
											"source": 1,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 2179,
											"end": 2217,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2179,
											"end": 2217,
											"name": "LOG3",
											"source": 1
										},
										{
											"begin": 2227,
											"end": 2233,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2227,
											"end": 2244,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2227,
											"end": 2244,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 2227,
											"end": 2244,
											"name": "AND",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2227,
											"end": 2244,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2227,
											"end": 2244,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2227,
											"end": 2244,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2227,
											"end": 2244,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2227,
											"end": 2244,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2227,
											"end": 2244,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2227,
											"end": 2244,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2227,
											"end": 2244,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 2227,
											"end": 2244,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2227,
											"end": 2244,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 2011,
											"end": 2251,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 4397,
											"end": 4796,
											"name": "tag",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 4397,
											"end": 4796,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1366,
											"end": 1374,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "150"
										},
										{
											"begin": 1366,
											"end": 1372,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "29"
										},
										{
											"begin": 1366,
											"end": 1374,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 1366,
											"end": 1374,
											"name": "tag",
											"source": 7,
											"value": "150"
										},
										{
											"begin": 1366,
											"end": 1374,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1365,
											"end": 1374,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 1357,
											"end": 1395,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "151"
										},
										{
											"begin": 1357,
											"end": 1395,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 1357,
											"end": 1395,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1357,
											"end": 1395,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1357,
											"end": 1395,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1357,
											"end": 1395,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1357,
											"end": 1395,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1357,
											"end": 1395,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1357,
											"end": 1395,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 1357,
											"end": 1395,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1357,
											"end": 1395,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1357,
											"end": 1395,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1357,
											"end": 1395,
											"name": "PUSH",
											"source": 7,
											"value": "10"
										},
										{
											"begin": 1357,
											"end": 1395,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 1357,
											"end": 1395,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1357,
											"end": 1395,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1357,
											"end": 1395,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "14185D5CD8589B194E881C185D5CD959"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "82"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1357,
											"end": 1395,
											"name": "PUSH",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 1357,
											"end": 1395,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1357,
											"end": 1395,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1357,
											"end": 1395,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1357,
											"end": 1395,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1357,
											"end": 1395,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1357,
											"end": 1395,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1357,
											"end": 1395,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1357,
											"end": 1395,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1357,
											"end": 1395,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 1357,
											"end": 1395,
											"name": "PUSH",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 1357,
											"end": 1395,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1357,
											"end": 1395,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1357,
											"end": 1395,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 1357,
											"end": 1395,
											"name": "tag",
											"source": 7,
											"value": "151"
										},
										{
											"begin": 1357,
											"end": 1395,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2015,
											"end": 2030,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 2015,
											"end": 2030,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2015,
											"end": 2030,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2001,
											"end": 2011,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 2001,
											"end": 2030,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1993,
											"end": 2060,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "153"
										},
										{
											"begin": 1993,
											"end": 2060,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1993,
											"end": 2060,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1993,
											"end": 2060,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1993,
											"end": 2060,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1993,
											"end": 2060,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1993,
											"end": 2060,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1993,
											"end": 2060,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1993,
											"end": 2060,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1993,
											"end": 2060,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1993,
											"end": 2060,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1993,
											"end": 2060,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1993,
											"end": 2060,
											"name": "PUSH",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 1993,
											"end": 2060,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 1993,
											"end": 2060,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1993,
											"end": 2060,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1993,
											"end": 2060,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1993,
											"end": 2060,
											"name": "PUSH",
											"source": 0,
											"value": "4E6F7420616E20617574686F7269736564207370656E64657200000000000000"
										},
										{
											"begin": 1993,
											"end": 2060,
											"name": "PUSH",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 1993,
											"end": 2060,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1993,
											"end": 2060,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1993,
											"end": 2060,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1993,
											"end": 2060,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1993,
											"end": 2060,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1993,
											"end": 2060,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1993,
											"end": 2060,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1993,
											"end": 2060,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1993,
											"end": 2060,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1993,
											"end": 2060,
											"name": "PUSH",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 1993,
											"end": 2060,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1993,
											"end": 2060,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1993,
											"end": 2060,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1993,
											"end": 2060,
											"name": "tag",
											"source": 0,
											"value": "153"
										},
										{
											"begin": 1993,
											"end": 2060,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4503,
											"end": 4504,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4493,
											"end": 4500,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4493,
											"end": 4504,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 4485,
											"end": 4528,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "155"
										},
										{
											"begin": 4485,
											"end": 4528,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 4485,
											"end": 4528,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4485,
											"end": 4528,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4485,
											"end": 4528,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4485,
											"end": 4528,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4485,
											"end": 4528,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4485,
											"end": 4528,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4485,
											"end": 4528,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 4485,
											"end": 4528,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4485,
											"end": 4528,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4485,
											"end": 4528,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4485,
											"end": 4528,
											"name": "PUSH",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 4485,
											"end": 4528,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 4485,
											"end": 4528,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4485,
											"end": 4528,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4485,
											"end": 4528,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4E6F7468696E6720746F207769746864726177"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "68"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4485,
											"end": 4528,
											"name": "PUSH",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 4485,
											"end": 4528,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4485,
											"end": 4528,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4485,
											"end": 4528,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4485,
											"end": 4528,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4485,
											"end": 4528,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 4485,
											"end": 4528,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4485,
											"end": 4528,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4485,
											"end": 4528,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4485,
											"end": 4528,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 4485,
											"end": 4528,
											"name": "PUSH",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 4485,
											"end": 4528,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4485,
											"end": 4528,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4485,
											"end": 4528,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 4485,
											"end": 4528,
											"name": "tag",
											"source": 0,
											"value": "155"
										},
										{
											"begin": 4485,
											"end": 4528,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4579,
											"end": 4586,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4546,
											"end": 4551,
											"name": "PUSHIMMUTABLE",
											"source": 0,
											"value": "18"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4546,
											"end": 4561,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4546,
											"end": 4561,
											"name": "PUSH",
											"source": 0,
											"value": "70A08231"
										},
										{
											"begin": 4570,
											"end": 4574,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 4546,
											"end": 4576,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4546,
											"end": 4576,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 4546,
											"end": 4576,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4546,
											"end": 4576,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 4546,
											"end": 4576,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4546,
											"end": 4576,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 4546,
											"end": 4576,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 4546,
											"end": 4576,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4546,
											"end": 4576,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4546,
											"end": 4576,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 4546,
											"end": 4576,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4546,
											"end": 4576,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4546,
											"end": 4576,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4546,
											"end": 4576,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4546,
											"end": 4576,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4546,
											"end": 4576,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4546,
											"end": 4576,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4546,
											"end": 4576,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4546,
											"end": 4576,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4546,
											"end": 4576,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4546,
											"end": 4576,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4546,
											"end": 4576,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4546,
											"end": 4576,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4546,
											"end": 4576,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 4546,
											"end": 4576,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4546,
											"end": 4576,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 4546,
											"end": 4576,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 4546,
											"end": 4576,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4546,
											"end": 4576,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 4546,
											"end": 4576,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4546,
											"end": 4576,
											"name": "EXTCODESIZE",
											"source": 0
										},
										{
											"begin": 4546,
											"end": 4576,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 4546,
											"end": 4576,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4546,
											"end": 4576,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 4546,
											"end": 4576,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "156"
										},
										{
											"begin": 4546,
											"end": 4576,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 4546,
											"end": 4576,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4546,
											"end": 4576,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4546,
											"end": 4576,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 4546,
											"end": 4576,
											"name": "tag",
											"source": 0,
											"value": "156"
										},
										{
											"begin": 4546,
											"end": 4576,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4546,
											"end": 4576,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4546,
											"end": 4576,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 4546,
											"end": 4576,
											"name": "STATICCALL",
											"source": 0
										},
										{
											"begin": 4546,
											"end": 4576,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 4546,
											"end": 4576,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4546,
											"end": 4576,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 4546,
											"end": 4576,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "158"
										},
										{
											"begin": 4546,
											"end": 4576,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 4546,
											"end": 4576,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 4546,
											"end": 4576,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4546,
											"end": 4576,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4546,
											"end": 4576,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 4546,
											"end": 4576,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 4546,
											"end": 4576,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4546,
											"end": 4576,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 4546,
											"end": 4576,
											"name": "tag",
											"source": 0,
											"value": "158"
										},
										{
											"begin": 4546,
											"end": 4576,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4546,
											"end": 4576,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4546,
											"end": 4576,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4546,
											"end": 4576,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4546,
											"end": 4576,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4546,
											"end": 4576,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4546,
											"end": 4576,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 4546,
											"end": 4576,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 4546,
											"end": 4576,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4546,
											"end": 4576,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4546,
											"end": 4576,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 4546,
											"end": 4576,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 4546,
											"end": 4576,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "159"
										},
										{
											"begin": 4546,
											"end": 4576,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 4546,
											"end": 4576,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4546,
											"end": 4576,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4546,
											"end": 4576,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 4546,
											"end": 4576,
											"name": "tag",
											"source": 0,
											"value": "159"
										},
										{
											"begin": 4546,
											"end": 4576,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4546,
											"end": 4576,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 4546,
											"end": 4586,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 4538,
											"end": 4624,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "160"
										},
										{
											"begin": 4538,
											"end": 4624,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 4538,
											"end": 4624,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4538,
											"end": 4624,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4538,
											"end": 4624,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4538,
											"end": 4624,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4538,
											"end": 4624,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 4538,
											"end": 4624,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4538,
											"end": 4624,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4538,
											"end": 4624,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4538,
											"end": 4624,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4538,
											"end": 4624,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4538,
											"end": 4624,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4538,
											"end": 4624,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4538,
											"end": 4624,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 4538,
											"end": 4624,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4538,
											"end": 4624,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4538,
											"end": 4624,
											"name": "PUSH",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 4538,
											"end": 4624,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4538,
											"end": 4624,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4538,
											"end": 4624,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4538,
											"end": 4624,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4538,
											"end": 4624,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4538,
											"end": 4624,
											"name": "PUSH data",
											"source": 0,
											"value": "2186895F526E488D7755616513A09664EEDF819BFAFE4F6FA94396F5AFB14E38"
										},
										{
											"begin": 4538,
											"end": 4624,
											"name": "PUSH",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 4538,
											"end": 4624,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4538,
											"end": 4624,
											"name": "CODECOPY",
											"source": 0
										},
										{
											"begin": 4538,
											"end": 4624,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4538,
											"end": 4624,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4538,
											"end": 4624,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4538,
											"end": 4624,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4538,
											"end": 4624,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4538,
											"end": 4624,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4538,
											"end": 4624,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 4538,
											"end": 4624,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4538,
											"end": 4624,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4538,
											"end": 4624,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 4538,
											"end": 4624,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4538,
											"end": 4624,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 4538,
											"end": 4624,
											"name": "tag",
											"source": 0,
											"value": "160"
										},
										{
											"begin": 4538,
											"end": 4624,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4638,
											"end": 4659,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "161"
										},
										{
											"begin": 4651,
											"end": 4658,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4638,
											"end": 4650,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "162"
										},
										{
											"begin": 4638,
											"end": 4659,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 4638,
											"end": 4659,
											"name": "tag",
											"source": 0,
											"value": "161"
										},
										{
											"begin": 4638,
											"end": 4659,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4634,
											"end": 4752,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 4634,
											"end": 4752,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "164"
										},
										{
											"begin": 4634,
											"end": 4752,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 4674,
											"end": 4684,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 4674,
											"end": 4695,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4674,
											"end": 4695,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 4674,
											"end": 4695,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4674,
											"end": 4695,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4674,
											"end": 4695,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4674,
											"end": 4695,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 4709,
											"end": 4741,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "164"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4709,
											"end": 4714,
											"name": "PUSHIMMUTABLE",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 4709,
											"end": 4727,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4728,
											"end": 4731,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 4688,
											"end": 4695,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 4709,
											"end": 4727,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "113"
										},
										{
											"begin": 4709,
											"end": 4741,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 4709,
											"end": 4741,
											"name": "tag",
											"source": 0,
											"value": "164"
										},
										{
											"begin": 4709,
											"end": 4741,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4767,
											"end": 4789,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4767,
											"end": 4789,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4767,
											"end": 4789,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 4767,
											"end": 4789,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4767,
											"end": 4789,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4767,
											"end": 4789,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4767,
											"end": 4789,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4767,
											"end": 4789,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4767,
											"end": 4789,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 4767,
											"end": 4789,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4767,
											"end": 4789,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4767,
											"end": 4789,
											"name": "PUSH",
											"source": 0,
											"value": "884EDAD9CE6FA2440D8A54CC123490EB96D2768479D49FF9C7366125A9424364"
										},
										{
											"begin": 4767,
											"end": 4789,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4767,
											"end": 4789,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4767,
											"end": 4789,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4767,
											"end": 4789,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4767,
											"end": 4789,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 4767,
											"end": 4789,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4767,
											"end": 4789,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4767,
											"end": 4789,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4767,
											"end": 4789,
											"name": "LOG2",
											"source": 0
										},
										{
											"begin": 4397,
											"end": 4796,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4397,
											"end": 4796,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4397,
											"end": 4796,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 753,
											"end": 773,
											"name": "tag",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 753,
											"end": 773,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 753,
											"end": 773,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 753,
											"end": 773,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 753,
											"end": 773,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 753,
											"end": 773,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 753,
											"end": 773,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 699,
											"end": 728,
											"name": "tag",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 699,
											"end": 728,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 699,
											"end": 728,
											"name": "PUSHIMMUTABLE",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 699,
											"end": 728,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 699,
											"end": 728,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 1348,
											"end": 1961,
											"name": "tag",
											"source": 4,
											"value": "72"
										},
										{
											"begin": 1348,
											"end": 1961,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1713,
											"end": 1723,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1713,
											"end": 1723,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 1713,
											"end": 1723,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1712,
											"end": 1774,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "166"
										},
										{
											"begin": 1712,
											"end": 1774,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1729,
											"end": 1768,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1729,
											"end": 1768,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1729,
											"end": 1768,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "6EB1769F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1729,
											"end": 1768,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1729,
											"end": 1768,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1753,
											"end": 1757,
											"name": "ADDRESS",
											"source": 4
										},
										{
											"begin": 1729,
											"end": 1768,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 1729,
											"end": 1768,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1729,
											"end": 1768,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1729,
											"end": 1768,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1729,
											"end": 1768,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 1729,
											"end": 1768,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1729,
											"end": 1768,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1729,
											"end": 1768,
											"name": "PUSH",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 1729,
											"end": 1768,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1729,
											"end": 1768,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1729,
											"end": 1768,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1729,
											"end": 1768,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1729,
											"end": 1768,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1729,
											"end": 1744,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1729,
											"end": 1744,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 1729,
											"end": 1744,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1729,
											"end": 1744,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1729,
											"end": 1744,
											"name": "PUSH",
											"source": 4,
											"value": "DD62ED3E"
										},
										{
											"begin": 1729,
											"end": 1744,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1729,
											"end": 1768,
											"name": "PUSH",
											"source": 4,
											"value": "44"
										},
										{
											"begin": 1729,
											"end": 1768,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1729,
											"end": 1768,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1729,
											"end": 1768,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1729,
											"end": 1768,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 1729,
											"end": 1768,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1729,
											"end": 1768,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 1729,
											"end": 1768,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1729,
											"end": 1768,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1729,
											"end": 1768,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1729,
											"end": 1768,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1729,
											"end": 1768,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1729,
											"end": 1768,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 1729,
											"end": 1768,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1729,
											"end": 1768,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1729,
											"end": 1744,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 1729,
											"end": 1768,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1729,
											"end": 1768,
											"name": "EXTCODESIZE",
											"source": 4
										},
										{
											"begin": 1729,
											"end": 1768,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 1729,
											"end": 1768,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1729,
											"end": 1768,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 1729,
											"end": 1768,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "167"
										},
										{
											"begin": 1729,
											"end": 1768,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1729,
											"end": 1768,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1729,
											"end": 1768,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1729,
											"end": 1768,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 1729,
											"end": 1768,
											"name": "tag",
											"source": 4,
											"value": "167"
										},
										{
											"begin": 1729,
											"end": 1768,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1729,
											"end": 1768,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1729,
											"end": 1768,
											"name": "GAS",
											"source": 4
										},
										{
											"begin": 1729,
											"end": 1768,
											"name": "STATICCALL",
											"source": 4
										},
										{
											"begin": 1729,
											"end": 1768,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 1729,
											"end": 1768,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1729,
											"end": 1768,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 1729,
											"end": 1768,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "169"
										},
										{
											"begin": 1729,
											"end": 1768,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1729,
											"end": 1768,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 1729,
											"end": 1768,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1729,
											"end": 1768,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1729,
											"end": 1768,
											"name": "RETURNDATACOPY",
											"source": 4
										},
										{
											"begin": 1729,
											"end": 1768,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 1729,
											"end": 1768,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1729,
											"end": 1768,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 1729,
											"end": 1768,
											"name": "tag",
											"source": 4,
											"value": "169"
										},
										{
											"begin": 1729,
											"end": 1768,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1729,
											"end": 1768,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1729,
											"end": 1768,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1729,
											"end": 1768,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1729,
											"end": 1768,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1729,
											"end": 1768,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1729,
											"end": 1768,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1729,
											"end": 1768,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 1729,
											"end": 1768,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1729,
											"end": 1768,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1729,
											"end": 1768,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 1729,
											"end": 1768,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 1729,
											"end": 1768,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "170"
										},
										{
											"begin": 1729,
											"end": 1768,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1729,
											"end": 1768,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1729,
											"end": 1768,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1729,
											"end": 1768,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 1729,
											"end": 1768,
											"name": "tag",
											"source": 4,
											"value": "170"
										},
										{
											"begin": 1729,
											"end": 1768,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1729,
											"end": 1768,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1729,
											"end": 1773,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 1712,
											"end": 1774,
											"name": "tag",
											"source": 4,
											"value": "166"
										},
										{
											"begin": 1712,
											"end": 1774,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1704,
											"end": 1854,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "171"
										},
										{
											"begin": 1704,
											"end": 1854,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1704,
											"end": 1854,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1704,
											"end": 1854,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1704,
											"end": 1854,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1704,
											"end": 1854,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1704,
											"end": 1854,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 1704,
											"end": 1854,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1704,
											"end": 1854,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1704,
											"end": 1854,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1704,
											"end": 1854,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1704,
											"end": 1854,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1704,
											"end": 1854,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1704,
											"end": 1854,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1704,
											"end": 1854,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 1704,
											"end": 1854,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1704,
											"end": 1854,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1704,
											"end": 1854,
											"name": "PUSH",
											"source": 4,
											"value": "36"
										},
										{
											"begin": 1704,
											"end": 1854,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1704,
											"end": 1854,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1704,
											"end": 1854,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1704,
											"end": 1854,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1704,
											"end": 1854,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1704,
											"end": 1854,
											"name": "PUSH data",
											"source": 4,
											"value": "EF945DDB1BFDC0DA870FEB4560D868B047642B4AC7F2FB7F8B7C51CB4A411E25"
										},
										{
											"begin": 1704,
											"end": 1854,
											"name": "PUSH",
											"source": 4,
											"value": "36"
										},
										{
											"begin": 1704,
											"end": 1854,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1704,
											"end": 1854,
											"name": "CODECOPY",
											"source": 4
										},
										{
											"begin": 1704,
											"end": 1854,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1704,
											"end": 1854,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1704,
											"end": 1854,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1704,
											"end": 1854,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1704,
											"end": 1854,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1704,
											"end": 1854,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1704,
											"end": 1854,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1704,
											"end": 1854,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1704,
											"end": 1854,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1704,
											"end": 1854,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 1704,
											"end": 1854,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1704,
											"end": 1854,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 1704,
											"end": 1854,
											"name": "tag",
											"source": 4,
											"value": "171"
										},
										{
											"begin": 1704,
											"end": 1854,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1891,
											"end": 1953,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1891,
											"end": 1953,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1891,
											"end": 1953,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1891,
											"end": 1953,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 1891,
											"end": 1953,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1891,
											"end": 1953,
											"name": "PUSH",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 1891,
											"end": 1953,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1891,
											"end": 1953,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1891,
											"end": 1953,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1891,
											"end": 1953,
											"name": "PUSH",
											"source": 4,
											"value": "44"
										},
										{
											"begin": 1891,
											"end": 1953,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1891,
											"end": 1953,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1891,
											"end": 1953,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1891,
											"end": 1953,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 1891,
											"end": 1953,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1891,
											"end": 1953,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1891,
											"end": 1953,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1891,
											"end": 1953,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1891,
											"end": 1953,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1891,
											"end": 1953,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1891,
											"end": 1953,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 1891,
											"end": 1953,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1891,
											"end": 1953,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1891,
											"end": 1953,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1891,
											"end": 1953,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1891,
											"end": 1953,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1891,
											"end": 1953,
											"name": "PUSH",
											"source": 4,
											"value": "64"
										},
										{
											"begin": 1891,
											"end": 1953,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1891,
											"end": 1953,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1891,
											"end": 1953,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1891,
											"end": 1953,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1891,
											"end": 1953,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1891,
											"end": 1953,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1891,
											"end": 1953,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1891,
											"end": 1953,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1891,
											"end": 1953,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1891,
											"end": 1953,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1891,
											"end": 1953,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1891,
											"end": 1953,
											"name": "AND",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "95EA7B3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1891,
											"end": 1953,
											"name": "OR",
											"source": 4
										},
										{
											"begin": 1891,
											"end": 1953,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1891,
											"end": 1953,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1864,
											"end": 1954,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "172"
										},
										{
											"begin": 1864,
											"end": 1954,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1884,
											"end": 1889,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 1884,
											"end": 1889,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1864,
											"end": 1883,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "173"
										},
										{
											"begin": 1864,
											"end": 1954,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 1864,
											"end": 1954,
											"name": "tag",
											"source": 4,
											"value": "172"
										},
										{
											"begin": 1864,
											"end": 1954,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1348,
											"end": 1961,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1348,
											"end": 1961,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1348,
											"end": 1961,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1348,
											"end": 1961,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 3581,
											"end": 3774,
											"name": "tag",
											"source": 5,
											"value": "73"
										},
										{
											"begin": 3581,
											"end": 3774,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3684,
											"end": 3696,
											"name": "PUSH",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 3715,
											"end": 3767,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "175"
										},
										{
											"begin": 3737,
											"end": 3743,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 3745,
											"end": 3749,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 3751,
											"end": 3752,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3754,
											"end": 3766,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 3715,
											"end": 3736,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "176"
										},
										{
											"begin": 3715,
											"end": 3767,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 3715,
											"end": 3767,
											"name": "tag",
											"source": 5,
											"value": "175"
										},
										{
											"begin": 3715,
											"end": 3767,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3708,
											"end": 3767,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3708,
											"end": 3767,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3581,
											"end": 3774,
											"name": "tag",
											"source": 5,
											"value": "174"
										},
										{
											"begin": 3581,
											"end": 3774,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3581,
											"end": 3774,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 3581,
											"end": 3774,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 3581,
											"end": 3774,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3581,
											"end": 3774,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3581,
											"end": 3774,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3581,
											"end": 3774,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 2064,
											"end": 2181,
											"name": "tag",
											"source": 7,
											"value": "81"
										},
										{
											"begin": 2064,
											"end": 2181,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1631,
											"end": 1639,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "178"
										},
										{
											"begin": 1631,
											"end": 1637,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "29"
										},
										{
											"begin": 1631,
											"end": 1639,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 1631,
											"end": 1639,
											"name": "tag",
											"source": 7,
											"value": "178"
										},
										{
											"begin": 1631,
											"end": 1639,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1623,
											"end": 1664,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "179"
										},
										{
											"begin": 1623,
											"end": 1664,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 1623,
											"end": 1664,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1623,
											"end": 1664,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1623,
											"end": 1664,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1623,
											"end": 1664,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1623,
											"end": 1664,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1623,
											"end": 1664,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1623,
											"end": 1664,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 1623,
											"end": 1664,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1623,
											"end": 1664,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1623,
											"end": 1664,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1623,
											"end": 1664,
											"name": "PUSH",
											"source": 7,
											"value": "14"
										},
										{
											"begin": 1623,
											"end": 1664,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 1623,
											"end": 1664,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1623,
											"end": 1664,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1623,
											"end": 1664,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "14185D5CD8589B194E881B9BDD081C185D5CD959"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "62"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1623,
											"end": 1664,
											"name": "PUSH",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 1623,
											"end": 1664,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1623,
											"end": 1664,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1623,
											"end": 1664,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1623,
											"end": 1664,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1623,
											"end": 1664,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1623,
											"end": 1664,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1623,
											"end": 1664,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1623,
											"end": 1664,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1623,
											"end": 1664,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 1623,
											"end": 1664,
											"name": "PUSH",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 1623,
											"end": 1664,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1623,
											"end": 1664,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1623,
											"end": 1664,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 1623,
											"end": 1664,
											"name": "tag",
											"source": 7,
											"value": "179"
										},
										{
											"begin": 1623,
											"end": 1664,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2132,
											"end": 2137,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2122,
											"end": 2137,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2122,
											"end": 2137,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 2122,
											"end": 2137,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2122,
											"end": 2137,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2122,
											"end": 2137,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 2152,
											"end": 2174,
											"name": "PUSH",
											"source": 7,
											"value": "5DB9EE0A495BF2E6FF9C91A7834C1BA4FDD244A5E8AA4E537BD38AEAE4B073AA"
										},
										{
											"begin": 2161,
											"end": 2173,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "181"
										},
										{
											"begin": 2161,
											"end": 2171,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "85"
										},
										{
											"begin": 2161,
											"end": 2173,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 2161,
											"end": 2173,
											"name": "tag",
											"source": 7,
											"value": "181"
										},
										{
											"begin": 2161,
											"end": 2173,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2152,
											"end": 2174,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2152,
											"end": 2174,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2152,
											"end": 2174,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2152,
											"end": 2174,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2152,
											"end": 2174,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 2152,
											"end": 2174,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2152,
											"end": 2174,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2152,
											"end": 2174,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2152,
											"end": 2174,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 2152,
											"end": 2174,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2152,
											"end": 2174,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2152,
											"end": 2174,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2152,
											"end": 2174,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 2152,
											"end": 2174,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2152,
											"end": 2174,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2152,
											"end": 2174,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2152,
											"end": 2174,
											"name": "LOG1",
											"source": 7
										},
										{
											"begin": 2064,
											"end": 2181,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 598,
											"end": 702,
											"name": "tag",
											"source": 6,
											"value": "85"
										},
										{
											"begin": 598,
											"end": 702,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 685,
											"end": 695,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 598,
											"end": 702,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 598,
											"end": 702,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 1817,
											"end": 1932,
											"name": "tag",
											"source": 7,
											"value": "102"
										},
										{
											"begin": 1817,
											"end": 1932,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1366,
											"end": 1374,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "184"
										},
										{
											"begin": 1366,
											"end": 1372,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "29"
										},
										{
											"begin": 1366,
											"end": 1374,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 1366,
											"end": 1374,
											"name": "tag",
											"source": 7,
											"value": "184"
										},
										{
											"begin": 1366,
											"end": 1374,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1365,
											"end": 1374,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 1357,
											"end": 1395,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "185"
										},
										{
											"begin": 1357,
											"end": 1395,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 1357,
											"end": 1395,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1357,
											"end": 1395,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1357,
											"end": 1395,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1357,
											"end": 1395,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1357,
											"end": 1395,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1357,
											"end": 1395,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1357,
											"end": 1395,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 1357,
											"end": 1395,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1357,
											"end": 1395,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1357,
											"end": 1395,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1357,
											"end": 1395,
											"name": "PUSH",
											"source": 7,
											"value": "10"
										},
										{
											"begin": 1357,
											"end": 1395,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 1357,
											"end": 1395,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1357,
											"end": 1395,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1357,
											"end": 1395,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "14185D5CD8589B194E881C185D5CD959"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "82"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1357,
											"end": 1395,
											"name": "PUSH",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 1357,
											"end": 1395,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1357,
											"end": 1395,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1357,
											"end": 1395,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1357,
											"end": 1395,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1357,
											"end": 1395,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1357,
											"end": 1395,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1357,
											"end": 1395,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1357,
											"end": 1395,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1357,
											"end": 1395,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 1357,
											"end": 1395,
											"name": "PUSH",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 1357,
											"end": 1395,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1357,
											"end": 1395,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1357,
											"end": 1395,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 1357,
											"end": 1395,
											"name": "tag",
											"source": 7,
											"value": "185"
										},
										{
											"begin": 1357,
											"end": 1395,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1876,
											"end": 1883,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1876,
											"end": 1890,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1876,
											"end": 1890,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1876,
											"end": 1890,
											"name": "AND",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1876,
											"end": 1890,
											"name": "OR",
											"source": 7
										},
										{
											"begin": 1876,
											"end": 1890,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1876,
											"end": 1890,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 1905,
											"end": 1925,
											"name": "PUSH",
											"source": 7,
											"value": "62E78CEA01BEE320CD4E420270B5EA74000D11B0C9F74754EBDBFC544B05A258"
										},
										{
											"begin": 1912,
											"end": 1924,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "181"
										},
										{
											"begin": 1912,
											"end": 1922,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "85"
										},
										{
											"begin": 1912,
											"end": 1924,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 704,
											"end": 879,
											"name": "tag",
											"source": 4,
											"value": "113"
										},
										{
											"begin": 704,
											"end": 879,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 813,
											"end": 871,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 813,
											"end": 871,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 813,
											"end": 871,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 813,
											"end": 871,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 813,
											"end": 871,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 813,
											"end": 871,
											"name": "PUSH",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 813,
											"end": 871,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 813,
											"end": 871,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 813,
											"end": 871,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 813,
											"end": 871,
											"name": "PUSH",
											"source": 4,
											"value": "44"
										},
										{
											"begin": 813,
											"end": 871,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 813,
											"end": 871,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 813,
											"end": 871,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 813,
											"end": 871,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 813,
											"end": 871,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 813,
											"end": 871,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 813,
											"end": 871,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 813,
											"end": 871,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 813,
											"end": 871,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 813,
											"end": 871,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 813,
											"end": 871,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 813,
											"end": 871,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 813,
											"end": 871,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 813,
											"end": 871,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 813,
											"end": 871,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 813,
											"end": 871,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 813,
											"end": 871,
											"name": "PUSH",
											"source": 4,
											"value": "64"
										},
										{
											"begin": 813,
											"end": 871,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 813,
											"end": 871,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 813,
											"end": 871,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 813,
											"end": 871,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 813,
											"end": 871,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 813,
											"end": 871,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 813,
											"end": 871,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 813,
											"end": 871,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 813,
											"end": 871,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 813,
											"end": 871,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 813,
											"end": 871,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 813,
											"end": 871,
											"name": "AND",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A9059CBB"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 813,
											"end": 871,
											"name": "OR",
											"source": 4
										},
										{
											"begin": 813,
											"end": 871,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 813,
											"end": 871,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 786,
											"end": 872,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "172"
										},
										{
											"begin": 786,
											"end": 872,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 806,
											"end": 811,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 806,
											"end": 811,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 786,
											"end": 805,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "173"
										},
										{
											"begin": 786,
											"end": 872,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 885,
											"end": 1088,
											"name": "tag",
											"source": 4,
											"value": "133"
										},
										{
											"begin": 885,
											"end": 1088,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1012,
											"end": 1080,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1012,
											"end": 1080,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1012,
											"end": 1080,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1012,
											"end": 1080,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1012,
											"end": 1080,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 1012,
											"end": 1080,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1012,
											"end": 1080,
											"name": "PUSH",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 1012,
											"end": 1080,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1012,
											"end": 1080,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1012,
											"end": 1080,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1012,
											"end": 1080,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 1012,
											"end": 1080,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1012,
											"end": 1080,
											"name": "PUSH",
											"source": 4,
											"value": "44"
										},
										{
											"begin": 1012,
											"end": 1080,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1012,
											"end": 1080,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1012,
											"end": 1080,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1012,
											"end": 1080,
											"name": "PUSH",
											"source": 4,
											"value": "64"
										},
										{
											"begin": 1012,
											"end": 1080,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1012,
											"end": 1080,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1012,
											"end": 1080,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1012,
											"end": 1080,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 1012,
											"end": 1080,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1012,
											"end": 1080,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1012,
											"end": 1080,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1012,
											"end": 1080,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1012,
											"end": 1080,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1012,
											"end": 1080,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1012,
											"end": 1080,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 1012,
											"end": 1080,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1012,
											"end": 1080,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1012,
											"end": 1080,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1012,
											"end": 1080,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1012,
											"end": 1080,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1012,
											"end": 1080,
											"name": "PUSH",
											"source": 4,
											"value": "84"
										},
										{
											"begin": 1012,
											"end": 1080,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1012,
											"end": 1080,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1012,
											"end": 1080,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1012,
											"end": 1080,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1012,
											"end": 1080,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1012,
											"end": 1080,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1012,
											"end": 1080,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1012,
											"end": 1080,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1012,
											"end": 1080,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1012,
											"end": 1080,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1012,
											"end": 1080,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1012,
											"end": 1080,
											"name": "AND",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "23B872DD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1012,
											"end": 1080,
											"name": "OR",
											"source": 4
										},
										{
											"begin": 1012,
											"end": 1080,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1012,
											"end": 1080,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 985,
											"end": 1081,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "191"
										},
										{
											"begin": 985,
											"end": 1081,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1005,
											"end": 1010,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 1005,
											"end": 1010,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 985,
											"end": 1004,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "173"
										},
										{
											"begin": 985,
											"end": 1081,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 985,
											"end": 1081,
											"name": "tag",
											"source": 4,
											"value": "191"
										},
										{
											"begin": 985,
											"end": 1081,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 885,
											"end": 1088,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 885,
											"end": 1088,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 885,
											"end": 1088,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 885,
											"end": 1088,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 885,
											"end": 1088,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 5032,
											"end": 5376,
											"name": "tag",
											"source": 0,
											"value": "162"
										},
										{
											"begin": 5032,
											"end": 5376,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5101,
											"end": 5105,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5143,
											"end": 5150,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 5143,
											"end": 5150,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 5153,
											"end": 5161,
											"name": "PUSH",
											"source": 0,
											"value": "15180"
										},
										{
											"begin": 5143,
											"end": 5161,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5125,
											"end": 5140,
											"name": "TIMESTAMP",
											"source": 0
										},
										{
											"begin": 5125,
											"end": 5161,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 5121,
											"end": 5241,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 5121,
											"end": 5241,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "193"
										},
										{
											"begin": 5121,
											"end": 5241,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 5187,
											"end": 5202,
											"name": "TIMESTAMP",
											"source": 0
										},
										{
											"begin": 5177,
											"end": 5184,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 5177,
											"end": 5202,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 5229,
											"end": 5230,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5216,
											"end": 5226,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 5216,
											"end": 5230,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 5121,
											"end": 5241,
											"name": "tag",
											"source": 0,
											"value": "193"
										},
										{
											"begin": 5121,
											"end": 5241,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5276,
											"end": 5286,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 5276,
											"end": 5286,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 5267,
											"end": 5273,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 5254,
											"end": 5264,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 5254,
											"end": 5264,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 5254,
											"end": 5273,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5254,
											"end": 5286,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 5254,
											"end": 5322,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5254,
											"end": 5322,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "194"
										},
										{
											"begin": 5254,
											"end": 5322,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5312,
											"end": 5322,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 5312,
											"end": 5322,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 5290,
											"end": 5309,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 5290,
											"end": 5309,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5290,
											"end": 5309,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5290,
											"end": 5322,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 5254,
											"end": 5322,
											"name": "tag",
											"source": 0,
											"value": "194"
										},
										{
											"begin": 5254,
											"end": 5322,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5250,
											"end": 5348,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 5250,
											"end": 5348,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "195"
										},
										{
											"begin": 5250,
											"end": 5348,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5343,
											"end": 5348,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5336,
											"end": 5348,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "192"
										},
										{
											"begin": 5336,
											"end": 5348,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5250,
											"end": 5348,
											"name": "tag",
											"source": 0,
											"value": "195"
										},
										{
											"begin": 5250,
											"end": 5348,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5365,
											"end": 5369,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 5032,
											"end": 5376,
											"name": "tag",
											"source": 0,
											"value": "192"
										},
										{
											"begin": 5032,
											"end": 5376,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5032,
											"end": 5376,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5032,
											"end": 5376,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5032,
											"end": 5376,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5032,
											"end": 5376,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 2967,
											"end": 3718,
											"name": "tag",
											"source": 4,
											"value": "173"
										},
										{
											"begin": 2967,
											"end": 3718,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3386,
											"end": 3409,
											"name": "PUSH",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 3412,
											"end": 3481,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "197"
										},
										{
											"begin": 3440,
											"end": 3444,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3412,
											"end": 3481,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3412,
											"end": 3481,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3412,
											"end": 3481,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3412,
											"end": 3481,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3412,
											"end": 3481,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3412,
											"end": 3481,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3412,
											"end": 3481,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3412,
											"end": 3481,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3412,
											"end": 3481,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3412,
											"end": 3481,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3412,
											"end": 3481,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3412,
											"end": 3481,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3412,
											"end": 3481,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3412,
											"end": 3481,
											"name": "PUSH",
											"source": 4,
											"value": "5361666545524332303A206C6F772D6C6576656C2063616C6C206661696C6564"
										},
										{
											"begin": 3412,
											"end": 3481,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3412,
											"end": 3481,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3412,
											"end": 3481,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3420,
											"end": 3425,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3412,
											"end": 3439,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 3412,
											"end": 3439,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "73"
										},
										{
											"begin": 3412,
											"end": 3439,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3412,
											"end": 3481,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 3412,
											"end": 3481,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3412,
											"end": 3481,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3412,
											"end": 3481,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFF"
										},
										{
											"begin": 3412,
											"end": 3481,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 3412,
											"end": 3481,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 3412,
											"end": 3481,
											"name": "tag",
											"source": 4,
											"value": "197"
										},
										{
											"begin": 3412,
											"end": 3481,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3495,
											"end": 3512,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3495,
											"end": 3512,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3386,
											"end": 3481,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3386,
											"end": 3481,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3495,
											"end": 3516,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 3491,
											"end": 3712,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "172"
										},
										{
											"begin": 3491,
											"end": 3712,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 3635,
											"end": 3645,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3624,
											"end": 3654,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3624,
											"end": 3654,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3624,
											"end": 3654,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3624,
											"end": 3654,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3624,
											"end": 3654,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3624,
											"end": 3654,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3624,
											"end": 3654,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3624,
											"end": 3654,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 3624,
											"end": 3654,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 3624,
											"end": 3654,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "199"
										},
										{
											"begin": 3624,
											"end": 3654,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 3624,
											"end": 3654,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3624,
											"end": 3654,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3624,
											"end": 3654,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 3624,
											"end": 3654,
											"name": "tag",
											"source": 4,
											"value": "199"
										},
										{
											"begin": 3624,
											"end": 3654,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3624,
											"end": 3654,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3616,
											"end": 3701,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "172"
										},
										{
											"begin": 3616,
											"end": 3701,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 3616,
											"end": 3701,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3616,
											"end": 3701,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3616,
											"end": 3701,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3616,
											"end": 3701,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3616,
											"end": 3701,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 3616,
											"end": 3701,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3616,
											"end": 3701,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3616,
											"end": 3701,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3616,
											"end": 3701,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3616,
											"end": 3701,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3616,
											"end": 3701,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3616,
											"end": 3701,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3616,
											"end": 3701,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 3616,
											"end": 3701,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3616,
											"end": 3701,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3616,
											"end": 3701,
											"name": "PUSH",
											"source": 4,
											"value": "2A"
										},
										{
											"begin": 3616,
											"end": 3701,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3616,
											"end": 3701,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3616,
											"end": 3701,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3616,
											"end": 3701,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3616,
											"end": 3701,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3616,
											"end": 3701,
											"name": "PUSH data",
											"source": 4,
											"value": "E11AD79D1E4A7F2E5F376964CB99E8E8F7904E3FC16A109F7A7ECB9AA7956DCD"
										},
										{
											"begin": 3616,
											"end": 3701,
											"name": "PUSH",
											"source": 4,
											"value": "2A"
										},
										{
											"begin": 3616,
											"end": 3701,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3616,
											"end": 3701,
											"name": "CODECOPY",
											"source": 4
										},
										{
											"begin": 3616,
											"end": 3701,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3616,
											"end": 3701,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3616,
											"end": 3701,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3616,
											"end": 3701,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3616,
											"end": 3701,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3616,
											"end": 3701,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3616,
											"end": 3701,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3616,
											"end": 3701,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3616,
											"end": 3701,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3616,
											"end": 3701,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 3616,
											"end": 3701,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3616,
											"end": 3701,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 4608,
											"end": 5131,
											"name": "tag",
											"source": 5,
											"value": "176"
										},
										{
											"begin": 4608,
											"end": 5131,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4735,
											"end": 4747,
											"name": "PUSH",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 4792,
											"end": 4797,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4767,
											"end": 4788,
											"name": "SELFBALANCE",
											"source": 5
										},
										{
											"begin": 4767,
											"end": 4797,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 4767,
											"end": 4797,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 4759,
											"end": 4840,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "202"
										},
										{
											"begin": 4759,
											"end": 4840,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 4759,
											"end": 4840,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 4759,
											"end": 4840,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4759,
											"end": 4840,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4759,
											"end": 4840,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4759,
											"end": 4840,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 4759,
											"end": 4840,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4759,
											"end": 4840,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 4759,
											"end": 4840,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 4759,
											"end": 4840,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 4759,
											"end": 4840,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4759,
											"end": 4840,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4759,
											"end": 4840,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4759,
											"end": 4840,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 4759,
											"end": 4840,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4759,
											"end": 4840,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4759,
											"end": 4840,
											"name": "PUSH",
											"source": 5,
											"value": "26"
										},
										{
											"begin": 4759,
											"end": 4840,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4759,
											"end": 4840,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4759,
											"end": 4840,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 4759,
											"end": 4840,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4759,
											"end": 4840,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 4759,
											"end": 4840,
											"name": "PUSH data",
											"source": 5,
											"value": "565F1A77334FC4792800921178C71E4521ACFFAB18FF9E7885B49377EE80AB4C"
										},
										{
											"begin": 4759,
											"end": 4840,
											"name": "PUSH",
											"source": 5,
											"value": "26"
										},
										{
											"begin": 4759,
											"end": 4840,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4759,
											"end": 4840,
											"name": "CODECOPY",
											"source": 5
										},
										{
											"begin": 4759,
											"end": 4840,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 4759,
											"end": 4840,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4759,
											"end": 4840,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4759,
											"end": 4840,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4759,
											"end": 4840,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4759,
											"end": 4840,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 4759,
											"end": 4840,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 4759,
											"end": 4840,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 4759,
											"end": 4840,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4759,
											"end": 4840,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 4759,
											"end": 4840,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4759,
											"end": 4840,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 4759,
											"end": 4840,
											"name": "tag",
											"source": 5,
											"value": "202"
										},
										{
											"begin": 4759,
											"end": 4840,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4858,
											"end": 4876,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "203"
										},
										{
											"begin": 4869,
											"end": 4875,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 4858,
											"end": 4868,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "204"
										},
										{
											"begin": 4858,
											"end": 4876,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 4858,
											"end": 4876,
											"name": "tag",
											"source": 5,
											"value": "203"
										},
										{
											"begin": 4858,
											"end": 4876,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4850,
											"end": 4910,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "205"
										},
										{
											"begin": 4850,
											"end": 4910,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 4850,
											"end": 4910,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 4850,
											"end": 4910,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 4850,
											"end": 4910,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4850,
											"end": 4910,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4850,
											"end": 4910,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4850,
											"end": 4910,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 4850,
											"end": 4910,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 4850,
											"end": 4910,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4850,
											"end": 4910,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4850,
											"end": 4910,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4850,
											"end": 4910,
											"name": "PUSH",
											"source": 5,
											"value": "1D"
										},
										{
											"begin": 4850,
											"end": 4910,
											"name": "PUSH",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 4850,
											"end": 4910,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4850,
											"end": 4910,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4850,
											"end": 4910,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4850,
											"end": 4910,
											"name": "PUSH",
											"source": 5,
											"value": "416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000"
										},
										{
											"begin": 4850,
											"end": 4910,
											"name": "PUSH",
											"source": 5,
											"value": "44"
										},
										{
											"begin": 4850,
											"end": 4910,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4850,
											"end": 4910,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4850,
											"end": 4910,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4850,
											"end": 4910,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4850,
											"end": 4910,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 4850,
											"end": 4910,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4850,
											"end": 4910,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4850,
											"end": 4910,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4850,
											"end": 4910,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 4850,
											"end": 4910,
											"name": "PUSH",
											"source": 5,
											"value": "64"
										},
										{
											"begin": 4850,
											"end": 4910,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4850,
											"end": 4910,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4850,
											"end": 4910,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 4850,
											"end": 4910,
											"name": "tag",
											"source": 5,
											"value": "205"
										},
										{
											"begin": 4850,
											"end": 4910,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4981,
											"end": 4993,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4995,
											"end": 5018,
											"name": "PUSH",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 5022,
											"end": 5028,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5022,
											"end": 5033,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 5042,
											"end": 5047,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 5050,
											"end": 5054,
											"name": "DUP8",
											"source": 5
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "tag",
											"source": 5,
											"value": "206"
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "208"
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "206"
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "tag",
											"source": 5,
											"value": "208"
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "PUSH",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "EXP",
											"source": 5
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "NOT",
											"source": 5
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "OR",
											"source": 5
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "DUP8",
											"source": 5
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "GAS",
											"source": 5
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "CALL",
											"source": 5
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "211"
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "NOT",
											"source": 5
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "PUSH",
											"source": 5,
											"value": "3F"
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "RETURNDATACOPY",
											"source": 5
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "210"
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "tag",
											"source": 5,
											"value": "211"
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "PUSH",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "tag",
											"source": 5,
											"value": "210"
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4980,
											"end": 5055,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4980,
											"end": 5055,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4980,
											"end": 5055,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4980,
											"end": 5055,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5072,
											"end": 5124,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "212"
										},
										{
											"begin": 5090,
											"end": 5097,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5099,
											"end": 5109,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5111,
											"end": 5123,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 5072,
											"end": 5089,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "213"
										},
										{
											"begin": 5072,
											"end": 5124,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 5072,
											"end": 5124,
											"name": "tag",
											"source": 5,
											"value": "212"
										},
										{
											"begin": 5072,
											"end": 5124,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5065,
											"end": 5124,
											"name": "SWAP8",
											"source": 5
										},
										{
											"begin": 4608,
											"end": 5131,
											"name": "SWAP7",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4608,
											"end": 5131,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 726,
											"end": 1139,
											"name": "tag",
											"source": 5,
											"value": "204"
										},
										{
											"begin": 726,
											"end": 1139,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1086,
											"end": 1106,
											"name": "EXTCODESIZE",
											"source": 5
										},
										{
											"begin": 1124,
											"end": 1132,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 1124,
											"end": 1132,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 1124,
											"end": 1132,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 726,
											"end": 1139,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 7091,
											"end": 7816,
											"name": "tag",
											"source": 5,
											"value": "213"
										},
										{
											"begin": 7091,
											"end": 7816,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7206,
											"end": 7218,
											"name": "PUSH",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 7234,
											"end": 7241,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 7230,
											"end": 7810,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 7230,
											"end": 7810,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "216"
										},
										{
											"begin": 7230,
											"end": 7810,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7264,
											"end": 7274,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 7257,
											"end": 7274,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "174"
										},
										{
											"begin": 7257,
											"end": 7274,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 7230,
											"end": 7810,
											"name": "tag",
											"source": 5,
											"value": "216"
										},
										{
											"begin": 7230,
											"end": 7810,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7375,
											"end": 7392,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 7375,
											"end": 7392,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 7375,
											"end": 7396,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 7371,
											"end": 7800,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "218"
										},
										{
											"begin": 7371,
											"end": 7800,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 7633,
											"end": 7643,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 7627,
											"end": 7644,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 7693,
											"end": 7708,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 7680,
											"end": 7690,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 7676,
											"end": 7678,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 7672,
											"end": 7691,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 7665,
											"end": 7709,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 7582,
											"end": 7727,
											"name": "tag",
											"source": 5,
											"value": "218"
										},
										{
											"begin": 7582,
											"end": 7727,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7772,
											"end": 7784,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "tag",
											"source": 5,
											"value": "220"
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "222"
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "220"
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "tag",
											"source": 5,
											"value": "222"
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "223"
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "PUSH",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "EXP",
											"source": 5
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "NOT",
											"source": 5
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "tag",
											"source": 5,
											"value": "223"
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "REVERT",
											"source": 5
										}
									],
									".data": {
										"2186895F526E488D7755616513A09664EEDF819BFAFE4F6FA94396F5AFB14E38": "496e73756666696369656e7420696e63656e746976657320617661696c61626c65",
										"245F15FF17F551913A7A18385165551503906A406F905AC1C2437281A7CD0CFE": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373",
										"565F1A77334FC4792800921178C71E4521ACFFAB18FF9E7885B49377EE80AB4C": "416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c6c",
										"9924EBDF1ADD33D25D4EF888E16131F0A5687B0580A36C21B5C301A6C462EFFE": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
										"BCC168664A3C14C72586057EDA5BA29201BA9E86DE7CD2FCC768EFE9BD2F6AC9": "546f6b656e2063616e6e6f742062652073616d6520617320696e63656e746976657320746f6b656e",
										"E11AD79D1E4A7F2E5F376964CB99E8E8F7904E3FC16A109F7A7ECB9AA7956DCD": "5361666545524332303a204552433230206f7065726174696f6e20646964206e6f742073756363656564",
										"EF945DDB1BFDC0DA870FEB4560D868B047642B4AC7F2FB7F8B7C51CB4A411E25": "5361666545524332303a20617070726f76652066726f6d206e6f6e2d7a65726f20746f206e6f6e2d7a65726f20616c6c6f77616e6365"
									}
								},
								"565F1A77334FC4792800921178C71E4521ACFFAB18FF9E7885B49377EE80AB4C": "416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c6c",
								"E11AD79D1E4A7F2E5F376964CB99E8E8F7904E3FC16A109F7A7ECB9AA7956DCD": "5361666545524332303a204552433230206f7065726174696f6e20646964206e6f742073756363656564",
								"EF945DDB1BFDC0DA870FEB4560D868B047642B4AC7F2FB7F8B7C51CB4A411E25": "5361666545524332303a20617070726f76652066726f6d206e6f6e2d7a65726f20746f206e6f6e2d7a65726f20616c6c6f77616e6365"
							}
						},
						"methodIdentifiers": {
							"admin()": "f851a440",
							"approvedSpender()": "8ef57f5e",
							"dailyLimit()": "67eeba0c",
							"deposit(uint256)": "b6b55f25",
							"getDailyLimit()": "a6895b5a",
							"getIncentivesBalance()": "9f9ff3e8",
							"inCaseTokensGetStuck(address)": "def68a9c",
							"lastDay()": "6b0c932d",
							"owner()": "8da5cb5b",
							"pause()": "8456cb59",
							"paused()": "5c975abb",
							"renounceOwnership()": "715018a6",
							"setAdmin(address)": "704b6c02",
							"setDailyLimit(uint256)": "b20d30a9",
							"spentToday()": "f059cf2b",
							"token()": "fc0c546a",
							"transferOwnership(address)": "f2fde38b",
							"unpause()": "3f4ba83a",
							"withdraw(address,uint256)": "f3fef3a3",
							"withdrawAll()": "853828b6"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.7.5+commit.eb77ed08\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"_token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_approvedSpender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_admin\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_dailyLimit\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Deposit\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"Pause\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"Unpause\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Withdraw\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"admin\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"approvedSpender\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"dailyLimit\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"deposit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getDailyLimit\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getIncentivesBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"}],\"name\":\"inCaseTokensGetStuck\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"lastDay\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_admin\",\"type\":\"address\"}],\"name\":\"setAdmin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_newDailyLimit\",\"type\":\"uint256\"}],\"name\":\"setDailyLimit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"spentToday\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"token\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"unpause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdrawAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"constructor\":{\"params\":{\"_admin\":\": address of the admin\",\"_approvedSpender\":\": PullRewardsIncentivesController contract\",\"_dailyLimit\":\": max permitted incentives spend each day\",\"_token\":\": Incentives token contract\"}},\"deposit(uint256)\":{\"details\":\"Only possible when contract not paused.\",\"params\":{\"_amount\":\": number of tokens to deposit (in TLOS)\"}},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"pause()\":{\"details\":\"Only possible when contract not paused.\"},\"paused()\":{\"details\":\"Returns true if the contract is paused, and false otherwise.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"setAdmin(address)\":{\"details\":\"Only callable by the contract owner.\"},\"setDailyLimit(uint256)\":{\"details\":\"Only callable by the contract owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"},\"unpause()\":{\"details\":\"Only possible when contract is paused.\"},\"withdraw(address,uint256)\":{\"params\":{\"_amount\":\": amount to withdraw\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"constructor\":{\"notice\":\"Constructor\"},\"deposit(uint256)\":{\"notice\":\"Deposits funds into the  Vault\"},\"inCaseTokensGetStuck(address)\":{\"notice\":\"Withdraw unexpected tokens sent to the Charm Vault\"},\"pause()\":{\"notice\":\"Triggers stopped state\"},\"setAdmin(address)\":{\"notice\":\"Sets admin address\"},\"setDailyLimit(uint256)\":{\"notice\":\"Sets new daily limit\"},\"unpause()\":{\"notice\":\"Returns to normal state\"},\"withdraw(address,uint256)\":{\"notice\":\"Withdraws incentives from funds in the Vaultcan only be called by authorised spenders\"},\"withdrawAll()\":{\"notice\":\"Withdraws all funds back to owner\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Omnidex-incentives/incentives/OmnidexIncentivesVault.sol\":\"OmnidexIncentivesVault\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/Omnidex-incentives/incentives/OmnidexIncentivesVault.sol\":{\"keccak256\":\"0x96f3432c8f376b09716ce1b25413155422a8c1849097bb49a460b1117d3e3da6\",\"urls\":[\"bzz-raw://1f28118c98cb68a1d1062055f3cf5d4576f6def14aa8b013460292f44b744b77\",\"dweb:/ipfs/QmXvQ3Qrhfs8VrkquGMiQ3aBEzWsSuryCYDoTjE8QzwbJn\"]},\"https://github.com/OmniDexFinance/helper/blob/master/%40openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0x15e2d5bd4c28a88548074c54d220e8086f638a71ed07e6b3ba5a70066fcf458d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://90faf5851c02f9bd42c5bfb54d4f0421a2612f50ab80b2c4fa24fa3792071cc2\",\"dweb:/ipfs/QmRGM4F2PcGVF85aTfaA9YBhCHHDqrMhRjyp6fGeBTtirb\"]},\"https://github.com/OmniDexFinance/helper/blob/master/%40openzeppelin/contracts/math/SafeMath.sol\":{\"keccak256\":\"0xcc78a17dd88fa5a2edc60c8489e2f405c0913b377216a5b26b35656b2d0dab52\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://526dc85e1f9b9b45830e202568d267d93dde7a4fcccf4ad7798dadcd92304d3c\",\"dweb:/ipfs/QmaoXMB972J3cSDLtBq3xBo4jLwqD2uzXTwujtSPqkYVhR\"]},\"https://github.com/OmniDexFinance/helper/blob/master/%40openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x5f02220344881ce43204ae4a6281145a67bc52c2bb1290a791857df3d19d78f5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://24427744bd3e6cb73c17010119af12a318289c0253a4d9acb8576c9fb3797b08\",\"dweb:/ipfs/QmTLDqpKRBuxGxRAmjgXt9AkXyACW3MtKzi7PYjm5iMfGC\"]},\"https://github.com/OmniDexFinance/helper/blob/master/%40openzeppelin/contracts/token/ERC20/SafeERC20.sol\":{\"keccak256\":\"0xf12dfbe97e6276980b83d2830bb0eb75e0cf4f3e626c2471137f82158ae6a0fc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b3a849c2d95e85463909e5b5c920b13e7a11216ca14127085e16d22b9379d52a\",\"dweb:/ipfs/QmUg3CZDbCCcQdroEpexBy5ZFd5vD1UWijWQq9qHZjtJNQ\"]},\"https://github.com/OmniDexFinance/helper/blob/master/%40openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x28911e614500ae7c607a432a709d35da25f3bc5ddc8bd12b278b66358070c0ea\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://256c8c8af5eb072bc473226ab2b2187149b8fc04f5f4a4820db22527f5ce8e3c\",\"dweb:/ipfs/QmRvi5BhnL7Rxf85KrJhwM6RRhukm4tzoctRdgQEheNyiN\"]},\"https://github.com/OmniDexFinance/helper/blob/master/%40openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x8d3cb350f04ff49cfb10aef08d87f19dcbaecc8027b0bed12f3275cd12f38cf0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ded47ec7c96750f9bd04bbbc84f659992d4ba901cb7b532a52cd468272cf378f\",\"dweb:/ipfs/QmfBrGtQP7rZEqEg6Wz6jh2N2Kukpj1z5v3CGWmAqrzm96\"]},\"https://github.com/OmniDexFinance/helper/blob/master/%40openzeppelin/contracts/utils/Pausable.sol\":{\"keccak256\":\"0x212fb1b1d4beaf74354dad9bc329f44ee3c5375ef1c32acff76b4ecefc10f1d8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d21c68cb321d1c8d0fa39fd9ecb6bbe3b2f26623b0f38af280a010c916c85f23\",\"dweb:/ipfs/Qmf2P51HRC4ekDHLYfbXu5SXR33gXrWtq6oKSmfyWqVRuC\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 409,
								"contract": "contracts/Omnidex-incentives/incentives/OmnidexIncentivesVault.sol:OmnidexIncentivesVault",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							},
							{
								"astId": 1494,
								"contract": "contracts/Omnidex-incentives/incentives/OmnidexIncentivesVault.sol:OmnidexIncentivesVault",
								"label": "_paused",
								"offset": 20,
								"slot": "0",
								"type": "t_bool"
							},
							{
								"astId": 20,
								"contract": "contracts/Omnidex-incentives/incentives/OmnidexIncentivesVault.sol:OmnidexIncentivesVault",
								"label": "admin",
								"offset": 0,
								"slot": "1",
								"type": "t_address"
							},
							{
								"astId": 22,
								"contract": "contracts/Omnidex-incentives/incentives/OmnidexIncentivesVault.sol:OmnidexIncentivesVault",
								"label": "approvedSpender",
								"offset": 0,
								"slot": "2",
								"type": "t_address"
							},
							{
								"astId": 24,
								"contract": "contracts/Omnidex-incentives/incentives/OmnidexIncentivesVault.sol:OmnidexIncentivesVault",
								"label": "dailyLimit",
								"offset": 0,
								"slot": "3",
								"type": "t_uint256"
							},
							{
								"astId": 26,
								"contract": "contracts/Omnidex-incentives/incentives/OmnidexIncentivesVault.sol:OmnidexIncentivesVault",
								"label": "lastDay",
								"offset": 0,
								"slot": "4",
								"type": "t_uint256"
							},
							{
								"astId": 28,
								"contract": "contracts/Omnidex-incentives/incentives/OmnidexIncentivesVault.sol:OmnidexIncentivesVault",
								"label": "spentToday",
								"offset": 0,
								"slot": "5",
								"type": "t_uint256"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"constructor": {
								"notice": "Constructor"
							},
							"deposit(uint256)": {
								"notice": "Deposits funds into the  Vault"
							},
							"inCaseTokensGetStuck(address)": {
								"notice": "Withdraw unexpected tokens sent to the Charm Vault"
							},
							"pause()": {
								"notice": "Triggers stopped state"
							},
							"setAdmin(address)": {
								"notice": "Sets admin address"
							},
							"setDailyLimit(uint256)": {
								"notice": "Sets new daily limit"
							},
							"unpause()": {
								"notice": "Returns to normal state"
							},
							"withdraw(address,uint256)": {
								"notice": "Withdraws incentives from funds in the Vaultcan only be called by authorised spenders"
							},
							"withdrawAll()": {
								"notice": "Withdraws all funds back to owner"
							}
						},
						"version": 1
					}
				}
			},
			"https://github.com/OmniDexFinance/helper/blob/master/%40openzeppelin/contracts/access/Ownable.sol": {
				"Ownable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the deployer as the initial owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.7.5+commit.eb77ed08\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"https://github.com/OmniDexFinance/helper/blob/master/%40openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"https://github.com/OmniDexFinance/helper/blob/master/%40openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0x15e2d5bd4c28a88548074c54d220e8086f638a71ed07e6b3ba5a70066fcf458d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://90faf5851c02f9bd42c5bfb54d4f0421a2612f50ab80b2c4fa24fa3792071cc2\",\"dweb:/ipfs/QmRGM4F2PcGVF85aTfaA9YBhCHHDqrMhRjyp6fGeBTtirb\"]},\"https://github.com/OmniDexFinance/helper/blob/master/%40openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x8d3cb350f04ff49cfb10aef08d87f19dcbaecc8027b0bed12f3275cd12f38cf0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ded47ec7c96750f9bd04bbbc84f659992d4ba901cb7b532a52cd468272cf378f\",\"dweb:/ipfs/QmfBrGtQP7rZEqEg6Wz6jh2N2Kukpj1z5v3CGWmAqrzm96\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 409,
								"contract": "https://github.com/OmniDexFinance/helper/blob/master/%40openzeppelin/contracts/access/Ownable.sol:Ownable",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"https://github.com/OmniDexFinance/helper/blob/master/%40openzeppelin/contracts/math/SafeMath.sol": {
				"SafeMath": {
					"abi": [],
					"devdoc": {
						"details": "Wrappers over Solidity's arithmetic operations with added overflow checks. Arithmetic operations in Solidity wrap on overflow. This can easily result in bugs, because programmers usually assume that an overflow raises an error, which is the standard behavior in high level programming languages. `SafeMath` restores this intuition by reverting the transaction when an operation overflows. Using this library instead of the unchecked operations eliminates an entire class of bugs, so it's recommended to use it always.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"https://github.com/OmniDexFinance/helper/blob/master/%40openzeppelin/contracts/math/SafeMath.sol\":630:7224  library SafeMath {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  invalid\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"https://github.com/OmniDexFinance/helper/blob/master/%40openzeppelin/contracts/math/SafeMath.sol\":630:7224  library SafeMath {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220b47fc2caac6fd7e2c9a066715f9cf6002ea7833c5ba2a3d554a2c21e465ecc1264736f6c63430007050033\n}\n",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566023600b82828239805160001a607314601657fe5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220b47fc2caac6fd7e2c9a066715f9cf6002ea7833c5ba2a3d554a2c21e465ecc1264736f6c63430007050033",
							"opcodes": "PUSH1 0x56 PUSH1 0x23 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x16 JUMPI INVALID JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB4 PUSH32 0xC2CAAC6FD7E2C9A066715F9CF6002EA7833C5BA2A3D554A2C21E465ECC126473 PUSH16 0x6C634300070500330000000000000000 ",
							"sourceMap": "630:6594:2:-:0;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220b47fc2caac6fd7e2c9a066715f9cf6002ea7833c5ba2a3d554a2c21e465ecc1264736f6c63430007050033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB4 PUSH32 0xC2CAAC6FD7E2C9A066715F9CF6002EA7833C5BA2A3D554A2C21E465ECC126473 PUSH16 0x6C634300070500330000000000000000 ",
							"sourceMap": "630:6594:2:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"add(uint256,uint256)": "infinite",
								"div(uint256,uint256)": "infinite",
								"div(uint256,uint256,string memory)": "infinite",
								"mod(uint256,uint256)": "infinite",
								"mod(uint256,uint256,string memory)": "infinite",
								"mul(uint256,uint256)": "infinite",
								"sub(uint256,uint256)": "infinite",
								"sub(uint256,uint256,string memory)": "infinite",
								"tryAdd(uint256,uint256)": "infinite",
								"tryDiv(uint256,uint256)": "infinite",
								"tryMod(uint256,uint256)": "infinite",
								"tryMul(uint256,uint256)": "infinite",
								"trySub(uint256,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 630,
									"end": 7224,
									"name": "PUSH #[$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 630,
									"end": 7224,
									"name": "PUSH [$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 630,
									"end": 7224,
									"name": "PUSH",
									"source": 2,
									"value": "B"
								},
								{
									"begin": 630,
									"end": 7224,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 630,
									"end": 7224,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 630,
									"end": 7224,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 630,
									"end": 7224,
									"name": "CODECOPY",
									"source": 2
								},
								{
									"begin": 630,
									"end": 7224,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 630,
									"end": 7224,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 630,
									"end": 7224,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 630,
									"end": 7224,
									"name": "BYTE",
									"source": 2
								},
								{
									"begin": 630,
									"end": 7224,
									"name": "PUSH",
									"source": 2,
									"value": "73"
								},
								{
									"begin": 630,
									"end": 7224,
									"name": "EQ",
									"source": 2
								},
								{
									"begin": 630,
									"end": 7224,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 630,
									"end": 7224,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 630,
									"end": 7224,
									"name": "INVALID",
									"source": 2
								},
								{
									"begin": 630,
									"end": 7224,
									"name": "tag",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 630,
									"end": 7224,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 630,
									"end": 7224,
									"name": "ADDRESS",
									"source": 2
								},
								{
									"begin": 630,
									"end": 7224,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 630,
									"end": 7224,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 630,
									"end": 7224,
									"name": "PUSH",
									"source": 2,
									"value": "73"
								},
								{
									"begin": 630,
									"end": 7224,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 630,
									"end": 7224,
									"name": "MSTORE8",
									"source": 2
								},
								{
									"begin": 630,
									"end": 7224,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 630,
									"end": 7224,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 630,
									"end": 7224,
									"name": "RETURN",
									"source": 2
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220b47fc2caac6fd7e2c9a066715f9cf6002ea7833c5ba2a3d554a2c21e465ecc1264736f6c63430007050033",
									".code": [
										{
											"begin": 630,
											"end": 7224,
											"name": "PUSHDEPLOYADDRESS",
											"source": 2
										},
										{
											"begin": 630,
											"end": 7224,
											"name": "ADDRESS",
											"source": 2
										},
										{
											"begin": 630,
											"end": 7224,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 630,
											"end": 7224,
											"name": "PUSH",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 630,
											"end": 7224,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 630,
											"end": 7224,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 630,
											"end": 7224,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 630,
											"end": 7224,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 630,
											"end": 7224,
											"name": "REVERT",
											"source": 2
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.7.5+commit.eb77ed08\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Wrappers over Solidity's arithmetic operations with added overflow checks. Arithmetic operations in Solidity wrap on overflow. This can easily result in bugs, because programmers usually assume that an overflow raises an error, which is the standard behavior in high level programming languages. `SafeMath` restores this intuition by reverting the transaction when an operation overflows. Using this library instead of the unchecked operations eliminates an entire class of bugs, so it's recommended to use it always.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"https://github.com/OmniDexFinance/helper/blob/master/%40openzeppelin/contracts/math/SafeMath.sol\":\"SafeMath\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"https://github.com/OmniDexFinance/helper/blob/master/%40openzeppelin/contracts/math/SafeMath.sol\":{\"keccak256\":\"0xcc78a17dd88fa5a2edc60c8489e2f405c0913b377216a5b26b35656b2d0dab52\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://526dc85e1f9b9b45830e202568d267d93dde7a4fcccf4ad7798dadcd92304d3c\",\"dweb:/ipfs/QmaoXMB972J3cSDLtBq3xBo4jLwqD2uzXTwujtSPqkYVhR\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"https://github.com/OmniDexFinance/helper/blob/master/%40openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 standard as defined in the EIP.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the amount of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the amount of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves `amount` tokens from the caller's account to `recipient`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves `amount` tokens from `sender` to `recipient` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.7.5+commit.eb77ed08\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `recipient`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `sender` to `recipient` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"https://github.com/OmniDexFinance/helper/blob/master/%40openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"https://github.com/OmniDexFinance/helper/blob/master/%40openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x5f02220344881ce43204ae4a6281145a67bc52c2bb1290a791857df3d19d78f5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://24427744bd3e6cb73c17010119af12a318289c0253a4d9acb8576c9fb3797b08\",\"dweb:/ipfs/QmTLDqpKRBuxGxRAmjgXt9AkXyACW3MtKzi7PYjm5iMfGC\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"https://github.com/OmniDexFinance/helper/blob/master/%40openzeppelin/contracts/token/ERC20/SafeERC20.sol": {
				"SafeERC20": {
					"abi": [],
					"devdoc": {
						"details": "Wrappers around ERC20 operations that throw on failure (when the token contract returns false). Tokens that return no value (and instead revert or throw on failure) are also supported, non-reverting calls are assumed to be successful. To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract, which allows you to call the safe operations as `token.safeTransfer(...)`, etc.",
						"kind": "dev",
						"methods": {},
						"title": "SafeERC20",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"https://github.com/OmniDexFinance/helper/blob/master/%40openzeppelin/contracts/token/ERC20/SafeERC20.sol\":616:3720  library SafeERC20 {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  invalid\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"https://github.com/OmniDexFinance/helper/blob/master/%40openzeppelin/contracts/token/ERC20/SafeERC20.sol\":616:3720  library SafeERC20 {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212205188cafe9119f7fc920dd86636348e901b82096ce5f85749cba6abac77c9c9e764736f6c63430007050033\n}\n",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566023600b82828239805160001a607314601657fe5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212205188cafe9119f7fc920dd86636348e901b82096ce5f85749cba6abac77c9c9e764736f6c63430007050033",
							"opcodes": "PUSH1 0x56 PUSH1 0x23 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x16 JUMPI INVALID JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 MLOAD DUP9 0xCA INVALID SWAP2 NOT 0xF7 0xFC SWAP3 0xD 0xD8 PUSH7 0x36348E901B8209 PUSH13 0xE5F85749CBA6ABAC77C9C9E764 PUSH20 0x6F6C634300070500330000000000000000000000 ",
							"sourceMap": "616:3104:4:-:0;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212205188cafe9119f7fc920dd86636348e901b82096ce5f85749cba6abac77c9c9e764736f6c63430007050033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 MLOAD DUP9 0xCA INVALID SWAP2 NOT 0xF7 0xFC SWAP3 0xD 0xD8 PUSH7 0x36348E901B8209 PUSH13 0xE5F85749CBA6ABAC77C9C9E764 PUSH20 0x6F6C634300070500330000000000000000000000 ",
							"sourceMap": "616:3104:4:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"_callOptionalReturn(contract IERC20,bytes memory)": "infinite",
								"safeApprove(contract IERC20,address,uint256)": "infinite",
								"safeDecreaseAllowance(contract IERC20,address,uint256)": "infinite",
								"safeIncreaseAllowance(contract IERC20,address,uint256)": "infinite",
								"safeTransfer(contract IERC20,address,uint256)": "infinite",
								"safeTransferFrom(contract IERC20,address,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 616,
									"end": 3720,
									"name": "PUSH #[$]",
									"source": 4,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 616,
									"end": 3720,
									"name": "PUSH [$]",
									"source": 4,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 616,
									"end": 3720,
									"name": "PUSH",
									"source": 4,
									"value": "B"
								},
								{
									"begin": 616,
									"end": 3720,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 616,
									"end": 3720,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 616,
									"end": 3720,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 616,
									"end": 3720,
									"name": "CODECOPY",
									"source": 4
								},
								{
									"begin": 616,
									"end": 3720,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 616,
									"end": 3720,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 616,
									"end": 3720,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 616,
									"end": 3720,
									"name": "BYTE",
									"source": 4
								},
								{
									"begin": 616,
									"end": 3720,
									"name": "PUSH",
									"source": 4,
									"value": "73"
								},
								{
									"begin": 616,
									"end": 3720,
									"name": "EQ",
									"source": 4
								},
								{
									"begin": 616,
									"end": 3720,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 616,
									"end": 3720,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 616,
									"end": 3720,
									"name": "INVALID",
									"source": 4
								},
								{
									"begin": 616,
									"end": 3720,
									"name": "tag",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 616,
									"end": 3720,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 616,
									"end": 3720,
									"name": "ADDRESS",
									"source": 4
								},
								{
									"begin": 616,
									"end": 3720,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 616,
									"end": 3720,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 616,
									"end": 3720,
									"name": "PUSH",
									"source": 4,
									"value": "73"
								},
								{
									"begin": 616,
									"end": 3720,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 616,
									"end": 3720,
									"name": "MSTORE8",
									"source": 4
								},
								{
									"begin": 616,
									"end": 3720,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 616,
									"end": 3720,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 616,
									"end": 3720,
									"name": "RETURN",
									"source": 4
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212205188cafe9119f7fc920dd86636348e901b82096ce5f85749cba6abac77c9c9e764736f6c63430007050033",
									".code": [
										{
											"begin": 616,
											"end": 3720,
											"name": "PUSHDEPLOYADDRESS",
											"source": 4
										},
										{
											"begin": 616,
											"end": 3720,
											"name": "ADDRESS",
											"source": 4
										},
										{
											"begin": 616,
											"end": 3720,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 616,
											"end": 3720,
											"name": "PUSH",
											"source": 4,
											"value": "80"
										},
										{
											"begin": 616,
											"end": 3720,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 616,
											"end": 3720,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 616,
											"end": 3720,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 616,
											"end": 3720,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 616,
											"end": 3720,
											"name": "REVERT",
											"source": 4
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.7.5+commit.eb77ed08\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Wrappers around ERC20 operations that throw on failure (when the token contract returns false). Tokens that return no value (and instead revert or throw on failure) are also supported, non-reverting calls are assumed to be successful. To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract, which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\",\"kind\":\"dev\",\"methods\":{},\"title\":\"SafeERC20\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"https://github.com/OmniDexFinance/helper/blob/master/%40openzeppelin/contracts/token/ERC20/SafeERC20.sol\":\"SafeERC20\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"https://github.com/OmniDexFinance/helper/blob/master/%40openzeppelin/contracts/math/SafeMath.sol\":{\"keccak256\":\"0xcc78a17dd88fa5a2edc60c8489e2f405c0913b377216a5b26b35656b2d0dab52\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://526dc85e1f9b9b45830e202568d267d93dde7a4fcccf4ad7798dadcd92304d3c\",\"dweb:/ipfs/QmaoXMB972J3cSDLtBq3xBo4jLwqD2uzXTwujtSPqkYVhR\"]},\"https://github.com/OmniDexFinance/helper/blob/master/%40openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x5f02220344881ce43204ae4a6281145a67bc52c2bb1290a791857df3d19d78f5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://24427744bd3e6cb73c17010119af12a318289c0253a4d9acb8576c9fb3797b08\",\"dweb:/ipfs/QmTLDqpKRBuxGxRAmjgXt9AkXyACW3MtKzi7PYjm5iMfGC\"]},\"https://github.com/OmniDexFinance/helper/blob/master/%40openzeppelin/contracts/token/ERC20/SafeERC20.sol\":{\"keccak256\":\"0xf12dfbe97e6276980b83d2830bb0eb75e0cf4f3e626c2471137f82158ae6a0fc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b3a849c2d95e85463909e5b5c920b13e7a11216ca14127085e16d22b9379d52a\",\"dweb:/ipfs/QmUg3CZDbCCcQdroEpexBy5ZFd5vD1UWijWQq9qHZjtJNQ\"]},\"https://github.com/OmniDexFinance/helper/blob/master/%40openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x28911e614500ae7c607a432a709d35da25f3bc5ddc8bd12b278b66358070c0ea\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://256c8c8af5eb072bc473226ab2b2187149b8fc04f5f4a4820db22527f5ce8e3c\",\"dweb:/ipfs/QmRvi5BhnL7Rxf85KrJhwM6RRhukm4tzoctRdgQEheNyiN\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"https://github.com/OmniDexFinance/helper/blob/master/%40openzeppelin/contracts/utils/Address.sol": {
				"Address": {
					"abi": [],
					"devdoc": {
						"details": "Collection of functions related to the address type",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"https://github.com/OmniDexFinance/helper/blob/master/%40openzeppelin/contracts/utils/Address.sol\":134:7818  library Address {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  invalid\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"https://github.com/OmniDexFinance/helper/blob/master/%40openzeppelin/contracts/utils/Address.sol\":134:7818  library Address {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220a1bad6c7a5f50be30a74c4d512311e4daa71a97e00e4591447e261f2b75b841b64736f6c63430007050033\n}\n",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566023600b82828239805160001a607314601657fe5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220a1bad6c7a5f50be30a74c4d512311e4daa71a97e00e4591447e261f2b75b841b64736f6c63430007050033",
							"opcodes": "PUSH1 0x56 PUSH1 0x23 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x16 JUMPI INVALID JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 LOG1 0xBA 0xD6 0xC7 0xA5 CREATE2 SIGNEXTEND 0xE3 EXP PUSH21 0xC4D512311E4DAA71A97E00E4591447E261F2B75B84 SHL PUSH5 0x736F6C6343 STOP SMOD SDIV STOP CALLER ",
							"sourceMap": "134:7684:5:-:0;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220a1bad6c7a5f50be30a74c4d512311e4daa71a97e00e4591447e261f2b75b841b64736f6c63430007050033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 LOG1 0xBA 0xD6 0xC7 0xA5 CREATE2 SIGNEXTEND 0xE3 EXP PUSH21 0xC4D512311E4DAA71A97E00E4591447E261F2B75B84 SHL PUSH5 0x736F6C6343 STOP SMOD SDIV STOP CALLER ",
							"sourceMap": "134:7684:5:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"_verifyCallResult(bool,bytes memory,string memory)": "infinite",
								"functionCall(address,bytes memory)": "infinite",
								"functionCall(address,bytes memory,string memory)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256,string memory)": "infinite",
								"functionDelegateCall(address,bytes memory)": "infinite",
								"functionDelegateCall(address,bytes memory,string memory)": "infinite",
								"functionStaticCall(address,bytes memory)": "infinite",
								"functionStaticCall(address,bytes memory,string memory)": "infinite",
								"isContract(address)": "infinite",
								"sendValue(address payable,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 134,
									"end": 7818,
									"name": "PUSH #[$]",
									"source": 5,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 134,
									"end": 7818,
									"name": "PUSH [$]",
									"source": 5,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 134,
									"end": 7818,
									"name": "PUSH",
									"source": 5,
									"value": "B"
								},
								{
									"begin": 134,
									"end": 7818,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 134,
									"end": 7818,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 134,
									"end": 7818,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 134,
									"end": 7818,
									"name": "CODECOPY",
									"source": 5
								},
								{
									"begin": 134,
									"end": 7818,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 134,
									"end": 7818,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 134,
									"end": 7818,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 134,
									"end": 7818,
									"name": "BYTE",
									"source": 5
								},
								{
									"begin": 134,
									"end": 7818,
									"name": "PUSH",
									"source": 5,
									"value": "73"
								},
								{
									"begin": 134,
									"end": 7818,
									"name": "EQ",
									"source": 5
								},
								{
									"begin": 134,
									"end": 7818,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 134,
									"end": 7818,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 134,
									"end": 7818,
									"name": "INVALID",
									"source": 5
								},
								{
									"begin": 134,
									"end": 7818,
									"name": "tag",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 134,
									"end": 7818,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 134,
									"end": 7818,
									"name": "ADDRESS",
									"source": 5
								},
								{
									"begin": 134,
									"end": 7818,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 134,
									"end": 7818,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 134,
									"end": 7818,
									"name": "PUSH",
									"source": 5,
									"value": "73"
								},
								{
									"begin": 134,
									"end": 7818,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 134,
									"end": 7818,
									"name": "MSTORE8",
									"source": 5
								},
								{
									"begin": 134,
									"end": 7818,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 134,
									"end": 7818,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 134,
									"end": 7818,
									"name": "RETURN",
									"source": 5
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220a1bad6c7a5f50be30a74c4d512311e4daa71a97e00e4591447e261f2b75b841b64736f6c63430007050033",
									".code": [
										{
											"begin": 134,
											"end": 7818,
											"name": "PUSHDEPLOYADDRESS",
											"source": 5
										},
										{
											"begin": 134,
											"end": 7818,
											"name": "ADDRESS",
											"source": 5
										},
										{
											"begin": 134,
											"end": 7818,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 134,
											"end": 7818,
											"name": "PUSH",
											"source": 5,
											"value": "80"
										},
										{
											"begin": 134,
											"end": 7818,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 134,
											"end": 7818,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 134,
											"end": 7818,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 134,
											"end": 7818,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 134,
											"end": 7818,
											"name": "REVERT",
											"source": 5
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.7.5+commit.eb77ed08\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Collection of functions related to the address type\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"https://github.com/OmniDexFinance/helper/blob/master/%40openzeppelin/contracts/utils/Address.sol\":\"Address\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"https://github.com/OmniDexFinance/helper/blob/master/%40openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x28911e614500ae7c607a432a709d35da25f3bc5ddc8bd12b278b66358070c0ea\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://256c8c8af5eb072bc473226ab2b2187149b8fc04f5f4a4820db22527f5ce8e3c\",\"dweb:/ipfs/QmRvi5BhnL7Rxf85KrJhwM6RRhukm4tzoctRdgQEheNyiN\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"https://github.com/OmniDexFinance/helper/blob/master/%40openzeppelin/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.7.5+commit.eb77ed08\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"https://github.com/OmniDexFinance/helper/blob/master/%40openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"https://github.com/OmniDexFinance/helper/blob/master/%40openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x8d3cb350f04ff49cfb10aef08d87f19dcbaecc8027b0bed12f3275cd12f38cf0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ded47ec7c96750f9bd04bbbc84f659992d4ba901cb7b532a52cd468272cf378f\",\"dweb:/ipfs/QmfBrGtQP7rZEqEg6Wz6jh2N2Kukpj1z5v3CGWmAqrzm96\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"https://github.com/OmniDexFinance/helper/blob/master/%40openzeppelin/contracts/utils/Pausable.sol": {
				"Pausable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "Paused",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "Unpaused",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "paused",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which allows children to implement an emergency stop mechanism that can be triggered by an authorized account. This module is used through inheritance. It will make available the modifiers `whenNotPaused` and `whenPaused`, which can be applied to the functions of your contract. Note that they will not be pausable by simply including this module, only once the modifiers are put in place.",
						"events": {
							"Paused(address)": {
								"details": "Emitted when the pause is triggered by `account`."
							},
							"Unpaused(address)": {
								"details": "Emitted when the pause is lifted by `account`."
							}
						},
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract in unpaused state."
							},
							"paused()": {
								"details": "Returns true if the contract is paused, and false otherwise."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"paused()": "5c975abb"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.7.5+commit.eb77ed08\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which allows children to implement an emergency stop mechanism that can be triggered by an authorized account. This module is used through inheritance. It will make available the modifiers `whenNotPaused` and `whenPaused`, which can be applied to the functions of your contract. Note that they will not be pausable by simply including this module, only once the modifiers are put in place.\",\"events\":{\"Paused(address)\":{\"details\":\"Emitted when the pause is triggered by `account`.\"},\"Unpaused(address)\":{\"details\":\"Emitted when the pause is lifted by `account`.\"}},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract in unpaused state.\"},\"paused()\":{\"details\":\"Returns true if the contract is paused, and false otherwise.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"https://github.com/OmniDexFinance/helper/blob/master/%40openzeppelin/contracts/utils/Pausable.sol\":\"Pausable\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"https://github.com/OmniDexFinance/helper/blob/master/%40openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x8d3cb350f04ff49cfb10aef08d87f19dcbaecc8027b0bed12f3275cd12f38cf0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ded47ec7c96750f9bd04bbbc84f659992d4ba901cb7b532a52cd468272cf378f\",\"dweb:/ipfs/QmfBrGtQP7rZEqEg6Wz6jh2N2Kukpj1z5v3CGWmAqrzm96\"]},\"https://github.com/OmniDexFinance/helper/blob/master/%40openzeppelin/contracts/utils/Pausable.sol\":{\"keccak256\":\"0x212fb1b1d4beaf74354dad9bc329f44ee3c5375ef1c32acff76b4ecefc10f1d8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d21c68cb321d1c8d0fa39fd9ecb6bbe3b2f26623b0f38af280a010c916c85f23\",\"dweb:/ipfs/Qmf2P51HRC4ekDHLYfbXu5SXR33gXrWtq6oKSmfyWqVRuC\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 1494,
								"contract": "https://github.com/OmniDexFinance/helper/blob/master/%40openzeppelin/contracts/utils/Pausable.sol:Pausable",
								"label": "_paused",
								"offset": 0,
								"slot": "0",
								"type": "t_bool"
							}
						],
						"types": {
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"errors": [
			{
				"component": "general",
				"errorCode": "1878",
				"formattedMessage": "contracts/Omnidex-incentives/incentives/OmnidexIncentivesVault.sol: Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.\n",
				"message": "SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.",
				"severity": "warning",
				"sourceLocation": {
					"end": -1,
					"file": "contracts/Omnidex-incentives/incentives/OmnidexIncentivesVault.sol",
					"start": -1
				},
				"type": "Warning"
			},
			{
				"component": "general",
				"errorCode": "2462",
				"formattedMessage": "https://github.com/OmniDexFinance/helper/blob/master/%40openzeppelin/contracts/utils/Pausable.sol:32:5: Warning: Visibility for constructor is ignored. If you want the contract to be non-deployable, making it \"abstract\" is sufficient.\n    constructor () internal {\n    ^ (Relevant source part starts here and spans across multiple lines).\n",
				"message": "Visibility for constructor is ignored. If you want the contract to be non-deployable, making it \"abstract\" is sufficient.",
				"severity": "warning",
				"sourceLocation": {
					"end": 957,
					"file": "https://github.com/OmniDexFinance/helper/blob/master/%40openzeppelin/contracts/utils/Pausable.sol",
					"start": 901
				},
				"type": "Warning"
			},
			{
				"component": "general",
				"errorCode": "2462",
				"formattedMessage": "https://github.com/OmniDexFinance/helper/blob/master/%40openzeppelin/contracts/access/Ownable.sol:26:5: Warning: Visibility for constructor is ignored. If you want the contract to be non-deployable, making it \"abstract\" is sufficient.\n    constructor () internal {\n    ^ (Relevant source part starts here and spans across multiple lines).\n",
				"message": "Visibility for constructor is ignored. If you want the contract to be non-deployable, making it \"abstract\" is sufficient.",
				"severity": "warning",
				"sourceLocation": {
					"end": 1009,
					"file": "https://github.com/OmniDexFinance/helper/blob/master/%40openzeppelin/contracts/access/Ownable.sol",
					"start": 850
				},
				"type": "Warning"
			}
		],
		"sources": {
			"contracts/Omnidex-incentives/incentives/OmnidexIncentivesVault.sol": {
				"ast": {
					"absolutePath": "contracts/Omnidex-incentives/incentives/OmnidexIncentivesVault.sol",
					"exportedSymbols": {
						"Address": [
							1453
						],
						"Context": [
							1476
						],
						"IERC20": [
							944
						],
						"OmnidexIncentivesVault": [
							401
						],
						"Ownable": [
							511
						],
						"Pausable": [
							1568
						],
						"SafeERC20": [
							1157
						],
						"SafeMath": [
							866
						]
					},
					"id": 402,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"0.7",
								".5"
							],
							"nodeType": "PragmaDirective",
							"src": "0:22:0"
						},
						{
							"absolutePath": "https://github.com/OmniDexFinance/helper/blob/master/%40openzeppelin/contracts/utils/Pausable.sol",
							"file": "https://github.com/OmniDexFinance/helper/blob/master/%40openzeppelin/contracts/utils/Pausable.sol",
							"id": 2,
							"nodeType": "ImportDirective",
							"scope": 402,
							"sourceUnit": 1569,
							"src": "24:107:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "https://github.com/OmniDexFinance/helper/blob/master/%40openzeppelin/contracts/access/Ownable.sol",
							"file": "https://github.com/OmniDexFinance/helper/blob/master/%40openzeppelin/contracts/access/Ownable.sol",
							"id": 3,
							"nodeType": "ImportDirective",
							"scope": 402,
							"sourceUnit": 512,
							"src": "132:107:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "https://github.com/OmniDexFinance/helper/blob/master/%40openzeppelin/contracts/token/ERC20/SafeERC20.sol",
							"file": "https://github.com/OmniDexFinance/helper/blob/master/%40openzeppelin/contracts/token/ERC20/SafeERC20.sol",
							"id": 4,
							"nodeType": "ImportDirective",
							"scope": 402,
							"sourceUnit": 1158,
							"src": "240:114:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "https://github.com/OmniDexFinance/helper/blob/master/%40openzeppelin/contracts/math/SafeMath.sol",
							"file": "https://github.com/OmniDexFinance/helper/blob/master/%40openzeppelin/contracts/math/SafeMath.sol",
							"id": 5,
							"nodeType": "ImportDirective",
							"scope": 402,
							"sourceUnit": 867,
							"src": "355:106:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "https://github.com/OmniDexFinance/helper/blob/master/%40openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "https://github.com/OmniDexFinance/helper/blob/master/%40openzeppelin/contracts/token/ERC20/IERC20.sol",
							"id": 6,
							"nodeType": "ImportDirective",
							"scope": 402,
							"sourceUnit": 945,
							"src": "462:111:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 7,
										"name": "Ownable",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 511,
										"src": "610:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_Ownable_$511",
											"typeString": "contract Ownable"
										}
									},
									"id": 8,
									"nodeType": "InheritanceSpecifier",
									"src": "610:7:0"
								},
								{
									"baseName": {
										"id": 9,
										"name": "Pausable",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 1568,
										"src": "619:8:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_Pausable_$1568",
											"typeString": "contract Pausable"
										}
									},
									"id": 10,
									"nodeType": "InheritanceSpecifier",
									"src": "619:8:0"
								}
							],
							"contractDependencies": [
								511,
								1476,
								1568
							],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 401,
							"linearizedBaseContracts": [
								401,
								1568,
								511,
								1476
							],
							"name": "OmnidexIncentivesVault",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"id": 13,
									"libraryName": {
										"id": 11,
										"name": "SafeERC20",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 1157,
										"src": "640:9:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_SafeERC20_$1157",
											"typeString": "library SafeERC20"
										}
									},
									"nodeType": "UsingForDirective",
									"src": "634:27:0",
									"typeName": {
										"id": 12,
										"name": "IERC20",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 944,
										"src": "654:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$944",
											"typeString": "contract IERC20"
										}
									}
								},
								{
									"id": 16,
									"libraryName": {
										"id": 14,
										"name": "SafeMath",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 866,
										"src": "672:8:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_SafeMath_$866",
											"typeString": "library SafeMath"
										}
									},
									"nodeType": "UsingForDirective",
									"src": "666:27:0",
									"typeName": {
										"id": 15,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "685:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"constant": false,
									"functionSelector": "fc0c546a",
									"id": 18,
									"mutability": "immutable",
									"name": "token",
									"nodeType": "VariableDeclaration",
									"scope": 401,
									"src": "699:29:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IERC20_$944",
										"typeString": "contract IERC20"
									},
									"typeName": {
										"id": 17,
										"name": "IERC20",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 944,
										"src": "699:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$944",
											"typeString": "contract IERC20"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "f851a440",
									"id": 20,
									"mutability": "mutable",
									"name": "admin",
									"nodeType": "VariableDeclaration",
									"scope": 401,
									"src": "753:20:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 19,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "753:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "8ef57f5e",
									"id": 22,
									"mutability": "mutable",
									"name": "approvedSpender",
									"nodeType": "VariableDeclaration",
									"scope": 401,
									"src": "779:30:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 21,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "779:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "67eeba0c",
									"id": 24,
									"mutability": "mutable",
									"name": "dailyLimit",
									"nodeType": "VariableDeclaration",
									"scope": 401,
									"src": "815:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 23,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "815:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "6b0c932d",
									"id": 26,
									"mutability": "mutable",
									"name": "lastDay",
									"nodeType": "VariableDeclaration",
									"scope": 401,
									"src": "843:19:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 25,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "843:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "f059cf2b",
									"id": 28,
									"mutability": "mutable",
									"name": "spentToday",
									"nodeType": "VariableDeclaration",
									"scope": 401,
									"src": "868:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 27,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "868:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"anonymous": false,
									"id": 34,
									"name": "Deposit",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 33,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 30,
												"indexed": true,
												"mutability": "mutable",
												"name": "sender",
												"nodeType": "VariableDeclaration",
												"scope": 34,
												"src": "911:22:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 29,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "911:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 32,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 34,
												"src": "935:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 31,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "935:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "910:40:0"
									},
									"src": "897:54:0"
								},
								{
									"anonymous": false,
									"id": 40,
									"name": "Withdraw",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 39,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 36,
												"indexed": true,
												"mutability": "mutable",
												"name": "sender",
												"nodeType": "VariableDeclaration",
												"scope": 40,
												"src": "971:22:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 35,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "971:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 38,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 40,
												"src": "995:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 37,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "995:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "970:40:0"
									},
									"src": "956:55:0"
								},
								{
									"anonymous": false,
									"id": 42,
									"name": "Pause",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 41,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1027:2:0"
									},
									"src": "1016:14:0"
								},
								{
									"anonymous": false,
									"id": 44,
									"name": "Unpause",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 43,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1048:2:0"
									},
									"src": "1035:16:0"
								},
								{
									"body": {
										"id": 87,
										"nodeType": "Block",
										"src": "1456:238:0",
										"statements": [
											{
												"expression": {
													"id": 58,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 56,
														"name": "token",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 18,
														"src": "1466:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$944",
															"typeString": "contract IERC20"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 57,
														"name": "_token",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 47,
														"src": "1474:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$944",
															"typeString": "contract IERC20"
														}
													},
													"src": "1466:14:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$944",
														"typeString": "contract IERC20"
													}
												},
												"id": 59,
												"nodeType": "ExpressionStatement",
												"src": "1466:14:0"
											},
											{
												"expression": {
													"id": 62,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 60,
														"name": "approvedSpender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 22,
														"src": "1490:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 61,
														"name": "_approvedSpender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 49,
														"src": "1508:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1490:34:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 63,
												"nodeType": "ExpressionStatement",
												"src": "1490:34:0"
											},
											{
												"expression": {
													"id": 66,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 64,
														"name": "admin",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 20,
														"src": "1534:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 65,
														"name": "_admin",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 51,
														"src": "1542:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1534:14:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 67,
												"nodeType": "ExpressionStatement",
												"src": "1534:14:0"
											},
											{
												"expression": {
													"id": 70,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 68,
														"name": "dailyLimit",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 24,
														"src": "1558:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 69,
														"name": "_dailyLimit",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 53,
														"src": "1571:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1558:24:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 71,
												"nodeType": "ExpressionStatement",
												"src": "1558:24:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 78,
																	"name": "_approvedSpender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 49,
																	"src": "1656:16:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 77,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1648:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 76,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1648:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 79,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1648:25:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 83,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "UnaryOperation",
																	"operator": "-",
																	"prefix": true,
																	"src": "1683:2:0",
																	"subExpression": {
																		"hexValue": "31",
																		"id": 82,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1684:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		},
																		"value": "1"
																	},
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_minus_1_by_1",
																		"typeString": "int_const -1"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_minus_1_by_1",
																		"typeString": "int_const -1"
																	}
																],
																"id": 81,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1675:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint256_$",
																	"typeString": "type(uint256)"
																},
																"typeName": {
																	"id": 80,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "1675:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 84,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1675:11:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 73,
																	"name": "_token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 47,
																	"src": "1628:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$944",
																		"typeString": "contract IERC20"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IERC20_$944",
																		"typeString": "contract IERC20"
																	}
																],
																"id": 72,
																"name": "IERC20",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 944,
																"src": "1621:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IERC20_$944_$",
																	"typeString": "type(contract IERC20)"
																}
															},
															"id": 74,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1621:14:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$944",
																"typeString": "contract IERC20"
															}
														},
														"id": 75,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "safeApprove",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1046,
														"src": "1621:26:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$944_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$944_$",
															"typeString": "function (contract IERC20,address,uint256)"
														}
													},
													"id": 85,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1621:66:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 86,
												"nodeType": "ExpressionStatement",
												"src": "1621:66:0"
											}
										]
									},
									"documentation": {
										"id": 45,
										"nodeType": "StructuredDocumentation",
										"src": "1057:269:0",
										"text": " @notice Constructor\n @param _token: Incentives token contract\n @param _approvedSpender: PullRewardsIncentivesController contract\n @param _admin: address of the admin\n @param _dailyLimit: max permitted incentives spend each day"
									},
									"id": 88,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 54,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 47,
												"mutability": "mutable",
												"name": "_token",
												"nodeType": "VariableDeclaration",
												"scope": 88,
												"src": "1352:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$944",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 46,
													"name": "IERC20",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 944,
													"src": "1352:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$944",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 49,
												"mutability": "mutable",
												"name": "_approvedSpender",
												"nodeType": "VariableDeclaration",
												"scope": 88,
												"src": "1375:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 48,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1375:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 51,
												"mutability": "mutable",
												"name": "_admin",
												"nodeType": "VariableDeclaration",
												"scope": 88,
												"src": "1409:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 50,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1409:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 53,
												"mutability": "mutable",
												"name": "_dailyLimit",
												"nodeType": "VariableDeclaration",
												"scope": 88,
												"src": "1433:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 52,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1433:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1342:113:0"
									},
									"returnParameters": {
										"id": 55,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1456:0:0"
									},
									"scope": 401,
									"src": "1331:363:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 100,
										"nodeType": "Block",
										"src": "1798:80:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 95,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 92,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": -15,
																	"src": "1816:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 93,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "1816:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"id": 94,
																"name": "admin",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 20,
																"src": "1830:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "1816:19:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f6e6c792061646d696e207065726d6974746564",
															"id": 96,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1837:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_3a73473664109d361d295d29a10281b22bb181efd6a8d78fd76a6917b1845cc9",
																"typeString": "literal_string \"Only admin permitted\""
															},
															"value": "Only admin permitted"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_3a73473664109d361d295d29a10281b22bb181efd6a8d78fd76a6917b1845cc9",
																"typeString": "literal_string \"Only admin permitted\""
															}
														],
														"id": 91,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "1808:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 97,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1808:52:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 98,
												"nodeType": "ExpressionStatement",
												"src": "1808:52:0"
											},
											{
												"id": 99,
												"nodeType": "PlaceholderStatement",
												"src": "1870:1:0"
											}
										]
									},
									"documentation": {
										"id": 89,
										"nodeType": "StructuredDocumentation",
										"src": "1700:72:0",
										"text": " @notice Checks if the msg.sender is the admin address"
									},
									"id": 101,
									"name": "onlyAdmin",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 90,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1795:2:0"
									},
									"src": "1777:101:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 113,
										"nodeType": "Block",
										"src": "1983:95:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 108,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 105,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": -15,
																	"src": "2001:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 106,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "2001:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"id": 107,
																"name": "approvedSpender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 22,
																"src": "2015:15:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "2001:29:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4e6f7420616e20617574686f7269736564207370656e646572",
															"id": 109,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2032:27:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_b27ed726582cea341733955e92cd1510b563a25157d0b40d66fb565bd02af14a",
																"typeString": "literal_string \"Not an authorised spender\""
															},
															"value": "Not an authorised spender"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_b27ed726582cea341733955e92cd1510b563a25157d0b40d66fb565bd02af14a",
																"typeString": "literal_string \"Not an authorised spender\""
															}
														],
														"id": 104,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "1993:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 110,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1993:67:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 111,
												"nodeType": "ExpressionStatement",
												"src": "1993:67:0"
											},
											{
												"id": 112,
												"nodeType": "PlaceholderStatement",
												"src": "2070:1:0"
											}
										]
									},
									"documentation": {
										"id": 102,
										"nodeType": "StructuredDocumentation",
										"src": "1884:74:0",
										"text": " @notice Checks if the msg.sender is authorised to spend"
									},
									"id": 114,
									"name": "onlyAuth",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 103,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1980:2:0"
									},
									"src": "1963:115:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 147,
										"nodeType": "Block",
										"src": "2316:171:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 125,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 123,
																"name": "_amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 117,
																"src": "2334:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 124,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2344:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2334:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4e6f7468696e6720746f206465706f736974",
															"id": 126,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2347:20:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_0286ebca00a5e4a573432e60f4227ca76955fded88c2ddaafd3b02077af17470",
																"typeString": "literal_string \"Nothing to deposit\""
															},
															"value": "Nothing to deposit"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_0286ebca00a5e4a573432e60f4227ca76955fded88c2ddaafd3b02077af17470",
																"typeString": "literal_string \"Nothing to deposit\""
															}
														],
														"id": 122,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "2326:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 127,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2326:42:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 128,
												"nodeType": "ExpressionStatement",
												"src": "2326:42:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 132,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": -15,
																"src": "2401:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 133,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "2401:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"arguments": [
																{
																	"id": 136,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": -28,
																	"src": "2421:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_OmnidexIncentivesVault_$401",
																		"typeString": "contract OmnidexIncentivesVault"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_OmnidexIncentivesVault_$401",
																		"typeString": "contract OmnidexIncentivesVault"
																	}
																],
																"id": 135,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2413:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 134,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2413:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 137,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2413:13:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 138,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 117,
															"src": "2428:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 129,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 18,
															"src": "2378:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$944",
																"typeString": "contract IERC20"
															}
														},
														"id": 131,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "safeTransferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1003,
														"src": "2378:22:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$944_$_t_address_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$944_$",
															"typeString": "function (contract IERC20,address,address,uint256)"
														}
													},
													"id": 139,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2378:58:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 140,
												"nodeType": "ExpressionStatement",
												"src": "2378:58:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 142,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": -15,
																"src": "2460:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 143,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "2460:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"id": 144,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 117,
															"src": "2472:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 141,
														"name": "Deposit",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 34,
														"src": "2452:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 145,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2452:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 146,
												"nodeType": "EmitStatement",
												"src": "2447:33:0"
											}
										]
									},
									"documentation": {
										"id": 115,
										"nodeType": "StructuredDocumentation",
										"src": "2084:170:0",
										"text": " @notice Deposits funds into the  Vault\n @dev Only possible when contract not paused.\n @param _amount: number of tokens to deposit (in TLOS)"
									},
									"functionSelector": "b6b55f25",
									"id": 148,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 120,
											"modifierName": {
												"id": 119,
												"name": "whenNotPaused",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 1524,
												"src": "2302:13:0",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "2302:13:0"
										}
									],
									"name": "deposit",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 118,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 117,
												"mutability": "mutable",
												"name": "_amount",
												"nodeType": "VariableDeclaration",
												"scope": 148,
												"src": "2276:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 116,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2276:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2275:17:0"
									},
									"returnParameters": {
										"id": 121,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2316:0:0"
									},
									"scope": 401,
									"src": "2259:228:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 161,
										"nodeType": "Block",
										"src": "2552:54:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 157,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": -28,
																	"src": "2593:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_OmnidexIncentivesVault_$401",
																		"typeString": "contract OmnidexIncentivesVault"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_OmnidexIncentivesVault_$401",
																		"typeString": "contract OmnidexIncentivesVault"
																	}
																],
																"id": 156,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2585:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 155,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2585:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 158,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2585:13:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 153,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 18,
															"src": "2569:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$944",
																"typeString": "contract IERC20"
															}
														},
														"id": 154,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "balanceOf",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 883,
														"src": "2569:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view external returns (uint256)"
														}
													},
													"id": 159,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2569:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 152,
												"id": 160,
												"nodeType": "Return",
												"src": "2562:37:0"
											}
										]
									},
									"functionSelector": "9f9ff3e8",
									"id": 162,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getIncentivesBalance",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 149,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2522:2:0"
									},
									"returnParameters": {
										"id": 152,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 151,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 162,
												"src": "2546:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 150,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2546:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2545:6:0"
									},
									"scope": 401,
									"src": "2493:113:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 182,
										"nodeType": "Block",
										"src": "2719:79:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 171,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": -15,
																"src": "2748:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 172,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "2748:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 177,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": -28,
																			"src": "2784:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_OmnidexIncentivesVault_$401",
																				"typeString": "contract OmnidexIncentivesVault"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_OmnidexIncentivesVault_$401",
																				"typeString": "contract OmnidexIncentivesVault"
																			}
																		],
																		"id": 176,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2776:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 175,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "2776:7:0",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 178,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2776:13:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"expression": {
																	"id": 173,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 18,
																	"src": "2760:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$944",
																		"typeString": "contract IERC20"
																	}
																},
																"id": 174,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "balanceOf",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 883,
																"src": "2760:15:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
																	"typeString": "function (address) view external returns (uint256)"
																}
															},
															"id": 179,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2760:30:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 168,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 18,
															"src": "2729:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$944",
																"typeString": "contract IERC20"
															}
														},
														"id": 170,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "safeTransfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 978,
														"src": "2729:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$944_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$944_$",
															"typeString": "function (contract IERC20,address,uint256)"
														}
													},
													"id": 180,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2729:62:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 181,
												"nodeType": "ExpressionStatement",
												"src": "2729:62:0"
											}
										]
									},
									"documentation": {
										"id": 163,
										"nodeType": "StructuredDocumentation",
										"src": "2612:60:0",
										"text": " @notice Withdraws all funds back to owner"
									},
									"functionSelector": "853828b6",
									"id": 183,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 166,
											"modifierName": {
												"id": 165,
												"name": "onlyOwner",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 460,
												"src": "2709:9:0",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "2709:9:0"
										}
									],
									"name": "withdrawAll",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 164,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2697:2:0"
									},
									"returnParameters": {
										"id": 167,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2719:0:0"
									},
									"scope": 401,
									"src": "2677:121:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 202,
										"nodeType": "Block",
										"src": "2968:111:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 194,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 192,
																"name": "_newDailyLimit",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 186,
																"src": "2986:14:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"hexValue": "30",
																"id": 193,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3003:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2986:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "43616e6e6f74206265206e65676174697665206e756d626572",
															"id": 195,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3007:27:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_eceec419387f89d84bf015f6a031b1c5aa7d480f8fd2cfb4d1dfb0b97c4367ad",
																"typeString": "literal_string \"Cannot be negative number\""
															},
															"value": "Cannot be negative number"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_eceec419387f89d84bf015f6a031b1c5aa7d480f8fd2cfb4d1dfb0b97c4367ad",
																"typeString": "literal_string \"Cannot be negative number\""
															}
														],
														"id": 191,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "2978:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 196,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2978:57:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 197,
												"nodeType": "ExpressionStatement",
												"src": "2978:57:0"
											},
											{
												"expression": {
													"id": 200,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 198,
														"name": "dailyLimit",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 24,
														"src": "3045:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 199,
														"name": "_newDailyLimit",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 186,
														"src": "3058:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3045:27:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 201,
												"nodeType": "ExpressionStatement",
												"src": "3045:27:0"
											}
										]
									},
									"documentation": {
										"id": 184,
										"nodeType": "StructuredDocumentation",
										"src": "2804:96:0",
										"text": " @notice Sets new daily limit\n @dev Only callable by the contract owner."
									},
									"functionSelector": "b20d30a9",
									"id": 203,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 189,
											"modifierName": {
												"id": 188,
												"name": "onlyOwner",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 460,
												"src": "2958:9:0",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "2958:9:0"
										}
									],
									"name": "setDailyLimit",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 187,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 186,
												"mutability": "mutable",
												"name": "_newDailyLimit",
												"nodeType": "VariableDeclaration",
												"scope": 203,
												"src": "2928:19:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 185,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2928:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2927:21:0"
									},
									"returnParameters": {
										"id": 190,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2968:0:0"
									},
									"scope": 401,
									"src": "2905:174:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 210,
										"nodeType": "Block",
										"src": "3137:34:0",
										"statements": [
											{
												"expression": {
													"id": 208,
													"name": "dailyLimit",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 24,
													"src": "3154:10:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 207,
												"id": 209,
												"nodeType": "Return",
												"src": "3147:17:0"
											}
										]
									},
									"functionSelector": "a6895b5a",
									"id": 211,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getDailyLimit",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 204,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3107:2:0"
									},
									"returnParameters": {
										"id": 207,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 206,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 211,
												"src": "3131:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 205,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "3131:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3130:6:0"
									},
									"scope": 401,
									"src": "3085:86:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 233,
										"nodeType": "Block",
										"src": "3329:96:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 225,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 220,
																"name": "_admin",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 214,
																"src": "3347:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 223,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "3365:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 222,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "3357:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 221,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "3357:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 224,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3357:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "3347:20:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "43616e6e6f74206265207a65726f2061646472657373",
															"id": 226,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3369:24:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_6a1ed760cf7af2e11620edf8285fc9e86d9a670d7cdf28b941ed51d6af8b207f",
																"typeString": "literal_string \"Cannot be zero address\""
															},
															"value": "Cannot be zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_6a1ed760cf7af2e11620edf8285fc9e86d9a670d7cdf28b941ed51d6af8b207f",
																"typeString": "literal_string \"Cannot be zero address\""
															}
														],
														"id": 219,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "3339:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 227,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3339:55:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 228,
												"nodeType": "ExpressionStatement",
												"src": "3339:55:0"
											},
											{
												"expression": {
													"id": 231,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 229,
														"name": "admin",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 20,
														"src": "3404:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 230,
														"name": "_admin",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 214,
														"src": "3412:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3404:14:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 232,
												"nodeType": "ExpressionStatement",
												"src": "3404:14:0"
											}
										]
									},
									"documentation": {
										"id": 212,
										"nodeType": "StructuredDocumentation",
										"src": "3177:94:0",
										"text": " @notice Sets admin address\n @dev Only callable by the contract owner."
									},
									"functionSelector": "704b6c02",
									"id": 234,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 217,
											"modifierName": {
												"id": 216,
												"name": "onlyOwner",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 460,
												"src": "3319:9:0",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "3319:9:0"
										}
									],
									"name": "setAdmin",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 215,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 214,
												"mutability": "mutable",
												"name": "_admin",
												"nodeType": "VariableDeclaration",
												"scope": 234,
												"src": "3294:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 213,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3294:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3293:16:0"
									},
									"returnParameters": {
										"id": 218,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3329:0:0"
									},
									"scope": 401,
									"src": "3276:149:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 273,
										"nodeType": "Block",
										"src": "3578:217:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 248,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 243,
																"name": "_token",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 237,
																"src": "3596:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"id": 246,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 18,
																		"src": "3614:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$944",
																			"typeString": "contract IERC20"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IERC20_$944",
																			"typeString": "contract IERC20"
																		}
																	],
																	"id": 245,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "3606:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 244,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "3606:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 247,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3606:14:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "3596:24:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "546f6b656e2063616e6e6f742062652073616d6520617320696e63656e746976657320746f6b656e",
															"id": 249,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3622:42:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_bcc168664a3c14c72586057eda5ba29201ba9e86de7cd2fcc768efe9bd2f6ac9",
																"typeString": "literal_string \"Token cannot be same as incentives token\""
															},
															"value": "Token cannot be same as incentives token"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_bcc168664a3c14c72586057eda5ba29201ba9e86de7cd2fcc768efe9bd2f6ac9",
																"typeString": "literal_string \"Token cannot be same as incentives token\""
															}
														],
														"id": 242,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "3588:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 250,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3588:77:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 251,
												"nodeType": "ExpressionStatement",
												"src": "3588:77:0"
											},
											{
												"assignments": [
													253
												],
												"declarations": [
													{
														"constant": false,
														"id": 253,
														"mutability": "mutable",
														"name": "amount",
														"nodeType": "VariableDeclaration",
														"scope": 273,
														"src": "3675:14:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 252,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3675:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 263,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 260,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": -28,
																	"src": "3725:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_OmnidexIncentivesVault_$401",
																		"typeString": "contract OmnidexIncentivesVault"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_OmnidexIncentivesVault_$401",
																		"typeString": "contract OmnidexIncentivesVault"
																	}
																],
																"id": 259,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "3717:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 258,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "3717:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 261,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3717:13:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 255,
																	"name": "_token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 237,
																	"src": "3699:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 254,
																"name": "IERC20",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 944,
																"src": "3692:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IERC20_$944_$",
																	"typeString": "type(contract IERC20)"
																}
															},
															"id": 256,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3692:14:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$944",
																"typeString": "contract IERC20"
															}
														},
														"id": 257,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "balanceOf",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 883,
														"src": "3692:24:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view external returns (uint256)"
														}
													},
													"id": 262,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3692:39:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3675:56:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 268,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": -15,
																"src": "3769:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 269,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "3769:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"id": 270,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 253,
															"src": "3781:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 265,
																	"name": "_token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 237,
																	"src": "3748:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 264,
																"name": "IERC20",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 944,
																"src": "3741:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IERC20_$944_$",
																	"typeString": "type(contract IERC20)"
																}
															},
															"id": 266,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3741:14:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$944",
																"typeString": "contract IERC20"
															}
														},
														"id": 267,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "safeTransfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 978,
														"src": "3741:27:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$944_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$944_$",
															"typeString": "function (contract IERC20,address,uint256)"
														}
													},
													"id": 271,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3741:47:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 272,
												"nodeType": "ExpressionStatement",
												"src": "3741:47:0"
											}
										]
									},
									"documentation": {
										"id": 235,
										"nodeType": "StructuredDocumentation",
										"src": "3431:77:0",
										"text": " @notice Withdraw unexpected tokens sent to the Charm Vault"
									},
									"functionSelector": "def68a9c",
									"id": 274,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 240,
											"modifierName": {
												"id": 239,
												"name": "onlyAdmin",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 101,
												"src": "3568:9:0",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "3568:9:0"
										}
									],
									"name": "inCaseTokensGetStuck",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 238,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 237,
												"mutability": "mutable",
												"name": "_token",
												"nodeType": "VariableDeclaration",
												"scope": 274,
												"src": "3543:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 236,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3543:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3542:16:0"
									},
									"returnParameters": {
										"id": 241,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3578:0:0"
									},
									"scope": 401,
									"src": "3513:282:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 288,
										"nodeType": "Block",
										"src": "3957:47:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 282,
														"name": "_pause",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1551,
														"src": "3967:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 283,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3967:8:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 284,
												"nodeType": "ExpressionStatement",
												"src": "3967:8:0"
											},
											{
												"eventCall": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 285,
														"name": "Pause",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 42,
														"src": "3990:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 286,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3990:7:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 287,
												"nodeType": "EmitStatement",
												"src": "3985:12:0"
											}
										]
									},
									"documentation": {
										"id": 275,
										"nodeType": "StructuredDocumentation",
										"src": "3801:101:0",
										"text": " @notice Triggers stopped state\n @dev Only possible when contract not paused."
									},
									"functionSelector": "8456cb59",
									"id": 289,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 278,
											"modifierName": {
												"id": 277,
												"name": "onlyAdmin",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 101,
												"src": "3933:9:0",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "3933:9:0"
										},
										{
											"id": 280,
											"modifierName": {
												"id": 279,
												"name": "whenNotPaused",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 1524,
												"src": "3943:13:0",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "3943:13:0"
										}
									],
									"name": "pause",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 276,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3921:2:0"
									},
									"returnParameters": {
										"id": 281,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3957:0:0"
									},
									"scope": 401,
									"src": "3907:97:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 303,
										"nodeType": "Block",
										"src": "4165:51:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 297,
														"name": "_unpause",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1567,
														"src": "4175:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 298,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4175:10:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 299,
												"nodeType": "ExpressionStatement",
												"src": "4175:10:0"
											},
											{
												"eventCall": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 300,
														"name": "Unpause",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 44,
														"src": "4200:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 301,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4200:9:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 302,
												"nodeType": "EmitStatement",
												"src": "4195:14:0"
											}
										]
									},
									"documentation": {
										"id": 290,
										"nodeType": "StructuredDocumentation",
										"src": "4010:101:0",
										"text": " @notice Returns to normal state\n @dev Only possible when contract is paused."
									},
									"functionSelector": "3f4ba83a",
									"id": 304,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 293,
											"modifierName": {
												"id": 292,
												"name": "onlyAdmin",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 101,
												"src": "4144:9:0",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "4144:9:0"
										},
										{
											"id": 295,
											"modifierName": {
												"id": 294,
												"name": "whenPaused",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 1535,
												"src": "4154:10:0",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "4154:10:0"
										}
									],
									"name": "unpause",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 291,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4132:2:0"
									},
									"returnParameters": {
										"id": 296,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4165:0:0"
									},
									"scope": 401,
									"src": "4116:100:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 357,
										"nodeType": "Block",
										"src": "4475:321:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 319,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 317,
																"name": "_amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 309,
																"src": "4493:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 318,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4503:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "4493:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4e6f7468696e6720746f207769746864726177",
															"id": 320,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4506:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_1b19ac089d87f4146c293e731799080c98f8ee751187f94356e96cb0c086a394",
																"typeString": "literal_string \"Nothing to withdraw\""
															},
															"value": "Nothing to withdraw"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_1b19ac089d87f4146c293e731799080c98f8ee751187f94356e96cb0c086a394",
																"typeString": "literal_string \"Nothing to withdraw\""
															}
														],
														"id": 316,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "4485:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 321,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4485:43:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 322,
												"nodeType": "ExpressionStatement",
												"src": "4485:43:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 332,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"id": 328,
																				"name": "this",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": -28,
																				"src": "4570:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_OmnidexIncentivesVault_$401",
																					"typeString": "contract OmnidexIncentivesVault"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_OmnidexIncentivesVault_$401",
																					"typeString": "contract OmnidexIncentivesVault"
																				}
																			],
																			"id": 327,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "4562:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 326,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "4562:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 329,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "4562:13:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"expression": {
																		"id": 324,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 18,
																		"src": "4546:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$944",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 325,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "balanceOf",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 883,
																	"src": "4546:15:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
																		"typeString": "function (address) view external returns (uint256)"
																	}
																},
																"id": 330,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4546:30:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"id": 331,
																"name": "_amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 309,
																"src": "4579:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4546:40:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e73756666696369656e7420696e63656e746976657320617661696c61626c65",
															"id": 333,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4588:35:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_2186895f526e488d7755616513a09664eedf819bfafe4f6fa94396f5afb14e38",
																"typeString": "literal_string \"Insufficient incentives available\""
															},
															"value": "Insufficient incentives available"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_2186895f526e488d7755616513a09664eedf819bfafe4f6fa94396f5afb14e38",
																"typeString": "literal_string \"Insufficient incentives available\""
															}
														],
														"id": 323,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "4538:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 334,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4538:86:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 335,
												"nodeType": "ExpressionStatement",
												"src": "4538:86:0"
											},
											{
												"condition": {
													"arguments": [
														{
															"id": 337,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 309,
															"src": "4651:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 336,
														"name": "isUnderLimit",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 400,
														"src": "4638:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (uint256) returns (bool)"
														}
													},
													"id": 338,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4638:21:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 351,
												"nodeType": "IfStatement",
												"src": "4634:118:0",
												"trueBody": {
													"id": 350,
													"nodeType": "Block",
													"src": "4660:92:0",
													"statements": [
														{
															"expression": {
																"id": 341,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 339,
																	"name": "spentToday",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 28,
																	"src": "4674:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"id": 340,
																	"name": "_amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 309,
																	"src": "4688:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "4674:21:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 342,
															"nodeType": "ExpressionStatement",
															"src": "4674:21:0"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"id": 346,
																		"name": "_to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 307,
																		"src": "4728:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 347,
																		"name": "_amount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 309,
																		"src": "4733:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 343,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 18,
																		"src": "4709:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$944",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 345,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "safeTransfer",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 978,
																	"src": "4709:18:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$944_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$944_$",
																		"typeString": "function (contract IERC20,address,uint256)"
																	}
																},
																"id": 348,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4709:32:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 349,
															"nodeType": "ExpressionStatement",
															"src": "4709:32:0"
														}
													]
												}
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 353,
															"name": "_to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 307,
															"src": "4776:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 354,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 309,
															"src": "4781:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 352,
														"name": "Withdraw",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 40,
														"src": "4767:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 355,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4767:22:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 356,
												"nodeType": "EmitStatement",
												"src": "4762:27:0"
											}
										]
									},
									"documentation": {
										"id": 305,
										"nodeType": "StructuredDocumentation",
										"src": "4222:170:0",
										"text": " @notice Withdraws incentives from funds in the Vault\n @notice can only be called by authorised spenders\n @param _amount: amount to withdraw"
									},
									"functionSelector": "f3fef3a3",
									"id": 358,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 312,
											"modifierName": {
												"id": 311,
												"name": "whenNotPaused",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 1524,
												"src": "4452:13:0",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "4452:13:0"
										},
										{
											"id": 314,
											"modifierName": {
												"id": 313,
												"name": "onlyAuth",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 114,
												"src": "4466:8:0",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "4466:8:0"
										}
									],
									"name": "withdraw",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 310,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 307,
												"mutability": "mutable",
												"name": "_to",
												"nodeType": "VariableDeclaration",
												"scope": 358,
												"src": "4415:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 306,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4415:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 309,
												"mutability": "mutable",
												"name": "_amount",
												"nodeType": "VariableDeclaration",
												"scope": 358,
												"src": "4428:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 308,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4428:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4414:30:0"
									},
									"returnParameters": {
										"id": 315,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4475:0:0"
									},
									"scope": 401,
									"src": "4397:399:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 399,
										"nodeType": "Block",
										"src": "5111:265:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 371,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 366,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": -4,
															"src": "5125:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 367,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "timestamp",
														"nodeType": "MemberAccess",
														"src": "5125:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 370,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 368,
															"name": "lastDay",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 26,
															"src": "5143:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"hexValue": "3234",
															"id": 369,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5153:8:0",
															"subdenomination": "hours",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_86400_by_1",
																"typeString": "int_const 86400"
															},
															"value": "24"
														},
														"src": "5143:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5125:36:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 382,
												"nodeType": "IfStatement",
												"src": "5121:120:0",
												"trueBody": {
													"id": 381,
													"nodeType": "Block",
													"src": "5163:78:0",
													"statements": [
														{
															"expression": {
																"id": 375,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 372,
																	"name": "lastDay",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 26,
																	"src": "5177:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"expression": {
																		"id": 373,
																		"name": "block",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": -4,
																		"src": "5187:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_block",
																			"typeString": "block"
																		}
																	},
																	"id": 374,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "timestamp",
																	"nodeType": "MemberAccess",
																	"src": "5187:15:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5177:25:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 376,
															"nodeType": "ExpressionStatement",
															"src": "5177:25:0"
														},
														{
															"expression": {
																"id": 379,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 377,
																	"name": "spentToday",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 28,
																	"src": "5216:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "30",
																	"id": 378,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5229:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "5216:14:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 380,
															"nodeType": "ExpressionStatement",
															"src": "5216:14:0"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 393,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 387,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 385,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 383,
																"name": "spentToday",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 28,
																"src": "5254:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"id": 384,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 361,
																"src": "5267:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5254:19:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"id": 386,
															"name": "dailyLimit",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 24,
															"src": "5276:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "5254:32:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 392,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 390,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 388,
																"name": "spentToday",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 28,
																"src": "5290:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"id": 389,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 361,
																"src": "5303:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5290:19:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "<",
														"rightExpression": {
															"id": 391,
															"name": "spentToday",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 28,
															"src": "5312:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "5290:32:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "5254:68:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 396,
												"nodeType": "IfStatement",
												"src": "5250:98:0",
												"trueBody": {
													"expression": {
														"hexValue": "66616c7365",
														"id": 394,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5343:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"functionReturnParameters": 365,
													"id": 395,
													"nodeType": "Return",
													"src": "5336:12:0"
												}
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 397,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "5365:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 365,
												"id": 398,
												"nodeType": "Return",
												"src": "5358:11:0"
											}
										]
									},
									"documentation": {
										"id": 359,
										"nodeType": "StructuredDocumentation",
										"src": "4844:183:0",
										"text": "@dev Returns if amount is within daily limit and resets spentToday after one day.\n @param amount Amount to withdraw.\n @return Returns if amount is under daily limit."
									},
									"id": 400,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isUnderLimit",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 362,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 361,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 400,
												"src": "5054:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 360,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "5054:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5053:13:0"
									},
									"returnParameters": {
										"id": 365,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 364,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 400,
												"src": "5101:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 363,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5101:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5100:6:0"
									},
									"scope": 401,
									"src": "5032:344:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 402,
							"src": "575:4803:0"
						}
					],
					"src": "0:5378:0"
				},
				"id": 0
			},
			"https://github.com/OmniDexFinance/helper/blob/master/%40openzeppelin/contracts/access/Ownable.sol": {
				"ast": {
					"absolutePath": "https://github.com/OmniDexFinance/helper/blob/master/%40openzeppelin/contracts/access/Ownable.sol",
					"exportedSymbols": {
						"Context": [
							1476
						],
						"Ownable": [
							511
						]
					},
					"id": 512,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 403,
							"literals": [
								"solidity",
								">=",
								"0.6",
								".0",
								"<",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "33:31:1"
						},
						{
							"absolutePath": "https://github.com/OmniDexFinance/helper/blob/master/%40openzeppelin/contracts/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 404,
							"nodeType": "ImportDirective",
							"scope": 512,
							"sourceUnit": 1477,
							"src": "66:30:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 406,
										"name": "Context",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 1476,
										"src": "621:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_Context_$1476",
											"typeString": "contract Context"
										}
									},
									"id": 407,
									"nodeType": "InheritanceSpecifier",
									"src": "621:7:1"
								}
							],
							"contractDependencies": [
								1476
							],
							"contractKind": "contract",
							"documentation": {
								"id": 405,
								"nodeType": "StructuredDocumentation",
								"src": "97:494:1",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n By default, the owner account will be the one that deploys the contract. This\n can later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 511,
							"linearizedBaseContracts": [
								511,
								1476
							],
							"name": "Ownable",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 409,
									"mutability": "mutable",
									"name": "_owner",
									"nodeType": "VariableDeclaration",
									"scope": 511,
									"src": "635:22:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 408,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "635:7:1",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"anonymous": false,
									"id": 415,
									"name": "OwnershipTransferred",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 414,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 411,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nodeType": "VariableDeclaration",
												"scope": 415,
												"src": "691:29:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 410,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "691:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 413,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nodeType": "VariableDeclaration",
												"scope": 415,
												"src": "722:24:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 412,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "722:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "690:57:1"
									},
									"src": "664:84:1"
								},
								{
									"body": {
										"id": 436,
										"nodeType": "Block",
										"src": "874:135:1",
										"statements": [
											{
												"assignments": [
													420
												],
												"declarations": [
													{
														"constant": false,
														"id": 420,
														"mutability": "mutable",
														"name": "msgSender",
														"nodeType": "VariableDeclaration",
														"scope": 436,
														"src": "884:17:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 419,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "884:7:1",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 423,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 421,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1464,
														"src": "904:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
															"typeString": "function () view returns (address payable)"
														}
													},
													"id": 422,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "904:12:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "884:32:1"
											},
											{
												"expression": {
													"id": 426,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 424,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 409,
														"src": "926:6:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 425,
														"name": "msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 420,
														"src": "935:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "926:18:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 427,
												"nodeType": "ExpressionStatement",
												"src": "926:18:1"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 431,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "988:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 430,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "980:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 429,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "980:7:1",
																	"typeDescriptions": {}
																}
															},
															"id": 432,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "980:10:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"id": 433,
															"name": "msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 420,
															"src": "992:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 428,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 415,
														"src": "959:20:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 434,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "959:43:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 435,
												"nodeType": "EmitStatement",
												"src": "954:48:1"
											}
										]
									},
									"documentation": {
										"id": 416,
										"nodeType": "StructuredDocumentation",
										"src": "754:91:1",
										"text": " @dev Initializes the contract setting the deployer as the initial owner."
									},
									"id": 437,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 417,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "862:2:1"
									},
									"returnParameters": {
										"id": 418,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "874:0:1"
									},
									"scope": 511,
									"src": "850:159:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 445,
										"nodeType": "Block",
										"src": "1140:30:1",
										"statements": [
											{
												"expression": {
													"id": 443,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 409,
													"src": "1157:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 442,
												"id": 444,
												"nodeType": "Return",
												"src": "1150:13:1"
											}
										]
									},
									"documentation": {
										"id": 438,
										"nodeType": "StructuredDocumentation",
										"src": "1015:65:1",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 446,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 439,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1099:2:1"
									},
									"returnParameters": {
										"id": 442,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 441,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 446,
												"src": "1131:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 440,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1131:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1130:9:1"
									},
									"scope": 511,
									"src": "1085:85:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 459,
										"nodeType": "Block",
										"src": "1279:96:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 454,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 450,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 446,
																	"src": "1297:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 451,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1297:7:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 452,
																	"name": "_msgSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1464,
																	"src": "1308:10:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																		"typeString": "function () view returns (address payable)"
																	}
																},
																"id": 453,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1308:12:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "1297:23:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
															"id": 455,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1322:34:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															},
															"value": "Ownable: caller is not the owner"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															}
														],
														"id": 449,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "1289:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 456,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1289:68:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 457,
												"nodeType": "ExpressionStatement",
												"src": "1289:68:1"
											},
											{
												"id": 458,
												"nodeType": "PlaceholderStatement",
												"src": "1367:1:1"
											}
										]
									},
									"documentation": {
										"id": 447,
										"nodeType": "StructuredDocumentation",
										"src": "1176:77:1",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 460,
									"name": "onlyOwner",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 448,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1276:2:1"
									},
									"src": "1258:117:1",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 481,
										"nodeType": "Block",
										"src": "1771:91:1",
										"statements": [
											{
												"eventCall": {
													"arguments": [
														{
															"id": 467,
															"name": "_owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 409,
															"src": "1807:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 470,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1823:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 469,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1815:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 468,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1815:7:1",
																	"typeDescriptions": {}
																}
															},
															"id": 471,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1815:10:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														],
														"id": 466,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 415,
														"src": "1786:20:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 472,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1786:40:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 473,
												"nodeType": "EmitStatement",
												"src": "1781:45:1"
											},
											{
												"expression": {
													"id": 479,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 474,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 409,
														"src": "1836:6:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 477,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1853:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 476,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1845:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 475,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "1845:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 478,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1845:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														}
													},
													"src": "1836:19:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 480,
												"nodeType": "ExpressionStatement",
												"src": "1836:19:1"
											}
										]
									},
									"documentation": {
										"id": 461,
										"nodeType": "StructuredDocumentation",
										"src": "1381:331:1",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions anymore. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby removing any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 482,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 464,
											"modifierName": {
												"id": 463,
												"name": "onlyOwner",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 460,
												"src": "1761:9:1",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "1761:9:1"
										}
									],
									"name": "renounceOwnership",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 462,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1743:2:1"
									},
									"returnParameters": {
										"id": 465,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1771:0:1"
									},
									"scope": 511,
									"src": "1717:145:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 509,
										"nodeType": "Block",
										"src": "2081:170:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 496,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 491,
																"name": "newOwner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 485,
																"src": "2099:8:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 494,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2119:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 493,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2111:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 492,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "2111:7:1",
																		"typeDescriptions": {}
																	}
																},
																"id": 495,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2111:10:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "2099:22:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373",
															"id": 497,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2123:40:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															},
															"value": "Ownable: new owner is the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															}
														],
														"id": 490,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "2091:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 498,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2091:73:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 499,
												"nodeType": "ExpressionStatement",
												"src": "2091:73:1"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 501,
															"name": "_owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 409,
															"src": "2200:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 502,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 485,
															"src": "2208:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 500,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 415,
														"src": "2179:20:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 503,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2179:38:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 504,
												"nodeType": "EmitStatement",
												"src": "2174:43:1"
											},
											{
												"expression": {
													"id": 507,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 505,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 409,
														"src": "2227:6:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 506,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 485,
														"src": "2236:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2227:17:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 508,
												"nodeType": "ExpressionStatement",
												"src": "2227:17:1"
											}
										]
									},
									"documentation": {
										"id": 483,
										"nodeType": "StructuredDocumentation",
										"src": "1868:138:1",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 510,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 488,
											"modifierName": {
												"id": 487,
												"name": "onlyOwner",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 460,
												"src": "2071:9:1",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "2071:9:1"
										}
									],
									"name": "transferOwnership",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 486,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 485,
												"mutability": "mutable",
												"name": "newOwner",
												"nodeType": "VariableDeclaration",
												"scope": 510,
												"src": "2038:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 484,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2038:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2037:18:1"
									},
									"returnParameters": {
										"id": 489,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2081:0:1"
									},
									"scope": 511,
									"src": "2011:240:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								}
							],
							"scope": 512,
							"src": "592:1661:1"
						}
					],
					"src": "33:2221:1"
				},
				"id": 1
			},
			"https://github.com/OmniDexFinance/helper/blob/master/%40openzeppelin/contracts/math/SafeMath.sol": {
				"ast": {
					"absolutePath": "https://github.com/OmniDexFinance/helper/blob/master/%40openzeppelin/contracts/math/SafeMath.sol",
					"exportedSymbols": {
						"SafeMath": [
							866
						]
					},
					"id": 867,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 513,
							"literals": [
								"solidity",
								">=",
								"0.6",
								".0",
								"<",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "33:31:2"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 514,
								"nodeType": "StructuredDocumentation",
								"src": "66:563:2",
								"text": " @dev Wrappers over Solidity's arithmetic operations with added overflow\n checks.\n Arithmetic operations in Solidity wrap on overflow. This can easily result\n in bugs, because programmers usually assume that an overflow raises an\n error, which is the standard behavior in high level programming languages.\n `SafeMath` restores this intuition by reverting the transaction when an\n operation overflows.\n Using this library instead of the unchecked operations eliminates an entire\n class of bugs, so it's recommended to use it always."
							},
							"fullyImplemented": true,
							"id": 866,
							"linearizedBaseContracts": [
								866
							],
							"name": "SafeMath",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 544,
										"nodeType": "Block",
										"src": "865:98:2",
										"statements": [
											{
												"assignments": [
													527
												],
												"declarations": [
													{
														"constant": false,
														"id": 527,
														"mutability": "mutable",
														"name": "c",
														"nodeType": "VariableDeclaration",
														"scope": 544,
														"src": "875:9:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 526,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "875:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 531,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 530,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 528,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 517,
														"src": "887:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"id": 529,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 519,
														"src": "891:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "887:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "875:17:2"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 534,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 532,
														"name": "c",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 527,
														"src": "906:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 533,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 517,
														"src": "910:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "906:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 539,
												"nodeType": "IfStatement",
												"src": "902:28:2",
												"trueBody": {
													"expression": {
														"components": [
															{
																"hexValue": "66616c7365",
																"id": 535,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "921:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "false"
															},
															{
																"hexValue": "30",
																"id": 536,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "928:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"id": 537,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "920:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
															"typeString": "tuple(bool,int_const 0)"
														}
													},
													"functionReturnParameters": 525,
													"id": 538,
													"nodeType": "Return",
													"src": "913:17:2"
												}
											},
											{
												"expression": {
													"components": [
														{
															"hexValue": "74727565",
															"id": 540,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "948:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														},
														{
															"id": 541,
															"name": "c",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 527,
															"src": "954:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"id": 542,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "947:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
														"typeString": "tuple(bool,uint256)"
													}
												},
												"functionReturnParameters": 525,
												"id": 543,
												"nodeType": "Return",
												"src": "940:16:2"
											}
										]
									},
									"documentation": {
										"id": 515,
										"nodeType": "StructuredDocumentation",
										"src": "653:131:2",
										"text": " @dev Returns the addition of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 545,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryAdd",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 520,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 517,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 545,
												"src": "805:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 516,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "805:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 519,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 545,
												"src": "816:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 518,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "816:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "804:22:2"
									},
									"returnParameters": {
										"id": 525,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 522,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 545,
												"src": "850:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 521,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "850:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 524,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 545,
												"src": "856:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 523,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "856:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "849:15:2"
									},
									"scope": 866,
									"src": "789:174:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 571,
										"nodeType": "Block",
										"src": "1185:75:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 559,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 557,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 550,
														"src": "1199:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"id": 558,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 548,
														"src": "1203:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1199:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 564,
												"nodeType": "IfStatement",
												"src": "1195:28:2",
												"trueBody": {
													"expression": {
														"components": [
															{
																"hexValue": "66616c7365",
																"id": 560,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1214:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "false"
															},
															{
																"hexValue": "30",
																"id": 561,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1221:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"id": 562,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "1213:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
															"typeString": "tuple(bool,int_const 0)"
														}
													},
													"functionReturnParameters": 556,
													"id": 563,
													"nodeType": "Return",
													"src": "1206:17:2"
												}
											},
											{
												"expression": {
													"components": [
														{
															"hexValue": "74727565",
															"id": 565,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1241:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														},
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 568,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 566,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 548,
																"src": "1247:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "-",
															"rightExpression": {
																"id": 567,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 550,
																"src": "1251:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1247:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"id": 569,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "1240:13:2",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
														"typeString": "tuple(bool,uint256)"
													}
												},
												"functionReturnParameters": 556,
												"id": 570,
												"nodeType": "Return",
												"src": "1233:20:2"
											}
										]
									},
									"documentation": {
										"id": 546,
										"nodeType": "StructuredDocumentation",
										"src": "969:135:2",
										"text": " @dev Returns the substraction of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 572,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "trySub",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 551,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 548,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 572,
												"src": "1125:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 547,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1125:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 550,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 572,
												"src": "1136:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 549,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1136:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1124:22:2"
									},
									"returnParameters": {
										"id": 556,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 553,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 572,
												"src": "1170:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 552,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1170:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 555,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 572,
												"src": "1176:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 554,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1176:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1169:15:2"
									},
									"scope": 866,
									"src": "1109:151:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 612,
										"nodeType": "Block",
										"src": "1484:359:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 586,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 584,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 575,
														"src": "1716:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 585,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1721:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1716:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 591,
												"nodeType": "IfStatement",
												"src": "1712:28:2",
												"trueBody": {
													"expression": {
														"components": [
															{
																"hexValue": "74727565",
																"id": 587,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1732:4:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "true"
															},
															{
																"hexValue": "30",
																"id": 588,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1738:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"id": 589,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "1731:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
															"typeString": "tuple(bool,int_const 0)"
														}
													},
													"functionReturnParameters": 583,
													"id": 590,
													"nodeType": "Return",
													"src": "1724:16:2"
												}
											},
											{
												"assignments": [
													593
												],
												"declarations": [
													{
														"constant": false,
														"id": 593,
														"mutability": "mutable",
														"name": "c",
														"nodeType": "VariableDeclaration",
														"scope": 612,
														"src": "1750:9:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 592,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1750:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 597,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 596,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 594,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 575,
														"src": "1762:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"id": 595,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 577,
														"src": "1766:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1762:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1750:17:2"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 602,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 600,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 598,
															"name": "c",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 593,
															"src": "1781:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "/",
														"rightExpression": {
															"id": 599,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 575,
															"src": "1785:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "1781:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 601,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 577,
														"src": "1790:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1781:10:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 607,
												"nodeType": "IfStatement",
												"src": "1777:33:2",
												"trueBody": {
													"expression": {
														"components": [
															{
																"hexValue": "66616c7365",
																"id": 603,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1801:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "false"
															},
															{
																"hexValue": "30",
																"id": 604,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1808:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"id": 605,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "1800:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
															"typeString": "tuple(bool,int_const 0)"
														}
													},
													"functionReturnParameters": 583,
													"id": 606,
													"nodeType": "Return",
													"src": "1793:17:2"
												}
											},
											{
												"expression": {
													"components": [
														{
															"hexValue": "74727565",
															"id": 608,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1828:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														},
														{
															"id": 609,
															"name": "c",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 593,
															"src": "1834:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"id": 610,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "1827:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
														"typeString": "tuple(bool,uint256)"
													}
												},
												"functionReturnParameters": 583,
												"id": 611,
												"nodeType": "Return",
												"src": "1820:16:2"
											}
										]
									},
									"documentation": {
										"id": 573,
										"nodeType": "StructuredDocumentation",
										"src": "1266:137:2",
										"text": " @dev Returns the multiplication of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 613,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMul",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 578,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 575,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 613,
												"src": "1424:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 574,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1424:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 577,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 613,
												"src": "1435:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 576,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1435:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1423:22:2"
									},
									"returnParameters": {
										"id": 583,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 580,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 613,
												"src": "1469:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 579,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1469:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 582,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 613,
												"src": "1475:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 581,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1475:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1468:15:2"
									},
									"scope": 866,
									"src": "1408:435:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 639,
										"nodeType": "Block",
										"src": "2068:76:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 627,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 625,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 618,
														"src": "2082:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 626,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2087:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "2082:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 632,
												"nodeType": "IfStatement",
												"src": "2078:29:2",
												"trueBody": {
													"expression": {
														"components": [
															{
																"hexValue": "66616c7365",
																"id": 628,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2098:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "false"
															},
															{
																"hexValue": "30",
																"id": 629,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2105:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"id": 630,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "2097:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
															"typeString": "tuple(bool,int_const 0)"
														}
													},
													"functionReturnParameters": 624,
													"id": 631,
													"nodeType": "Return",
													"src": "2090:17:2"
												}
											},
											{
												"expression": {
													"components": [
														{
															"hexValue": "74727565",
															"id": 633,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2125:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														},
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 636,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 634,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 616,
																"src": "2131:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "/",
															"rightExpression": {
																"id": 635,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 618,
																"src": "2135:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2131:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"id": 637,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "2124:13:2",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
														"typeString": "tuple(bool,uint256)"
													}
												},
												"functionReturnParameters": 624,
												"id": 638,
												"nodeType": "Return",
												"src": "2117:20:2"
											}
										]
									},
									"documentation": {
										"id": 614,
										"nodeType": "StructuredDocumentation",
										"src": "1849:138:2",
										"text": " @dev Returns the division of two unsigned integers, with a division by zero flag.\n _Available since v3.4._"
									},
									"id": 640,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryDiv",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 619,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 616,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 640,
												"src": "2008:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 615,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2008:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 618,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 640,
												"src": "2019:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 617,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2019:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2007:22:2"
									},
									"returnParameters": {
										"id": 624,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 621,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 640,
												"src": "2053:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 620,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2053:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 623,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 640,
												"src": "2059:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 622,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2059:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2052:15:2"
									},
									"scope": 866,
									"src": "1992:152:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 666,
										"nodeType": "Block",
										"src": "2379:76:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 654,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 652,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 645,
														"src": "2393:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 653,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2398:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "2393:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 659,
												"nodeType": "IfStatement",
												"src": "2389:29:2",
												"trueBody": {
													"expression": {
														"components": [
															{
																"hexValue": "66616c7365",
																"id": 655,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2409:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "false"
															},
															{
																"hexValue": "30",
																"id": 656,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2416:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"id": 657,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "2408:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
															"typeString": "tuple(bool,int_const 0)"
														}
													},
													"functionReturnParameters": 651,
													"id": 658,
													"nodeType": "Return",
													"src": "2401:17:2"
												}
											},
											{
												"expression": {
													"components": [
														{
															"hexValue": "74727565",
															"id": 660,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2436:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														},
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 663,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 661,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 643,
																"src": "2442:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "%",
															"rightExpression": {
																"id": 662,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 645,
																"src": "2446:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2442:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"id": 664,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "2435:13:2",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
														"typeString": "tuple(bool,uint256)"
													}
												},
												"functionReturnParameters": 651,
												"id": 665,
												"nodeType": "Return",
												"src": "2428:20:2"
											}
										]
									},
									"documentation": {
										"id": 641,
										"nodeType": "StructuredDocumentation",
										"src": "2150:148:2",
										"text": " @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\n _Available since v3.4._"
									},
									"id": 667,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMod",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 646,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 643,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 667,
												"src": "2319:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 642,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2319:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 645,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 667,
												"src": "2330:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 644,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2330:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2318:22:2"
									},
									"returnParameters": {
										"id": 651,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 648,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 667,
												"src": "2364:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 647,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2364:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 650,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 667,
												"src": "2370:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 649,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2370:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2363:15:2"
									},
									"scope": 866,
									"src": "2303:152:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 692,
										"nodeType": "Block",
										"src": "2757:108:2",
										"statements": [
											{
												"assignments": [
													678
												],
												"declarations": [
													{
														"constant": false,
														"id": 678,
														"mutability": "mutable",
														"name": "c",
														"nodeType": "VariableDeclaration",
														"scope": 692,
														"src": "2767:9:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 677,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2767:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 682,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 681,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 679,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 670,
														"src": "2779:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"id": 680,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 672,
														"src": "2783:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2779:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2767:17:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 686,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 684,
																"name": "c",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 678,
																"src": "2802:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 685,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 670,
																"src": "2807:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2802:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "536166654d6174683a206164646974696f6e206f766572666c6f77",
															"id": 687,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2810:29:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_30cc447bcc13b3e22b45cef0dd9b0b514842d836dd9b6eb384e20dedfb47723a",
																"typeString": "literal_string \"SafeMath: addition overflow\""
															},
															"value": "SafeMath: addition overflow"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_30cc447bcc13b3e22b45cef0dd9b0b514842d836dd9b6eb384e20dedfb47723a",
																"typeString": "literal_string \"SafeMath: addition overflow\""
															}
														],
														"id": 683,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "2794:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 688,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2794:46:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 689,
												"nodeType": "ExpressionStatement",
												"src": "2794:46:2"
											},
											{
												"expression": {
													"id": 690,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 678,
													"src": "2857:1:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 676,
												"id": 691,
												"nodeType": "Return",
												"src": "2850:8:2"
											}
										]
									},
									"documentation": {
										"id": 668,
										"nodeType": "StructuredDocumentation",
										"src": "2461:224:2",
										"text": " @dev Returns the addition of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `+` operator.\n Requirements:\n - Addition cannot overflow."
									},
									"id": 693,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "add",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 673,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 670,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 693,
												"src": "2703:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 669,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2703:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 672,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 693,
												"src": "2714:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 671,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2714:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2702:22:2"
									},
									"returnParameters": {
										"id": 676,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 675,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 693,
												"src": "2748:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 674,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2748:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2747:9:2"
									},
									"scope": 866,
									"src": "2690:175:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 714,
										"nodeType": "Block",
										"src": "3203:88:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 706,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 704,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 698,
																"src": "3221:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"id": 705,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 696,
																"src": "3226:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3221:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "536166654d6174683a207375627472616374696f6e206f766572666c6f77",
															"id": 707,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3229:32:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_50b058e9b5320e58880d88223c9801cd9eecdcf90323d5c2318bc1b6b916e862",
																"typeString": "literal_string \"SafeMath: subtraction overflow\""
															},
															"value": "SafeMath: subtraction overflow"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_50b058e9b5320e58880d88223c9801cd9eecdcf90323d5c2318bc1b6b916e862",
																"typeString": "literal_string \"SafeMath: subtraction overflow\""
															}
														],
														"id": 703,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "3213:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 708,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3213:49:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 709,
												"nodeType": "ExpressionStatement",
												"src": "3213:49:2"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 712,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 710,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 696,
														"src": "3279:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"id": 711,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 698,
														"src": "3283:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3279:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 702,
												"id": 713,
												"nodeType": "Return",
												"src": "3272:12:2"
											}
										]
									},
									"documentation": {
										"id": 694,
										"nodeType": "StructuredDocumentation",
										"src": "2871:260:2",
										"text": " @dev Returns the subtraction of two unsigned integers, reverting on\n overflow (when the result is negative).\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."
									},
									"id": 715,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 699,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 696,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 715,
												"src": "3149:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 695,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3149:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 698,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 715,
												"src": "3160:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 697,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3160:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3148:22:2"
									},
									"returnParameters": {
										"id": 702,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 701,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 715,
												"src": "3194:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 700,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3194:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3193:9:2"
									},
									"scope": 866,
									"src": "3136:155:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 748,
										"nodeType": "Block",
										"src": "3605:148:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 727,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 725,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 718,
														"src": "3619:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 726,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3624:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "3619:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 730,
												"nodeType": "IfStatement",
												"src": "3615:20:2",
												"trueBody": {
													"expression": {
														"hexValue": "30",
														"id": 728,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3634:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"functionReturnParameters": 724,
													"id": 729,
													"nodeType": "Return",
													"src": "3627:8:2"
												}
											},
											{
												"assignments": [
													732
												],
												"declarations": [
													{
														"constant": false,
														"id": 732,
														"mutability": "mutable",
														"name": "c",
														"nodeType": "VariableDeclaration",
														"scope": 748,
														"src": "3645:9:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 731,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3645:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 736,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 735,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 733,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 718,
														"src": "3657:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"id": 734,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 720,
														"src": "3661:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3657:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3645:17:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 742,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 740,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 738,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 732,
																	"src": "3680:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"id": 739,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 718,
																	"src": "3684:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "3680:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"id": 741,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 720,
																"src": "3689:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3680:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f77",
															"id": 743,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3692:35:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9113bb53c2876a3805b2c9242029423fc540a728243ce887ab24c82cf119fba3",
																"typeString": "literal_string \"SafeMath: multiplication overflow\""
															},
															"value": "SafeMath: multiplication overflow"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9113bb53c2876a3805b2c9242029423fc540a728243ce887ab24c82cf119fba3",
																"typeString": "literal_string \"SafeMath: multiplication overflow\""
															}
														],
														"id": 737,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "3672:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 744,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3672:56:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 745,
												"nodeType": "ExpressionStatement",
												"src": "3672:56:2"
											},
											{
												"expression": {
													"id": 746,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 732,
													"src": "3745:1:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 724,
												"id": 747,
												"nodeType": "Return",
												"src": "3738:8:2"
											}
										]
									},
									"documentation": {
										"id": 716,
										"nodeType": "StructuredDocumentation",
										"src": "3297:236:2",
										"text": " @dev Returns the multiplication of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `*` operator.\n Requirements:\n - Multiplication cannot overflow."
									},
									"id": 749,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mul",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 721,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 718,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 749,
												"src": "3551:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 717,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3551:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 720,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 749,
												"src": "3562:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 719,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3562:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3550:22:2"
									},
									"returnParameters": {
										"id": 724,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 723,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 749,
												"src": "3596:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 722,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3596:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3595:9:2"
									},
									"scope": 866,
									"src": "3538:215:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 770,
										"nodeType": "Block",
										"src": "4284:83:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 762,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 760,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 754,
																"src": "4302:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 761,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4306:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "4302:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "536166654d6174683a206469766973696f6e206279207a65726f",
															"id": 763,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4309:28:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_5b7cc70dda4dc2143e5adb63bd5d1f349504f461dbdfd9bc76fac1f8ca6d019f",
																"typeString": "literal_string \"SafeMath: division by zero\""
															},
															"value": "SafeMath: division by zero"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_5b7cc70dda4dc2143e5adb63bd5d1f349504f461dbdfd9bc76fac1f8ca6d019f",
																"typeString": "literal_string \"SafeMath: division by zero\""
															}
														],
														"id": 759,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "4294:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 764,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4294:44:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 765,
												"nodeType": "ExpressionStatement",
												"src": "4294:44:2"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 768,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 766,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 752,
														"src": "4355:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"id": 767,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 754,
														"src": "4359:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4355:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 758,
												"id": 769,
												"nodeType": "Return",
												"src": "4348:12:2"
											}
										]
									},
									"documentation": {
										"id": 750,
										"nodeType": "StructuredDocumentation",
										"src": "3759:453:2",
										"text": " @dev Returns the integer division of two unsigned integers, reverting on\n division by zero. The result is rounded towards zero.\n Counterpart to Solidity's `/` operator. Note: this function uses a\n `revert` opcode (which leaves remaining gas untouched) while Solidity\n uses an invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 771,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 755,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 752,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 771,
												"src": "4230:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 751,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4230:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 754,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 771,
												"src": "4241:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 753,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4241:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4229:22:2"
									},
									"returnParameters": {
										"id": 758,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 757,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 771,
												"src": "4275:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 756,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4275:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4274:9:2"
									},
									"scope": 866,
									"src": "4217:150:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 792,
										"nodeType": "Block",
										"src": "4887:81:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 784,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 782,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 776,
																"src": "4905:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 783,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4909:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "4905:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "536166654d6174683a206d6f64756c6f206279207a65726f",
															"id": 785,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4912:26:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_726e51f7b81fce0a68f5f214f445e275313b20b1633f08ce954ee39abf8d7832",
																"typeString": "literal_string \"SafeMath: modulo by zero\""
															},
															"value": "SafeMath: modulo by zero"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_726e51f7b81fce0a68f5f214f445e275313b20b1633f08ce954ee39abf8d7832",
																"typeString": "literal_string \"SafeMath: modulo by zero\""
															}
														],
														"id": 781,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "4897:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 786,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4897:42:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 787,
												"nodeType": "ExpressionStatement",
												"src": "4897:42:2"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 790,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 788,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 774,
														"src": "4956:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "%",
													"rightExpression": {
														"id": 789,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 776,
														"src": "4960:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4956:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 780,
												"id": 791,
												"nodeType": "Return",
												"src": "4949:12:2"
											}
										]
									},
									"documentation": {
										"id": 772,
										"nodeType": "StructuredDocumentation",
										"src": "4373:442:2",
										"text": " @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n reverting when dividing by zero.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 793,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 777,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 774,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 793,
												"src": "4833:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 773,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4833:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 776,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 793,
												"src": "4844:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 775,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4844:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4832:22:2"
									},
									"returnParameters": {
										"id": 780,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 779,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 793,
												"src": "4878:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 778,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4878:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4877:9:2"
									},
									"scope": 866,
									"src": "4820:148:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 816,
										"nodeType": "Block",
										"src": "5527:68:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 808,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 806,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 798,
																"src": "5545:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"id": 807,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 796,
																"src": "5550:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5545:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 809,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 800,
															"src": "5553:12:2",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 805,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "5537:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 810,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5537:29:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 811,
												"nodeType": "ExpressionStatement",
												"src": "5537:29:2"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 814,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 812,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 796,
														"src": "5583:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"id": 813,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 798,
														"src": "5587:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5583:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 804,
												"id": 815,
												"nodeType": "Return",
												"src": "5576:12:2"
											}
										]
									},
									"documentation": {
										"id": 794,
										"nodeType": "StructuredDocumentation",
										"src": "4974:453:2",
										"text": " @dev Returns the subtraction of two unsigned integers, reverting with custom message on\n overflow (when the result is negative).\n CAUTION: This function is deprecated because it requires allocating memory for the error\n message unnecessarily. For custom revert reasons use {trySub}.\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."
									},
									"id": 817,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 801,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 796,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 817,
												"src": "5445:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 795,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5445:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 798,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 817,
												"src": "5456:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 797,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5456:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 800,
												"mutability": "mutable",
												"name": "errorMessage",
												"nodeType": "VariableDeclaration",
												"scope": 817,
												"src": "5467:26:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 799,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5467:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5444:50:2"
									},
									"returnParameters": {
										"id": 804,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 803,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 817,
												"src": "5518:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 802,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5518:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5517:9:2"
									},
									"scope": 866,
									"src": "5432:163:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 840,
										"nodeType": "Block",
										"src": "6347:67:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 832,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 830,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 822,
																"src": "6365:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 831,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6369:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "6365:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 833,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 824,
															"src": "6372:12:2",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 829,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "6357:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 834,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6357:28:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 835,
												"nodeType": "ExpressionStatement",
												"src": "6357:28:2"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 838,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 836,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 820,
														"src": "6402:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"id": 837,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 822,
														"src": "6406:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "6402:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 828,
												"id": 839,
												"nodeType": "Return",
												"src": "6395:12:2"
											}
										]
									},
									"documentation": {
										"id": 818,
										"nodeType": "StructuredDocumentation",
										"src": "5601:646:2",
										"text": " @dev Returns the integer division of two unsigned integers, reverting with custom message on\n division by zero. The result is rounded towards zero.\n CAUTION: This function is deprecated because it requires allocating memory for the error\n message unnecessarily. For custom revert reasons use {tryDiv}.\n Counterpart to Solidity's `/` operator. Note: this function uses a\n `revert` opcode (which leaves remaining gas untouched) while Solidity\n uses an invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 841,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 825,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 820,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 841,
												"src": "6265:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 819,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6265:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 822,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 841,
												"src": "6276:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 821,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6276:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 824,
												"mutability": "mutable",
												"name": "errorMessage",
												"nodeType": "VariableDeclaration",
												"scope": 841,
												"src": "6287:26:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 823,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "6287:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6264:50:2"
									},
									"returnParameters": {
										"id": 828,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 827,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 841,
												"src": "6338:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 826,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6338:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6337:9:2"
									},
									"scope": 866,
									"src": "6252:162:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 864,
										"nodeType": "Block",
										"src": "7155:67:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 856,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 854,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 846,
																"src": "7173:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 855,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "7177:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "7173:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 857,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 848,
															"src": "7180:12:2",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 853,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "7165:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 858,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7165:28:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 859,
												"nodeType": "ExpressionStatement",
												"src": "7165:28:2"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 862,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 860,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 844,
														"src": "7210:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "%",
													"rightExpression": {
														"id": 861,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 846,
														"src": "7214:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "7210:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 852,
												"id": 863,
												"nodeType": "Return",
												"src": "7203:12:2"
											}
										]
									},
									"documentation": {
										"id": 842,
										"nodeType": "StructuredDocumentation",
										"src": "6420:635:2",
										"text": " @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n reverting with custom message when dividing by zero.\n CAUTION: This function is deprecated because it requires allocating memory for the error\n message unnecessarily. For custom revert reasons use {tryMod}.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 865,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 849,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 844,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 865,
												"src": "7073:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 843,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7073:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 846,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 865,
												"src": "7084:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 845,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7084:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 848,
												"mutability": "mutable",
												"name": "errorMessage",
												"nodeType": "VariableDeclaration",
												"scope": 865,
												"src": "7095:26:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 847,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "7095:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7072:50:2"
									},
									"returnParameters": {
										"id": 852,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 851,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 865,
												"src": "7146:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 850,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7146:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7145:9:2"
									},
									"scope": 866,
									"src": "7060:162:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 867,
							"src": "630:6594:2"
						}
					],
					"src": "33:7192:2"
				},
				"id": 2
			},
			"https://github.com/OmniDexFinance/helper/blob/master/%40openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "https://github.com/OmniDexFinance/helper/blob/master/%40openzeppelin/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							944
						]
					},
					"id": 945,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 868,
							"literals": [
								"solidity",
								">=",
								"0.6",
								".0",
								"<",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "33:31:3"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 869,
								"nodeType": "StructuredDocumentation",
								"src": "66:70:3",
								"text": " @dev Interface of the ERC20 standard as defined in the EIP."
							},
							"fullyImplemented": false,
							"id": 944,
							"linearizedBaseContracts": [
								944
							],
							"name": "IERC20",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 870,
										"nodeType": "StructuredDocumentation",
										"src": "160:66:3",
										"text": " @dev Returns the amount of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 875,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 871,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "251:2:3"
									},
									"returnParameters": {
										"id": 874,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 873,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 875,
												"src": "277:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 872,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "277:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "276:9:3"
									},
									"scope": 944,
									"src": "231:55:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 876,
										"nodeType": "StructuredDocumentation",
										"src": "292:72:3",
										"text": " @dev Returns the amount of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 883,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 879,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 878,
												"mutability": "mutable",
												"name": "account",
												"nodeType": "VariableDeclaration",
												"scope": 883,
												"src": "388:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 877,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "388:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "387:17:3"
									},
									"returnParameters": {
										"id": 882,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 881,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 883,
												"src": "428:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 880,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "428:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "427:9:3"
									},
									"scope": 944,
									"src": "369:68:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 884,
										"nodeType": "StructuredDocumentation",
										"src": "443:209:3",
										"text": " @dev Moves `amount` tokens from the caller's account to `recipient`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 893,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 889,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 886,
												"mutability": "mutable",
												"name": "recipient",
												"nodeType": "VariableDeclaration",
												"scope": 893,
												"src": "675:17:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 885,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "675:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 888,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 893,
												"src": "694:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 887,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "694:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "674:35:3"
									},
									"returnParameters": {
										"id": 892,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 891,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 893,
												"src": "728:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 890,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "728:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "727:6:3"
									},
									"scope": 944,
									"src": "657:77:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 894,
										"nodeType": "StructuredDocumentation",
										"src": "740:264:3",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 903,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 899,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 896,
												"mutability": "mutable",
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"scope": 903,
												"src": "1028:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 895,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1028:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 898,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 903,
												"src": "1043:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 897,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1043:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1027:32:3"
									},
									"returnParameters": {
										"id": 902,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 901,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 903,
												"src": "1083:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 900,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1083:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1082:9:3"
									},
									"scope": 944,
									"src": "1009:83:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 904,
										"nodeType": "StructuredDocumentation",
										"src": "1098:642:3",
										"text": " @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 913,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 909,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 906,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 913,
												"src": "1762:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 905,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1762:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 908,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 913,
												"src": "1779:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 907,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1779:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1761:33:3"
									},
									"returnParameters": {
										"id": 912,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 911,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 913,
												"src": "1813:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 910,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1813:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1812:6:3"
									},
									"scope": 944,
									"src": "1745:74:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 914,
										"nodeType": "StructuredDocumentation",
										"src": "1825:296:3",
										"text": " @dev Moves `amount` tokens from `sender` to `recipient` using the\n allowance mechanism. `amount` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 925,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 921,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 916,
												"mutability": "mutable",
												"name": "sender",
												"nodeType": "VariableDeclaration",
												"scope": 925,
												"src": "2148:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 915,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2148:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 918,
												"mutability": "mutable",
												"name": "recipient",
												"nodeType": "VariableDeclaration",
												"scope": 925,
												"src": "2164:17:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 917,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2164:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 920,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 925,
												"src": "2183:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 919,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2183:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2147:51:3"
									},
									"returnParameters": {
										"id": 924,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 923,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 925,
												"src": "2217:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 922,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2217:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2216:6:3"
									},
									"scope": 944,
									"src": "2126:97:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 926,
										"nodeType": "StructuredDocumentation",
										"src": "2229:158:3",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"id": 934,
									"name": "Transfer",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 933,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 928,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nodeType": "VariableDeclaration",
												"scope": 934,
												"src": "2407:20:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 927,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2407:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 930,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 934,
												"src": "2429:18:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 929,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2429:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 932,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 934,
												"src": "2449:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 931,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2449:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2406:57:3"
									},
									"src": "2392:72:3"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 935,
										"nodeType": "StructuredDocumentation",
										"src": "2470:148:3",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"id": 943,
									"name": "Approval",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 942,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 937,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"scope": 943,
												"src": "2638:21:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 936,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2638:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 939,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 943,
												"src": "2661:23:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 938,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2661:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 941,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 943,
												"src": "2686:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 940,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2686:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2637:63:3"
									},
									"src": "2623:78:3"
								}
							],
							"scope": 945,
							"src": "137:2566:3"
						}
					],
					"src": "33:2671:3"
				},
				"id": 3
			},
			"https://github.com/OmniDexFinance/helper/blob/master/%40openzeppelin/contracts/token/ERC20/SafeERC20.sol": {
				"ast": {
					"absolutePath": "https://github.com/OmniDexFinance/helper/blob/master/%40openzeppelin/contracts/token/ERC20/SafeERC20.sol",
					"exportedSymbols": {
						"Address": [
							1453
						],
						"IERC20": [
							944
						],
						"SafeERC20": [
							1157
						],
						"SafeMath": [
							866
						]
					},
					"id": 1158,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 946,
							"literals": [
								"solidity",
								">=",
								"0.6",
								".0",
								"<",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "33:31:4"
						},
						{
							"absolutePath": "https://github.com/OmniDexFinance/helper/blob/master/%40openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "./IERC20.sol",
							"id": 947,
							"nodeType": "ImportDirective",
							"scope": 1158,
							"sourceUnit": 945,
							"src": "66:22:4",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "https://github.com/OmniDexFinance/helper/blob/master/%40openzeppelin/contracts/math/SafeMath.sol",
							"file": "../../math/SafeMath.sol",
							"id": 948,
							"nodeType": "ImportDirective",
							"scope": 1158,
							"sourceUnit": 867,
							"src": "89:33:4",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "https://github.com/OmniDexFinance/helper/blob/master/%40openzeppelin/contracts/utils/Address.sol",
							"file": "../../utils/Address.sol",
							"id": 949,
							"nodeType": "ImportDirective",
							"scope": 1158,
							"sourceUnit": 1454,
							"src": "123:33:4",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 950,
								"nodeType": "StructuredDocumentation",
								"src": "158:457:4",
								"text": " @title SafeERC20\n @dev Wrappers around ERC20 operations that throw on failure (when the token\n contract returns false). Tokens that return no value (and instead revert or\n throw on failure) are also supported, non-reverting calls are assumed to be\n successful.\n To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\n which allows you to call the safe operations as `token.safeTransfer(...)`, etc."
							},
							"fullyImplemented": true,
							"id": 1157,
							"linearizedBaseContracts": [
								1157
							],
							"name": "SafeERC20",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"id": 953,
									"libraryName": {
										"id": 951,
										"name": "SafeMath",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 866,
										"src": "646:8:4",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_SafeMath_$866",
											"typeString": "library SafeMath"
										}
									},
									"nodeType": "UsingForDirective",
									"src": "640:27:4",
									"typeName": {
										"id": 952,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "659:7:4",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"id": 956,
									"libraryName": {
										"id": 954,
										"name": "Address",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 1453,
										"src": "678:7:4",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_Address_$1453",
											"typeString": "library Address"
										}
									},
									"nodeType": "UsingForDirective",
									"src": "672:26:4",
									"typeName": {
										"id": 955,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "690:7:4",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									}
								},
								{
									"body": {
										"id": 977,
										"nodeType": "Block",
										"src": "776:103:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 966,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 958,
															"src": "806:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$944",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"expression": {
																			"id": 969,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 958,
																			"src": "836:5:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$944",
																				"typeString": "contract IERC20"
																			}
																		},
																		"id": 970,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "transfer",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 893,
																		"src": "836:14:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function (address,uint256) external returns (bool)"
																		}
																	},
																	"id": 971,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"src": "836:23:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"id": 972,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 960,
																	"src": "861:2:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 973,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 962,
																	"src": "865:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 967,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": -1,
																	"src": "813:3:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 968,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"src": "813:22:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 974,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "813:58:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$944",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 965,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1156,
														"src": "786:19:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$944_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 975,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "786:86:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 976,
												"nodeType": "ExpressionStatement",
												"src": "786:86:4"
											}
										]
									},
									"id": 978,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransfer",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 963,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 958,
												"mutability": "mutable",
												"name": "token",
												"nodeType": "VariableDeclaration",
												"scope": 978,
												"src": "726:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$944",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 957,
													"name": "IERC20",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 944,
													"src": "726:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$944",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 960,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 978,
												"src": "740:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 959,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "740:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 962,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 978,
												"src": "752:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 961,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "752:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "725:41:4"
									},
									"returnParameters": {
										"id": 964,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "776:0:4"
									},
									"scope": 1157,
									"src": "704:175:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1002,
										"nodeType": "Block",
										"src": "975:113:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 990,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 980,
															"src": "1005:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$944",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"expression": {
																			"id": 993,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 980,
																			"src": "1035:5:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$944",
																				"typeString": "contract IERC20"
																			}
																		},
																		"id": 994,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "transferFrom",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 925,
																		"src": "1035:18:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function (address,address,uint256) external returns (bool)"
																		}
																	},
																	"id": 995,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"src": "1035:27:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"id": 996,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 982,
																	"src": "1064:4:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 997,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 984,
																	"src": "1070:2:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 998,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 986,
																	"src": "1074:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 991,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": -1,
																	"src": "1012:3:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 992,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"src": "1012:22:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 999,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1012:68:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$944",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 989,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1156,
														"src": "985:19:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$944_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 1000,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "985:96:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1001,
												"nodeType": "ExpressionStatement",
												"src": "985:96:4"
											}
										]
									},
									"id": 1003,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 987,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 980,
												"mutability": "mutable",
												"name": "token",
												"nodeType": "VariableDeclaration",
												"scope": 1003,
												"src": "911:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$944",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 979,
													"name": "IERC20",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 944,
													"src": "911:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$944",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 982,
												"mutability": "mutable",
												"name": "from",
												"nodeType": "VariableDeclaration",
												"scope": 1003,
												"src": "925:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 981,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "925:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 984,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 1003,
												"src": "939:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 983,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "939:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 986,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 1003,
												"src": "951:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 985,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "951:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "910:55:4"
									},
									"returnParameters": {
										"id": 988,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "975:0:4"
									},
									"scope": 1157,
									"src": "885:203:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1045,
										"nodeType": "Block",
										"src": "1424:537:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 1029,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1016,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1014,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1010,
																			"src": "1713:5:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 1015,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1722:1:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "1713:10:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"id": 1017,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1712:12:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1027,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"id": 1022,
																							"name": "this",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": -28,
																							"src": "1753:4:4",
																							"typeDescriptions": {
																								"typeIdentifier": "t_contract$_SafeERC20_$1157",
																								"typeString": "library SafeERC20"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_contract$_SafeERC20_$1157",
																								"typeString": "library SafeERC20"
																							}
																						],
																						"id": 1021,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"nodeType": "ElementaryTypeNameExpression",
																						"src": "1745:7:4",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_address_$",
																							"typeString": "type(address)"
																						},
																						"typeName": {
																							"id": 1020,
																							"name": "address",
																							"nodeType": "ElementaryTypeName",
																							"src": "1745:7:4",
																							"typeDescriptions": {}
																						}
																					},
																					"id": 1023,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "typeConversion",
																					"lValueRequested": false,
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "1745:13:4",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 1024,
																					"name": "spender",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1008,
																					"src": "1760:7:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				],
																				"expression": {
																					"id": 1018,
																					"name": "token",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1006,
																					"src": "1729:5:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC20_$944",
																						"typeString": "contract IERC20"
																					}
																				},
																				"id": 1019,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "allowance",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 903,
																				"src": "1729:15:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
																					"typeString": "function (address,address) view external returns (uint256)"
																				}
																			},
																			"id": 1025,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "1729:39:4",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 1026,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1772:1:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "1729:44:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"id": 1028,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1728:46:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "1712:62:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5361666545524332303a20617070726f76652066726f6d206e6f6e2d7a65726f20746f206e6f6e2d7a65726f20616c6c6f77616e6365",
															"id": 1030,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1788:56:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ef945ddb1bfdc0da870feb4560d868b047642b4ac7f2fb7f8b7c51cb4a411e25",
																"typeString": "literal_string \"SafeERC20: approve from non-zero to non-zero allowance\""
															},
															"value": "SafeERC20: approve from non-zero to non-zero allowance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ef945ddb1bfdc0da870feb4560d868b047642b4ac7f2fb7f8b7c51cb4a411e25",
																"typeString": "literal_string \"SafeERC20: approve from non-zero to non-zero allowance\""
															}
														],
														"id": 1013,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "1704:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1031,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1704:150:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1032,
												"nodeType": "ExpressionStatement",
												"src": "1704:150:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1034,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1006,
															"src": "1884:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$944",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"expression": {
																			"id": 1037,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1006,
																			"src": "1914:5:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$944",
																				"typeString": "contract IERC20"
																			}
																		},
																		"id": 1038,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "approve",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 913,
																		"src": "1914:13:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function (address,uint256) external returns (bool)"
																		}
																	},
																	"id": 1039,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"src": "1914:22:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"id": 1040,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1008,
																	"src": "1938:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 1041,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1010,
																	"src": "1947:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 1035,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": -1,
																	"src": "1891:3:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 1036,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"src": "1891:22:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 1042,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1891:62:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$944",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1033,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1156,
														"src": "1864:19:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$944_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 1043,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1864:90:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1044,
												"nodeType": "ExpressionStatement",
												"src": "1864:90:4"
											}
										]
									},
									"documentation": {
										"id": 1004,
										"nodeType": "StructuredDocumentation",
										"src": "1094:249:4",
										"text": " @dev Deprecated. This function has issues similar to the ones found in\n {IERC20-approve}, and its usage is discouraged.\n Whenever possible, use {safeIncreaseAllowance} and\n {safeDecreaseAllowance} instead."
									},
									"id": 1046,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeApprove",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1011,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1006,
												"mutability": "mutable",
												"name": "token",
												"nodeType": "VariableDeclaration",
												"scope": 1046,
												"src": "1369:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$944",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 1005,
													"name": "IERC20",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 944,
													"src": "1369:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$944",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1008,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 1046,
												"src": "1383:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1007,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1383:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1010,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 1046,
												"src": "1400:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1009,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1400:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1368:46:4"
									},
									"returnParameters": {
										"id": 1012,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1424:0:4"
									},
									"scope": 1157,
									"src": "1348:613:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1081,
										"nodeType": "Block",
										"src": "2053:197:4",
										"statements": [
											{
												"assignments": [
													1056
												],
												"declarations": [
													{
														"constant": false,
														"id": 1056,
														"mutability": "mutable",
														"name": "newAllowance",
														"nodeType": "VariableDeclaration",
														"scope": 1081,
														"src": "2063:20:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1055,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2063:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1068,
												"initialValue": {
													"arguments": [
														{
															"id": 1066,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1052,
															"src": "2130:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 1061,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": -28,
																			"src": "2110:4:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_SafeERC20_$1157",
																				"typeString": "library SafeERC20"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_SafeERC20_$1157",
																				"typeString": "library SafeERC20"
																			}
																		],
																		"id": 1060,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2102:7:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 1059,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "2102:7:4",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1062,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2102:13:4",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 1063,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1050,
																	"src": "2117:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"expression": {
																	"id": 1057,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1048,
																	"src": "2086:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$944",
																		"typeString": "contract IERC20"
																	}
																},
																"id": 1058,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "allowance",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 903,
																"src": "2086:15:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
																	"typeString": "function (address,address) view external returns (uint256)"
																}
															},
															"id": 1064,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2086:39:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1065,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "add",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 693,
														"src": "2086:43:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 1067,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2086:50:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2063:73:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1070,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1048,
															"src": "2166:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$944",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"expression": {
																			"id": 1073,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1048,
																			"src": "2196:5:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$944",
																				"typeString": "contract IERC20"
																			}
																		},
																		"id": 1074,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "approve",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 913,
																		"src": "2196:13:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function (address,uint256) external returns (bool)"
																		}
																	},
																	"id": 1075,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"src": "2196:22:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"id": 1076,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1050,
																	"src": "2220:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 1077,
																	"name": "newAllowance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1056,
																	"src": "2229:12:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 1071,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": -1,
																	"src": "2173:3:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 1072,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"src": "2173:22:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 1078,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2173:69:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$944",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1069,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1156,
														"src": "2146:19:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$944_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 1079,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2146:97:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1080,
												"nodeType": "ExpressionStatement",
												"src": "2146:97:4"
											}
										]
									},
									"id": 1082,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeIncreaseAllowance",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1053,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1048,
												"mutability": "mutable",
												"name": "token",
												"nodeType": "VariableDeclaration",
												"scope": 1082,
												"src": "1998:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$944",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 1047,
													"name": "IERC20",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 944,
													"src": "1998:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$944",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1050,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 1082,
												"src": "2012:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1049,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2012:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1052,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 1082,
												"src": "2029:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1051,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2029:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1997:46:4"
									},
									"returnParameters": {
										"id": 1054,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2053:0:4"
									},
									"scope": 1157,
									"src": "1967:283:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1118,
										"nodeType": "Block",
										"src": "2342:242:4",
										"statements": [
											{
												"assignments": [
													1092
												],
												"declarations": [
													{
														"constant": false,
														"id": 1092,
														"mutability": "mutable",
														"name": "newAllowance",
														"nodeType": "VariableDeclaration",
														"scope": 1118,
														"src": "2352:20:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1091,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2352:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1105,
												"initialValue": {
													"arguments": [
														{
															"id": 1102,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1088,
															"src": "2419:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "5361666545524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f",
															"id": 1103,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2426:43:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_2c3af60974a758b7e72e108c9bf0943ecc9e4f2e8af4695da5f52fbf57a63d3a",
																"typeString": "literal_string \"SafeERC20: decreased allowance below zero\""
															},
															"value": "SafeERC20: decreased allowance below zero"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_2c3af60974a758b7e72e108c9bf0943ecc9e4f2e8af4695da5f52fbf57a63d3a",
																"typeString": "literal_string \"SafeERC20: decreased allowance below zero\""
															}
														],
														"expression": {
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 1097,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": -28,
																			"src": "2399:4:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_SafeERC20_$1157",
																				"typeString": "library SafeERC20"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_SafeERC20_$1157",
																				"typeString": "library SafeERC20"
																			}
																		],
																		"id": 1096,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2391:7:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 1095,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "2391:7:4",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1098,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2391:13:4",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 1099,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1086,
																	"src": "2406:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"expression": {
																	"id": 1093,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1084,
																	"src": "2375:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$944",
																		"typeString": "contract IERC20"
																	}
																},
																"id": 1094,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "allowance",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 903,
																"src": "2375:15:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
																	"typeString": "function (address,address) view external returns (uint256)"
																}
															},
															"id": 1100,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2375:39:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1101,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sub",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 817,
														"src": "2375:43:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
														}
													},
													"id": 1104,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2375:95:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2352:118:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1107,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1084,
															"src": "2500:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$944",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"expression": {
																			"id": 1110,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1084,
																			"src": "2530:5:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$944",
																				"typeString": "contract IERC20"
																			}
																		},
																		"id": 1111,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "approve",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 913,
																		"src": "2530:13:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function (address,uint256) external returns (bool)"
																		}
																	},
																	"id": 1112,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"src": "2530:22:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"id": 1113,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1086,
																	"src": "2554:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 1114,
																	"name": "newAllowance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1092,
																	"src": "2563:12:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 1108,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": -1,
																	"src": "2507:3:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 1109,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"src": "2507:22:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 1115,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2507:69:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$944",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1106,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1156,
														"src": "2480:19:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$944_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 1116,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2480:97:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1117,
												"nodeType": "ExpressionStatement",
												"src": "2480:97:4"
											}
										]
									},
									"id": 1119,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeDecreaseAllowance",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1089,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1084,
												"mutability": "mutable",
												"name": "token",
												"nodeType": "VariableDeclaration",
												"scope": 1119,
												"src": "2287:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$944",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 1083,
													"name": "IERC20",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 944,
													"src": "2287:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$944",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1086,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 1119,
												"src": "2301:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1085,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2301:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1088,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 1119,
												"src": "2318:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1087,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2318:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2286:46:4"
									},
									"returnParameters": {
										"id": 1090,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2342:0:4"
									},
									"scope": 1157,
									"src": "2256:328:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1155,
										"nodeType": "Block",
										"src": "3037:681:4",
										"statements": [
											{
												"assignments": [
													1128
												],
												"declarations": [
													{
														"constant": false,
														"id": 1128,
														"mutability": "mutable",
														"name": "returndata",
														"nodeType": "VariableDeclaration",
														"scope": 1155,
														"src": "3386:23:4",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1127,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "3386:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1137,
												"initialValue": {
													"arguments": [
														{
															"id": 1134,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1124,
															"src": "3440:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564",
															"id": 1135,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3446:34:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_47fb62c2c272651d2f0f342bac006756b8ba07f21cc5cb87e0fbb9d50c0c585b",
																"typeString": "literal_string \"SafeERC20: low-level call failed\""
															},
															"value": "SafeERC20: low-level call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_47fb62c2c272651d2f0f342bac006756b8ba07f21cc5cb87e0fbb9d50c0c585b",
																"typeString": "literal_string \"SafeERC20: low-level call failed\""
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 1131,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1122,
																	"src": "3420:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$944",
																		"typeString": "contract IERC20"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IERC20_$944",
																		"typeString": "contract IERC20"
																	}
																],
																"id": 1130,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "3412:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1129,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "3412:7:4",
																	"typeDescriptions": {}
																}
															},
															"id": 1132,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3412:14:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 1133,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "functionCall",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1248,
														"src": "3412:27:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$bound_to$_t_address_$",
															"typeString": "function (address,bytes memory,string memory) returns (bytes memory)"
														}
													},
													"id": 1136,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3412:69:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3386:95:4"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1141,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 1138,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1128,
															"src": "3495:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1139,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "3495:17:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 1140,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3515:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "3495:21:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1154,
												"nodeType": "IfStatement",
												"src": "3491:221:4",
												"trueBody": {
													"id": 1153,
													"nodeType": "Block",
													"src": "3518:194:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"id": 1145,
																				"name": "returndata",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1128,
																				"src": "3635:10:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				}
																			},
																			{
																				"components": [
																					{
																						"id": 1147,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"nodeType": "ElementaryTypeNameExpression",
																						"src": "3648:4:4",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_bool_$",
																							"typeString": "type(bool)"
																						},
																						"typeName": {
																							"id": 1146,
																							"name": "bool",
																							"nodeType": "ElementaryTypeName",
																							"src": "3648:4:4",
																							"typeDescriptions": {}
																						}
																					}
																				],
																				"id": 1148,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "TupleExpression",
																				"src": "3647:6:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_bool_$",
																					"typeString": "type(bool)"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				},
																				{
																					"typeIdentifier": "t_type$_t_bool_$",
																					"typeString": "type(bool)"
																				}
																			],
																			"expression": {
																				"id": 1143,
																				"name": "abi",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": -1,
																				"src": "3624:3:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_abi",
																					"typeString": "abi"
																				}
																			},
																			"id": 1144,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"memberName": "decode",
																			"nodeType": "MemberAccess",
																			"src": "3624:10:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
																				"typeString": "function () pure"
																			}
																		},
																		"id": 1149,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "3624:30:4",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"hexValue": "5361666545524332303a204552433230206f7065726174696f6e20646964206e6f742073756363656564",
																		"id": 1150,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "3656:44:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd",
																			"typeString": "literal_string \"SafeERC20: ERC20 operation did not succeed\""
																		},
																		"value": "SafeERC20: ERC20 operation did not succeed"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd",
																			"typeString": "literal_string \"SafeERC20: ERC20 operation did not succeed\""
																		}
																	],
																	"id": 1142,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		-18,
																		-18
																	],
																	"referencedDeclaration": -18,
																	"src": "3616:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 1151,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3616:85:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1152,
															"nodeType": "ExpressionStatement",
															"src": "3616:85:4"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1120,
										"nodeType": "StructuredDocumentation",
										"src": "2590:372:4",
										"text": " @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n on the return value: the return value is optional (but if data is returned, it must not be false).\n @param token The token targeted by the call.\n @param data The call data (encoded using abi.encode or one of its variants)."
									},
									"id": 1156,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_callOptionalReturn",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1125,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1122,
												"mutability": "mutable",
												"name": "token",
												"nodeType": "VariableDeclaration",
												"scope": 1156,
												"src": "2996:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$944",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 1121,
													"name": "IERC20",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 944,
													"src": "2996:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$944",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1124,
												"mutability": "mutable",
												"name": "data",
												"nodeType": "VariableDeclaration",
												"scope": 1156,
												"src": "3010:17:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1123,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3010:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2995:33:4"
									},
									"returnParameters": {
										"id": 1126,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3037:0:4"
									},
									"scope": 1157,
									"src": "2967:751:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 1158,
							"src": "616:3104:4"
						}
					],
					"src": "33:3688:4"
				},
				"id": 4
			},
			"https://github.com/OmniDexFinance/helper/blob/master/%40openzeppelin/contracts/utils/Address.sol": {
				"ast": {
					"absolutePath": "https://github.com/OmniDexFinance/helper/blob/master/%40openzeppelin/contracts/utils/Address.sol",
					"exportedSymbols": {
						"Address": [
							1453
						]
					},
					"id": 1454,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1159,
							"literals": [
								"solidity",
								">=",
								"0.6",
								".2",
								"<",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "33:31:5"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 1160,
								"nodeType": "StructuredDocumentation",
								"src": "66:67:5",
								"text": " @dev Collection of functions related to the address type"
							},
							"fullyImplemented": true,
							"id": 1453,
							"linearizedBaseContracts": [
								1453
							],
							"name": "Address",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 1176,
										"nodeType": "Block",
										"src": "792:347:5",
										"statements": [
											{
												"assignments": [
													1169
												],
												"declarations": [
													{
														"constant": false,
														"id": 1169,
														"mutability": "mutable",
														"name": "size",
														"nodeType": "VariableDeclaration",
														"scope": 1176,
														"src": "989:12:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1168,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "989:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1170,
												"nodeType": "VariableDeclarationStatement",
												"src": "989:12:5"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "1076:32:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1078:28:5",
															"value": {
																"arguments": [
																	{
																		"name": "account",
																		"nodeType": "YulIdentifier",
																		"src": "1098:7:5"
																	}
																],
																"functionName": {
																	"name": "extcodesize",
																	"nodeType": "YulIdentifier",
																	"src": "1086:11:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1086:20:5"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "1078:4:5"
																}
															]
														}
													]
												},
												"evmVersion": "istanbul",
												"externalReferences": [
													{
														"declaration": 1163,
														"isOffset": false,
														"isSlot": false,
														"src": "1098:7:5",
														"valueSize": 1
													},
													{
														"declaration": 1169,
														"isOffset": false,
														"isSlot": false,
														"src": "1078:4:5",
														"valueSize": 1
													}
												],
												"id": 1171,
												"nodeType": "InlineAssembly",
												"src": "1067:41:5"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1174,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1172,
														"name": "size",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1169,
														"src": "1124:4:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 1173,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1131:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1124:8:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1167,
												"id": 1175,
												"nodeType": "Return",
												"src": "1117:15:5"
											}
										]
									},
									"documentation": {
										"id": 1161,
										"nodeType": "StructuredDocumentation",
										"src": "156:565:5",
										"text": " @dev Returns true if `account` is a contract.\n [IMPORTANT]\n ====\n It is unsafe to assume that an address for which this function returns\n false is an externally-owned account (EOA) and not a contract.\n Among others, `isContract` will return false for the following\n types of addresses:\n  - an externally-owned account\n  - a contract in construction\n  - an address where a contract will be created\n  - an address where a contract lived, but was destroyed\n ===="
									},
									"id": 1177,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isContract",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1164,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1163,
												"mutability": "mutable",
												"name": "account",
												"nodeType": "VariableDeclaration",
												"scope": 1177,
												"src": "746:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1162,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "746:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "745:17:5"
									},
									"returnParameters": {
										"id": 1167,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1166,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1177,
												"src": "786:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1165,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "786:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "785:6:5"
									},
									"scope": 1453,
									"src": "726:413:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1210,
										"nodeType": "Block",
										"src": "2127:320:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1192,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 1188,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": -28,
																			"src": "2153:4:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Address_$1453",
																				"typeString": "library Address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Address_$1453",
																				"typeString": "library Address"
																			}
																		],
																		"id": 1187,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2145:7:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 1186,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "2145:7:5",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1189,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2145:13:5",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 1190,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"src": "2145:21:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 1191,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1182,
																"src": "2170:6:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2145:31:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20696e73756666696369656e742062616c616e6365",
															"id": 1193,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2178:31:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9",
																"typeString": "literal_string \"Address: insufficient balance\""
															},
															"value": "Address: insufficient balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9",
																"typeString": "literal_string \"Address: insufficient balance\""
															}
														],
														"id": 1185,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "2137:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1194,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2137:73:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1195,
												"nodeType": "ExpressionStatement",
												"src": "2137:73:5"
											},
											{
												"assignments": [
													1197,
													null
												],
												"declarations": [
													{
														"constant": false,
														"id": 1197,
														"mutability": "mutable",
														"name": "success",
														"nodeType": "VariableDeclaration",
														"scope": 1210,
														"src": "2299:12:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1196,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "2299:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													null
												],
												"id": 1204,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "",
															"id": 1202,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2349:2:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"typeString": "literal_string \"\""
																}
															],
															"expression": {
																"id": 1198,
																"name": "recipient",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1180,
																"src": "2317:9:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"id": 1199,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "2317:14:5",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 1201,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 1200,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1182,
																"src": "2340:6:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "2317:31:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 1203,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2317:35:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2298:54:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1206,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1197,
															"src": "2370:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20756e61626c6520746f2073656e642076616c75652c20726563697069656e74206d61792068617665207265766572746564",
															"id": 1207,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2379:60:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae",
																"typeString": "literal_string \"Address: unable to send value, recipient may have reverted\""
															},
															"value": "Address: unable to send value, recipient may have reverted"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae",
																"typeString": "literal_string \"Address: unable to send value, recipient may have reverted\""
															}
														],
														"id": 1205,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "2362:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1208,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2362:78:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1209,
												"nodeType": "ExpressionStatement",
												"src": "2362:78:5"
											}
										]
									},
									"documentation": {
										"id": 1178,
										"nodeType": "StructuredDocumentation",
										"src": "1145:906:5",
										"text": " @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n `recipient`, forwarding all available gas and reverting on errors.\n https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n of certain opcodes, possibly making contracts go over the 2300 gas limit\n imposed by `transfer`, making them unable to receive funds via\n `transfer`. {sendValue} removes this limitation.\n https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n IMPORTANT: because control is transferred to `recipient`, care must be\n taken to not create reentrancy vulnerabilities. Consider using\n {ReentrancyGuard} or the\n https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern]."
									},
									"id": 1211,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sendValue",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1183,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1180,
												"mutability": "mutable",
												"name": "recipient",
												"nodeType": "VariableDeclaration",
												"scope": 1211,
												"src": "2075:25:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 1179,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2075:15:5",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1182,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 1211,
												"src": "2102:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1181,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2102:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2074:43:5"
									},
									"returnParameters": {
										"id": 1184,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2127:0:5"
									},
									"scope": 1453,
									"src": "2056:391:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1227,
										"nodeType": "Block",
										"src": "3277:82:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1222,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1214,
															"src": "3305:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1223,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1216,
															"src": "3313:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2063616c6c206661696c6564",
															"id": 1224,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3319:32:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df",
																"typeString": "literal_string \"Address: low-level call failed\""
															},
															"value": "Address: low-level call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df",
																"typeString": "literal_string \"Address: low-level call failed\""
															}
														],
														"id": 1221,
														"name": "functionCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1228,
															1248
														],
														"referencedDeclaration": 1248,
														"src": "3292:12:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) returns (bytes memory)"
														}
													},
													"id": 1225,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3292:60:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1220,
												"id": 1226,
												"nodeType": "Return",
												"src": "3285:67:5"
											}
										]
									},
									"documentation": {
										"id": 1212,
										"nodeType": "StructuredDocumentation",
										"src": "2453:730:5",
										"text": " @dev Performs a Solidity function call using a low level `call`. A\n plain`call` is an unsafe replacement for a function call: use this\n function instead.\n If `target` reverts with a revert reason, it is bubbled up by this\n function (like regular Solidity function calls).\n Returns the raw returned data. To convert to the expected return value,\n use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n Requirements:\n - `target` must be a contract.\n - calling `target` with `data` must not revert.\n _Available since v3.1._"
									},
									"id": 1228,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1217,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1214,
												"mutability": "mutable",
												"name": "target",
												"nodeType": "VariableDeclaration",
												"scope": 1228,
												"src": "3210:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1213,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3210:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1216,
												"mutability": "mutable",
												"name": "data",
												"nodeType": "VariableDeclaration",
												"scope": 1228,
												"src": "3226:17:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1215,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3226:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3209:35:5"
									},
									"returnParameters": {
										"id": 1220,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1219,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1228,
												"src": "3263:12:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1218,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3263:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3262:14:5"
									},
									"scope": 1453,
									"src": "3188:171:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1247,
										"nodeType": "Block",
										"src": "3698:76:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1241,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1231,
															"src": "3737:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1242,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1233,
															"src": "3745:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "30",
															"id": 1243,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3751:1:5",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														{
															"id": 1244,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1235,
															"src": "3754:12:5",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 1240,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1268,
															1318
														],
														"referencedDeclaration": 1318,
														"src": "3715:21:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 1245,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3715:52:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1239,
												"id": 1246,
												"nodeType": "Return",
												"src": "3708:59:5"
											}
										]
									},
									"documentation": {
										"id": 1229,
										"nodeType": "StructuredDocumentation",
										"src": "3365:211:5",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"
									},
									"id": 1248,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1236,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1231,
												"mutability": "mutable",
												"name": "target",
												"nodeType": "VariableDeclaration",
												"scope": 1248,
												"src": "3603:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1230,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3603:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1233,
												"mutability": "mutable",
												"name": "data",
												"nodeType": "VariableDeclaration",
												"scope": 1248,
												"src": "3619:17:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1232,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3619:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1235,
												"mutability": "mutable",
												"name": "errorMessage",
												"nodeType": "VariableDeclaration",
												"scope": 1248,
												"src": "3638:26:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1234,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3638:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3602:63:5"
									},
									"returnParameters": {
										"id": 1239,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1238,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1248,
												"src": "3684:12:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1237,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3684:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3683:14:5"
									},
									"scope": 1453,
									"src": "3581:193:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1267,
										"nodeType": "Block",
										"src": "4249:111:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1261,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1251,
															"src": "4288:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1262,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1253,
															"src": "4296:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 1263,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1255,
															"src": "4302:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2063616c6c20776974682076616c7565206661696c6564",
															"id": 1264,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4309:43:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc",
																"typeString": "literal_string \"Address: low-level call with value failed\""
															},
															"value": "Address: low-level call with value failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc",
																"typeString": "literal_string \"Address: low-level call with value failed\""
															}
														],
														"id": 1260,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1268,
															1318
														],
														"referencedDeclaration": 1318,
														"src": "4266:21:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 1265,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4266:87:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1259,
												"id": 1266,
												"nodeType": "Return",
												"src": "4259:94:5"
											}
										]
									},
									"documentation": {
										"id": 1249,
										"nodeType": "StructuredDocumentation",
										"src": "3780:351:5",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but also transferring `value` wei to `target`.\n Requirements:\n - the calling contract must have an ETH balance of at least `value`.\n - the called Solidity function must be `payable`.\n _Available since v3.1._"
									},
									"id": 1268,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1256,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1251,
												"mutability": "mutable",
												"name": "target",
												"nodeType": "VariableDeclaration",
												"scope": 1268,
												"src": "4167:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1250,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4167:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1253,
												"mutability": "mutable",
												"name": "data",
												"nodeType": "VariableDeclaration",
												"scope": 1268,
												"src": "4183:17:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1252,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4183:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1255,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 1268,
												"src": "4202:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1254,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4202:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4166:50:5"
									},
									"returnParameters": {
										"id": 1259,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1258,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1268,
												"src": "4235:12:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1257,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4235:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4234:14:5"
									},
									"scope": 1453,
									"src": "4136:224:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1317,
										"nodeType": "Block",
										"src": "4749:382:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1289,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 1285,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": -28,
																			"src": "4775:4:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Address_$1453",
																				"typeString": "library Address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Address_$1453",
																				"typeString": "library Address"
																			}
																		],
																		"id": 1284,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "4767:7:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 1283,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "4767:7:5",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1286,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "4767:13:5",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 1287,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"src": "4767:21:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 1288,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1275,
																"src": "4792:5:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4767:30:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c6c",
															"id": 1290,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4799:40:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
																"typeString": "literal_string \"Address: insufficient balance for call\""
															},
															"value": "Address: insufficient balance for call"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
																"typeString": "literal_string \"Address: insufficient balance for call\""
															}
														],
														"id": 1282,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "4759:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1291,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4759:81:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1292,
												"nodeType": "ExpressionStatement",
												"src": "4759:81:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1295,
																	"name": "target",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1271,
																	"src": "4869:6:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1294,
																"name": "isContract",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1177,
																"src": "4858:10:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address) view returns (bool)"
																}
															},
															"id": 1296,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4858:18:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374",
															"id": 1297,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4878:31:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
																"typeString": "literal_string \"Address: call to non-contract\""
															},
															"value": "Address: call to non-contract"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
																"typeString": "literal_string \"Address: call to non-contract\""
															}
														],
														"id": 1293,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "4850:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1298,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4850:60:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1299,
												"nodeType": "ExpressionStatement",
												"src": "4850:60:5"
											},
											{
												"assignments": [
													1301,
													1303
												],
												"declarations": [
													{
														"constant": false,
														"id": 1301,
														"mutability": "mutable",
														"name": "success",
														"nodeType": "VariableDeclaration",
														"scope": 1317,
														"src": "4981:12:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1300,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "4981:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1303,
														"mutability": "mutable",
														"name": "returndata",
														"nodeType": "VariableDeclaration",
														"scope": 1317,
														"src": "4995:23:5",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1302,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "4995:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1310,
												"initialValue": {
													"arguments": [
														{
															"id": 1308,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1273,
															"src": "5050:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"expression": {
																"id": 1304,
																"name": "target",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1271,
																"src": "5022:6:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 1305,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "5022:11:5",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 1307,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 1306,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1275,
																"src": "5042:5:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "5022:27:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 1309,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5022:33:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4980:75:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1312,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1301,
															"src": "5090:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 1313,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1303,
															"src": "5099:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 1314,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1277,
															"src": "5111:12:5",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 1311,
														"name": "_verifyCallResult",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1452,
														"src": "5072:17:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (bool,bytes memory,string memory) pure returns (bytes memory)"
														}
													},
													"id": 1315,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5072:52:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1281,
												"id": 1316,
												"nodeType": "Return",
												"src": "5065:59:5"
											}
										]
									},
									"documentation": {
										"id": 1269,
										"nodeType": "StructuredDocumentation",
										"src": "4366:237:5",
										"text": " @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n with `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"
									},
									"id": 1318,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1278,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1271,
												"mutability": "mutable",
												"name": "target",
												"nodeType": "VariableDeclaration",
												"scope": 1318,
												"src": "4639:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1270,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4639:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1273,
												"mutability": "mutable",
												"name": "data",
												"nodeType": "VariableDeclaration",
												"scope": 1318,
												"src": "4655:17:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1272,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4655:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1275,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 1318,
												"src": "4674:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1274,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4674:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1277,
												"mutability": "mutable",
												"name": "errorMessage",
												"nodeType": "VariableDeclaration",
												"scope": 1318,
												"src": "4689:26:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1276,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "4689:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4638:78:5"
									},
									"returnParameters": {
										"id": 1281,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1280,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1318,
												"src": "4735:12:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1279,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4735:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4734:14:5"
									},
									"scope": 1453,
									"src": "4608:523:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1334,
										"nodeType": "Block",
										"src": "5408:97:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1329,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1321,
															"src": "5444:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1330,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1323,
															"src": "5452:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c207374617469632063616c6c206661696c6564",
															"id": 1331,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5458:39:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0",
																"typeString": "literal_string \"Address: low-level static call failed\""
															},
															"value": "Address: low-level static call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0",
																"typeString": "literal_string \"Address: low-level static call failed\""
															}
														],
														"id": 1328,
														"name": "functionStaticCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1335,
															1370
														],
														"referencedDeclaration": 1370,
														"src": "5425:18:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) view returns (bytes memory)"
														}
													},
													"id": 1332,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5425:73:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1327,
												"id": 1333,
												"nodeType": "Return",
												"src": "5418:80:5"
											}
										]
									},
									"documentation": {
										"id": 1319,
										"nodeType": "StructuredDocumentation",
										"src": "5137:166:5",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"
									},
									"id": 1335,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionStaticCall",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1324,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1321,
												"mutability": "mutable",
												"name": "target",
												"nodeType": "VariableDeclaration",
												"scope": 1335,
												"src": "5336:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1320,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5336:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1323,
												"mutability": "mutable",
												"name": "data",
												"nodeType": "VariableDeclaration",
												"scope": 1335,
												"src": "5352:17:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1322,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5352:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5335:35:5"
									},
									"returnParameters": {
										"id": 1327,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1326,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1335,
												"src": "5394:12:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1325,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5394:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5393:14:5"
									},
									"scope": 1453,
									"src": "5308:197:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1369,
										"nodeType": "Block",
										"src": "5817:288:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1349,
																	"name": "target",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1338,
																	"src": "5846:6:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1348,
																"name": "isContract",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1177,
																"src": "5835:10:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address) view returns (bool)"
																}
															},
															"id": 1350,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5835:18:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a207374617469632063616c6c20746f206e6f6e2d636f6e7472616374",
															"id": 1351,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5855:38:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c79cc78e4f16ce3933a42b84c73868f93bb4a59c031a0acf576679de98c608a9",
																"typeString": "literal_string \"Address: static call to non-contract\""
															},
															"value": "Address: static call to non-contract"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c79cc78e4f16ce3933a42b84c73868f93bb4a59c031a0acf576679de98c608a9",
																"typeString": "literal_string \"Address: static call to non-contract\""
															}
														],
														"id": 1347,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "5827:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1352,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5827:67:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1353,
												"nodeType": "ExpressionStatement",
												"src": "5827:67:5"
											},
											{
												"assignments": [
													1355,
													1357
												],
												"declarations": [
													{
														"constant": false,
														"id": 1355,
														"mutability": "mutable",
														"name": "success",
														"nodeType": "VariableDeclaration",
														"scope": 1369,
														"src": "5965:12:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1354,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "5965:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1357,
														"mutability": "mutable",
														"name": "returndata",
														"nodeType": "VariableDeclaration",
														"scope": 1369,
														"src": "5979:23:5",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1356,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "5979:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1362,
												"initialValue": {
													"arguments": [
														{
															"id": 1360,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1340,
															"src": "6024:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 1358,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1338,
															"src": "6006:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 1359,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "staticcall",
														"nodeType": "MemberAccess",
														"src": "6006:17:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) view returns (bool,bytes memory)"
														}
													},
													"id": 1361,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6006:23:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5964:65:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1364,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1355,
															"src": "6064:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 1365,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1357,
															"src": "6073:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 1366,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1342,
															"src": "6085:12:5",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 1363,
														"name": "_verifyCallResult",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1452,
														"src": "6046:17:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (bool,bytes memory,string memory) pure returns (bytes memory)"
														}
													},
													"id": 1367,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6046:52:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1346,
												"id": 1368,
												"nodeType": "Return",
												"src": "6039:59:5"
											}
										]
									},
									"documentation": {
										"id": 1336,
										"nodeType": "StructuredDocumentation",
										"src": "5511:173:5",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"
									},
									"id": 1370,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionStaticCall",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1343,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1338,
												"mutability": "mutable",
												"name": "target",
												"nodeType": "VariableDeclaration",
												"scope": 1370,
												"src": "5717:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1337,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5717:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1340,
												"mutability": "mutable",
												"name": "data",
												"nodeType": "VariableDeclaration",
												"scope": 1370,
												"src": "5733:17:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1339,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5733:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1342,
												"mutability": "mutable",
												"name": "errorMessage",
												"nodeType": "VariableDeclaration",
												"scope": 1370,
												"src": "5752:26:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1341,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5752:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5716:63:5"
									},
									"returnParameters": {
										"id": 1346,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1345,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1370,
												"src": "5803:12:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1344,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5803:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5802:14:5"
									},
									"scope": 1453,
									"src": "5689:416:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1386,
										"nodeType": "Block",
										"src": "6381:101:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1381,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1373,
															"src": "6419:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1382,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1375,
															"src": "6427:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564",
															"id": 1383,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6433:41:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398",
																"typeString": "literal_string \"Address: low-level delegate call failed\""
															},
															"value": "Address: low-level delegate call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398",
																"typeString": "literal_string \"Address: low-level delegate call failed\""
															}
														],
														"id": 1380,
														"name": "functionDelegateCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1387,
															1422
														],
														"referencedDeclaration": 1422,
														"src": "6398:20:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) returns (bytes memory)"
														}
													},
													"id": 1384,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6398:77:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1379,
												"id": 1385,
												"nodeType": "Return",
												"src": "6391:84:5"
											}
										]
									},
									"documentation": {
										"id": 1371,
										"nodeType": "StructuredDocumentation",
										"src": "6111:168:5",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"
									},
									"id": 1387,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionDelegateCall",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1376,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1373,
												"mutability": "mutable",
												"name": "target",
												"nodeType": "VariableDeclaration",
												"scope": 1387,
												"src": "6314:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1372,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6314:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1375,
												"mutability": "mutable",
												"name": "data",
												"nodeType": "VariableDeclaration",
												"scope": 1387,
												"src": "6330:17:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1374,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6330:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6313:35:5"
									},
									"returnParameters": {
										"id": 1379,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1378,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1387,
												"src": "6367:12:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1377,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6367:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6366:14:5"
									},
									"scope": 1453,
									"src": "6284:198:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1421,
										"nodeType": "Block",
										"src": "6793:292:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1401,
																	"name": "target",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1390,
																	"src": "6822:6:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1400,
																"name": "isContract",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1177,
																"src": "6811:10:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address) view returns (bool)"
																}
															},
															"id": 1402,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6811:18:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a2064656c65676174652063616c6c20746f206e6f6e2d636f6e7472616374",
															"id": 1403,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6831:40:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_b94ded0918034cf8f896e19fa3cfdef1188cd569c577264a3622e49152f88520",
																"typeString": "literal_string \"Address: delegate call to non-contract\""
															},
															"value": "Address: delegate call to non-contract"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_b94ded0918034cf8f896e19fa3cfdef1188cd569c577264a3622e49152f88520",
																"typeString": "literal_string \"Address: delegate call to non-contract\""
															}
														],
														"id": 1399,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "6803:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1404,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6803:69:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1405,
												"nodeType": "ExpressionStatement",
												"src": "6803:69:5"
											},
											{
												"assignments": [
													1407,
													1409
												],
												"declarations": [
													{
														"constant": false,
														"id": 1407,
														"mutability": "mutable",
														"name": "success",
														"nodeType": "VariableDeclaration",
														"scope": 1421,
														"src": "6943:12:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1406,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "6943:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1409,
														"mutability": "mutable",
														"name": "returndata",
														"nodeType": "VariableDeclaration",
														"scope": 1421,
														"src": "6957:23:5",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1408,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "6957:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1414,
												"initialValue": {
													"arguments": [
														{
															"id": 1412,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1392,
															"src": "7004:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 1410,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1390,
															"src": "6984:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 1411,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "delegatecall",
														"nodeType": "MemberAccess",
														"src": "6984:19:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) returns (bool,bytes memory)"
														}
													},
													"id": 1413,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6984:25:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6942:67:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1416,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1407,
															"src": "7044:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 1417,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1409,
															"src": "7053:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 1418,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1394,
															"src": "7065:12:5",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 1415,
														"name": "_verifyCallResult",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1452,
														"src": "7026:17:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (bool,bytes memory,string memory) pure returns (bytes memory)"
														}
													},
													"id": 1419,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7026:52:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1398,
												"id": 1420,
												"nodeType": "Return",
												"src": "7019:59:5"
											}
										]
									},
									"documentation": {
										"id": 1388,
										"nodeType": "StructuredDocumentation",
										"src": "6488:175:5",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"
									},
									"id": 1422,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionDelegateCall",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1395,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1390,
												"mutability": "mutable",
												"name": "target",
												"nodeType": "VariableDeclaration",
												"scope": 1422,
												"src": "6698:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1389,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6698:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1392,
												"mutability": "mutable",
												"name": "data",
												"nodeType": "VariableDeclaration",
												"scope": 1422,
												"src": "6714:17:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1391,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6714:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1394,
												"mutability": "mutable",
												"name": "errorMessage",
												"nodeType": "VariableDeclaration",
												"scope": 1422,
												"src": "6733:26:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1393,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "6733:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6697:63:5"
									},
									"returnParameters": {
										"id": 1398,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1397,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1422,
												"src": "6779:12:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1396,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6779:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6778:14:5"
									},
									"scope": 1453,
									"src": "6668:417:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1451,
										"nodeType": "Block",
										"src": "7220:596:5",
										"statements": [
											{
												"condition": {
													"id": 1433,
													"name": "success",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1424,
													"src": "7234:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1449,
													"nodeType": "Block",
													"src": "7291:519:5",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1440,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 1437,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1426,
																		"src": "7375:10:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 1438,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "length",
																	"nodeType": "MemberAccess",
																	"src": "7375:17:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 1439,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7395:1:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "7375:21:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": {
																"id": 1447,
																"nodeType": "Block",
																"src": "7747:53:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"id": 1444,
																					"name": "errorMessage",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1428,
																					"src": "7772:12:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_string_memory_ptr",
																						"typeString": "string memory"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_string_memory_ptr",
																						"typeString": "string memory"
																					}
																				],
																				"id": 1443,
																				"name": "revert",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [
																					-19,
																					-19
																				],
																				"referencedDeclaration": -19,
																				"src": "7765:6:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																					"typeString": "function (string memory) pure"
																				}
																			},
																			"id": 1445,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "7765:20:5",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 1446,
																		"nodeType": "ExpressionStatement",
																		"src": "7765:20:5"
																	}
																]
															},
															"id": 1448,
															"nodeType": "IfStatement",
															"src": "7371:429:5",
															"trueBody": {
																"id": 1442,
																"nodeType": "Block",
																"src": "7398:343:5",
																"statements": [
																	{
																		"AST": {
																			"nodeType": "YulBlock",
																			"src": "7582:145:5",
																			"statements": [
																				{
																					"nodeType": "YulVariableDeclaration",
																					"src": "7604:40:5",
																					"value": {
																						"arguments": [
																							{
																								"name": "returndata",
																								"nodeType": "YulIdentifier",
																								"src": "7633:10:5"
																							}
																						],
																						"functionName": {
																							"name": "mload",
																							"nodeType": "YulIdentifier",
																							"src": "7627:5:5"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "7627:17:5"
																					},
																					"variables": [
																						{
																							"name": "returndata_size",
																							"nodeType": "YulTypedName",
																							"src": "7608:15:5",
																							"type": ""
																						}
																					]
																				},
																				{
																					"expression": {
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "7676:2:5",
																										"type": "",
																										"value": "32"
																									},
																									{
																										"name": "returndata",
																										"nodeType": "YulIdentifier",
																										"src": "7680:10:5"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "7672:3:5"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "7672:19:5"
																							},
																							{
																								"name": "returndata_size",
																								"nodeType": "YulIdentifier",
																								"src": "7693:15:5"
																							}
																						],
																						"functionName": {
																							"name": "revert",
																							"nodeType": "YulIdentifier",
																							"src": "7665:6:5"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "7665:44:5"
																					},
																					"nodeType": "YulExpressionStatement",
																					"src": "7665:44:5"
																				}
																			]
																		},
																		"evmVersion": "istanbul",
																		"externalReferences": [
																			{
																				"declaration": 1426,
																				"isOffset": false,
																				"isSlot": false,
																				"src": "7633:10:5",
																				"valueSize": 1
																			},
																			{
																				"declaration": 1426,
																				"isOffset": false,
																				"isSlot": false,
																				"src": "7680:10:5",
																				"valueSize": 1
																			}
																		],
																		"id": 1441,
																		"nodeType": "InlineAssembly",
																		"src": "7573:154:5"
																	}
																]
															}
														}
													]
												},
												"id": 1450,
												"nodeType": "IfStatement",
												"src": "7230:580:5",
												"trueBody": {
													"id": 1436,
													"nodeType": "Block",
													"src": "7243:42:5",
													"statements": [
														{
															"expression": {
																"id": 1434,
																"name": "returndata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1426,
																"src": "7264:10:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"functionReturnParameters": 1432,
															"id": 1435,
															"nodeType": "Return",
															"src": "7257:17:5"
														}
													]
												}
											}
										]
									},
									"id": 1452,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_verifyCallResult",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1429,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1424,
												"mutability": "mutable",
												"name": "success",
												"nodeType": "VariableDeclaration",
												"scope": 1452,
												"src": "7118:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1423,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "7118:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1426,
												"mutability": "mutable",
												"name": "returndata",
												"nodeType": "VariableDeclaration",
												"scope": 1452,
												"src": "7132:23:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1425,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7132:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1428,
												"mutability": "mutable",
												"name": "errorMessage",
												"nodeType": "VariableDeclaration",
												"scope": 1452,
												"src": "7157:26:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1427,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "7157:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7117:67:5"
									},
									"returnParameters": {
										"id": 1432,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1431,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1452,
												"src": "7206:12:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1430,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7206:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7205:14:5"
									},
									"scope": 1453,
									"src": "7091:725:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 1454,
							"src": "134:7684:5"
						}
					],
					"src": "33:7786:5"
				},
				"id": 5
			},
			"https://github.com/OmniDexFinance/helper/blob/master/%40openzeppelin/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "https://github.com/OmniDexFinance/helper/blob/master/%40openzeppelin/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							1476
						]
					},
					"id": 1477,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1455,
							"literals": [
								"solidity",
								">=",
								"0.6",
								".0",
								"<",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "33:31:6"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 1476,
							"linearizedBaseContracts": [
								1476
							],
							"name": "Context",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 1463,
										"nodeType": "Block",
										"src": "668:34:6",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 1460,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": -15,
														"src": "685:3:6",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1461,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "685:10:6",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"functionReturnParameters": 1459,
												"id": 1462,
												"nodeType": "Return",
												"src": "678:17:6"
											}
										]
									},
									"id": 1464,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1456,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "617:2:6"
									},
									"returnParameters": {
										"id": 1459,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1458,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1464,
												"src": "651:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 1457,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "651:15:6",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "650:17:6"
									},
									"scope": 1476,
									"src": "598:104:6",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1474,
										"nodeType": "Block",
										"src": "773:165:6",
										"statements": [
											{
												"expression": {
													"id": 1469,
													"name": "this",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": -28,
													"src": "783:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_Context_$1476",
														"typeString": "contract Context"
													}
												},
												"id": 1470,
												"nodeType": "ExpressionStatement",
												"src": "783:4:6"
											},
											{
												"expression": {
													"expression": {
														"id": 1471,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": -15,
														"src": "923:3:6",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1472,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "923:8:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 1468,
												"id": 1473,
												"nodeType": "Return",
												"src": "916:15:6"
											}
										]
									},
									"id": 1475,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1465,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "725:2:6"
									},
									"returnParameters": {
										"id": 1468,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1467,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1475,
												"src": "759:12:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1466,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "759:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "758:14:6"
									},
									"scope": 1476,
									"src": "708:230:6",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 1477,
							"src": "566:374:6"
						}
					],
					"src": "33:908:6"
				},
				"id": 6
			},
			"https://github.com/OmniDexFinance/helper/blob/master/%40openzeppelin/contracts/utils/Pausable.sol": {
				"ast": {
					"absolutePath": "https://github.com/OmniDexFinance/helper/blob/master/%40openzeppelin/contracts/utils/Pausable.sol",
					"exportedSymbols": {
						"Context": [
							1476
						],
						"Pausable": [
							1568
						]
					},
					"id": 1569,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1478,
							"literals": [
								"solidity",
								">=",
								"0.6",
								".0",
								"<",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "33:31:7"
						},
						{
							"absolutePath": "https://github.com/OmniDexFinance/helper/blob/master/%40openzeppelin/contracts/utils/Context.sol",
							"file": "./Context.sol",
							"id": 1479,
							"nodeType": "ImportDirective",
							"scope": 1569,
							"sourceUnit": 1477,
							"src": "66:23:7",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 1481,
										"name": "Context",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 1476,
										"src": "561:7:7",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_Context_$1476",
											"typeString": "contract Context"
										}
									},
									"id": 1482,
									"nodeType": "InheritanceSpecifier",
									"src": "561:7:7"
								}
							],
							"contractDependencies": [
								1476
							],
							"contractKind": "contract",
							"documentation": {
								"id": 1480,
								"nodeType": "StructuredDocumentation",
								"src": "91:439:7",
								"text": " @dev Contract module which allows children to implement an emergency stop\n mechanism that can be triggered by an authorized account.\n This module is used through inheritance. It will make available the\n modifiers `whenNotPaused` and `whenPaused`, which can be applied to\n the functions of your contract. Note that they will not be pausable by\n simply including this module, only once the modifiers are put in place."
							},
							"fullyImplemented": true,
							"id": 1568,
							"linearizedBaseContracts": [
								1568,
								1476
							],
							"name": "Pausable",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 1483,
										"nodeType": "StructuredDocumentation",
										"src": "575:73:7",
										"text": " @dev Emitted when the pause is triggered by `account`."
									},
									"id": 1487,
									"name": "Paused",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1486,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1485,
												"indexed": false,
												"mutability": "mutable",
												"name": "account",
												"nodeType": "VariableDeclaration",
												"scope": 1487,
												"src": "666:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1484,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "666:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "665:17:7"
									},
									"src": "653:30:7"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1488,
										"nodeType": "StructuredDocumentation",
										"src": "689:70:7",
										"text": " @dev Emitted when the pause is lifted by `account`."
									},
									"id": 1492,
									"name": "Unpaused",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1491,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1490,
												"indexed": false,
												"mutability": "mutable",
												"name": "account",
												"nodeType": "VariableDeclaration",
												"scope": 1492,
												"src": "779:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1489,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "779:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "778:17:7"
									},
									"src": "764:32:7"
								},
								{
									"constant": false,
									"id": 1494,
									"mutability": "mutable",
									"name": "_paused",
									"nodeType": "VariableDeclaration",
									"scope": 1568,
									"src": "802:20:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bool",
										"typeString": "bool"
									},
									"typeName": {
										"id": 1493,
										"name": "bool",
										"nodeType": "ElementaryTypeName",
										"src": "802:4:7",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 1502,
										"nodeType": "Block",
										"src": "925:32:7",
										"statements": [
											{
												"expression": {
													"id": 1500,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1498,
														"name": "_paused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1494,
														"src": "935:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "66616c7365",
														"id": 1499,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "945:5:7",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "935:15:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1501,
												"nodeType": "ExpressionStatement",
												"src": "935:15:7"
											}
										]
									},
									"documentation": {
										"id": 1495,
										"nodeType": "StructuredDocumentation",
										"src": "829:67:7",
										"text": " @dev Initializes the contract in unpaused state."
									},
									"id": 1503,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1496,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "913:2:7"
									},
									"returnParameters": {
										"id": 1497,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "925:0:7"
									},
									"scope": 1568,
									"src": "901:56:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1511,
										"nodeType": "Block",
										"src": "1105:31:7",
										"statements": [
											{
												"expression": {
													"id": 1509,
													"name": "_paused",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1494,
													"src": "1122:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1508,
												"id": 1510,
												"nodeType": "Return",
												"src": "1115:14:7"
											}
										]
									},
									"documentation": {
										"id": 1504,
										"nodeType": "StructuredDocumentation",
										"src": "963:84:7",
										"text": " @dev Returns true if the contract is paused, and false otherwise."
									},
									"functionSelector": "5c975abb",
									"id": 1512,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "paused",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1505,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1067:2:7"
									},
									"returnParameters": {
										"id": 1508,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1507,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1512,
												"src": "1099:4:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1506,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1099:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1098:6:7"
									},
									"scope": 1568,
									"src": "1052:84:7",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1523,
										"nodeType": "Block",
										"src": "1347:66:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1518,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "1365:9:7",
															"subExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 1516,
																	"name": "paused",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1512,
																	"src": "1366:6:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
																		"typeString": "function () view returns (bool)"
																	}
																},
																"id": 1517,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1366:8:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5061757361626c653a20706175736564",
															"id": 1519,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1376:18:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a",
																"typeString": "literal_string \"Pausable: paused\""
															},
															"value": "Pausable: paused"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a",
																"typeString": "literal_string \"Pausable: paused\""
															}
														],
														"id": 1515,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "1357:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1520,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1357:38:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1521,
												"nodeType": "ExpressionStatement",
												"src": "1357:38:7"
											},
											{
												"id": 1522,
												"nodeType": "PlaceholderStatement",
												"src": "1405:1:7"
											}
										]
									},
									"documentation": {
										"id": 1513,
										"nodeType": "StructuredDocumentation",
										"src": "1142:175:7",
										"text": " @dev Modifier to make a function callable only when the contract is not paused.\n Requirements:\n - The contract must not be paused."
									},
									"id": 1524,
									"name": "whenNotPaused",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 1514,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1344:2:7"
									},
									"src": "1322:91:7",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1534,
										"nodeType": "Block",
										"src": "1613:69:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 1528,
																"name": "paused",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1512,
																"src": "1631:6:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
																	"typeString": "function () view returns (bool)"
																}
															},
															"id": 1529,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1631:8:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5061757361626c653a206e6f7420706175736564",
															"id": 1530,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1641:22:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a",
																"typeString": "literal_string \"Pausable: not paused\""
															},
															"value": "Pausable: not paused"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a",
																"typeString": "literal_string \"Pausable: not paused\""
															}
														],
														"id": 1527,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "1623:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1531,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1623:41:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1532,
												"nodeType": "ExpressionStatement",
												"src": "1623:41:7"
											},
											{
												"id": 1533,
												"nodeType": "PlaceholderStatement",
												"src": "1674:1:7"
											}
										]
									},
									"documentation": {
										"id": 1525,
										"nodeType": "StructuredDocumentation",
										"src": "1419:167:7",
										"text": " @dev Modifier to make a function callable only when the contract is paused.\n Requirements:\n - The contract must be paused."
									},
									"id": 1535,
									"name": "whenPaused",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 1526,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1610:2:7"
									},
									"src": "1591:91:7",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1550,
										"nodeType": "Block",
										"src": "1866:66:7",
										"statements": [
											{
												"expression": {
													"id": 1543,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1541,
														"name": "_paused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1494,
														"src": "1876:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 1542,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1886:4:7",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "1876:14:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1544,
												"nodeType": "ExpressionStatement",
												"src": "1876:14:7"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 1546,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1464,
																"src": "1912:10:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																	"typeString": "function () view returns (address payable)"
																}
															},
															"id": 1547,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1912:12:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														],
														"id": 1545,
														"name": "Paused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1487,
														"src": "1905:6:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 1548,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1905:20:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1549,
												"nodeType": "EmitStatement",
												"src": "1900:25:7"
											}
										]
									},
									"documentation": {
										"id": 1536,
										"nodeType": "StructuredDocumentation",
										"src": "1688:124:7",
										"text": " @dev Triggers stopped state.\n Requirements:\n - The contract must not be paused."
									},
									"id": 1551,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1539,
											"modifierName": {
												"id": 1538,
												"name": "whenNotPaused",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 1524,
												"src": "1852:13:7",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "1852:13:7"
										}
									],
									"name": "_pause",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1537,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1832:2:7"
									},
									"returnParameters": {
										"id": 1540,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1866:0:7"
									},
									"scope": 1568,
									"src": "1817:115:7",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1566,
										"nodeType": "Block",
										"src": "2112:69:7",
										"statements": [
											{
												"expression": {
													"id": 1559,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1557,
														"name": "_paused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1494,
														"src": "2122:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "66616c7365",
														"id": 1558,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2132:5:7",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "2122:15:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1560,
												"nodeType": "ExpressionStatement",
												"src": "2122:15:7"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 1562,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1464,
																"src": "2161:10:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																	"typeString": "function () view returns (address payable)"
																}
															},
															"id": 1563,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2161:12:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														],
														"id": 1561,
														"name": "Unpaused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1492,
														"src": "2152:8:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 1564,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2152:22:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1565,
												"nodeType": "EmitStatement",
												"src": "2147:27:7"
											}
										]
									},
									"documentation": {
										"id": 1552,
										"nodeType": "StructuredDocumentation",
										"src": "1938:121:7",
										"text": " @dev Returns to normal state.\n Requirements:\n - The contract must be paused."
									},
									"id": 1567,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1555,
											"modifierName": {
												"id": 1554,
												"name": "whenPaused",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 1535,
												"src": "2101:10:7",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "2101:10:7"
										}
									],
									"name": "_unpause",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1553,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2081:2:7"
									},
									"returnParameters": {
										"id": 1556,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2112:0:7"
									},
									"scope": 1568,
									"src": "2064:117:7",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 1569,
							"src": "531:1652:7"
						}
					],
					"src": "33:2151:7"
				},
				"id": 7
			}
		}
	}
}