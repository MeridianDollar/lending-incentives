{
	"id": "de58781d7a0c3116e453054fc9df9b0a",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.7.5",
	"solcLongVersion": "0.7.5+commit.eb77ed08",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/Omnidex-incentives/utils/InitializableAdminUpgradeabilityProxy.sol.sol": {
				"content": "import '@aave/aave-stake/contracts/lib/InitializableAdminUpgradeabilityProxy.sol';\r\n"
			},
			"@aave/aave-stake/contracts/lib/InitializableAdminUpgradeabilityProxy.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity 0.7.5;\n\nimport './BaseAdminUpgradeabilityProxy.sol';\nimport './InitializableUpgradeabilityProxy.sol';\n\n/**\n * @title InitializableAdminUpgradeabilityProxy\n * @dev From https://github.com/OpenZeppelin/openzeppelin-sdk/tree/solc-0.6/packages/lib/contracts/upgradeability\n * Extends from BaseAdminUpgradeabilityProxy with an initializer for\n * initializing the implementation, admin, and init data.\n */\ncontract InitializableAdminUpgradeabilityProxy is\n  BaseAdminUpgradeabilityProxy,\n  InitializableUpgradeabilityProxy\n{\n  /**\n   * Contract initializer.\n   * @param _logic address of the initial implementation.\n   * @param _admin Address of the proxy administrator.\n   * @param _data Data to send as msg.data to the implementation to initialize the proxied contract.\n   * It should include the signature and the parameters of the function to be called, as described in\n   * https://solidity.readthedocs.io/en/v0.4.24/abi-spec.html#function-selector-and-argument-encoding.\n   * This parameter is optional, if no data is given the initialization call to proxied contract will be skipped.\n   */\n  function initialize(\n    address _logic,\n    address _admin,\n    bytes memory _data\n  ) public payable {\n    require(_implementation() == address(0));\n    InitializableUpgradeabilityProxy.initialize(_logic, _data);\n    assert(ADMIN_SLOT == bytes32(uint256(keccak256('eip1967.proxy.admin')) - 1));\n    _setAdmin(_admin);\n  }\n\n  /**\n   * @dev Only fall back when the sender is not the admin.\n   */\n  function _willFallback() internal override(BaseAdminUpgradeabilityProxy, Proxy) {\n    BaseAdminUpgradeabilityProxy._willFallback();\n  }\n}\n"
			},
			"@aave/aave-stake/contracts/lib/InitializableUpgradeabilityProxy.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity 0.7.5;\n\nimport './BaseUpgradeabilityProxy.sol';\n\n/**\n * @title InitializableUpgradeabilityProxy\n * @dev From https://github.com/OpenZeppelin/openzeppelin-sdk/tree/solc-0.6/packages/lib/contracts/upgradeability\n * Extends BaseUpgradeabilityProxy with an initializer for initializing\n * implementation and init data.\n */\ncontract InitializableUpgradeabilityProxy is BaseUpgradeabilityProxy {\n  /**\n   * @dev Contract initializer.\n   * @param _logic Address of the initial implementation.\n   * @param _data Data to send as msg.data to the implementation to initialize the proxied contract.\n   * It should include the signature and the parameters of the function to be called, as described in\n   * https://solidity.readthedocs.io/en/v0.4.24/abi-spec.html#function-selector-and-argument-encoding.\n   * This parameter is optional, if no data is given the initialization call to proxied contract will be skipped.\n   */\n  function initialize(address _logic, bytes memory _data) public payable {\n    require(_implementation() == address(0));\n    assert(IMPLEMENTATION_SLOT == bytes32(uint256(keccak256('eip1967.proxy.implementation')) - 1));\n    _setImplementation(_logic);\n    if (_data.length > 0) {\n      (bool success, ) = _logic.delegatecall(_data);\n      require(success);\n    }\n  }\n}\n"
			},
			"@aave/aave-stake/contracts/lib/BaseAdminUpgradeabilityProxy.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity 0.7.5;\n\nimport './UpgradeabilityProxy.sol';\n\n/**\n * @title BaseAdminUpgradeabilityProxy\n * @dev From https://github.com/OpenZeppelin/openzeppelin-sdk/tree/solc-0.6/packages/lib/contracts/upgradeability\n * This contract combines an upgradeability proxy with an authorization\n * mechanism for administrative tasks.\n * All external functions in this contract must be guarded by the\n * `ifAdmin` modifier. See ethereum/solidity#3864 for a Solidity\n * feature proposal that would enable this to be done automatically.\n */\ncontract BaseAdminUpgradeabilityProxy is BaseUpgradeabilityProxy {\n  /**\n   * @dev Emitted when the administration has been transferred.\n   * @param previousAdmin Address of the previous admin.\n   * @param newAdmin Address of the new admin.\n   */\n  event AdminChanged(address previousAdmin, address newAdmin);\n\n  /**\n   * @dev Storage slot with the admin of the contract.\n   * This is the keccak-256 hash of \"eip1967.proxy.admin\" subtracted by 1, and is\n   * validated in the constructor.\n   */\n\n  bytes32 internal constant ADMIN_SLOT =\n    0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103;\n\n  /**\n   * @dev Modifier to check whether the `msg.sender` is the admin.\n   * If it is, it will run the function. Otherwise, it will delegate the call\n   * to the implementation.\n   */\n  modifier ifAdmin() {\n    if (msg.sender == _admin()) {\n      _;\n    } else {\n      _fallback();\n    }\n  }\n\n  /**\n   * @return The address of the proxy admin.\n   */\n  function admin() external ifAdmin returns (address) {\n    return _admin();\n  }\n\n  /**\n   * @return The address of the implementation.\n   */\n  function implementation() external ifAdmin returns (address) {\n    return _implementation();\n  }\n\n  /**\n   * @dev Changes the admin of the proxy.\n   * Only the current admin can call this function.\n   * @param newAdmin Address to transfer proxy administration to.\n   */\n  function changeAdmin(address newAdmin) external ifAdmin {\n    require(newAdmin != address(0), 'Cannot change the admin of a proxy to the zero address');\n    emit AdminChanged(_admin(), newAdmin);\n    _setAdmin(newAdmin);\n  }\n\n  /**\n   * @dev Upgrade the backing implementation of the proxy.\n   * Only the admin can call this function.\n   * @param newImplementation Address of the new implementation.\n   */\n  function upgradeTo(address newImplementation) external ifAdmin {\n    _upgradeTo(newImplementation);\n  }\n\n  /**\n   * @dev Upgrade the backing implementation of the proxy and call a function\n   * on the new implementation.\n   * This is useful to initialize the proxied contract.\n   * @param newImplementation Address of the new implementation.\n   * @param data Data to send as msg.data in the low level call.\n   * It should include the signature and the parameters of the function to be called, as described in\n   * https://solidity.readthedocs.io/en/v0.4.24/abi-spec.html#function-selector-and-argument-encoding.\n   */\n  function upgradeToAndCall(address newImplementation, bytes calldata data)\n    external\n    payable\n    ifAdmin\n  {\n    _upgradeTo(newImplementation);\n    (bool success, ) = newImplementation.delegatecall(data);\n    require(success);\n  }\n\n  /**\n   * @return adm The admin slot.\n   */\n  function _admin() internal view returns (address adm) {\n    bytes32 slot = ADMIN_SLOT;\n    assembly {\n      adm := sload(slot)\n    }\n  }\n\n  /**\n   * @dev Sets the address of the proxy admin.\n   * @param newAdmin Address of the new proxy admin.\n   */\n  function _setAdmin(address newAdmin) internal {\n    bytes32 slot = ADMIN_SLOT;\n\n    assembly {\n      sstore(slot, newAdmin)\n    }\n  }\n\n  /**\n   * @dev Only fall back when the sender is not the admin.\n   */\n  function _willFallback() internal virtual override {\n    require(msg.sender != _admin(), 'Cannot call fallback function from the proxy admin');\n    super._willFallback();\n  }\n}\n"
			},
			"@aave/aave-stake/contracts/lib/BaseUpgradeabilityProxy.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity 0.7.5;\n\nimport './Proxy.sol';\nimport './Address.sol';\n\n/**\n * @title BaseUpgradeabilityProxy\n * @dev From https://github.com/OpenZeppelin/openzeppelin-sdk/tree/solc-0.6/packages/lib/contracts/upgradeability\n * This contract implements a proxy that allows to change the\n * implementation address to which it will delegate.\n * Such a change is called an implementation upgrade.\n */\ncontract BaseUpgradeabilityProxy is Proxy {\n  /**\n   * @dev Emitted when the implementation is upgraded.\n   * @param implementation Address of the new implementation.\n   */\n  event Upgraded(address indexed implementation);\n\n  /**\n   * @dev Storage slot with the address of the current implementation.\n   * This is the keccak-256 hash of \"eip1967.proxy.implementation\" subtracted by 1, and is\n   * validated in the constructor.\n   */\n  bytes32 internal constant IMPLEMENTATION_SLOT =\n    0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\n\n  /**\n   * @dev Returns the current implementation.\n   * @return impl Address of the current implementation\n   */\n  function _implementation() internal view override returns (address impl) {\n    bytes32 slot = IMPLEMENTATION_SLOT;\n    assembly {\n      impl := sload(slot)\n    }\n  }\n\n  /**\n   * @dev Upgrades the proxy to a new implementation.\n   * @param newImplementation Address of the new implementation.\n   */\n  function _upgradeTo(address newImplementation) internal {\n    _setImplementation(newImplementation);\n    emit Upgraded(newImplementation);\n  }\n\n  /**\n   * @dev Sets the implementation address of the proxy.\n   * @param newImplementation Address of the new implementation.\n   */\n  function _setImplementation(address newImplementation) internal {\n    require(\n      Address.isContract(newImplementation),\n      'Cannot set a proxy implementation to a non-contract address'\n    );\n\n    bytes32 slot = IMPLEMENTATION_SLOT;\n\n    assembly {\n      sstore(slot, newImplementation)\n    }\n  }\n}\n"
			},
			"@aave/aave-stake/contracts/lib/UpgradeabilityProxy.sol": {
				"content": "// SPDX-License-Identifier: agpl-3.0\npragma solidity 0.7.5;\n\nimport './BaseUpgradeabilityProxy.sol';\n\n/**\n * @title UpgradeabilityProxy\n * @dev From https://github.com/OpenZeppelin/openzeppelin-sdk/tree/solc-0.6/packages/lib/contracts/upgradeability\n * Extends BaseUpgradeabilityProxy with a constructor for initializing\n * implementation and init data.\n */\ncontract UpgradeabilityProxy is BaseUpgradeabilityProxy {\n  /**\n   * @dev Contract constructor.\n   * @param _logic Address of the initial implementation.\n   * @param _data Data to send as msg.data to the implementation to initialize the proxied contract.\n   * It should include the signature and the parameters of the function to be called, as described in\n   * https://solidity.readthedocs.io/en/v0.4.24/abi-spec.html#function-selector-and-argument-encoding.\n   * This parameter is optional, if no data is given the initialization call to proxied contract will be skipped.\n   */\n  constructor(address _logic, bytes memory _data) public payable {\n    assert(IMPLEMENTATION_SLOT == bytes32(uint256(keccak256('eip1967.proxy.implementation')) - 1));\n    _setImplementation(_logic);\n    if (_data.length > 0) {\n      (bool success, ) = _logic.delegatecall(_data);\n      require(success);\n    }\n  }\n}\n"
			},
			"@aave/aave-stake/contracts/lib/Address.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity 0.7.5;\n\n/**\n * @dev Collection of functions related to the address type\n * From https://github.com/OpenZeppelin/openzeppelin-contracts\n */\nlibrary Address {\n  /**\n   * @dev Returns true if `account` is a contract.\n   *\n   * [IMPORTANT]\n   * ====\n   * It is unsafe to assume that an address for which this function returns\n   * false is an externally-owned account (EOA) and not a contract.\n   *\n   * Among others, `isContract` will return false for the following\n   * types of addresses:\n   *\n   *  - an externally-owned account\n   *  - a contract in construction\n   *  - an address where a contract will be created\n   *  - an address where a contract lived, but was destroyed\n   * ====\n   */\n  function isContract(address account) internal view returns (bool) {\n    // According to EIP-1052, 0x0 is the value returned for not-yet created accounts\n    // and 0xc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470 is returned\n    // for accounts without code, i.e. `keccak256('')`\n    bytes32 codehash;\n    bytes32 accountHash = 0xc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470;\n    // solhint-disable-next-line no-inline-assembly\n    assembly {\n      codehash := extcodehash(account)\n    }\n    return (codehash != accountHash && codehash != 0x0);\n  }\n\n  /**\n   * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n   * `recipient`, forwarding all available gas and reverting on errors.\n   *\n   * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n   * of certain opcodes, possibly making contracts go over the 2300 gas limit\n   * imposed by `transfer`, making them unable to receive funds via\n   * `transfer`. {sendValue} removes this limitation.\n   *\n   * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n   *\n   * IMPORTANT: because control is transferred to `recipient`, care must be\n   * taken to not create reentrancy vulnerabilities. Consider using\n   * {ReentrancyGuard} or the\n   * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\n   */\n  function sendValue(address payable recipient, uint256 amount) internal {\n    require(address(this).balance >= amount, 'Address: insufficient balance');\n\n    // solhint-disable-next-line avoid-low-level-calls, avoid-call-value\n    (bool success, ) = recipient.call{value: amount}('');\n    require(success, 'Address: unable to send value, recipient may have reverted');\n  }\n}\n"
			},
			"@aave/aave-stake/contracts/lib/Proxy.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity 0.7.5;\n\n/**\n * @title Proxy\n * @dev From https://github.com/OpenZeppelin/openzeppelin-sdk/tree/solc-0.6/packages/lib/contracts/upgradeability\n * Implements delegation of calls to other contracts, with proper\n * forwarding of return values and bubbling of failures.\n * It defines a fallback function that delegates all calls to the address\n * returned by the abstract _implementation() internal function.\n */\nabstract contract Proxy {\n  /**\n   * @dev Fallback function.\n   * Implemented entirely in `_fallback`.\n   */\n  fallback() external payable {\n    _fallback();\n  }\n\n  /**\n   * @return The Address of the implementation.\n   */\n  function _implementation() internal view virtual returns (address);\n\n  /**\n   * @dev Delegates execution to an implementation contract.\n   * This is a low level function that doesn't return to its internal call site.\n   * It will return to the external caller whatever the implementation returns.\n   * @param implementation Address to delegate.\n   */\n  function _delegate(address implementation) internal {\n    assembly {\n      // Copy msg.data. We take full control of memory in this inline assembly\n      // block because it will not return to Solidity code. We overwrite the\n      // Solidity scratch pad at memory position 0.\n      calldatacopy(0, 0, calldatasize())\n\n      // Call the implementation.\n      // out and outsize are 0 because we don't know the size yet.\n      let result := delegatecall(gas(), implementation, 0, calldatasize(), 0, 0)\n\n      // Copy the returned data.\n      returndatacopy(0, 0, returndatasize())\n\n      switch result\n        // delegatecall returns 0 on error.\n        case 0 {\n          revert(0, returndatasize())\n        }\n        default {\n          return(0, returndatasize())\n        }\n    }\n  }\n\n  /**\n   * @dev Function that is run as the first thing in the fallback function.\n   * Can be redefined in derived contracts to add functionality.\n   * Redefinitions must call super._willFallback().\n   */\n  function _willFallback() internal virtual {}\n\n  /**\n   * @dev fallback implementation.\n   * Extracted to enable manual triggering.\n   */\n  function _fallback() internal {\n    _willFallback();\n    _delegate(_implementation());\n  }\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"@aave/aave-stake/contracts/lib/Address.sol": {
				"Address": {
					"abi": [],
					"devdoc": {
						"details": "Collection of functions related to the address type From https://github.com/OpenZeppelin/openzeppelin-contracts",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@aave/aave-stake/contracts/lib/Address.sol\":187:2585  library Address {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  invalid\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@aave/aave-stake/contracts/lib/Address.sol\":187:2585  library Address {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa264697066735822122084aba6f187f28c40c1782c97746659fc518d1ab4fd719a7be3b76559267ab75e64736f6c63430007050033\n}\n",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566023600b82828239805160001a607314601657fe5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122084aba6f187f28c40c1782c97746659fc518d1ab4fd719a7be3b76559267ab75e64736f6c63430007050033",
							"opcodes": "PUSH1 0x56 PUSH1 0x23 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x16 JUMPI INVALID JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP5 0xAB 0xA6 CALL DUP8 CALLCODE DUP13 BLOCKHASH 0xC1 PUSH25 0x2C97746659FC518D1AB4FD719A7BE3B76559267AB75E64736F PUSH13 0x63430007050033000000000000 ",
							"sourceMap": "187:2398:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122084aba6f187f28c40c1782c97746659fc518d1ab4fd719a7be3b76559267ab75e64736f6c63430007050033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP5 0xAB 0xA6 CALL DUP8 CALLCODE DUP13 BLOCKHASH 0xC1 PUSH25 0x2C97746659FC518D1AB4FD719A7BE3B76559267AB75E64736F PUSH13 0x63430007050033000000000000 ",
							"sourceMap": "187:2398:0:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"isContract(address)": "infinite",
								"sendValue(address payable,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 187,
									"end": 2585,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 187,
									"end": 2585,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 187,
									"end": 2585,
									"name": "PUSH",
									"source": 0,
									"value": "B"
								},
								{
									"begin": 187,
									"end": 2585,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 187,
									"end": 2585,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 187,
									"end": 2585,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 187,
									"end": 2585,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 187,
									"end": 2585,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 187,
									"end": 2585,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 187,
									"end": 2585,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 187,
									"end": 2585,
									"name": "BYTE",
									"source": 0
								},
								{
									"begin": 187,
									"end": 2585,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 187,
									"end": 2585,
									"name": "EQ",
									"source": 0
								},
								{
									"begin": 187,
									"end": 2585,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 187,
									"end": 2585,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 187,
									"end": 2585,
									"name": "INVALID",
									"source": 0
								},
								{
									"begin": 187,
									"end": 2585,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 187,
									"end": 2585,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 187,
									"end": 2585,
									"name": "ADDRESS",
									"source": 0
								},
								{
									"begin": 187,
									"end": 2585,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 187,
									"end": 2585,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 187,
									"end": 2585,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 187,
									"end": 2585,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 187,
									"end": 2585,
									"name": "MSTORE8",
									"source": 0
								},
								{
									"begin": 187,
									"end": 2585,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 187,
									"end": 2585,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 187,
									"end": 2585,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122084aba6f187f28c40c1782c97746659fc518d1ab4fd719a7be3b76559267ab75e64736f6c63430007050033",
									".code": [
										{
											"begin": 187,
											"end": 2585,
											"name": "PUSHDEPLOYADDRESS",
											"source": 0
										},
										{
											"begin": 187,
											"end": 2585,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 187,
											"end": 2585,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 187,
											"end": 2585,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 187,
											"end": 2585,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 187,
											"end": 2585,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 187,
											"end": 2585,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 187,
											"end": 2585,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 187,
											"end": 2585,
											"name": "REVERT",
											"source": 0
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.7.5+commit.eb77ed08\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Collection of functions related to the address type From https://github.com/OpenZeppelin/openzeppelin-contracts\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@aave/aave-stake/contracts/lib/Address.sol\":\"Address\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@aave/aave-stake/contracts/lib/Address.sol\":{\"keccak256\":\"0x456a1aebf00cb1f2987ca41f1924e4811703f10800a34ecb759e5d1dc472bb78\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ee41b6968eca15df18d524bb43b928e0405a6fe3d725ffe5950adb73c946cc0b\",\"dweb:/ipfs/QmP4hcWLnx33hoRpFjjQAodx4Hb7oXxHX58kpWcZX8v8cx\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@aave/aave-stake/contracts/lib/BaseAdminUpgradeabilityProxy.sol": {
				"BaseAdminUpgradeabilityProxy": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "previousAdmin",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "newAdmin",
									"type": "address"
								}
							],
							"name": "AdminChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "implementation",
									"type": "address"
								}
							],
							"name": "Upgraded",
							"type": "event"
						},
						{
							"stateMutability": "payable",
							"type": "fallback"
						},
						{
							"inputs": [],
							"name": "admin",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newAdmin",
									"type": "address"
								}
							],
							"name": "changeAdmin",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "implementation",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newImplementation",
									"type": "address"
								}
							],
							"name": "upgradeTo",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newImplementation",
									"type": "address"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "upgradeToAndCall",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "From https://github.com/OpenZeppelin/openzeppelin-sdk/tree/solc-0.6/packages/lib/contracts/upgradeability This contract combines an upgradeability proxy with an authorization mechanism for administrative tasks. All external functions in this contract must be guarded by the `ifAdmin` modifier. See ethereum/solidity#3864 for a Solidity feature proposal that would enable this to be done automatically.",
						"events": {
							"AdminChanged(address,address)": {
								"details": "Emitted when the administration has been transferred.",
								"params": {
									"newAdmin": "Address of the new admin.",
									"previousAdmin": "Address of the previous admin."
								}
							}
						},
						"kind": "dev",
						"methods": {
							"admin()": {
								"returns": {
									"_0": "The address of the proxy admin."
								}
							},
							"changeAdmin(address)": {
								"details": "Changes the admin of the proxy. Only the current admin can call this function.",
								"params": {
									"newAdmin": "Address to transfer proxy administration to."
								}
							},
							"implementation()": {
								"returns": {
									"_0": "The address of the implementation."
								}
							},
							"upgradeTo(address)": {
								"details": "Upgrade the backing implementation of the proxy. Only the admin can call this function.",
								"params": {
									"newImplementation": "Address of the new implementation."
								}
							},
							"upgradeToAndCall(address,bytes)": {
								"details": "Upgrade the backing implementation of the proxy and call a function on the new implementation. This is useful to initialize the proxied contract.",
								"params": {
									"data": "Data to send as msg.data in the low level call. It should include the signature and the parameters of the function to be called, as described in https://solidity.readthedocs.io/en/v0.4.24/abi-spec.html#function-selector-and-argument-encoding.",
									"newImplementation": "Address of the new implementation."
								}
							}
						},
						"stateVariables": {
							"ADMIN_SLOT": {
								"details": "Storage slot with the admin of the contract. This is the keccak-256 hash of \"eip1967.proxy.admin\" subtracted by 1, and is validated in the constructor."
							}
						},
						"title": "BaseAdminUpgradeabilityProxy",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@aave/aave-stake/contracts/lib/BaseAdminUpgradeabilityProxy.sol\":565:3891  contract BaseAdminUpgradeabilityProxy is BaseUpgradeabilityProxy {... */\n  mstore(0x40, 0x80)\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"@aave/aave-stake/contracts/lib/BaseAdminUpgradeabilityProxy.sol\":565:3891  contract BaseAdminUpgradeabilityProxy is BaseUpgradeabilityProxy {... */\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x3659cfe6\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x4f1ef286\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x5c60da1b\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x8f283970\n      eq\n      tag_6\n      jumpi\n      dup1\n      0xf851a440\n      eq\n      tag_7\n      jumpi\n    tag_1:\n        /* \"@aave/aave-stake/contracts/lib/Proxy.sol\":601:612  _fallback() */\n      tag_10\n        /* \"@aave/aave-stake/contracts/lib/Proxy.sol\":601:610  _fallback */\n      tag_11\n        /* \"@aave/aave-stake/contracts/lib/Proxy.sol\":601:612  _fallback() */\n      jump\t// in\n    tag_10:\n        /* \"@aave/aave-stake/contracts/lib/BaseAdminUpgradeabilityProxy.sol\":565:3891  contract BaseAdminUpgradeabilityProxy is BaseUpgradeabilityProxy {... */\n      stop\n        /* \"@aave/aave-stake/contracts/lib/BaseAdminUpgradeabilityProxy.sol\":2350:2453  function upgradeTo(address newImplementation) external ifAdmin {... */\n    tag_3:\n      callvalue\n      dup1\n      iszero\n      tag_12\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_12:\n      pop\n      tag_10\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x20\n      dup2\n      lt\n      iszero\n      tag_14\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_14:\n      pop\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      tag_15\n      jump\t// in\n        /* \"@aave/aave-stake/contracts/lib/BaseAdminUpgradeabilityProxy.sol\":2970:3206  function upgradeToAndCall(address newImplementation, bytes calldata data)... */\n    tag_4:\n      tag_10\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x40\n      dup2\n      lt\n      iszero\n      tag_17\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_17:\n      sub(shl(0xa0, 0x01), 0x01)\n      dup3\n      calldataload\n      and\n      swap2\n      swap1\n      dup2\n      add\n      swap1\n      0x40\n      dup2\n      add\n      0x20\n      dup3\n      add\n      calldataload\n      0x0100000000\n      dup2\n      gt\n      iszero\n      tag_18\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_18:\n      dup3\n      add\n      dup4\n      0x20\n      dup3\n      add\n      gt\n      iszero\n      tag_19\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_19:\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap2\n      dup5\n      0x01\n      dup4\n      mul\n      dup5\n      add\n      gt\n      0x0100000000\n      dup4\n      gt\n      or\n      iszero\n      tag_20\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_20:\n      pop\n      swap1\n      swap3\n      pop\n      swap1\n      pop\n      tag_21\n      jump\t// in\n        /* \"@aave/aave-stake/contracts/lib/BaseAdminUpgradeabilityProxy.sol\":1670:1766  function implementation() external ifAdmin returns (address) {... */\n    tag_5:\n      callvalue\n      dup1\n      iszero\n      tag_22\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_22:\n      pop\n      tag_23\n      tag_24\n      jump\t// in\n    tag_23:\n      0x40\n      dup1\n      mload\n      sub(shl(0xa0, 0x01), 0x01)\n      swap1\n      swap3\n      and\n      dup3\n      mstore\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x20\n      add\n      swap1\n      return\n        /* \"@aave/aave-stake/contracts/lib/BaseAdminUpgradeabilityProxy.sol\":1942:2166  function changeAdmin(address newAdmin) external ifAdmin {... */\n    tag_6:\n      callvalue\n      dup1\n      iszero\n      tag_25\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_25:\n      pop\n      tag_10\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x20\n      dup2\n      lt\n      iszero\n      tag_27\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_27:\n      pop\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      tag_28\n      jump\t// in\n        /* \"@aave/aave-stake/contracts/lib/BaseAdminUpgradeabilityProxy.sol\":1528:1606  function admin() external ifAdmin returns (address) {... */\n    tag_7:\n      callvalue\n      dup1\n      iszero\n      tag_29\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_29:\n      pop\n      tag_23\n      tag_31\n      jump\t// in\n        /* \"@aave/aave-stake/contracts/lib/Proxy.sol\":2167:2257  function _fallback() internal {... */\n    tag_11:\n        /* \"@aave/aave-stake/contracts/lib/Proxy.sol\":2203:2218  _willFallback() */\n      tag_33\n        /* \"@aave/aave-stake/contracts/lib/Proxy.sol\":2203:2216  _willFallback */\n      tag_34\n        /* \"@aave/aave-stake/contracts/lib/Proxy.sol\":2203:2218  _willFallback() */\n      jump\t// in\n    tag_33:\n        /* \"@aave/aave-stake/contracts/lib/Proxy.sol\":2224:2252  _delegate(_implementation()) */\n      tag_35\n        /* \"@aave/aave-stake/contracts/lib/Proxy.sol\":2234:2251  _implementation() */\n      tag_36\n        /* \"@aave/aave-stake/contracts/lib/Proxy.sol\":2234:2249  _implementation */\n      tag_37\n        /* \"@aave/aave-stake/contracts/lib/Proxy.sol\":2234:2251  _implementation() */\n      jump\t// in\n    tag_36:\n        /* \"@aave/aave-stake/contracts/lib/Proxy.sol\":2224:2233  _delegate */\n      tag_38\n        /* \"@aave/aave-stake/contracts/lib/Proxy.sol\":2224:2252  _delegate(_implementation()) */\n      jump\t// in\n    tag_35:\n        /* \"@aave/aave-stake/contracts/lib/Proxy.sol\":2167:2257  function _fallback() internal {... */\n      jump\t// out\n        /* \"@aave/aave-stake/contracts/lib/BaseAdminUpgradeabilityProxy.sol\":2350:2453  function upgradeTo(address newImplementation) external ifAdmin {... */\n    tag_15:\n        /* \"@aave/aave-stake/contracts/lib/BaseAdminUpgradeabilityProxy.sol\":1405:1413  _admin() */\n      tag_40\n        /* \"@aave/aave-stake/contracts/lib/BaseAdminUpgradeabilityProxy.sol\":1405:1411  _admin */\n      tag_41\n        /* \"@aave/aave-stake/contracts/lib/BaseAdminUpgradeabilityProxy.sol\":1405:1413  _admin() */\n      jump\t// in\n    tag_40:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@aave/aave-stake/contracts/lib/BaseAdminUpgradeabilityProxy.sol\":1391:1413  msg.sender == _admin() */\n      and\n        /* \"@aave/aave-stake/contracts/lib/BaseAdminUpgradeabilityProxy.sol\":1391:1401  msg.sender */\n      caller\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@aave/aave-stake/contracts/lib/BaseAdminUpgradeabilityProxy.sol\":1391:1413  msg.sender == _admin() */\n      and\n      eq\n        /* \"@aave/aave-stake/contracts/lib/BaseAdminUpgradeabilityProxy.sol\":1387:1463  if (msg.sender == _admin()) {... */\n      iszero\n      tag_42\n      jumpi\n        /* \"@aave/aave-stake/contracts/lib/BaseAdminUpgradeabilityProxy.sol\":2419:2448  _upgradeTo(newImplementation) */\n      tag_44\n        /* \"@aave/aave-stake/contracts/lib/BaseAdminUpgradeabilityProxy.sol\":2430:2447  newImplementation */\n      dup2\n        /* \"@aave/aave-stake/contracts/lib/BaseAdminUpgradeabilityProxy.sol\":2419:2429  _upgradeTo */\n      tag_45\n        /* \"@aave/aave-stake/contracts/lib/BaseAdminUpgradeabilityProxy.sol\":2419:2448  _upgradeTo(newImplementation) */\n      jump\t// in\n    tag_44:\n        /* \"@aave/aave-stake/contracts/lib/BaseAdminUpgradeabilityProxy.sol\":1387:1463  if (msg.sender == _admin()) {... */\n      jump(tag_47)\n    tag_42:\n        /* \"@aave/aave-stake/contracts/lib/BaseAdminUpgradeabilityProxy.sol\":1445:1456  _fallback() */\n      tag_47\n        /* \"@aave/aave-stake/contracts/lib/BaseAdminUpgradeabilityProxy.sol\":1445:1454  _fallback */\n      tag_11\n        /* \"@aave/aave-stake/contracts/lib/BaseAdminUpgradeabilityProxy.sol\":1445:1456  _fallback() */\n      jump\t// in\n    tag_47:\n        /* \"@aave/aave-stake/contracts/lib/BaseAdminUpgradeabilityProxy.sol\":2350:2453  function upgradeTo(address newImplementation) external ifAdmin {... */\n      pop\n      jump\t// out\n        /* \"@aave/aave-stake/contracts/lib/BaseAdminUpgradeabilityProxy.sol\":2970:3206  function upgradeToAndCall(address newImplementation, bytes calldata data)... */\n    tag_21:\n        /* \"@aave/aave-stake/contracts/lib/BaseAdminUpgradeabilityProxy.sol\":1405:1413  _admin() */\n      tag_49\n        /* \"@aave/aave-stake/contracts/lib/BaseAdminUpgradeabilityProxy.sol\":1405:1411  _admin */\n      tag_41\n        /* \"@aave/aave-stake/contracts/lib/BaseAdminUpgradeabilityProxy.sol\":1405:1413  _admin() */\n      jump\t// in\n    tag_49:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@aave/aave-stake/contracts/lib/BaseAdminUpgradeabilityProxy.sol\":1391:1413  msg.sender == _admin() */\n      and\n        /* \"@aave/aave-stake/contracts/lib/BaseAdminUpgradeabilityProxy.sol\":1391:1401  msg.sender */\n      caller\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@aave/aave-stake/contracts/lib/BaseAdminUpgradeabilityProxy.sol\":1391:1413  msg.sender == _admin() */\n      and\n      eq\n        /* \"@aave/aave-stake/contracts/lib/BaseAdminUpgradeabilityProxy.sol\":1387:1463  if (msg.sender == _admin()) {... */\n      iszero\n      tag_50\n      jumpi\n        /* \"@aave/aave-stake/contracts/lib/BaseAdminUpgradeabilityProxy.sol\":3089:3118  _upgradeTo(newImplementation) */\n      tag_52\n        /* \"@aave/aave-stake/contracts/lib/BaseAdminUpgradeabilityProxy.sol\":3100:3117  newImplementation */\n      dup4\n        /* \"@aave/aave-stake/contracts/lib/BaseAdminUpgradeabilityProxy.sol\":3089:3099  _upgradeTo */\n      tag_45\n        /* \"@aave/aave-stake/contracts/lib/BaseAdminUpgradeabilityProxy.sol\":3089:3118  _upgradeTo(newImplementation) */\n      jump\t// in\n    tag_52:\n        /* \"@aave/aave-stake/contracts/lib/BaseAdminUpgradeabilityProxy.sol\":3125:3137  bool success */\n      0x00\n        /* \"@aave/aave-stake/contracts/lib/BaseAdminUpgradeabilityProxy.sol\":3143:3160  newImplementation */\n      dup4\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@aave/aave-stake/contracts/lib/BaseAdminUpgradeabilityProxy.sol\":3143:3173  newImplementation.delegatecall */\n      and\n        /* \"@aave/aave-stake/contracts/lib/BaseAdminUpgradeabilityProxy.sol\":3174:3178  data */\n      dup4\n      dup4\n        /* \"@aave/aave-stake/contracts/lib/BaseAdminUpgradeabilityProxy.sol\":3143:3179  newImplementation.delegatecall(data) */\n      mload(0x40)\n      dup1\n      dup4\n      dup4\n      dup1\n      dup3\n      dup5\n      calldatacopy\n      mload(0x40)\n      swap3\n      add\n      swap5\n      pop\n      0x00\n      swap4\n      pop\n      swap1\n      swap2\n      pop\n      pop\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      gas\n      delegatecall\n      swap2\n      pop\n      pop\n      returndatasize\n      dup1\n      0x00\n      dup2\n      eq\n      tag_55\n      jumpi\n      mload(0x40)\n      swap2\n      pop\n      and(add(returndatasize, 0x3f), not(0x1f))\n      dup3\n      add\n      0x40\n      mstore\n      returndatasize\n      dup3\n      mstore\n      returndatasize\n      0x00\n      0x20\n      dup5\n      add\n      returndatacopy\n      jump(tag_54)\n    tag_55:\n      0x60\n      swap2\n      pop\n    tag_54:\n      pop\n        /* \"@aave/aave-stake/contracts/lib/BaseAdminUpgradeabilityProxy.sol\":3124:3179  (bool success, ) = newImplementation.delegatecall(data) */\n      pop\n      swap1\n      pop\n        /* \"@aave/aave-stake/contracts/lib/BaseAdminUpgradeabilityProxy.sol\":3193:3200  success */\n      dup1\n        /* \"@aave/aave-stake/contracts/lib/BaseAdminUpgradeabilityProxy.sol\":3185:3201  require(success) */\n      tag_56\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_56:\n        /* \"@aave/aave-stake/contracts/lib/BaseAdminUpgradeabilityProxy.sol\":1423:1424  _ */\n      pop\n        /* \"@aave/aave-stake/contracts/lib/BaseAdminUpgradeabilityProxy.sol\":1387:1463  if (msg.sender == _admin()) {... */\n      jump(tag_58)\n    tag_50:\n        /* \"@aave/aave-stake/contracts/lib/BaseAdminUpgradeabilityProxy.sol\":1445:1456  _fallback() */\n      tag_58\n        /* \"@aave/aave-stake/contracts/lib/BaseAdminUpgradeabilityProxy.sol\":1445:1454  _fallback */\n      tag_11\n        /* \"@aave/aave-stake/contracts/lib/BaseAdminUpgradeabilityProxy.sol\":1445:1456  _fallback() */\n      jump\t// in\n    tag_58:\n        /* \"@aave/aave-stake/contracts/lib/BaseAdminUpgradeabilityProxy.sol\":2970:3206  function upgradeToAndCall(address newImplementation, bytes calldata data)... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@aave/aave-stake/contracts/lib/BaseAdminUpgradeabilityProxy.sol\":1670:1766  function implementation() external ifAdmin returns (address) {... */\n    tag_24:\n        /* \"@aave/aave-stake/contracts/lib/BaseAdminUpgradeabilityProxy.sol\":1722:1729  address */\n      0x00\n        /* \"@aave/aave-stake/contracts/lib/BaseAdminUpgradeabilityProxy.sol\":1405:1413  _admin() */\n      tag_60\n        /* \"@aave/aave-stake/contracts/lib/BaseAdminUpgradeabilityProxy.sol\":1405:1411  _admin */\n      tag_41\n        /* \"@aave/aave-stake/contracts/lib/BaseAdminUpgradeabilityProxy.sol\":1405:1413  _admin() */\n      jump\t// in\n    tag_60:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@aave/aave-stake/contracts/lib/BaseAdminUpgradeabilityProxy.sol\":1391:1413  msg.sender == _admin() */\n      and\n        /* \"@aave/aave-stake/contracts/lib/BaseAdminUpgradeabilityProxy.sol\":1391:1401  msg.sender */\n      caller\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@aave/aave-stake/contracts/lib/BaseAdminUpgradeabilityProxy.sol\":1391:1413  msg.sender == _admin() */\n      and\n      eq\n        /* \"@aave/aave-stake/contracts/lib/BaseAdminUpgradeabilityProxy.sol\":1387:1463  if (msg.sender == _admin()) {... */\n      iszero\n      tag_61\n      jumpi\n        /* \"@aave/aave-stake/contracts/lib/BaseAdminUpgradeabilityProxy.sol\":1744:1761  _implementation() */\n      tag_63\n        /* \"@aave/aave-stake/contracts/lib/BaseAdminUpgradeabilityProxy.sol\":1744:1759  _implementation */\n      tag_37\n        /* \"@aave/aave-stake/contracts/lib/BaseAdminUpgradeabilityProxy.sol\":1744:1761  _implementation() */\n      jump\t// in\n    tag_63:\n        /* \"@aave/aave-stake/contracts/lib/BaseAdminUpgradeabilityProxy.sol\":1737:1761  return _implementation() */\n      swap1\n      pop\n        /* \"@aave/aave-stake/contracts/lib/BaseAdminUpgradeabilityProxy.sol\":1387:1463  if (msg.sender == _admin()) {... */\n      jump(tag_65)\n    tag_61:\n        /* \"@aave/aave-stake/contracts/lib/BaseAdminUpgradeabilityProxy.sol\":1445:1456  _fallback() */\n      tag_65\n        /* \"@aave/aave-stake/contracts/lib/BaseAdminUpgradeabilityProxy.sol\":1445:1454  _fallback */\n      tag_11\n        /* \"@aave/aave-stake/contracts/lib/BaseAdminUpgradeabilityProxy.sol\":1445:1456  _fallback() */\n      jump\t// in\n    tag_65:\n        /* \"@aave/aave-stake/contracts/lib/BaseAdminUpgradeabilityProxy.sol\":1670:1766  function implementation() external ifAdmin returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"@aave/aave-stake/contracts/lib/BaseAdminUpgradeabilityProxy.sol\":1942:2166  function changeAdmin(address newAdmin) external ifAdmin {... */\n    tag_28:\n        /* \"@aave/aave-stake/contracts/lib/BaseAdminUpgradeabilityProxy.sol\":1405:1413  _admin() */\n      tag_67\n        /* \"@aave/aave-stake/contracts/lib/BaseAdminUpgradeabilityProxy.sol\":1405:1411  _admin */\n      tag_41\n        /* \"@aave/aave-stake/contracts/lib/BaseAdminUpgradeabilityProxy.sol\":1405:1413  _admin() */\n      jump\t// in\n    tag_67:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@aave/aave-stake/contracts/lib/BaseAdminUpgradeabilityProxy.sol\":1391:1413  msg.sender == _admin() */\n      and\n        /* \"@aave/aave-stake/contracts/lib/BaseAdminUpgradeabilityProxy.sol\":1391:1401  msg.sender */\n      caller\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@aave/aave-stake/contracts/lib/BaseAdminUpgradeabilityProxy.sol\":1391:1413  msg.sender == _admin() */\n      and\n      eq\n        /* \"@aave/aave-stake/contracts/lib/BaseAdminUpgradeabilityProxy.sol\":1387:1463  if (msg.sender == _admin()) {... */\n      iszero\n      tag_42\n      jumpi\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@aave/aave-stake/contracts/lib/BaseAdminUpgradeabilityProxy.sol\":2012:2034  newAdmin != address(0) */\n      dup2\n      and\n        /* \"@aave/aave-stake/contracts/lib/BaseAdminUpgradeabilityProxy.sol\":2004:2093  require(newAdmin != address(0), 'Cannot change the admin of a proxy to the zero address') */\n      tag_70\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x36\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_37112268ceb11e15373f32f9374a1f3287d0a3e6e5a9a435ac06367e6cd0cf00\n      0x36\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_70:\n        /* \"@aave/aave-stake/contracts/lib/BaseAdminUpgradeabilityProxy.sol\":2104:2136  AdminChanged(_admin(), newAdmin) */\n      0x7e644d79422f17c01e4894b5f4f588d331ebfa28653d42ae832dc59e38c9798f\n        /* \"@aave/aave-stake/contracts/lib/BaseAdminUpgradeabilityProxy.sol\":2117:2125  _admin() */\n      tag_71\n        /* \"@aave/aave-stake/contracts/lib/BaseAdminUpgradeabilityProxy.sol\":2117:2123  _admin */\n      tag_41\n        /* \"@aave/aave-stake/contracts/lib/BaseAdminUpgradeabilityProxy.sol\":2117:2125  _admin() */\n      jump\t// in\n    tag_71:\n        /* \"@aave/aave-stake/contracts/lib/BaseAdminUpgradeabilityProxy.sol\":2104:2136  AdminChanged(_admin(), newAdmin) */\n      0x40\n      dup1\n      mload\n      sub(shl(0xa0, 0x01), 0x01)\n      swap3\n      dup4\n      and\n      dup2\n      mstore\n      swap2\n      dup5\n      and\n      0x20\n      dup4\n      add\n      mstore\n      dup1\n      mload\n      swap2\n      dup3\n      swap1\n      sub\n      add\n      swap1\n      log1\n        /* \"@aave/aave-stake/contracts/lib/BaseAdminUpgradeabilityProxy.sol\":2142:2161  _setAdmin(newAdmin) */\n      tag_44\n        /* \"@aave/aave-stake/contracts/lib/BaseAdminUpgradeabilityProxy.sol\":2152:2160  newAdmin */\n      dup2\n        /* \"@aave/aave-stake/contracts/lib/BaseAdminUpgradeabilityProxy.sol\":2142:2151  _setAdmin */\n      tag_73\n        /* \"@aave/aave-stake/contracts/lib/BaseAdminUpgradeabilityProxy.sol\":2142:2161  _setAdmin(newAdmin) */\n      jump\t// in\n        /* \"@aave/aave-stake/contracts/lib/BaseAdminUpgradeabilityProxy.sol\":1528:1606  function admin() external ifAdmin returns (address) {... */\n    tag_31:\n        /* \"@aave/aave-stake/contracts/lib/BaseAdminUpgradeabilityProxy.sol\":1571:1578  address */\n      0x00\n        /* \"@aave/aave-stake/contracts/lib/BaseAdminUpgradeabilityProxy.sol\":1405:1413  _admin() */\n      tag_77\n        /* \"@aave/aave-stake/contracts/lib/BaseAdminUpgradeabilityProxy.sol\":1405:1411  _admin */\n      tag_41\n        /* \"@aave/aave-stake/contracts/lib/BaseAdminUpgradeabilityProxy.sol\":1405:1413  _admin() */\n      jump\t// in\n    tag_77:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@aave/aave-stake/contracts/lib/BaseAdminUpgradeabilityProxy.sol\":1391:1413  msg.sender == _admin() */\n      and\n        /* \"@aave/aave-stake/contracts/lib/BaseAdminUpgradeabilityProxy.sol\":1391:1401  msg.sender */\n      caller\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@aave/aave-stake/contracts/lib/BaseAdminUpgradeabilityProxy.sol\":1391:1413  msg.sender == _admin() */\n      and\n      eq\n        /* \"@aave/aave-stake/contracts/lib/BaseAdminUpgradeabilityProxy.sol\":1387:1463  if (msg.sender == _admin()) {... */\n      iszero\n      tag_61\n      jumpi\n        /* \"@aave/aave-stake/contracts/lib/BaseAdminUpgradeabilityProxy.sol\":1593:1601  _admin() */\n      tag_63\n        /* \"@aave/aave-stake/contracts/lib/BaseAdminUpgradeabilityProxy.sol\":1593:1599  _admin */\n      tag_41\n        /* \"@aave/aave-stake/contracts/lib/BaseAdminUpgradeabilityProxy.sol\":1593:1601  _admin() */\n      jump\t// in\n        /* \"@aave/aave-stake/contracts/lib/BaseAdminUpgradeabilityProxy.sol\":3715:3889  function _willFallback() internal virtual override {... */\n    tag_34:\n        /* \"@aave/aave-stake/contracts/lib/BaseAdminUpgradeabilityProxy.sol\":3794:3802  _admin() */\n      tag_84\n        /* \"@aave/aave-stake/contracts/lib/BaseAdminUpgradeabilityProxy.sol\":3794:3800  _admin */\n      tag_41\n        /* \"@aave/aave-stake/contracts/lib/BaseAdminUpgradeabilityProxy.sol\":3794:3802  _admin() */\n      jump\t// in\n    tag_84:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@aave/aave-stake/contracts/lib/BaseAdminUpgradeabilityProxy.sol\":3780:3802  msg.sender != _admin() */\n      and\n        /* \"@aave/aave-stake/contracts/lib/BaseAdminUpgradeabilityProxy.sol\":3780:3790  msg.sender */\n      caller\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@aave/aave-stake/contracts/lib/BaseAdminUpgradeabilityProxy.sol\":3780:3802  msg.sender != _admin() */\n      and\n      eq\n      iszero\n        /* \"@aave/aave-stake/contracts/lib/BaseAdminUpgradeabilityProxy.sol\":3772:3857  require(msg.sender != _admin(), 'Cannot call fallback function from the proxy admin') */\n      tag_85\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x32\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_08b466bde770d6d309a22d90ec051a62ad397be6218a53e741989877ec297fc9\n      0x32\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_85:\n        /* \"@aave/aave-stake/contracts/lib/BaseAdminUpgradeabilityProxy.sol\":3863:3884  super._willFallback() */\n      tag_35\n        /* \"@aave/aave-stake/contracts/lib/BaseAdminUpgradeabilityProxy.sol\":3863:3882  super._willFallback */\n      tag_35\n        /* \"@aave/aave-stake/contracts/lib/BaseAdminUpgradeabilityProxy.sol\":3863:3884  super._willFallback() */\n      jump\t// in\n        /* \"@aave/aave-stake/contracts/lib/BaseUpgradeabilityProxy.sol\":1100:1265  function _implementation() internal view override returns (address impl) {... */\n    tag_37:\n        /* \"@aave/aave-stake/contracts/lib/BaseUpgradeabilityProxy.sol\":915:981  0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc */\n      0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc\n        /* \"@aave/aave-stake/contracts/lib/BaseUpgradeabilityProxy.sol\":1244:1255  sload(slot) */\n      sload\n      swap1\n        /* \"@aave/aave-stake/contracts/lib/BaseUpgradeabilityProxy.sol\":1228:1261  {... */\n      jump\t// out\n        /* \"@aave/aave-stake/contracts/lib/Proxy.sol\":1034:1819  function _delegate(address implementation) internal {... */\n    tag_38:\n        /* \"@aave/aave-stake/contracts/lib/Proxy.sol\":1336:1350  calldatasize() */\n      calldatasize\n        /* \"@aave/aave-stake/contracts/lib/Proxy.sol\":1333:1334  0 */\n      0x00\n        /* \"@aave/aave-stake/contracts/lib/Proxy.sol\":1330:1331  0 */\n      dup1\n        /* \"@aave/aave-stake/contracts/lib/Proxy.sol\":1317:1351  calldatacopy(0, 0, calldatasize()) */\n      calldatacopy\n        /* \"@aave/aave-stake/contracts/lib/Proxy.sol\":1532:1533  0 */\n      0x00\n        /* \"@aave/aave-stake/contracts/lib/Proxy.sol\":1529:1530  0 */\n      dup1\n        /* \"@aave/aave-stake/contracts/lib/Proxy.sol\":1513:1527  calldatasize() */\n      calldatasize\n        /* \"@aave/aave-stake/contracts/lib/Proxy.sol\":1510:1511  0 */\n      0x00\n        /* \"@aave/aave-stake/contracts/lib/Proxy.sol\":1494:1508  implementation */\n      dup5\n        /* \"@aave/aave-stake/contracts/lib/Proxy.sol\":1487:1492  gas() */\n      gas\n        /* \"@aave/aave-stake/contracts/lib/Proxy.sol\":1474:1534  delegatecall(gas(), implementation, 0, calldatasize(), 0, 0) */\n      delegatecall\n        /* \"@aave/aave-stake/contracts/lib/Proxy.sol\":1596:1612  returndatasize() */\n      returndatasize\n        /* \"@aave/aave-stake/contracts/lib/Proxy.sol\":1593:1594  0 */\n      0x00\n        /* \"@aave/aave-stake/contracts/lib/Proxy.sol\":1590:1591  0 */\n      dup1\n        /* \"@aave/aave-stake/contracts/lib/Proxy.sol\":1575:1613  returndatacopy(0, 0, returndatasize()) */\n      returndatacopy\n        /* \"@aave/aave-stake/contracts/lib/Proxy.sol\":1628:1634  result */\n      dup1\n        /* \"@aave/aave-stake/contracts/lib/Proxy.sol\":1687:1743  case 0 {... */\n      dup1\n      iszero\n      tag_91\n      jumpi\n        /* \"@aave/aave-stake/contracts/lib/Proxy.sol\":1782:1798  returndatasize() */\n      returndatasize\n        /* \"@aave/aave-stake/contracts/lib/Proxy.sol\":1779:1780  0 */\n      0x00\n        /* \"@aave/aave-stake/contracts/lib/Proxy.sol\":1772:1799  return(0, returndatasize()) */\n      return\n        /* \"@aave/aave-stake/contracts/lib/Proxy.sol\":1687:1743  case 0 {... */\n    tag_91:\n        /* \"@aave/aave-stake/contracts/lib/Proxy.sol\":1716:1732  returndatasize() */\n      returndatasize\n        /* \"@aave/aave-stake/contracts/lib/Proxy.sol\":1713:1714  0 */\n      0x00\n        /* \"@aave/aave-stake/contracts/lib/Proxy.sol\":1706:1733  revert(0, returndatasize()) */\n      revert\n        /* \"@aave/aave-stake/contracts/lib/BaseAdminUpgradeabilityProxy.sol\":3255:3391  function _admin() internal view returns (address adm) {... */\n    tag_41:\n        /* \"@aave/aave-stake/contracts/lib/BaseAdminUpgradeabilityProxy.sol\":1106:1172  0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103 */\n      0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103\n        /* \"@aave/aave-stake/contracts/lib/BaseAdminUpgradeabilityProxy.sol\":3370:3381  sload(slot) */\n      sload\n      swap1\n        /* \"@aave/aave-stake/contracts/lib/BaseAdminUpgradeabilityProxy.sol\":3355:3387  {... */\n      jump\t// out\n        /* \"@aave/aave-stake/contracts/lib/BaseUpgradeabilityProxy.sol\":1400:1542  function _upgradeTo(address newImplementation) internal {... */\n    tag_45:\n        /* \"@aave/aave-stake/contracts/lib/BaseUpgradeabilityProxy.sol\":1462:1499  _setImplementation(newImplementation) */\n      tag_94\n        /* \"@aave/aave-stake/contracts/lib/BaseUpgradeabilityProxy.sol\":1481:1498  newImplementation */\n      dup2\n        /* \"@aave/aave-stake/contracts/lib/BaseUpgradeabilityProxy.sol\":1462:1480  _setImplementation */\n      tag_95\n        /* \"@aave/aave-stake/contracts/lib/BaseUpgradeabilityProxy.sol\":1462:1499  _setImplementation(newImplementation) */\n      jump\t// in\n    tag_94:\n        /* \"@aave/aave-stake/contracts/lib/BaseUpgradeabilityProxy.sol\":1510:1537  Upgraded(newImplementation) */\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n      dup3\n      and\n      swap1\n      0xbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b\n      swap1\n      0x00\n      swap1\n      log2\n        /* \"@aave/aave-stake/contracts/lib/BaseUpgradeabilityProxy.sol\":1400:1542  function _upgradeTo(address newImplementation) internal {... */\n      pop\n      jump\t// out\n        /* \"@aave/aave-stake/contracts/lib/BaseAdminUpgradeabilityProxy.sol\":3507:3640  function _setAdmin(address newAdmin) internal {... */\n    tag_73:\n        /* \"@aave/aave-stake/contracts/lib/BaseAdminUpgradeabilityProxy.sol\":1106:1172  0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103 */\n      0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103\n        /* \"@aave/aave-stake/contracts/lib/BaseAdminUpgradeabilityProxy.sol\":3608:3630  sstore(slot, newAdmin) */\n      sstore\n        /* \"@aave/aave-stake/contracts/lib/BaseAdminUpgradeabilityProxy.sol\":3600:3636  {... */\n      jump\t// out\n        /* \"@aave/aave-stake/contracts/lib/BaseUpgradeabilityProxy.sol\":1679:1982  function _setImplementation(address newImplementation) internal {... */\n    tag_95:\n        /* \"@aave/aave-stake/contracts/lib/BaseUpgradeabilityProxy.sol\":1764:1801  Address.isContract(newImplementation) */\n      tag_99\n        /* \"@aave/aave-stake/contracts/lib/BaseUpgradeabilityProxy.sol\":1783:1800  newImplementation */\n      dup2\n        /* \"@aave/aave-stake/contracts/lib/BaseUpgradeabilityProxy.sol\":1764:1782  Address.isContract */\n      tag_100\n        /* \"@aave/aave-stake/contracts/lib/BaseUpgradeabilityProxy.sol\":1764:1801  Address.isContract(newImplementation) */\n      jump\t// in\n    tag_99:\n        /* \"@aave/aave-stake/contracts/lib/BaseUpgradeabilityProxy.sol\":1749:1876  require(... */\n      tag_101\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x3b\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_b5145a64ce8c406e5785204fe5b300f0ceda96d6636350b38fdccb9cd8c0c37c\n      0x3b\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_101:\n        /* \"@aave/aave-stake/contracts/lib/BaseUpgradeabilityProxy.sol\":915:981  0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc */\n      0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc\n        /* \"@aave/aave-stake/contracts/lib/BaseUpgradeabilityProxy.sol\":1941:1972  sstore(slot, newImplementation) */\n      sstore\n        /* \"@aave/aave-stake/contracts/lib/BaseUpgradeabilityProxy.sol\":1933:1978  {... */\n      jump\t// out\n        /* \"@aave/aave-stake/contracts/lib/Address.sol\":743:1329  function isContract(address account) internal view returns (bool) {... */\n    tag_100:\n        /* \"@aave/aave-stake/contracts/lib/Address.sol\":803:807  bool */\n      0x00\n        /* \"@aave/aave-stake/contracts/lib/Address.sol\":1242:1262  extcodehash(account) */\n      dup2\n      extcodehash\n        /* \"@aave/aave-stake/contracts/lib/Address.sol\":1089:1155  0xc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470 */\n      0xc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470\n        /* \"@aave/aave-stake/contracts/lib/Address.sol\":1281:1304  codehash != accountHash */\n      dup2\n      dup2\n      eq\n      dup1\n      iszero\n      swap1\n        /* \"@aave/aave-stake/contracts/lib/Address.sol\":1281:1323  codehash != accountHash && codehash != 0x0 */\n      tag_103\n      jumpi\n      pop\n        /* \"@aave/aave-stake/contracts/lib/Address.sol\":1308:1323  codehash != 0x0 */\n      dup2\n      iszero\n      iszero\n        /* \"@aave/aave-stake/contracts/lib/Address.sol\":1281:1323  codehash != accountHash && codehash != 0x0 */\n    tag_103:\n        /* \"@aave/aave-stake/contracts/lib/Address.sol\":1273:1324  return (codehash != accountHash && codehash != 0x0) */\n      swap5\n        /* \"@aave/aave-stake/contracts/lib/Address.sol\":743:1329  function isContract(address account) internal view returns (bool) {... */\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n    stop\n    data_08b466bde770d6d309a22d90ec051a62ad397be6218a53e741989877ec297fc9 43616e6e6f742063616c6c2066616c6c6261636b2066756e6374696f6e2066726f6d207468652070726f78792061646d696e\n    data_37112268ceb11e15373f32f9374a1f3287d0a3e6e5a9a435ac06367e6cd0cf00 43616e6e6f74206368616e6765207468652061646d696e206f6620612070726f787920746f20746865207a65726f2061646472657373\n    data_b5145a64ce8c406e5785204fe5b300f0ceda96d6636350b38fdccb9cd8c0c37c 43616e6e6f742073657420612070726f787920696d706c656d656e746174696f6e20746f2061206e6f6e2d636f6e74726163742061646472657373\n\n    auxdata: 0xa2646970667358221220bef1b8f2bc636fb4ab26b76c85a2835df00fc73aaf53da90af129a475ba2bccc64736f6c63430007050033\n}\n",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50610652806100206000396000f3fe60806040526004361061004a5760003560e01c80633659cfe6146100545780634f1ef286146100875780635c60da1b146101075780638f28397014610138578063f851a4401461016b575b610052610180565b005b34801561006057600080fd5b506100526004803603602081101561007757600080fd5b50356001600160a01b031661019a565b6100526004803603604081101561009d57600080fd5b6001600160a01b0382351691908101906040810160208201356401000000008111156100c857600080fd5b8201836020820111156100da57600080fd5b803590602001918460018302840111640100000000831117156100fc57600080fd5b5090925090506101d4565b34801561011357600080fd5b5061011c610281565b604080516001600160a01b039092168252519081900360200190f35b34801561014457600080fd5b506100526004803603602081101561015b57600080fd5b50356001600160a01b03166102be565b34801561017757600080fd5b5061011c610378565b6101886103a3565b610198610193610403565b610428565b565b6101a261044c565b6001600160a01b0316336001600160a01b031614156101c9576101c481610471565b6101d1565b6101d1610180565b50565b6101dc61044c565b6001600160a01b0316336001600160a01b03161415610274576101fe83610471565b6000836001600160a01b031683836040518083838082843760405192019450600093509091505080830381855af49150503d806000811461025b576040519150601f19603f3d011682016040523d82523d6000602084013e610260565b606091505b505090508061026e57600080fd5b5061027c565b61027c610180565b505050565b600061028b61044c565b6001600160a01b0316336001600160a01b031614156102b3576102ac610403565b90506102bb565b6102bb610180565b90565b6102c661044c565b6001600160a01b0316336001600160a01b031614156101c9576001600160a01b0381166103245760405162461bcd60e51b81526004018080602001828103825260368152602001806105ac6036913960400191505060405180910390fd5b7f7e644d79422f17c01e4894b5f4f588d331ebfa28653d42ae832dc59e38c9798f61034d61044c565b604080516001600160a01b03928316815291841660208301528051918290030190a16101c4816104b1565b600061038261044c565b6001600160a01b0316336001600160a01b031614156102b3576102ac61044c565b6103ab61044c565b6001600160a01b0316336001600160a01b031614156103fb5760405162461bcd60e51b815260040180806020018281038252603281526020018061057a6032913960400191505060405180910390fd5b610198610198565b7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc5490565b3660008037600080366000845af43d6000803e808015610447573d6000f35b3d6000fd5b7fb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d61035490565b61047a816104d5565b6040516001600160a01b038216907fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b90600090a250565b7fb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d610355565b6104de8161053d565b6105195760405162461bcd60e51b815260040180806020018281038252603b8152602001806105e2603b913960400191505060405180910390fd5b7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc55565b6000813f7fc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a47081811480159061057157508115155b94935050505056fe43616e6e6f742063616c6c2066616c6c6261636b2066756e6374696f6e2066726f6d207468652070726f78792061646d696e43616e6e6f74206368616e6765207468652061646d696e206f6620612070726f787920746f20746865207a65726f206164647265737343616e6e6f742073657420612070726f787920696d706c656d656e746174696f6e20746f2061206e6f6e2d636f6e74726163742061646472657373a2646970667358221220bef1b8f2bc636fb4ab26b76c85a2835df00fc73aaf53da90af129a475ba2bccc64736f6c63430007050033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x652 DUP1 PUSH2 0x20 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x4A JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x3659CFE6 EQ PUSH2 0x54 JUMPI DUP1 PUSH4 0x4F1EF286 EQ PUSH2 0x87 JUMPI DUP1 PUSH4 0x5C60DA1B EQ PUSH2 0x107 JUMPI DUP1 PUSH4 0x8F283970 EQ PUSH2 0x138 JUMPI DUP1 PUSH4 0xF851A440 EQ PUSH2 0x16B JUMPI JUMPDEST PUSH2 0x52 PUSH2 0x180 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x60 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x52 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x77 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x19A JUMP JUMPDEST PUSH2 0x52 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x9D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 CALLDATALOAD AND SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH1 0x40 DUP2 ADD PUSH1 0x20 DUP3 ADD CALLDATALOAD PUSH5 0x100000000 DUP2 GT ISZERO PUSH2 0xC8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0xDA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x1 DUP4 MUL DUP5 ADD GT PUSH5 0x100000000 DUP4 GT OR ISZERO PUSH2 0xFC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP SWAP1 SWAP3 POP SWAP1 POP PUSH2 0x1D4 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x113 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x11C PUSH2 0x281 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x144 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x52 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x15B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x2BE JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x177 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x11C PUSH2 0x378 JUMP JUMPDEST PUSH2 0x188 PUSH2 0x3A3 JUMP JUMPDEST PUSH2 0x198 PUSH2 0x193 PUSH2 0x403 JUMP JUMPDEST PUSH2 0x428 JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x1A2 PUSH2 0x44C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO PUSH2 0x1C9 JUMPI PUSH2 0x1C4 DUP2 PUSH2 0x471 JUMP JUMPDEST PUSH2 0x1D1 JUMP JUMPDEST PUSH2 0x1D1 PUSH2 0x180 JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x1DC PUSH2 0x44C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO PUSH2 0x274 JUMPI PUSH2 0x1FE DUP4 PUSH2 0x471 JUMP JUMPDEST PUSH1 0x0 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x40 MLOAD SWAP3 ADD SWAP5 POP PUSH1 0x0 SWAP4 POP SWAP1 SWAP2 POP POP DUP1 DUP4 SUB DUP2 DUP6 GAS DELEGATECALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x25B JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x260 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0x26E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x27C JUMP JUMPDEST PUSH2 0x27C PUSH2 0x180 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x28B PUSH2 0x44C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO PUSH2 0x2B3 JUMPI PUSH2 0x2AC PUSH2 0x403 JUMP JUMPDEST SWAP1 POP PUSH2 0x2BB JUMP JUMPDEST PUSH2 0x2BB PUSH2 0x180 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x2C6 PUSH2 0x44C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO PUSH2 0x1C9 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x324 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x36 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x5AC PUSH1 0x36 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH32 0x7E644D79422F17C01E4894B5F4F588D331EBFA28653D42AE832DC59E38C9798F PUSH2 0x34D PUSH2 0x44C JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND DUP2 MSTORE SWAP2 DUP5 AND PUSH1 0x20 DUP4 ADD MSTORE DUP1 MLOAD SWAP2 DUP3 SWAP1 SUB ADD SWAP1 LOG1 PUSH2 0x1C4 DUP2 PUSH2 0x4B1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x382 PUSH2 0x44C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO PUSH2 0x2B3 JUMPI PUSH2 0x2AC PUSH2 0x44C JUMP JUMPDEST PUSH2 0x3AB PUSH2 0x44C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO PUSH2 0x3FB JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x32 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x57A PUSH1 0x32 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x198 PUSH2 0x198 JUMP JUMPDEST PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC SLOAD SWAP1 JUMP JUMPDEST CALLDATASIZE PUSH1 0x0 DUP1 CALLDATACOPY PUSH1 0x0 DUP1 CALLDATASIZE PUSH1 0x0 DUP5 GAS DELEGATECALL RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY DUP1 DUP1 ISZERO PUSH2 0x447 JUMPI RETURNDATASIZE PUSH1 0x0 RETURN JUMPDEST RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST PUSH32 0xB53127684A568B3173AE13B9F8A6016E243E63B6E8EE1178D6A717850B5D6103 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x47A DUP2 PUSH2 0x4D5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND SWAP1 PUSH32 0xBC7CD75A20EE27FD9ADEBAB32041F755214DBC6BFFA90CC0225B39DA2E5C2D3B SWAP1 PUSH1 0x0 SWAP1 LOG2 POP JUMP JUMPDEST PUSH32 0xB53127684A568B3173AE13B9F8A6016E243E63B6E8EE1178D6A717850B5D6103 SSTORE JUMP JUMPDEST PUSH2 0x4DE DUP2 PUSH2 0x53D JUMP JUMPDEST PUSH2 0x519 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x3B DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x5E2 PUSH1 0x3B SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC SSTORE JUMP JUMPDEST PUSH1 0x0 DUP2 EXTCODEHASH PUSH32 0xC5D2460186F7233C927E7DB2DCC703C0E500B653CA82273B7BFAD8045D85A470 DUP2 DUP2 EQ DUP1 ISZERO SWAP1 PUSH2 0x571 JUMPI POP DUP2 ISZERO ISZERO JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP INVALID NUMBER PUSH2 0x6E6E PUSH16 0x742063616C6C2066616C6C6261636B20 PUSH7 0x756E6374696F6E KECCAK256 PUSH7 0x726F6D20746865 KECCAK256 PUSH17 0x726F78792061646D696E43616E6E6F7420 PUSH4 0x68616E67 PUSH6 0x207468652061 PUSH5 0x6D696E206F PUSH7 0x20612070726F78 PUSH26 0x20746F20746865207A65726F206164647265737343616E6E6F74 KECCAK256 PUSH20 0x657420612070726F787920696D706C656D656E74 PUSH2 0x7469 PUSH16 0x6E20746F2061206E6F6E2D636F6E7472 PUSH2 0x6374 KECCAK256 PUSH2 0x6464 PUSH19 0x657373A2646970667358221220BEF1B8F2BC63 PUSH16 0xB4AB26B76C85A2835DF00FC73AAF53DA SWAP1 0xAF SLT SWAP11 SELFBALANCE JUMPDEST LOG2 0xBC 0xCC PUSH5 0x736F6C6343 STOP SMOD SDIV STOP CALLER ",
							"sourceMap": "565:3326:1:-:0;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "60806040526004361061004a5760003560e01c80633659cfe6146100545780634f1ef286146100875780635c60da1b146101075780638f28397014610138578063f851a4401461016b575b610052610180565b005b34801561006057600080fd5b506100526004803603602081101561007757600080fd5b50356001600160a01b031661019a565b6100526004803603604081101561009d57600080fd5b6001600160a01b0382351691908101906040810160208201356401000000008111156100c857600080fd5b8201836020820111156100da57600080fd5b803590602001918460018302840111640100000000831117156100fc57600080fd5b5090925090506101d4565b34801561011357600080fd5b5061011c610281565b604080516001600160a01b039092168252519081900360200190f35b34801561014457600080fd5b506100526004803603602081101561015b57600080fd5b50356001600160a01b03166102be565b34801561017757600080fd5b5061011c610378565b6101886103a3565b610198610193610403565b610428565b565b6101a261044c565b6001600160a01b0316336001600160a01b031614156101c9576101c481610471565b6101d1565b6101d1610180565b50565b6101dc61044c565b6001600160a01b0316336001600160a01b03161415610274576101fe83610471565b6000836001600160a01b031683836040518083838082843760405192019450600093509091505080830381855af49150503d806000811461025b576040519150601f19603f3d011682016040523d82523d6000602084013e610260565b606091505b505090508061026e57600080fd5b5061027c565b61027c610180565b505050565b600061028b61044c565b6001600160a01b0316336001600160a01b031614156102b3576102ac610403565b90506102bb565b6102bb610180565b90565b6102c661044c565b6001600160a01b0316336001600160a01b031614156101c9576001600160a01b0381166103245760405162461bcd60e51b81526004018080602001828103825260368152602001806105ac6036913960400191505060405180910390fd5b7f7e644d79422f17c01e4894b5f4f588d331ebfa28653d42ae832dc59e38c9798f61034d61044c565b604080516001600160a01b03928316815291841660208301528051918290030190a16101c4816104b1565b600061038261044c565b6001600160a01b0316336001600160a01b031614156102b3576102ac61044c565b6103ab61044c565b6001600160a01b0316336001600160a01b031614156103fb5760405162461bcd60e51b815260040180806020018281038252603281526020018061057a6032913960400191505060405180910390fd5b610198610198565b7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc5490565b3660008037600080366000845af43d6000803e808015610447573d6000f35b3d6000fd5b7fb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d61035490565b61047a816104d5565b6040516001600160a01b038216907fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b90600090a250565b7fb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d610355565b6104de8161053d565b6105195760405162461bcd60e51b815260040180806020018281038252603b8152602001806105e2603b913960400191505060405180910390fd5b7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc55565b6000813f7fc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a47081811480159061057157508115155b94935050505056fe43616e6e6f742063616c6c2066616c6c6261636b2066756e6374696f6e2066726f6d207468652070726f78792061646d696e43616e6e6f74206368616e6765207468652061646d696e206f6620612070726f787920746f20746865207a65726f206164647265737343616e6e6f742073657420612070726f787920696d706c656d656e746174696f6e20746f2061206e6f6e2d636f6e74726163742061646472657373a2646970667358221220bef1b8f2bc636fb4ab26b76c85a2835df00fc73aaf53da90af129a475ba2bccc64736f6c63430007050033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x4A JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x3659CFE6 EQ PUSH2 0x54 JUMPI DUP1 PUSH4 0x4F1EF286 EQ PUSH2 0x87 JUMPI DUP1 PUSH4 0x5C60DA1B EQ PUSH2 0x107 JUMPI DUP1 PUSH4 0x8F283970 EQ PUSH2 0x138 JUMPI DUP1 PUSH4 0xF851A440 EQ PUSH2 0x16B JUMPI JUMPDEST PUSH2 0x52 PUSH2 0x180 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x60 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x52 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x77 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x19A JUMP JUMPDEST PUSH2 0x52 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x9D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 CALLDATALOAD AND SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH1 0x40 DUP2 ADD PUSH1 0x20 DUP3 ADD CALLDATALOAD PUSH5 0x100000000 DUP2 GT ISZERO PUSH2 0xC8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0xDA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x1 DUP4 MUL DUP5 ADD GT PUSH5 0x100000000 DUP4 GT OR ISZERO PUSH2 0xFC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP SWAP1 SWAP3 POP SWAP1 POP PUSH2 0x1D4 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x113 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x11C PUSH2 0x281 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x144 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x52 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x15B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x2BE JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x177 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x11C PUSH2 0x378 JUMP JUMPDEST PUSH2 0x188 PUSH2 0x3A3 JUMP JUMPDEST PUSH2 0x198 PUSH2 0x193 PUSH2 0x403 JUMP JUMPDEST PUSH2 0x428 JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x1A2 PUSH2 0x44C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO PUSH2 0x1C9 JUMPI PUSH2 0x1C4 DUP2 PUSH2 0x471 JUMP JUMPDEST PUSH2 0x1D1 JUMP JUMPDEST PUSH2 0x1D1 PUSH2 0x180 JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x1DC PUSH2 0x44C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO PUSH2 0x274 JUMPI PUSH2 0x1FE DUP4 PUSH2 0x471 JUMP JUMPDEST PUSH1 0x0 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x40 MLOAD SWAP3 ADD SWAP5 POP PUSH1 0x0 SWAP4 POP SWAP1 SWAP2 POP POP DUP1 DUP4 SUB DUP2 DUP6 GAS DELEGATECALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x25B JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x260 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0x26E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x27C JUMP JUMPDEST PUSH2 0x27C PUSH2 0x180 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x28B PUSH2 0x44C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO PUSH2 0x2B3 JUMPI PUSH2 0x2AC PUSH2 0x403 JUMP JUMPDEST SWAP1 POP PUSH2 0x2BB JUMP JUMPDEST PUSH2 0x2BB PUSH2 0x180 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x2C6 PUSH2 0x44C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO PUSH2 0x1C9 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x324 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x36 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x5AC PUSH1 0x36 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH32 0x7E644D79422F17C01E4894B5F4F588D331EBFA28653D42AE832DC59E38C9798F PUSH2 0x34D PUSH2 0x44C JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND DUP2 MSTORE SWAP2 DUP5 AND PUSH1 0x20 DUP4 ADD MSTORE DUP1 MLOAD SWAP2 DUP3 SWAP1 SUB ADD SWAP1 LOG1 PUSH2 0x1C4 DUP2 PUSH2 0x4B1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x382 PUSH2 0x44C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO PUSH2 0x2B3 JUMPI PUSH2 0x2AC PUSH2 0x44C JUMP JUMPDEST PUSH2 0x3AB PUSH2 0x44C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO PUSH2 0x3FB JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x32 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x57A PUSH1 0x32 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x198 PUSH2 0x198 JUMP JUMPDEST PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC SLOAD SWAP1 JUMP JUMPDEST CALLDATASIZE PUSH1 0x0 DUP1 CALLDATACOPY PUSH1 0x0 DUP1 CALLDATASIZE PUSH1 0x0 DUP5 GAS DELEGATECALL RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY DUP1 DUP1 ISZERO PUSH2 0x447 JUMPI RETURNDATASIZE PUSH1 0x0 RETURN JUMPDEST RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST PUSH32 0xB53127684A568B3173AE13B9F8A6016E243E63B6E8EE1178D6A717850B5D6103 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x47A DUP2 PUSH2 0x4D5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND SWAP1 PUSH32 0xBC7CD75A20EE27FD9ADEBAB32041F755214DBC6BFFA90CC0225B39DA2E5C2D3B SWAP1 PUSH1 0x0 SWAP1 LOG2 POP JUMP JUMPDEST PUSH32 0xB53127684A568B3173AE13B9F8A6016E243E63B6E8EE1178D6A717850B5D6103 SSTORE JUMP JUMPDEST PUSH2 0x4DE DUP2 PUSH2 0x53D JUMP JUMPDEST PUSH2 0x519 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x3B DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x5E2 PUSH1 0x3B SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC SSTORE JUMP JUMPDEST PUSH1 0x0 DUP2 EXTCODEHASH PUSH32 0xC5D2460186F7233C927E7DB2DCC703C0E500B653CA82273B7BFAD8045D85A470 DUP2 DUP2 EQ DUP1 ISZERO SWAP1 PUSH2 0x571 JUMPI POP DUP2 ISZERO ISZERO JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP INVALID NUMBER PUSH2 0x6E6E PUSH16 0x742063616C6C2066616C6C6261636B20 PUSH7 0x756E6374696F6E KECCAK256 PUSH7 0x726F6D20746865 KECCAK256 PUSH17 0x726F78792061646D696E43616E6E6F7420 PUSH4 0x68616E67 PUSH6 0x207468652061 PUSH5 0x6D696E206F PUSH7 0x20612070726F78 PUSH26 0x20746F20746865207A65726F206164647265737343616E6E6F74 KECCAK256 PUSH20 0x657420612070726F787920696D706C656D656E74 PUSH2 0x7469 PUSH16 0x6E20746F2061206E6F6E2D636F6E7472 PUSH2 0x6374 KECCAK256 PUSH2 0x6464 PUSH19 0x657373A2646970667358221220BEF1B8F2BC63 PUSH16 0xB4AB26B76C85A2835DF00FC73AAF53DA SWAP1 0xAF SLT SWAP11 SELFBALANCE JUMPDEST LOG2 0xBC 0xCC PUSH5 0x736F6C6343 STOP SMOD SDIV STOP CALLER ",
							"sourceMap": "565:3326:1:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;601:11:5;:9;:11::i;:::-;565:3326:1;2350:103;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2350:103:1;-1:-1:-1;;;;;2350:103:1;;:::i;2970:236::-;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2970:236:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2970:236:1;;-1:-1:-1;2970:236:1;-1:-1:-1;2970:236:1;:::i;1670:96::-;;;;;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;;;;1670:96:1;;;;;;;;;;;;;;1942:224;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1942:224:1;-1:-1:-1;;;;;1942:224:1;;:::i;1528:78::-;;;;;;;;;;;;;:::i;2167:90:5:-;2203:15;:13;:15::i;:::-;2224:28;2234:17;:15;:17::i;:::-;2224:9;:28::i;:::-;2167:90::o;2350:103:1:-;1405:8;:6;:8::i;:::-;-1:-1:-1;;;;;1391:22:1;:10;-1:-1:-1;;;;;1391:22:1;;1387:76;;;2419:29:::1;2430:17;2419:10;:29::i;:::-;1387:76:::0;;;1445:11;:9;:11::i;:::-;2350:103;:::o;2970:236::-;1405:8;:6;:8::i;:::-;-1:-1:-1;;;;;1391:22:1;:10;-1:-1:-1;;;;;1391:22:1;;1387:76;;;3089:29:::1;3100:17;3089:10;:29::i;:::-;3125:12;3143:17;-1:-1:-1::0;;;;;3143:30:1::1;3174:4;;3143:36;;;;;;;;;;::::0;;::::1;::::0;-1:-1:-1;3143:36:1::1;::::0;-1:-1:-1;3143:36:1;;-1:-1:-1;;3143:36:1;;::::1;::::0;;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3124:55;;;3193:7;3185:16;;;::::0;::::1;;1423:1;1387:76:::0;;;1445:11;:9;:11::i;:::-;2970:236;;;:::o;1670:96::-;1722:7;1405:8;:6;:8::i;:::-;-1:-1:-1;;;;;1391:22:1;:10;-1:-1:-1;;;;;1391:22:1;;1387:76;;;1744:17:::1;:15;:17::i;:::-;1737:24;;1387:76:::0;;;1445:11;:9;:11::i;:::-;1670:96;:::o;1942:224::-;1405:8;:6;:8::i;:::-;-1:-1:-1;;;;;1391:22:1;:10;-1:-1:-1;;;;;1391:22:1;;1387:76;;;-1:-1:-1;;;;;2012:22:1;::::1;2004:89;;;;-1:-1:-1::0;;;2004:89:1::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2104:32;2117:8;:6;:8::i;:::-;2104:32;::::0;;-1:-1:-1;;;;;2104:32:1;;::::1;::::0;;;;::::1;;::::0;::::1;::::0;;;;;;;;;::::1;2142:19;2152:8;2142:9;:19::i;1528:78::-:0;1571:7;1405:8;:6;:8::i;:::-;-1:-1:-1;;;;;1391:22:1;:10;-1:-1:-1;;;;;1391:22:1;;1387:76;;;1593:8:::1;:6;:8::i;3715:174::-:0;3794:8;:6;:8::i;:::-;-1:-1:-1;;;;;3780:22:1;:10;-1:-1:-1;;;;;3780:22:1;;;3772:85;;;;-1:-1:-1;;;3772:85:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3863:21;:19;:21::i;1100:165:2:-;915:66;1244:11;;1228:33::o;1034:785:5:-;1336:14;1333:1;1330;1317:34;1532:1;1529;1513:14;1510:1;1494:14;1487:5;1474:60;1596:16;1593:1;1590;1575:38;1628:6;1687:56;;;;1782:16;1779:1;1772:27;1687:56;1716:16;1713:1;1706:27;3255:136:1;1106:66;3370:11;;3355:32::o;1400:142:2:-;1462:37;1481:17;1462:18;:37::i;:::-;1510:27;;-1:-1:-1;;;;;1510:27:2;;;;;;;;1400:142;:::o;3507:133:1:-;1106:66;3608:22;3600:36::o;1679:303:2:-;1764:37;1783:17;1764:18;:37::i;:::-;1749:127;;;;-1:-1:-1;;;1749:127:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;915:66;1941:31;1933:45::o;743:586:0:-;803:4;1242:20;;1089:66;1281:23;;;;;;:42;;-1:-1:-1;1308:15:0;;;1281:42;1273:51;743:586;-1:-1:-1;;;;743:586:0:o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "323600",
								"executionCost": "362",
								"totalCost": "323962"
							},
							"external": {
								"": "infinite",
								"admin()": "infinite",
								"changeAdmin(address)": "infinite",
								"implementation()": "infinite",
								"upgradeTo(address)": "infinite",
								"upgradeToAndCall(address,bytes)": "infinite"
							},
							"internal": {
								"_admin()": "815",
								"_setAdmin(address)": "20012",
								"_willFallback()": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 565,
									"end": 3891,
									"name": "PUSH",
									"source": 1,
									"value": "80"
								},
								{
									"begin": 565,
									"end": 3891,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 565,
									"end": 3891,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 565,
									"end": 3891,
									"name": "CALLVALUE",
									"source": 1
								},
								{
									"begin": 565,
									"end": 3891,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 565,
									"end": 3891,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 565,
									"end": 3891,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 565,
									"end": 3891,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 565,
									"end": 3891,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 565,
									"end": 3891,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 565,
									"end": 3891,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 565,
									"end": 3891,
									"name": "tag",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 565,
									"end": 3891,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 565,
									"end": 3891,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 565,
									"end": 3891,
									"name": "PUSH #[$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 565,
									"end": 3891,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 565,
									"end": 3891,
									"name": "PUSH [$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 565,
									"end": 3891,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 565,
									"end": 3891,
									"name": "CODECOPY",
									"source": 1
								},
								{
									"begin": 565,
									"end": 3891,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 565,
									"end": 3891,
									"name": "RETURN",
									"source": 1
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220bef1b8f2bc636fb4ab26b76c85a2835df00fc73aaf53da90af129a475ba2bccc64736f6c63430007050033",
									".code": [
										{
											"begin": 565,
											"end": 3891,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 565,
											"end": 3891,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 565,
											"end": 3891,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 565,
											"end": 3891,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 565,
											"end": 3891,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 565,
											"end": 3891,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 565,
											"end": 3891,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 565,
											"end": 3891,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 565,
											"end": 3891,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 565,
											"end": 3891,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 565,
											"end": 3891,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 565,
											"end": 3891,
											"name": "SHR",
											"source": 1
										},
										{
											"begin": 565,
											"end": 3891,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 565,
											"end": 3891,
											"name": "PUSH",
											"source": 1,
											"value": "3659CFE6"
										},
										{
											"begin": 565,
											"end": 3891,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 565,
											"end": 3891,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 565,
											"end": 3891,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 565,
											"end": 3891,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 565,
											"end": 3891,
											"name": "PUSH",
											"source": 1,
											"value": "4F1EF286"
										},
										{
											"begin": 565,
											"end": 3891,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 565,
											"end": 3891,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 565,
											"end": 3891,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 565,
											"end": 3891,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 565,
											"end": 3891,
											"name": "PUSH",
											"source": 1,
											"value": "5C60DA1B"
										},
										{
											"begin": 565,
											"end": 3891,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 565,
											"end": 3891,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 565,
											"end": 3891,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 565,
											"end": 3891,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 565,
											"end": 3891,
											"name": "PUSH",
											"source": 1,
											"value": "8F283970"
										},
										{
											"begin": 565,
											"end": 3891,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 565,
											"end": 3891,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 565,
											"end": 3891,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 565,
											"end": 3891,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 565,
											"end": 3891,
											"name": "PUSH",
											"source": 1,
											"value": "F851A440"
										},
										{
											"begin": 565,
											"end": 3891,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 565,
											"end": 3891,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 565,
											"end": 3891,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 565,
											"end": 3891,
											"name": "tag",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 565,
											"end": 3891,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 601,
											"end": 612,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "10"
										},
										{
											"begin": 601,
											"end": 610,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "11"
										},
										{
											"begin": 601,
											"end": 612,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 601,
											"end": 612,
											"name": "tag",
											"source": 5,
											"value": "10"
										},
										{
											"begin": 601,
											"end": 612,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 565,
											"end": 3891,
											"name": "STOP",
											"source": 1
										},
										{
											"begin": 2350,
											"end": 2453,
											"name": "tag",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 2350,
											"end": 2453,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2350,
											"end": 2453,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 2350,
											"end": 2453,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2350,
											"end": 2453,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2350,
											"end": 2453,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 2350,
											"end": 2453,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2350,
											"end": 2453,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2350,
											"end": 2453,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2350,
											"end": 2453,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2350,
											"end": 2453,
											"name": "tag",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 2350,
											"end": 2453,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2350,
											"end": 2453,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2350,
											"end": 2453,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "10"
										},
										{
											"begin": 2350,
											"end": 2453,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 2350,
											"end": 2453,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2350,
											"end": 2453,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 2350,
											"end": 2453,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2350,
											"end": 2453,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2350,
											"end": 2453,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2350,
											"end": 2453,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 2350,
											"end": 2453,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2350,
											"end": 2453,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 2350,
											"end": 2453,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2350,
											"end": 2453,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2350,
											"end": 2453,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2350,
											"end": 2453,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2350,
											"end": 2453,
											"name": "tag",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 2350,
											"end": 2453,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2350,
											"end": 2453,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2350,
											"end": 2453,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2350,
											"end": 2453,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "15"
										},
										{
											"begin": 2350,
											"end": 2453,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2970,
											"end": 3206,
											"name": "tag",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 2970,
											"end": 3206,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2970,
											"end": 3206,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "10"
										},
										{
											"begin": 2970,
											"end": 3206,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 2970,
											"end": 3206,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2970,
											"end": 3206,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 2970,
											"end": 3206,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2970,
											"end": 3206,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2970,
											"end": 3206,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2970,
											"end": 3206,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 2970,
											"end": 3206,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2970,
											"end": 3206,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 2970,
											"end": 3206,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2970,
											"end": 3206,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2970,
											"end": 3206,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2970,
											"end": 3206,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2970,
											"end": 3206,
											"name": "tag",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 2970,
											"end": 3206,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2970,
											"end": 3206,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2970,
											"end": 3206,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 2970,
											"end": 3206,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2970,
											"end": 3206,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2970,
											"end": 3206,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2970,
											"end": 3206,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2970,
											"end": 3206,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2970,
											"end": 3206,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2970,
											"end": 3206,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2970,
											"end": 3206,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2970,
											"end": 3206,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2970,
											"end": 3206,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2970,
											"end": 3206,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2970,
											"end": 3206,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2970,
											"end": 3206,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 2970,
											"end": 3206,
											"name": "PUSH",
											"source": 1,
											"value": "100000000"
										},
										{
											"begin": 2970,
											"end": 3206,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2970,
											"end": 3206,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 2970,
											"end": 3206,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2970,
											"end": 3206,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "18"
										},
										{
											"begin": 2970,
											"end": 3206,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2970,
											"end": 3206,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2970,
											"end": 3206,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2970,
											"end": 3206,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2970,
											"end": 3206,
											"name": "tag",
											"source": 1,
											"value": "18"
										},
										{
											"begin": 2970,
											"end": 3206,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2970,
											"end": 3206,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2970,
											"end": 3206,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2970,
											"end": 3206,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2970,
											"end": 3206,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2970,
											"end": 3206,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2970,
											"end": 3206,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2970,
											"end": 3206,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 2970,
											"end": 3206,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2970,
											"end": 3206,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "19"
										},
										{
											"begin": 2970,
											"end": 3206,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2970,
											"end": 3206,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2970,
											"end": 3206,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2970,
											"end": 3206,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2970,
											"end": 3206,
											"name": "tag",
											"source": 1,
											"value": "19"
										},
										{
											"begin": 2970,
											"end": 3206,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2970,
											"end": 3206,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2970,
											"end": 3206,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 2970,
											"end": 3206,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2970,
											"end": 3206,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2970,
											"end": 3206,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2970,
											"end": 3206,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2970,
											"end": 3206,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 2970,
											"end": 3206,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 2970,
											"end": 3206,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2970,
											"end": 3206,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 2970,
											"end": 3206,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 2970,
											"end": 3206,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2970,
											"end": 3206,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 2970,
											"end": 3206,
											"name": "PUSH",
											"source": 1,
											"value": "100000000"
										},
										{
											"begin": 2970,
											"end": 3206,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2970,
											"end": 3206,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 2970,
											"end": 3206,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 2970,
											"end": 3206,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2970,
											"end": 3206,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2970,
											"end": 3206,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2970,
											"end": 3206,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2970,
											"end": 3206,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2970,
											"end": 3206,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2970,
											"end": 3206,
											"name": "tag",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2970,
											"end": 3206,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2970,
											"end": 3206,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2970,
											"end": 3206,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2970,
											"end": 3206,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2970,
											"end": 3206,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 2970,
											"end": 3206,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1670,
											"end": 1766,
											"name": "tag",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 1670,
											"end": 1766,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1670,
											"end": 1766,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 1670,
											"end": 1766,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1670,
											"end": 1766,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1670,
											"end": 1766,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 1670,
											"end": 1766,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1670,
											"end": 1766,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1670,
											"end": 1766,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1670,
											"end": 1766,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1670,
											"end": 1766,
											"name": "tag",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 1670,
											"end": 1766,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1670,
											"end": 1766,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1670,
											"end": 1766,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "23"
										},
										{
											"begin": 1670,
											"end": 1766,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 1670,
											"end": 1766,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1670,
											"end": 1766,
											"name": "tag",
											"source": 1,
											"value": "23"
										},
										{
											"begin": 1670,
											"end": 1766,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1670,
											"end": 1766,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1670,
											"end": 1766,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1670,
											"end": 1766,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1670,
											"end": 1766,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1670,
											"end": 1766,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1670,
											"end": 1766,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1670,
											"end": 1766,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1670,
											"end": 1766,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1670,
											"end": 1766,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1670,
											"end": 1766,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1670,
											"end": 1766,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1670,
											"end": 1766,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1670,
											"end": 1766,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1670,
											"end": 1766,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1670,
											"end": 1766,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1670,
											"end": 1766,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1670,
											"end": 1766,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 1942,
											"end": 2166,
											"name": "tag",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 1942,
											"end": 2166,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1942,
											"end": 2166,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 1942,
											"end": 2166,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1942,
											"end": 2166,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1942,
											"end": 2166,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 1942,
											"end": 2166,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1942,
											"end": 2166,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1942,
											"end": 2166,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1942,
											"end": 2166,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1942,
											"end": 2166,
											"name": "tag",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 1942,
											"end": 2166,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1942,
											"end": 2166,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1942,
											"end": 2166,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "10"
										},
										{
											"begin": 1942,
											"end": 2166,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1942,
											"end": 2166,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1942,
											"end": 2166,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 1942,
											"end": 2166,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1942,
											"end": 2166,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1942,
											"end": 2166,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1942,
											"end": 2166,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 1942,
											"end": 2166,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1942,
											"end": 2166,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "27"
										},
										{
											"begin": 1942,
											"end": 2166,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1942,
											"end": 2166,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1942,
											"end": 2166,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1942,
											"end": 2166,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1942,
											"end": 2166,
											"name": "tag",
											"source": 1,
											"value": "27"
										},
										{
											"begin": 1942,
											"end": 2166,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1942,
											"end": 2166,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1942,
											"end": 2166,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1942,
											"end": 2166,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 1942,
											"end": 2166,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1528,
											"end": 1606,
											"name": "tag",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 1528,
											"end": 1606,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1528,
											"end": 1606,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 1528,
											"end": 1606,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1528,
											"end": 1606,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1528,
											"end": 1606,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "29"
										},
										{
											"begin": 1528,
											"end": 1606,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1528,
											"end": 1606,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1528,
											"end": 1606,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1528,
											"end": 1606,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1528,
											"end": 1606,
											"name": "tag",
											"source": 1,
											"value": "29"
										},
										{
											"begin": 1528,
											"end": 1606,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1528,
											"end": 1606,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1528,
											"end": 1606,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "23"
										},
										{
											"begin": 1528,
											"end": 1606,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "31"
										},
										{
											"begin": 1528,
											"end": 1606,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2167,
											"end": 2257,
											"name": "tag",
											"source": 5,
											"value": "11"
										},
										{
											"begin": 2167,
											"end": 2257,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2203,
											"end": 2218,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "33"
										},
										{
											"begin": 2203,
											"end": 2216,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "34"
										},
										{
											"begin": 2203,
											"end": 2218,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 2203,
											"end": 2218,
											"name": "tag",
											"source": 5,
											"value": "33"
										},
										{
											"begin": 2203,
											"end": 2218,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2224,
											"end": 2252,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "35"
										},
										{
											"begin": 2234,
											"end": 2251,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "36"
										},
										{
											"begin": 2234,
											"end": 2249,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "37"
										},
										{
											"begin": 2234,
											"end": 2251,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 2234,
											"end": 2251,
											"name": "tag",
											"source": 5,
											"value": "36"
										},
										{
											"begin": 2234,
											"end": 2251,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2224,
											"end": 2233,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "38"
										},
										{
											"begin": 2224,
											"end": 2252,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 2224,
											"end": 2252,
											"name": "tag",
											"source": 5,
											"value": "35"
										},
										{
											"begin": 2224,
											"end": 2252,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2167,
											"end": 2257,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 2350,
											"end": 2453,
											"name": "tag",
											"source": 1,
											"value": "15"
										},
										{
											"begin": 2350,
											"end": 2453,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1405,
											"end": 1413,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1405,
											"end": 1411,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "41"
										},
										{
											"begin": 1405,
											"end": 1413,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1405,
											"end": 1413,
											"name": "tag",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1405,
											"end": 1413,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1391,
											"end": 1413,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1391,
											"end": 1401,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1391,
											"end": 1413,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1391,
											"end": 1413,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1387,
											"end": 1463,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1387,
											"end": 1463,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "42"
										},
										{
											"begin": 1387,
											"end": 1463,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2419,
											"end": 2448,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 2430,
											"end": 2447,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2419,
											"end": 2429,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "45"
										},
										{
											"begin": 2419,
											"end": 2448,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2419,
											"end": 2448,
											"name": "tag",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 2419,
											"end": 2448,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1387,
											"end": 1463,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "47"
										},
										{
											"begin": 1387,
											"end": 1463,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1387,
											"end": 1463,
											"name": "tag",
											"source": 1,
											"value": "42"
										},
										{
											"begin": 1387,
											"end": 1463,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1445,
											"end": 1456,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "47"
										},
										{
											"begin": 1445,
											"end": 1454,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 1445,
											"end": 1456,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1445,
											"end": 1456,
											"name": "tag",
											"source": 1,
											"value": "47"
										},
										{
											"begin": 1445,
											"end": 1456,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2350,
											"end": 2453,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2350,
											"end": 2453,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 2970,
											"end": 3206,
											"name": "tag",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 2970,
											"end": 3206,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1405,
											"end": 1413,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "49"
										},
										{
											"begin": 1405,
											"end": 1411,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "41"
										},
										{
											"begin": 1405,
											"end": 1413,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1405,
											"end": 1413,
											"name": "tag",
											"source": 1,
											"value": "49"
										},
										{
											"begin": 1405,
											"end": 1413,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1391,
											"end": 1413,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1391,
											"end": 1401,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1391,
											"end": 1413,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1391,
											"end": 1413,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1387,
											"end": 1463,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1387,
											"end": 1463,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "50"
										},
										{
											"begin": 1387,
											"end": 1463,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3089,
											"end": 3118,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "52"
										},
										{
											"begin": 3100,
											"end": 3117,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3089,
											"end": 3099,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "45"
										},
										{
											"begin": 3089,
											"end": 3118,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3089,
											"end": 3118,
											"name": "tag",
											"source": 1,
											"value": "52"
										},
										{
											"begin": 3089,
											"end": 3118,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3125,
											"end": 3137,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3143,
											"end": 3160,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3143,
											"end": 3173,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3174,
											"end": 3178,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3174,
											"end": 3178,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3143,
											"end": 3179,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3143,
											"end": 3179,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3143,
											"end": 3179,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3143,
											"end": 3179,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3143,
											"end": 3179,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3143,
											"end": 3179,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3143,
											"end": 3179,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3143,
											"end": 3179,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 3143,
											"end": 3179,
											"name": "CALLDATACOPY",
											"source": 1
										},
										{
											"begin": 3143,
											"end": 3179,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3143,
											"end": 3179,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3143,
											"end": 3179,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3143,
											"end": 3179,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3143,
											"end": 3179,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3143,
											"end": 3179,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3143,
											"end": 3179,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3143,
											"end": 3179,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3143,
											"end": 3179,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3143,
											"end": 3179,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3143,
											"end": 3179,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3143,
											"end": 3179,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3143,
											"end": 3179,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3143,
											"end": 3179,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 3143,
											"end": 3179,
											"name": "GAS",
											"source": 1
										},
										{
											"begin": 3143,
											"end": 3179,
											"name": "DELEGATECALL",
											"source": 1
										},
										{
											"begin": 3143,
											"end": 3179,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3143,
											"end": 3179,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3143,
											"end": 3179,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3143,
											"end": 3179,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 3143,
											"end": 3179,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3143,
											"end": 3179,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3143,
											"end": 3179,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3143,
											"end": 3179,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 3143,
											"end": 3179,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "55"
										},
										{
											"begin": 3143,
											"end": 3179,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3143,
											"end": 3179,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3143,
											"end": 3179,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3143,
											"end": 3179,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3143,
											"end": 3179,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3143,
											"end": 3179,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 3143,
											"end": 3179,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 3143,
											"end": 3179,
											"name": "PUSH",
											"source": 1,
											"value": "3F"
										},
										{
											"begin": 3143,
											"end": 3179,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 3143,
											"end": 3179,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3143,
											"end": 3179,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3143,
											"end": 3179,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3143,
											"end": 3179,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3143,
											"end": 3179,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3143,
											"end": 3179,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3143,
											"end": 3179,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 3143,
											"end": 3179,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3143,
											"end": 3179,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3143,
											"end": 3179,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 3143,
											"end": 3179,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3143,
											"end": 3179,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3143,
											"end": 3179,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 3143,
											"end": 3179,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3143,
											"end": 3179,
											"name": "RETURNDATACOPY",
											"source": 1
										},
										{
											"begin": 3143,
											"end": 3179,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "54"
										},
										{
											"begin": 3143,
											"end": 3179,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3143,
											"end": 3179,
											"name": "tag",
											"source": 1,
											"value": "55"
										},
										{
											"begin": 3143,
											"end": 3179,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3143,
											"end": 3179,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 3143,
											"end": 3179,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3143,
											"end": 3179,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3143,
											"end": 3179,
											"name": "tag",
											"source": 1,
											"value": "54"
										},
										{
											"begin": 3143,
											"end": 3179,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3143,
											"end": 3179,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3124,
											"end": 3179,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3124,
											"end": 3179,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3124,
											"end": 3179,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3193,
											"end": 3200,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3185,
											"end": 3201,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "56"
										},
										{
											"begin": 3185,
											"end": 3201,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3185,
											"end": 3201,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3185,
											"end": 3201,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3185,
											"end": 3201,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 3185,
											"end": 3201,
											"name": "tag",
											"source": 1,
											"value": "56"
										},
										{
											"begin": 3185,
											"end": 3201,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1423,
											"end": 1424,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1387,
											"end": 1463,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "58"
										},
										{
											"begin": 1387,
											"end": 1463,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1387,
											"end": 1463,
											"name": "tag",
											"source": 1,
											"value": "50"
										},
										{
											"begin": 1387,
											"end": 1463,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1445,
											"end": 1456,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "58"
										},
										{
											"begin": 1445,
											"end": 1454,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 1445,
											"end": 1456,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1445,
											"end": 1456,
											"name": "tag",
											"source": 1,
											"value": "58"
										},
										{
											"begin": 1445,
											"end": 1456,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2970,
											"end": 3206,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2970,
											"end": 3206,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2970,
											"end": 3206,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2970,
											"end": 3206,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 1670,
											"end": 1766,
											"name": "tag",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 1670,
											"end": 1766,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1722,
											"end": 1729,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1405,
											"end": 1413,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 1405,
											"end": 1411,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "41"
										},
										{
											"begin": 1405,
											"end": 1413,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1405,
											"end": 1413,
											"name": "tag",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 1405,
											"end": 1413,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1391,
											"end": 1413,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1391,
											"end": 1401,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1391,
											"end": 1413,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1391,
											"end": 1413,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1387,
											"end": 1463,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1387,
											"end": 1463,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "61"
										},
										{
											"begin": 1387,
											"end": 1463,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1744,
											"end": 1761,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "63"
										},
										{
											"begin": 1744,
											"end": 1759,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "37"
										},
										{
											"begin": 1744,
											"end": 1761,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1744,
											"end": 1761,
											"name": "tag",
											"source": 1,
											"value": "63"
										},
										{
											"begin": 1744,
											"end": 1761,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1737,
											"end": 1761,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1737,
											"end": 1761,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1387,
											"end": 1463,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "65"
										},
										{
											"begin": 1387,
											"end": 1463,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1387,
											"end": 1463,
											"name": "tag",
											"source": 1,
											"value": "61"
										},
										{
											"begin": 1387,
											"end": 1463,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1445,
											"end": 1456,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "65"
										},
										{
											"begin": 1445,
											"end": 1454,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 1445,
											"end": 1456,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1445,
											"end": 1456,
											"name": "tag",
											"source": 1,
											"value": "65"
										},
										{
											"begin": 1445,
											"end": 1456,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1670,
											"end": 1766,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1670,
											"end": 1766,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 1942,
											"end": 2166,
											"name": "tag",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 1942,
											"end": 2166,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1405,
											"end": 1413,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "67"
										},
										{
											"begin": 1405,
											"end": 1411,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "41"
										},
										{
											"begin": 1405,
											"end": 1413,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1405,
											"end": 1413,
											"name": "tag",
											"source": 1,
											"value": "67"
										},
										{
											"begin": 1405,
											"end": 1413,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1391,
											"end": 1413,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1391,
											"end": 1401,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1391,
											"end": 1413,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1391,
											"end": 1413,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1387,
											"end": 1463,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1387,
											"end": 1463,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "42"
										},
										{
											"begin": 1387,
											"end": 1463,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2012,
											"end": 2034,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2012,
											"end": 2034,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2004,
											"end": 2093,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "70"
										},
										{
											"begin": 2004,
											"end": 2093,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2004,
											"end": 2093,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2004,
											"end": 2093,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2004,
											"end": 2093,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2004,
											"end": 2093,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2004,
											"end": 2093,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 2004,
											"end": 2093,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2004,
											"end": 2093,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2004,
											"end": 2093,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2004,
											"end": 2093,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2004,
											"end": 2093,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2004,
											"end": 2093,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2004,
											"end": 2093,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2004,
											"end": 2093,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2004,
											"end": 2093,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2004,
											"end": 2093,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2004,
											"end": 2093,
											"name": "PUSH",
											"source": 1,
											"value": "36"
										},
										{
											"begin": 2004,
											"end": 2093,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2004,
											"end": 2093,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2004,
											"end": 2093,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2004,
											"end": 2093,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2004,
											"end": 2093,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2004,
											"end": 2093,
											"name": "PUSH data",
											"source": 1,
											"value": "37112268CEB11E15373F32F9374A1F3287D0A3E6E5A9A435AC06367E6CD0CF00"
										},
										{
											"begin": 2004,
											"end": 2093,
											"name": "PUSH",
											"source": 1,
											"value": "36"
										},
										{
											"begin": 2004,
											"end": 2093,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2004,
											"end": 2093,
											"name": "CODECOPY",
											"source": 1
										},
										{
											"begin": 2004,
											"end": 2093,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2004,
											"end": 2093,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2004,
											"end": 2093,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2004,
											"end": 2093,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2004,
											"end": 2093,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2004,
											"end": 2093,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2004,
											"end": 2093,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2004,
											"end": 2093,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2004,
											"end": 2093,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2004,
											"end": 2093,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2004,
											"end": 2093,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2004,
											"end": 2093,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2004,
											"end": 2093,
											"name": "tag",
											"source": 1,
											"value": "70"
										},
										{
											"begin": 2004,
											"end": 2093,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2104,
											"end": 2136,
											"name": "PUSH",
											"source": 1,
											"value": "7E644D79422F17C01E4894B5F4F588D331EBFA28653D42AE832DC59E38C9798F"
										},
										{
											"begin": 2117,
											"end": 2125,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "71"
										},
										{
											"begin": 2117,
											"end": 2123,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "41"
										},
										{
											"begin": 2117,
											"end": 2125,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2117,
											"end": 2125,
											"name": "tag",
											"source": 1,
											"value": "71"
										},
										{
											"begin": 2117,
											"end": 2125,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2104,
											"end": 2136,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2104,
											"end": 2136,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2104,
											"end": 2136,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2104,
											"end": 2136,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2104,
											"end": 2136,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2104,
											"end": 2136,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2104,
											"end": 2136,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2104,
											"end": 2136,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2104,
											"end": 2136,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2104,
											"end": 2136,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 2104,
											"end": 2136,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2104,
											"end": 2136,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2104,
											"end": 2136,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2104,
											"end": 2136,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2104,
											"end": 2136,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2104,
											"end": 2136,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2104,
											"end": 2136,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2104,
											"end": 2136,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2104,
											"end": 2136,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2104,
											"end": 2136,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2104,
											"end": 2136,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2104,
											"end": 2136,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2104,
											"end": 2136,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2104,
											"end": 2136,
											"name": "LOG1",
											"source": 1
										},
										{
											"begin": 2142,
											"end": 2161,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 2152,
											"end": 2160,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2142,
											"end": 2151,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "73"
										},
										{
											"begin": 2142,
											"end": 2161,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1528,
											"end": 1606,
											"name": "tag",
											"source": 1,
											"value": "31"
										},
										{
											"begin": 1528,
											"end": 1606,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1571,
											"end": 1578,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1405,
											"end": 1413,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "77"
										},
										{
											"begin": 1405,
											"end": 1411,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "41"
										},
										{
											"begin": 1405,
											"end": 1413,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1405,
											"end": 1413,
											"name": "tag",
											"source": 1,
											"value": "77"
										},
										{
											"begin": 1405,
											"end": 1413,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1391,
											"end": 1413,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1391,
											"end": 1401,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1391,
											"end": 1413,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1391,
											"end": 1413,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1387,
											"end": 1463,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1387,
											"end": 1463,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "61"
										},
										{
											"begin": 1387,
											"end": 1463,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1593,
											"end": 1601,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "63"
										},
										{
											"begin": 1593,
											"end": 1599,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "41"
										},
										{
											"begin": 1593,
											"end": 1601,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3715,
											"end": 3889,
											"name": "tag",
											"source": 1,
											"value": "34"
										},
										{
											"begin": 3715,
											"end": 3889,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3794,
											"end": 3802,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 3794,
											"end": 3800,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "41"
										},
										{
											"begin": 3794,
											"end": 3802,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3794,
											"end": 3802,
											"name": "tag",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 3794,
											"end": 3802,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3780,
											"end": 3802,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3780,
											"end": 3790,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3780,
											"end": 3802,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3780,
											"end": 3802,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 3780,
											"end": 3802,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3772,
											"end": 3857,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "85"
										},
										{
											"begin": 3772,
											"end": 3857,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3772,
											"end": 3857,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3772,
											"end": 3857,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3772,
											"end": 3857,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3772,
											"end": 3857,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3772,
											"end": 3857,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 3772,
											"end": 3857,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3772,
											"end": 3857,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3772,
											"end": 3857,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3772,
											"end": 3857,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3772,
											"end": 3857,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3772,
											"end": 3857,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3772,
											"end": 3857,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3772,
											"end": 3857,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3772,
											"end": 3857,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3772,
											"end": 3857,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3772,
											"end": 3857,
											"name": "PUSH",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 3772,
											"end": 3857,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3772,
											"end": 3857,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3772,
											"end": 3857,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3772,
											"end": 3857,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3772,
											"end": 3857,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3772,
											"end": 3857,
											"name": "PUSH data",
											"source": 1,
											"value": "8B466BDE770D6D309A22D90EC051A62AD397BE6218A53E741989877EC297FC9"
										},
										{
											"begin": 3772,
											"end": 3857,
											"name": "PUSH",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 3772,
											"end": 3857,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3772,
											"end": 3857,
											"name": "CODECOPY",
											"source": 1
										},
										{
											"begin": 3772,
											"end": 3857,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3772,
											"end": 3857,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3772,
											"end": 3857,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3772,
											"end": 3857,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3772,
											"end": 3857,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3772,
											"end": 3857,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3772,
											"end": 3857,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3772,
											"end": 3857,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3772,
											"end": 3857,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3772,
											"end": 3857,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3772,
											"end": 3857,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3772,
											"end": 3857,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 3772,
											"end": 3857,
											"name": "tag",
											"source": 1,
											"value": "85"
										},
										{
											"begin": 3772,
											"end": 3857,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3863,
											"end": 3884,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "35"
										},
										{
											"begin": 3863,
											"end": 3882,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "35"
										},
										{
											"begin": 3863,
											"end": 3884,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1100,
											"end": 1265,
											"name": "tag",
											"source": 2,
											"value": "37"
										},
										{
											"begin": 1100,
											"end": 1265,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 915,
											"end": 981,
											"name": "PUSH",
											"source": 2,
											"value": "360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC"
										},
										{
											"begin": 1244,
											"end": 1255,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1244,
											"end": 1255,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1228,
											"end": 1261,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 1034,
											"end": 1819,
											"name": "tag",
											"source": 5,
											"value": "38"
										},
										{
											"begin": 1034,
											"end": 1819,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1336,
											"end": 1350,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 1333,
											"end": 1334,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1330,
											"end": 1331,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1317,
											"end": 1351,
											"name": "CALLDATACOPY",
											"source": 5
										},
										{
											"begin": 1532,
											"end": 1533,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1529,
											"end": 1530,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1513,
											"end": 1527,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 1510,
											"end": 1511,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1494,
											"end": 1508,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 1487,
											"end": 1492,
											"name": "GAS",
											"source": 5
										},
										{
											"begin": 1474,
											"end": 1534,
											"name": "DELEGATECALL",
											"source": 5
										},
										{
											"begin": 1596,
											"end": 1612,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 1593,
											"end": 1594,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1590,
											"end": 1591,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1575,
											"end": 1613,
											"name": "RETURNDATACOPY",
											"source": 5
										},
										{
											"begin": 1628,
											"end": 1634,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1687,
											"end": 1743,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1687,
											"end": 1743,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 1687,
											"end": 1743,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "91"
										},
										{
											"begin": 1687,
											"end": 1743,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1782,
											"end": 1798,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 1779,
											"end": 1780,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1772,
											"end": 1799,
											"name": "RETURN",
											"source": 5
										},
										{
											"begin": 1687,
											"end": 1743,
											"name": "tag",
											"source": 5,
											"value": "91"
										},
										{
											"begin": 1687,
											"end": 1743,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1716,
											"end": 1732,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 1713,
											"end": 1714,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1706,
											"end": 1733,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 3255,
											"end": 3391,
											"name": "tag",
											"source": 1,
											"value": "41"
										},
										{
											"begin": 3255,
											"end": 3391,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1106,
											"end": 1172,
											"name": "PUSH",
											"source": 1,
											"value": "B53127684A568B3173AE13B9F8A6016E243E63B6E8EE1178D6A717850B5D6103"
										},
										{
											"begin": 3370,
											"end": 3381,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 3370,
											"end": 3381,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3355,
											"end": 3387,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 1400,
											"end": 1542,
											"name": "tag",
											"source": 2,
											"value": "45"
										},
										{
											"begin": 1400,
											"end": 1542,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1462,
											"end": 1499,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "94"
										},
										{
											"begin": 1481,
											"end": 1498,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1462,
											"end": 1480,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "95"
										},
										{
											"begin": 1462,
											"end": 1499,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1462,
											"end": 1499,
											"name": "tag",
											"source": 2,
											"value": "94"
										},
										{
											"begin": 1462,
											"end": 1499,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1510,
											"end": 1537,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1510,
											"end": 1537,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1510,
											"end": 1537,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1510,
											"end": 1537,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1510,
											"end": 1537,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1510,
											"end": 1537,
											"name": "PUSH",
											"source": 2,
											"value": "BC7CD75A20EE27FD9ADEBAB32041F755214DBC6BFFA90CC0225B39DA2E5C2D3B"
										},
										{
											"begin": 1510,
											"end": 1537,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1510,
											"end": 1537,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1510,
											"end": 1537,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1510,
											"end": 1537,
											"name": "LOG2",
											"source": 2
										},
										{
											"begin": 1400,
											"end": 1542,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1400,
											"end": 1542,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 3507,
											"end": 3640,
											"name": "tag",
											"source": 1,
											"value": "73"
										},
										{
											"begin": 3507,
											"end": 3640,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1106,
											"end": 1172,
											"name": "PUSH",
											"source": 1,
											"value": "B53127684A568B3173AE13B9F8A6016E243E63B6E8EE1178D6A717850B5D6103"
										},
										{
											"begin": 3608,
											"end": 3630,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 3600,
											"end": 3636,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 1679,
											"end": 1982,
											"name": "tag",
											"source": 2,
											"value": "95"
										},
										{
											"begin": 1679,
											"end": 1982,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1764,
											"end": 1801,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "99"
										},
										{
											"begin": 1783,
											"end": 1800,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1764,
											"end": 1782,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 1764,
											"end": 1801,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1764,
											"end": 1801,
											"name": "tag",
											"source": 2,
											"value": "99"
										},
										{
											"begin": 1764,
											"end": 1801,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1749,
											"end": 1876,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "101"
										},
										{
											"begin": 1749,
											"end": 1876,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1749,
											"end": 1876,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1749,
											"end": 1876,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1749,
											"end": 1876,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1749,
											"end": 1876,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1749,
											"end": 1876,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1749,
											"end": 1876,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1749,
											"end": 1876,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1749,
											"end": 1876,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1749,
											"end": 1876,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1749,
											"end": 1876,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1749,
											"end": 1876,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1749,
											"end": 1876,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1749,
											"end": 1876,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1749,
											"end": 1876,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1749,
											"end": 1876,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1749,
											"end": 1876,
											"name": "PUSH",
											"source": 2,
											"value": "3B"
										},
										{
											"begin": 1749,
											"end": 1876,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1749,
											"end": 1876,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1749,
											"end": 1876,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1749,
											"end": 1876,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1749,
											"end": 1876,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1749,
											"end": 1876,
											"name": "PUSH data",
											"source": 2,
											"value": "B5145A64CE8C406E5785204FE5B300F0CEDA96D6636350B38FDCCB9CD8C0C37C"
										},
										{
											"begin": 1749,
											"end": 1876,
											"name": "PUSH",
											"source": 2,
											"value": "3B"
										},
										{
											"begin": 1749,
											"end": 1876,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1749,
											"end": 1876,
											"name": "CODECOPY",
											"source": 2
										},
										{
											"begin": 1749,
											"end": 1876,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1749,
											"end": 1876,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1749,
											"end": 1876,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1749,
											"end": 1876,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1749,
											"end": 1876,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1749,
											"end": 1876,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1749,
											"end": 1876,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1749,
											"end": 1876,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1749,
											"end": 1876,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1749,
											"end": 1876,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1749,
											"end": 1876,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1749,
											"end": 1876,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1749,
											"end": 1876,
											"name": "tag",
											"source": 2,
											"value": "101"
										},
										{
											"begin": 1749,
											"end": 1876,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 915,
											"end": 981,
											"name": "PUSH",
											"source": 2,
											"value": "360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC"
										},
										{
											"begin": 1941,
											"end": 1972,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 1933,
											"end": 1978,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 743,
											"end": 1329,
											"name": "tag",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 743,
											"end": 1329,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 803,
											"end": 807,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1242,
											"end": 1262,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1242,
											"end": 1262,
											"name": "EXTCODEHASH",
											"source": 0
										},
										{
											"begin": 1089,
											"end": 1155,
											"name": "PUSH",
											"source": 0,
											"value": "C5D2460186F7233C927E7DB2DCC703C0E500B653CA82273B7BFAD8045D85A470"
										},
										{
											"begin": 1281,
											"end": 1304,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1281,
											"end": 1304,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1281,
											"end": 1304,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1281,
											"end": 1304,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1281,
											"end": 1304,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1281,
											"end": 1304,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1281,
											"end": 1323,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "103"
										},
										{
											"begin": 1281,
											"end": 1323,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1308,
											"end": 1323,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1308,
											"end": 1323,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1308,
											"end": 1323,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1281,
											"end": 1323,
											"name": "tag",
											"source": 0,
											"value": "103"
										},
										{
											"begin": 1281,
											"end": 1323,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1273,
											"end": 1324,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 743,
											"end": 1329,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 743,
											"end": 1329,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										}
									],
									".data": {
										"37112268CEB11E15373F32F9374A1F3287D0A3E6E5A9A435AC06367E6CD0CF00": "43616e6e6f74206368616e6765207468652061646d696e206f6620612070726f787920746f20746865207a65726f2061646472657373",
										"8B466BDE770D6D309A22D90EC051A62AD397BE6218A53E741989877EC297FC9": "43616e6e6f742063616c6c2066616c6c6261636b2066756e6374696f6e2066726f6d207468652070726f78792061646d696e",
										"B5145A64CE8C406E5785204FE5B300F0CEDA96D6636350B38FDCCB9CD8C0C37C": "43616e6e6f742073657420612070726f787920696d706c656d656e746174696f6e20746f2061206e6f6e2d636f6e74726163742061646472657373"
									}
								}
							}
						},
						"methodIdentifiers": {
							"admin()": "f851a440",
							"changeAdmin(address)": "8f283970",
							"implementation()": "5c60da1b",
							"upgradeTo(address)": "3659cfe6",
							"upgradeToAndCall(address,bytes)": "4f1ef286"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.7.5+commit.eb77ed08\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"previousAdmin\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newAdmin\",\"type\":\"address\"}],\"name\":\"AdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"Upgraded\",\"type\":\"event\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"inputs\":[],\"name\":\"admin\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newAdmin\",\"type\":\"address\"}],\"name\":\"changeAdmin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"implementation\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newImplementation\",\"type\":\"address\"}],\"name\":\"upgradeTo\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newImplementation\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"upgradeToAndCall\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"From https://github.com/OpenZeppelin/openzeppelin-sdk/tree/solc-0.6/packages/lib/contracts/upgradeability This contract combines an upgradeability proxy with an authorization mechanism for administrative tasks. All external functions in this contract must be guarded by the `ifAdmin` modifier. See ethereum/solidity#3864 for a Solidity feature proposal that would enable this to be done automatically.\",\"events\":{\"AdminChanged(address,address)\":{\"details\":\"Emitted when the administration has been transferred.\",\"params\":{\"newAdmin\":\"Address of the new admin.\",\"previousAdmin\":\"Address of the previous admin.\"}}},\"kind\":\"dev\",\"methods\":{\"admin()\":{\"returns\":{\"_0\":\"The address of the proxy admin.\"}},\"changeAdmin(address)\":{\"details\":\"Changes the admin of the proxy. Only the current admin can call this function.\",\"params\":{\"newAdmin\":\"Address to transfer proxy administration to.\"}},\"implementation()\":{\"returns\":{\"_0\":\"The address of the implementation.\"}},\"upgradeTo(address)\":{\"details\":\"Upgrade the backing implementation of the proxy. Only the admin can call this function.\",\"params\":{\"newImplementation\":\"Address of the new implementation.\"}},\"upgradeToAndCall(address,bytes)\":{\"details\":\"Upgrade the backing implementation of the proxy and call a function on the new implementation. This is useful to initialize the proxied contract.\",\"params\":{\"data\":\"Data to send as msg.data in the low level call. It should include the signature and the parameters of the function to be called, as described in https://solidity.readthedocs.io/en/v0.4.24/abi-spec.html#function-selector-and-argument-encoding.\",\"newImplementation\":\"Address of the new implementation.\"}}},\"stateVariables\":{\"ADMIN_SLOT\":{\"details\":\"Storage slot with the admin of the contract. This is the keccak-256 hash of \\\"eip1967.proxy.admin\\\" subtracted by 1, and is validated in the constructor.\"}},\"title\":\"BaseAdminUpgradeabilityProxy\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@aave/aave-stake/contracts/lib/BaseAdminUpgradeabilityProxy.sol\":\"BaseAdminUpgradeabilityProxy\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@aave/aave-stake/contracts/lib/Address.sol\":{\"keccak256\":\"0x456a1aebf00cb1f2987ca41f1924e4811703f10800a34ecb759e5d1dc472bb78\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ee41b6968eca15df18d524bb43b928e0405a6fe3d725ffe5950adb73c946cc0b\",\"dweb:/ipfs/QmP4hcWLnx33hoRpFjjQAodx4Hb7oXxHX58kpWcZX8v8cx\"]},\"@aave/aave-stake/contracts/lib/BaseAdminUpgradeabilityProxy.sol\":{\"keccak256\":\"0xa93535efff9350660e80c658515f6d6c00c6d8be5a09348158106ffca6a3d08e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3a7e12333a65579855cd41c5d51f34559ee46e570b4379f9d5cca21f807cb2fe\",\"dweb:/ipfs/QmViD2BsF392fhsLchjhsrpG4CZ8oH1qXSZAJspQk7aiV1\"]},\"@aave/aave-stake/contracts/lib/BaseUpgradeabilityProxy.sol\":{\"keccak256\":\"0x2bc918162fd3363fc9b25adccde01f0db4c7d4ae451b6111de9e53a2e3714ab0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://dd1780bbeacad4db1421e4aeb6424702a55bfa3d6a035049c5498f1094f4f625\",\"dweb:/ipfs/QmQ1TJgGBNqjnkcnWzykcfTcsoRiZbqH1VkYt6r5zAEzjN\"]},\"@aave/aave-stake/contracts/lib/Proxy.sol\":{\"keccak256\":\"0xceb6579b5f3a8428b34ac1d7801f83f7bbca6106af94ed5b8d780dabcaf921bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://83b1e544cfef24c262f0d5b92599800b729df77b439ff2e9cc1407c8f5ca620c\",\"dweb:/ipfs/QmTfeVEUh41YGbY2n7E3qh9DK5XTw4xuUZecaJo9Hf2Ax3\"]},\"@aave/aave-stake/contracts/lib/UpgradeabilityProxy.sol\":{\"keccak256\":\"0x757184e9d71fed0e08593c538d3d80b759c2cb202f182503f5f849357769bba8\",\"license\":\"agpl-3.0\",\"urls\":[\"bzz-raw://6d9bc5f2f1fd3cf6d50817cb9c282224d97ea3cbd2ed2429d13895f9487a80e8\",\"dweb:/ipfs/QmUiZhv5LMigKPPZwYGLotbRb1Z5FuZoHvwzEbtfV7VZae\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@aave/aave-stake/contracts/lib/BaseUpgradeabilityProxy.sol": {
				"BaseUpgradeabilityProxy": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "implementation",
									"type": "address"
								}
							],
							"name": "Upgraded",
							"type": "event"
						},
						{
							"stateMutability": "payable",
							"type": "fallback"
						}
					],
					"devdoc": {
						"details": "From https://github.com/OpenZeppelin/openzeppelin-sdk/tree/solc-0.6/packages/lib/contracts/upgradeability This contract implements a proxy that allows to change the implementation address to which it will delegate. Such a change is called an implementation upgrade.",
						"events": {
							"Upgraded(address)": {
								"details": "Emitted when the implementation is upgraded.",
								"params": {
									"implementation": "Address of the new implementation."
								}
							}
						},
						"kind": "dev",
						"methods": {},
						"stateVariables": {
							"IMPLEMENTATION_SLOT": {
								"details": "Storage slot with the address of the current implementation. This is the keccak-256 hash of \"eip1967.proxy.implementation\" subtracted by 1, and is validated in the constructor."
							}
						},
						"title": "BaseUpgradeabilityProxy",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@aave/aave-stake/contracts/lib/BaseUpgradeabilityProxy.sol\":428:1984  contract BaseUpgradeabilityProxy is Proxy {... */\n  mstore(0x40, 0x80)\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"@aave/aave-stake/contracts/lib/BaseUpgradeabilityProxy.sol\":428:1984  contract BaseUpgradeabilityProxy is Proxy {... */\n      mstore(0x40, 0x80)\n        /* \"@aave/aave-stake/contracts/lib/Proxy.sol\":601:612  _fallback() */\n      tag_5\n        /* \"@aave/aave-stake/contracts/lib/Proxy.sol\":601:610  _fallback */\n      tag_6\n        /* \"@aave/aave-stake/contracts/lib/Proxy.sol\":601:612  _fallback() */\n      jump\t// in\n    tag_5:\n        /* \"@aave/aave-stake/contracts/lib/BaseUpgradeabilityProxy.sol\":428:1984  contract BaseUpgradeabilityProxy is Proxy {... */\n      stop\n        /* \"@aave/aave-stake/contracts/lib/Proxy.sol\":2167:2257  function _fallback() internal {... */\n    tag_6:\n        /* \"@aave/aave-stake/contracts/lib/Proxy.sol\":2203:2218  _willFallback() */\n      tag_8\n        /* \"@aave/aave-stake/contracts/lib/Proxy.sol\":2203:2216  _willFallback */\n      tag_10\n        /* \"@aave/aave-stake/contracts/lib/Proxy.sol\":2203:2218  _willFallback() */\n      jump\t// in\n    tag_8:\n        /* \"@aave/aave-stake/contracts/lib/Proxy.sol\":2224:2252  _delegate(_implementation()) */\n      tag_10\n        /* \"@aave/aave-stake/contracts/lib/Proxy.sol\":2234:2251  _implementation() */\n      tag_11\n        /* \"@aave/aave-stake/contracts/lib/Proxy.sol\":2234:2249  _implementation */\n      tag_12\n        /* \"@aave/aave-stake/contracts/lib/Proxy.sol\":2234:2251  _implementation() */\n      jump\t// in\n    tag_11:\n        /* \"@aave/aave-stake/contracts/lib/Proxy.sol\":2224:2233  _delegate */\n      tag_13\n        /* \"@aave/aave-stake/contracts/lib/Proxy.sol\":2224:2252  _delegate(_implementation()) */\n      jump\t// in\n    tag_10:\n        /* \"@aave/aave-stake/contracts/lib/Proxy.sol\":2167:2257  function _fallback() internal {... */\n      jump\t// out\n        /* \"@aave/aave-stake/contracts/lib/BaseUpgradeabilityProxy.sol\":1100:1265  function _implementation() internal view override returns (address impl) {... */\n    tag_12:\n        /* \"@aave/aave-stake/contracts/lib/BaseUpgradeabilityProxy.sol\":915:981  0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc */\n      0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc\n        /* \"@aave/aave-stake/contracts/lib/BaseUpgradeabilityProxy.sol\":1244:1255  sload(slot) */\n      sload\n      swap1\n        /* \"@aave/aave-stake/contracts/lib/BaseUpgradeabilityProxy.sol\":1228:1261  {... */\n      jump\t// out\n        /* \"@aave/aave-stake/contracts/lib/Proxy.sol\":1034:1819  function _delegate(address implementation) internal {... */\n    tag_13:\n        /* \"@aave/aave-stake/contracts/lib/Proxy.sol\":1336:1350  calldatasize() */\n      calldatasize\n        /* \"@aave/aave-stake/contracts/lib/Proxy.sol\":1333:1334  0 */\n      0x00\n        /* \"@aave/aave-stake/contracts/lib/Proxy.sol\":1330:1331  0 */\n      dup1\n        /* \"@aave/aave-stake/contracts/lib/Proxy.sol\":1317:1351  calldatacopy(0, 0, calldatasize()) */\n      calldatacopy\n        /* \"@aave/aave-stake/contracts/lib/Proxy.sol\":1532:1533  0 */\n      0x00\n        /* \"@aave/aave-stake/contracts/lib/Proxy.sol\":1529:1530  0 */\n      dup1\n        /* \"@aave/aave-stake/contracts/lib/Proxy.sol\":1513:1527  calldatasize() */\n      calldatasize\n        /* \"@aave/aave-stake/contracts/lib/Proxy.sol\":1510:1511  0 */\n      0x00\n        /* \"@aave/aave-stake/contracts/lib/Proxy.sol\":1494:1508  implementation */\n      dup5\n        /* \"@aave/aave-stake/contracts/lib/Proxy.sol\":1487:1492  gas() */\n      gas\n        /* \"@aave/aave-stake/contracts/lib/Proxy.sol\":1474:1534  delegatecall(gas(), implementation, 0, calldatasize(), 0, 0) */\n      delegatecall\n        /* \"@aave/aave-stake/contracts/lib/Proxy.sol\":1596:1612  returndatasize() */\n      returndatasize\n        /* \"@aave/aave-stake/contracts/lib/Proxy.sol\":1593:1594  0 */\n      0x00\n        /* \"@aave/aave-stake/contracts/lib/Proxy.sol\":1590:1591  0 */\n      dup1\n        /* \"@aave/aave-stake/contracts/lib/Proxy.sol\":1575:1613  returndatacopy(0, 0, returndatasize()) */\n      returndatacopy\n        /* \"@aave/aave-stake/contracts/lib/Proxy.sol\":1628:1634  result */\n      dup1\n        /* \"@aave/aave-stake/contracts/lib/Proxy.sol\":1687:1743  case 0 {... */\n      dup1\n      iszero\n      tag_18\n      jumpi\n        /* \"@aave/aave-stake/contracts/lib/Proxy.sol\":1782:1798  returndatasize() */\n      returndatasize\n        /* \"@aave/aave-stake/contracts/lib/Proxy.sol\":1779:1780  0 */\n      0x00\n        /* \"@aave/aave-stake/contracts/lib/Proxy.sol\":1772:1799  return(0, returndatasize()) */\n      return\n        /* \"@aave/aave-stake/contracts/lib/Proxy.sol\":1687:1743  case 0 {... */\n    tag_18:\n        /* \"@aave/aave-stake/contracts/lib/Proxy.sol\":1716:1732  returndatasize() */\n      returndatasize\n        /* \"@aave/aave-stake/contracts/lib/Proxy.sol\":1713:1714  0 */\n      0x00\n        /* \"@aave/aave-stake/contracts/lib/Proxy.sol\":1706:1733  revert(0, returndatasize()) */\n      revert\n\n    auxdata: 0xa2646970667358221220f8e33cd1c9c7264ec2312979e6fbf1c0dd720572b7c1b6df155190bb94ad52a164736f6c63430007050033\n}\n",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "6080604052348015600f57600080fd5b50609e8061001e6000396000f3fe6080604052600a600c565b005b6012601e565b601e601a6020565b6045565b565b7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc5490565b3660008037600080366000845af43d6000803e8080156063573d6000f35b3d6000fdfea2646970667358221220f8e33cd1c9c7264ec2312979e6fbf1c0dd720572b7c1b6df155190bb94ad52a164736f6c63430007050033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x9E DUP1 PUSH2 0x1E PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0xA PUSH1 0xC JUMP JUMPDEST STOP JUMPDEST PUSH1 0x12 PUSH1 0x1E JUMP JUMPDEST PUSH1 0x1E PUSH1 0x1A PUSH1 0x20 JUMP JUMPDEST PUSH1 0x45 JUMP JUMPDEST JUMP JUMPDEST PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC SLOAD SWAP1 JUMP JUMPDEST CALLDATASIZE PUSH1 0x0 DUP1 CALLDATACOPY PUSH1 0x0 DUP1 CALLDATASIZE PUSH1 0x0 DUP5 GAS DELEGATECALL RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY DUP1 DUP1 ISZERO PUSH1 0x63 JUMPI RETURNDATASIZE PUSH1 0x0 RETURN JUMPDEST RETURNDATASIZE PUSH1 0x0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xF8 0xE3 EXTCODECOPY 0xD1 0xC9 0xC7 0x26 0x4E 0xC2 BALANCE 0x29 PUSH26 0xE6FBF1C0DD720572B7C1B6DF155190BB94AD52A164736F6C6343 STOP SMOD SDIV STOP CALLER ",
							"sourceMap": "428:1556:2:-:0;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "6080604052600a600c565b005b6012601e565b601e601a6020565b6045565b565b7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc5490565b3660008037600080366000845af43d6000803e8080156063573d6000f35b3d6000fdfea2646970667358221220f8e33cd1c9c7264ec2312979e6fbf1c0dd720572b7c1b6df155190bb94ad52a164736f6c63430007050033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0xA PUSH1 0xC JUMP JUMPDEST STOP JUMPDEST PUSH1 0x12 PUSH1 0x1E JUMP JUMPDEST PUSH1 0x1E PUSH1 0x1A PUSH1 0x20 JUMP JUMPDEST PUSH1 0x45 JUMP JUMPDEST JUMP JUMPDEST PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC SLOAD SWAP1 JUMP JUMPDEST CALLDATASIZE PUSH1 0x0 DUP1 CALLDATACOPY PUSH1 0x0 DUP1 CALLDATASIZE PUSH1 0x0 DUP5 GAS DELEGATECALL RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY DUP1 DUP1 ISZERO PUSH1 0x63 JUMPI RETURNDATASIZE PUSH1 0x0 RETURN JUMPDEST RETURNDATASIZE PUSH1 0x0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xF8 0xE3 EXTCODECOPY 0xD1 0xC9 0xC7 0x26 0x4E 0xC2 BALANCE 0x29 PUSH26 0xE6FBF1C0DD720572B7C1B6DF155190BB94AD52A164736F6C6343 STOP SMOD SDIV STOP CALLER ",
							"sourceMap": "428:1556:2:-:0;;;601:11:5;:9;:11::i;:::-;428:1556:2;2167:90:5;2203:15;:13;:15::i;:::-;2224:28;2234:17;:15;:17::i;:::-;2224:9;:28::i;:::-;2167:90::o;1100:165:2:-;915:66;1244:11;;1228:33::o;1034:785:5:-;1336:14;1333:1;1330;1317:34;1532:1;1529;1513:14;1510:1;1494:14;1487:5;1474:60;1596:16;1593:1;1590;1575:38;1628:6;1687:56;;;;1782:16;1779:1;1772:27;1687:56;1716:16;1713:1;1706:27"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "31600",
								"executionCost": "81",
								"totalCost": "31681"
							},
							"external": {
								"": "infinite"
							},
							"internal": {
								"_implementation()": "815",
								"_setImplementation(address)": "infinite",
								"_upgradeTo(address)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 428,
									"end": 1984,
									"name": "PUSH",
									"source": 2,
									"value": "80"
								},
								{
									"begin": 428,
									"end": 1984,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 428,
									"end": 1984,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 428,
									"end": 1984,
									"name": "CALLVALUE",
									"source": 2
								},
								{
									"begin": 428,
									"end": 1984,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 428,
									"end": 1984,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 428,
									"end": 1984,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 428,
									"end": 1984,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 428,
									"end": 1984,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 428,
									"end": 1984,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 428,
									"end": 1984,
									"name": "REVERT",
									"source": 2
								},
								{
									"begin": 428,
									"end": 1984,
									"name": "tag",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 428,
									"end": 1984,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 428,
									"end": 1984,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 428,
									"end": 1984,
									"name": "PUSH #[$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 428,
									"end": 1984,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 428,
									"end": 1984,
									"name": "PUSH [$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 428,
									"end": 1984,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 428,
									"end": 1984,
									"name": "CODECOPY",
									"source": 2
								},
								{
									"begin": 428,
									"end": 1984,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 428,
									"end": 1984,
									"name": "RETURN",
									"source": 2
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220f8e33cd1c9c7264ec2312979e6fbf1c0dd720572b7c1b6df155190bb94ad52a164736f6c63430007050033",
									".code": [
										{
											"begin": 428,
											"end": 1984,
											"name": "PUSH",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 428,
											"end": 1984,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 428,
											"end": 1984,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 601,
											"end": 612,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "5"
										},
										{
											"begin": 601,
											"end": 610,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "6"
										},
										{
											"begin": 601,
											"end": 612,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 601,
											"end": 612,
											"name": "tag",
											"source": 5,
											"value": "5"
										},
										{
											"begin": 601,
											"end": 612,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 428,
											"end": 1984,
											"name": "STOP",
											"source": 2
										},
										{
											"begin": 2167,
											"end": 2257,
											"name": "tag",
											"source": 5,
											"value": "6"
										},
										{
											"begin": 2167,
											"end": 2257,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2203,
											"end": 2218,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "8"
										},
										{
											"begin": 2203,
											"end": 2216,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "10"
										},
										{
											"begin": 2203,
											"end": 2218,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 2203,
											"end": 2218,
											"name": "tag",
											"source": 5,
											"value": "8"
										},
										{
											"begin": 2203,
											"end": 2218,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2224,
											"end": 2252,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "10"
										},
										{
											"begin": 2234,
											"end": 2251,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "11"
										},
										{
											"begin": 2234,
											"end": 2249,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "12"
										},
										{
											"begin": 2234,
											"end": 2251,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 2234,
											"end": 2251,
											"name": "tag",
											"source": 5,
											"value": "11"
										},
										{
											"begin": 2234,
											"end": 2251,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2224,
											"end": 2233,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "13"
										},
										{
											"begin": 2224,
											"end": 2252,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 2224,
											"end": 2252,
											"name": "tag",
											"source": 5,
											"value": "10"
										},
										{
											"begin": 2224,
											"end": 2252,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2167,
											"end": 2257,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 1100,
											"end": 1265,
											"name": "tag",
											"source": 2,
											"value": "12"
										},
										{
											"begin": 1100,
											"end": 1265,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 915,
											"end": 981,
											"name": "PUSH",
											"source": 2,
											"value": "360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC"
										},
										{
											"begin": 1244,
											"end": 1255,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1244,
											"end": 1255,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1228,
											"end": 1261,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 1034,
											"end": 1819,
											"name": "tag",
											"source": 5,
											"value": "13"
										},
										{
											"begin": 1034,
											"end": 1819,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1336,
											"end": 1350,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 1333,
											"end": 1334,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1330,
											"end": 1331,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1317,
											"end": 1351,
											"name": "CALLDATACOPY",
											"source": 5
										},
										{
											"begin": 1532,
											"end": 1533,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1529,
											"end": 1530,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1513,
											"end": 1527,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 1510,
											"end": 1511,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1494,
											"end": 1508,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 1487,
											"end": 1492,
											"name": "GAS",
											"source": 5
										},
										{
											"begin": 1474,
											"end": 1534,
											"name": "DELEGATECALL",
											"source": 5
										},
										{
											"begin": 1596,
											"end": 1612,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 1593,
											"end": 1594,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1590,
											"end": 1591,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1575,
											"end": 1613,
											"name": "RETURNDATACOPY",
											"source": 5
										},
										{
											"begin": 1628,
											"end": 1634,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1687,
											"end": 1743,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1687,
											"end": 1743,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 1687,
											"end": 1743,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "18"
										},
										{
											"begin": 1687,
											"end": 1743,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1782,
											"end": 1798,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 1779,
											"end": 1780,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1772,
											"end": 1799,
											"name": "RETURN",
											"source": 5
										},
										{
											"begin": 1687,
											"end": 1743,
											"name": "tag",
											"source": 5,
											"value": "18"
										},
										{
											"begin": 1687,
											"end": 1743,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1716,
											"end": 1732,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 1713,
											"end": 1714,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1706,
											"end": 1733,
											"name": "REVERT",
											"source": 5
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.7.5+commit.eb77ed08\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"Upgraded\",\"type\":\"event\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"}],\"devdoc\":{\"details\":\"From https://github.com/OpenZeppelin/openzeppelin-sdk/tree/solc-0.6/packages/lib/contracts/upgradeability This contract implements a proxy that allows to change the implementation address to which it will delegate. Such a change is called an implementation upgrade.\",\"events\":{\"Upgraded(address)\":{\"details\":\"Emitted when the implementation is upgraded.\",\"params\":{\"implementation\":\"Address of the new implementation.\"}}},\"kind\":\"dev\",\"methods\":{},\"stateVariables\":{\"IMPLEMENTATION_SLOT\":{\"details\":\"Storage slot with the address of the current implementation. This is the keccak-256 hash of \\\"eip1967.proxy.implementation\\\" subtracted by 1, and is validated in the constructor.\"}},\"title\":\"BaseUpgradeabilityProxy\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@aave/aave-stake/contracts/lib/BaseUpgradeabilityProxy.sol\":\"BaseUpgradeabilityProxy\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@aave/aave-stake/contracts/lib/Address.sol\":{\"keccak256\":\"0x456a1aebf00cb1f2987ca41f1924e4811703f10800a34ecb759e5d1dc472bb78\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ee41b6968eca15df18d524bb43b928e0405a6fe3d725ffe5950adb73c946cc0b\",\"dweb:/ipfs/QmP4hcWLnx33hoRpFjjQAodx4Hb7oXxHX58kpWcZX8v8cx\"]},\"@aave/aave-stake/contracts/lib/BaseUpgradeabilityProxy.sol\":{\"keccak256\":\"0x2bc918162fd3363fc9b25adccde01f0db4c7d4ae451b6111de9e53a2e3714ab0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://dd1780bbeacad4db1421e4aeb6424702a55bfa3d6a035049c5498f1094f4f625\",\"dweb:/ipfs/QmQ1TJgGBNqjnkcnWzykcfTcsoRiZbqH1VkYt6r5zAEzjN\"]},\"@aave/aave-stake/contracts/lib/Proxy.sol\":{\"keccak256\":\"0xceb6579b5f3a8428b34ac1d7801f83f7bbca6106af94ed5b8d780dabcaf921bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://83b1e544cfef24c262f0d5b92599800b729df77b439ff2e9cc1407c8f5ca620c\",\"dweb:/ipfs/QmTfeVEUh41YGbY2n7E3qh9DK5XTw4xuUZecaJo9Hf2Ax3\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@aave/aave-stake/contracts/lib/InitializableAdminUpgradeabilityProxy.sol": {
				"InitializableAdminUpgradeabilityProxy": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "previousAdmin",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "newAdmin",
									"type": "address"
								}
							],
							"name": "AdminChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "implementation",
									"type": "address"
								}
							],
							"name": "Upgraded",
							"type": "event"
						},
						{
							"stateMutability": "payable",
							"type": "fallback"
						},
						{
							"inputs": [],
							"name": "admin",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newAdmin",
									"type": "address"
								}
							],
							"name": "changeAdmin",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "implementation",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_logic",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_admin",
									"type": "address"
								},
								{
									"internalType": "bytes",
									"name": "_data",
									"type": "bytes"
								}
							],
							"name": "initialize",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_logic",
									"type": "address"
								},
								{
									"internalType": "bytes",
									"name": "_data",
									"type": "bytes"
								}
							],
							"name": "initialize",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newImplementation",
									"type": "address"
								}
							],
							"name": "upgradeTo",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newImplementation",
									"type": "address"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "upgradeToAndCall",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "From https://github.com/OpenZeppelin/openzeppelin-sdk/tree/solc-0.6/packages/lib/contracts/upgradeability Extends from BaseAdminUpgradeabilityProxy with an initializer for initializing the implementation, admin, and init data.",
						"kind": "dev",
						"methods": {
							"admin()": {
								"returns": {
									"_0": "The address of the proxy admin."
								}
							},
							"changeAdmin(address)": {
								"details": "Changes the admin of the proxy. Only the current admin can call this function.",
								"params": {
									"newAdmin": "Address to transfer proxy administration to."
								}
							},
							"implementation()": {
								"returns": {
									"_0": "The address of the implementation."
								}
							},
							"initialize(address,address,bytes)": {
								"params": {
									"_admin": "Address of the proxy administrator.",
									"_data": "Data to send as msg.data to the implementation to initialize the proxied contract. It should include the signature and the parameters of the function to be called, as described in https://solidity.readthedocs.io/en/v0.4.24/abi-spec.html#function-selector-and-argument-encoding. This parameter is optional, if no data is given the initialization call to proxied contract will be skipped.",
									"_logic": "address of the initial implementation."
								}
							},
							"initialize(address,bytes)": {
								"details": "Contract initializer.",
								"params": {
									"_data": "Data to send as msg.data to the implementation to initialize the proxied contract. It should include the signature and the parameters of the function to be called, as described in https://solidity.readthedocs.io/en/v0.4.24/abi-spec.html#function-selector-and-argument-encoding. This parameter is optional, if no data is given the initialization call to proxied contract will be skipped.",
									"_logic": "Address of the initial implementation."
								}
							},
							"upgradeTo(address)": {
								"details": "Upgrade the backing implementation of the proxy. Only the admin can call this function.",
								"params": {
									"newImplementation": "Address of the new implementation."
								}
							},
							"upgradeToAndCall(address,bytes)": {
								"details": "Upgrade the backing implementation of the proxy and call a function on the new implementation. This is useful to initialize the proxied contract.",
								"params": {
									"data": "Data to send as msg.data in the low level call. It should include the signature and the parameters of the function to be called, as described in https://solidity.readthedocs.io/en/v0.4.24/abi-spec.html#function-selector-and-argument-encoding.",
									"newImplementation": "Address of the new implementation."
								}
							}
						},
						"title": "InitializableAdminUpgradeabilityProxy",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@aave/aave-stake/contracts/lib/InitializableAdminUpgradeabilityProxy.sol\":448:1676  contract InitializableAdminUpgradeabilityProxy is... */\n  mstore(0x40, 0x80)\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"@aave/aave-stake/contracts/lib/InitializableAdminUpgradeabilityProxy.sol\":448:1676  contract InitializableAdminUpgradeabilityProxy is... */\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x8f283970\n      gt\n      tag_10\n      jumpi\n      dup1\n      0x8f283970\n      eq\n      tag_6\n      jumpi\n      dup1\n      0xcf7a1d77\n      eq\n      tag_7\n      jumpi\n      dup1\n      0xd1f57894\n      eq\n      tag_8\n      jumpi\n      dup1\n      0xf851a440\n      eq\n      tag_9\n      jumpi\n      jump(tag_1)\n    tag_10:\n      dup1\n      0x3659cfe6\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x4f1ef286\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x5c60da1b\n      eq\n      tag_5\n      jumpi\n    tag_1:\n        /* \"@aave/aave-stake/contracts/lib/Proxy.sol\":601:612  _fallback() */\n      tag_13\n        /* \"@aave/aave-stake/contracts/lib/Proxy.sol\":601:610  _fallback */\n      tag_14\n        /* \"@aave/aave-stake/contracts/lib/Proxy.sol\":601:612  _fallback() */\n      jump\t// in\n    tag_13:\n        /* \"@aave/aave-stake/contracts/lib/InitializableAdminUpgradeabilityProxy.sol\":448:1676  contract InitializableAdminUpgradeabilityProxy is... */\n      stop\n        /* \"@aave/aave-stake/contracts/lib/BaseAdminUpgradeabilityProxy.sol\":2350:2453  function upgradeTo(address newImplementation) external ifAdmin {... */\n    tag_3:\n      callvalue\n      dup1\n      iszero\n      tag_15\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_15:\n      pop\n      tag_13\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x20\n      dup2\n      lt\n      iszero\n      tag_17\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_17:\n      pop\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      tag_18\n      jump\t// in\n        /* \"@aave/aave-stake/contracts/lib/BaseAdminUpgradeabilityProxy.sol\":2970:3206  function upgradeToAndCall(address newImplementation, bytes calldata data)... */\n    tag_4:\n      tag_13\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x40\n      dup2\n      lt\n      iszero\n      tag_20\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_20:\n      sub(shl(0xa0, 0x01), 0x01)\n      dup3\n      calldataload\n      and\n      swap2\n      swap1\n      dup2\n      add\n      swap1\n      0x40\n      dup2\n      add\n      0x20\n      dup3\n      add\n      calldataload\n      0x0100000000\n      dup2\n      gt\n      iszero\n      tag_21\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_21:\n      dup3\n      add\n      dup4\n      0x20\n      dup3\n      add\n      gt\n      iszero\n      tag_22\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_22:\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap2\n      dup5\n      0x01\n      dup4\n      mul\n      dup5\n      add\n      gt\n      0x0100000000\n      dup4\n      gt\n      or\n      iszero\n      tag_23\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_23:\n      pop\n      swap1\n      swap3\n      pop\n      swap1\n      pop\n      tag_24\n      jump\t// in\n        /* \"@aave/aave-stake/contracts/lib/BaseAdminUpgradeabilityProxy.sol\":1670:1766  function implementation() external ifAdmin returns (address) {... */\n    tag_5:\n      callvalue\n      dup1\n      iszero\n      tag_25\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_25:\n      pop\n      tag_26\n      tag_27\n      jump\t// in\n    tag_26:\n      0x40\n      dup1\n      mload\n      sub(shl(0xa0, 0x01), 0x01)\n      swap1\n      swap3\n      and\n      dup3\n      mstore\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x20\n      add\n      swap1\n      return\n        /* \"@aave/aave-stake/contracts/lib/BaseAdminUpgradeabilityProxy.sol\":1942:2166  function changeAdmin(address newAdmin) external ifAdmin {... */\n    tag_6:\n      callvalue\n      dup1\n      iszero\n      tag_28\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_28:\n      pop\n      tag_13\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x20\n      dup2\n      lt\n      iszero\n      tag_30\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_30:\n      pop\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      tag_31\n      jump\t// in\n        /* \"@aave/aave-stake/contracts/lib/InitializableAdminUpgradeabilityProxy.sol\":1141:1464  function initialize(... */\n    tag_7:\n      tag_13\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x60\n      dup2\n      lt\n      iszero\n      tag_33\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_33:\n      sub(shl(0xa0, 0x01), 0x01)\n      dup3\n      calldataload\n      dup2\n      and\n      swap3\n      0x20\n      dup2\n      add\n      calldataload\n      swap1\n      swap2\n      and\n      swap2\n      dup2\n      add\n      swap1\n      0x60\n      dup2\n      add\n      0x40\n      dup3\n      add\n      calldataload\n      0x0100000000\n      dup2\n      gt\n      iszero\n      tag_34\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_34:\n      dup3\n      add\n      dup4\n      0x20\n      dup3\n      add\n      gt\n      iszero\n      tag_35\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_35:\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap2\n      dup5\n      0x01\n      dup4\n      mul\n      dup5\n      add\n      gt\n      0x0100000000\n      dup4\n      gt\n      or\n      iszero\n      tag_36\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_36:\n      swap2\n      swap1\n      dup1\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap4\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup4\n      dup4\n      dup1\n      dup3\n      dup5\n      calldatacopy\n      0x00\n      swap3\n      add\n      swap2\n      swap1\n      swap2\n      mstore\n      pop\n      swap3\n      swap6\n      pop\n      tag_37\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// in\n        /* \"@aave/aave-stake/contracts/lib/InitializableUpgradeabilityProxy.sol\":962:1327  function initialize(address _logic, bytes memory _data) public payable {... */\n    tag_8:\n      tag_13\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x40\n      dup2\n      lt\n      iszero\n      tag_39\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_39:\n      sub(shl(0xa0, 0x01), 0x01)\n      dup3\n      calldataload\n      and\n      swap2\n      swap1\n      dup2\n      add\n      swap1\n      0x40\n      dup2\n      add\n      0x20\n      dup3\n      add\n      calldataload\n      0x0100000000\n      dup2\n      gt\n      iszero\n      tag_40\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_40:\n      dup3\n      add\n      dup4\n      0x20\n      dup3\n      add\n      gt\n      iszero\n      tag_41\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_41:\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap2\n      dup5\n      0x01\n      dup4\n      mul\n      dup5\n      add\n      gt\n      0x0100000000\n      dup4\n      gt\n      or\n      iszero\n      tag_42\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_42:\n      swap2\n      swap1\n      dup1\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap4\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup4\n      dup4\n      dup1\n      dup3\n      dup5\n      calldatacopy\n      0x00\n      swap3\n      add\n      swap2\n      swap1\n      swap2\n      mstore\n      pop\n      swap3\n      swap6\n      pop\n      tag_43\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// in\n        /* \"@aave/aave-stake/contracts/lib/BaseAdminUpgradeabilityProxy.sol\":1528:1606  function admin() external ifAdmin returns (address) {... */\n    tag_9:\n      callvalue\n      dup1\n      iszero\n      tag_44\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_44:\n      pop\n      tag_26\n      tag_46\n      jump\t// in\n        /* \"@aave/aave-stake/contracts/lib/Proxy.sol\":2167:2257  function _fallback() internal {... */\n    tag_14:\n        /* \"@aave/aave-stake/contracts/lib/Proxy.sol\":2203:2218  _willFallback() */\n      tag_48\n        /* \"@aave/aave-stake/contracts/lib/Proxy.sol\":2203:2216  _willFallback */\n      tag_49\n        /* \"@aave/aave-stake/contracts/lib/Proxy.sol\":2203:2218  _willFallback() */\n      jump\t// in\n    tag_48:\n        /* \"@aave/aave-stake/contracts/lib/Proxy.sol\":2224:2252  _delegate(_implementation()) */\n      tag_50\n        /* \"@aave/aave-stake/contracts/lib/Proxy.sol\":2234:2251  _implementation() */\n      tag_51\n        /* \"@aave/aave-stake/contracts/lib/Proxy.sol\":2234:2249  _implementation */\n      tag_52\n        /* \"@aave/aave-stake/contracts/lib/Proxy.sol\":2234:2251  _implementation() */\n      jump\t// in\n    tag_51:\n        /* \"@aave/aave-stake/contracts/lib/Proxy.sol\":2224:2233  _delegate */\n      tag_53\n        /* \"@aave/aave-stake/contracts/lib/Proxy.sol\":2224:2252  _delegate(_implementation()) */\n      jump\t// in\n    tag_50:\n        /* \"@aave/aave-stake/contracts/lib/Proxy.sol\":2167:2257  function _fallback() internal {... */\n      jump\t// out\n        /* \"@aave/aave-stake/contracts/lib/BaseAdminUpgradeabilityProxy.sol\":2350:2453  function upgradeTo(address newImplementation) external ifAdmin {... */\n    tag_18:\n        /* \"@aave/aave-stake/contracts/lib/BaseAdminUpgradeabilityProxy.sol\":1405:1413  _admin() */\n      tag_55\n        /* \"@aave/aave-stake/contracts/lib/BaseAdminUpgradeabilityProxy.sol\":1405:1411  _admin */\n      tag_56\n        /* \"@aave/aave-stake/contracts/lib/BaseAdminUpgradeabilityProxy.sol\":1405:1413  _admin() */\n      jump\t// in\n    tag_55:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@aave/aave-stake/contracts/lib/BaseAdminUpgradeabilityProxy.sol\":1391:1413  msg.sender == _admin() */\n      and\n        /* \"@aave/aave-stake/contracts/lib/BaseAdminUpgradeabilityProxy.sol\":1391:1401  msg.sender */\n      caller\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@aave/aave-stake/contracts/lib/BaseAdminUpgradeabilityProxy.sol\":1391:1413  msg.sender == _admin() */\n      and\n      eq\n        /* \"@aave/aave-stake/contracts/lib/BaseAdminUpgradeabilityProxy.sol\":1387:1463  if (msg.sender == _admin()) {... */\n      iszero\n      tag_57\n      jumpi\n        /* \"@aave/aave-stake/contracts/lib/BaseAdminUpgradeabilityProxy.sol\":2419:2448  _upgradeTo(newImplementation) */\n      tag_59\n        /* \"@aave/aave-stake/contracts/lib/BaseAdminUpgradeabilityProxy.sol\":2430:2447  newImplementation */\n      dup2\n        /* \"@aave/aave-stake/contracts/lib/BaseAdminUpgradeabilityProxy.sol\":2419:2429  _upgradeTo */\n      tag_60\n        /* \"@aave/aave-stake/contracts/lib/BaseAdminUpgradeabilityProxy.sol\":2419:2448  _upgradeTo(newImplementation) */\n      jump\t// in\n    tag_59:\n        /* \"@aave/aave-stake/contracts/lib/BaseAdminUpgradeabilityProxy.sol\":1387:1463  if (msg.sender == _admin()) {... */\n      jump(tag_62)\n    tag_57:\n        /* \"@aave/aave-stake/contracts/lib/BaseAdminUpgradeabilityProxy.sol\":1445:1456  _fallback() */\n      tag_62\n        /* \"@aave/aave-stake/contracts/lib/BaseAdminUpgradeabilityProxy.sol\":1445:1454  _fallback */\n      tag_14\n        /* \"@aave/aave-stake/contracts/lib/BaseAdminUpgradeabilityProxy.sol\":1445:1456  _fallback() */\n      jump\t// in\n    tag_62:\n        /* \"@aave/aave-stake/contracts/lib/BaseAdminUpgradeabilityProxy.sol\":2350:2453  function upgradeTo(address newImplementation) external ifAdmin {... */\n      pop\n      jump\t// out\n        /* \"@aave/aave-stake/contracts/lib/BaseAdminUpgradeabilityProxy.sol\":2970:3206  function upgradeToAndCall(address newImplementation, bytes calldata data)... */\n    tag_24:\n        /* \"@aave/aave-stake/contracts/lib/BaseAdminUpgradeabilityProxy.sol\":1405:1413  _admin() */\n      tag_64\n        /* \"@aave/aave-stake/contracts/lib/BaseAdminUpgradeabilityProxy.sol\":1405:1411  _admin */\n      tag_56\n        /* \"@aave/aave-stake/contracts/lib/BaseAdminUpgradeabilityProxy.sol\":1405:1413  _admin() */\n      jump\t// in\n    tag_64:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@aave/aave-stake/contracts/lib/BaseAdminUpgradeabilityProxy.sol\":1391:1413  msg.sender == _admin() */\n      and\n        /* \"@aave/aave-stake/contracts/lib/BaseAdminUpgradeabilityProxy.sol\":1391:1401  msg.sender */\n      caller\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@aave/aave-stake/contracts/lib/BaseAdminUpgradeabilityProxy.sol\":1391:1413  msg.sender == _admin() */\n      and\n      eq\n        /* \"@aave/aave-stake/contracts/lib/BaseAdminUpgradeabilityProxy.sol\":1387:1463  if (msg.sender == _admin()) {... */\n      iszero\n      tag_65\n      jumpi\n        /* \"@aave/aave-stake/contracts/lib/BaseAdminUpgradeabilityProxy.sol\":3089:3118  _upgradeTo(newImplementation) */\n      tag_67\n        /* \"@aave/aave-stake/contracts/lib/BaseAdminUpgradeabilityProxy.sol\":3100:3117  newImplementation */\n      dup4\n        /* \"@aave/aave-stake/contracts/lib/BaseAdminUpgradeabilityProxy.sol\":3089:3099  _upgradeTo */\n      tag_60\n        /* \"@aave/aave-stake/contracts/lib/BaseAdminUpgradeabilityProxy.sol\":3089:3118  _upgradeTo(newImplementation) */\n      jump\t// in\n    tag_67:\n        /* \"@aave/aave-stake/contracts/lib/BaseAdminUpgradeabilityProxy.sol\":3125:3137  bool success */\n      0x00\n        /* \"@aave/aave-stake/contracts/lib/BaseAdminUpgradeabilityProxy.sol\":3143:3160  newImplementation */\n      dup4\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@aave/aave-stake/contracts/lib/BaseAdminUpgradeabilityProxy.sol\":3143:3173  newImplementation.delegatecall */\n      and\n        /* \"@aave/aave-stake/contracts/lib/BaseAdminUpgradeabilityProxy.sol\":3174:3178  data */\n      dup4\n      dup4\n        /* \"@aave/aave-stake/contracts/lib/BaseAdminUpgradeabilityProxy.sol\":3143:3179  newImplementation.delegatecall(data) */\n      mload(0x40)\n      dup1\n      dup4\n      dup4\n      dup1\n      dup3\n      dup5\n      calldatacopy\n      mload(0x40)\n      swap3\n      add\n      swap5\n      pop\n      0x00\n      swap4\n      pop\n      swap1\n      swap2\n      pop\n      pop\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      gas\n      delegatecall\n      swap2\n      pop\n      pop\n      returndatasize\n      dup1\n      0x00\n      dup2\n      eq\n      tag_70\n      jumpi\n      mload(0x40)\n      swap2\n      pop\n      and(add(returndatasize, 0x3f), not(0x1f))\n      dup3\n      add\n      0x40\n      mstore\n      returndatasize\n      dup3\n      mstore\n      returndatasize\n      0x00\n      0x20\n      dup5\n      add\n      returndatacopy\n      jump(tag_69)\n    tag_70:\n      0x60\n      swap2\n      pop\n    tag_69:\n      pop\n        /* \"@aave/aave-stake/contracts/lib/BaseAdminUpgradeabilityProxy.sol\":3124:3179  (bool success, ) = newImplementation.delegatecall(data) */\n      pop\n      swap1\n      pop\n        /* \"@aave/aave-stake/contracts/lib/BaseAdminUpgradeabilityProxy.sol\":3193:3200  success */\n      dup1\n        /* \"@aave/aave-stake/contracts/lib/BaseAdminUpgradeabilityProxy.sol\":3185:3201  require(success) */\n      tag_71\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_71:\n        /* \"@aave/aave-stake/contracts/lib/BaseAdminUpgradeabilityProxy.sol\":1423:1424  _ */\n      pop\n        /* \"@aave/aave-stake/contracts/lib/BaseAdminUpgradeabilityProxy.sol\":1387:1463  if (msg.sender == _admin()) {... */\n      jump(tag_73)\n    tag_65:\n        /* \"@aave/aave-stake/contracts/lib/BaseAdminUpgradeabilityProxy.sol\":1445:1456  _fallback() */\n      tag_73\n        /* \"@aave/aave-stake/contracts/lib/BaseAdminUpgradeabilityProxy.sol\":1445:1454  _fallback */\n      tag_14\n        /* \"@aave/aave-stake/contracts/lib/BaseAdminUpgradeabilityProxy.sol\":1445:1456  _fallback() */\n      jump\t// in\n    tag_73:\n        /* \"@aave/aave-stake/contracts/lib/BaseAdminUpgradeabilityProxy.sol\":2970:3206  function upgradeToAndCall(address newImplementation, bytes calldata data)... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@aave/aave-stake/contracts/lib/BaseAdminUpgradeabilityProxy.sol\":1670:1766  function implementation() external ifAdmin returns (address) {... */\n    tag_27:\n        /* \"@aave/aave-stake/contracts/lib/BaseAdminUpgradeabilityProxy.sol\":1722:1729  address */\n      0x00\n        /* \"@aave/aave-stake/contracts/lib/BaseAdminUpgradeabilityProxy.sol\":1405:1413  _admin() */\n      tag_75\n        /* \"@aave/aave-stake/contracts/lib/BaseAdminUpgradeabilityProxy.sol\":1405:1411  _admin */\n      tag_56\n        /* \"@aave/aave-stake/contracts/lib/BaseAdminUpgradeabilityProxy.sol\":1405:1413  _admin() */\n      jump\t// in\n    tag_75:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@aave/aave-stake/contracts/lib/BaseAdminUpgradeabilityProxy.sol\":1391:1413  msg.sender == _admin() */\n      and\n        /* \"@aave/aave-stake/contracts/lib/BaseAdminUpgradeabilityProxy.sol\":1391:1401  msg.sender */\n      caller\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@aave/aave-stake/contracts/lib/BaseAdminUpgradeabilityProxy.sol\":1391:1413  msg.sender == _admin() */\n      and\n      eq\n        /* \"@aave/aave-stake/contracts/lib/BaseAdminUpgradeabilityProxy.sol\":1387:1463  if (msg.sender == _admin()) {... */\n      iszero\n      tag_76\n      jumpi\n        /* \"@aave/aave-stake/contracts/lib/BaseAdminUpgradeabilityProxy.sol\":1744:1761  _implementation() */\n      tag_78\n        /* \"@aave/aave-stake/contracts/lib/BaseAdminUpgradeabilityProxy.sol\":1744:1759  _implementation */\n      tag_52\n        /* \"@aave/aave-stake/contracts/lib/BaseAdminUpgradeabilityProxy.sol\":1744:1761  _implementation() */\n      jump\t// in\n    tag_78:\n        /* \"@aave/aave-stake/contracts/lib/BaseAdminUpgradeabilityProxy.sol\":1737:1761  return _implementation() */\n      swap1\n      pop\n        /* \"@aave/aave-stake/contracts/lib/BaseAdminUpgradeabilityProxy.sol\":1387:1463  if (msg.sender == _admin()) {... */\n      jump(tag_80)\n    tag_76:\n        /* \"@aave/aave-stake/contracts/lib/BaseAdminUpgradeabilityProxy.sol\":1445:1456  _fallback() */\n      tag_80\n        /* \"@aave/aave-stake/contracts/lib/BaseAdminUpgradeabilityProxy.sol\":1445:1454  _fallback */\n      tag_14\n        /* \"@aave/aave-stake/contracts/lib/BaseAdminUpgradeabilityProxy.sol\":1445:1456  _fallback() */\n      jump\t// in\n    tag_80:\n        /* \"@aave/aave-stake/contracts/lib/BaseAdminUpgradeabilityProxy.sol\":1670:1766  function implementation() external ifAdmin returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"@aave/aave-stake/contracts/lib/BaseAdminUpgradeabilityProxy.sol\":1942:2166  function changeAdmin(address newAdmin) external ifAdmin {... */\n    tag_31:\n        /* \"@aave/aave-stake/contracts/lib/BaseAdminUpgradeabilityProxy.sol\":1405:1413  _admin() */\n      tag_82\n        /* \"@aave/aave-stake/contracts/lib/BaseAdminUpgradeabilityProxy.sol\":1405:1411  _admin */\n      tag_56\n        /* \"@aave/aave-stake/contracts/lib/BaseAdminUpgradeabilityProxy.sol\":1405:1413  _admin() */\n      jump\t// in\n    tag_82:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@aave/aave-stake/contracts/lib/BaseAdminUpgradeabilityProxy.sol\":1391:1413  msg.sender == _admin() */\n      and\n        /* \"@aave/aave-stake/contracts/lib/BaseAdminUpgradeabilityProxy.sol\":1391:1401  msg.sender */\n      caller\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@aave/aave-stake/contracts/lib/BaseAdminUpgradeabilityProxy.sol\":1391:1413  msg.sender == _admin() */\n      and\n      eq\n        /* \"@aave/aave-stake/contracts/lib/BaseAdminUpgradeabilityProxy.sol\":1387:1463  if (msg.sender == _admin()) {... */\n      iszero\n      tag_57\n      jumpi\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@aave/aave-stake/contracts/lib/BaseAdminUpgradeabilityProxy.sol\":2012:2034  newAdmin != address(0) */\n      dup2\n      and\n        /* \"@aave/aave-stake/contracts/lib/BaseAdminUpgradeabilityProxy.sol\":2004:2093  require(newAdmin != address(0), 'Cannot change the admin of a proxy to the zero address') */\n      tag_85\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x36\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_37112268ceb11e15373f32f9374a1f3287d0a3e6e5a9a435ac06367e6cd0cf00\n      0x36\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_85:\n        /* \"@aave/aave-stake/contracts/lib/BaseAdminUpgradeabilityProxy.sol\":2104:2136  AdminChanged(_admin(), newAdmin) */\n      0x7e644d79422f17c01e4894b5f4f588d331ebfa28653d42ae832dc59e38c9798f\n        /* \"@aave/aave-stake/contracts/lib/BaseAdminUpgradeabilityProxy.sol\":2117:2125  _admin() */\n      tag_86\n        /* \"@aave/aave-stake/contracts/lib/BaseAdminUpgradeabilityProxy.sol\":2117:2123  _admin */\n      tag_56\n        /* \"@aave/aave-stake/contracts/lib/BaseAdminUpgradeabilityProxy.sol\":2117:2125  _admin() */\n      jump\t// in\n    tag_86:\n        /* \"@aave/aave-stake/contracts/lib/BaseAdminUpgradeabilityProxy.sol\":2104:2136  AdminChanged(_admin(), newAdmin) */\n      0x40\n      dup1\n      mload\n      sub(shl(0xa0, 0x01), 0x01)\n      swap3\n      dup4\n      and\n      dup2\n      mstore\n      swap2\n      dup5\n      and\n      0x20\n      dup4\n      add\n      mstore\n      dup1\n      mload\n      swap2\n      dup3\n      swap1\n      sub\n      add\n      swap1\n      log1\n        /* \"@aave/aave-stake/contracts/lib/BaseAdminUpgradeabilityProxy.sol\":2142:2161  _setAdmin(newAdmin) */\n      tag_59\n        /* \"@aave/aave-stake/contracts/lib/BaseAdminUpgradeabilityProxy.sol\":2152:2160  newAdmin */\n      dup2\n        /* \"@aave/aave-stake/contracts/lib/BaseAdminUpgradeabilityProxy.sol\":2142:2151  _setAdmin */\n      tag_88\n        /* \"@aave/aave-stake/contracts/lib/BaseAdminUpgradeabilityProxy.sol\":2142:2161  _setAdmin(newAdmin) */\n      jump\t// in\n        /* \"@aave/aave-stake/contracts/lib/InitializableAdminUpgradeabilityProxy.sol\":1141:1464  function initialize(... */\n    tag_37:\n        /* \"@aave/aave-stake/contracts/lib/InitializableAdminUpgradeabilityProxy.sol\":1287:1288  0 */\n      0x00\n        /* \"@aave/aave-stake/contracts/lib/InitializableAdminUpgradeabilityProxy.sol\":1258:1275  _implementation() */\n      tag_92\n        /* \"@aave/aave-stake/contracts/lib/InitializableAdminUpgradeabilityProxy.sol\":1258:1273  _implementation */\n      tag_52\n        /* \"@aave/aave-stake/contracts/lib/InitializableAdminUpgradeabilityProxy.sol\":1258:1275  _implementation() */\n      jump\t// in\n    tag_92:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@aave/aave-stake/contracts/lib/InitializableAdminUpgradeabilityProxy.sol\":1258:1289  _implementation() == address(0) */\n      and\n      eq\n        /* \"@aave/aave-stake/contracts/lib/InitializableAdminUpgradeabilityProxy.sol\":1250:1290  require(_implementation() == address(0)) */\n      tag_93\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_93:\n        /* \"@aave/aave-stake/contracts/lib/InitializableAdminUpgradeabilityProxy.sol\":1296:1354  InitializableUpgradeabilityProxy.initialize(_logic, _data) */\n      tag_94\n        /* \"@aave/aave-stake/contracts/lib/InitializableAdminUpgradeabilityProxy.sol\":1340:1346  _logic */\n      dup4\n        /* \"@aave/aave-stake/contracts/lib/InitializableAdminUpgradeabilityProxy.sol\":1348:1353  _data */\n      dup3\n        /* \"@aave/aave-stake/contracts/lib/InitializableAdminUpgradeabilityProxy.sol\":1296:1339  InitializableUpgradeabilityProxy.initialize */\n      tag_43\n        /* \"@aave/aave-stake/contracts/lib/InitializableAdminUpgradeabilityProxy.sol\":1296:1354  InitializableUpgradeabilityProxy.initialize(_logic, _data) */\n      jump\t// in\n    tag_94:\n        /* \"@aave/aave-stake/contracts/lib/InitializableAdminUpgradeabilityProxy.sol\":1442:1459  _setAdmin(_admin) */\n      tag_73\n        /* \"@aave/aave-stake/contracts/lib/InitializableAdminUpgradeabilityProxy.sol\":1452:1458  _admin */\n      dup3\n        /* \"@aave/aave-stake/contracts/lib/InitializableAdminUpgradeabilityProxy.sol\":1442:1451  _setAdmin */\n      tag_88\n        /* \"@aave/aave-stake/contracts/lib/InitializableAdminUpgradeabilityProxy.sol\":1442:1459  _setAdmin(_admin) */\n      jump\t// in\n        /* \"@aave/aave-stake/contracts/lib/InitializableUpgradeabilityProxy.sol\":962:1327  function initialize(address _logic, bytes memory _data) public payable {... */\n    tag_43:\n        /* \"@aave/aave-stake/contracts/lib/InitializableUpgradeabilityProxy.sol\":1076:1077  0 */\n      0x00\n        /* \"@aave/aave-stake/contracts/lib/InitializableUpgradeabilityProxy.sol\":1047:1064  _implementation() */\n      tag_98\n        /* \"@aave/aave-stake/contracts/lib/InitializableUpgradeabilityProxy.sol\":1047:1062  _implementation */\n      tag_52\n        /* \"@aave/aave-stake/contracts/lib/InitializableUpgradeabilityProxy.sol\":1047:1064  _implementation() */\n      jump\t// in\n    tag_98:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@aave/aave-stake/contracts/lib/InitializableUpgradeabilityProxy.sol\":1047:1078  _implementation() == address(0) */\n      and\n      eq\n        /* \"@aave/aave-stake/contracts/lib/InitializableUpgradeabilityProxy.sol\":1039:1079  require(_implementation() == address(0)) */\n      tag_99\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_99:\n        /* \"@aave/aave-stake/contracts/lib/InitializableUpgradeabilityProxy.sol\":1185:1211  _setImplementation(_logic) */\n      tag_101\n        /* \"@aave/aave-stake/contracts/lib/InitializableUpgradeabilityProxy.sol\":1204:1210  _logic */\n      dup3\n        /* \"@aave/aave-stake/contracts/lib/InitializableUpgradeabilityProxy.sol\":1185:1203  _setImplementation */\n      tag_102\n        /* \"@aave/aave-stake/contracts/lib/InitializableUpgradeabilityProxy.sol\":1185:1211  _setImplementation(_logic) */\n      jump\t// in\n    tag_101:\n        /* \"@aave/aave-stake/contracts/lib/InitializableUpgradeabilityProxy.sol\":1221:1233  _data.length */\n      dup1\n      mload\n        /* \"@aave/aave-stake/contracts/lib/InitializableUpgradeabilityProxy.sol\":1221:1237  _data.length > 0 */\n      iszero\n        /* \"@aave/aave-stake/contracts/lib/InitializableUpgradeabilityProxy.sol\":1217:1323  if (_data.length > 0) {... */\n      tag_103\n      jumpi\n        /* \"@aave/aave-stake/contracts/lib/InitializableUpgradeabilityProxy.sol\":1248:1260  bool success */\n      0x00\n        /* \"@aave/aave-stake/contracts/lib/InitializableUpgradeabilityProxy.sol\":1266:1272  _logic */\n      dup3\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@aave/aave-stake/contracts/lib/InitializableUpgradeabilityProxy.sol\":1266:1285  _logic.delegatecall */\n      and\n        /* \"@aave/aave-stake/contracts/lib/InitializableUpgradeabilityProxy.sol\":1286:1291  _data */\n      dup3\n        /* \"@aave/aave-stake/contracts/lib/InitializableUpgradeabilityProxy.sol\":1266:1292  _logic.delegatecall(_data) */\n      mload(0x40)\n      dup1\n      dup3\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      dup1\n      dup4\n      dup4\n    tag_104:\n      0x20\n      dup4\n      lt\n      tag_106\n      jumpi\n      dup1\n      mload\n      dup3\n      mstore\n      not(0x1f)\n      swap1\n      swap3\n      add\n      swap2\n      0x20\n      swap2\n      dup3\n      add\n      swap2\n      add\n      jump(tag_104)\n    tag_106:\n      0x01\n      dup4\n      0x20\n      sub\n      0x0100\n      exp\n      sub\n      dup1\n      not\n      dup3\n      mload\n      and\n      dup2\n      dup5\n      mload\n      and\n      dup1\n      dup3\n      or\n      dup6\n      mstore\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n      add\n      swap2\n      pop\n      pop\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      gas\n      delegatecall\n      swap2\n      pop\n      pop\n      returndatasize\n      dup1\n      0x00\n      dup2\n      eq\n      tag_109\n      jumpi\n      mload(0x40)\n      swap2\n      pop\n      and(add(returndatasize, 0x3f), not(0x1f))\n      dup3\n      add\n      0x40\n      mstore\n      returndatasize\n      dup3\n      mstore\n      returndatasize\n      0x00\n      0x20\n      dup5\n      add\n      returndatacopy\n      jump(tag_108)\n    tag_109:\n      0x60\n      swap2\n      pop\n    tag_108:\n      pop\n        /* \"@aave/aave-stake/contracts/lib/InitializableUpgradeabilityProxy.sol\":1247:1292  (bool success, ) = _logic.delegatecall(_data) */\n      pop\n      swap1\n      pop\n        /* \"@aave/aave-stake/contracts/lib/InitializableUpgradeabilityProxy.sol\":1308:1315  success */\n      dup1\n        /* \"@aave/aave-stake/contracts/lib/InitializableUpgradeabilityProxy.sol\":1300:1316  require(success) */\n      tag_73\n      jumpi\n      0x00\n      dup1\n      revert\n        /* \"@aave/aave-stake/contracts/lib/InitializableUpgradeabilityProxy.sol\":1217:1323  if (_data.length > 0) {... */\n    tag_103:\n        /* \"@aave/aave-stake/contracts/lib/InitializableUpgradeabilityProxy.sol\":962:1327  function initialize(address _logic, bytes memory _data) public payable {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@aave/aave-stake/contracts/lib/BaseAdminUpgradeabilityProxy.sol\":1528:1606  function admin() external ifAdmin returns (address) {... */\n    tag_46:\n        /* \"@aave/aave-stake/contracts/lib/BaseAdminUpgradeabilityProxy.sol\":1571:1578  address */\n      0x00\n        /* \"@aave/aave-stake/contracts/lib/BaseAdminUpgradeabilityProxy.sol\":1405:1413  _admin() */\n      tag_112\n        /* \"@aave/aave-stake/contracts/lib/BaseAdminUpgradeabilityProxy.sol\":1405:1411  _admin */\n      tag_56\n        /* \"@aave/aave-stake/contracts/lib/BaseAdminUpgradeabilityProxy.sol\":1405:1413  _admin() */\n      jump\t// in\n    tag_112:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@aave/aave-stake/contracts/lib/BaseAdminUpgradeabilityProxy.sol\":1391:1413  msg.sender == _admin() */\n      and\n        /* \"@aave/aave-stake/contracts/lib/BaseAdminUpgradeabilityProxy.sol\":1391:1401  msg.sender */\n      caller\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@aave/aave-stake/contracts/lib/BaseAdminUpgradeabilityProxy.sol\":1391:1413  msg.sender == _admin() */\n      and\n      eq\n        /* \"@aave/aave-stake/contracts/lib/BaseAdminUpgradeabilityProxy.sol\":1387:1463  if (msg.sender == _admin()) {... */\n      iszero\n      tag_76\n      jumpi\n        /* \"@aave/aave-stake/contracts/lib/BaseAdminUpgradeabilityProxy.sol\":1593:1601  _admin() */\n      tag_78\n        /* \"@aave/aave-stake/contracts/lib/BaseAdminUpgradeabilityProxy.sol\":1593:1599  _admin */\n      tag_56\n        /* \"@aave/aave-stake/contracts/lib/BaseAdminUpgradeabilityProxy.sol\":1593:1601  _admin() */\n      jump\t// in\n        /* \"@aave/aave-stake/contracts/lib/InitializableAdminUpgradeabilityProxy.sol\":1539:1674  function _willFallback() internal override(BaseAdminUpgradeabilityProxy, Proxy) {... */\n    tag_49:\n        /* \"@aave/aave-stake/contracts/lib/InitializableAdminUpgradeabilityProxy.sol\":1625:1669  BaseAdminUpgradeabilityProxy._willFallback() */\n      tag_50\n        /* \"@aave/aave-stake/contracts/lib/InitializableAdminUpgradeabilityProxy.sol\":1625:1667  BaseAdminUpgradeabilityProxy._willFallback */\n      tag_120\n        /* \"@aave/aave-stake/contracts/lib/InitializableAdminUpgradeabilityProxy.sol\":1625:1669  BaseAdminUpgradeabilityProxy._willFallback() */\n      jump\t// in\n        /* \"@aave/aave-stake/contracts/lib/BaseUpgradeabilityProxy.sol\":1100:1265  function _implementation() internal view override returns (address impl) {... */\n    tag_52:\n        /* \"@aave/aave-stake/contracts/lib/BaseUpgradeabilityProxy.sol\":915:981  0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc */\n      0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc\n        /* \"@aave/aave-stake/contracts/lib/BaseUpgradeabilityProxy.sol\":1244:1255  sload(slot) */\n      sload\n      swap1\n        /* \"@aave/aave-stake/contracts/lib/BaseUpgradeabilityProxy.sol\":1228:1261  {... */\n      jump\t// out\n        /* \"@aave/aave-stake/contracts/lib/Proxy.sol\":1034:1819  function _delegate(address implementation) internal {... */\n    tag_53:\n        /* \"@aave/aave-stake/contracts/lib/Proxy.sol\":1336:1350  calldatasize() */\n      calldatasize\n        /* \"@aave/aave-stake/contracts/lib/Proxy.sol\":1333:1334  0 */\n      0x00\n        /* \"@aave/aave-stake/contracts/lib/Proxy.sol\":1330:1331  0 */\n      dup1\n        /* \"@aave/aave-stake/contracts/lib/Proxy.sol\":1317:1351  calldatacopy(0, 0, calldatasize()) */\n      calldatacopy\n        /* \"@aave/aave-stake/contracts/lib/Proxy.sol\":1532:1533  0 */\n      0x00\n        /* \"@aave/aave-stake/contracts/lib/Proxy.sol\":1529:1530  0 */\n      dup1\n        /* \"@aave/aave-stake/contracts/lib/Proxy.sol\":1513:1527  calldatasize() */\n      calldatasize\n        /* \"@aave/aave-stake/contracts/lib/Proxy.sol\":1510:1511  0 */\n      0x00\n        /* \"@aave/aave-stake/contracts/lib/Proxy.sol\":1494:1508  implementation */\n      dup5\n        /* \"@aave/aave-stake/contracts/lib/Proxy.sol\":1487:1492  gas() */\n      gas\n        /* \"@aave/aave-stake/contracts/lib/Proxy.sol\":1474:1534  delegatecall(gas(), implementation, 0, calldatasize(), 0, 0) */\n      delegatecall\n        /* \"@aave/aave-stake/contracts/lib/Proxy.sol\":1596:1612  returndatasize() */\n      returndatasize\n        /* \"@aave/aave-stake/contracts/lib/Proxy.sol\":1593:1594  0 */\n      0x00\n        /* \"@aave/aave-stake/contracts/lib/Proxy.sol\":1590:1591  0 */\n      dup1\n        /* \"@aave/aave-stake/contracts/lib/Proxy.sol\":1575:1613  returndatacopy(0, 0, returndatasize()) */\n      returndatacopy\n        /* \"@aave/aave-stake/contracts/lib/Proxy.sol\":1628:1634  result */\n      dup1\n        /* \"@aave/aave-stake/contracts/lib/Proxy.sol\":1687:1743  case 0 {... */\n      dup1\n      iszero\n      tag_124\n      jumpi\n        /* \"@aave/aave-stake/contracts/lib/Proxy.sol\":1782:1798  returndatasize() */\n      returndatasize\n        /* \"@aave/aave-stake/contracts/lib/Proxy.sol\":1779:1780  0 */\n      0x00\n        /* \"@aave/aave-stake/contracts/lib/Proxy.sol\":1772:1799  return(0, returndatasize()) */\n      return\n        /* \"@aave/aave-stake/contracts/lib/Proxy.sol\":1687:1743  case 0 {... */\n    tag_124:\n        /* \"@aave/aave-stake/contracts/lib/Proxy.sol\":1716:1732  returndatasize() */\n      returndatasize\n        /* \"@aave/aave-stake/contracts/lib/Proxy.sol\":1713:1714  0 */\n      0x00\n        /* \"@aave/aave-stake/contracts/lib/Proxy.sol\":1706:1733  revert(0, returndatasize()) */\n      revert\n        /* \"@aave/aave-stake/contracts/lib/BaseAdminUpgradeabilityProxy.sol\":3255:3391  function _admin() internal view returns (address adm) {... */\n    tag_56:\n        /* \"@aave/aave-stake/contracts/lib/BaseAdminUpgradeabilityProxy.sol\":1106:1172  0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103 */\n      0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103\n        /* \"@aave/aave-stake/contracts/lib/BaseAdminUpgradeabilityProxy.sol\":3370:3381  sload(slot) */\n      sload\n      swap1\n        /* \"@aave/aave-stake/contracts/lib/BaseAdminUpgradeabilityProxy.sol\":3355:3387  {... */\n      jump\t// out\n        /* \"@aave/aave-stake/contracts/lib/BaseUpgradeabilityProxy.sol\":1400:1542  function _upgradeTo(address newImplementation) internal {... */\n    tag_60:\n        /* \"@aave/aave-stake/contracts/lib/BaseUpgradeabilityProxy.sol\":1462:1499  _setImplementation(newImplementation) */\n      tag_127\n        /* \"@aave/aave-stake/contracts/lib/BaseUpgradeabilityProxy.sol\":1481:1498  newImplementation */\n      dup2\n        /* \"@aave/aave-stake/contracts/lib/BaseUpgradeabilityProxy.sol\":1462:1480  _setImplementation */\n      tag_102\n        /* \"@aave/aave-stake/contracts/lib/BaseUpgradeabilityProxy.sol\":1462:1499  _setImplementation(newImplementation) */\n      jump\t// in\n    tag_127:\n        /* \"@aave/aave-stake/contracts/lib/BaseUpgradeabilityProxy.sol\":1510:1537  Upgraded(newImplementation) */\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n      dup3\n      and\n      swap1\n      0xbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b\n      swap1\n      0x00\n      swap1\n      log2\n        /* \"@aave/aave-stake/contracts/lib/BaseUpgradeabilityProxy.sol\":1400:1542  function _upgradeTo(address newImplementation) internal {... */\n      pop\n      jump\t// out\n        /* \"@aave/aave-stake/contracts/lib/BaseAdminUpgradeabilityProxy.sol\":3507:3640  function _setAdmin(address newAdmin) internal {... */\n    tag_88:\n        /* \"@aave/aave-stake/contracts/lib/BaseAdminUpgradeabilityProxy.sol\":1106:1172  0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103 */\n      0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103\n        /* \"@aave/aave-stake/contracts/lib/BaseAdminUpgradeabilityProxy.sol\":3608:3630  sstore(slot, newAdmin) */\n      sstore\n        /* \"@aave/aave-stake/contracts/lib/BaseAdminUpgradeabilityProxy.sol\":3600:3636  {... */\n      jump\t// out\n        /* \"@aave/aave-stake/contracts/lib/BaseUpgradeabilityProxy.sol\":1679:1982  function _setImplementation(address newImplementation) internal {... */\n    tag_102:\n        /* \"@aave/aave-stake/contracts/lib/BaseUpgradeabilityProxy.sol\":1764:1801  Address.isContract(newImplementation) */\n      tag_130\n        /* \"@aave/aave-stake/contracts/lib/BaseUpgradeabilityProxy.sol\":1783:1800  newImplementation */\n      dup2\n        /* \"@aave/aave-stake/contracts/lib/BaseUpgradeabilityProxy.sol\":1764:1782  Address.isContract */\n      tag_131\n        /* \"@aave/aave-stake/contracts/lib/BaseUpgradeabilityProxy.sol\":1764:1801  Address.isContract(newImplementation) */\n      jump\t// in\n    tag_130:\n        /* \"@aave/aave-stake/contracts/lib/BaseUpgradeabilityProxy.sol\":1749:1876  require(... */\n      tag_132\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x3b\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_b5145a64ce8c406e5785204fe5b300f0ceda96d6636350b38fdccb9cd8c0c37c\n      0x3b\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_132:\n        /* \"@aave/aave-stake/contracts/lib/BaseUpgradeabilityProxy.sol\":915:981  0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc */\n      0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc\n        /* \"@aave/aave-stake/contracts/lib/BaseUpgradeabilityProxy.sol\":1941:1972  sstore(slot, newImplementation) */\n      sstore\n        /* \"@aave/aave-stake/contracts/lib/BaseUpgradeabilityProxy.sol\":1933:1978  {... */\n      jump\t// out\n        /* \"@aave/aave-stake/contracts/lib/BaseAdminUpgradeabilityProxy.sol\":3715:3889  function _willFallback() internal virtual override {... */\n    tag_120:\n        /* \"@aave/aave-stake/contracts/lib/BaseAdminUpgradeabilityProxy.sol\":3794:3802  _admin() */\n      tag_134\n        /* \"@aave/aave-stake/contracts/lib/BaseAdminUpgradeabilityProxy.sol\":3794:3800  _admin */\n      tag_56\n        /* \"@aave/aave-stake/contracts/lib/BaseAdminUpgradeabilityProxy.sol\":3794:3802  _admin() */\n      jump\t// in\n    tag_134:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@aave/aave-stake/contracts/lib/BaseAdminUpgradeabilityProxy.sol\":3780:3802  msg.sender != _admin() */\n      and\n        /* \"@aave/aave-stake/contracts/lib/BaseAdminUpgradeabilityProxy.sol\":3780:3790  msg.sender */\n      caller\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@aave/aave-stake/contracts/lib/BaseAdminUpgradeabilityProxy.sol\":3780:3802  msg.sender != _admin() */\n      and\n      eq\n      iszero\n        /* \"@aave/aave-stake/contracts/lib/BaseAdminUpgradeabilityProxy.sol\":3772:3857  require(msg.sender != _admin(), 'Cannot call fallback function from the proxy admin') */\n      tag_135\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x32\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_08b466bde770d6d309a22d90ec051a62ad397be6218a53e741989877ec297fc9\n      0x32\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_135:\n        /* \"@aave/aave-stake/contracts/lib/BaseAdminUpgradeabilityProxy.sol\":3863:3884  super._willFallback() */\n      tag_50\n        /* \"@aave/aave-stake/contracts/lib/BaseAdminUpgradeabilityProxy.sol\":3863:3882  super._willFallback */\n      tag_50\n        /* \"@aave/aave-stake/contracts/lib/BaseAdminUpgradeabilityProxy.sol\":3863:3884  super._willFallback() */\n      jump\t// in\n        /* \"@aave/aave-stake/contracts/lib/Address.sol\":743:1329  function isContract(address account) internal view returns (bool) {... */\n    tag_131:\n        /* \"@aave/aave-stake/contracts/lib/Address.sol\":803:807  bool */\n      0x00\n        /* \"@aave/aave-stake/contracts/lib/Address.sol\":1242:1262  extcodehash(account) */\n      dup2\n      extcodehash\n        /* \"@aave/aave-stake/contracts/lib/Address.sol\":1089:1155  0xc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470 */\n      0xc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470\n        /* \"@aave/aave-stake/contracts/lib/Address.sol\":1281:1304  codehash != accountHash */\n      dup2\n      dup2\n      eq\n      dup1\n      iszero\n      swap1\n        /* \"@aave/aave-stake/contracts/lib/Address.sol\":1281:1323  codehash != accountHash && codehash != 0x0 */\n      tag_139\n      jumpi\n      pop\n        /* \"@aave/aave-stake/contracts/lib/Address.sol\":1308:1323  codehash != 0x0 */\n      dup2\n      iszero\n      iszero\n        /* \"@aave/aave-stake/contracts/lib/Address.sol\":1281:1323  codehash != accountHash && codehash != 0x0 */\n    tag_139:\n        /* \"@aave/aave-stake/contracts/lib/Address.sol\":1273:1324  return (codehash != accountHash && codehash != 0x0) */\n      swap5\n        /* \"@aave/aave-stake/contracts/lib/Address.sol\":743:1329  function isContract(address account) internal view returns (bool) {... */\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n    stop\n    data_08b466bde770d6d309a22d90ec051a62ad397be6218a53e741989877ec297fc9 43616e6e6f742063616c6c2066616c6c6261636b2066756e6374696f6e2066726f6d207468652070726f78792061646d696e\n    data_37112268ceb11e15373f32f9374a1f3287d0a3e6e5a9a435ac06367e6cd0cf00 43616e6e6f74206368616e6765207468652061646d696e206f6620612070726f787920746f20746865207a65726f2061646472657373\n    data_b5145a64ce8c406e5785204fe5b300f0ceda96d6636350b38fdccb9cd8c0c37c 43616e6e6f742073657420612070726f787920696d706c656d656e746174696f6e20746f2061206e6f6e2d636f6e74726163742061646472657373\n\n    auxdata: 0xa2646970667358221220afd841edb7944f16318a0a40ccfd88fc9b0847fa5b0bdf29edbe6d9c4f23b7c664736f6c63430007050033\n}\n",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50610905806100206000396000f3fe6080604052600436106100705760003560e01c80638f2839701161004e5780638f2839701461015e578063cf7a1d7714610191578063d1f5789414610250578063f851a4401461030657610070565b80633659cfe61461007a5780634f1ef286146100ad5780635c60da1b1461012d575b61007861031b565b005b34801561008657600080fd5b506100786004803603602081101561009d57600080fd5b50356001600160a01b0316610335565b610078600480360360408110156100c357600080fd5b6001600160a01b0382351691908101906040810160208201356401000000008111156100ee57600080fd5b82018360208201111561010057600080fd5b8035906020019184600183028401116401000000008311171561012257600080fd5b50909250905061036f565b34801561013957600080fd5b5061014261041c565b604080516001600160a01b039092168252519081900360200190f35b34801561016a57600080fd5b506100786004803603602081101561018157600080fd5b50356001600160a01b0316610459565b610078600480360360608110156101a757600080fd5b6001600160a01b0382358116926020810135909116918101906060810160408201356401000000008111156101db57600080fd5b8201836020820111156101ed57600080fd5b8035906020019184600183028401116401000000008311171561020f57600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250929550610513945050505050565b6100786004803603604081101561026657600080fd5b6001600160a01b03823516919081019060408101602082013564010000000081111561029157600080fd5b8201836020820111156102a357600080fd5b803590602001918460018302840111640100000000831117156102c557600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250929550610543945050505050565b34801561031257600080fd5b50610142610623565b61032361064e565b61033361032e610656565b61067b565b565b61033d61069f565b6001600160a01b0316336001600160a01b031614156103645761035f816106c4565b61036c565b61036c61031b565b50565b61037761069f565b6001600160a01b0316336001600160a01b0316141561040f57610399836106c4565b6000836001600160a01b031683836040518083838082843760405192019450600093509091505080830381855af49150503d80600081146103f6576040519150601f19603f3d011682016040523d82523d6000602084013e6103fb565b606091505b505090508061040957600080fd5b50610417565b61041761031b565b505050565b600061042661069f565b6001600160a01b0316336001600160a01b0316141561044e57610447610656565b9050610456565b61045661031b565b90565b61046161069f565b6001600160a01b0316336001600160a01b03161415610364576001600160a01b0381166104bf5760405162461bcd60e51b815260040180806020018281038252603681526020018061085f6036913960400191505060405180910390fd5b7f7e644d79422f17c01e4894b5f4f588d331ebfa28653d42ae832dc59e38c9798f6104e861069f565b604080516001600160a01b03928316815291841660208301528051918290030190a161035f81610704565b600061051d610656565b6001600160a01b03161461053057600080fd5b61053a8382610543565b61041782610704565b600061054d610656565b6001600160a01b03161461056057600080fd5b61056982610728565b80511561061f576000826001600160a01b0316826040518082805190602001908083835b602083106105ac5780518252601f19909201916020918201910161058d565b6001836020036101000a038019825116818451168082178552505050505050905001915050600060405180830381855af49150503d806000811461060c576040519150601f19603f3d011682016040523d82523d6000602084013e610611565b606091505b505090508061041757600080fd5b5050565b600061062d61069f565b6001600160a01b0316336001600160a01b0316141561044e5761044761069f565b610333610790565b7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc5490565b3660008037600080366000845af43d6000803e80801561069a573d6000f35b3d6000fd5b7fb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d61035490565b6106cd81610728565b6040516001600160a01b038216907fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b90600090a250565b7fb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d610355565b610731816107f0565b61076c5760405162461bcd60e51b815260040180806020018281038252603b815260200180610895603b913960400191505060405180910390fd5b7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc55565b61079861069f565b6001600160a01b0316336001600160a01b031614156107e85760405162461bcd60e51b815260040180806020018281038252603281526020018061082d6032913960400191505060405180910390fd5b610333610333565b6000813f7fc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a47081811480159061082457508115155b94935050505056fe43616e6e6f742063616c6c2066616c6c6261636b2066756e6374696f6e2066726f6d207468652070726f78792061646d696e43616e6e6f74206368616e6765207468652061646d696e206f6620612070726f787920746f20746865207a65726f206164647265737343616e6e6f742073657420612070726f787920696d706c656d656e746174696f6e20746f2061206e6f6e2d636f6e74726163742061646472657373a2646970667358221220afd841edb7944f16318a0a40ccfd88fc9b0847fa5b0bdf29edbe6d9c4f23b7c664736f6c63430007050033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x905 DUP1 PUSH2 0x20 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x70 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8F283970 GT PUSH2 0x4E JUMPI DUP1 PUSH4 0x8F283970 EQ PUSH2 0x15E JUMPI DUP1 PUSH4 0xCF7A1D77 EQ PUSH2 0x191 JUMPI DUP1 PUSH4 0xD1F57894 EQ PUSH2 0x250 JUMPI DUP1 PUSH4 0xF851A440 EQ PUSH2 0x306 JUMPI PUSH2 0x70 JUMP JUMPDEST DUP1 PUSH4 0x3659CFE6 EQ PUSH2 0x7A JUMPI DUP1 PUSH4 0x4F1EF286 EQ PUSH2 0xAD JUMPI DUP1 PUSH4 0x5C60DA1B EQ PUSH2 0x12D JUMPI JUMPDEST PUSH2 0x78 PUSH2 0x31B JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x86 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x78 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x9D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x335 JUMP JUMPDEST PUSH2 0x78 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0xC3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 CALLDATALOAD AND SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH1 0x40 DUP2 ADD PUSH1 0x20 DUP3 ADD CALLDATALOAD PUSH5 0x100000000 DUP2 GT ISZERO PUSH2 0xEE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0x100 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x1 DUP4 MUL DUP5 ADD GT PUSH5 0x100000000 DUP4 GT OR ISZERO PUSH2 0x122 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP SWAP1 SWAP3 POP SWAP1 POP PUSH2 0x36F JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x139 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x142 PUSH2 0x41C JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x16A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x78 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x181 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x459 JUMP JUMPDEST PUSH2 0x78 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x60 DUP2 LT ISZERO PUSH2 0x1A7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 CALLDATALOAD DUP2 AND SWAP3 PUSH1 0x20 DUP2 ADD CALLDATALOAD SWAP1 SWAP2 AND SWAP2 DUP2 ADD SWAP1 PUSH1 0x60 DUP2 ADD PUSH1 0x40 DUP3 ADD CALLDATALOAD PUSH5 0x100000000 DUP2 GT ISZERO PUSH2 0x1DB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0x1ED JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x1 DUP4 MUL DUP5 ADD GT PUSH5 0x100000000 DUP4 GT OR ISZERO PUSH2 0x20F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 DUP1 DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP SWAP3 SWAP6 POP PUSH2 0x513 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH2 0x78 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x266 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 CALLDATALOAD AND SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH1 0x40 DUP2 ADD PUSH1 0x20 DUP3 ADD CALLDATALOAD PUSH5 0x100000000 DUP2 GT ISZERO PUSH2 0x291 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0x2A3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x1 DUP4 MUL DUP5 ADD GT PUSH5 0x100000000 DUP4 GT OR ISZERO PUSH2 0x2C5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 DUP1 DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP SWAP3 SWAP6 POP PUSH2 0x543 SWAP5 POP POP POP POP POP JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x312 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x142 PUSH2 0x623 JUMP JUMPDEST PUSH2 0x323 PUSH2 0x64E JUMP JUMPDEST PUSH2 0x333 PUSH2 0x32E PUSH2 0x656 JUMP JUMPDEST PUSH2 0x67B JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x33D PUSH2 0x69F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO PUSH2 0x364 JUMPI PUSH2 0x35F DUP2 PUSH2 0x6C4 JUMP JUMPDEST PUSH2 0x36C JUMP JUMPDEST PUSH2 0x36C PUSH2 0x31B JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x377 PUSH2 0x69F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO PUSH2 0x40F JUMPI PUSH2 0x399 DUP4 PUSH2 0x6C4 JUMP JUMPDEST PUSH1 0x0 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x40 MLOAD SWAP3 ADD SWAP5 POP PUSH1 0x0 SWAP4 POP SWAP1 SWAP2 POP POP DUP1 DUP4 SUB DUP2 DUP6 GAS DELEGATECALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x3F6 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x3FB JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0x409 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x417 JUMP JUMPDEST PUSH2 0x417 PUSH2 0x31B JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x426 PUSH2 0x69F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO PUSH2 0x44E JUMPI PUSH2 0x447 PUSH2 0x656 JUMP JUMPDEST SWAP1 POP PUSH2 0x456 JUMP JUMPDEST PUSH2 0x456 PUSH2 0x31B JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x461 PUSH2 0x69F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO PUSH2 0x364 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x4BF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x36 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x85F PUSH1 0x36 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH32 0x7E644D79422F17C01E4894B5F4F588D331EBFA28653D42AE832DC59E38C9798F PUSH2 0x4E8 PUSH2 0x69F JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND DUP2 MSTORE SWAP2 DUP5 AND PUSH1 0x20 DUP4 ADD MSTORE DUP1 MLOAD SWAP2 DUP3 SWAP1 SUB ADD SWAP1 LOG1 PUSH2 0x35F DUP2 PUSH2 0x704 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x51D PUSH2 0x656 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x530 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x53A DUP4 DUP3 PUSH2 0x543 JUMP JUMPDEST PUSH2 0x417 DUP3 PUSH2 0x704 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x54D PUSH2 0x656 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x560 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x569 DUP3 PUSH2 0x728 JUMP JUMPDEST DUP1 MLOAD ISZERO PUSH2 0x61F JUMPI PUSH1 0x0 DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 PUSH1 0x40 MLOAD DUP1 DUP3 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 JUMPDEST PUSH1 0x20 DUP4 LT PUSH2 0x5AC JUMPI DUP1 MLOAD DUP3 MSTORE PUSH1 0x1F NOT SWAP1 SWAP3 ADD SWAP2 PUSH1 0x20 SWAP2 DUP3 ADD SWAP2 ADD PUSH2 0x58D JUMP JUMPDEST PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB DUP1 NOT DUP3 MLOAD AND DUP2 DUP5 MLOAD AND DUP1 DUP3 OR DUP6 MSTORE POP POP POP POP POP POP SWAP1 POP ADD SWAP2 POP POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 GAS DELEGATECALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x60C JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x611 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0x417 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x62D PUSH2 0x69F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO PUSH2 0x44E JUMPI PUSH2 0x447 PUSH2 0x69F JUMP JUMPDEST PUSH2 0x333 PUSH2 0x790 JUMP JUMPDEST PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC SLOAD SWAP1 JUMP JUMPDEST CALLDATASIZE PUSH1 0x0 DUP1 CALLDATACOPY PUSH1 0x0 DUP1 CALLDATASIZE PUSH1 0x0 DUP5 GAS DELEGATECALL RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY DUP1 DUP1 ISZERO PUSH2 0x69A JUMPI RETURNDATASIZE PUSH1 0x0 RETURN JUMPDEST RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST PUSH32 0xB53127684A568B3173AE13B9F8A6016E243E63B6E8EE1178D6A717850B5D6103 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x6CD DUP2 PUSH2 0x728 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND SWAP1 PUSH32 0xBC7CD75A20EE27FD9ADEBAB32041F755214DBC6BFFA90CC0225B39DA2E5C2D3B SWAP1 PUSH1 0x0 SWAP1 LOG2 POP JUMP JUMPDEST PUSH32 0xB53127684A568B3173AE13B9F8A6016E243E63B6E8EE1178D6A717850B5D6103 SSTORE JUMP JUMPDEST PUSH2 0x731 DUP2 PUSH2 0x7F0 JUMP JUMPDEST PUSH2 0x76C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x3B DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x895 PUSH1 0x3B SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC SSTORE JUMP JUMPDEST PUSH2 0x798 PUSH2 0x69F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO PUSH2 0x7E8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x32 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x82D PUSH1 0x32 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x333 PUSH2 0x333 JUMP JUMPDEST PUSH1 0x0 DUP2 EXTCODEHASH PUSH32 0xC5D2460186F7233C927E7DB2DCC703C0E500B653CA82273B7BFAD8045D85A470 DUP2 DUP2 EQ DUP1 ISZERO SWAP1 PUSH2 0x824 JUMPI POP DUP2 ISZERO ISZERO JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP INVALID NUMBER PUSH2 0x6E6E PUSH16 0x742063616C6C2066616C6C6261636B20 PUSH7 0x756E6374696F6E KECCAK256 PUSH7 0x726F6D20746865 KECCAK256 PUSH17 0x726F78792061646D696E43616E6E6F7420 PUSH4 0x68616E67 PUSH6 0x207468652061 PUSH5 0x6D696E206F PUSH7 0x20612070726F78 PUSH26 0x20746F20746865207A65726F206164647265737343616E6E6F74 KECCAK256 PUSH20 0x657420612070726F787920696D706C656D656E74 PUSH2 0x7469 PUSH16 0x6E20746F2061206E6F6E2D636F6E7472 PUSH2 0x6374 KECCAK256 PUSH2 0x6464 PUSH19 0x657373A2646970667358221220AFD841EDB794 0x4F AND BALANCE DUP11 EXP BLOCKHASH 0xCC REVERT DUP9 0xFC SWAP12 ADDMOD SELFBALANCE STATICCALL JUMPDEST SIGNEXTEND 0xDF 0x29 0xED 0xBE PUSH14 0x9C4F23B7C664736F6C6343000705 STOP CALLER ",
							"sourceMap": "448:1228:3:-:0;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "6080604052600436106100705760003560e01c80638f2839701161004e5780638f2839701461015e578063cf7a1d7714610191578063d1f5789414610250578063f851a4401461030657610070565b80633659cfe61461007a5780634f1ef286146100ad5780635c60da1b1461012d575b61007861031b565b005b34801561008657600080fd5b506100786004803603602081101561009d57600080fd5b50356001600160a01b0316610335565b610078600480360360408110156100c357600080fd5b6001600160a01b0382351691908101906040810160208201356401000000008111156100ee57600080fd5b82018360208201111561010057600080fd5b8035906020019184600183028401116401000000008311171561012257600080fd5b50909250905061036f565b34801561013957600080fd5b5061014261041c565b604080516001600160a01b039092168252519081900360200190f35b34801561016a57600080fd5b506100786004803603602081101561018157600080fd5b50356001600160a01b0316610459565b610078600480360360608110156101a757600080fd5b6001600160a01b0382358116926020810135909116918101906060810160408201356401000000008111156101db57600080fd5b8201836020820111156101ed57600080fd5b8035906020019184600183028401116401000000008311171561020f57600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250929550610513945050505050565b6100786004803603604081101561026657600080fd5b6001600160a01b03823516919081019060408101602082013564010000000081111561029157600080fd5b8201836020820111156102a357600080fd5b803590602001918460018302840111640100000000831117156102c557600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250929550610543945050505050565b34801561031257600080fd5b50610142610623565b61032361064e565b61033361032e610656565b61067b565b565b61033d61069f565b6001600160a01b0316336001600160a01b031614156103645761035f816106c4565b61036c565b61036c61031b565b50565b61037761069f565b6001600160a01b0316336001600160a01b0316141561040f57610399836106c4565b6000836001600160a01b031683836040518083838082843760405192019450600093509091505080830381855af49150503d80600081146103f6576040519150601f19603f3d011682016040523d82523d6000602084013e6103fb565b606091505b505090508061040957600080fd5b50610417565b61041761031b565b505050565b600061042661069f565b6001600160a01b0316336001600160a01b0316141561044e57610447610656565b9050610456565b61045661031b565b90565b61046161069f565b6001600160a01b0316336001600160a01b03161415610364576001600160a01b0381166104bf5760405162461bcd60e51b815260040180806020018281038252603681526020018061085f6036913960400191505060405180910390fd5b7f7e644d79422f17c01e4894b5f4f588d331ebfa28653d42ae832dc59e38c9798f6104e861069f565b604080516001600160a01b03928316815291841660208301528051918290030190a161035f81610704565b600061051d610656565b6001600160a01b03161461053057600080fd5b61053a8382610543565b61041782610704565b600061054d610656565b6001600160a01b03161461056057600080fd5b61056982610728565b80511561061f576000826001600160a01b0316826040518082805190602001908083835b602083106105ac5780518252601f19909201916020918201910161058d565b6001836020036101000a038019825116818451168082178552505050505050905001915050600060405180830381855af49150503d806000811461060c576040519150601f19603f3d011682016040523d82523d6000602084013e610611565b606091505b505090508061041757600080fd5b5050565b600061062d61069f565b6001600160a01b0316336001600160a01b0316141561044e5761044761069f565b610333610790565b7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc5490565b3660008037600080366000845af43d6000803e80801561069a573d6000f35b3d6000fd5b7fb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d61035490565b6106cd81610728565b6040516001600160a01b038216907fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b90600090a250565b7fb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d610355565b610731816107f0565b61076c5760405162461bcd60e51b815260040180806020018281038252603b815260200180610895603b913960400191505060405180910390fd5b7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc55565b61079861069f565b6001600160a01b0316336001600160a01b031614156107e85760405162461bcd60e51b815260040180806020018281038252603281526020018061082d6032913960400191505060405180910390fd5b610333610333565b6000813f7fc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a47081811480159061082457508115155b94935050505056fe43616e6e6f742063616c6c2066616c6c6261636b2066756e6374696f6e2066726f6d207468652070726f78792061646d696e43616e6e6f74206368616e6765207468652061646d696e206f6620612070726f787920746f20746865207a65726f206164647265737343616e6e6f742073657420612070726f787920696d706c656d656e746174696f6e20746f2061206e6f6e2d636f6e74726163742061646472657373a2646970667358221220afd841edb7944f16318a0a40ccfd88fc9b0847fa5b0bdf29edbe6d9c4f23b7c664736f6c63430007050033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x70 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8F283970 GT PUSH2 0x4E JUMPI DUP1 PUSH4 0x8F283970 EQ PUSH2 0x15E JUMPI DUP1 PUSH4 0xCF7A1D77 EQ PUSH2 0x191 JUMPI DUP1 PUSH4 0xD1F57894 EQ PUSH2 0x250 JUMPI DUP1 PUSH4 0xF851A440 EQ PUSH2 0x306 JUMPI PUSH2 0x70 JUMP JUMPDEST DUP1 PUSH4 0x3659CFE6 EQ PUSH2 0x7A JUMPI DUP1 PUSH4 0x4F1EF286 EQ PUSH2 0xAD JUMPI DUP1 PUSH4 0x5C60DA1B EQ PUSH2 0x12D JUMPI JUMPDEST PUSH2 0x78 PUSH2 0x31B JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x86 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x78 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x9D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x335 JUMP JUMPDEST PUSH2 0x78 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0xC3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 CALLDATALOAD AND SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH1 0x40 DUP2 ADD PUSH1 0x20 DUP3 ADD CALLDATALOAD PUSH5 0x100000000 DUP2 GT ISZERO PUSH2 0xEE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0x100 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x1 DUP4 MUL DUP5 ADD GT PUSH5 0x100000000 DUP4 GT OR ISZERO PUSH2 0x122 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP SWAP1 SWAP3 POP SWAP1 POP PUSH2 0x36F JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x139 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x142 PUSH2 0x41C JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x16A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x78 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x181 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x459 JUMP JUMPDEST PUSH2 0x78 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x60 DUP2 LT ISZERO PUSH2 0x1A7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 CALLDATALOAD DUP2 AND SWAP3 PUSH1 0x20 DUP2 ADD CALLDATALOAD SWAP1 SWAP2 AND SWAP2 DUP2 ADD SWAP1 PUSH1 0x60 DUP2 ADD PUSH1 0x40 DUP3 ADD CALLDATALOAD PUSH5 0x100000000 DUP2 GT ISZERO PUSH2 0x1DB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0x1ED JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x1 DUP4 MUL DUP5 ADD GT PUSH5 0x100000000 DUP4 GT OR ISZERO PUSH2 0x20F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 DUP1 DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP SWAP3 SWAP6 POP PUSH2 0x513 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH2 0x78 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x266 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 CALLDATALOAD AND SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH1 0x40 DUP2 ADD PUSH1 0x20 DUP3 ADD CALLDATALOAD PUSH5 0x100000000 DUP2 GT ISZERO PUSH2 0x291 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0x2A3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x1 DUP4 MUL DUP5 ADD GT PUSH5 0x100000000 DUP4 GT OR ISZERO PUSH2 0x2C5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 DUP1 DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP SWAP3 SWAP6 POP PUSH2 0x543 SWAP5 POP POP POP POP POP JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x312 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x142 PUSH2 0x623 JUMP JUMPDEST PUSH2 0x323 PUSH2 0x64E JUMP JUMPDEST PUSH2 0x333 PUSH2 0x32E PUSH2 0x656 JUMP JUMPDEST PUSH2 0x67B JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x33D PUSH2 0x69F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO PUSH2 0x364 JUMPI PUSH2 0x35F DUP2 PUSH2 0x6C4 JUMP JUMPDEST PUSH2 0x36C JUMP JUMPDEST PUSH2 0x36C PUSH2 0x31B JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x377 PUSH2 0x69F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO PUSH2 0x40F JUMPI PUSH2 0x399 DUP4 PUSH2 0x6C4 JUMP JUMPDEST PUSH1 0x0 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x40 MLOAD SWAP3 ADD SWAP5 POP PUSH1 0x0 SWAP4 POP SWAP1 SWAP2 POP POP DUP1 DUP4 SUB DUP2 DUP6 GAS DELEGATECALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x3F6 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x3FB JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0x409 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x417 JUMP JUMPDEST PUSH2 0x417 PUSH2 0x31B JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x426 PUSH2 0x69F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO PUSH2 0x44E JUMPI PUSH2 0x447 PUSH2 0x656 JUMP JUMPDEST SWAP1 POP PUSH2 0x456 JUMP JUMPDEST PUSH2 0x456 PUSH2 0x31B JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x461 PUSH2 0x69F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO PUSH2 0x364 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x4BF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x36 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x85F PUSH1 0x36 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH32 0x7E644D79422F17C01E4894B5F4F588D331EBFA28653D42AE832DC59E38C9798F PUSH2 0x4E8 PUSH2 0x69F JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND DUP2 MSTORE SWAP2 DUP5 AND PUSH1 0x20 DUP4 ADD MSTORE DUP1 MLOAD SWAP2 DUP3 SWAP1 SUB ADD SWAP1 LOG1 PUSH2 0x35F DUP2 PUSH2 0x704 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x51D PUSH2 0x656 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x530 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x53A DUP4 DUP3 PUSH2 0x543 JUMP JUMPDEST PUSH2 0x417 DUP3 PUSH2 0x704 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x54D PUSH2 0x656 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x560 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x569 DUP3 PUSH2 0x728 JUMP JUMPDEST DUP1 MLOAD ISZERO PUSH2 0x61F JUMPI PUSH1 0x0 DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 PUSH1 0x40 MLOAD DUP1 DUP3 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 JUMPDEST PUSH1 0x20 DUP4 LT PUSH2 0x5AC JUMPI DUP1 MLOAD DUP3 MSTORE PUSH1 0x1F NOT SWAP1 SWAP3 ADD SWAP2 PUSH1 0x20 SWAP2 DUP3 ADD SWAP2 ADD PUSH2 0x58D JUMP JUMPDEST PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB DUP1 NOT DUP3 MLOAD AND DUP2 DUP5 MLOAD AND DUP1 DUP3 OR DUP6 MSTORE POP POP POP POP POP POP SWAP1 POP ADD SWAP2 POP POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 GAS DELEGATECALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x60C JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x611 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0x417 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x62D PUSH2 0x69F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO PUSH2 0x44E JUMPI PUSH2 0x447 PUSH2 0x69F JUMP JUMPDEST PUSH2 0x333 PUSH2 0x790 JUMP JUMPDEST PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC SLOAD SWAP1 JUMP JUMPDEST CALLDATASIZE PUSH1 0x0 DUP1 CALLDATACOPY PUSH1 0x0 DUP1 CALLDATASIZE PUSH1 0x0 DUP5 GAS DELEGATECALL RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY DUP1 DUP1 ISZERO PUSH2 0x69A JUMPI RETURNDATASIZE PUSH1 0x0 RETURN JUMPDEST RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST PUSH32 0xB53127684A568B3173AE13B9F8A6016E243E63B6E8EE1178D6A717850B5D6103 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x6CD DUP2 PUSH2 0x728 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND SWAP1 PUSH32 0xBC7CD75A20EE27FD9ADEBAB32041F755214DBC6BFFA90CC0225B39DA2E5C2D3B SWAP1 PUSH1 0x0 SWAP1 LOG2 POP JUMP JUMPDEST PUSH32 0xB53127684A568B3173AE13B9F8A6016E243E63B6E8EE1178D6A717850B5D6103 SSTORE JUMP JUMPDEST PUSH2 0x731 DUP2 PUSH2 0x7F0 JUMP JUMPDEST PUSH2 0x76C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x3B DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x895 PUSH1 0x3B SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC SSTORE JUMP JUMPDEST PUSH2 0x798 PUSH2 0x69F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO PUSH2 0x7E8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x32 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x82D PUSH1 0x32 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x333 PUSH2 0x333 JUMP JUMPDEST PUSH1 0x0 DUP2 EXTCODEHASH PUSH32 0xC5D2460186F7233C927E7DB2DCC703C0E500B653CA82273B7BFAD8045D85A470 DUP2 DUP2 EQ DUP1 ISZERO SWAP1 PUSH2 0x824 JUMPI POP DUP2 ISZERO ISZERO JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP INVALID NUMBER PUSH2 0x6E6E PUSH16 0x742063616C6C2066616C6C6261636B20 PUSH7 0x756E6374696F6E KECCAK256 PUSH7 0x726F6D20746865 KECCAK256 PUSH17 0x726F78792061646D696E43616E6E6F7420 PUSH4 0x68616E67 PUSH6 0x207468652061 PUSH5 0x6D696E206F PUSH7 0x20612070726F78 PUSH26 0x20746F20746865207A65726F206164647265737343616E6E6F74 KECCAK256 PUSH20 0x657420612070726F787920696D706C656D656E74 PUSH2 0x7469 PUSH16 0x6E20746F2061206E6F6E2D636F6E7472 PUSH2 0x6374 KECCAK256 PUSH2 0x6464 PUSH19 0x657373A2646970667358221220AFD841EDB794 0x4F AND BALANCE DUP11 EXP BLOCKHASH 0xCC REVERT DUP9 0xFC SWAP12 ADDMOD SELFBALANCE STATICCALL JUMPDEST SIGNEXTEND 0xDF 0x29 0xED 0xBE PUSH14 0x9C4F23B7C664736F6C6343000705 STOP CALLER ",
							"sourceMap": "448:1228:3:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;601:11:5;:9;:11::i;:::-;448:1228:3;2350:103:1;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2350:103:1;-1:-1:-1;;;;;2350:103:1;;:::i;2970:236::-;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2970:236:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2970:236:1;;-1:-1:-1;2970:236:1;-1:-1:-1;2970:236:1;:::i;1670:96::-;;;;;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;;;;1670:96:1;;;;;;;;;;;;;;1942:224;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1942:224:1;-1:-1:-1;;;;;1942:224:1;;:::i;1141:323:3:-;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1141:323:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1141:323:3;;-1:-1:-1;1141:323:3;;-1:-1:-1;;;;;1141:323:3:i;962:365:4:-;;;;;;;;;;;;;;;;-1:-1:-1;;;;;962:365:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;962:365:4;;-1:-1:-1;962:365:4;;-1:-1:-1;;;;;962:365:4:i;1528:78:1:-;;;;;;;;;;;;;:::i;2167:90:5:-;2203:15;:13;:15::i;:::-;2224:28;2234:17;:15;:17::i;:::-;2224:9;:28::i;:::-;2167:90::o;2350:103:1:-;1405:8;:6;:8::i;:::-;-1:-1:-1;;;;;1391:22:1;:10;-1:-1:-1;;;;;1391:22:1;;1387:76;;;2419:29:::1;2430:17;2419:10;:29::i;:::-;1387:76:::0;;;1445:11;:9;:11::i;:::-;2350:103;:::o;2970:236::-;1405:8;:6;:8::i;:::-;-1:-1:-1;;;;;1391:22:1;:10;-1:-1:-1;;;;;1391:22:1;;1387:76;;;3089:29:::1;3100:17;3089:10;:29::i;:::-;3125:12;3143:17;-1:-1:-1::0;;;;;3143:30:1::1;3174:4;;3143:36;;;;;;;;;;::::0;;::::1;::::0;-1:-1:-1;3143:36:1::1;::::0;-1:-1:-1;3143:36:1;;-1:-1:-1;;3143:36:1;;::::1;::::0;;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3124:55;;;3193:7;3185:16;;;::::0;::::1;;1423:1;1387:76:::0;;;1445:11;:9;:11::i;:::-;2970:236;;;:::o;1670:96::-;1722:7;1405:8;:6;:8::i;:::-;-1:-1:-1;;;;;1391:22:1;:10;-1:-1:-1;;;;;1391:22:1;;1387:76;;;1744:17:::1;:15;:17::i;:::-;1737:24;;1387:76:::0;;;1445:11;:9;:11::i;:::-;1670:96;:::o;1942:224::-;1405:8;:6;:8::i;:::-;-1:-1:-1;;;;;1391:22:1;:10;-1:-1:-1;;;;;1391:22:1;;1387:76;;;-1:-1:-1;;;;;2012:22:1;::::1;2004:89;;;;-1:-1:-1::0;;;2004:89:1::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2104:32;2117:8;:6;:8::i;:::-;2104:32;::::0;;-1:-1:-1;;;;;2104:32:1;;::::1;::::0;;;;::::1;;::::0;::::1;::::0;;;;;;;;;::::1;2142:19;2152:8;2142:9;:19::i;1141:323:3:-:0;1287:1;1258:17;:15;:17::i;:::-;-1:-1:-1;;;;;1258:31:3;;1250:40;;;;;;1296:58;1340:6;1348:5;1296:43;:58::i;:::-;1442:17;1452:6;1442:9;:17::i;962:365:4:-;1076:1;1047:17;:15;:17::i;:::-;-1:-1:-1;;;;;1047:31:4;;1039:40;;;;;;1185:26;1204:6;1185:18;:26::i;:::-;1221:12;;:16;1217:106;;1248:12;1266:6;-1:-1:-1;;;;;1266:19:4;1286:5;1266:26;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1266:26:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1247:45;;;1308:7;1300:16;;;;;1217:106;962:365;;:::o;1528:78:1:-;1571:7;1405:8;:6;:8::i;:::-;-1:-1:-1;;;;;1391:22:1;:10;-1:-1:-1;;;;;1391:22:1;;1387:76;;;1593:8:::1;:6;:8::i;1539:135:3:-:0;1625:44;:42;:44::i;1100:165:2:-;915:66;1244:11;;1228:33::o;1034:785:5:-;1336:14;1333:1;1330;1317:34;1532:1;1529;1513:14;1510:1;1494:14;1487:5;1474:60;1596:16;1593:1;1590;1575:38;1628:6;1687:56;;;;1782:16;1779:1;1772:27;1687:56;1716:16;1713:1;1706:27;3255:136:1;1106:66;3370:11;;3355:32::o;1400:142:2:-;1462:37;1481:17;1462:18;:37::i;:::-;1510:27;;-1:-1:-1;;;;;1510:27:2;;;;;;;;1400:142;:::o;3507:133:1:-;1106:66;3608:22;3600:36::o;1679:303:2:-;1764:37;1783:17;1764:18;:37::i;:::-;1749:127;;;;-1:-1:-1;;;1749:127:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;915:66;1941:31;1933:45::o;3715:174:1:-;3794:8;:6;:8::i;:::-;-1:-1:-1;;;;;3780:22:1;:10;-1:-1:-1;;;;;3780:22:1;;;3772:85;;;;-1:-1:-1;;;3772:85:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3863:21;:19;:21::i;743:586:0:-;803:4;1242:20;;1089:66;1281:23;;;;;;:42;;-1:-1:-1;1308:15:0;;;1281:42;1273:51;743:586;-1:-1:-1;;;;743:586:0:o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "461800",
								"executionCost": "499",
								"totalCost": "462299"
							},
							"external": {
								"": "infinite",
								"admin()": "infinite",
								"changeAdmin(address)": "infinite",
								"implementation()": "infinite",
								"initialize(address,address,bytes)": "infinite",
								"initialize(address,bytes)": "infinite",
								"upgradeTo(address)": "infinite",
								"upgradeToAndCall(address,bytes)": "infinite"
							},
							"internal": {
								"_willFallback()": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 448,
									"end": 1676,
									"name": "PUSH",
									"source": 3,
									"value": "80"
								},
								{
									"begin": 448,
									"end": 1676,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 448,
									"end": 1676,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 448,
									"end": 1676,
									"name": "CALLVALUE",
									"source": 3
								},
								{
									"begin": 448,
									"end": 1676,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 448,
									"end": 1676,
									"name": "ISZERO",
									"source": 3
								},
								{
									"begin": 448,
									"end": 1676,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 448,
									"end": 1676,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 448,
									"end": 1676,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 448,
									"end": 1676,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 448,
									"end": 1676,
									"name": "REVERT",
									"source": 3
								},
								{
									"begin": 448,
									"end": 1676,
									"name": "tag",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 448,
									"end": 1676,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 448,
									"end": 1676,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 448,
									"end": 1676,
									"name": "PUSH #[$]",
									"source": 3,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 448,
									"end": 1676,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 448,
									"end": 1676,
									"name": "PUSH [$]",
									"source": 3,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 448,
									"end": 1676,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 448,
									"end": 1676,
									"name": "CODECOPY",
									"source": 3
								},
								{
									"begin": 448,
									"end": 1676,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 448,
									"end": 1676,
									"name": "RETURN",
									"source": 3
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220afd841edb7944f16318a0a40ccfd88fc9b0847fa5b0bdf29edbe6d9c4f23b7c664736f6c63430007050033",
									".code": [
										{
											"begin": 448,
											"end": 1676,
											"name": "PUSH",
											"source": 3,
											"value": "80"
										},
										{
											"begin": 448,
											"end": 1676,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 448,
											"end": 1676,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 448,
											"end": 1676,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 448,
											"end": 1676,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 448,
											"end": 1676,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 448,
											"end": 1676,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 448,
											"end": 1676,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 448,
											"end": 1676,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 448,
											"end": 1676,
											"name": "CALLDATALOAD",
											"source": 3
										},
										{
											"begin": 448,
											"end": 1676,
											"name": "PUSH",
											"source": 3,
											"value": "E0"
										},
										{
											"begin": 448,
											"end": 1676,
											"name": "SHR",
											"source": 3
										},
										{
											"begin": 448,
											"end": 1676,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 448,
											"end": 1676,
											"name": "PUSH",
											"source": 3,
											"value": "8F283970"
										},
										{
											"begin": 448,
											"end": 1676,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 448,
											"end": 1676,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "10"
										},
										{
											"begin": 448,
											"end": 1676,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 448,
											"end": 1676,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 448,
											"end": 1676,
											"name": "PUSH",
											"source": 3,
											"value": "8F283970"
										},
										{
											"begin": 448,
											"end": 1676,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 448,
											"end": 1676,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "6"
										},
										{
											"begin": 448,
											"end": 1676,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 448,
											"end": 1676,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 448,
											"end": 1676,
											"name": "PUSH",
											"source": 3,
											"value": "CF7A1D77"
										},
										{
											"begin": 448,
											"end": 1676,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 448,
											"end": 1676,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "7"
										},
										{
											"begin": 448,
											"end": 1676,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 448,
											"end": 1676,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 448,
											"end": 1676,
											"name": "PUSH",
											"source": 3,
											"value": "D1F57894"
										},
										{
											"begin": 448,
											"end": 1676,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 448,
											"end": 1676,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "8"
										},
										{
											"begin": 448,
											"end": 1676,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 448,
											"end": 1676,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 448,
											"end": 1676,
											"name": "PUSH",
											"source": 3,
											"value": "F851A440"
										},
										{
											"begin": 448,
											"end": 1676,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 448,
											"end": 1676,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "9"
										},
										{
											"begin": 448,
											"end": 1676,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 448,
											"end": 1676,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 448,
											"end": 1676,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 448,
											"end": 1676,
											"name": "tag",
											"source": 3,
											"value": "10"
										},
										{
											"begin": 448,
											"end": 1676,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 448,
											"end": 1676,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 448,
											"end": 1676,
											"name": "PUSH",
											"source": 3,
											"value": "3659CFE6"
										},
										{
											"begin": 448,
											"end": 1676,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 448,
											"end": 1676,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "3"
										},
										{
											"begin": 448,
											"end": 1676,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 448,
											"end": 1676,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 448,
											"end": 1676,
											"name": "PUSH",
											"source": 3,
											"value": "4F1EF286"
										},
										{
											"begin": 448,
											"end": 1676,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 448,
											"end": 1676,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 448,
											"end": 1676,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 448,
											"end": 1676,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 448,
											"end": 1676,
											"name": "PUSH",
											"source": 3,
											"value": "5C60DA1B"
										},
										{
											"begin": 448,
											"end": 1676,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 448,
											"end": 1676,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "5"
										},
										{
											"begin": 448,
											"end": 1676,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 448,
											"end": 1676,
											"name": "tag",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 448,
											"end": 1676,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 601,
											"end": 612,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "13"
										},
										{
											"begin": 601,
											"end": 610,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "14"
										},
										{
											"begin": 601,
											"end": 612,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 601,
											"end": 612,
											"name": "tag",
											"source": 5,
											"value": "13"
										},
										{
											"begin": 601,
											"end": 612,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 448,
											"end": 1676,
											"name": "STOP",
											"source": 3
										},
										{
											"begin": 2350,
											"end": 2453,
											"name": "tag",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 2350,
											"end": 2453,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2350,
											"end": 2453,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 2350,
											"end": 2453,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2350,
											"end": 2453,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2350,
											"end": 2453,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "15"
										},
										{
											"begin": 2350,
											"end": 2453,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2350,
											"end": 2453,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2350,
											"end": 2453,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2350,
											"end": 2453,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2350,
											"end": 2453,
											"name": "tag",
											"source": 1,
											"value": "15"
										},
										{
											"begin": 2350,
											"end": 2453,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2350,
											"end": 2453,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2350,
											"end": 2453,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "13"
										},
										{
											"begin": 2350,
											"end": 2453,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 2350,
											"end": 2453,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2350,
											"end": 2453,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 2350,
											"end": 2453,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2350,
											"end": 2453,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2350,
											"end": 2453,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2350,
											"end": 2453,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 2350,
											"end": 2453,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2350,
											"end": 2453,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 2350,
											"end": 2453,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2350,
											"end": 2453,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2350,
											"end": 2453,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2350,
											"end": 2453,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2350,
											"end": 2453,
											"name": "tag",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 2350,
											"end": 2453,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2350,
											"end": 2453,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2350,
											"end": 2453,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2350,
											"end": 2453,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "18"
										},
										{
											"begin": 2350,
											"end": 2453,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2970,
											"end": 3206,
											"name": "tag",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 2970,
											"end": 3206,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2970,
											"end": 3206,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "13"
										},
										{
											"begin": 2970,
											"end": 3206,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 2970,
											"end": 3206,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2970,
											"end": 3206,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 2970,
											"end": 3206,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2970,
											"end": 3206,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2970,
											"end": 3206,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2970,
											"end": 3206,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 2970,
											"end": 3206,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2970,
											"end": 3206,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2970,
											"end": 3206,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2970,
											"end": 3206,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2970,
											"end": 3206,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2970,
											"end": 3206,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2970,
											"end": 3206,
											"name": "tag",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2970,
											"end": 3206,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2970,
											"end": 3206,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2970,
											"end": 3206,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 2970,
											"end": 3206,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2970,
											"end": 3206,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2970,
											"end": 3206,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2970,
											"end": 3206,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2970,
											"end": 3206,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2970,
											"end": 3206,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2970,
											"end": 3206,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2970,
											"end": 3206,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2970,
											"end": 3206,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2970,
											"end": 3206,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2970,
											"end": 3206,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2970,
											"end": 3206,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2970,
											"end": 3206,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 2970,
											"end": 3206,
											"name": "PUSH",
											"source": 1,
											"value": "100000000"
										},
										{
											"begin": 2970,
											"end": 3206,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2970,
											"end": 3206,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 2970,
											"end": 3206,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2970,
											"end": 3206,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 2970,
											"end": 3206,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2970,
											"end": 3206,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2970,
											"end": 3206,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2970,
											"end": 3206,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2970,
											"end": 3206,
											"name": "tag",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 2970,
											"end": 3206,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2970,
											"end": 3206,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2970,
											"end": 3206,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2970,
											"end": 3206,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2970,
											"end": 3206,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2970,
											"end": 3206,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2970,
											"end": 3206,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2970,
											"end": 3206,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 2970,
											"end": 3206,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2970,
											"end": 3206,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 2970,
											"end": 3206,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2970,
											"end": 3206,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2970,
											"end": 3206,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2970,
											"end": 3206,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2970,
											"end": 3206,
											"name": "tag",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 2970,
											"end": 3206,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2970,
											"end": 3206,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2970,
											"end": 3206,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 2970,
											"end": 3206,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2970,
											"end": 3206,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2970,
											"end": 3206,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2970,
											"end": 3206,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2970,
											"end": 3206,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 2970,
											"end": 3206,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 2970,
											"end": 3206,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2970,
											"end": 3206,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 2970,
											"end": 3206,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 2970,
											"end": 3206,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2970,
											"end": 3206,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 2970,
											"end": 3206,
											"name": "PUSH",
											"source": 1,
											"value": "100000000"
										},
										{
											"begin": 2970,
											"end": 3206,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2970,
											"end": 3206,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 2970,
											"end": 3206,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 2970,
											"end": 3206,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2970,
											"end": 3206,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "23"
										},
										{
											"begin": 2970,
											"end": 3206,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2970,
											"end": 3206,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2970,
											"end": 3206,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2970,
											"end": 3206,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2970,
											"end": 3206,
											"name": "tag",
											"source": 1,
											"value": "23"
										},
										{
											"begin": 2970,
											"end": 3206,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2970,
											"end": 3206,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2970,
											"end": 3206,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2970,
											"end": 3206,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2970,
											"end": 3206,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 2970,
											"end": 3206,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1670,
											"end": 1766,
											"name": "tag",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 1670,
											"end": 1766,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1670,
											"end": 1766,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 1670,
											"end": 1766,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1670,
											"end": 1766,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1670,
											"end": 1766,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 1670,
											"end": 1766,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1670,
											"end": 1766,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1670,
											"end": 1766,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1670,
											"end": 1766,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1670,
											"end": 1766,
											"name": "tag",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 1670,
											"end": 1766,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1670,
											"end": 1766,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1670,
											"end": 1766,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 1670,
											"end": 1766,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "27"
										},
										{
											"begin": 1670,
											"end": 1766,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1670,
											"end": 1766,
											"name": "tag",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 1670,
											"end": 1766,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1670,
											"end": 1766,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1670,
											"end": 1766,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1670,
											"end": 1766,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1670,
											"end": 1766,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1670,
											"end": 1766,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1670,
											"end": 1766,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1670,
											"end": 1766,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1670,
											"end": 1766,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1670,
											"end": 1766,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1670,
											"end": 1766,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1670,
											"end": 1766,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1670,
											"end": 1766,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1670,
											"end": 1766,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1670,
											"end": 1766,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1670,
											"end": 1766,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1670,
											"end": 1766,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1670,
											"end": 1766,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 1942,
											"end": 2166,
											"name": "tag",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 1942,
											"end": 2166,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1942,
											"end": 2166,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 1942,
											"end": 2166,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1942,
											"end": 2166,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1942,
											"end": 2166,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 1942,
											"end": 2166,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1942,
											"end": 2166,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1942,
											"end": 2166,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1942,
											"end": 2166,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1942,
											"end": 2166,
											"name": "tag",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 1942,
											"end": 2166,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1942,
											"end": 2166,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1942,
											"end": 2166,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "13"
										},
										{
											"begin": 1942,
											"end": 2166,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1942,
											"end": 2166,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1942,
											"end": 2166,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 1942,
											"end": 2166,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1942,
											"end": 2166,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1942,
											"end": 2166,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1942,
											"end": 2166,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 1942,
											"end": 2166,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1942,
											"end": 2166,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 1942,
											"end": 2166,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1942,
											"end": 2166,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1942,
											"end": 2166,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1942,
											"end": 2166,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1942,
											"end": 2166,
											"name": "tag",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 1942,
											"end": 2166,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1942,
											"end": 2166,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1942,
											"end": 2166,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1942,
											"end": 2166,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "31"
										},
										{
											"begin": 1942,
											"end": 2166,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1141,
											"end": 1464,
											"name": "tag",
											"source": 3,
											"value": "7"
										},
										{
											"begin": 1141,
											"end": 1464,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1141,
											"end": 1464,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "13"
										},
										{
											"begin": 1141,
											"end": 1464,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 1141,
											"end": 1464,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1141,
											"end": 1464,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 1141,
											"end": 1464,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1141,
											"end": 1464,
											"name": "PUSH",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 1141,
											"end": 1464,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1141,
											"end": 1464,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 1141,
											"end": 1464,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 1141,
											"end": 1464,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "33"
										},
										{
											"begin": 1141,
											"end": 1464,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1141,
											"end": 1464,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1141,
											"end": 1464,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1141,
											"end": 1464,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 1141,
											"end": 1464,
											"name": "tag",
											"source": 3,
											"value": "33"
										},
										{
											"begin": 1141,
											"end": 1464,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1141,
											"end": 1464,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1141,
											"end": 1464,
											"name": "CALLDATALOAD",
											"source": 3
										},
										{
											"begin": 1141,
											"end": 1464,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1141,
											"end": 1464,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1141,
											"end": 1464,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 1141,
											"end": 1464,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1141,
											"end": 1464,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1141,
											"end": 1464,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1141,
											"end": 1464,
											"name": "CALLDATALOAD",
											"source": 3
										},
										{
											"begin": 1141,
											"end": 1464,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1141,
											"end": 1464,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1141,
											"end": 1464,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1141,
											"end": 1464,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1141,
											"end": 1464,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1141,
											"end": 1464,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1141,
											"end": 1464,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1141,
											"end": 1464,
											"name": "PUSH",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 1141,
											"end": 1464,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1141,
											"end": 1464,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1141,
											"end": 1464,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1141,
											"end": 1464,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1141,
											"end": 1464,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1141,
											"end": 1464,
											"name": "CALLDATALOAD",
											"source": 3
										},
										{
											"begin": 1141,
											"end": 1464,
											"name": "PUSH",
											"source": 3,
											"value": "100000000"
										},
										{
											"begin": 1141,
											"end": 1464,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1141,
											"end": 1464,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 1141,
											"end": 1464,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 1141,
											"end": 1464,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "34"
										},
										{
											"begin": 1141,
											"end": 1464,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1141,
											"end": 1464,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1141,
											"end": 1464,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1141,
											"end": 1464,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 1141,
											"end": 1464,
											"name": "tag",
											"source": 3,
											"value": "34"
										},
										{
											"begin": 1141,
											"end": 1464,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1141,
											"end": 1464,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1141,
											"end": 1464,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1141,
											"end": 1464,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1141,
											"end": 1464,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1141,
											"end": 1464,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1141,
											"end": 1464,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1141,
											"end": 1464,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 1141,
											"end": 1464,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 1141,
											"end": 1464,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "35"
										},
										{
											"begin": 1141,
											"end": 1464,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1141,
											"end": 1464,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1141,
											"end": 1464,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1141,
											"end": 1464,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 1141,
											"end": 1464,
											"name": "tag",
											"source": 3,
											"value": "35"
										},
										{
											"begin": 1141,
											"end": 1464,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1141,
											"end": 1464,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1141,
											"end": 1464,
											"name": "CALLDATALOAD",
											"source": 3
										},
										{
											"begin": 1141,
											"end": 1464,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1141,
											"end": 1464,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1141,
											"end": 1464,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1141,
											"end": 1464,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1141,
											"end": 1464,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 1141,
											"end": 1464,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 1141,
											"end": 1464,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1141,
											"end": 1464,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 1141,
											"end": 1464,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 1141,
											"end": 1464,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1141,
											"end": 1464,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 1141,
											"end": 1464,
											"name": "PUSH",
											"source": 3,
											"value": "100000000"
										},
										{
											"begin": 1141,
											"end": 1464,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1141,
											"end": 1464,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 1141,
											"end": 1464,
											"name": "OR",
											"source": 3
										},
										{
											"begin": 1141,
											"end": 1464,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 1141,
											"end": 1464,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "36"
										},
										{
											"begin": 1141,
											"end": 1464,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1141,
											"end": 1464,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1141,
											"end": 1464,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1141,
											"end": 1464,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 1141,
											"end": 1464,
											"name": "tag",
											"source": 3,
											"value": "36"
										},
										{
											"begin": 1141,
											"end": 1464,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1141,
											"end": 1464,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1141,
											"end": 1464,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1141,
											"end": 1464,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1141,
											"end": 1464,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1141,
											"end": 1464,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 1141,
											"end": 1464,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1141,
											"end": 1464,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1141,
											"end": 1464,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1141,
											"end": 1464,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1141,
											"end": 1464,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 1141,
											"end": 1464,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 1141,
											"end": 1464,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1141,
											"end": 1464,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1141,
											"end": 1464,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1141,
											"end": 1464,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1141,
											"end": 1464,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1141,
											"end": 1464,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1141,
											"end": 1464,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1141,
											"end": 1464,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1141,
											"end": 1464,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1141,
											"end": 1464,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1141,
											"end": 1464,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 1141,
											"end": 1464,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 1141,
											"end": 1464,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1141,
											"end": 1464,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1141,
											"end": 1464,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1141,
											"end": 1464,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1141,
											"end": 1464,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1141,
											"end": 1464,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1141,
											"end": 1464,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1141,
											"end": 1464,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1141,
											"end": 1464,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1141,
											"end": 1464,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1141,
											"end": 1464,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1141,
											"end": 1464,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 1141,
											"end": 1464,
											"name": "CALLDATACOPY",
											"source": 3
										},
										{
											"begin": 1141,
											"end": 1464,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1141,
											"end": 1464,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 1141,
											"end": 1464,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1141,
											"end": 1464,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1141,
											"end": 1464,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1141,
											"end": 1464,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1141,
											"end": 1464,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1141,
											"end": 1464,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 1141,
											"end": 1464,
											"name": "SWAP6",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1141,
											"end": 1464,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "37"
										},
										{
											"begin": 1141,
											"end": 1464,
											"name": "SWAP5",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1141,
											"end": 1464,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 962,
											"end": 1327,
											"name": "tag",
											"source": 4,
											"value": "8"
										},
										{
											"begin": 962,
											"end": 1327,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 962,
											"end": 1327,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "13"
										},
										{
											"begin": 962,
											"end": 1327,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 962,
											"end": 1327,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 962,
											"end": 1327,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 962,
											"end": 1327,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 962,
											"end": 1327,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 962,
											"end": 1327,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 962,
											"end": 1327,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 962,
											"end": 1327,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 962,
											"end": 1327,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "39"
										},
										{
											"begin": 962,
											"end": 1327,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 962,
											"end": 1327,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 962,
											"end": 1327,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 962,
											"end": 1327,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 962,
											"end": 1327,
											"name": "tag",
											"source": 4,
											"value": "39"
										},
										{
											"begin": 962,
											"end": 1327,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 962,
											"end": 1327,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 962,
											"end": 1327,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": 962,
											"end": 1327,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 962,
											"end": 1327,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 962,
											"end": 1327,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 962,
											"end": 1327,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 962,
											"end": 1327,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 962,
											"end": 1327,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 962,
											"end": 1327,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 962,
											"end": 1327,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 962,
											"end": 1327,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 962,
											"end": 1327,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 962,
											"end": 1327,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 962,
											"end": 1327,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 962,
											"end": 1327,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": 962,
											"end": 1327,
											"name": "PUSH",
											"source": 4,
											"value": "100000000"
										},
										{
											"begin": 962,
											"end": 1327,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 962,
											"end": 1327,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 962,
											"end": 1327,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 962,
											"end": 1327,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 962,
											"end": 1327,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 962,
											"end": 1327,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 962,
											"end": 1327,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 962,
											"end": 1327,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 962,
											"end": 1327,
											"name": "tag",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 962,
											"end": 1327,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 962,
											"end": 1327,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 962,
											"end": 1327,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 962,
											"end": 1327,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 962,
											"end": 1327,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 962,
											"end": 1327,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 962,
											"end": 1327,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 962,
											"end": 1327,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 962,
											"end": 1327,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 962,
											"end": 1327,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "41"
										},
										{
											"begin": 962,
											"end": 1327,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 962,
											"end": 1327,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 962,
											"end": 1327,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 962,
											"end": 1327,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 962,
											"end": 1327,
											"name": "tag",
											"source": 4,
											"value": "41"
										},
										{
											"begin": 962,
											"end": 1327,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 962,
											"end": 1327,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 962,
											"end": 1327,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": 962,
											"end": 1327,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 962,
											"end": 1327,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 962,
											"end": 1327,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 962,
											"end": 1327,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 962,
											"end": 1327,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 962,
											"end": 1327,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 962,
											"end": 1327,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 962,
											"end": 1327,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 962,
											"end": 1327,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 962,
											"end": 1327,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 962,
											"end": 1327,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 962,
											"end": 1327,
											"name": "PUSH",
											"source": 4,
											"value": "100000000"
										},
										{
											"begin": 962,
											"end": 1327,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 962,
											"end": 1327,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 962,
											"end": 1327,
											"name": "OR",
											"source": 4
										},
										{
											"begin": 962,
											"end": 1327,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 962,
											"end": 1327,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "42"
										},
										{
											"begin": 962,
											"end": 1327,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 962,
											"end": 1327,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 962,
											"end": 1327,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 962,
											"end": 1327,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 962,
											"end": 1327,
											"name": "tag",
											"source": 4,
											"value": "42"
										},
										{
											"begin": 962,
											"end": 1327,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 962,
											"end": 1327,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 962,
											"end": 1327,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 962,
											"end": 1327,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 962,
											"end": 1327,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 962,
											"end": 1327,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 962,
											"end": 1327,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 962,
											"end": 1327,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 962,
											"end": 1327,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 962,
											"end": 1327,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 962,
											"end": 1327,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 962,
											"end": 1327,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 962,
											"end": 1327,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 962,
											"end": 1327,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 962,
											"end": 1327,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 962,
											"end": 1327,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 962,
											"end": 1327,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 962,
											"end": 1327,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 962,
											"end": 1327,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 962,
											"end": 1327,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 962,
											"end": 1327,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 962,
											"end": 1327,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 962,
											"end": 1327,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 962,
											"end": 1327,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 962,
											"end": 1327,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 962,
											"end": 1327,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 962,
											"end": 1327,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 962,
											"end": 1327,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 962,
											"end": 1327,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 962,
											"end": 1327,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 962,
											"end": 1327,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 962,
											"end": 1327,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 962,
											"end": 1327,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 962,
											"end": 1327,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 962,
											"end": 1327,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 962,
											"end": 1327,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 962,
											"end": 1327,
											"name": "CALLDATACOPY",
											"source": 4
										},
										{
											"begin": 962,
											"end": 1327,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 962,
											"end": 1327,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 962,
											"end": 1327,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 962,
											"end": 1327,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 962,
											"end": 1327,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 962,
											"end": 1327,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 962,
											"end": 1327,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 962,
											"end": 1327,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 962,
											"end": 1327,
											"name": "SWAP6",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 962,
											"end": 1327,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "43"
										},
										{
											"begin": 962,
											"end": 1327,
											"name": "SWAP5",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 962,
											"end": 1327,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 1528,
											"end": 1606,
											"name": "tag",
											"source": 1,
											"value": "9"
										},
										{
											"begin": 1528,
											"end": 1606,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1528,
											"end": 1606,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 1528,
											"end": 1606,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1528,
											"end": 1606,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1528,
											"end": 1606,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 1528,
											"end": 1606,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1528,
											"end": 1606,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1528,
											"end": 1606,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1528,
											"end": 1606,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1528,
											"end": 1606,
											"name": "tag",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 1528,
											"end": 1606,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1528,
											"end": 1606,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1528,
											"end": 1606,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 1528,
											"end": 1606,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "46"
										},
										{
											"begin": 1528,
											"end": 1606,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2167,
											"end": 2257,
											"name": "tag",
											"source": 5,
											"value": "14"
										},
										{
											"begin": 2167,
											"end": 2257,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2203,
											"end": 2218,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "48"
										},
										{
											"begin": 2203,
											"end": 2216,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "49"
										},
										{
											"begin": 2203,
											"end": 2218,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 2203,
											"end": 2218,
											"name": "tag",
											"source": 5,
											"value": "48"
										},
										{
											"begin": 2203,
											"end": 2218,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2224,
											"end": 2252,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "50"
										},
										{
											"begin": 2234,
											"end": 2251,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "51"
										},
										{
											"begin": 2234,
											"end": 2249,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "52"
										},
										{
											"begin": 2234,
											"end": 2251,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 2234,
											"end": 2251,
											"name": "tag",
											"source": 5,
											"value": "51"
										},
										{
											"begin": 2234,
											"end": 2251,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2224,
											"end": 2233,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "53"
										},
										{
											"begin": 2224,
											"end": 2252,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 2224,
											"end": 2252,
											"name": "tag",
											"source": 5,
											"value": "50"
										},
										{
											"begin": 2224,
											"end": 2252,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2167,
											"end": 2257,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 2350,
											"end": 2453,
											"name": "tag",
											"source": 1,
											"value": "18"
										},
										{
											"begin": 2350,
											"end": 2453,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1405,
											"end": 1413,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "55"
										},
										{
											"begin": 1405,
											"end": 1411,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "56"
										},
										{
											"begin": 1405,
											"end": 1413,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1405,
											"end": 1413,
											"name": "tag",
											"source": 1,
											"value": "55"
										},
										{
											"begin": 1405,
											"end": 1413,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1391,
											"end": 1413,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1391,
											"end": 1401,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1391,
											"end": 1413,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1391,
											"end": 1413,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1387,
											"end": 1463,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1387,
											"end": 1463,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "57"
										},
										{
											"begin": 1387,
											"end": 1463,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2419,
											"end": 2448,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "59"
										},
										{
											"begin": 2430,
											"end": 2447,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2419,
											"end": 2429,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 2419,
											"end": 2448,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2419,
											"end": 2448,
											"name": "tag",
											"source": 1,
											"value": "59"
										},
										{
											"begin": 2419,
											"end": 2448,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1387,
											"end": 1463,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "62"
										},
										{
											"begin": 1387,
											"end": 1463,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1387,
											"end": 1463,
											"name": "tag",
											"source": 1,
											"value": "57"
										},
										{
											"begin": 1387,
											"end": 1463,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1445,
											"end": 1456,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "62"
										},
										{
											"begin": 1445,
											"end": 1454,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 1445,
											"end": 1456,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1445,
											"end": 1456,
											"name": "tag",
											"source": 1,
											"value": "62"
										},
										{
											"begin": 1445,
											"end": 1456,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2350,
											"end": 2453,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2350,
											"end": 2453,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 2970,
											"end": 3206,
											"name": "tag",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 2970,
											"end": 3206,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1405,
											"end": 1413,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 1405,
											"end": 1411,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "56"
										},
										{
											"begin": 1405,
											"end": 1413,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1405,
											"end": 1413,
											"name": "tag",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 1405,
											"end": 1413,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1391,
											"end": 1413,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1391,
											"end": 1401,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1391,
											"end": 1413,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1391,
											"end": 1413,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1387,
											"end": 1463,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1387,
											"end": 1463,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "65"
										},
										{
											"begin": 1387,
											"end": 1463,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3089,
											"end": 3118,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "67"
										},
										{
											"begin": 3100,
											"end": 3117,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3089,
											"end": 3099,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 3089,
											"end": 3118,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3089,
											"end": 3118,
											"name": "tag",
											"source": 1,
											"value": "67"
										},
										{
											"begin": 3089,
											"end": 3118,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3125,
											"end": 3137,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3143,
											"end": 3160,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3143,
											"end": 3173,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3174,
											"end": 3178,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3174,
											"end": 3178,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3143,
											"end": 3179,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3143,
											"end": 3179,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3143,
											"end": 3179,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3143,
											"end": 3179,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3143,
											"end": 3179,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3143,
											"end": 3179,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3143,
											"end": 3179,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3143,
											"end": 3179,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 3143,
											"end": 3179,
											"name": "CALLDATACOPY",
											"source": 1
										},
										{
											"begin": 3143,
											"end": 3179,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3143,
											"end": 3179,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3143,
											"end": 3179,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3143,
											"end": 3179,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3143,
											"end": 3179,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3143,
											"end": 3179,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3143,
											"end": 3179,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3143,
											"end": 3179,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3143,
											"end": 3179,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3143,
											"end": 3179,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3143,
											"end": 3179,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3143,
											"end": 3179,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3143,
											"end": 3179,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3143,
											"end": 3179,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 3143,
											"end": 3179,
											"name": "GAS",
											"source": 1
										},
										{
											"begin": 3143,
											"end": 3179,
											"name": "DELEGATECALL",
											"source": 1
										},
										{
											"begin": 3143,
											"end": 3179,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3143,
											"end": 3179,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3143,
											"end": 3179,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3143,
											"end": 3179,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 3143,
											"end": 3179,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3143,
											"end": 3179,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3143,
											"end": 3179,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3143,
											"end": 3179,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 3143,
											"end": 3179,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "70"
										},
										{
											"begin": 3143,
											"end": 3179,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3143,
											"end": 3179,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3143,
											"end": 3179,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3143,
											"end": 3179,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3143,
											"end": 3179,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3143,
											"end": 3179,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 3143,
											"end": 3179,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 3143,
											"end": 3179,
											"name": "PUSH",
											"source": 1,
											"value": "3F"
										},
										{
											"begin": 3143,
											"end": 3179,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 3143,
											"end": 3179,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3143,
											"end": 3179,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3143,
											"end": 3179,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3143,
											"end": 3179,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3143,
											"end": 3179,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3143,
											"end": 3179,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3143,
											"end": 3179,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 3143,
											"end": 3179,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3143,
											"end": 3179,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3143,
											"end": 3179,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 3143,
											"end": 3179,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3143,
											"end": 3179,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3143,
											"end": 3179,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 3143,
											"end": 3179,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3143,
											"end": 3179,
											"name": "RETURNDATACOPY",
											"source": 1
										},
										{
											"begin": 3143,
											"end": 3179,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "69"
										},
										{
											"begin": 3143,
											"end": 3179,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3143,
											"end": 3179,
											"name": "tag",
											"source": 1,
											"value": "70"
										},
										{
											"begin": 3143,
											"end": 3179,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3143,
											"end": 3179,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 3143,
											"end": 3179,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3143,
											"end": 3179,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3143,
											"end": 3179,
											"name": "tag",
											"source": 1,
											"value": "69"
										},
										{
											"begin": 3143,
											"end": 3179,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3143,
											"end": 3179,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3124,
											"end": 3179,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3124,
											"end": 3179,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3124,
											"end": 3179,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3193,
											"end": 3200,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3185,
											"end": 3201,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "71"
										},
										{
											"begin": 3185,
											"end": 3201,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3185,
											"end": 3201,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3185,
											"end": 3201,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3185,
											"end": 3201,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 3185,
											"end": 3201,
											"name": "tag",
											"source": 1,
											"value": "71"
										},
										{
											"begin": 3185,
											"end": 3201,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1423,
											"end": 1424,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1387,
											"end": 1463,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "73"
										},
										{
											"begin": 1387,
											"end": 1463,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1387,
											"end": 1463,
											"name": "tag",
											"source": 1,
											"value": "65"
										},
										{
											"begin": 1387,
											"end": 1463,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1445,
											"end": 1456,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "73"
										},
										{
											"begin": 1445,
											"end": 1454,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 1445,
											"end": 1456,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1445,
											"end": 1456,
											"name": "tag",
											"source": 1,
											"value": "73"
										},
										{
											"begin": 1445,
											"end": 1456,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2970,
											"end": 3206,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2970,
											"end": 3206,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2970,
											"end": 3206,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2970,
											"end": 3206,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 1670,
											"end": 1766,
											"name": "tag",
											"source": 1,
											"value": "27"
										},
										{
											"begin": 1670,
											"end": 1766,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1722,
											"end": 1729,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1405,
											"end": 1413,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "75"
										},
										{
											"begin": 1405,
											"end": 1411,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "56"
										},
										{
											"begin": 1405,
											"end": 1413,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1405,
											"end": 1413,
											"name": "tag",
											"source": 1,
											"value": "75"
										},
										{
											"begin": 1405,
											"end": 1413,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1391,
											"end": 1413,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1391,
											"end": 1401,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1391,
											"end": 1413,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1391,
											"end": 1413,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1387,
											"end": 1463,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1387,
											"end": 1463,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "76"
										},
										{
											"begin": 1387,
											"end": 1463,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1744,
											"end": 1761,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "78"
										},
										{
											"begin": 1744,
											"end": 1759,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "52"
										},
										{
											"begin": 1744,
											"end": 1761,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1744,
											"end": 1761,
											"name": "tag",
											"source": 1,
											"value": "78"
										},
										{
											"begin": 1744,
											"end": 1761,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1737,
											"end": 1761,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1737,
											"end": 1761,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1387,
											"end": 1463,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 1387,
											"end": 1463,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1387,
											"end": 1463,
											"name": "tag",
											"source": 1,
											"value": "76"
										},
										{
											"begin": 1387,
											"end": 1463,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1445,
											"end": 1456,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 1445,
											"end": 1454,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 1445,
											"end": 1456,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1445,
											"end": 1456,
											"name": "tag",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 1445,
											"end": 1456,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1670,
											"end": 1766,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1670,
											"end": 1766,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 1942,
											"end": 2166,
											"name": "tag",
											"source": 1,
											"value": "31"
										},
										{
											"begin": 1942,
											"end": 2166,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1405,
											"end": 1413,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "82"
										},
										{
											"begin": 1405,
											"end": 1411,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "56"
										},
										{
											"begin": 1405,
											"end": 1413,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1405,
											"end": 1413,
											"name": "tag",
											"source": 1,
											"value": "82"
										},
										{
											"begin": 1405,
											"end": 1413,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1391,
											"end": 1413,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1391,
											"end": 1401,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1391,
											"end": 1413,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1391,
											"end": 1413,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1387,
											"end": 1463,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1387,
											"end": 1463,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "57"
										},
										{
											"begin": 1387,
											"end": 1463,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2012,
											"end": 2034,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2012,
											"end": 2034,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2004,
											"end": 2093,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "85"
										},
										{
											"begin": 2004,
											"end": 2093,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2004,
											"end": 2093,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2004,
											"end": 2093,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2004,
											"end": 2093,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2004,
											"end": 2093,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2004,
											"end": 2093,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 2004,
											"end": 2093,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2004,
											"end": 2093,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2004,
											"end": 2093,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2004,
											"end": 2093,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2004,
											"end": 2093,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2004,
											"end": 2093,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2004,
											"end": 2093,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2004,
											"end": 2093,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2004,
											"end": 2093,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2004,
											"end": 2093,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2004,
											"end": 2093,
											"name": "PUSH",
											"source": 1,
											"value": "36"
										},
										{
											"begin": 2004,
											"end": 2093,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2004,
											"end": 2093,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2004,
											"end": 2093,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2004,
											"end": 2093,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2004,
											"end": 2093,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2004,
											"end": 2093,
											"name": "PUSH data",
											"source": 1,
											"value": "37112268CEB11E15373F32F9374A1F3287D0A3E6E5A9A435AC06367E6CD0CF00"
										},
										{
											"begin": 2004,
											"end": 2093,
											"name": "PUSH",
											"source": 1,
											"value": "36"
										},
										{
											"begin": 2004,
											"end": 2093,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2004,
											"end": 2093,
											"name": "CODECOPY",
											"source": 1
										},
										{
											"begin": 2004,
											"end": 2093,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2004,
											"end": 2093,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2004,
											"end": 2093,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2004,
											"end": 2093,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2004,
											"end": 2093,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2004,
											"end": 2093,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2004,
											"end": 2093,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2004,
											"end": 2093,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2004,
											"end": 2093,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2004,
											"end": 2093,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2004,
											"end": 2093,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2004,
											"end": 2093,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2004,
											"end": 2093,
											"name": "tag",
											"source": 1,
											"value": "85"
										},
										{
											"begin": 2004,
											"end": 2093,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2104,
											"end": 2136,
											"name": "PUSH",
											"source": 1,
											"value": "7E644D79422F17C01E4894B5F4F588D331EBFA28653D42AE832DC59E38C9798F"
										},
										{
											"begin": 2117,
											"end": 2125,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "86"
										},
										{
											"begin": 2117,
											"end": 2123,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "56"
										},
										{
											"begin": 2117,
											"end": 2125,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2117,
											"end": 2125,
											"name": "tag",
											"source": 1,
											"value": "86"
										},
										{
											"begin": 2117,
											"end": 2125,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2104,
											"end": 2136,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2104,
											"end": 2136,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2104,
											"end": 2136,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2104,
											"end": 2136,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2104,
											"end": 2136,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2104,
											"end": 2136,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2104,
											"end": 2136,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2104,
											"end": 2136,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2104,
											"end": 2136,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2104,
											"end": 2136,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 2104,
											"end": 2136,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2104,
											"end": 2136,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2104,
											"end": 2136,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2104,
											"end": 2136,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2104,
											"end": 2136,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2104,
											"end": 2136,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2104,
											"end": 2136,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2104,
											"end": 2136,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2104,
											"end": 2136,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2104,
											"end": 2136,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2104,
											"end": 2136,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2104,
											"end": 2136,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2104,
											"end": 2136,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2104,
											"end": 2136,
											"name": "LOG1",
											"source": 1
										},
										{
											"begin": 2142,
											"end": 2161,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "59"
										},
										{
											"begin": 2152,
											"end": 2160,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2142,
											"end": 2151,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "88"
										},
										{
											"begin": 2142,
											"end": 2161,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1141,
											"end": 1464,
											"name": "tag",
											"source": 3,
											"value": "37"
										},
										{
											"begin": 1141,
											"end": 1464,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1287,
											"end": 1288,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1258,
											"end": 1275,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "92"
										},
										{
											"begin": 1258,
											"end": 1273,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "52"
										},
										{
											"begin": 1258,
											"end": 1275,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 1258,
											"end": 1275,
											"name": "tag",
											"source": 3,
											"value": "92"
										},
										{
											"begin": 1258,
											"end": 1275,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1258,
											"end": 1289,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1258,
											"end": 1289,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 1250,
											"end": 1290,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "93"
										},
										{
											"begin": 1250,
											"end": 1290,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1250,
											"end": 1290,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1250,
											"end": 1290,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1250,
											"end": 1290,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 1250,
											"end": 1290,
											"name": "tag",
											"source": 3,
											"value": "93"
										},
										{
											"begin": 1250,
											"end": 1290,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1296,
											"end": 1354,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "94"
										},
										{
											"begin": 1340,
											"end": 1346,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1348,
											"end": 1353,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1296,
											"end": 1339,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "43"
										},
										{
											"begin": 1296,
											"end": 1354,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 1296,
											"end": 1354,
											"name": "tag",
											"source": 3,
											"value": "94"
										},
										{
											"begin": 1296,
											"end": 1354,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1442,
											"end": 1459,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "73"
										},
										{
											"begin": 1452,
											"end": 1458,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1442,
											"end": 1451,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "88"
										},
										{
											"begin": 1442,
											"end": 1459,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 962,
											"end": 1327,
											"name": "tag",
											"source": 4,
											"value": "43"
										},
										{
											"begin": 962,
											"end": 1327,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1076,
											"end": 1077,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1047,
											"end": 1064,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "98"
										},
										{
											"begin": 1047,
											"end": 1062,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "52"
										},
										{
											"begin": 1047,
											"end": 1064,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 1047,
											"end": 1064,
											"name": "tag",
											"source": 4,
											"value": "98"
										},
										{
											"begin": 1047,
											"end": 1064,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1047,
											"end": 1078,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1047,
											"end": 1078,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 1039,
											"end": 1079,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "99"
										},
										{
											"begin": 1039,
											"end": 1079,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1039,
											"end": 1079,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1039,
											"end": 1079,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1039,
											"end": 1079,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 1039,
											"end": 1079,
											"name": "tag",
											"source": 4,
											"value": "99"
										},
										{
											"begin": 1039,
											"end": 1079,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1185,
											"end": 1211,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "101"
										},
										{
											"begin": 1204,
											"end": 1210,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1185,
											"end": 1203,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "102"
										},
										{
											"begin": 1185,
											"end": 1211,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 1185,
											"end": 1211,
											"name": "tag",
											"source": 4,
											"value": "101"
										},
										{
											"begin": 1185,
											"end": 1211,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1221,
											"end": 1233,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1221,
											"end": 1233,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1221,
											"end": 1237,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 1217,
											"end": 1323,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "103"
										},
										{
											"begin": 1217,
											"end": 1323,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1248,
											"end": 1260,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1266,
											"end": 1272,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1266,
											"end": 1285,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1286,
											"end": 1291,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1266,
											"end": 1292,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1266,
											"end": 1292,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1266,
											"end": 1292,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1266,
											"end": 1292,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1266,
											"end": 1292,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1266,
											"end": 1292,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1266,
											"end": 1292,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1266,
											"end": 1292,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1266,
											"end": 1292,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1266,
											"end": 1292,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1266,
											"end": 1292,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1266,
											"end": 1292,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1266,
											"end": 1292,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1266,
											"end": 1292,
											"name": "tag",
											"source": 4,
											"value": "104"
										},
										{
											"begin": 1266,
											"end": 1292,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1266,
											"end": 1292,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1266,
											"end": 1292,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1266,
											"end": 1292,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 1266,
											"end": 1292,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "106"
										},
										{
											"begin": 1266,
											"end": 1292,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1266,
											"end": 1292,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1266,
											"end": 1292,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1266,
											"end": 1292,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1266,
											"end": 1292,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1266,
											"end": 1292,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1266,
											"end": 1292,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 1266,
											"end": 1292,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1266,
											"end": 1292,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1266,
											"end": 1292,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1266,
											"end": 1292,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1266,
											"end": 1292,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1266,
											"end": 1292,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1266,
											"end": 1292,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1266,
											"end": 1292,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1266,
											"end": 1292,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "104"
										},
										{
											"begin": 1266,
											"end": 1292,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1266,
											"end": 1292,
											"name": "tag",
											"source": 4,
											"value": "106"
										},
										{
											"begin": 1266,
											"end": 1292,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1266,
											"end": 1292,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 1266,
											"end": 1292,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1266,
											"end": 1292,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1266,
											"end": 1292,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 1266,
											"end": 1292,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 1266,
											"end": 1292,
											"name": "EXP",
											"source": 4
										},
										{
											"begin": 1266,
											"end": 1292,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 1266,
											"end": 1292,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1266,
											"end": 1292,
											"name": "NOT",
											"source": 4
										},
										{
											"begin": 1266,
											"end": 1292,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1266,
											"end": 1292,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1266,
											"end": 1292,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1266,
											"end": 1292,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1266,
											"end": 1292,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 1266,
											"end": 1292,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1266,
											"end": 1292,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1266,
											"end": 1292,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1266,
											"end": 1292,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1266,
											"end": 1292,
											"name": "OR",
											"source": 4
										},
										{
											"begin": 1266,
											"end": 1292,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 1266,
											"end": 1292,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1266,
											"end": 1292,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1266,
											"end": 1292,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1266,
											"end": 1292,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1266,
											"end": 1292,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1266,
											"end": 1292,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1266,
											"end": 1292,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1266,
											"end": 1292,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1266,
											"end": 1292,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1266,
											"end": 1292,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1266,
											"end": 1292,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1266,
											"end": 1292,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1266,
											"end": 1292,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1266,
											"end": 1292,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1266,
											"end": 1292,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1266,
											"end": 1292,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1266,
											"end": 1292,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1266,
											"end": 1292,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1266,
											"end": 1292,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 1266,
											"end": 1292,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1266,
											"end": 1292,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 1266,
											"end": 1292,
											"name": "GAS",
											"source": 4
										},
										{
											"begin": 1266,
											"end": 1292,
											"name": "DELEGATECALL",
											"source": 4
										},
										{
											"begin": 1266,
											"end": 1292,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1266,
											"end": 1292,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1266,
											"end": 1292,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1266,
											"end": 1292,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 1266,
											"end": 1292,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1266,
											"end": 1292,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1266,
											"end": 1292,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1266,
											"end": 1292,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 1266,
											"end": 1292,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "109"
										},
										{
											"begin": 1266,
											"end": 1292,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1266,
											"end": 1292,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1266,
											"end": 1292,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1266,
											"end": 1292,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1266,
											"end": 1292,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1266,
											"end": 1292,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 1266,
											"end": 1292,
											"name": "NOT",
											"source": 4
										},
										{
											"begin": 1266,
											"end": 1292,
											"name": "PUSH",
											"source": 4,
											"value": "3F"
										},
										{
											"begin": 1266,
											"end": 1292,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 1266,
											"end": 1292,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1266,
											"end": 1292,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1266,
											"end": 1292,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1266,
											"end": 1292,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1266,
											"end": 1292,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1266,
											"end": 1292,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1266,
											"end": 1292,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 1266,
											"end": 1292,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1266,
											"end": 1292,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1266,
											"end": 1292,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 1266,
											"end": 1292,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1266,
											"end": 1292,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1266,
											"end": 1292,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 1266,
											"end": 1292,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1266,
											"end": 1292,
											"name": "RETURNDATACOPY",
											"source": 4
										},
										{
											"begin": 1266,
											"end": 1292,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "108"
										},
										{
											"begin": 1266,
											"end": 1292,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1266,
											"end": 1292,
											"name": "tag",
											"source": 4,
											"value": "109"
										},
										{
											"begin": 1266,
											"end": 1292,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1266,
											"end": 1292,
											"name": "PUSH",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 1266,
											"end": 1292,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1266,
											"end": 1292,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1266,
											"end": 1292,
											"name": "tag",
											"source": 4,
											"value": "108"
										},
										{
											"begin": 1266,
											"end": 1292,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1266,
											"end": 1292,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1247,
											"end": 1292,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1247,
											"end": 1292,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1247,
											"end": 1292,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1308,
											"end": 1315,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1300,
											"end": 1316,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "73"
										},
										{
											"begin": 1300,
											"end": 1316,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1300,
											"end": 1316,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1300,
											"end": 1316,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1300,
											"end": 1316,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 1217,
											"end": 1323,
											"name": "tag",
											"source": 4,
											"value": "103"
										},
										{
											"begin": 1217,
											"end": 1323,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 962,
											"end": 1327,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 962,
											"end": 1327,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 962,
											"end": 1327,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 1528,
											"end": 1606,
											"name": "tag",
											"source": 1,
											"value": "46"
										},
										{
											"begin": 1528,
											"end": 1606,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1571,
											"end": 1578,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1405,
											"end": 1413,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "112"
										},
										{
											"begin": 1405,
											"end": 1411,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "56"
										},
										{
											"begin": 1405,
											"end": 1413,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1405,
											"end": 1413,
											"name": "tag",
											"source": 1,
											"value": "112"
										},
										{
											"begin": 1405,
											"end": 1413,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1391,
											"end": 1413,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1391,
											"end": 1401,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1391,
											"end": 1413,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1391,
											"end": 1413,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1387,
											"end": 1463,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1387,
											"end": 1463,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "76"
										},
										{
											"begin": 1387,
											"end": 1463,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1593,
											"end": 1601,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "78"
										},
										{
											"begin": 1593,
											"end": 1599,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "56"
										},
										{
											"begin": 1593,
											"end": 1601,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1539,
											"end": 1674,
											"name": "tag",
											"source": 3,
											"value": "49"
										},
										{
											"begin": 1539,
											"end": 1674,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1625,
											"end": 1669,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "50"
										},
										{
											"begin": 1625,
											"end": 1667,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "120"
										},
										{
											"begin": 1625,
											"end": 1669,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 1100,
											"end": 1265,
											"name": "tag",
											"source": 2,
											"value": "52"
										},
										{
											"begin": 1100,
											"end": 1265,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 915,
											"end": 981,
											"name": "PUSH",
											"source": 2,
											"value": "360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC"
										},
										{
											"begin": 1244,
											"end": 1255,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1244,
											"end": 1255,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1228,
											"end": 1261,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 1034,
											"end": 1819,
											"name": "tag",
											"source": 5,
											"value": "53"
										},
										{
											"begin": 1034,
											"end": 1819,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1336,
											"end": 1350,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 1333,
											"end": 1334,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1330,
											"end": 1331,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1317,
											"end": 1351,
											"name": "CALLDATACOPY",
											"source": 5
										},
										{
											"begin": 1532,
											"end": 1533,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1529,
											"end": 1530,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1513,
											"end": 1527,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 1510,
											"end": 1511,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1494,
											"end": 1508,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 1487,
											"end": 1492,
											"name": "GAS",
											"source": 5
										},
										{
											"begin": 1474,
											"end": 1534,
											"name": "DELEGATECALL",
											"source": 5
										},
										{
											"begin": 1596,
											"end": 1612,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 1593,
											"end": 1594,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1590,
											"end": 1591,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1575,
											"end": 1613,
											"name": "RETURNDATACOPY",
											"source": 5
										},
										{
											"begin": 1628,
											"end": 1634,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1687,
											"end": 1743,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1687,
											"end": 1743,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 1687,
											"end": 1743,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "124"
										},
										{
											"begin": 1687,
											"end": 1743,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1782,
											"end": 1798,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 1779,
											"end": 1780,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1772,
											"end": 1799,
											"name": "RETURN",
											"source": 5
										},
										{
											"begin": 1687,
											"end": 1743,
											"name": "tag",
											"source": 5,
											"value": "124"
										},
										{
											"begin": 1687,
											"end": 1743,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1716,
											"end": 1732,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 1713,
											"end": 1714,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1706,
											"end": 1733,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 3255,
											"end": 3391,
											"name": "tag",
											"source": 1,
											"value": "56"
										},
										{
											"begin": 3255,
											"end": 3391,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1106,
											"end": 1172,
											"name": "PUSH",
											"source": 1,
											"value": "B53127684A568B3173AE13B9F8A6016E243E63B6E8EE1178D6A717850B5D6103"
										},
										{
											"begin": 3370,
											"end": 3381,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 3370,
											"end": 3381,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3355,
											"end": 3387,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 1400,
											"end": 1542,
											"name": "tag",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 1400,
											"end": 1542,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1462,
											"end": 1499,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "127"
										},
										{
											"begin": 1481,
											"end": 1498,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1462,
											"end": 1480,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "102"
										},
										{
											"begin": 1462,
											"end": 1499,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1462,
											"end": 1499,
											"name": "tag",
											"source": 2,
											"value": "127"
										},
										{
											"begin": 1462,
											"end": 1499,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1510,
											"end": 1537,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1510,
											"end": 1537,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1510,
											"end": 1537,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1510,
											"end": 1537,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1510,
											"end": 1537,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1510,
											"end": 1537,
											"name": "PUSH",
											"source": 2,
											"value": "BC7CD75A20EE27FD9ADEBAB32041F755214DBC6BFFA90CC0225B39DA2E5C2D3B"
										},
										{
											"begin": 1510,
											"end": 1537,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1510,
											"end": 1537,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1510,
											"end": 1537,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1510,
											"end": 1537,
											"name": "LOG2",
											"source": 2
										},
										{
											"begin": 1400,
											"end": 1542,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1400,
											"end": 1542,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 3507,
											"end": 3640,
											"name": "tag",
											"source": 1,
											"value": "88"
										},
										{
											"begin": 3507,
											"end": 3640,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1106,
											"end": 1172,
											"name": "PUSH",
											"source": 1,
											"value": "B53127684A568B3173AE13B9F8A6016E243E63B6E8EE1178D6A717850B5D6103"
										},
										{
											"begin": 3608,
											"end": 3630,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 3600,
											"end": 3636,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 1679,
											"end": 1982,
											"name": "tag",
											"source": 2,
											"value": "102"
										},
										{
											"begin": 1679,
											"end": 1982,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1764,
											"end": 1801,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "130"
										},
										{
											"begin": 1783,
											"end": 1800,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1764,
											"end": 1782,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "131"
										},
										{
											"begin": 1764,
											"end": 1801,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1764,
											"end": 1801,
											"name": "tag",
											"source": 2,
											"value": "130"
										},
										{
											"begin": 1764,
											"end": 1801,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1749,
											"end": 1876,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "132"
										},
										{
											"begin": 1749,
											"end": 1876,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1749,
											"end": 1876,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1749,
											"end": 1876,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1749,
											"end": 1876,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1749,
											"end": 1876,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1749,
											"end": 1876,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1749,
											"end": 1876,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1749,
											"end": 1876,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1749,
											"end": 1876,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1749,
											"end": 1876,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1749,
											"end": 1876,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1749,
											"end": 1876,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1749,
											"end": 1876,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1749,
											"end": 1876,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1749,
											"end": 1876,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1749,
											"end": 1876,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1749,
											"end": 1876,
											"name": "PUSH",
											"source": 2,
											"value": "3B"
										},
										{
											"begin": 1749,
											"end": 1876,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1749,
											"end": 1876,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1749,
											"end": 1876,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1749,
											"end": 1876,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1749,
											"end": 1876,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1749,
											"end": 1876,
											"name": "PUSH data",
											"source": 2,
											"value": "B5145A64CE8C406E5785204FE5B300F0CEDA96D6636350B38FDCCB9CD8C0C37C"
										},
										{
											"begin": 1749,
											"end": 1876,
											"name": "PUSH",
											"source": 2,
											"value": "3B"
										},
										{
											"begin": 1749,
											"end": 1876,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1749,
											"end": 1876,
											"name": "CODECOPY",
											"source": 2
										},
										{
											"begin": 1749,
											"end": 1876,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1749,
											"end": 1876,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1749,
											"end": 1876,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1749,
											"end": 1876,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1749,
											"end": 1876,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1749,
											"end": 1876,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1749,
											"end": 1876,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1749,
											"end": 1876,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1749,
											"end": 1876,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1749,
											"end": 1876,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1749,
											"end": 1876,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1749,
											"end": 1876,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1749,
											"end": 1876,
											"name": "tag",
											"source": 2,
											"value": "132"
										},
										{
											"begin": 1749,
											"end": 1876,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 915,
											"end": 981,
											"name": "PUSH",
											"source": 2,
											"value": "360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC"
										},
										{
											"begin": 1941,
											"end": 1972,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 1933,
											"end": 1978,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 3715,
											"end": 3889,
											"name": "tag",
											"source": 1,
											"value": "120"
										},
										{
											"begin": 3715,
											"end": 3889,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3794,
											"end": 3802,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "134"
										},
										{
											"begin": 3794,
											"end": 3800,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "56"
										},
										{
											"begin": 3794,
											"end": 3802,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3794,
											"end": 3802,
											"name": "tag",
											"source": 1,
											"value": "134"
										},
										{
											"begin": 3794,
											"end": 3802,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3780,
											"end": 3802,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3780,
											"end": 3790,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3780,
											"end": 3802,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3780,
											"end": 3802,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 3780,
											"end": 3802,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3772,
											"end": 3857,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "135"
										},
										{
											"begin": 3772,
											"end": 3857,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3772,
											"end": 3857,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3772,
											"end": 3857,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3772,
											"end": 3857,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3772,
											"end": 3857,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3772,
											"end": 3857,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 3772,
											"end": 3857,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3772,
											"end": 3857,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3772,
											"end": 3857,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3772,
											"end": 3857,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3772,
											"end": 3857,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3772,
											"end": 3857,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3772,
											"end": 3857,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3772,
											"end": 3857,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3772,
											"end": 3857,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3772,
											"end": 3857,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3772,
											"end": 3857,
											"name": "PUSH",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 3772,
											"end": 3857,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3772,
											"end": 3857,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3772,
											"end": 3857,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3772,
											"end": 3857,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3772,
											"end": 3857,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3772,
											"end": 3857,
											"name": "PUSH data",
											"source": 1,
											"value": "8B466BDE770D6D309A22D90EC051A62AD397BE6218A53E741989877EC297FC9"
										},
										{
											"begin": 3772,
											"end": 3857,
											"name": "PUSH",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 3772,
											"end": 3857,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3772,
											"end": 3857,
											"name": "CODECOPY",
											"source": 1
										},
										{
											"begin": 3772,
											"end": 3857,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3772,
											"end": 3857,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3772,
											"end": 3857,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3772,
											"end": 3857,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3772,
											"end": 3857,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3772,
											"end": 3857,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3772,
											"end": 3857,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3772,
											"end": 3857,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3772,
											"end": 3857,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3772,
											"end": 3857,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3772,
											"end": 3857,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3772,
											"end": 3857,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 3772,
											"end": 3857,
											"name": "tag",
											"source": 1,
											"value": "135"
										},
										{
											"begin": 3772,
											"end": 3857,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3863,
											"end": 3884,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "50"
										},
										{
											"begin": 3863,
											"end": 3882,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "50"
										},
										{
											"begin": 3863,
											"end": 3884,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 743,
											"end": 1329,
											"name": "tag",
											"source": 0,
											"value": "131"
										},
										{
											"begin": 743,
											"end": 1329,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 803,
											"end": 807,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1242,
											"end": 1262,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1242,
											"end": 1262,
											"name": "EXTCODEHASH",
											"source": 0
										},
										{
											"begin": 1089,
											"end": 1155,
											"name": "PUSH",
											"source": 0,
											"value": "C5D2460186F7233C927E7DB2DCC703C0E500B653CA82273B7BFAD8045D85A470"
										},
										{
											"begin": 1281,
											"end": 1304,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1281,
											"end": 1304,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1281,
											"end": 1304,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1281,
											"end": 1304,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1281,
											"end": 1304,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1281,
											"end": 1304,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1281,
											"end": 1323,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "139"
										},
										{
											"begin": 1281,
											"end": 1323,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1308,
											"end": 1323,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1308,
											"end": 1323,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1308,
											"end": 1323,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1281,
											"end": 1323,
											"name": "tag",
											"source": 0,
											"value": "139"
										},
										{
											"begin": 1281,
											"end": 1323,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1273,
											"end": 1324,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 743,
											"end": 1329,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 743,
											"end": 1329,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										}
									],
									".data": {
										"37112268CEB11E15373F32F9374A1F3287D0A3E6E5A9A435AC06367E6CD0CF00": "43616e6e6f74206368616e6765207468652061646d696e206f6620612070726f787920746f20746865207a65726f2061646472657373",
										"8B466BDE770D6D309A22D90EC051A62AD397BE6218A53E741989877EC297FC9": "43616e6e6f742063616c6c2066616c6c6261636b2066756e6374696f6e2066726f6d207468652070726f78792061646d696e",
										"B5145A64CE8C406E5785204FE5B300F0CEDA96D6636350B38FDCCB9CD8C0C37C": "43616e6e6f742073657420612070726f787920696d706c656d656e746174696f6e20746f2061206e6f6e2d636f6e74726163742061646472657373"
									}
								}
							}
						},
						"methodIdentifiers": {
							"admin()": "f851a440",
							"changeAdmin(address)": "8f283970",
							"implementation()": "5c60da1b",
							"initialize(address,address,bytes)": "cf7a1d77",
							"initialize(address,bytes)": "d1f57894",
							"upgradeTo(address)": "3659cfe6",
							"upgradeToAndCall(address,bytes)": "4f1ef286"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.7.5+commit.eb77ed08\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"previousAdmin\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newAdmin\",\"type\":\"address\"}],\"name\":\"AdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"Upgraded\",\"type\":\"event\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"inputs\":[],\"name\":\"admin\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newAdmin\",\"type\":\"address\"}],\"name\":\"changeAdmin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"implementation\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_logic\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_admin\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_logic\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newImplementation\",\"type\":\"address\"}],\"name\":\"upgradeTo\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newImplementation\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"upgradeToAndCall\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"From https://github.com/OpenZeppelin/openzeppelin-sdk/tree/solc-0.6/packages/lib/contracts/upgradeability Extends from BaseAdminUpgradeabilityProxy with an initializer for initializing the implementation, admin, and init data.\",\"kind\":\"dev\",\"methods\":{\"admin()\":{\"returns\":{\"_0\":\"The address of the proxy admin.\"}},\"changeAdmin(address)\":{\"details\":\"Changes the admin of the proxy. Only the current admin can call this function.\",\"params\":{\"newAdmin\":\"Address to transfer proxy administration to.\"}},\"implementation()\":{\"returns\":{\"_0\":\"The address of the implementation.\"}},\"initialize(address,address,bytes)\":{\"params\":{\"_admin\":\"Address of the proxy administrator.\",\"_data\":\"Data to send as msg.data to the implementation to initialize the proxied contract. It should include the signature and the parameters of the function to be called, as described in https://solidity.readthedocs.io/en/v0.4.24/abi-spec.html#function-selector-and-argument-encoding. This parameter is optional, if no data is given the initialization call to proxied contract will be skipped.\",\"_logic\":\"address of the initial implementation.\"}},\"initialize(address,bytes)\":{\"details\":\"Contract initializer.\",\"params\":{\"_data\":\"Data to send as msg.data to the implementation to initialize the proxied contract. It should include the signature and the parameters of the function to be called, as described in https://solidity.readthedocs.io/en/v0.4.24/abi-spec.html#function-selector-and-argument-encoding. This parameter is optional, if no data is given the initialization call to proxied contract will be skipped.\",\"_logic\":\"Address of the initial implementation.\"}},\"upgradeTo(address)\":{\"details\":\"Upgrade the backing implementation of the proxy. Only the admin can call this function.\",\"params\":{\"newImplementation\":\"Address of the new implementation.\"}},\"upgradeToAndCall(address,bytes)\":{\"details\":\"Upgrade the backing implementation of the proxy and call a function on the new implementation. This is useful to initialize the proxied contract.\",\"params\":{\"data\":\"Data to send as msg.data in the low level call. It should include the signature and the parameters of the function to be called, as described in https://solidity.readthedocs.io/en/v0.4.24/abi-spec.html#function-selector-and-argument-encoding.\",\"newImplementation\":\"Address of the new implementation.\"}}},\"title\":\"InitializableAdminUpgradeabilityProxy\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"initialize(address,address,bytes)\":{\"notice\":\"Contract initializer.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@aave/aave-stake/contracts/lib/InitializableAdminUpgradeabilityProxy.sol\":\"InitializableAdminUpgradeabilityProxy\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@aave/aave-stake/contracts/lib/Address.sol\":{\"keccak256\":\"0x456a1aebf00cb1f2987ca41f1924e4811703f10800a34ecb759e5d1dc472bb78\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ee41b6968eca15df18d524bb43b928e0405a6fe3d725ffe5950adb73c946cc0b\",\"dweb:/ipfs/QmP4hcWLnx33hoRpFjjQAodx4Hb7oXxHX58kpWcZX8v8cx\"]},\"@aave/aave-stake/contracts/lib/BaseAdminUpgradeabilityProxy.sol\":{\"keccak256\":\"0xa93535efff9350660e80c658515f6d6c00c6d8be5a09348158106ffca6a3d08e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3a7e12333a65579855cd41c5d51f34559ee46e570b4379f9d5cca21f807cb2fe\",\"dweb:/ipfs/QmViD2BsF392fhsLchjhsrpG4CZ8oH1qXSZAJspQk7aiV1\"]},\"@aave/aave-stake/contracts/lib/BaseUpgradeabilityProxy.sol\":{\"keccak256\":\"0x2bc918162fd3363fc9b25adccde01f0db4c7d4ae451b6111de9e53a2e3714ab0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://dd1780bbeacad4db1421e4aeb6424702a55bfa3d6a035049c5498f1094f4f625\",\"dweb:/ipfs/QmQ1TJgGBNqjnkcnWzykcfTcsoRiZbqH1VkYt6r5zAEzjN\"]},\"@aave/aave-stake/contracts/lib/InitializableAdminUpgradeabilityProxy.sol\":{\"keccak256\":\"0xd948a32af941252733d82e1256a2b7cff9ddb77d2cd88905913b89423c8e32fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bc7e7df8aca5c51e7c01b6c20993d80bd6e61b510ad653381ab197efd7af862b\",\"dweb:/ipfs/QmRi7zFJKf3Sr55WBBPAijqtaJR5D9v9bZJMxVTdmqsdyr\"]},\"@aave/aave-stake/contracts/lib/InitializableUpgradeabilityProxy.sol\":{\"keccak256\":\"0x8452dd80677dd13f2c84ccd122b88ddb08a4780e2d7da92391c7f0a8d366ce18\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c28a5bdbd275ba3e3aafa1003ddea52f41560a35a4db65bc7bf0a5d4016b8abc\",\"dweb:/ipfs/QmTJcssxTzaURSzB5ityZLFBUCEQYvaBQptaBeNvZt6EwM\"]},\"@aave/aave-stake/contracts/lib/Proxy.sol\":{\"keccak256\":\"0xceb6579b5f3a8428b34ac1d7801f83f7bbca6106af94ed5b8d780dabcaf921bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://83b1e544cfef24c262f0d5b92599800b729df77b439ff2e9cc1407c8f5ca620c\",\"dweb:/ipfs/QmTfeVEUh41YGbY2n7E3qh9DK5XTw4xuUZecaJo9Hf2Ax3\"]},\"@aave/aave-stake/contracts/lib/UpgradeabilityProxy.sol\":{\"keccak256\":\"0x757184e9d71fed0e08593c538d3d80b759c2cb202f182503f5f849357769bba8\",\"license\":\"agpl-3.0\",\"urls\":[\"bzz-raw://6d9bc5f2f1fd3cf6d50817cb9c282224d97ea3cbd2ed2429d13895f9487a80e8\",\"dweb:/ipfs/QmUiZhv5LMigKPPZwYGLotbRb1Z5FuZoHvwzEbtfV7VZae\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"initialize(address,address,bytes)": {
								"notice": "Contract initializer."
							}
						},
						"version": 1
					}
				}
			},
			"@aave/aave-stake/contracts/lib/InitializableUpgradeabilityProxy.sol": {
				"InitializableUpgradeabilityProxy": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "implementation",
									"type": "address"
								}
							],
							"name": "Upgraded",
							"type": "event"
						},
						{
							"stateMutability": "payable",
							"type": "fallback"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_logic",
									"type": "address"
								},
								{
									"internalType": "bytes",
									"name": "_data",
									"type": "bytes"
								}
							],
							"name": "initialize",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "From https://github.com/OpenZeppelin/openzeppelin-sdk/tree/solc-0.6/packages/lib/contracts/upgradeability Extends BaseUpgradeabilityProxy with an initializer for initializing implementation and init data.",
						"kind": "dev",
						"methods": {
							"initialize(address,bytes)": {
								"details": "Contract initializer.",
								"params": {
									"_data": "Data to send as msg.data to the implementation to initialize the proxied contract. It should include the signature and the parameters of the function to be called, as described in https://solidity.readthedocs.io/en/v0.4.24/abi-spec.html#function-selector-and-argument-encoding. This parameter is optional, if no data is given the initialization call to proxied contract will be skipped.",
									"_logic": "Address of the initial implementation."
								}
							}
						},
						"title": "InitializableUpgradeabilityProxy",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@aave/aave-stake/contracts/lib/InitializableUpgradeabilityProxy.sol\":367:1329  contract InitializableUpgradeabilityProxy is BaseUpgradeabilityProxy {... */\n  mstore(0x40, 0x80)\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"@aave/aave-stake/contracts/lib/InitializableUpgradeabilityProxy.sol\":367:1329  contract InitializableUpgradeabilityProxy is BaseUpgradeabilityProxy {... */\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0xd1f57894\n      eq\n      tag_3\n      jumpi\n    tag_1:\n        /* \"@aave/aave-stake/contracts/lib/Proxy.sol\":601:612  _fallback() */\n      tag_6\n        /* \"@aave/aave-stake/contracts/lib/Proxy.sol\":601:610  _fallback */\n      tag_7\n        /* \"@aave/aave-stake/contracts/lib/Proxy.sol\":601:612  _fallback() */\n      jump\t// in\n    tag_6:\n        /* \"@aave/aave-stake/contracts/lib/InitializableUpgradeabilityProxy.sol\":367:1329  contract InitializableUpgradeabilityProxy is BaseUpgradeabilityProxy {... */\n      stop\n        /* \"@aave/aave-stake/contracts/lib/InitializableUpgradeabilityProxy.sol\":962:1327  function initialize(address _logic, bytes memory _data) public payable {... */\n    tag_3:\n      tag_6\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x40\n      dup2\n      lt\n      iszero\n      tag_9\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_9:\n      sub(shl(0xa0, 0x01), 0x01)\n      dup3\n      calldataload\n      and\n      swap2\n      swap1\n      dup2\n      add\n      swap1\n      0x40\n      dup2\n      add\n      0x20\n      dup3\n      add\n      calldataload\n      0x0100000000\n      dup2\n      gt\n      iszero\n      tag_10\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_10:\n      dup3\n      add\n      dup4\n      0x20\n      dup3\n      add\n      gt\n      iszero\n      tag_11\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_11:\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap2\n      dup5\n      0x01\n      dup4\n      mul\n      dup5\n      add\n      gt\n      0x0100000000\n      dup4\n      gt\n      or\n      iszero\n      tag_12\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_12:\n      swap2\n      swap1\n      dup1\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap4\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup4\n      dup4\n      dup1\n      dup3\n      dup5\n      calldatacopy\n      0x00\n      swap3\n      add\n      swap2\n      swap1\n      swap2\n      mstore\n      pop\n      swap3\n      swap6\n      pop\n      tag_13\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// in\n        /* \"@aave/aave-stake/contracts/lib/Proxy.sol\":2167:2257  function _fallback() internal {... */\n    tag_7:\n        /* \"@aave/aave-stake/contracts/lib/Proxy.sol\":2203:2218  _willFallback() */\n      tag_15\n        /* \"@aave/aave-stake/contracts/lib/Proxy.sol\":2203:2216  _willFallback */\n      tag_17\n        /* \"@aave/aave-stake/contracts/lib/Proxy.sol\":2203:2218  _willFallback() */\n      jump\t// in\n    tag_15:\n        /* \"@aave/aave-stake/contracts/lib/Proxy.sol\":2224:2252  _delegate(_implementation()) */\n      tag_17\n        /* \"@aave/aave-stake/contracts/lib/Proxy.sol\":2234:2251  _implementation() */\n      tag_18\n        /* \"@aave/aave-stake/contracts/lib/Proxy.sol\":2234:2249  _implementation */\n      tag_19\n        /* \"@aave/aave-stake/contracts/lib/Proxy.sol\":2234:2251  _implementation() */\n      jump\t// in\n    tag_18:\n        /* \"@aave/aave-stake/contracts/lib/Proxy.sol\":2224:2233  _delegate */\n      tag_20\n        /* \"@aave/aave-stake/contracts/lib/Proxy.sol\":2224:2252  _delegate(_implementation()) */\n      jump\t// in\n    tag_17:\n        /* \"@aave/aave-stake/contracts/lib/Proxy.sol\":2167:2257  function _fallback() internal {... */\n      jump\t// out\n        /* \"@aave/aave-stake/contracts/lib/InitializableUpgradeabilityProxy.sol\":962:1327  function initialize(address _logic, bytes memory _data) public payable {... */\n    tag_13:\n        /* \"@aave/aave-stake/contracts/lib/InitializableUpgradeabilityProxy.sol\":1076:1077  0 */\n      0x00\n        /* \"@aave/aave-stake/contracts/lib/InitializableUpgradeabilityProxy.sol\":1047:1064  _implementation() */\n      tag_22\n        /* \"@aave/aave-stake/contracts/lib/InitializableUpgradeabilityProxy.sol\":1047:1062  _implementation */\n      tag_19\n        /* \"@aave/aave-stake/contracts/lib/InitializableUpgradeabilityProxy.sol\":1047:1064  _implementation() */\n      jump\t// in\n    tag_22:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@aave/aave-stake/contracts/lib/InitializableUpgradeabilityProxy.sol\":1047:1078  _implementation() == address(0) */\n      and\n      eq\n        /* \"@aave/aave-stake/contracts/lib/InitializableUpgradeabilityProxy.sol\":1039:1079  require(_implementation() == address(0)) */\n      tag_23\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_23:\n        /* \"@aave/aave-stake/contracts/lib/InitializableUpgradeabilityProxy.sol\":1185:1211  _setImplementation(_logic) */\n      tag_25\n        /* \"@aave/aave-stake/contracts/lib/InitializableUpgradeabilityProxy.sol\":1204:1210  _logic */\n      dup3\n        /* \"@aave/aave-stake/contracts/lib/InitializableUpgradeabilityProxy.sol\":1185:1203  _setImplementation */\n      tag_26\n        /* \"@aave/aave-stake/contracts/lib/InitializableUpgradeabilityProxy.sol\":1185:1211  _setImplementation(_logic) */\n      jump\t// in\n    tag_25:\n        /* \"@aave/aave-stake/contracts/lib/InitializableUpgradeabilityProxy.sol\":1221:1233  _data.length */\n      dup1\n      mload\n        /* \"@aave/aave-stake/contracts/lib/InitializableUpgradeabilityProxy.sol\":1221:1237  _data.length > 0 */\n      iszero\n        /* \"@aave/aave-stake/contracts/lib/InitializableUpgradeabilityProxy.sol\":1217:1323  if (_data.length > 0) {... */\n      tag_27\n      jumpi\n        /* \"@aave/aave-stake/contracts/lib/InitializableUpgradeabilityProxy.sol\":1248:1260  bool success */\n      0x00\n        /* \"@aave/aave-stake/contracts/lib/InitializableUpgradeabilityProxy.sol\":1266:1272  _logic */\n      dup3\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@aave/aave-stake/contracts/lib/InitializableUpgradeabilityProxy.sol\":1266:1285  _logic.delegatecall */\n      and\n        /* \"@aave/aave-stake/contracts/lib/InitializableUpgradeabilityProxy.sol\":1286:1291  _data */\n      dup3\n        /* \"@aave/aave-stake/contracts/lib/InitializableUpgradeabilityProxy.sol\":1266:1292  _logic.delegatecall(_data) */\n      mload(0x40)\n      dup1\n      dup3\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      dup1\n      dup4\n      dup4\n    tag_28:\n      0x20\n      dup4\n      lt\n      tag_30\n      jumpi\n      dup1\n      mload\n      dup3\n      mstore\n      not(0x1f)\n      swap1\n      swap3\n      add\n      swap2\n      0x20\n      swap2\n      dup3\n      add\n      swap2\n      add\n      jump(tag_28)\n    tag_30:\n      0x01\n      dup4\n      0x20\n      sub\n      0x0100\n      exp\n      sub\n      dup1\n      not\n      dup3\n      mload\n      and\n      dup2\n      dup5\n      mload\n      and\n      dup1\n      dup3\n      or\n      dup6\n      mstore\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n      add\n      swap2\n      pop\n      pop\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      gas\n      delegatecall\n      swap2\n      pop\n      pop\n      returndatasize\n      dup1\n      0x00\n      dup2\n      eq\n      tag_33\n      jumpi\n      mload(0x40)\n      swap2\n      pop\n      and(add(returndatasize, 0x3f), not(0x1f))\n      dup3\n      add\n      0x40\n      mstore\n      returndatasize\n      dup3\n      mstore\n      returndatasize\n      0x00\n      0x20\n      dup5\n      add\n      returndatacopy\n      jump(tag_32)\n    tag_33:\n      0x60\n      swap2\n      pop\n    tag_32:\n      pop\n        /* \"@aave/aave-stake/contracts/lib/InitializableUpgradeabilityProxy.sol\":1247:1292  (bool success, ) = _logic.delegatecall(_data) */\n      pop\n      swap1\n      pop\n        /* \"@aave/aave-stake/contracts/lib/InitializableUpgradeabilityProxy.sol\":1308:1315  success */\n      dup1\n        /* \"@aave/aave-stake/contracts/lib/InitializableUpgradeabilityProxy.sol\":1300:1316  require(success) */\n      tag_34\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_34:\n        /* \"@aave/aave-stake/contracts/lib/InitializableUpgradeabilityProxy.sol\":1217:1323  if (_data.length > 0) {... */\n      pop\n    tag_27:\n        /* \"@aave/aave-stake/contracts/lib/InitializableUpgradeabilityProxy.sol\":962:1327  function initialize(address _logic, bytes memory _data) public payable {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@aave/aave-stake/contracts/lib/BaseUpgradeabilityProxy.sol\":1100:1265  function _implementation() internal view override returns (address impl) {... */\n    tag_19:\n        /* \"@aave/aave-stake/contracts/lib/BaseUpgradeabilityProxy.sol\":915:981  0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc */\n      0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc\n        /* \"@aave/aave-stake/contracts/lib/BaseUpgradeabilityProxy.sol\":1244:1255  sload(slot) */\n      sload\n      swap1\n        /* \"@aave/aave-stake/contracts/lib/BaseUpgradeabilityProxy.sol\":1228:1261  {... */\n      jump\t// out\n        /* \"@aave/aave-stake/contracts/lib/Proxy.sol\":1034:1819  function _delegate(address implementation) internal {... */\n    tag_20:\n        /* \"@aave/aave-stake/contracts/lib/Proxy.sol\":1336:1350  calldatasize() */\n      calldatasize\n        /* \"@aave/aave-stake/contracts/lib/Proxy.sol\":1333:1334  0 */\n      0x00\n        /* \"@aave/aave-stake/contracts/lib/Proxy.sol\":1330:1331  0 */\n      dup1\n        /* \"@aave/aave-stake/contracts/lib/Proxy.sol\":1317:1351  calldatacopy(0, 0, calldatasize()) */\n      calldatacopy\n        /* \"@aave/aave-stake/contracts/lib/Proxy.sol\":1532:1533  0 */\n      0x00\n        /* \"@aave/aave-stake/contracts/lib/Proxy.sol\":1529:1530  0 */\n      dup1\n        /* \"@aave/aave-stake/contracts/lib/Proxy.sol\":1513:1527  calldatasize() */\n      calldatasize\n        /* \"@aave/aave-stake/contracts/lib/Proxy.sol\":1510:1511  0 */\n      0x00\n        /* \"@aave/aave-stake/contracts/lib/Proxy.sol\":1494:1508  implementation */\n      dup5\n        /* \"@aave/aave-stake/contracts/lib/Proxy.sol\":1487:1492  gas() */\n      gas\n        /* \"@aave/aave-stake/contracts/lib/Proxy.sol\":1474:1534  delegatecall(gas(), implementation, 0, calldatasize(), 0, 0) */\n      delegatecall\n        /* \"@aave/aave-stake/contracts/lib/Proxy.sol\":1596:1612  returndatasize() */\n      returndatasize\n        /* \"@aave/aave-stake/contracts/lib/Proxy.sol\":1593:1594  0 */\n      0x00\n        /* \"@aave/aave-stake/contracts/lib/Proxy.sol\":1590:1591  0 */\n      dup1\n        /* \"@aave/aave-stake/contracts/lib/Proxy.sol\":1575:1613  returndatacopy(0, 0, returndatasize()) */\n      returndatacopy\n        /* \"@aave/aave-stake/contracts/lib/Proxy.sol\":1628:1634  result */\n      dup1\n        /* \"@aave/aave-stake/contracts/lib/Proxy.sol\":1687:1743  case 0 {... */\n      dup1\n      iszero\n      tag_39\n      jumpi\n        /* \"@aave/aave-stake/contracts/lib/Proxy.sol\":1782:1798  returndatasize() */\n      returndatasize\n        /* \"@aave/aave-stake/contracts/lib/Proxy.sol\":1779:1780  0 */\n      0x00\n        /* \"@aave/aave-stake/contracts/lib/Proxy.sol\":1772:1799  return(0, returndatasize()) */\n      return\n        /* \"@aave/aave-stake/contracts/lib/Proxy.sol\":1687:1743  case 0 {... */\n    tag_39:\n        /* \"@aave/aave-stake/contracts/lib/Proxy.sol\":1716:1732  returndatasize() */\n      returndatasize\n        /* \"@aave/aave-stake/contracts/lib/Proxy.sol\":1713:1714  0 */\n      0x00\n        /* \"@aave/aave-stake/contracts/lib/Proxy.sol\":1706:1733  revert(0, returndatasize()) */\n      revert\n        /* \"@aave/aave-stake/contracts/lib/BaseUpgradeabilityProxy.sol\":1679:1982  function _setImplementation(address newImplementation) internal {... */\n    tag_26:\n        /* \"@aave/aave-stake/contracts/lib/BaseUpgradeabilityProxy.sol\":1764:1801  Address.isContract(newImplementation) */\n      tag_41\n        /* \"@aave/aave-stake/contracts/lib/BaseUpgradeabilityProxy.sol\":1783:1800  newImplementation */\n      dup2\n        /* \"@aave/aave-stake/contracts/lib/BaseUpgradeabilityProxy.sol\":1764:1782  Address.isContract */\n      tag_42\n        /* \"@aave/aave-stake/contracts/lib/BaseUpgradeabilityProxy.sol\":1764:1801  Address.isContract(newImplementation) */\n      jump\t// in\n    tag_41:\n        /* \"@aave/aave-stake/contracts/lib/BaseUpgradeabilityProxy.sol\":1749:1876  require(... */\n      tag_43\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x3b\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_b5145a64ce8c406e5785204fe5b300f0ceda96d6636350b38fdccb9cd8c0c37c\n      0x3b\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_43:\n        /* \"@aave/aave-stake/contracts/lib/BaseUpgradeabilityProxy.sol\":915:981  0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc */\n      0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc\n        /* \"@aave/aave-stake/contracts/lib/BaseUpgradeabilityProxy.sol\":1941:1972  sstore(slot, newImplementation) */\n      sstore\n        /* \"@aave/aave-stake/contracts/lib/BaseUpgradeabilityProxy.sol\":1933:1978  {... */\n      jump\t// out\n        /* \"@aave/aave-stake/contracts/lib/Address.sol\":743:1329  function isContract(address account) internal view returns (bool) {... */\n    tag_42:\n        /* \"@aave/aave-stake/contracts/lib/Address.sol\":803:807  bool */\n      0x00\n        /* \"@aave/aave-stake/contracts/lib/Address.sol\":1242:1262  extcodehash(account) */\n      dup2\n      extcodehash\n        /* \"@aave/aave-stake/contracts/lib/Address.sol\":1089:1155  0xc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470 */\n      0xc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470\n        /* \"@aave/aave-stake/contracts/lib/Address.sol\":1281:1304  codehash != accountHash */\n      dup2\n      dup2\n      eq\n      dup1\n      iszero\n      swap1\n        /* \"@aave/aave-stake/contracts/lib/Address.sol\":1281:1323  codehash != accountHash && codehash != 0x0 */\n      tag_45\n      jumpi\n      pop\n        /* \"@aave/aave-stake/contracts/lib/Address.sol\":1308:1323  codehash != 0x0 */\n      dup2\n      iszero\n      iszero\n        /* \"@aave/aave-stake/contracts/lib/Address.sol\":1281:1323  codehash != accountHash && codehash != 0x0 */\n    tag_45:\n        /* \"@aave/aave-stake/contracts/lib/Address.sol\":1273:1324  return (codehash != accountHash && codehash != 0x0) */\n      swap5\n        /* \"@aave/aave-stake/contracts/lib/Address.sol\":743:1329  function isContract(address account) internal view returns (bool) {... */\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n    stop\n    data_b5145a64ce8c406e5785204fe5b300f0ceda96d6636350b38fdccb9cd8c0c37c 43616e6e6f742073657420612070726f787920696d706c656d656e746174696f6e20746f2061206e6f6e2d636f6e74726163742061646472657373\n\n    auxdata: 0xa264697066735822122054f7cd170461ae85ebe7a153aa8d055ad091622a3c2c2a1530e72132fa4c2d4264736f6c63430007050033\n}\n",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50610338806100206000396000f3fe60806040526004361061001e5760003560e01c8063d1f5789414610028575b6100266100de565b005b6100266004803603604081101561003e57600080fd5b6001600160a01b03823516919081019060408101602082013564010000000081111561006957600080fd5b82018360208201111561007b57600080fd5b8035906020019184600183028401116401000000008311171561009d57600080fd5b91908080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152509295506100f8945050505050565b6100e66100f6565b6100f66100f16101da565b6101ff565b565b60006101026101da565b6001600160a01b03161461011557600080fd5b61011e82610223565b8051156101d6576000826001600160a01b0316826040518082805190602001908083835b602083106101615780518252601f199092019160209182019101610142565b6001836020036101000a038019825116818451168082178552505050505050905001915050600060405180830381855af49150503d80600081146101c1576040519150601f19603f3d011682016040523d82523d6000602084013e6101c6565b606091505b50509050806101d457600080fd5b505b5050565b7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc5490565b3660008037600080366000845af43d6000803e80801561021e573d6000f35b3d6000fd5b61022c8161028b565b6102675760405162461bcd60e51b815260040180806020018281038252603b8152602001806102c8603b913960400191505060405180910390fd5b7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc55565b6000813f7fc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a4708181148015906102bf57508115155b94935050505056fe43616e6e6f742073657420612070726f787920696d706c656d656e746174696f6e20746f2061206e6f6e2d636f6e74726163742061646472657373a264697066735822122054f7cd170461ae85ebe7a153aa8d055ad091622a3c2c2a1530e72132fa4c2d4264736f6c63430007050033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x338 DUP1 PUSH2 0x20 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x1E JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xD1F57894 EQ PUSH2 0x28 JUMPI JUMPDEST PUSH2 0x26 PUSH2 0xDE JUMP JUMPDEST STOP JUMPDEST PUSH2 0x26 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x3E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 CALLDATALOAD AND SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH1 0x40 DUP2 ADD PUSH1 0x20 DUP3 ADD CALLDATALOAD PUSH5 0x100000000 DUP2 GT ISZERO PUSH2 0x69 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0x7B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x1 DUP4 MUL DUP5 ADD GT PUSH5 0x100000000 DUP4 GT OR ISZERO PUSH2 0x9D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 DUP1 DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP SWAP3 SWAP6 POP PUSH2 0xF8 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH2 0xE6 PUSH2 0xF6 JUMP JUMPDEST PUSH2 0xF6 PUSH2 0xF1 PUSH2 0x1DA JUMP JUMPDEST PUSH2 0x1FF JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH2 0x102 PUSH2 0x1DA JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x115 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x11E DUP3 PUSH2 0x223 JUMP JUMPDEST DUP1 MLOAD ISZERO PUSH2 0x1D6 JUMPI PUSH1 0x0 DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 PUSH1 0x40 MLOAD DUP1 DUP3 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 JUMPDEST PUSH1 0x20 DUP4 LT PUSH2 0x161 JUMPI DUP1 MLOAD DUP3 MSTORE PUSH1 0x1F NOT SWAP1 SWAP3 ADD SWAP2 PUSH1 0x20 SWAP2 DUP3 ADD SWAP2 ADD PUSH2 0x142 JUMP JUMPDEST PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB DUP1 NOT DUP3 MLOAD AND DUP2 DUP5 MLOAD AND DUP1 DUP3 OR DUP6 MSTORE POP POP POP POP POP POP SWAP1 POP ADD SWAP2 POP POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 GAS DELEGATECALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x1C1 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x1C6 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0x1D4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMPDEST POP POP JUMP JUMPDEST PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC SLOAD SWAP1 JUMP JUMPDEST CALLDATASIZE PUSH1 0x0 DUP1 CALLDATACOPY PUSH1 0x0 DUP1 CALLDATASIZE PUSH1 0x0 DUP5 GAS DELEGATECALL RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY DUP1 DUP1 ISZERO PUSH2 0x21E JUMPI RETURNDATASIZE PUSH1 0x0 RETURN JUMPDEST RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST PUSH2 0x22C DUP2 PUSH2 0x28B JUMP JUMPDEST PUSH2 0x267 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x3B DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x2C8 PUSH1 0x3B SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC SSTORE JUMP JUMPDEST PUSH1 0x0 DUP2 EXTCODEHASH PUSH32 0xC5D2460186F7233C927E7DB2DCC703C0E500B653CA82273B7BFAD8045D85A470 DUP2 DUP2 EQ DUP1 ISZERO SWAP1 PUSH2 0x2BF JUMPI POP DUP2 ISZERO ISZERO JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP INVALID NUMBER PUSH2 0x6E6E PUSH16 0x742073657420612070726F787920696D PUSH17 0x6C656D656E746174696F6E20746F206120 PUSH15 0x6F6E2D636F6E747261637420616464 PUSH19 0x657373A264697066735822122054F7CD170461 0xAE DUP6 0xEB 0xE7 LOG1 MSTORE8 0xAA DUP14 SDIV GAS 0xD0 SWAP2 PUSH3 0x2A3C2C 0x2A ISZERO ADDRESS 0xE7 0x21 ORIGIN STATICCALL 0x4C 0x2D TIMESTAMP PUSH5 0x736F6C6343 STOP SMOD SDIV STOP CALLER ",
							"sourceMap": "367:962:4:-:0;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "60806040526004361061001e5760003560e01c8063d1f5789414610028575b6100266100de565b005b6100266004803603604081101561003e57600080fd5b6001600160a01b03823516919081019060408101602082013564010000000081111561006957600080fd5b82018360208201111561007b57600080fd5b8035906020019184600183028401116401000000008311171561009d57600080fd5b91908080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152509295506100f8945050505050565b6100e66100f6565b6100f66100f16101da565b6101ff565b565b60006101026101da565b6001600160a01b03161461011557600080fd5b61011e82610223565b8051156101d6576000826001600160a01b0316826040518082805190602001908083835b602083106101615780518252601f199092019160209182019101610142565b6001836020036101000a038019825116818451168082178552505050505050905001915050600060405180830381855af49150503d80600081146101c1576040519150601f19603f3d011682016040523d82523d6000602084013e6101c6565b606091505b50509050806101d457600080fd5b505b5050565b7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc5490565b3660008037600080366000845af43d6000803e80801561021e573d6000f35b3d6000fd5b61022c8161028b565b6102675760405162461bcd60e51b815260040180806020018281038252603b8152602001806102c8603b913960400191505060405180910390fd5b7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc55565b6000813f7fc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a4708181148015906102bf57508115155b94935050505056fe43616e6e6f742073657420612070726f787920696d706c656d656e746174696f6e20746f2061206e6f6e2d636f6e74726163742061646472657373a264697066735822122054f7cd170461ae85ebe7a153aa8d055ad091622a3c2c2a1530e72132fa4c2d4264736f6c63430007050033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x1E JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xD1F57894 EQ PUSH2 0x28 JUMPI JUMPDEST PUSH2 0x26 PUSH2 0xDE JUMP JUMPDEST STOP JUMPDEST PUSH2 0x26 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x3E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 CALLDATALOAD AND SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH1 0x40 DUP2 ADD PUSH1 0x20 DUP3 ADD CALLDATALOAD PUSH5 0x100000000 DUP2 GT ISZERO PUSH2 0x69 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0x7B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x1 DUP4 MUL DUP5 ADD GT PUSH5 0x100000000 DUP4 GT OR ISZERO PUSH2 0x9D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 DUP1 DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP SWAP3 SWAP6 POP PUSH2 0xF8 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH2 0xE6 PUSH2 0xF6 JUMP JUMPDEST PUSH2 0xF6 PUSH2 0xF1 PUSH2 0x1DA JUMP JUMPDEST PUSH2 0x1FF JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH2 0x102 PUSH2 0x1DA JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x115 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x11E DUP3 PUSH2 0x223 JUMP JUMPDEST DUP1 MLOAD ISZERO PUSH2 0x1D6 JUMPI PUSH1 0x0 DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 PUSH1 0x40 MLOAD DUP1 DUP3 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 JUMPDEST PUSH1 0x20 DUP4 LT PUSH2 0x161 JUMPI DUP1 MLOAD DUP3 MSTORE PUSH1 0x1F NOT SWAP1 SWAP3 ADD SWAP2 PUSH1 0x20 SWAP2 DUP3 ADD SWAP2 ADD PUSH2 0x142 JUMP JUMPDEST PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB DUP1 NOT DUP3 MLOAD AND DUP2 DUP5 MLOAD AND DUP1 DUP3 OR DUP6 MSTORE POP POP POP POP POP POP SWAP1 POP ADD SWAP2 POP POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 GAS DELEGATECALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x1C1 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x1C6 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0x1D4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMPDEST POP POP JUMP JUMPDEST PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC SLOAD SWAP1 JUMP JUMPDEST CALLDATASIZE PUSH1 0x0 DUP1 CALLDATACOPY PUSH1 0x0 DUP1 CALLDATASIZE PUSH1 0x0 DUP5 GAS DELEGATECALL RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY DUP1 DUP1 ISZERO PUSH2 0x21E JUMPI RETURNDATASIZE PUSH1 0x0 RETURN JUMPDEST RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST PUSH2 0x22C DUP2 PUSH2 0x28B JUMP JUMPDEST PUSH2 0x267 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x3B DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x2C8 PUSH1 0x3B SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC SSTORE JUMP JUMPDEST PUSH1 0x0 DUP2 EXTCODEHASH PUSH32 0xC5D2460186F7233C927E7DB2DCC703C0E500B653CA82273B7BFAD8045D85A470 DUP2 DUP2 EQ DUP1 ISZERO SWAP1 PUSH2 0x2BF JUMPI POP DUP2 ISZERO ISZERO JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP INVALID NUMBER PUSH2 0x6E6E PUSH16 0x742073657420612070726F787920696D PUSH17 0x6C656D656E746174696F6E20746F206120 PUSH15 0x6F6E2D636F6E747261637420616464 PUSH19 0x657373A264697066735822122054F7CD170461 0xAE DUP6 0xEB 0xE7 LOG1 MSTORE8 0xAA DUP14 SDIV GAS 0xD0 SWAP2 PUSH3 0x2A3C2C 0x2A ISZERO ADDRESS 0xE7 0x21 ORIGIN STATICCALL 0x4C 0x2D TIMESTAMP PUSH5 0x736F6C6343 STOP SMOD SDIV STOP CALLER ",
							"sourceMap": "367:962:4:-:0;;;;;;;;;;;;;;;;;;601:11:5;:9;:11::i;:::-;367:962:4;962:365;;;;;;;;;;;;;;;;-1:-1:-1;;;;;962:365:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;962:365:4;;-1:-1:-1;962:365:4;;-1:-1:-1;;;;;962:365:4:i;2167:90:5:-;2203:15;:13;:15::i;:::-;2224:28;2234:17;:15;:17::i;:::-;2224:9;:28::i;:::-;2167:90::o;962:365:4:-;1076:1;1047:17;:15;:17::i;:::-;-1:-1:-1;;;;;1047:31:4;;1039:40;;;;;;1185:26;1204:6;1185:18;:26::i;:::-;1221:12;;:16;1217:106;;1248:12;1266:6;-1:-1:-1;;;;;1266:19:4;1286:5;1266:26;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1266:26:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1247:45;;;1308:7;1300:16;;;;;;1217:106;;962:365;;:::o;1100:165:2:-;915:66;1244:11;;1228:33::o;1034:785:5:-;1336:14;1333:1;1330;1317:34;1532:1;1529;1513:14;1510:1;1494:14;1487:5;1474:60;1596:16;1593:1;1590;1575:38;1628:6;1687:56;;;;1782:16;1779:1;1772:27;1687:56;1716:16;1713:1;1706:27;1679:303:2;1764:37;1783:17;1764:18;:37::i;:::-;1749:127;;;;-1:-1:-1;;;1749:127:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;915:66;1941:31;1933:45::o;743:586:0:-;803:4;1242:20;;1089:66;1281:23;;;;;;:42;;-1:-1:-1;1308:15:0;;;1281:42;1273:51;743:586;-1:-1:-1;;;;743:586:0:o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "164800",
								"executionCost": "208",
								"totalCost": "165008"
							},
							"external": {
								"": "infinite",
								"initialize(address,bytes)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 367,
									"end": 1329,
									"name": "PUSH",
									"source": 4,
									"value": "80"
								},
								{
									"begin": 367,
									"end": 1329,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 367,
									"end": 1329,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 367,
									"end": 1329,
									"name": "CALLVALUE",
									"source": 4
								},
								{
									"begin": 367,
									"end": 1329,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 367,
									"end": 1329,
									"name": "ISZERO",
									"source": 4
								},
								{
									"begin": 367,
									"end": 1329,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 367,
									"end": 1329,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 367,
									"end": 1329,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 367,
									"end": 1329,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 367,
									"end": 1329,
									"name": "REVERT",
									"source": 4
								},
								{
									"begin": 367,
									"end": 1329,
									"name": "tag",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 367,
									"end": 1329,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 367,
									"end": 1329,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 367,
									"end": 1329,
									"name": "PUSH #[$]",
									"source": 4,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 367,
									"end": 1329,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 367,
									"end": 1329,
									"name": "PUSH [$]",
									"source": 4,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 367,
									"end": 1329,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 367,
									"end": 1329,
									"name": "CODECOPY",
									"source": 4
								},
								{
									"begin": 367,
									"end": 1329,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 367,
									"end": 1329,
									"name": "RETURN",
									"source": 4
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122054f7cd170461ae85ebe7a153aa8d055ad091622a3c2c2a1530e72132fa4c2d4264736f6c63430007050033",
									".code": [
										{
											"begin": 367,
											"end": 1329,
											"name": "PUSH",
											"source": 4,
											"value": "80"
										},
										{
											"begin": 367,
											"end": 1329,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 367,
											"end": 1329,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 367,
											"end": 1329,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 367,
											"end": 1329,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 367,
											"end": 1329,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 367,
											"end": 1329,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 367,
											"end": 1329,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 367,
											"end": 1329,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 367,
											"end": 1329,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": 367,
											"end": 1329,
											"name": "PUSH",
											"source": 4,
											"value": "E0"
										},
										{
											"begin": 367,
											"end": 1329,
											"name": "SHR",
											"source": 4
										},
										{
											"begin": 367,
											"end": 1329,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 367,
											"end": 1329,
											"name": "PUSH",
											"source": 4,
											"value": "D1F57894"
										},
										{
											"begin": 367,
											"end": 1329,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 367,
											"end": 1329,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 367,
											"end": 1329,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 367,
											"end": 1329,
											"name": "tag",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 367,
											"end": 1329,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 601,
											"end": 612,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "6"
										},
										{
											"begin": 601,
											"end": 610,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "7"
										},
										{
											"begin": 601,
											"end": 612,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 601,
											"end": 612,
											"name": "tag",
											"source": 5,
											"value": "6"
										},
										{
											"begin": 601,
											"end": 612,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 367,
											"end": 1329,
											"name": "STOP",
											"source": 4
										},
										{
											"begin": 962,
											"end": 1327,
											"name": "tag",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 962,
											"end": 1327,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 962,
											"end": 1327,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "6"
										},
										{
											"begin": 962,
											"end": 1327,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 962,
											"end": 1327,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 962,
											"end": 1327,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 962,
											"end": 1327,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 962,
											"end": 1327,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 962,
											"end": 1327,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 962,
											"end": 1327,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 962,
											"end": 1327,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 962,
											"end": 1327,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "9"
										},
										{
											"begin": 962,
											"end": 1327,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 962,
											"end": 1327,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 962,
											"end": 1327,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 962,
											"end": 1327,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 962,
											"end": 1327,
											"name": "tag",
											"source": 4,
											"value": "9"
										},
										{
											"begin": 962,
											"end": 1327,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 962,
											"end": 1327,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 962,
											"end": 1327,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": 962,
											"end": 1327,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 962,
											"end": 1327,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 962,
											"end": 1327,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 962,
											"end": 1327,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 962,
											"end": 1327,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 962,
											"end": 1327,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 962,
											"end": 1327,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 962,
											"end": 1327,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 962,
											"end": 1327,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 962,
											"end": 1327,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 962,
											"end": 1327,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 962,
											"end": 1327,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 962,
											"end": 1327,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": 962,
											"end": 1327,
											"name": "PUSH",
											"source": 4,
											"value": "100000000"
										},
										{
											"begin": 962,
											"end": 1327,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 962,
											"end": 1327,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 962,
											"end": 1327,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 962,
											"end": 1327,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "10"
										},
										{
											"begin": 962,
											"end": 1327,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 962,
											"end": 1327,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 962,
											"end": 1327,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 962,
											"end": 1327,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 962,
											"end": 1327,
											"name": "tag",
											"source": 4,
											"value": "10"
										},
										{
											"begin": 962,
											"end": 1327,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 962,
											"end": 1327,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 962,
											"end": 1327,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 962,
											"end": 1327,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 962,
											"end": 1327,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 962,
											"end": 1327,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 962,
											"end": 1327,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 962,
											"end": 1327,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 962,
											"end": 1327,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 962,
											"end": 1327,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "11"
										},
										{
											"begin": 962,
											"end": 1327,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 962,
											"end": 1327,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 962,
											"end": 1327,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 962,
											"end": 1327,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 962,
											"end": 1327,
											"name": "tag",
											"source": 4,
											"value": "11"
										},
										{
											"begin": 962,
											"end": 1327,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 962,
											"end": 1327,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 962,
											"end": 1327,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": 962,
											"end": 1327,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 962,
											"end": 1327,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 962,
											"end": 1327,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 962,
											"end": 1327,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 962,
											"end": 1327,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 962,
											"end": 1327,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 962,
											"end": 1327,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 962,
											"end": 1327,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 962,
											"end": 1327,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 962,
											"end": 1327,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 962,
											"end": 1327,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 962,
											"end": 1327,
											"name": "PUSH",
											"source": 4,
											"value": "100000000"
										},
										{
											"begin": 962,
											"end": 1327,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 962,
											"end": 1327,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 962,
											"end": 1327,
											"name": "OR",
											"source": 4
										},
										{
											"begin": 962,
											"end": 1327,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 962,
											"end": 1327,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "12"
										},
										{
											"begin": 962,
											"end": 1327,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 962,
											"end": 1327,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 962,
											"end": 1327,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 962,
											"end": 1327,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 962,
											"end": 1327,
											"name": "tag",
											"source": 4,
											"value": "12"
										},
										{
											"begin": 962,
											"end": 1327,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 962,
											"end": 1327,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 962,
											"end": 1327,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 962,
											"end": 1327,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 962,
											"end": 1327,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 962,
											"end": 1327,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 962,
											"end": 1327,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 962,
											"end": 1327,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 962,
											"end": 1327,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 962,
											"end": 1327,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 962,
											"end": 1327,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 962,
											"end": 1327,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 962,
											"end": 1327,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 962,
											"end": 1327,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 962,
											"end": 1327,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 962,
											"end": 1327,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 962,
											"end": 1327,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 962,
											"end": 1327,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 962,
											"end": 1327,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 962,
											"end": 1327,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 962,
											"end": 1327,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 962,
											"end": 1327,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 962,
											"end": 1327,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 962,
											"end": 1327,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 962,
											"end": 1327,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 962,
											"end": 1327,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 962,
											"end": 1327,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 962,
											"end": 1327,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 962,
											"end": 1327,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 962,
											"end": 1327,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 962,
											"end": 1327,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 962,
											"end": 1327,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 962,
											"end": 1327,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 962,
											"end": 1327,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 962,
											"end": 1327,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 962,
											"end": 1327,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 962,
											"end": 1327,
											"name": "CALLDATACOPY",
											"source": 4
										},
										{
											"begin": 962,
											"end": 1327,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 962,
											"end": 1327,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 962,
											"end": 1327,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 962,
											"end": 1327,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 962,
											"end": 1327,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 962,
											"end": 1327,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 962,
											"end": 1327,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 962,
											"end": 1327,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 962,
											"end": 1327,
											"name": "SWAP6",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 962,
											"end": 1327,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "13"
										},
										{
											"begin": 962,
											"end": 1327,
											"name": "SWAP5",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 962,
											"end": 1327,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 2167,
											"end": 2257,
											"name": "tag",
											"source": 5,
											"value": "7"
										},
										{
											"begin": 2167,
											"end": 2257,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2203,
											"end": 2218,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "15"
										},
										{
											"begin": 2203,
											"end": 2216,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "17"
										},
										{
											"begin": 2203,
											"end": 2218,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 2203,
											"end": 2218,
											"name": "tag",
											"source": 5,
											"value": "15"
										},
										{
											"begin": 2203,
											"end": 2218,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2224,
											"end": 2252,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "17"
										},
										{
											"begin": 2234,
											"end": 2251,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "18"
										},
										{
											"begin": 2234,
											"end": 2249,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "19"
										},
										{
											"begin": 2234,
											"end": 2251,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 2234,
											"end": 2251,
											"name": "tag",
											"source": 5,
											"value": "18"
										},
										{
											"begin": 2234,
											"end": 2251,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2224,
											"end": 2233,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2224,
											"end": 2252,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 2224,
											"end": 2252,
											"name": "tag",
											"source": 5,
											"value": "17"
										},
										{
											"begin": 2224,
											"end": 2252,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2167,
											"end": 2257,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 962,
											"end": 1327,
											"name": "tag",
											"source": 4,
											"value": "13"
										},
										{
											"begin": 962,
											"end": 1327,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1076,
											"end": 1077,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1047,
											"end": 1064,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "22"
										},
										{
											"begin": 1047,
											"end": 1062,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "19"
										},
										{
											"begin": 1047,
											"end": 1064,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 1047,
											"end": 1064,
											"name": "tag",
											"source": 4,
											"value": "22"
										},
										{
											"begin": 1047,
											"end": 1064,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1047,
											"end": 1078,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1047,
											"end": 1078,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 1039,
											"end": 1079,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "23"
										},
										{
											"begin": 1039,
											"end": 1079,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1039,
											"end": 1079,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1039,
											"end": 1079,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1039,
											"end": 1079,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 1039,
											"end": 1079,
											"name": "tag",
											"source": 4,
											"value": "23"
										},
										{
											"begin": 1039,
											"end": 1079,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1185,
											"end": 1211,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "25"
										},
										{
											"begin": 1204,
											"end": 1210,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1185,
											"end": 1203,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "26"
										},
										{
											"begin": 1185,
											"end": 1211,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 1185,
											"end": 1211,
											"name": "tag",
											"source": 4,
											"value": "25"
										},
										{
											"begin": 1185,
											"end": 1211,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1221,
											"end": 1233,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1221,
											"end": 1233,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1221,
											"end": 1237,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 1217,
											"end": 1323,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "27"
										},
										{
											"begin": 1217,
											"end": 1323,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1248,
											"end": 1260,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1266,
											"end": 1272,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1266,
											"end": 1285,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1286,
											"end": 1291,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1266,
											"end": 1292,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1266,
											"end": 1292,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1266,
											"end": 1292,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1266,
											"end": 1292,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1266,
											"end": 1292,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1266,
											"end": 1292,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1266,
											"end": 1292,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1266,
											"end": 1292,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1266,
											"end": 1292,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1266,
											"end": 1292,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1266,
											"end": 1292,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1266,
											"end": 1292,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1266,
											"end": 1292,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1266,
											"end": 1292,
											"name": "tag",
											"source": 4,
											"value": "28"
										},
										{
											"begin": 1266,
											"end": 1292,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1266,
											"end": 1292,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1266,
											"end": 1292,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1266,
											"end": 1292,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 1266,
											"end": 1292,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "30"
										},
										{
											"begin": 1266,
											"end": 1292,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1266,
											"end": 1292,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1266,
											"end": 1292,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1266,
											"end": 1292,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1266,
											"end": 1292,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1266,
											"end": 1292,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1266,
											"end": 1292,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 1266,
											"end": 1292,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1266,
											"end": 1292,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1266,
											"end": 1292,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1266,
											"end": 1292,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1266,
											"end": 1292,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1266,
											"end": 1292,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1266,
											"end": 1292,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1266,
											"end": 1292,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1266,
											"end": 1292,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "28"
										},
										{
											"begin": 1266,
											"end": 1292,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1266,
											"end": 1292,
											"name": "tag",
											"source": 4,
											"value": "30"
										},
										{
											"begin": 1266,
											"end": 1292,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1266,
											"end": 1292,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 1266,
											"end": 1292,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1266,
											"end": 1292,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1266,
											"end": 1292,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 1266,
											"end": 1292,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 1266,
											"end": 1292,
											"name": "EXP",
											"source": 4
										},
										{
											"begin": 1266,
											"end": 1292,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 1266,
											"end": 1292,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1266,
											"end": 1292,
											"name": "NOT",
											"source": 4
										},
										{
											"begin": 1266,
											"end": 1292,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1266,
											"end": 1292,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1266,
											"end": 1292,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1266,
											"end": 1292,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1266,
											"end": 1292,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 1266,
											"end": 1292,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1266,
											"end": 1292,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1266,
											"end": 1292,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1266,
											"end": 1292,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1266,
											"end": 1292,
											"name": "OR",
											"source": 4
										},
										{
											"begin": 1266,
											"end": 1292,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 1266,
											"end": 1292,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1266,
											"end": 1292,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1266,
											"end": 1292,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1266,
											"end": 1292,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1266,
											"end": 1292,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1266,
											"end": 1292,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1266,
											"end": 1292,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1266,
											"end": 1292,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1266,
											"end": 1292,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1266,
											"end": 1292,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1266,
											"end": 1292,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1266,
											"end": 1292,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1266,
											"end": 1292,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1266,
											"end": 1292,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1266,
											"end": 1292,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1266,
											"end": 1292,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1266,
											"end": 1292,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1266,
											"end": 1292,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1266,
											"end": 1292,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 1266,
											"end": 1292,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1266,
											"end": 1292,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 1266,
											"end": 1292,
											"name": "GAS",
											"source": 4
										},
										{
											"begin": 1266,
											"end": 1292,
											"name": "DELEGATECALL",
											"source": 4
										},
										{
											"begin": 1266,
											"end": 1292,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1266,
											"end": 1292,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1266,
											"end": 1292,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1266,
											"end": 1292,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 1266,
											"end": 1292,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1266,
											"end": 1292,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1266,
											"end": 1292,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1266,
											"end": 1292,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 1266,
											"end": 1292,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "33"
										},
										{
											"begin": 1266,
											"end": 1292,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1266,
											"end": 1292,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1266,
											"end": 1292,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1266,
											"end": 1292,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1266,
											"end": 1292,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1266,
											"end": 1292,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 1266,
											"end": 1292,
											"name": "NOT",
											"source": 4
										},
										{
											"begin": 1266,
											"end": 1292,
											"name": "PUSH",
											"source": 4,
											"value": "3F"
										},
										{
											"begin": 1266,
											"end": 1292,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 1266,
											"end": 1292,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1266,
											"end": 1292,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1266,
											"end": 1292,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1266,
											"end": 1292,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1266,
											"end": 1292,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1266,
											"end": 1292,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1266,
											"end": 1292,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 1266,
											"end": 1292,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1266,
											"end": 1292,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1266,
											"end": 1292,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 1266,
											"end": 1292,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1266,
											"end": 1292,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1266,
											"end": 1292,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 1266,
											"end": 1292,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1266,
											"end": 1292,
											"name": "RETURNDATACOPY",
											"source": 4
										},
										{
											"begin": 1266,
											"end": 1292,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "32"
										},
										{
											"begin": 1266,
											"end": 1292,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1266,
											"end": 1292,
											"name": "tag",
											"source": 4,
											"value": "33"
										},
										{
											"begin": 1266,
											"end": 1292,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1266,
											"end": 1292,
											"name": "PUSH",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 1266,
											"end": 1292,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1266,
											"end": 1292,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1266,
											"end": 1292,
											"name": "tag",
											"source": 4,
											"value": "32"
										},
										{
											"begin": 1266,
											"end": 1292,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1266,
											"end": 1292,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1247,
											"end": 1292,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1247,
											"end": 1292,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1247,
											"end": 1292,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1308,
											"end": 1315,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1300,
											"end": 1316,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "34"
										},
										{
											"begin": 1300,
											"end": 1316,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1300,
											"end": 1316,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1300,
											"end": 1316,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1300,
											"end": 1316,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 1300,
											"end": 1316,
											"name": "tag",
											"source": 4,
											"value": "34"
										},
										{
											"begin": 1300,
											"end": 1316,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1217,
											"end": 1323,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1217,
											"end": 1323,
											"name": "tag",
											"source": 4,
											"value": "27"
										},
										{
											"begin": 1217,
											"end": 1323,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 962,
											"end": 1327,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 962,
											"end": 1327,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 962,
											"end": 1327,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 1100,
											"end": 1265,
											"name": "tag",
											"source": 2,
											"value": "19"
										},
										{
											"begin": 1100,
											"end": 1265,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 915,
											"end": 981,
											"name": "PUSH",
											"source": 2,
											"value": "360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC"
										},
										{
											"begin": 1244,
											"end": 1255,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1244,
											"end": 1255,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1228,
											"end": 1261,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 1034,
											"end": 1819,
											"name": "tag",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1034,
											"end": 1819,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1336,
											"end": 1350,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 1333,
											"end": 1334,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1330,
											"end": 1331,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1317,
											"end": 1351,
											"name": "CALLDATACOPY",
											"source": 5
										},
										{
											"begin": 1532,
											"end": 1533,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1529,
											"end": 1530,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1513,
											"end": 1527,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 1510,
											"end": 1511,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1494,
											"end": 1508,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 1487,
											"end": 1492,
											"name": "GAS",
											"source": 5
										},
										{
											"begin": 1474,
											"end": 1534,
											"name": "DELEGATECALL",
											"source": 5
										},
										{
											"begin": 1596,
											"end": 1612,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 1593,
											"end": 1594,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1590,
											"end": 1591,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1575,
											"end": 1613,
											"name": "RETURNDATACOPY",
											"source": 5
										},
										{
											"begin": 1628,
											"end": 1634,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1687,
											"end": 1743,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1687,
											"end": 1743,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 1687,
											"end": 1743,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "39"
										},
										{
											"begin": 1687,
											"end": 1743,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1782,
											"end": 1798,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 1779,
											"end": 1780,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1772,
											"end": 1799,
											"name": "RETURN",
											"source": 5
										},
										{
											"begin": 1687,
											"end": 1743,
											"name": "tag",
											"source": 5,
											"value": "39"
										},
										{
											"begin": 1687,
											"end": 1743,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1716,
											"end": 1732,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 1713,
											"end": 1714,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1706,
											"end": 1733,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 1679,
											"end": 1982,
											"name": "tag",
											"source": 2,
											"value": "26"
										},
										{
											"begin": 1679,
											"end": 1982,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1764,
											"end": 1801,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "41"
										},
										{
											"begin": 1783,
											"end": 1800,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1764,
											"end": 1782,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "42"
										},
										{
											"begin": 1764,
											"end": 1801,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1764,
											"end": 1801,
											"name": "tag",
											"source": 2,
											"value": "41"
										},
										{
											"begin": 1764,
											"end": 1801,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1749,
											"end": 1876,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "43"
										},
										{
											"begin": 1749,
											"end": 1876,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1749,
											"end": 1876,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1749,
											"end": 1876,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1749,
											"end": 1876,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1749,
											"end": 1876,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1749,
											"end": 1876,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1749,
											"end": 1876,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1749,
											"end": 1876,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1749,
											"end": 1876,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1749,
											"end": 1876,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1749,
											"end": 1876,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1749,
											"end": 1876,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1749,
											"end": 1876,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1749,
											"end": 1876,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1749,
											"end": 1876,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1749,
											"end": 1876,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1749,
											"end": 1876,
											"name": "PUSH",
											"source": 2,
											"value": "3B"
										},
										{
											"begin": 1749,
											"end": 1876,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1749,
											"end": 1876,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1749,
											"end": 1876,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1749,
											"end": 1876,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1749,
											"end": 1876,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1749,
											"end": 1876,
											"name": "PUSH data",
											"source": 2,
											"value": "B5145A64CE8C406E5785204FE5B300F0CEDA96D6636350B38FDCCB9CD8C0C37C"
										},
										{
											"begin": 1749,
											"end": 1876,
											"name": "PUSH",
											"source": 2,
											"value": "3B"
										},
										{
											"begin": 1749,
											"end": 1876,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1749,
											"end": 1876,
											"name": "CODECOPY",
											"source": 2
										},
										{
											"begin": 1749,
											"end": 1876,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1749,
											"end": 1876,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1749,
											"end": 1876,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1749,
											"end": 1876,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1749,
											"end": 1876,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1749,
											"end": 1876,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1749,
											"end": 1876,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1749,
											"end": 1876,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1749,
											"end": 1876,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1749,
											"end": 1876,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1749,
											"end": 1876,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1749,
											"end": 1876,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1749,
											"end": 1876,
											"name": "tag",
											"source": 2,
											"value": "43"
										},
										{
											"begin": 1749,
											"end": 1876,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 915,
											"end": 981,
											"name": "PUSH",
											"source": 2,
											"value": "360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC"
										},
										{
											"begin": 1941,
											"end": 1972,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 1933,
											"end": 1978,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 743,
											"end": 1329,
											"name": "tag",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 743,
											"end": 1329,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 803,
											"end": 807,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1242,
											"end": 1262,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1242,
											"end": 1262,
											"name": "EXTCODEHASH",
											"source": 0
										},
										{
											"begin": 1089,
											"end": 1155,
											"name": "PUSH",
											"source": 0,
											"value": "C5D2460186F7233C927E7DB2DCC703C0E500B653CA82273B7BFAD8045D85A470"
										},
										{
											"begin": 1281,
											"end": 1304,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1281,
											"end": 1304,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1281,
											"end": 1304,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1281,
											"end": 1304,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1281,
											"end": 1304,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1281,
											"end": 1304,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1281,
											"end": 1323,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 1281,
											"end": 1323,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1308,
											"end": 1323,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1308,
											"end": 1323,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1308,
											"end": 1323,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1281,
											"end": 1323,
											"name": "tag",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 1281,
											"end": 1323,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1273,
											"end": 1324,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 743,
											"end": 1329,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 743,
											"end": 1329,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										}
									],
									".data": {
										"B5145A64CE8C406E5785204FE5B300F0CEDA96D6636350B38FDCCB9CD8C0C37C": "43616e6e6f742073657420612070726f787920696d706c656d656e746174696f6e20746f2061206e6f6e2d636f6e74726163742061646472657373"
									}
								}
							}
						},
						"methodIdentifiers": {
							"initialize(address,bytes)": "d1f57894"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.7.5+commit.eb77ed08\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"Upgraded\",\"type\":\"event\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_logic\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"From https://github.com/OpenZeppelin/openzeppelin-sdk/tree/solc-0.6/packages/lib/contracts/upgradeability Extends BaseUpgradeabilityProxy with an initializer for initializing implementation and init data.\",\"kind\":\"dev\",\"methods\":{\"initialize(address,bytes)\":{\"details\":\"Contract initializer.\",\"params\":{\"_data\":\"Data to send as msg.data to the implementation to initialize the proxied contract. It should include the signature and the parameters of the function to be called, as described in https://solidity.readthedocs.io/en/v0.4.24/abi-spec.html#function-selector-and-argument-encoding. This parameter is optional, if no data is given the initialization call to proxied contract will be skipped.\",\"_logic\":\"Address of the initial implementation.\"}}},\"title\":\"InitializableUpgradeabilityProxy\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@aave/aave-stake/contracts/lib/InitializableUpgradeabilityProxy.sol\":\"InitializableUpgradeabilityProxy\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@aave/aave-stake/contracts/lib/Address.sol\":{\"keccak256\":\"0x456a1aebf00cb1f2987ca41f1924e4811703f10800a34ecb759e5d1dc472bb78\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ee41b6968eca15df18d524bb43b928e0405a6fe3d725ffe5950adb73c946cc0b\",\"dweb:/ipfs/QmP4hcWLnx33hoRpFjjQAodx4Hb7oXxHX58kpWcZX8v8cx\"]},\"@aave/aave-stake/contracts/lib/BaseUpgradeabilityProxy.sol\":{\"keccak256\":\"0x2bc918162fd3363fc9b25adccde01f0db4c7d4ae451b6111de9e53a2e3714ab0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://dd1780bbeacad4db1421e4aeb6424702a55bfa3d6a035049c5498f1094f4f625\",\"dweb:/ipfs/QmQ1TJgGBNqjnkcnWzykcfTcsoRiZbqH1VkYt6r5zAEzjN\"]},\"@aave/aave-stake/contracts/lib/InitializableUpgradeabilityProxy.sol\":{\"keccak256\":\"0x8452dd80677dd13f2c84ccd122b88ddb08a4780e2d7da92391c7f0a8d366ce18\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c28a5bdbd275ba3e3aafa1003ddea52f41560a35a4db65bc7bf0a5d4016b8abc\",\"dweb:/ipfs/QmTJcssxTzaURSzB5ityZLFBUCEQYvaBQptaBeNvZt6EwM\"]},\"@aave/aave-stake/contracts/lib/Proxy.sol\":{\"keccak256\":\"0xceb6579b5f3a8428b34ac1d7801f83f7bbca6106af94ed5b8d780dabcaf921bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://83b1e544cfef24c262f0d5b92599800b729df77b439ff2e9cc1407c8f5ca620c\",\"dweb:/ipfs/QmTfeVEUh41YGbY2n7E3qh9DK5XTw4xuUZecaJo9Hf2Ax3\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@aave/aave-stake/contracts/lib/Proxy.sol": {
				"Proxy": {
					"abi": [
						{
							"stateMutability": "payable",
							"type": "fallback"
						}
					],
					"devdoc": {
						"details": "From https://github.com/OpenZeppelin/openzeppelin-sdk/tree/solc-0.6/packages/lib/contracts/upgradeability Implements delegation of calls to other contracts, with proper forwarding of return values and bubbling of failures. It defines a fallback function that delegates all calls to the address returned by the abstract _implementation() internal function.",
						"kind": "dev",
						"methods": {},
						"title": "Proxy",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.7.5+commit.eb77ed08\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"stateMutability\":\"payable\",\"type\":\"fallback\"}],\"devdoc\":{\"details\":\"From https://github.com/OpenZeppelin/openzeppelin-sdk/tree/solc-0.6/packages/lib/contracts/upgradeability Implements delegation of calls to other contracts, with proper forwarding of return values and bubbling of failures. It defines a fallback function that delegates all calls to the address returned by the abstract _implementation() internal function.\",\"kind\":\"dev\",\"methods\":{},\"title\":\"Proxy\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@aave/aave-stake/contracts/lib/Proxy.sol\":\"Proxy\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@aave/aave-stake/contracts/lib/Proxy.sol\":{\"keccak256\":\"0xceb6579b5f3a8428b34ac1d7801f83f7bbca6106af94ed5b8d780dabcaf921bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://83b1e544cfef24c262f0d5b92599800b729df77b439ff2e9cc1407c8f5ca620c\",\"dweb:/ipfs/QmTfeVEUh41YGbY2n7E3qh9DK5XTw4xuUZecaJo9Hf2Ax3\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@aave/aave-stake/contracts/lib/UpgradeabilityProxy.sol": {
				"UpgradeabilityProxy": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_logic",
									"type": "address"
								},
								{
									"internalType": "bytes",
									"name": "_data",
									"type": "bytes"
								}
							],
							"stateMutability": "payable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "implementation",
									"type": "address"
								}
							],
							"name": "Upgraded",
							"type": "event"
						},
						{
							"stateMutability": "payable",
							"type": "fallback"
						}
					],
					"devdoc": {
						"details": "From https://github.com/OpenZeppelin/openzeppelin-sdk/tree/solc-0.6/packages/lib/contracts/upgradeability Extends BaseUpgradeabilityProxy with a constructor for initializing implementation and init data.",
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Contract constructor.",
								"params": {
									"_data": "Data to send as msg.data to the implementation to initialize the proxied contract. It should include the signature and the parameters of the function to be called, as described in https://solidity.readthedocs.io/en/v0.4.24/abi-spec.html#function-selector-and-argument-encoding. This parameter is optional, if no data is given the initialization call to proxied contract will be skipped.",
									"_logic": "Address of the initial implementation."
								}
							}
						},
						"title": "UpgradeabilityProxy",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@aave/aave-stake/contracts/lib/UpgradeabilityProxy.sol\":358:1253  contract UpgradeabilityProxy is BaseUpgradeabilityProxy {... */\n  mstore(0x40, 0x80)\n    /* \"@aave/aave-stake/contracts/lib/UpgradeabilityProxy.sol\":940:1251  constructor(address _logic, bytes memory _data) public payable {... */\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  0x40\n  dup2\n  lt\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  dup2\n  mload\n  0x20\n  dup4\n  add\n  dup1\n  mload\n  mload(0x40)\n  swap3\n  swap5\n  swap3\n  swap4\n  dup4\n  add\n  swap3\n  swap2\n  swap1\n  dup5\n  0x0100000000\n  dup3\n  gt\n  iszero\n  tag_2\n  jumpi\n  0x00\n  dup1\n  revert\ntag_2:\n  swap1\n  dup4\n  add\n  swap1\n  0x20\n  dup3\n  add\n  dup6\n  dup2\n  gt\n  iszero\n  tag_3\n  jumpi\n  0x00\n  dup1\n  revert\ntag_3:\n  dup3\n  mload\n  0x0100000000\n  dup2\n  gt\n  dup3\n  dup3\n  add\n  dup9\n  lt\n  or\n  iszero\n  tag_4\n  jumpi\n  0x00\n  dup1\n  revert\ntag_4:\n  dup3\n  mstore\n  pop\n  dup2\n  mload\n  0x20\n  swap2\n  dup3\n  add\n  swap3\n  swap1\n  swap2\n  add\n  swap1\n  dup1\n  dup4\n  dup4\n  0x00\ntag_5:\n  dup4\n  dup2\n  lt\n  iszero\n  tag_7\n  jumpi\n  dup2\n  dup2\n  add\n  mload\n  dup4\n  dup3\n  add\n  mstore\n  0x20\n  add\n  jump(tag_5)\ntag_7:\n  pop\n  pop\n  pop\n  pop\n  swap1\n  pop\n  swap1\n  dup2\n  add\n  swap1\n  0x1f\n  and\n  dup1\n  iszero\n  tag_8\n  jumpi\n  dup1\n  dup3\n  sub\n  dup1\n  mload\n  0x01\n  dup4\n  0x20\n  sub\n  0x0100\n  exp\n  sub\n  not\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap2\n  pop\ntag_8:\n  pop\n  0x40\n  mstore\n  pop\n    /* \"@aave/aave-stake/contracts/lib/UpgradeabilityProxy.sol\":1009:1103  assert(IMPLEMENTATION_SLOT == bytes32(uint256(keccak256('eip1967.proxy.implementation')) - 1)) */\n  tag_11\n  swap2\n  pop\n  pop\n  jump\ntag_11:\n    /* \"@aave/aave-stake/contracts/lib/UpgradeabilityProxy.sol\":1109:1135  _setImplementation(_logic) */\n  tag_12\n    /* \"@aave/aave-stake/contracts/lib/UpgradeabilityProxy.sol\":1128:1134  _logic */\n  dup3\n    /* \"@aave/aave-stake/contracts/lib/UpgradeabilityProxy.sol\":1109:1127  _setImplementation */\n  tag_13\n    /* \"@aave/aave-stake/contracts/lib/UpgradeabilityProxy.sol\":1109:1135  _setImplementation(_logic) */\n  jump\t// in\ntag_12:\n    /* \"@aave/aave-stake/contracts/lib/UpgradeabilityProxy.sol\":1145:1157  _data.length */\n  dup1\n  mload\n    /* \"@aave/aave-stake/contracts/lib/UpgradeabilityProxy.sol\":1145:1161  _data.length > 0 */\n  iszero\n    /* \"@aave/aave-stake/contracts/lib/UpgradeabilityProxy.sol\":1141:1247  if (_data.length > 0) {... */\n  tag_14\n  jumpi\n    /* \"@aave/aave-stake/contracts/lib/UpgradeabilityProxy.sol\":1172:1184  bool success */\n  0x00\n    /* \"@aave/aave-stake/contracts/lib/UpgradeabilityProxy.sol\":1190:1196  _logic */\n  dup3\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"@aave/aave-stake/contracts/lib/UpgradeabilityProxy.sol\":1190:1209  _logic.delegatecall */\n  and\n    /* \"@aave/aave-stake/contracts/lib/UpgradeabilityProxy.sol\":1210:1215  _data */\n  dup3\n    /* \"@aave/aave-stake/contracts/lib/UpgradeabilityProxy.sol\":1190:1216  _logic.delegatecall(_data) */\n  mload(0x40)\n  dup1\n  dup3\n  dup1\n  mload\n  swap1\n  0x20\n  add\n  swap1\n  dup1\n  dup4\n  dup4\ntag_15:\n  0x20\n  dup4\n  lt\n  tag_17\n  jumpi\n  dup1\n  mload\n  dup3\n  mstore\n  not(0x1f)\n  swap1\n  swap3\n  add\n  swap2\n  0x20\n  swap2\n  dup3\n  add\n  swap2\n  add\n  jump(tag_15)\ntag_17:\n  0x01\n  dup4\n  0x20\n  sub\n  0x0100\n  exp\n  sub\n  dup1\n  not\n  dup3\n  mload\n  and\n  dup2\n  dup5\n  mload\n  and\n  dup1\n  dup3\n  or\n  dup6\n  mstore\n  pop\n  pop\n  pop\n  pop\n  pop\n  pop\n  swap1\n  pop\n  add\n  swap2\n  pop\n  pop\n  0x00\n  mload(0x40)\n  dup1\n  dup4\n  sub\n  dup2\n  dup6\n  gas\n  delegatecall\n  swap2\n  pop\n  pop\n  returndatasize\n  dup1\n  0x00\n  dup2\n  eq\n  tag_20\n  jumpi\n  mload(0x40)\n  swap2\n  pop\n  and(add(returndatasize, 0x3f), not(0x1f))\n  dup3\n  add\n  0x40\n  mstore\n  returndatasize\n  dup3\n  mstore\n  returndatasize\n  0x00\n  0x20\n  dup5\n  add\n  returndatacopy\n  jump(tag_19)\ntag_20:\n  0x60\n  swap2\n  pop\ntag_19:\n  pop\n    /* \"@aave/aave-stake/contracts/lib/UpgradeabilityProxy.sol\":1171:1216  (bool success, ) = _logic.delegatecall(_data) */\n  pop\n  swap1\n  pop\n    /* \"@aave/aave-stake/contracts/lib/UpgradeabilityProxy.sol\":1232:1239  success */\n  dup1\n    /* \"@aave/aave-stake/contracts/lib/UpgradeabilityProxy.sol\":1224:1240  require(success) */\n  tag_21\n  jumpi\n  0x00\n  dup1\n  revert\ntag_21:\n    /* \"@aave/aave-stake/contracts/lib/UpgradeabilityProxy.sol\":1141:1247  if (_data.length > 0) {... */\n  pop\ntag_14:\n    /* \"@aave/aave-stake/contracts/lib/UpgradeabilityProxy.sol\":940:1251  constructor(address _logic, bytes memory _data) public payable {... */\n  pop\n  pop\n    /* \"@aave/aave-stake/contracts/lib/UpgradeabilityProxy.sol\":358:1253  contract UpgradeabilityProxy is BaseUpgradeabilityProxy {... */\n  jump(tag_22)\n    /* \"@aave/aave-stake/contracts/lib/BaseUpgradeabilityProxy.sol\":1679:1982  function _setImplementation(address newImplementation) internal {... */\ntag_13:\n    /* \"@aave/aave-stake/contracts/lib/BaseUpgradeabilityProxy.sol\":1764:1801  Address.isContract(newImplementation) */\n  tag_24\n    /* \"@aave/aave-stake/contracts/lib/BaseUpgradeabilityProxy.sol\":1783:1800  newImplementation */\n  dup2\n    /* \"@aave/aave-stake/contracts/lib/BaseUpgradeabilityProxy.sol\":1764:1782  Address.isContract */\n  or(tag_0_7, shl(0x20, tag_25))\n    /* \"@aave/aave-stake/contracts/lib/BaseUpgradeabilityProxy.sol\":1764:1801  Address.isContract(newImplementation) */\n  0x20\n  shr\n  jump\t// in\ntag_24:\n    /* \"@aave/aave-stake/contracts/lib/BaseUpgradeabilityProxy.sol\":1749:1876  require(... */\n  tag_26\n  jumpi\n  mload(0x40)\n  shl(0xe5, 0x461bcd)\n  dup2\n  mstore\n  0x04\n  add\n  dup1\n  dup1\n  0x20\n  add\n  dup3\n  dup2\n  sub\n  dup3\n  mstore\n  0x3b\n  dup2\n  mstore\n  0x20\n  add\n  dup1\n  data_b5145a64ce8c406e5785204fe5b300f0ceda96d6636350b38fdccb9cd8c0c37c\n  0x3b\n  swap2\n  codecopy\n  0x40\n  add\n  swap2\n  pop\n  pop\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\ntag_26:\n    /* \"@aave/aave-stake/contracts/lib/BaseUpgradeabilityProxy.sol\":915:981  0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc */\n  0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc\n    /* \"@aave/aave-stake/contracts/lib/BaseUpgradeabilityProxy.sol\":1941:1972  sstore(slot, newImplementation) */\n  sstore\n    /* \"@aave/aave-stake/contracts/lib/BaseUpgradeabilityProxy.sol\":1933:1978  {... */\n  jump\t// out\n    /* \"@aave/aave-stake/contracts/lib/Address.sol\":743:1329  function isContract(address account) internal view returns (bool) {... */\ntag_25:\n    /* \"@aave/aave-stake/contracts/lib/Address.sol\":803:807  bool */\n  0x00\n    /* \"@aave/aave-stake/contracts/lib/Address.sol\":1242:1262  extcodehash(account) */\n  dup2\n  extcodehash\n    /* \"@aave/aave-stake/contracts/lib/Address.sol\":1089:1155  0xc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470 */\n  0xc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470\n    /* \"@aave/aave-stake/contracts/lib/Address.sol\":1281:1304  codehash != accountHash */\n  dup2\n  dup2\n  eq\n  dup1\n  iszero\n  swap1\n    /* \"@aave/aave-stake/contracts/lib/Address.sol\":1281:1323  codehash != accountHash && codehash != 0x0 */\n  tag_28\n  jumpi\n  pop\n    /* \"@aave/aave-stake/contracts/lib/Address.sol\":1308:1323  codehash != 0x0 */\n  dup2\n  iszero\n  iszero\n    /* \"@aave/aave-stake/contracts/lib/Address.sol\":1281:1323  codehash != accountHash && codehash != 0x0 */\ntag_28:\n    /* \"@aave/aave-stake/contracts/lib/Address.sol\":1273:1324  return (codehash != accountHash && codehash != 0x0) */\n  swap5\n    /* \"@aave/aave-stake/contracts/lib/Address.sol\":743:1329  function isContract(address account) internal view returns (bool) {... */\n  swap4\n  pop\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"@aave/aave-stake/contracts/lib/UpgradeabilityProxy.sol\":358:1253  contract UpgradeabilityProxy is BaseUpgradeabilityProxy {... */\ntag_22:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\ndata_b5145a64ce8c406e5785204fe5b300f0ceda96d6636350b38fdccb9cd8c0c37c 43616e6e6f742073657420612070726f787920696d706c656d656e746174696f6e20746f2061206e6f6e2d636f6e74726163742061646472657373\n\nsub_0: assembly {\n        /* \"@aave/aave-stake/contracts/lib/UpgradeabilityProxy.sol\":358:1253  contract UpgradeabilityProxy is BaseUpgradeabilityProxy {... */\n      mstore(0x40, 0x80)\n        /* \"@aave/aave-stake/contracts/lib/Proxy.sol\":601:612  _fallback() */\n      tag_5\n        /* \"@aave/aave-stake/contracts/lib/Proxy.sol\":601:610  _fallback */\n      tag_6\n        /* \"@aave/aave-stake/contracts/lib/Proxy.sol\":601:612  _fallback() */\n      jump\t// in\n    tag_5:\n        /* \"@aave/aave-stake/contracts/lib/UpgradeabilityProxy.sol\":358:1253  contract UpgradeabilityProxy is BaseUpgradeabilityProxy {... */\n      stop\n        /* \"@aave/aave-stake/contracts/lib/Proxy.sol\":2167:2257  function _fallback() internal {... */\n    tag_6:\n        /* \"@aave/aave-stake/contracts/lib/Proxy.sol\":2203:2218  _willFallback() */\n      tag_9\n        /* \"@aave/aave-stake/contracts/lib/Proxy.sol\":2203:2216  _willFallback */\n      tag_11\n        /* \"@aave/aave-stake/contracts/lib/Proxy.sol\":2203:2218  _willFallback() */\n      jump\t// in\n    tag_9:\n        /* \"@aave/aave-stake/contracts/lib/Proxy.sol\":2224:2252  _delegate(_implementation()) */\n      tag_11\n        /* \"@aave/aave-stake/contracts/lib/Proxy.sol\":2234:2251  _implementation() */\n      tag_12\n        /* \"@aave/aave-stake/contracts/lib/Proxy.sol\":2234:2249  _implementation */\n      tag_13\n        /* \"@aave/aave-stake/contracts/lib/Proxy.sol\":2234:2251  _implementation() */\n      jump\t// in\n    tag_12:\n        /* \"@aave/aave-stake/contracts/lib/Proxy.sol\":2224:2233  _delegate */\n      tag_14\n        /* \"@aave/aave-stake/contracts/lib/Proxy.sol\":2224:2252  _delegate(_implementation()) */\n      jump\t// in\n    tag_11:\n        /* \"@aave/aave-stake/contracts/lib/Proxy.sol\":2167:2257  function _fallback() internal {... */\n      jump\t// out\n        /* \"@aave/aave-stake/contracts/lib/Address.sol\":743:1329  function isContract(address account) internal view returns (bool) {... */\n    tag_7:\n        /* \"@aave/aave-stake/contracts/lib/Address.sol\":803:807  bool */\n      0x00\n        /* \"@aave/aave-stake/contracts/lib/Address.sol\":1242:1262  extcodehash(account) */\n      dup2\n      extcodehash\n        /* \"@aave/aave-stake/contracts/lib/Address.sol\":1089:1155  0xc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470 */\n      0xc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470\n        /* \"@aave/aave-stake/contracts/lib/Address.sol\":1281:1304  codehash != accountHash */\n      dup2\n      dup2\n      eq\n      dup1\n      iszero\n      swap1\n        /* \"@aave/aave-stake/contracts/lib/Address.sol\":1281:1323  codehash != accountHash && codehash != 0x0 */\n      tag_16\n      jumpi\n      pop\n        /* \"@aave/aave-stake/contracts/lib/Address.sol\":1308:1323  codehash != 0x0 */\n      dup2\n      iszero\n      iszero\n        /* \"@aave/aave-stake/contracts/lib/Address.sol\":1281:1323  codehash != accountHash && codehash != 0x0 */\n    tag_16:\n        /* \"@aave/aave-stake/contracts/lib/Address.sol\":1273:1324  return (codehash != accountHash && codehash != 0x0) */\n      swap5\n        /* \"@aave/aave-stake/contracts/lib/Address.sol\":743:1329  function isContract(address account) internal view returns (bool) {... */\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@aave/aave-stake/contracts/lib/BaseUpgradeabilityProxy.sol\":1100:1265  function _implementation() internal view override returns (address impl) {... */\n    tag_13:\n        /* \"@aave/aave-stake/contracts/lib/BaseUpgradeabilityProxy.sol\":915:981  0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc */\n      0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc\n        /* \"@aave/aave-stake/contracts/lib/BaseUpgradeabilityProxy.sol\":1244:1255  sload(slot) */\n      sload\n      swap1\n        /* \"@aave/aave-stake/contracts/lib/BaseUpgradeabilityProxy.sol\":1228:1261  {... */\n      jump\t// out\n        /* \"@aave/aave-stake/contracts/lib/Proxy.sol\":1034:1819  function _delegate(address implementation) internal {... */\n    tag_14:\n        /* \"@aave/aave-stake/contracts/lib/Proxy.sol\":1336:1350  calldatasize() */\n      calldatasize\n        /* \"@aave/aave-stake/contracts/lib/Proxy.sol\":1333:1334  0 */\n      0x00\n        /* \"@aave/aave-stake/contracts/lib/Proxy.sol\":1330:1331  0 */\n      dup1\n        /* \"@aave/aave-stake/contracts/lib/Proxy.sol\":1317:1351  calldatacopy(0, 0, calldatasize()) */\n      calldatacopy\n        /* \"@aave/aave-stake/contracts/lib/Proxy.sol\":1532:1533  0 */\n      0x00\n        /* \"@aave/aave-stake/contracts/lib/Proxy.sol\":1529:1530  0 */\n      dup1\n        /* \"@aave/aave-stake/contracts/lib/Proxy.sol\":1513:1527  calldatasize() */\n      calldatasize\n        /* \"@aave/aave-stake/contracts/lib/Proxy.sol\":1510:1511  0 */\n      0x00\n        /* \"@aave/aave-stake/contracts/lib/Proxy.sol\":1494:1508  implementation */\n      dup5\n        /* \"@aave/aave-stake/contracts/lib/Proxy.sol\":1487:1492  gas() */\n      gas\n        /* \"@aave/aave-stake/contracts/lib/Proxy.sol\":1474:1534  delegatecall(gas(), implementation, 0, calldatasize(), 0, 0) */\n      delegatecall\n        /* \"@aave/aave-stake/contracts/lib/Proxy.sol\":1596:1612  returndatasize() */\n      returndatasize\n        /* \"@aave/aave-stake/contracts/lib/Proxy.sol\":1593:1594  0 */\n      0x00\n        /* \"@aave/aave-stake/contracts/lib/Proxy.sol\":1590:1591  0 */\n      dup1\n        /* \"@aave/aave-stake/contracts/lib/Proxy.sol\":1575:1613  returndatacopy(0, 0, returndatasize()) */\n      returndatacopy\n        /* \"@aave/aave-stake/contracts/lib/Proxy.sol\":1628:1634  result */\n      dup1\n        /* \"@aave/aave-stake/contracts/lib/Proxy.sol\":1687:1743  case 0 {... */\n      dup1\n      iszero\n      tag_21\n      jumpi\n        /* \"@aave/aave-stake/contracts/lib/Proxy.sol\":1782:1798  returndatasize() */\n      returndatasize\n        /* \"@aave/aave-stake/contracts/lib/Proxy.sol\":1779:1780  0 */\n      0x00\n        /* \"@aave/aave-stake/contracts/lib/Proxy.sol\":1772:1799  return(0, returndatasize()) */\n      return\n        /* \"@aave/aave-stake/contracts/lib/Proxy.sol\":1687:1743  case 0 {... */\n    tag_21:\n        /* \"@aave/aave-stake/contracts/lib/Proxy.sol\":1716:1732  returndatasize() */\n      returndatasize\n        /* \"@aave/aave-stake/contracts/lib/Proxy.sol\":1713:1714  0 */\n      0x00\n        /* \"@aave/aave-stake/contracts/lib/Proxy.sol\":1706:1733  revert(0, returndatasize()) */\n      revert\n\n    auxdata: 0xa2646970667358221220128ea84265502b1a4c98fb4ced9ff317be6312ac9a839134e57d4b4524d66b5c64736f6c63430007050033\n}\n",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "608060405260405161037b38038061037b8339818101604052604081101561002657600080fd5b81516020830180516040519294929383019291908464010000000082111561004d57600080fd5b90830190602082018581111561006257600080fd5b825164010000000081118282018810171561007c57600080fd5b82525081516020918201929091019080838360005b838110156100a9578181015183820152602001610091565b50505050905090810190601f1680156100d65780820380516001836020036101000a031916815260200191505b50604052506100e3915050565b6100ec826101ab565b8051156101a4576000826001600160a01b0316826040518082805190602001908083835b6020831061012f5780518252601f199092019160209182019101610110565b6001836020036101000a038019825116818451168082178552505050505050905001915050600060405180830381855af49150503d806000811461018f576040519150601f19603f3d011682016040523d82523d6000602084013e610194565b606091505b50509050806101a257600080fd5b505b5050610259565b6101be8161021d60201b6100201760201c565b6101f95760405162461bcd60e51b815260040180806020018281038252603b815260200180610340603b913960400191505060405180910390fd5b7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc55565b6000813f7fc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a47081811480159061025157508115155b949350505050565b60d9806102676000396000f3fe6080604052600a600c565b005b6012601e565b601e601a605b565b6080565b565b6000813f7fc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470818114801590605357508115155b949350505050565b7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc5490565b3660008037600080366000845af43d6000803e808015609e573d6000f35b3d6000fdfea2646970667358221220128ea84265502b1a4c98fb4ced9ff317be6312ac9a839134e57d4b4524d66b5c64736f6c6343000705003343616e6e6f742073657420612070726f787920696d706c656d656e746174696f6e20746f2061206e6f6e2d636f6e74726163742061646472657373",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x40 MLOAD PUSH2 0x37B CODESIZE SUB DUP1 PUSH2 0x37B DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x26 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH1 0x20 DUP4 ADD DUP1 MLOAD PUSH1 0x40 MLOAD SWAP3 SWAP5 SWAP3 SWAP4 DUP4 ADD SWAP3 SWAP2 SWAP1 DUP5 PUSH5 0x100000000 DUP3 GT ISZERO PUSH2 0x4D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 DUP4 ADD SWAP1 PUSH1 0x20 DUP3 ADD DUP6 DUP2 GT ISZERO PUSH2 0x62 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 MLOAD PUSH5 0x100000000 DUP2 GT DUP3 DUP3 ADD DUP9 LT OR ISZERO PUSH2 0x7C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 MSTORE POP DUP2 MLOAD PUSH1 0x20 SWAP2 DUP3 ADD SWAP3 SWAP1 SWAP2 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xA9 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x91 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0xD6 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP PUSH1 0x40 MSTORE POP PUSH2 0xE3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xEC DUP3 PUSH2 0x1AB JUMP JUMPDEST DUP1 MLOAD ISZERO PUSH2 0x1A4 JUMPI PUSH1 0x0 DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 PUSH1 0x40 MLOAD DUP1 DUP3 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 JUMPDEST PUSH1 0x20 DUP4 LT PUSH2 0x12F JUMPI DUP1 MLOAD DUP3 MSTORE PUSH1 0x1F NOT SWAP1 SWAP3 ADD SWAP2 PUSH1 0x20 SWAP2 DUP3 ADD SWAP2 ADD PUSH2 0x110 JUMP JUMPDEST PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB DUP1 NOT DUP3 MLOAD AND DUP2 DUP5 MLOAD AND DUP1 DUP3 OR DUP6 MSTORE POP POP POP POP POP POP SWAP1 POP ADD SWAP2 POP POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 GAS DELEGATECALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x18F JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x194 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0x1A2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMPDEST POP POP PUSH2 0x259 JUMP JUMPDEST PUSH2 0x1BE DUP2 PUSH2 0x21D PUSH1 0x20 SHL PUSH2 0x20 OR PUSH1 0x20 SHR JUMP JUMPDEST PUSH2 0x1F9 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x3B DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x340 PUSH1 0x3B SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC SSTORE JUMP JUMPDEST PUSH1 0x0 DUP2 EXTCODEHASH PUSH32 0xC5D2460186F7233C927E7DB2DCC703C0E500B653CA82273B7BFAD8045D85A470 DUP2 DUP2 EQ DUP1 ISZERO SWAP1 PUSH2 0x251 JUMPI POP DUP2 ISZERO ISZERO JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0xD9 DUP1 PUSH2 0x267 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0xA PUSH1 0xC JUMP JUMPDEST STOP JUMPDEST PUSH1 0x12 PUSH1 0x1E JUMP JUMPDEST PUSH1 0x1E PUSH1 0x1A PUSH1 0x5B JUMP JUMPDEST PUSH1 0x80 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP2 EXTCODEHASH PUSH32 0xC5D2460186F7233C927E7DB2DCC703C0E500B653CA82273B7BFAD8045D85A470 DUP2 DUP2 EQ DUP1 ISZERO SWAP1 PUSH1 0x53 JUMPI POP DUP2 ISZERO ISZERO JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC SLOAD SWAP1 JUMP JUMPDEST CALLDATASIZE PUSH1 0x0 DUP1 CALLDATACOPY PUSH1 0x0 DUP1 CALLDATASIZE PUSH1 0x0 DUP5 GAS DELEGATECALL RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY DUP1 DUP1 ISZERO PUSH1 0x9E JUMPI RETURNDATASIZE PUSH1 0x0 RETURN JUMPDEST RETURNDATASIZE PUSH1 0x0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SLT DUP15 0xA8 TIMESTAMP PUSH6 0x502B1A4C98FB 0x4C 0xED SWAP16 RETURN OR 0xBE PUSH4 0x12AC9A83 SWAP2 CALLVALUE 0xE5 PUSH30 0x4B4524D66B5C64736F6C6343000705003343616E6E6F7420736574206120 PUSH17 0x726F787920696D706C656D656E74617469 PUSH16 0x6E20746F2061206E6F6E2D636F6E7472 PUSH2 0x6374 KECCAK256 PUSH2 0x6464 PUSH19 0x65737300000000000000000000000000000000 ",
							"sourceMap": "358:895:6:-:0;;;940:311;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;940:311:6;;;;;;;;;;-1:-1:-1;940:311:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;940:311:6;;-1:-1:-1;1009:94:6;;-1:-1:-1;;1009:94:6;;1109:26;1128:6;1109:18;:26::i;:::-;1145:12;;:16;1141:106;;1172:12;1190:6;-1:-1:-1;;;;;1190:19:6;1210:5;1190:26;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1190:26:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1171:45;;;1232:7;1224:16;;;;;;1141:106;;940:311;;358:895;;1679:303:2;1764:37;1783:17;1764:18;;;;;:37;;:::i;:::-;1749:127;;;;-1:-1:-1;;;1749:127:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;915:66;1941:31;1933:45::o;743:586:0:-;803:4;1242:20;;1089:66;1281:23;;;;;;:42;;-1:-1:-1;1308:15:0;;;1281:42;1273:51;743:586;-1:-1:-1;;;;743:586:0:o;358:895:6:-;;;;;;;"
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "6080604052600a600c565b005b6012601e565b601e601a605b565b6080565b565b6000813f7fc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470818114801590605357508115155b949350505050565b7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc5490565b3660008037600080366000845af43d6000803e808015609e573d6000f35b3d6000fdfea2646970667358221220128ea84265502b1a4c98fb4ced9ff317be6312ac9a839134e57d4b4524d66b5c64736f6c63430007050033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0xA PUSH1 0xC JUMP JUMPDEST STOP JUMPDEST PUSH1 0x12 PUSH1 0x1E JUMP JUMPDEST PUSH1 0x1E PUSH1 0x1A PUSH1 0x5B JUMP JUMPDEST PUSH1 0x80 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP2 EXTCODEHASH PUSH32 0xC5D2460186F7233C927E7DB2DCC703C0E500B653CA82273B7BFAD8045D85A470 DUP2 DUP2 EQ DUP1 ISZERO SWAP1 PUSH1 0x53 JUMPI POP DUP2 ISZERO ISZERO JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC SLOAD SWAP1 JUMP JUMPDEST CALLDATASIZE PUSH1 0x0 DUP1 CALLDATACOPY PUSH1 0x0 DUP1 CALLDATASIZE PUSH1 0x0 DUP5 GAS DELEGATECALL RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY DUP1 DUP1 ISZERO PUSH1 0x9E JUMPI RETURNDATASIZE PUSH1 0x0 RETURN JUMPDEST RETURNDATASIZE PUSH1 0x0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SLT DUP15 0xA8 TIMESTAMP PUSH6 0x502B1A4C98FB 0x4C 0xED SWAP16 RETURN OR 0xBE PUSH4 0x12AC9A83 SWAP2 CALLVALUE 0xE5 PUSH30 0x4B4524D66B5C64736F6C6343000705003300000000000000000000000000 ",
							"sourceMap": "358:895:6:-:0;;;601:11:5;:9;:11::i;:::-;358:895:6;2167:90:5;2203:15;:13;:15::i;:::-;2224:28;2234:17;:15;:17::i;:::-;2224:9;:28::i;:::-;2167:90::o;743:586:0:-;803:4;1242:20;;1089:66;1281:23;;;;;;:42;;-1:-1:-1;1308:15:0;;;1281:42;1273:51;743:586;-1:-1:-1;;;;743:586:0:o;1100:165:2:-;915:66;1244:11;;1228:33::o;1034:785:5:-;1336:14;1333:1;1330;1317:34;1532:1;1529;1513:14;1510:1;1494:14;1487:5;1474:60;1596:16;1593:1;1590;1575:38;1628:6;1687:56;;;;1782:16;1779:1;1772:27;1687:56;1716:16;1713:1;1706:27"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "43400",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 358,
									"end": 1253,
									"name": "PUSH",
									"source": 6,
									"value": "80"
								},
								{
									"begin": 358,
									"end": 1253,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 358,
									"end": 1253,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 940,
									"end": 1251,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 940,
									"end": 1251,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 940,
									"end": 1251,
									"name": "PUSHSIZE",
									"source": 6
								},
								{
									"begin": 940,
									"end": 1251,
									"name": "CODESIZE",
									"source": 6
								},
								{
									"begin": 940,
									"end": 1251,
									"name": "SUB",
									"source": 6
								},
								{
									"begin": 940,
									"end": 1251,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 940,
									"end": 1251,
									"name": "PUSHSIZE",
									"source": 6
								},
								{
									"begin": 940,
									"end": 1251,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 940,
									"end": 1251,
									"name": "CODECOPY",
									"source": 6
								},
								{
									"begin": 940,
									"end": 1251,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 940,
									"end": 1251,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 940,
									"end": 1251,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 940,
									"end": 1251,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 940,
									"end": 1251,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 940,
									"end": 1251,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 940,
									"end": 1251,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 940,
									"end": 1251,
									"name": "LT",
									"source": 6
								},
								{
									"begin": 940,
									"end": 1251,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 940,
									"end": 1251,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 940,
									"end": 1251,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 940,
									"end": 1251,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 940,
									"end": 1251,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 940,
									"end": 1251,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 940,
									"end": 1251,
									"name": "tag",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 940,
									"end": 1251,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 940,
									"end": 1251,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 940,
									"end": 1251,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 940,
									"end": 1251,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 940,
									"end": 1251,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 940,
									"end": 1251,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 940,
									"end": 1251,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 940,
									"end": 1251,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 940,
									"end": 1251,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 940,
									"end": 1251,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 940,
									"end": 1251,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 940,
									"end": 1251,
									"name": "SWAP5",
									"source": 6
								},
								{
									"begin": 940,
									"end": 1251,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 940,
									"end": 1251,
									"name": "SWAP4",
									"source": 6
								},
								{
									"begin": 940,
									"end": 1251,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 940,
									"end": 1251,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 940,
									"end": 1251,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 940,
									"end": 1251,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 940,
									"end": 1251,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 940,
									"end": 1251,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 940,
									"end": 1251,
									"name": "PUSH",
									"source": 6,
									"value": "100000000"
								},
								{
									"begin": 940,
									"end": 1251,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 940,
									"end": 1251,
									"name": "GT",
									"source": 6
								},
								{
									"begin": 940,
									"end": 1251,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 940,
									"end": 1251,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "2"
								},
								{
									"begin": 940,
									"end": 1251,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 940,
									"end": 1251,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 940,
									"end": 1251,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 940,
									"end": 1251,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 940,
									"end": 1251,
									"name": "tag",
									"source": 6,
									"value": "2"
								},
								{
									"begin": 940,
									"end": 1251,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 940,
									"end": 1251,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 940,
									"end": 1251,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 940,
									"end": 1251,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 940,
									"end": 1251,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 940,
									"end": 1251,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 940,
									"end": 1251,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 940,
									"end": 1251,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 940,
									"end": 1251,
									"name": "DUP6",
									"source": 6
								},
								{
									"begin": 940,
									"end": 1251,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 940,
									"end": 1251,
									"name": "GT",
									"source": 6
								},
								{
									"begin": 940,
									"end": 1251,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 940,
									"end": 1251,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "3"
								},
								{
									"begin": 940,
									"end": 1251,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 940,
									"end": 1251,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 940,
									"end": 1251,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 940,
									"end": 1251,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 940,
									"end": 1251,
									"name": "tag",
									"source": 6,
									"value": "3"
								},
								{
									"begin": 940,
									"end": 1251,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 940,
									"end": 1251,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 940,
									"end": 1251,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 940,
									"end": 1251,
									"name": "PUSH",
									"source": 6,
									"value": "100000000"
								},
								{
									"begin": 940,
									"end": 1251,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 940,
									"end": 1251,
									"name": "GT",
									"source": 6
								},
								{
									"begin": 940,
									"end": 1251,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 940,
									"end": 1251,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 940,
									"end": 1251,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 940,
									"end": 1251,
									"name": "DUP9",
									"source": 6
								},
								{
									"begin": -1,
									"end": -1,
									"name": "LT",
									"source": -1
								},
								{
									"begin": 940,
									"end": 1251,
									"name": "OR",
									"source": 6
								},
								{
									"begin": 940,
									"end": 1251,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 940,
									"end": 1251,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "4"
								},
								{
									"begin": 940,
									"end": 1251,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 940,
									"end": 1251,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 940,
									"end": 1251,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 940,
									"end": 1251,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 940,
									"end": 1251,
									"name": "tag",
									"source": 6,
									"value": "4"
								},
								{
									"begin": 940,
									"end": 1251,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 940,
									"end": 1251,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 940,
									"end": 1251,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 940,
									"end": 1251,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 940,
									"end": 1251,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 940,
									"end": 1251,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 940,
									"end": 1251,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 940,
									"end": 1251,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 940,
									"end": 1251,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 940,
									"end": 1251,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 940,
									"end": 1251,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 940,
									"end": 1251,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 940,
									"end": 1251,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 940,
									"end": 1251,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 940,
									"end": 1251,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 940,
									"end": 1251,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 940,
									"end": 1251,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 940,
									"end": 1251,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 940,
									"end": 1251,
									"name": "tag",
									"source": 6,
									"value": "5"
								},
								{
									"begin": 940,
									"end": 1251,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 940,
									"end": 1251,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 940,
									"end": 1251,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 940,
									"end": 1251,
									"name": "LT",
									"source": 6
								},
								{
									"begin": 940,
									"end": 1251,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 940,
									"end": 1251,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "7"
								},
								{
									"begin": 940,
									"end": 1251,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 940,
									"end": 1251,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 940,
									"end": 1251,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 940,
									"end": 1251,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 940,
									"end": 1251,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 940,
									"end": 1251,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 940,
									"end": 1251,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 940,
									"end": 1251,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 940,
									"end": 1251,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 940,
									"end": 1251,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 940,
									"end": 1251,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 940,
									"end": 1251,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "5"
								},
								{
									"begin": 940,
									"end": 1251,
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 940,
									"end": 1251,
									"name": "tag",
									"source": 6,
									"value": "7"
								},
								{
									"begin": 940,
									"end": 1251,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 940,
									"end": 1251,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 940,
									"end": 1251,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 940,
									"end": 1251,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 940,
									"end": 1251,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 940,
									"end": 1251,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 940,
									"end": 1251,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 940,
									"end": 1251,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 940,
									"end": 1251,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 940,
									"end": 1251,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 940,
									"end": 1251,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 940,
									"end": 1251,
									"name": "PUSH",
									"source": 6,
									"value": "1F"
								},
								{
									"begin": 940,
									"end": 1251,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 940,
									"end": 1251,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 940,
									"end": 1251,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 940,
									"end": 1251,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "8"
								},
								{
									"begin": 940,
									"end": 1251,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 940,
									"end": 1251,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 940,
									"end": 1251,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 940,
									"end": 1251,
									"name": "SUB",
									"source": 6
								},
								{
									"begin": 940,
									"end": 1251,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 940,
									"end": 1251,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 940,
									"end": 1251,
									"name": "PUSH",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 940,
									"end": 1251,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 940,
									"end": 1251,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 940,
									"end": 1251,
									"name": "SUB",
									"source": 6
								},
								{
									"begin": 940,
									"end": 1251,
									"name": "PUSH",
									"source": 6,
									"value": "100"
								},
								{
									"begin": 940,
									"end": 1251,
									"name": "EXP",
									"source": 6
								},
								{
									"begin": 940,
									"end": 1251,
									"name": "SUB",
									"source": 6
								},
								{
									"begin": 940,
									"end": 1251,
									"name": "NOT",
									"source": 6
								},
								{
									"begin": 940,
									"end": 1251,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 940,
									"end": 1251,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 940,
									"end": 1251,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 940,
									"end": 1251,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 940,
									"end": 1251,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 940,
									"end": 1251,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 940,
									"end": 1251,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 940,
									"end": 1251,
									"name": "tag",
									"source": 6,
									"value": "8"
								},
								{
									"begin": 940,
									"end": 1251,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 940,
									"end": 1251,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 940,
									"end": 1251,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 1009,
									"end": 1103,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "11"
								},
								{
									"begin": 1009,
									"end": 1103,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 1009,
									"end": 1103,
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1009,
									"end": 1103,
									"name": "tag",
									"source": 6,
									"value": "11"
								},
								{
									"begin": 1009,
									"end": 1103,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1109,
									"end": 1135,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "12"
								},
								{
									"begin": 1128,
									"end": 1134,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 1109,
									"end": 1127,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "13"
								},
								{
									"begin": 1109,
									"end": 1135,
									"name": "JUMP",
									"source": 6,
									"value": "[in]"
								},
								{
									"begin": 1109,
									"end": 1135,
									"name": "tag",
									"source": 6,
									"value": "12"
								},
								{
									"begin": 1109,
									"end": 1135,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1145,
									"end": 1157,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 1145,
									"end": 1157,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 1145,
									"end": 1161,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 1141,
									"end": 1247,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "14"
								},
								{
									"begin": 1141,
									"end": 1247,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 1172,
									"end": 1184,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1190,
									"end": 1196,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 1190,
									"end": 1209,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 1210,
									"end": 1215,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 1190,
									"end": 1216,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 1190,
									"end": 1216,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 1190,
									"end": 1216,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 1190,
									"end": 1216,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 1190,
									"end": 1216,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 1190,
									"end": 1216,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 1190,
									"end": 1216,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1190,
									"end": 1216,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 1190,
									"end": 1216,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 1190,
									"end": 1216,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1190,
									"end": 1216,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 1190,
									"end": 1216,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 1190,
									"end": 1216,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 1190,
									"end": 1216,
									"name": "tag",
									"source": 6,
									"value": "15"
								},
								{
									"begin": 1190,
									"end": 1216,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1190,
									"end": 1216,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 1190,
									"end": 1216,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 1190,
									"end": 1216,
									"name": "LT",
									"source": 6
								},
								{
									"begin": 1190,
									"end": 1216,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "17"
								},
								{
									"begin": 1190,
									"end": 1216,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 1190,
									"end": 1216,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 1190,
									"end": 1216,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 1190,
									"end": 1216,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 1190,
									"end": 1216,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1F"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 1190,
									"end": 1216,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1190,
									"end": 1216,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 1190,
									"end": 1216,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 1190,
									"end": 1216,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 1190,
									"end": 1216,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 1190,
									"end": 1216,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 1190,
									"end": 1216,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 1190,
									"end": 1216,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 1190,
									"end": 1216,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 1190,
									"end": 1216,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 1190,
									"end": 1216,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "15"
								},
								{
									"begin": 1190,
									"end": 1216,
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1190,
									"end": 1216,
									"name": "tag",
									"source": 6,
									"value": "17"
								},
								{
									"begin": 1190,
									"end": 1216,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1190,
									"end": 1216,
									"name": "PUSH",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 1190,
									"end": 1216,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 1190,
									"end": 1216,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 1190,
									"end": 1216,
									"name": "SUB",
									"source": 6
								},
								{
									"begin": 1190,
									"end": 1216,
									"name": "PUSH",
									"source": 6,
									"value": "100"
								},
								{
									"begin": 1190,
									"end": 1216,
									"name": "EXP",
									"source": 6
								},
								{
									"begin": 1190,
									"end": 1216,
									"name": "SUB",
									"source": 6
								},
								{
									"begin": 1190,
									"end": 1216,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 1190,
									"end": 1216,
									"name": "NOT",
									"source": 6
								},
								{
									"begin": 1190,
									"end": 1216,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 1190,
									"end": 1216,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 1190,
									"end": 1216,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 1190,
									"end": 1216,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1190,
									"end": 1216,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 1190,
									"end": 1216,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 1190,
									"end": 1216,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 1190,
									"end": 1216,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 1190,
									"end": 1216,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 1190,
									"end": 1216,
									"name": "OR",
									"source": 6
								},
								{
									"begin": 1190,
									"end": 1216,
									"name": "DUP6",
									"source": 6
								},
								{
									"begin": 1190,
									"end": 1216,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 1190,
									"end": 1216,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1190,
									"end": 1216,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1190,
									"end": 1216,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1190,
									"end": 1216,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1190,
									"end": 1216,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1190,
									"end": 1216,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1190,
									"end": 1216,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1190,
									"end": 1216,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1190,
									"end": 1216,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 1190,
									"end": 1216,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 1190,
									"end": 1216,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1190,
									"end": 1216,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1190,
									"end": 1216,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1190,
									"end": 1216,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 1190,
									"end": 1216,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 1190,
									"end": 1216,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 1190,
									"end": 1216,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 1190,
									"end": 1216,
									"name": "SUB",
									"source": 6
								},
								{
									"begin": 1190,
									"end": 1216,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1190,
									"end": 1216,
									"name": "DUP6",
									"source": 6
								},
								{
									"begin": 1190,
									"end": 1216,
									"name": "GAS",
									"source": 6
								},
								{
									"begin": 1190,
									"end": 1216,
									"name": "DELEGATECALL",
									"source": 6
								},
								{
									"begin": 1190,
									"end": 1216,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 1190,
									"end": 1216,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1190,
									"end": 1216,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1190,
									"end": 1216,
									"name": "RETURNDATASIZE",
									"source": 6
								},
								{
									"begin": 1190,
									"end": 1216,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 1190,
									"end": 1216,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1190,
									"end": 1216,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1190,
									"end": 1216,
									"name": "EQ",
									"source": 6
								},
								{
									"begin": 1190,
									"end": 1216,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 1190,
									"end": 1216,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 1190,
									"end": 1216,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 1190,
									"end": 1216,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 1190,
									"end": 1216,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 1190,
									"end": 1216,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1190,
									"end": 1216,
									"name": "PUSH",
									"source": 6,
									"value": "1F"
								},
								{
									"begin": 1190,
									"end": 1216,
									"name": "NOT",
									"source": 6
								},
								{
									"begin": 1190,
									"end": 1216,
									"name": "PUSH",
									"source": 6,
									"value": "3F"
								},
								{
									"begin": 1190,
									"end": 1216,
									"name": "RETURNDATASIZE",
									"source": 6
								},
								{
									"begin": 1190,
									"end": 1216,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 1190,
									"end": 1216,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 1190,
									"end": 1216,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 1190,
									"end": 1216,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 1190,
									"end": 1216,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 1190,
									"end": 1216,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 1190,
									"end": 1216,
									"name": "RETURNDATASIZE",
									"source": 6
								},
								{
									"begin": 1190,
									"end": 1216,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 1190,
									"end": 1216,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 1190,
									"end": 1216,
									"name": "RETURNDATASIZE",
									"source": 6
								},
								{
									"begin": 1190,
									"end": 1216,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1190,
									"end": 1216,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 1190,
									"end": 1216,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 1190,
									"end": 1216,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 1190,
									"end": 1216,
									"name": "RETURNDATACOPY",
									"source": 6
								},
								{
									"begin": 1190,
									"end": 1216,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "19"
								},
								{
									"begin": 1190,
									"end": 1216,
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1190,
									"end": 1216,
									"name": "tag",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 1190,
									"end": 1216,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1190,
									"end": 1216,
									"name": "PUSH",
									"source": 6,
									"value": "60"
								},
								{
									"begin": 1190,
									"end": 1216,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 1190,
									"end": 1216,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1190,
									"end": 1216,
									"name": "tag",
									"source": 6,
									"value": "19"
								},
								{
									"begin": 1190,
									"end": 1216,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1190,
									"end": 1216,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1171,
									"end": 1216,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1171,
									"end": 1216,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1171,
									"end": 1216,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1232,
									"end": 1239,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 1224,
									"end": 1240,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "21"
								},
								{
									"begin": 1224,
									"end": 1240,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 1224,
									"end": 1240,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1224,
									"end": 1240,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 1224,
									"end": 1240,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 1224,
									"end": 1240,
									"name": "tag",
									"source": 6,
									"value": "21"
								},
								{
									"begin": 1224,
									"end": 1240,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1141,
									"end": 1247,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1141,
									"end": 1247,
									"name": "tag",
									"source": 6,
									"value": "14"
								},
								{
									"begin": 1141,
									"end": 1247,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 940,
									"end": 1251,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 940,
									"end": 1251,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 358,
									"end": 1253,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "22"
								},
								{
									"begin": 358,
									"end": 1253,
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1679,
									"end": 1982,
									"name": "tag",
									"source": 2,
									"value": "13"
								},
								{
									"begin": 1679,
									"end": 1982,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1764,
									"end": 1801,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "24"
								},
								{
									"begin": 1783,
									"end": 1800,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1764,
									"end": 1782,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "25"
								},
								{
									"begin": 1764,
									"end": 1782,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 1764,
									"end": 1782,
									"name": "SHL",
									"source": 2
								},
								{
									"begin": 1764,
									"end": 1782,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "18446744073709551623"
								},
								{
									"begin": 1764,
									"end": 1782,
									"name": "OR",
									"source": 2
								},
								{
									"begin": 1764,
									"end": 1801,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 1764,
									"end": 1801,
									"name": "SHR",
									"source": 2
								},
								{
									"begin": 1764,
									"end": 1801,
									"name": "JUMP",
									"source": 2,
									"value": "[in]"
								},
								{
									"begin": 1764,
									"end": 1801,
									"name": "tag",
									"source": 2,
									"value": "24"
								},
								{
									"begin": 1764,
									"end": 1801,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1749,
									"end": 1876,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "26"
								},
								{
									"begin": 1749,
									"end": 1876,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 1749,
									"end": 1876,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 1749,
									"end": 1876,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "461BCD"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E5"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 1749,
									"end": 1876,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1749,
									"end": 1876,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1749,
									"end": 1876,
									"name": "PUSH",
									"source": 2,
									"value": "4"
								},
								{
									"begin": 1749,
									"end": 1876,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 1749,
									"end": 1876,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1749,
									"end": 1876,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1749,
									"end": 1876,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 1749,
									"end": 1876,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 1749,
									"end": 1876,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 1749,
									"end": 1876,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1749,
									"end": 1876,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 1749,
									"end": 1876,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 1749,
									"end": 1876,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1749,
									"end": 1876,
									"name": "PUSH",
									"source": 2,
									"value": "3B"
								},
								{
									"begin": 1749,
									"end": 1876,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1749,
									"end": 1876,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1749,
									"end": 1876,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 1749,
									"end": 1876,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 1749,
									"end": 1876,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1749,
									"end": 1876,
									"name": "PUSH data",
									"source": 2,
									"value": "B5145A64CE8C406E5785204FE5B300F0CEDA96D6636350B38FDCCB9CD8C0C37C"
								},
								{
									"begin": 1749,
									"end": 1876,
									"name": "PUSH",
									"source": 2,
									"value": "3B"
								},
								{
									"begin": 1749,
									"end": 1876,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 1749,
									"end": 1876,
									"name": "CODECOPY",
									"source": 2
								},
								{
									"begin": 1749,
									"end": 1876,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 1749,
									"end": 1876,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 1749,
									"end": 1876,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 1749,
									"end": 1876,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1749,
									"end": 1876,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1749,
									"end": 1876,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 1749,
									"end": 1876,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 1749,
									"end": 1876,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1749,
									"end": 1876,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 1749,
									"end": 1876,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 1749,
									"end": 1876,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1749,
									"end": 1876,
									"name": "REVERT",
									"source": 2
								},
								{
									"begin": 1749,
									"end": 1876,
									"name": "tag",
									"source": 2,
									"value": "26"
								},
								{
									"begin": 1749,
									"end": 1876,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 915,
									"end": 981,
									"name": "PUSH",
									"source": 2,
									"value": "360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC"
								},
								{
									"begin": 1941,
									"end": 1972,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 1933,
									"end": 1978,
									"name": "JUMP",
									"source": 2,
									"value": "[out]"
								},
								{
									"begin": 743,
									"end": 1329,
									"name": "tag",
									"source": 0,
									"value": "25"
								},
								{
									"begin": 743,
									"end": 1329,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 803,
									"end": 807,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1242,
									"end": 1262,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1242,
									"end": 1262,
									"name": "EXTCODEHASH",
									"source": 0
								},
								{
									"begin": 1089,
									"end": 1155,
									"name": "PUSH",
									"source": 0,
									"value": "C5D2460186F7233C927E7DB2DCC703C0E500B653CA82273B7BFAD8045D85A470"
								},
								{
									"begin": 1281,
									"end": 1304,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1281,
									"end": 1304,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1281,
									"end": 1304,
									"name": "EQ",
									"source": 0
								},
								{
									"begin": 1281,
									"end": 1304,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1281,
									"end": 1304,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 1281,
									"end": 1304,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1281,
									"end": 1323,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "28"
								},
								{
									"begin": 1281,
									"end": 1323,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 1308,
									"end": 1323,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1308,
									"end": 1323,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 1308,
									"end": 1323,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 1281,
									"end": 1323,
									"name": "tag",
									"source": 0,
									"value": "28"
								},
								{
									"begin": 1281,
									"end": 1323,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1273,
									"end": 1324,
									"name": "SWAP5",
									"source": 0
								},
								{
									"begin": 743,
									"end": 1329,
									"name": "SWAP4",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 743,
									"end": 1329,
									"name": "JUMP",
									"source": 0,
									"value": "[out]"
								},
								{
									"begin": 358,
									"end": 1253,
									"name": "tag",
									"source": 6,
									"value": "22"
								},
								{
									"begin": 358,
									"end": 1253,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 358,
									"end": 1253,
									"name": "PUSH #[$]",
									"source": 6,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 358,
									"end": 1253,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 358,
									"end": 1253,
									"name": "PUSH [$]",
									"source": 6,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 358,
									"end": 1253,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 358,
									"end": 1253,
									"name": "CODECOPY",
									"source": 6
								},
								{
									"begin": 358,
									"end": 1253,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 358,
									"end": 1253,
									"name": "RETURN",
									"source": 6
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220128ea84265502b1a4c98fb4ced9ff317be6312ac9a839134e57d4b4524d66b5c64736f6c63430007050033",
									".code": [
										{
											"begin": 358,
											"end": 1253,
											"name": "PUSH",
											"source": 6,
											"value": "80"
										},
										{
											"begin": 358,
											"end": 1253,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 358,
											"end": 1253,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 601,
											"end": 612,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "5"
										},
										{
											"begin": 601,
											"end": 610,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "6"
										},
										{
											"begin": 601,
											"end": 612,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 601,
											"end": 612,
											"name": "tag",
											"source": 5,
											"value": "5"
										},
										{
											"begin": 601,
											"end": 612,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 358,
											"end": 1253,
											"name": "STOP",
											"source": 6
										},
										{
											"begin": 2167,
											"end": 2257,
											"name": "tag",
											"source": 5,
											"value": "6"
										},
										{
											"begin": 2167,
											"end": 2257,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2203,
											"end": 2218,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "9"
										},
										{
											"begin": 2203,
											"end": 2216,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "11"
										},
										{
											"begin": 2203,
											"end": 2218,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 2203,
											"end": 2218,
											"name": "tag",
											"source": 5,
											"value": "9"
										},
										{
											"begin": 2203,
											"end": 2218,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2224,
											"end": 2252,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "11"
										},
										{
											"begin": 2234,
											"end": 2251,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "12"
										},
										{
											"begin": 2234,
											"end": 2249,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "13"
										},
										{
											"begin": 2234,
											"end": 2251,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 2234,
											"end": 2251,
											"name": "tag",
											"source": 5,
											"value": "12"
										},
										{
											"begin": 2234,
											"end": 2251,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2224,
											"end": 2233,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "14"
										},
										{
											"begin": 2224,
											"end": 2252,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 2224,
											"end": 2252,
											"name": "tag",
											"source": 5,
											"value": "11"
										},
										{
											"begin": 2224,
											"end": 2252,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2167,
											"end": 2257,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 743,
											"end": 1329,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 743,
											"end": 1329,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 803,
											"end": 807,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1242,
											"end": 1262,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1242,
											"end": 1262,
											"name": "EXTCODEHASH",
											"source": 0
										},
										{
											"begin": 1089,
											"end": 1155,
											"name": "PUSH",
											"source": 0,
											"value": "C5D2460186F7233C927E7DB2DCC703C0E500B653CA82273B7BFAD8045D85A470"
										},
										{
											"begin": 1281,
											"end": 1304,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1281,
											"end": 1304,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1281,
											"end": 1304,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1281,
											"end": 1304,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1281,
											"end": 1304,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1281,
											"end": 1304,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1281,
											"end": 1323,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 1281,
											"end": 1323,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1308,
											"end": 1323,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1308,
											"end": 1323,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1308,
											"end": 1323,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1281,
											"end": 1323,
											"name": "tag",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 1281,
											"end": 1323,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1273,
											"end": 1324,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 743,
											"end": 1329,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 743,
											"end": 1329,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 1100,
											"end": 1265,
											"name": "tag",
											"source": 2,
											"value": "13"
										},
										{
											"begin": 1100,
											"end": 1265,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 915,
											"end": 981,
											"name": "PUSH",
											"source": 2,
											"value": "360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC"
										},
										{
											"begin": 1244,
											"end": 1255,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1244,
											"end": 1255,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1228,
											"end": 1261,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 1034,
											"end": 1819,
											"name": "tag",
											"source": 5,
											"value": "14"
										},
										{
											"begin": 1034,
											"end": 1819,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1336,
											"end": 1350,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 1333,
											"end": 1334,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1330,
											"end": 1331,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1317,
											"end": 1351,
											"name": "CALLDATACOPY",
											"source": 5
										},
										{
											"begin": 1532,
											"end": 1533,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1529,
											"end": 1530,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1513,
											"end": 1527,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 1510,
											"end": 1511,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1494,
											"end": 1508,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 1487,
											"end": 1492,
											"name": "GAS",
											"source": 5
										},
										{
											"begin": 1474,
											"end": 1534,
											"name": "DELEGATECALL",
											"source": 5
										},
										{
											"begin": 1596,
											"end": 1612,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 1593,
											"end": 1594,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1590,
											"end": 1591,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1575,
											"end": 1613,
											"name": "RETURNDATACOPY",
											"source": 5
										},
										{
											"begin": 1628,
											"end": 1634,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1687,
											"end": 1743,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1687,
											"end": 1743,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 1687,
											"end": 1743,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "21"
										},
										{
											"begin": 1687,
											"end": 1743,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1782,
											"end": 1798,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 1779,
											"end": 1780,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1772,
											"end": 1799,
											"name": "RETURN",
											"source": 5
										},
										{
											"begin": 1687,
											"end": 1743,
											"name": "tag",
											"source": 5,
											"value": "21"
										},
										{
											"begin": 1687,
											"end": 1743,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1716,
											"end": 1732,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 1713,
											"end": 1714,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1706,
											"end": 1733,
											"name": "REVERT",
											"source": 5
										}
									]
								},
								"B5145A64CE8C406E5785204FE5B300F0CEDA96D6636350B38FDCCB9CD8C0C37C": "43616e6e6f742073657420612070726f787920696d706c656d656e746174696f6e20746f2061206e6f6e2d636f6e74726163742061646472657373"
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.7.5+commit.eb77ed08\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_logic\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"stateMutability\":\"payable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"Upgraded\",\"type\":\"event\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"}],\"devdoc\":{\"details\":\"From https://github.com/OpenZeppelin/openzeppelin-sdk/tree/solc-0.6/packages/lib/contracts/upgradeability Extends BaseUpgradeabilityProxy with a constructor for initializing implementation and init data.\",\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Contract constructor.\",\"params\":{\"_data\":\"Data to send as msg.data to the implementation to initialize the proxied contract. It should include the signature and the parameters of the function to be called, as described in https://solidity.readthedocs.io/en/v0.4.24/abi-spec.html#function-selector-and-argument-encoding. This parameter is optional, if no data is given the initialization call to proxied contract will be skipped.\",\"_logic\":\"Address of the initial implementation.\"}}},\"title\":\"UpgradeabilityProxy\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@aave/aave-stake/contracts/lib/UpgradeabilityProxy.sol\":\"UpgradeabilityProxy\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@aave/aave-stake/contracts/lib/Address.sol\":{\"keccak256\":\"0x456a1aebf00cb1f2987ca41f1924e4811703f10800a34ecb759e5d1dc472bb78\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ee41b6968eca15df18d524bb43b928e0405a6fe3d725ffe5950adb73c946cc0b\",\"dweb:/ipfs/QmP4hcWLnx33hoRpFjjQAodx4Hb7oXxHX58kpWcZX8v8cx\"]},\"@aave/aave-stake/contracts/lib/BaseUpgradeabilityProxy.sol\":{\"keccak256\":\"0x2bc918162fd3363fc9b25adccde01f0db4c7d4ae451b6111de9e53a2e3714ab0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://dd1780bbeacad4db1421e4aeb6424702a55bfa3d6a035049c5498f1094f4f625\",\"dweb:/ipfs/QmQ1TJgGBNqjnkcnWzykcfTcsoRiZbqH1VkYt6r5zAEzjN\"]},\"@aave/aave-stake/contracts/lib/Proxy.sol\":{\"keccak256\":\"0xceb6579b5f3a8428b34ac1d7801f83f7bbca6106af94ed5b8d780dabcaf921bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://83b1e544cfef24c262f0d5b92599800b729df77b439ff2e9cc1407c8f5ca620c\",\"dweb:/ipfs/QmTfeVEUh41YGbY2n7E3qh9DK5XTw4xuUZecaJo9Hf2Ax3\"]},\"@aave/aave-stake/contracts/lib/UpgradeabilityProxy.sol\":{\"keccak256\":\"0x757184e9d71fed0e08593c538d3d80b759c2cb202f182503f5f849357769bba8\",\"license\":\"agpl-3.0\",\"urls\":[\"bzz-raw://6d9bc5f2f1fd3cf6d50817cb9c282224d97ea3cbd2ed2429d13895f9487a80e8\",\"dweb:/ipfs/QmUiZhv5LMigKPPZwYGLotbRb1Z5FuZoHvwzEbtfV7VZae\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"errors": [
			{
				"component": "general",
				"errorCode": "1878",
				"formattedMessage": "contracts/Omnidex-incentives/utils/InitializableAdminUpgradeabilityProxy.sol.sol: Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.\n",
				"message": "SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.",
				"severity": "warning",
				"sourceLocation": {
					"end": -1,
					"file": "contracts/Omnidex-incentives/utils/InitializableAdminUpgradeabilityProxy.sol.sol",
					"start": -1
				},
				"type": "Warning"
			},
			{
				"component": "general",
				"errorCode": "3420",
				"formattedMessage": "contracts/Omnidex-incentives/utils/InitializableAdminUpgradeabilityProxy.sol.sol: Warning: Source file does not specify required compiler version! Consider adding \"pragma solidity ^0.7.5;\"\n",
				"message": "Source file does not specify required compiler version! Consider adding \"pragma solidity ^0.7.5;\"",
				"severity": "warning",
				"sourceLocation": {
					"end": -1,
					"file": "contracts/Omnidex-incentives/utils/InitializableAdminUpgradeabilityProxy.sol.sol",
					"start": -1
				},
				"type": "Warning"
			},
			{
				"component": "general",
				"errorCode": "3628",
				"formattedMessage": "@aave/aave-stake/contracts/lib/BaseAdminUpgradeabilityProxy.sol:15:1: Warning: This contract has a payable fallback function, but no receive ether function. Consider adding a receive ether function.\ncontract BaseAdminUpgradeabilityProxy is BaseUpgradeabilityProxy {\n^ (Relevant source part starts here and spans across multiple lines).\n@aave/aave-stake/contracts/lib/Proxy.sol:17:3: The payable fallback function is defined here.\n  fallback() external payable {\n  ^ (Relevant source part starts here and spans across multiple lines).\n",
				"message": "This contract has a payable fallback function, but no receive ether function. Consider adding a receive ether function.",
				"secondarySourceLocations": [
					{
						"end": 617,
						"file": "@aave/aave-stake/contracts/lib/Proxy.sol",
						"message": "The payable fallback function is defined here.",
						"start": 567
					}
				],
				"severity": "warning",
				"sourceLocation": {
					"end": 3891,
					"file": "@aave/aave-stake/contracts/lib/BaseAdminUpgradeabilityProxy.sol",
					"start": 565
				},
				"type": "Warning"
			},
			{
				"component": "general",
				"errorCode": "3628",
				"formattedMessage": "@aave/aave-stake/contracts/lib/InitializableUpgradeabilityProxy.sol:12:1: Warning: This contract has a payable fallback function, but no receive ether function. Consider adding a receive ether function.\ncontract InitializableUpgradeabilityProxy is BaseUpgradeabilityProxy {\n^ (Relevant source part starts here and spans across multiple lines).\n@aave/aave-stake/contracts/lib/Proxy.sol:17:3: The payable fallback function is defined here.\n  fallback() external payable {\n  ^ (Relevant source part starts here and spans across multiple lines).\n",
				"message": "This contract has a payable fallback function, but no receive ether function. Consider adding a receive ether function.",
				"secondarySourceLocations": [
					{
						"end": 617,
						"file": "@aave/aave-stake/contracts/lib/Proxy.sol",
						"message": "The payable fallback function is defined here.",
						"start": 567
					}
				],
				"severity": "warning",
				"sourceLocation": {
					"end": 1329,
					"file": "@aave/aave-stake/contracts/lib/InitializableUpgradeabilityProxy.sol",
					"start": 367
				},
				"type": "Warning"
			},
			{
				"component": "general",
				"errorCode": "3628",
				"formattedMessage": "@aave/aave-stake/contracts/lib/InitializableAdminUpgradeabilityProxy.sol:13:1: Warning: This contract has a payable fallback function, but no receive ether function. Consider adding a receive ether function.\ncontract InitializableAdminUpgradeabilityProxy is\n^ (Relevant source part starts here and spans across multiple lines).\n@aave/aave-stake/contracts/lib/Proxy.sol:17:3: The payable fallback function is defined here.\n  fallback() external payable {\n  ^ (Relevant source part starts here and spans across multiple lines).\n",
				"message": "This contract has a payable fallback function, but no receive ether function. Consider adding a receive ether function.",
				"secondarySourceLocations": [
					{
						"end": 617,
						"file": "@aave/aave-stake/contracts/lib/Proxy.sol",
						"message": "The payable fallback function is defined here.",
						"start": 567
					}
				],
				"severity": "warning",
				"sourceLocation": {
					"end": 1676,
					"file": "@aave/aave-stake/contracts/lib/InitializableAdminUpgradeabilityProxy.sol",
					"start": 448
				},
				"type": "Warning"
			},
			{
				"component": "general",
				"errorCode": "2462",
				"formattedMessage": "@aave/aave-stake/contracts/lib/UpgradeabilityProxy.sol:21:3: Warning: Visibility for constructor is ignored. If you want the contract to be non-deployable, making it \"abstract\" is sufficient.\n  constructor(address _logic, bytes memory _data) public payable {\n  ^ (Relevant source part starts here and spans across multiple lines).\n",
				"message": "Visibility for constructor is ignored. If you want the contract to be non-deployable, making it \"abstract\" is sufficient.",
				"severity": "warning",
				"sourceLocation": {
					"end": 1251,
					"file": "@aave/aave-stake/contracts/lib/UpgradeabilityProxy.sol",
					"start": 940
				},
				"type": "Warning"
			},
			{
				"component": "general",
				"errorCode": "6321",
				"formattedMessage": "@aave/aave-stake/contracts/lib/BaseAdminUpgradeabilityProxy.sol:48:46: Warning: Unnamed return variable can remain unassigned. Add an explicit return with value to all non-reverting code paths or name the variable.\n  function admin() external ifAdmin returns (address) {\n                                             ^-----^\n",
				"message": "Unnamed return variable can remain unassigned. Add an explicit return with value to all non-reverting code paths or name the variable.",
				"severity": "warning",
				"sourceLocation": {
					"end": 1578,
					"file": "@aave/aave-stake/contracts/lib/BaseAdminUpgradeabilityProxy.sol",
					"start": 1571
				},
				"type": "Warning"
			},
			{
				"component": "general",
				"errorCode": "6321",
				"formattedMessage": "@aave/aave-stake/contracts/lib/BaseAdminUpgradeabilityProxy.sol:55:55: Warning: Unnamed return variable can remain unassigned. Add an explicit return with value to all non-reverting code paths or name the variable.\n  function implementation() external ifAdmin returns (address) {\n                                                      ^-----^\n",
				"message": "Unnamed return variable can remain unassigned. Add an explicit return with value to all non-reverting code paths or name the variable.",
				"severity": "warning",
				"sourceLocation": {
					"end": 1729,
					"file": "@aave/aave-stake/contracts/lib/BaseAdminUpgradeabilityProxy.sol",
					"start": 1722
				},
				"type": "Warning"
			}
		],
		"sources": {
			"@aave/aave-stake/contracts/lib/Address.sol": {
				"ast": {
					"absolutePath": "@aave/aave-stake/contracts/lib/Address.sol",
					"exportedSymbols": {
						"Address": [
							63
						]
					},
					"id": 64,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"0.7",
								".5"
							],
							"nodeType": "PragmaDirective",
							"src": "32:22:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 2,
								"nodeType": "StructuredDocumentation",
								"src": "56:130:0",
								"text": " @dev Collection of functions related to the address type\n From https://github.com/OpenZeppelin/openzeppelin-contracts"
							},
							"fullyImplemented": true,
							"id": 63,
							"linearizedBaseContracts": [
								63
							],
							"name": "Address",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 27,
										"nodeType": "Block",
										"src": "809:520:0",
										"statements": [
											{
												"assignments": [
													11
												],
												"declarations": [
													{
														"constant": false,
														"id": 11,
														"mutability": "mutable",
														"name": "codehash",
														"nodeType": "VariableDeclaration",
														"scope": 27,
														"src": "1045:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 10,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "1045:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 12,
												"nodeType": "VariableDeclarationStatement",
												"src": "1045:16:0"
											},
											{
												"assignments": [
													14
												],
												"declarations": [
													{
														"constant": false,
														"id": 14,
														"mutability": "mutable",
														"name": "accountHash",
														"nodeType": "VariableDeclaration",
														"scope": 27,
														"src": "1067:19:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 13,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "1067:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 16,
												"initialValue": {
													"hexValue": "307863356432343630313836663732333363393237653764623264636337303363306535303062363533636138323237336237626661643830343564383561343730",
													"id": 15,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "1089:66:0",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_89477152217924674838424037953991966239322087453347756267410168184682657981552_by_1",
														"typeString": "int_const 8947...(69 digits omitted)...1552"
													},
													"value": "0xc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1067:88:0"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "1222:46:0",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1230:32:0",
															"value": {
																"arguments": [
																	{
																		"name": "account",
																		"nodeType": "YulIdentifier",
																		"src": "1254:7:0"
																	}
																],
																"functionName": {
																	"name": "extcodehash",
																	"nodeType": "YulIdentifier",
																	"src": "1242:11:0"
																},
																"nodeType": "YulFunctionCall",
																"src": "1242:20:0"
															},
															"variableNames": [
																{
																	"name": "codehash",
																	"nodeType": "YulIdentifier",
																	"src": "1230:8:0"
																}
															]
														}
													]
												},
												"evmVersion": "istanbul",
												"externalReferences": [
													{
														"declaration": 5,
														"isOffset": false,
														"isSlot": false,
														"src": "1254:7:0",
														"valueSize": 1
													},
													{
														"declaration": 11,
														"isOffset": false,
														"isSlot": false,
														"src": "1230:8:0",
														"valueSize": 1
													}
												],
												"id": 17,
												"nodeType": "InlineAssembly",
												"src": "1213:55:0"
											},
											{
												"expression": {
													"components": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 24,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																},
																"id": 20,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 18,
																	"name": "codehash",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 11,
																	"src": "1281:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "!=",
																"rightExpression": {
																	"id": 19,
																	"name": "accountHash",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 14,
																	"src": "1293:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																"src": "1281:23:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&&",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																},
																"id": 23,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 21,
																	"name": "codehash",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 11,
																	"src": "1308:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "!=",
																"rightExpression": {
																	"hexValue": "307830",
																	"id": 22,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1320:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0x0"
																},
																"src": "1308:15:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "1281:42:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"id": 25,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "1280:44:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 9,
												"id": 26,
												"nodeType": "Return",
												"src": "1273:51:0"
											}
										]
									},
									"documentation": {
										"id": 3,
										"nodeType": "StructuredDocumentation",
										"src": "207:533:0",
										"text": " @dev Returns true if `account` is a contract.\n [IMPORTANT]\n ====\n It is unsafe to assume that an address for which this function returns\n false is an externally-owned account (EOA) and not a contract.\n Among others, `isContract` will return false for the following\n types of addresses:\n  - an externally-owned account\n  - a contract in construction\n  - an address where a contract will be created\n  - an address where a contract lived, but was destroyed\n ===="
									},
									"id": 28,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isContract",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 6,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5,
												"mutability": "mutable",
												"name": "account",
												"nodeType": "VariableDeclaration",
												"scope": 28,
												"src": "763:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 4,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "763:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "762:17:0"
									},
									"returnParameters": {
										"id": 9,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 8,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 28,
												"src": "803:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 7,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "803:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "802:6:0"
									},
									"scope": 63,
									"src": "743:586:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 61,
										"nodeType": "Block",
										"src": "2283:300:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 43,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 39,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": -28,
																			"src": "2305:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Address_$63",
																				"typeString": "library Address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Address_$63",
																				"typeString": "library Address"
																			}
																		],
																		"id": 38,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2297:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 37,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "2297:7:0",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 40,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2297:13:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 41,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"src": "2297:21:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 42,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 33,
																"src": "2322:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2297:31:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20696e73756666696369656e742062616c616e6365",
															"id": 44,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2330:31:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9",
																"typeString": "literal_string \"Address: insufficient balance\""
															},
															"value": "Address: insufficient balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9",
																"typeString": "literal_string \"Address: insufficient balance\""
															}
														],
														"id": 36,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "2289:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 45,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2289:73:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 46,
												"nodeType": "ExpressionStatement",
												"src": "2289:73:0"
											},
											{
												"assignments": [
													48,
													null
												],
												"declarations": [
													{
														"constant": false,
														"id": 48,
														"mutability": "mutable",
														"name": "success",
														"nodeType": "VariableDeclaration",
														"scope": 61,
														"src": "2443:12:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 47,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "2443:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													null
												],
												"id": 55,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "",
															"id": 53,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2491:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"typeString": "literal_string \"\""
																}
															],
															"expression": {
																"id": 49,
																"name": "recipient",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 31,
																"src": "2461:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"id": 50,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "2461:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 52,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 51,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 33,
																"src": "2483:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "2461:29:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 54,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2461:33:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2442:52:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 57,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 48,
															"src": "2508:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20756e61626c6520746f2073656e642076616c75652c20726563697069656e74206d61792068617665207265766572746564",
															"id": 58,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2517:60:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae",
																"typeString": "literal_string \"Address: unable to send value, recipient may have reverted\""
															},
															"value": "Address: unable to send value, recipient may have reverted"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae",
																"typeString": "literal_string \"Address: unable to send value, recipient may have reverted\""
															}
														],
														"id": 56,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "2500:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 59,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2500:78:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 60,
												"nodeType": "ExpressionStatement",
												"src": "2500:78:0"
											}
										]
									},
									"documentation": {
										"id": 29,
										"nodeType": "StructuredDocumentation",
										"src": "1333:876:0",
										"text": " @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n `recipient`, forwarding all available gas and reverting on errors.\n https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n of certain opcodes, possibly making contracts go over the 2300 gas limit\n imposed by `transfer`, making them unable to receive funds via\n `transfer`. {sendValue} removes this limitation.\n https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n IMPORTANT: because control is transferred to `recipient`, care must be\n taken to not create reentrancy vulnerabilities. Consider using\n {ReentrancyGuard} or the\n https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern]."
									},
									"id": 62,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sendValue",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 34,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 31,
												"mutability": "mutable",
												"name": "recipient",
												"nodeType": "VariableDeclaration",
												"scope": 62,
												"src": "2231:25:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 30,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2231:15:0",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 33,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 62,
												"src": "2258:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 32,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2258:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2230:43:0"
									},
									"returnParameters": {
										"id": 35,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2283:0:0"
									},
									"scope": 63,
									"src": "2212:371:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 64,
							"src": "187:2398:0"
						}
					],
					"src": "32:2554:0"
				},
				"id": 0
			},
			"@aave/aave-stake/contracts/lib/BaseAdminUpgradeabilityProxy.sol": {
				"ast": {
					"absolutePath": "@aave/aave-stake/contracts/lib/BaseAdminUpgradeabilityProxy.sol",
					"exportedSymbols": {
						"Address": [
							63
						],
						"BaseAdminUpgradeabilityProxy": [
							233
						],
						"BaseUpgradeabilityProxy": [
							298
						],
						"Proxy": [
							476
						],
						"UpgradeabilityProxy": [
							529
						]
					},
					"id": 234,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 65,
							"literals": [
								"solidity",
								"0.7",
								".5"
							],
							"nodeType": "PragmaDirective",
							"src": "32:22:1"
						},
						{
							"absolutePath": "@aave/aave-stake/contracts/lib/UpgradeabilityProxy.sol",
							"file": "./UpgradeabilityProxy.sol",
							"id": 66,
							"nodeType": "ImportDirective",
							"scope": 234,
							"sourceUnit": 530,
							"src": "56:35:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 68,
										"name": "BaseUpgradeabilityProxy",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 298,
										"src": "606:23:1",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_BaseUpgradeabilityProxy_$298",
											"typeString": "contract BaseUpgradeabilityProxy"
										}
									},
									"id": 69,
									"nodeType": "InheritanceSpecifier",
									"src": "606:23:1"
								}
							],
							"contractDependencies": [
								298,
								476
							],
							"contractKind": "contract",
							"documentation": {
								"id": 67,
								"nodeType": "StructuredDocumentation",
								"src": "93:471:1",
								"text": " @title BaseAdminUpgradeabilityProxy\n @dev From https://github.com/OpenZeppelin/openzeppelin-sdk/tree/solc-0.6/packages/lib/contracts/upgradeability\n This contract combines an upgradeability proxy with an authorization\n mechanism for administrative tasks.\n All external functions in this contract must be guarded by the\n `ifAdmin` modifier. See ethereum/solidity#3864 for a Solidity\n feature proposal that would enable this to be done automatically."
							},
							"fullyImplemented": true,
							"id": 233,
							"linearizedBaseContracts": [
								233,
								298,
								476
							],
							"name": "BaseAdminUpgradeabilityProxy",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 70,
										"nodeType": "StructuredDocumentation",
										"src": "634:177:1",
										"text": " @dev Emitted when the administration has been transferred.\n @param previousAdmin Address of the previous admin.\n @param newAdmin Address of the new admin."
									},
									"id": 76,
									"name": "AdminChanged",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 75,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 72,
												"indexed": false,
												"mutability": "mutable",
												"name": "previousAdmin",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "833:21:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 71,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "833:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 74,
												"indexed": false,
												"mutability": "mutable",
												"name": "newAdmin",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "856:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 73,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "856:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "832:41:1"
									},
									"src": "814:60:1"
								},
								{
									"constant": true,
									"documentation": {
										"id": 77,
										"nodeType": "StructuredDocumentation",
										"src": "878:181:1",
										"text": " @dev Storage slot with the admin of the contract.\n This is the keccak-256 hash of \"eip1967.proxy.admin\" subtracted by 1, and is\n validated in the constructor."
									},
									"id": 80,
									"mutability": "constant",
									"name": "ADMIN_SLOT",
									"nodeType": "VariableDeclaration",
									"scope": 233,
									"src": "1063:109:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 78,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "1063:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"hexValue": "307862353331323736383461353638623331373361653133623966386136303136653234336536336236653865653131373864366137313738353062356436313033",
										"id": 79,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1106:66:1",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_81955473079516046949633743016697847541294818689821282749996681496272635257091_by_1",
											"typeString": "int_const 8195...(69 digits omitted)...7091"
										},
										"value": "0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103"
									},
									"visibility": "internal"
								},
								{
									"body": {
										"id": 95,
										"nodeType": "Block",
										"src": "1381:86:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 87,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 83,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": -15,
															"src": "1391:3:1",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 84,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "1391:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 85,
															"name": "_admin",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 200,
															"src": "1405:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 86,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1405:8:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1391:22:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 93,
													"nodeType": "Block",
													"src": "1437:26:1",
													"statements": [
														{
															"expression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 90,
																	"name": "_fallback",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 475,
																	"src": "1445:9:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
																		"typeString": "function ()"
																	}
																},
																"id": 91,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1445:11:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 92,
															"nodeType": "ExpressionStatement",
															"src": "1445:11:1"
														}
													]
												},
												"id": 94,
												"nodeType": "IfStatement",
												"src": "1387:76:1",
												"trueBody": {
													"id": 89,
													"nodeType": "Block",
													"src": "1415:16:1",
													"statements": [
														{
															"id": 88,
															"nodeType": "PlaceholderStatement",
															"src": "1423:1:1"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 81,
										"nodeType": "StructuredDocumentation",
										"src": "1177:182:1",
										"text": " @dev Modifier to check whether the `msg.sender` is the admin.\n If it is, it will run the function. Otherwise, it will delegate the call\n to the implementation."
									},
									"id": 96,
									"name": "ifAdmin",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 82,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1378:2:1"
									},
									"src": "1362:105:1",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 107,
										"nodeType": "Block",
										"src": "1580:26:1",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 104,
														"name": "_admin",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 200,
														"src": "1593:6:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 105,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1593:8:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 103,
												"id": 106,
												"nodeType": "Return",
												"src": "1586:15:1"
											}
										]
									},
									"documentation": {
										"id": 97,
										"nodeType": "StructuredDocumentation",
										"src": "1471:54:1",
										"text": " @return The address of the proxy admin."
									},
									"functionSelector": "f851a440",
									"id": 108,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 100,
											"modifierName": {
												"id": 99,
												"name": "ifAdmin",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 96,
												"src": "1554:7:1",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "1554:7:1"
										}
									],
									"name": "admin",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 98,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1542:2:1"
									},
									"returnParameters": {
										"id": 103,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 102,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 108,
												"src": "1571:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 101,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1571:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1570:9:1"
									},
									"scope": 233,
									"src": "1528:78:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 119,
										"nodeType": "Block",
										"src": "1731:35:1",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 116,
														"name": "_implementation",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															262
														],
														"referencedDeclaration": 262,
														"src": "1744:15:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 117,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1744:17:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 115,
												"id": 118,
												"nodeType": "Return",
												"src": "1737:24:1"
											}
										]
									},
									"documentation": {
										"id": 109,
										"nodeType": "StructuredDocumentation",
										"src": "1610:57:1",
										"text": " @return The address of the implementation."
									},
									"functionSelector": "5c60da1b",
									"id": 120,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 112,
											"modifierName": {
												"id": 111,
												"name": "ifAdmin",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 96,
												"src": "1705:7:1",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "1705:7:1"
										}
									],
									"name": "implementation",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 110,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1693:2:1"
									},
									"returnParameters": {
										"id": 115,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 114,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 120,
												"src": "1722:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 113,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1722:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1721:9:1"
									},
									"scope": 233,
									"src": "1670:96:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 148,
										"nodeType": "Block",
										"src": "1998:168:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 134,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 129,
																"name": "newAdmin",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 123,
																"src": "2012:8:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 132,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2032:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 131,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2024:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 130,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "2024:7:1",
																		"typeDescriptions": {}
																	}
																},
																"id": 133,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2024:10:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "2012:22:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "43616e6e6f74206368616e6765207468652061646d696e206f6620612070726f787920746f20746865207a65726f2061646472657373",
															"id": 135,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2036:56:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_37112268ceb11e15373f32f9374a1f3287d0a3e6e5a9a435ac06367e6cd0cf00",
																"typeString": "literal_string \"Cannot change the admin of a proxy to the zero address\""
															},
															"value": "Cannot change the admin of a proxy to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_37112268ceb11e15373f32f9374a1f3287d0a3e6e5a9a435ac06367e6cd0cf00",
																"typeString": "literal_string \"Cannot change the admin of a proxy to the zero address\""
															}
														],
														"id": 128,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "2004:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 136,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2004:89:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 137,
												"nodeType": "ExpressionStatement",
												"src": "2004:89:1"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 139,
																"name": "_admin",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 200,
																"src": "2117:6:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 140,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2117:8:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 141,
															"name": "newAdmin",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 123,
															"src": "2127:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 138,
														"name": "AdminChanged",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 76,
														"src": "2104:12:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 142,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2104:32:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 143,
												"nodeType": "EmitStatement",
												"src": "2099:37:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 145,
															"name": "newAdmin",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 123,
															"src": "2152:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 144,
														"name": "_setAdmin",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 212,
														"src": "2142:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 146,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2142:19:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 147,
												"nodeType": "ExpressionStatement",
												"src": "2142:19:1"
											}
										]
									},
									"documentation": {
										"id": 121,
										"nodeType": "StructuredDocumentation",
										"src": "1770:169:1",
										"text": " @dev Changes the admin of the proxy.\n Only the current admin can call this function.\n @param newAdmin Address to transfer proxy administration to."
									},
									"functionSelector": "8f283970",
									"id": 149,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 126,
											"modifierName": {
												"id": 125,
												"name": "ifAdmin",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 96,
												"src": "1990:7:1",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "1990:7:1"
										}
									],
									"name": "changeAdmin",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 124,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 123,
												"mutability": "mutable",
												"name": "newAdmin",
												"nodeType": "VariableDeclaration",
												"scope": 149,
												"src": "1963:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 122,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1963:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1962:18:1"
									},
									"returnParameters": {
										"id": 127,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1998:0:1"
									},
									"scope": 233,
									"src": "1942:224:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 161,
										"nodeType": "Block",
										"src": "2413:40:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 158,
															"name": "newImplementation",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 152,
															"src": "2430:17:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 157,
														"name": "_upgradeTo",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 277,
														"src": "2419:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 159,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2419:29:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 160,
												"nodeType": "ExpressionStatement",
												"src": "2419:29:1"
											}
										]
									},
									"documentation": {
										"id": 150,
										"nodeType": "StructuredDocumentation",
										"src": "2170:177:1",
										"text": " @dev Upgrade the backing implementation of the proxy.\n Only the admin can call this function.\n @param newImplementation Address of the new implementation."
									},
									"functionSelector": "3659cfe6",
									"id": 162,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 155,
											"modifierName": {
												"id": 154,
												"name": "ifAdmin",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 96,
												"src": "2405:7:1",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "2405:7:1"
										}
									],
									"name": "upgradeTo",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 153,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 152,
												"mutability": "mutable",
												"name": "newImplementation",
												"nodeType": "VariableDeclaration",
												"scope": 162,
												"src": "2369:25:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 151,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2369:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2368:27:1"
									},
									"returnParameters": {
										"id": 156,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2413:0:1"
									},
									"scope": 233,
									"src": "2350:103:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 187,
										"nodeType": "Block",
										"src": "3083:123:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 173,
															"name": "newImplementation",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 165,
															"src": "3100:17:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 172,
														"name": "_upgradeTo",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 277,
														"src": "3089:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 174,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3089:29:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 175,
												"nodeType": "ExpressionStatement",
												"src": "3089:29:1"
											},
											{
												"assignments": [
													177,
													null
												],
												"declarations": [
													{
														"constant": false,
														"id": 177,
														"mutability": "mutable",
														"name": "success",
														"nodeType": "VariableDeclaration",
														"scope": 187,
														"src": "3125:12:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 176,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "3125:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													null
												],
												"id": 182,
												"initialValue": {
													"arguments": [
														{
															"id": 180,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 167,
															"src": "3174:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_calldata_ptr",
																"typeString": "bytes calldata"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_calldata_ptr",
																"typeString": "bytes calldata"
															}
														],
														"expression": {
															"id": 178,
															"name": "newImplementation",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 165,
															"src": "3143:17:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 179,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "delegatecall",
														"nodeType": "MemberAccess",
														"src": "3143:30:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) returns (bool,bytes memory)"
														}
													},
													"id": 181,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3143:36:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3124:55:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 184,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 177,
															"src": "3193:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 183,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "3185:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 185,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3185:16:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 186,
												"nodeType": "ExpressionStatement",
												"src": "3185:16:1"
											}
										]
									},
									"documentation": {
										"id": 163,
										"nodeType": "StructuredDocumentation",
										"src": "2457:510:1",
										"text": " @dev Upgrade the backing implementation of the proxy and call a function\n on the new implementation.\n This is useful to initialize the proxied contract.\n @param newImplementation Address of the new implementation.\n @param data Data to send as msg.data in the low level call.\n It should include the signature and the parameters of the function to be called, as described in\n https://solidity.readthedocs.io/en/v0.4.24/abi-spec.html#function-selector-and-argument-encoding."
									},
									"functionSelector": "4f1ef286",
									"id": 188,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 170,
											"modifierName": {
												"id": 169,
												"name": "ifAdmin",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 96,
												"src": "3073:7:1",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "3073:7:1"
										}
									],
									"name": "upgradeToAndCall",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 168,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 165,
												"mutability": "mutable",
												"name": "newImplementation",
												"nodeType": "VariableDeclaration",
												"scope": 188,
												"src": "2996:25:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 164,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2996:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 167,
												"mutability": "mutable",
												"name": "data",
												"nodeType": "VariableDeclaration",
												"scope": 188,
												"src": "3023:19:1",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 166,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3023:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2995:48:1"
									},
									"returnParameters": {
										"id": 171,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3083:0:1"
									},
									"scope": 233,
									"src": "2970:236:1",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 199,
										"nodeType": "Block",
										"src": "3309:82:1",
										"statements": [
											{
												"assignments": [
													195
												],
												"declarations": [
													{
														"constant": false,
														"id": 195,
														"mutability": "mutable",
														"name": "slot",
														"nodeType": "VariableDeclaration",
														"scope": 199,
														"src": "3315:12:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 194,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "3315:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 197,
												"initialValue": {
													"id": 196,
													"name": "ADMIN_SLOT",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 80,
													"src": "3330:10:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3315:25:1"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "3355:32:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3363:18:1",
															"value": {
																"arguments": [
																	{
																		"name": "slot",
																		"nodeType": "YulIdentifier",
																		"src": "3376:4:1"
																	}
																],
																"functionName": {
																	"name": "sload",
																	"nodeType": "YulIdentifier",
																	"src": "3370:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3370:11:1"
															},
															"variableNames": [
																{
																	"name": "adm",
																	"nodeType": "YulIdentifier",
																	"src": "3363:3:1"
																}
															]
														}
													]
												},
												"evmVersion": "istanbul",
												"externalReferences": [
													{
														"declaration": 192,
														"isOffset": false,
														"isSlot": false,
														"src": "3363:3:1",
														"valueSize": 1
													},
													{
														"declaration": 195,
														"isOffset": false,
														"isSlot": false,
														"src": "3376:4:1",
														"valueSize": 1
													}
												],
												"id": 198,
												"nodeType": "InlineAssembly",
												"src": "3346:41:1"
											}
										]
									},
									"documentation": {
										"id": 189,
										"nodeType": "StructuredDocumentation",
										"src": "3210:42:1",
										"text": " @return adm The admin slot."
									},
									"id": 200,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_admin",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 190,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3270:2:1"
									},
									"returnParameters": {
										"id": 193,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 192,
												"mutability": "mutable",
												"name": "adm",
												"nodeType": "VariableDeclaration",
												"scope": 200,
												"src": "3296:11:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 191,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3296:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3295:13:1"
									},
									"scope": 233,
									"src": "3255:136:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 211,
										"nodeType": "Block",
										"src": "3553:87:1",
										"statements": [
											{
												"assignments": [
													207
												],
												"declarations": [
													{
														"constant": false,
														"id": 207,
														"mutability": "mutable",
														"name": "slot",
														"nodeType": "VariableDeclaration",
														"scope": 211,
														"src": "3559:12:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 206,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "3559:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 209,
												"initialValue": {
													"id": 208,
													"name": "ADMIN_SLOT",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 80,
													"src": "3574:10:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3559:25:1"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "3600:36:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nodeType": "YulIdentifier",
																		"src": "3615:4:1"
																	},
																	{
																		"name": "newAdmin",
																		"nodeType": "YulIdentifier",
																		"src": "3621:8:1"
																	}
																],
																"functionName": {
																	"name": "sstore",
																	"nodeType": "YulIdentifier",
																	"src": "3608:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3608:22:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3608:22:1"
														}
													]
												},
												"evmVersion": "istanbul",
												"externalReferences": [
													{
														"declaration": 203,
														"isOffset": false,
														"isSlot": false,
														"src": "3621:8:1",
														"valueSize": 1
													},
													{
														"declaration": 207,
														"isOffset": false,
														"isSlot": false,
														"src": "3615:4:1",
														"valueSize": 1
													}
												],
												"id": 210,
												"nodeType": "InlineAssembly",
												"src": "3591:45:1"
											}
										]
									},
									"documentation": {
										"id": 201,
										"nodeType": "StructuredDocumentation",
										"src": "3395:109:1",
										"text": " @dev Sets the address of the proxy admin.\n @param newAdmin Address of the new proxy admin."
									},
									"id": 212,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setAdmin",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 204,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 203,
												"mutability": "mutable",
												"name": "newAdmin",
												"nodeType": "VariableDeclaration",
												"scope": 212,
												"src": "3526:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 202,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3526:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3525:18:1"
									},
									"returnParameters": {
										"id": 205,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3553:0:1"
									},
									"scope": 233,
									"src": "3507:133:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										462
									],
									"body": {
										"id": 231,
										"nodeType": "Block",
										"src": "3766:123:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 222,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 218,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": -15,
																	"src": "3780:3:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 219,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "3780:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 220,
																	"name": "_admin",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 200,
																	"src": "3794:6:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 221,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3794:8:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "3780:22:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "43616e6e6f742063616c6c2066616c6c6261636b2066756e6374696f6e2066726f6d207468652070726f78792061646d696e",
															"id": 223,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3804:52:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_08b466bde770d6d309a22d90ec051a62ad397be6218a53e741989877ec297fc9",
																"typeString": "literal_string \"Cannot call fallback function from the proxy admin\""
															},
															"value": "Cannot call fallback function from the proxy admin"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_08b466bde770d6d309a22d90ec051a62ad397be6218a53e741989877ec297fc9",
																"typeString": "literal_string \"Cannot call fallback function from the proxy admin\""
															}
														],
														"id": 217,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "3772:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 224,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3772:85:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 225,
												"nodeType": "ExpressionStatement",
												"src": "3772:85:1"
											},
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"id": 226,
															"name": "super",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": -25,
															"src": "3863:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_super$_BaseAdminUpgradeabilityProxy_$233",
																"typeString": "contract super BaseAdminUpgradeabilityProxy"
															}
														},
														"id": 228,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "_willFallback",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 462,
														"src": "3863:19:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 229,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3863:21:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 230,
												"nodeType": "ExpressionStatement",
												"src": "3863:21:1"
											}
										]
									},
									"documentation": {
										"id": 213,
										"nodeType": "StructuredDocumentation",
										"src": "3644:68:1",
										"text": " @dev Only fall back when the sender is not the admin."
									},
									"id": 232,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_willFallback",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 215,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "3757:8:1"
									},
									"parameters": {
										"id": 214,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3737:2:1"
									},
									"returnParameters": {
										"id": 216,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3766:0:1"
									},
									"scope": 233,
									"src": "3715:174:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 234,
							"src": "565:3326:1"
						}
					],
					"src": "32:3860:1"
				},
				"id": 1
			},
			"@aave/aave-stake/contracts/lib/BaseUpgradeabilityProxy.sol": {
				"ast": {
					"absolutePath": "@aave/aave-stake/contracts/lib/BaseUpgradeabilityProxy.sol",
					"exportedSymbols": {
						"Address": [
							63
						],
						"BaseUpgradeabilityProxy": [
							298
						],
						"Proxy": [
							476
						]
					},
					"id": 299,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 235,
							"literals": [
								"solidity",
								"0.7",
								".5"
							],
							"nodeType": "PragmaDirective",
							"src": "32:22:2"
						},
						{
							"absolutePath": "@aave/aave-stake/contracts/lib/Proxy.sol",
							"file": "./Proxy.sol",
							"id": 236,
							"nodeType": "ImportDirective",
							"scope": 299,
							"sourceUnit": 477,
							"src": "56:21:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@aave/aave-stake/contracts/lib/Address.sol",
							"file": "./Address.sol",
							"id": 237,
							"nodeType": "ImportDirective",
							"scope": 299,
							"sourceUnit": 64,
							"src": "78:23:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 239,
										"name": "Proxy",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 476,
										"src": "464:5:2",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_Proxy_$476",
											"typeString": "contract Proxy"
										}
									},
									"id": 240,
									"nodeType": "InheritanceSpecifier",
									"src": "464:5:2"
								}
							],
							"contractDependencies": [
								476
							],
							"contractKind": "contract",
							"documentation": {
								"id": 238,
								"nodeType": "StructuredDocumentation",
								"src": "103:324:2",
								"text": " @title BaseUpgradeabilityProxy\n @dev From https://github.com/OpenZeppelin/openzeppelin-sdk/tree/solc-0.6/packages/lib/contracts/upgradeability\n This contract implements a proxy that allows to change the\n implementation address to which it will delegate.\n Such a change is called an implementation upgrade."
							},
							"fullyImplemented": true,
							"id": 298,
							"linearizedBaseContracts": [
								298,
								476
							],
							"name": "BaseUpgradeabilityProxy",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 241,
										"nodeType": "StructuredDocumentation",
										"src": "474:126:2",
										"text": " @dev Emitted when the implementation is upgraded.\n @param implementation Address of the new implementation."
									},
									"id": 245,
									"name": "Upgraded",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 244,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 243,
												"indexed": true,
												"mutability": "mutable",
												"name": "implementation",
												"nodeType": "VariableDeclaration",
												"scope": 245,
												"src": "618:30:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 242,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "618:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "617:32:2"
									},
									"src": "603:47:2"
								},
								{
									"constant": true,
									"documentation": {
										"id": 246,
										"nodeType": "StructuredDocumentation",
										"src": "654:206:2",
										"text": " @dev Storage slot with the address of the current implementation.\n This is the keccak-256 hash of \"eip1967.proxy.implementation\" subtracted by 1, and is\n validated in the constructor."
									},
									"id": 249,
									"mutability": "constant",
									"name": "IMPLEMENTATION_SLOT",
									"nodeType": "VariableDeclaration",
									"scope": 298,
									"src": "863:118:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 247,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "863:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"hexValue": "307833363038393461313362613161333231303636376338323834393264623938646361336532303736636333373335613932306133636135303564333832626263",
										"id": 248,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "915:66:2",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_24440054405305269366569402256811496959409073762505157381672968839269610695612_by_1",
											"typeString": "int_const 2444...(69 digits omitted)...5612"
										},
										"value": "0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc"
									},
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										449
									],
									"body": {
										"id": 261,
										"nodeType": "Block",
										"src": "1173:92:2",
										"statements": [
											{
												"assignments": [
													257
												],
												"declarations": [
													{
														"constant": false,
														"id": 257,
														"mutability": "mutable",
														"name": "slot",
														"nodeType": "VariableDeclaration",
														"scope": 261,
														"src": "1179:12:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 256,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "1179:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 259,
												"initialValue": {
													"id": 258,
													"name": "IMPLEMENTATION_SLOT",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 249,
													"src": "1194:19:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1179:34:2"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "1228:33:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1236:19:2",
															"value": {
																"arguments": [
																	{
																		"name": "slot",
																		"nodeType": "YulIdentifier",
																		"src": "1250:4:2"
																	}
																],
																"functionName": {
																	"name": "sload",
																	"nodeType": "YulIdentifier",
																	"src": "1244:5:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1244:11:2"
															},
															"variableNames": [
																{
																	"name": "impl",
																	"nodeType": "YulIdentifier",
																	"src": "1236:4:2"
																}
															]
														}
													]
												},
												"evmVersion": "istanbul",
												"externalReferences": [
													{
														"declaration": 254,
														"isOffset": false,
														"isSlot": false,
														"src": "1236:4:2",
														"valueSize": 1
													},
													{
														"declaration": 257,
														"isOffset": false,
														"isSlot": false,
														"src": "1250:4:2",
														"valueSize": 1
													}
												],
												"id": 260,
												"nodeType": "InlineAssembly",
												"src": "1219:42:2"
											}
										]
									},
									"documentation": {
										"id": 250,
										"nodeType": "StructuredDocumentation",
										"src": "986:111:2",
										"text": " @dev Returns the current implementation.\n @return impl Address of the current implementation"
									},
									"id": 262,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_implementation",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 252,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "1141:8:2"
									},
									"parameters": {
										"id": 251,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1124:2:2"
									},
									"returnParameters": {
										"id": 255,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 254,
												"mutability": "mutable",
												"name": "impl",
												"nodeType": "VariableDeclaration",
												"scope": 262,
												"src": "1159:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 253,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1159:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1158:14:2"
									},
									"scope": 298,
									"src": "1100:165:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 276,
										"nodeType": "Block",
										"src": "1456:86:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 269,
															"name": "newImplementation",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 265,
															"src": "1481:17:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 268,
														"name": "_setImplementation",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 297,
														"src": "1462:18:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 270,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1462:37:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 271,
												"nodeType": "ExpressionStatement",
												"src": "1462:37:2"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 273,
															"name": "newImplementation",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 265,
															"src": "1519:17:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 272,
														"name": "Upgraded",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 245,
														"src": "1510:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 274,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1510:27:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 275,
												"nodeType": "EmitStatement",
												"src": "1505:32:2"
											}
										]
									},
									"documentation": {
										"id": 263,
										"nodeType": "StructuredDocumentation",
										"src": "1269:128:2",
										"text": " @dev Upgrades the proxy to a new implementation.\n @param newImplementation Address of the new implementation."
									},
									"id": 277,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_upgradeTo",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 266,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 265,
												"mutability": "mutable",
												"name": "newImplementation",
												"nodeType": "VariableDeclaration",
												"scope": 277,
												"src": "1420:25:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 264,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1420:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1419:27:2"
									},
									"returnParameters": {
										"id": 267,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1456:0:2"
									},
									"scope": 298,
									"src": "1400:142:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 296,
										"nodeType": "Block",
										"src": "1743:239:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 286,
																	"name": "newImplementation",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 280,
																	"src": "1783:17:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"expression": {
																	"id": 284,
																	"name": "Address",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 63,
																	"src": "1764:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_Address_$63_$",
																		"typeString": "type(library Address)"
																	}
																},
																"id": 285,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "isContract",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 28,
																"src": "1764:18:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address) view returns (bool)"
																}
															},
															"id": 287,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1764:37:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "43616e6e6f742073657420612070726f787920696d706c656d656e746174696f6e20746f2061206e6f6e2d636f6e74726163742061646472657373",
															"id": 288,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1809:61:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_b5145a64ce8c406e5785204fe5b300f0ceda96d6636350b38fdccb9cd8c0c37c",
																"typeString": "literal_string \"Cannot set a proxy implementation to a non-contract address\""
															},
															"value": "Cannot set a proxy implementation to a non-contract address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_b5145a64ce8c406e5785204fe5b300f0ceda96d6636350b38fdccb9cd8c0c37c",
																"typeString": "literal_string \"Cannot set a proxy implementation to a non-contract address\""
															}
														],
														"id": 283,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "1749:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 289,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1749:127:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 290,
												"nodeType": "ExpressionStatement",
												"src": "1749:127:2"
											},
											{
												"assignments": [
													292
												],
												"declarations": [
													{
														"constant": false,
														"id": 292,
														"mutability": "mutable",
														"name": "slot",
														"nodeType": "VariableDeclaration",
														"scope": 296,
														"src": "1883:12:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 291,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "1883:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 294,
												"initialValue": {
													"id": 293,
													"name": "IMPLEMENTATION_SLOT",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 249,
													"src": "1898:19:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1883:34:2"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "1933:45:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nodeType": "YulIdentifier",
																		"src": "1948:4:2"
																	},
																	{
																		"name": "newImplementation",
																		"nodeType": "YulIdentifier",
																		"src": "1954:17:2"
																	}
																],
																"functionName": {
																	"name": "sstore",
																	"nodeType": "YulIdentifier",
																	"src": "1941:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1941:31:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1941:31:2"
														}
													]
												},
												"evmVersion": "istanbul",
												"externalReferences": [
													{
														"declaration": 280,
														"isOffset": false,
														"isSlot": false,
														"src": "1954:17:2",
														"valueSize": 1
													},
													{
														"declaration": 292,
														"isOffset": false,
														"isSlot": false,
														"src": "1948:4:2",
														"valueSize": 1
													}
												],
												"id": 295,
												"nodeType": "InlineAssembly",
												"src": "1924:54:2"
											}
										]
									},
									"documentation": {
										"id": 278,
										"nodeType": "StructuredDocumentation",
										"src": "1546:130:2",
										"text": " @dev Sets the implementation address of the proxy.\n @param newImplementation Address of the new implementation."
									},
									"id": 297,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setImplementation",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 281,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 280,
												"mutability": "mutable",
												"name": "newImplementation",
												"nodeType": "VariableDeclaration",
												"scope": 297,
												"src": "1707:25:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 279,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1707:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1706:27:2"
									},
									"returnParameters": {
										"id": 282,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1743:0:2"
									},
									"scope": 298,
									"src": "1679:303:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 299,
							"src": "428:1556:2"
						}
					],
					"src": "32:1953:2"
				},
				"id": 2
			},
			"@aave/aave-stake/contracts/lib/InitializableAdminUpgradeabilityProxy.sol": {
				"ast": {
					"absolutePath": "@aave/aave-stake/contracts/lib/InitializableAdminUpgradeabilityProxy.sol",
					"exportedSymbols": {
						"Address": [
							63
						],
						"BaseAdminUpgradeabilityProxy": [
							233
						],
						"BaseUpgradeabilityProxy": [
							298
						],
						"InitializableAdminUpgradeabilityProxy": [
							369
						],
						"InitializableUpgradeabilityProxy": [
							432
						],
						"Proxy": [
							476
						],
						"UpgradeabilityProxy": [
							529
						]
					},
					"id": 370,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 300,
							"literals": [
								"solidity",
								"0.7",
								".5"
							],
							"nodeType": "PragmaDirective",
							"src": "32:22:3"
						},
						{
							"absolutePath": "@aave/aave-stake/contracts/lib/BaseAdminUpgradeabilityProxy.sol",
							"file": "./BaseAdminUpgradeabilityProxy.sol",
							"id": 301,
							"nodeType": "ImportDirective",
							"scope": 370,
							"sourceUnit": 234,
							"src": "56:44:3",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@aave/aave-stake/contracts/lib/InitializableUpgradeabilityProxy.sol",
							"file": "./InitializableUpgradeabilityProxy.sol",
							"id": 302,
							"nodeType": "ImportDirective",
							"scope": 370,
							"sourceUnit": 433,
							"src": "101:48:3",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 304,
										"name": "BaseAdminUpgradeabilityProxy",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 233,
										"src": "500:28:3",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_BaseAdminUpgradeabilityProxy_$233",
											"typeString": "contract BaseAdminUpgradeabilityProxy"
										}
									},
									"id": 305,
									"nodeType": "InheritanceSpecifier",
									"src": "500:28:3"
								},
								{
									"baseName": {
										"id": 306,
										"name": "InitializableUpgradeabilityProxy",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 432,
										"src": "532:32:3",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_InitializableUpgradeabilityProxy_$432",
											"typeString": "contract InitializableUpgradeabilityProxy"
										}
									},
									"id": 307,
									"nodeType": "InheritanceSpecifier",
									"src": "532:32:3"
								}
							],
							"contractDependencies": [
								233,
								298,
								432,
								476
							],
							"contractKind": "contract",
							"documentation": {
								"id": 303,
								"nodeType": "StructuredDocumentation",
								"src": "151:296:3",
								"text": " @title InitializableAdminUpgradeabilityProxy\n @dev From https://github.com/OpenZeppelin/openzeppelin-sdk/tree/solc-0.6/packages/lib/contracts/upgradeability\n Extends from BaseAdminUpgradeabilityProxy with an initializer for\n initializing the implementation, admin, and init data."
							},
							"fullyImplemented": true,
							"id": 369,
							"linearizedBaseContracts": [
								369,
								432,
								233,
								298,
								476
							],
							"name": "InitializableAdminUpgradeabilityProxy",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 354,
										"nodeType": "Block",
										"src": "1244:220:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 324,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 318,
																	"name": "_implementation",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		262
																	],
																	"referencedDeclaration": 262,
																	"src": "1258:15:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 319,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1258:17:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 322,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1287:1:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 321,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "1279:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 320,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "1279:7:3",
																		"typeDescriptions": {}
																	}
																},
																"id": 323,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1279:10:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "1258:31:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 317,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "1250:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 325,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1250:40:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 326,
												"nodeType": "ExpressionStatement",
												"src": "1250:40:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 330,
															"name": "_logic",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 310,
															"src": "1340:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 331,
															"name": "_data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 314,
															"src": "1348:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 327,
															"name": "InitializableUpgradeabilityProxy",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 432,
															"src": "1296:32:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_InitializableUpgradeabilityProxy_$432_$",
																"typeString": "type(contract InitializableUpgradeabilityProxy)"
															}
														},
														"id": 329,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "initialize",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 431,
														"src": "1296:43:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,bytes memory)"
														}
													},
													"id": 332,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1296:58:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 333,
												"nodeType": "ExpressionStatement",
												"src": "1296:58:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															"id": 347,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"leftExpression": {
																"id": 335,
																"name": "ADMIN_SLOT",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 80,
																"src": "1367:10:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"arguments": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 345,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"leftExpression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"hexValue": "656970313936372e70726f78792e61646d696e",
																							"id": 341,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "string",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "1407:21:3",
																							"typeDescriptions": {
																								"typeIdentifier": "t_stringliteral_b53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6104",
																								"typeString": "literal_string \"eip1967.proxy.admin\""
																							},
																							"value": "eip1967.proxy.admin"
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_stringliteral_b53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6104",
																								"typeString": "literal_string \"eip1967.proxy.admin\""
																							}
																						],
																						"id": 340,
																						"name": "keccak256",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": -8,
																						"src": "1397:9:3",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																							"typeString": "function (bytes memory) pure returns (bytes32)"
																						}
																					},
																					"id": 342,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "1397:32:3",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes32",
																						"typeString": "bytes32"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_bytes32",
																						"typeString": "bytes32"
																					}
																				],
																				"id": 339,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "1389:7:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_uint256_$",
																					"typeString": "type(uint256)"
																				},
																				"typeName": {
																					"id": 338,
																					"name": "uint256",
																					"nodeType": "ElementaryTypeName",
																					"src": "1389:7:3",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 343,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "1389:41:3",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "-",
																		"rightExpression": {
																			"hexValue": "31",
																			"id": 344,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1433:1:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "1389:45:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 337,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "1381:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_bytes32_$",
																		"typeString": "type(bytes32)"
																	},
																	"typeName": {
																		"id": 336,
																		"name": "bytes32",
																		"nodeType": "ElementaryTypeName",
																		"src": "1381:7:3",
																		"typeDescriptions": {}
																	}
																},
																"id": 346,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1381:54:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"src": "1367:68:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 334,
														"name": "assert",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": -3,
														"src": "1360:6:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_assert_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 348,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1360:76:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 349,
												"nodeType": "ExpressionStatement",
												"src": "1360:76:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 351,
															"name": "_admin",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 312,
															"src": "1452:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 350,
														"name": "_setAdmin",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 212,
														"src": "1442:9:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 352,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1442:17:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 353,
												"nodeType": "ExpressionStatement",
												"src": "1442:17:3"
											}
										]
									},
									"documentation": {
										"id": 308,
										"nodeType": "StructuredDocumentation",
										"src": "569:569:3",
										"text": " Contract initializer.\n @param _logic address of the initial implementation.\n @param _admin Address of the proxy administrator.\n @param _data Data to send as msg.data to the implementation to initialize the proxied contract.\n It should include the signature and the parameters of the function to be called, as described in\n https://solidity.readthedocs.io/en/v0.4.24/abi-spec.html#function-selector-and-argument-encoding.\n This parameter is optional, if no data is given the initialization call to proxied contract will be skipped."
									},
									"functionSelector": "cf7a1d77",
									"id": 355,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "initialize",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 315,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 310,
												"mutability": "mutable",
												"name": "_logic",
												"nodeType": "VariableDeclaration",
												"scope": 355,
												"src": "1166:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 309,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1166:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 312,
												"mutability": "mutable",
												"name": "_admin",
												"nodeType": "VariableDeclaration",
												"scope": 355,
												"src": "1186:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 311,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1186:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 314,
												"mutability": "mutable",
												"name": "_data",
												"nodeType": "VariableDeclaration",
												"scope": 355,
												"src": "1206:18:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 313,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1206:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1160:68:3"
									},
									"returnParameters": {
										"id": 316,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1244:0:3"
									},
									"scope": 369,
									"src": "1141:323:3",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										232,
										462
									],
									"body": {
										"id": 367,
										"nodeType": "Block",
										"src": "1619:55:3",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"id": 362,
															"name": "BaseAdminUpgradeabilityProxy",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 233,
															"src": "1625:28:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_BaseAdminUpgradeabilityProxy_$233_$",
																"typeString": "type(contract BaseAdminUpgradeabilityProxy)"
															}
														},
														"id": 364,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "_willFallback",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 232,
														"src": "1625:42:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 365,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1625:44:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 366,
												"nodeType": "ExpressionStatement",
												"src": "1625:44:3"
											}
										]
									},
									"documentation": {
										"id": 356,
										"nodeType": "StructuredDocumentation",
										"src": "1468:68:3",
										"text": " @dev Only fall back when the sender is not the admin."
									},
									"id": 368,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_willFallback",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 360,
										"nodeType": "OverrideSpecifier",
										"overrides": [
											{
												"id": 358,
												"name": "BaseAdminUpgradeabilityProxy",
												"nodeType": "UserDefinedTypeName",
												"referencedDeclaration": 233,
												"src": "1582:28:3",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_BaseAdminUpgradeabilityProxy_$233",
													"typeString": "contract BaseAdminUpgradeabilityProxy"
												}
											},
											{
												"id": 359,
												"name": "Proxy",
												"nodeType": "UserDefinedTypeName",
												"referencedDeclaration": 476,
												"src": "1612:5:3",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_Proxy_$476",
													"typeString": "contract Proxy"
												}
											}
										],
										"src": "1573:45:3"
									},
									"parameters": {
										"id": 357,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1561:2:3"
									},
									"returnParameters": {
										"id": 361,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1619:0:3"
									},
									"scope": 369,
									"src": "1539:135:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 370,
							"src": "448:1228:3"
						}
					],
					"src": "32:1645:3"
				},
				"id": 3
			},
			"@aave/aave-stake/contracts/lib/InitializableUpgradeabilityProxy.sol": {
				"ast": {
					"absolutePath": "@aave/aave-stake/contracts/lib/InitializableUpgradeabilityProxy.sol",
					"exportedSymbols": {
						"Address": [
							63
						],
						"BaseUpgradeabilityProxy": [
							298
						],
						"InitializableUpgradeabilityProxy": [
							432
						],
						"Proxy": [
							476
						]
					},
					"id": 433,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 371,
							"literals": [
								"solidity",
								"0.7",
								".5"
							],
							"nodeType": "PragmaDirective",
							"src": "32:22:4"
						},
						{
							"absolutePath": "@aave/aave-stake/contracts/lib/BaseUpgradeabilityProxy.sol",
							"file": "./BaseUpgradeabilityProxy.sol",
							"id": 372,
							"nodeType": "ImportDirective",
							"scope": 433,
							"sourceUnit": 299,
							"src": "56:39:4",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 374,
										"name": "BaseUpgradeabilityProxy",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 298,
										"src": "412:23:4",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_BaseUpgradeabilityProxy_$298",
											"typeString": "contract BaseUpgradeabilityProxy"
										}
									},
									"id": 375,
									"nodeType": "InheritanceSpecifier",
									"src": "412:23:4"
								}
							],
							"contractDependencies": [
								298,
								476
							],
							"contractKind": "contract",
							"documentation": {
								"id": 373,
								"nodeType": "StructuredDocumentation",
								"src": "97:269:4",
								"text": " @title InitializableUpgradeabilityProxy\n @dev From https://github.com/OpenZeppelin/openzeppelin-sdk/tree/solc-0.6/packages/lib/contracts/upgradeability\n Extends BaseUpgradeabilityProxy with an initializer for initializing\n implementation and init data."
							},
							"fullyImplemented": true,
							"id": 432,
							"linearizedBaseContracts": [
								432,
								298,
								476
							],
							"name": "InitializableUpgradeabilityProxy",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 430,
										"nodeType": "Block",
										"src": "1033:294:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 390,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 384,
																	"name": "_implementation",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		262
																	],
																	"referencedDeclaration": 262,
																	"src": "1047:15:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 385,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1047:17:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 388,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1076:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 387,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "1068:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 386,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "1068:7:4",
																		"typeDescriptions": {}
																	}
																},
																"id": 389,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1068:10:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "1047:31:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 383,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "1039:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 391,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1039:40:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 392,
												"nodeType": "ExpressionStatement",
												"src": "1039:40:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															"id": 406,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"leftExpression": {
																"id": 394,
																"name": "IMPLEMENTATION_SLOT",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 249,
																"src": "1092:19:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"arguments": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 404,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"leftExpression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"hexValue": "656970313936372e70726f78792e696d706c656d656e746174696f6e",
																							"id": 400,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "string",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "1141:30:4",
																							"typeDescriptions": {
																								"typeIdentifier": "t_stringliteral_360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbd",
																								"typeString": "literal_string \"eip1967.proxy.implementation\""
																							},
																							"value": "eip1967.proxy.implementation"
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_stringliteral_360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbd",
																								"typeString": "literal_string \"eip1967.proxy.implementation\""
																							}
																						],
																						"id": 399,
																						"name": "keccak256",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": -8,
																						"src": "1131:9:4",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																							"typeString": "function (bytes memory) pure returns (bytes32)"
																						}
																					},
																					"id": 401,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "1131:41:4",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes32",
																						"typeString": "bytes32"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_bytes32",
																						"typeString": "bytes32"
																					}
																				],
																				"id": 398,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "1123:7:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_uint256_$",
																					"typeString": "type(uint256)"
																				},
																				"typeName": {
																					"id": 397,
																					"name": "uint256",
																					"nodeType": "ElementaryTypeName",
																					"src": "1123:7:4",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 402,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "1123:50:4",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "-",
																		"rightExpression": {
																			"hexValue": "31",
																			"id": 403,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1176:1:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "1123:54:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 396,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "1115:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_bytes32_$",
																		"typeString": "type(bytes32)"
																	},
																	"typeName": {
																		"id": 395,
																		"name": "bytes32",
																		"nodeType": "ElementaryTypeName",
																		"src": "1115:7:4",
																		"typeDescriptions": {}
																	}
																},
																"id": 405,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1115:63:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"src": "1092:86:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 393,
														"name": "assert",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": -3,
														"src": "1085:6:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_assert_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 407,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1085:94:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 408,
												"nodeType": "ExpressionStatement",
												"src": "1085:94:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 410,
															"name": "_logic",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 378,
															"src": "1204:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 409,
														"name": "_setImplementation",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 297,
														"src": "1185:18:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 411,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1185:26:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 412,
												"nodeType": "ExpressionStatement",
												"src": "1185:26:4"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 416,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 413,
															"name": "_data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 380,
															"src": "1221:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 414,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "1221:12:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 415,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1236:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1221:16:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 429,
												"nodeType": "IfStatement",
												"src": "1217:106:4",
												"trueBody": {
													"id": 428,
													"nodeType": "Block",
													"src": "1239:84:4",
													"statements": [
														{
															"assignments": [
																418,
																null
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 418,
																	"mutability": "mutable",
																	"name": "success",
																	"nodeType": "VariableDeclaration",
																	"scope": 428,
																	"src": "1248:12:4",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"typeName": {
																		"id": 417,
																		"name": "bool",
																		"nodeType": "ElementaryTypeName",
																		"src": "1248:4:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"visibility": "internal"
																},
																null
															],
															"id": 423,
															"initialValue": {
																"arguments": [
																	{
																		"id": 421,
																		"name": "_data",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 380,
																		"src": "1286:5:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"expression": {
																		"id": 419,
																		"name": "_logic",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 378,
																		"src": "1266:6:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"id": 420,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "delegatecall",
																	"nodeType": "MemberAccess",
																	"src": "1266:19:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																		"typeString": "function (bytes memory) returns (bool,bytes memory)"
																	}
																},
																"id": 422,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1266:26:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
																	"typeString": "tuple(bool,bytes memory)"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "1247:45:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"id": 425,
																		"name": "success",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 418,
																		"src": "1308:7:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	],
																	"id": 424,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		-18,
																		-18
																	],
																	"referencedDeclaration": -18,
																	"src": "1300:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
																		"typeString": "function (bool) pure"
																	}
																},
																"id": 426,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1300:16:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 427,
															"nodeType": "ExpressionStatement",
															"src": "1300:16:4"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 376,
										"nodeType": "StructuredDocumentation",
										"src": "440:519:4",
										"text": " @dev Contract initializer.\n @param _logic Address of the initial implementation.\n @param _data Data to send as msg.data to the implementation to initialize the proxied contract.\n It should include the signature and the parameters of the function to be called, as described in\n https://solidity.readthedocs.io/en/v0.4.24/abi-spec.html#function-selector-and-argument-encoding.\n This parameter is optional, if no data is given the initialization call to proxied contract will be skipped."
									},
									"functionSelector": "d1f57894",
									"id": 431,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "initialize",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 381,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 378,
												"mutability": "mutable",
												"name": "_logic",
												"nodeType": "VariableDeclaration",
												"scope": 431,
												"src": "982:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 377,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "982:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 380,
												"mutability": "mutable",
												"name": "_data",
												"nodeType": "VariableDeclaration",
												"scope": 431,
												"src": "998:18:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 379,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "998:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "981:36:4"
									},
									"returnParameters": {
										"id": 382,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1033:0:4"
									},
									"scope": 432,
									"src": "962:365:4",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 433,
							"src": "367:962:4"
						}
					],
					"src": "32:1298:4"
				},
				"id": 4
			},
			"@aave/aave-stake/contracts/lib/Proxy.sol": {
				"ast": {
					"absolutePath": "@aave/aave-stake/contracts/lib/Proxy.sol",
					"exportedSymbols": {
						"Proxy": [
							476
						]
					},
					"id": 477,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 434,
							"literals": [
								"solidity",
								"0.7",
								".5"
							],
							"nodeType": "PragmaDirective",
							"src": "32:22:5"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 435,
								"nodeType": "StructuredDocumentation",
								"src": "56:399:5",
								"text": " @title Proxy\n @dev From https://github.com/OpenZeppelin/openzeppelin-sdk/tree/solc-0.6/packages/lib/contracts/upgradeability\n Implements delegation of calls to other contracts, with proper\n forwarding of return values and bubbling of failures.\n It defines a fallback function that delegates all calls to the address\n returned by the abstract _implementation() internal function."
							},
							"fullyImplemented": false,
							"id": 476,
							"linearizedBaseContracts": [
								476
							],
							"name": "Proxy",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 442,
										"nodeType": "Block",
										"src": "595:22:5",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 439,
														"name": "_fallback",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 475,
														"src": "601:9:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 440,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "601:11:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 441,
												"nodeType": "ExpressionStatement",
												"src": "601:11:5"
											}
										]
									},
									"documentation": {
										"id": 436,
										"nodeType": "StructuredDocumentation",
										"src": "484:80:5",
										"text": " @dev Fallback function.\n Implemented entirely in `_fallback`."
									},
									"id": 443,
									"implemented": true,
									"kind": "fallback",
									"modifiers": [],
									"name": "",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 437,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "575:2:5"
									},
									"returnParameters": {
										"id": 438,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "595:0:5"
									},
									"scope": 476,
									"src": "567:50:5",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 444,
										"nodeType": "StructuredDocumentation",
										"src": "621:57:5",
										"text": " @return The Address of the implementation."
									},
									"id": 449,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "_implementation",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 445,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "705:2:5"
									},
									"returnParameters": {
										"id": 448,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 447,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 449,
												"src": "739:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 446,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "739:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "738:9:5"
									},
									"scope": 476,
									"src": "681:67:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 456,
										"nodeType": "Block",
										"src": "1086:733:5",
										"statements": [
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "1101:714:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1330:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1333:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [],
																		"functionName": {
																			"name": "calldatasize",
																			"nodeType": "YulIdentifier",
																			"src": "1336:12:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1336:14:5"
																	}
																],
																"functionName": {
																	"name": "calldatacopy",
																	"nodeType": "YulIdentifier",
																	"src": "1317:12:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1317:34:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1317:34:5"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1460:74:5",
															"value": {
																"arguments": [
																	{
																		"arguments": [],
																		"functionName": {
																			"name": "gas",
																			"nodeType": "YulIdentifier",
																			"src": "1487:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1487:5:5"
																	},
																	{
																		"name": "implementation",
																		"nodeType": "YulIdentifier",
																		"src": "1494:14:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1510:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [],
																		"functionName": {
																			"name": "calldatasize",
																			"nodeType": "YulIdentifier",
																			"src": "1513:12:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1513:14:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1529:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1532:1:5",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "delegatecall",
																	"nodeType": "YulIdentifier",
																	"src": "1474:12:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1474:60:5"
															},
															"variables": [
																{
																	"name": "result",
																	"nodeType": "YulTypedName",
																	"src": "1464:6:5",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1590:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1593:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [],
																		"functionName": {
																			"name": "returndatasize",
																			"nodeType": "YulIdentifier",
																			"src": "1596:14:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1596:16:5"
																	}
																],
																"functionName": {
																	"name": "returndatacopy",
																	"nodeType": "YulIdentifier",
																	"src": "1575:14:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1575:38:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1575:38:5"
														},
														{
															"cases": [
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "1694:49:5",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "1713:1:5",
																							"type": "",
																							"value": "0"
																						},
																						{
																							"arguments": [],
																							"functionName": {
																								"name": "returndatasize",
																								"nodeType": "YulIdentifier",
																								"src": "1716:14:5"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "1716:16:5"
																						}
																					],
																					"functionName": {
																						"name": "revert",
																						"nodeType": "YulIdentifier",
																						"src": "1706:6:5"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1706:27:5"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "1706:27:5"
																			}
																		]
																	},
																	"nodeType": "YulCase",
																	"src": "1687:56:5",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1692:1:5",
																		"type": "",
																		"value": "0"
																	}
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "1760:49:5",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "1779:1:5",
																							"type": "",
																							"value": "0"
																						},
																						{
																							"arguments": [],
																							"functionName": {
																								"name": "returndatasize",
																								"nodeType": "YulIdentifier",
																								"src": "1782:14:5"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "1782:16:5"
																						}
																					],
																					"functionName": {
																						"name": "return",
																						"nodeType": "YulIdentifier",
																						"src": "1772:6:5"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1772:27:5"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "1772:27:5"
																			}
																		]
																	},
																	"nodeType": "YulCase",
																	"src": "1752:57:5",
																	"value": "default"
																}
															],
															"expression": {
																"name": "result",
																"nodeType": "YulIdentifier",
																"src": "1628:6:5"
															},
															"nodeType": "YulSwitch",
															"src": "1621:188:5"
														}
													]
												},
												"evmVersion": "istanbul",
												"externalReferences": [
													{
														"declaration": 452,
														"isOffset": false,
														"isSlot": false,
														"src": "1494:14:5",
														"valueSize": 1
													}
												],
												"id": 455,
												"nodeType": "InlineAssembly",
												"src": "1092:723:5"
											}
										]
									},
									"documentation": {
										"id": 450,
										"nodeType": "StructuredDocumentation",
										"src": "752:279:5",
										"text": " @dev Delegates execution to an implementation contract.\n This is a low level function that doesn't return to its internal call site.\n It will return to the external caller whatever the implementation returns.\n @param implementation Address to delegate."
									},
									"id": 457,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_delegate",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 453,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 452,
												"mutability": "mutable",
												"name": "implementation",
												"nodeType": "VariableDeclaration",
												"scope": 457,
												"src": "1053:22:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 451,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1053:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1052:24:5"
									},
									"returnParameters": {
										"id": 454,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1086:0:5"
									},
									"scope": 476,
									"src": "1034:785:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 461,
										"nodeType": "Block",
										"src": "2070:2:5",
										"statements": []
									},
									"documentation": {
										"id": 458,
										"nodeType": "StructuredDocumentation",
										"src": "1823:202:5",
										"text": " @dev Function that is run as the first thing in the fallback function.\n Can be redefined in derived contracts to add functionality.\n Redefinitions must call super._willFallback()."
									},
									"id": 462,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_willFallback",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 459,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2050:2:5"
									},
									"returnParameters": {
										"id": 460,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2070:0:5"
									},
									"scope": 476,
									"src": "2028:44:5",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 474,
										"nodeType": "Block",
										"src": "2197:60:5",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 466,
														"name": "_willFallback",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 462,
														"src": "2203:13:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 467,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2203:15:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 468,
												"nodeType": "ExpressionStatement",
												"src": "2203:15:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 470,
																"name": "_implementation",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 449,
																"src": "2234:15:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 471,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2234:17:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 469,
														"name": "_delegate",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 457,
														"src": "2224:9:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 472,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2224:28:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 473,
												"nodeType": "ExpressionStatement",
												"src": "2224:28:5"
											}
										]
									},
									"documentation": {
										"id": 463,
										"nodeType": "StructuredDocumentation",
										"src": "2076:88:5",
										"text": " @dev fallback implementation.\n Extracted to enable manual triggering."
									},
									"id": 475,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_fallback",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 464,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2185:2:5"
									},
									"returnParameters": {
										"id": 465,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2197:0:5"
									},
									"scope": 476,
									"src": "2167:90:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 477,
							"src": "456:1803:5"
						}
					],
					"src": "32:2228:5"
				},
				"id": 5
			},
			"@aave/aave-stake/contracts/lib/UpgradeabilityProxy.sol": {
				"ast": {
					"absolutePath": "@aave/aave-stake/contracts/lib/UpgradeabilityProxy.sol",
					"exportedSymbols": {
						"Address": [
							63
						],
						"BaseUpgradeabilityProxy": [
							298
						],
						"Proxy": [
							476
						],
						"UpgradeabilityProxy": [
							529
						]
					},
					"id": 530,
					"license": "agpl-3.0",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 478,
							"literals": [
								"solidity",
								"0.7",
								".5"
							],
							"nodeType": "PragmaDirective",
							"src": "37:22:6"
						},
						{
							"absolutePath": "@aave/aave-stake/contracts/lib/BaseUpgradeabilityProxy.sol",
							"file": "./BaseUpgradeabilityProxy.sol",
							"id": 479,
							"nodeType": "ImportDirective",
							"scope": 530,
							"sourceUnit": 299,
							"src": "61:39:6",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 481,
										"name": "BaseUpgradeabilityProxy",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 298,
										"src": "390:23:6",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_BaseUpgradeabilityProxy_$298",
											"typeString": "contract BaseUpgradeabilityProxy"
										}
									},
									"id": 482,
									"nodeType": "InheritanceSpecifier",
									"src": "390:23:6"
								}
							],
							"contractDependencies": [
								298,
								476
							],
							"contractKind": "contract",
							"documentation": {
								"id": 480,
								"nodeType": "StructuredDocumentation",
								"src": "102:255:6",
								"text": " @title UpgradeabilityProxy\n @dev From https://github.com/OpenZeppelin/openzeppelin-sdk/tree/solc-0.6/packages/lib/contracts/upgradeability\n Extends BaseUpgradeabilityProxy with a constructor for initializing\n implementation and init data."
							},
							"fullyImplemented": true,
							"id": 529,
							"linearizedBaseContracts": [
								529,
								298,
								476
							],
							"name": "UpgradeabilityProxy",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 527,
										"nodeType": "Block",
										"src": "1003:248:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															"id": 503,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"leftExpression": {
																"id": 491,
																"name": "IMPLEMENTATION_SLOT",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 249,
																"src": "1016:19:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"arguments": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 501,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"leftExpression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"hexValue": "656970313936372e70726f78792e696d706c656d656e746174696f6e",
																							"id": 497,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "string",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "1065:30:6",
																							"typeDescriptions": {
																								"typeIdentifier": "t_stringliteral_360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbd",
																								"typeString": "literal_string \"eip1967.proxy.implementation\""
																							},
																							"value": "eip1967.proxy.implementation"
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_stringliteral_360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbd",
																								"typeString": "literal_string \"eip1967.proxy.implementation\""
																							}
																						],
																						"id": 496,
																						"name": "keccak256",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": -8,
																						"src": "1055:9:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																							"typeString": "function (bytes memory) pure returns (bytes32)"
																						}
																					},
																					"id": 498,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "1055:41:6",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes32",
																						"typeString": "bytes32"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_bytes32",
																						"typeString": "bytes32"
																					}
																				],
																				"id": 495,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "1047:7:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_uint256_$",
																					"typeString": "type(uint256)"
																				},
																				"typeName": {
																					"id": 494,
																					"name": "uint256",
																					"nodeType": "ElementaryTypeName",
																					"src": "1047:7:6",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 499,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "1047:50:6",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "-",
																		"rightExpression": {
																			"hexValue": "31",
																			"id": 500,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1100:1:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "1047:54:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 493,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "1039:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_bytes32_$",
																		"typeString": "type(bytes32)"
																	},
																	"typeName": {
																		"id": 492,
																		"name": "bytes32",
																		"nodeType": "ElementaryTypeName",
																		"src": "1039:7:6",
																		"typeDescriptions": {}
																	}
																},
																"id": 502,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1039:63:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"src": "1016:86:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 490,
														"name": "assert",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": -3,
														"src": "1009:6:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_assert_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 504,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1009:94:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 505,
												"nodeType": "ExpressionStatement",
												"src": "1009:94:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 507,
															"name": "_logic",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 485,
															"src": "1128:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 506,
														"name": "_setImplementation",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 297,
														"src": "1109:18:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 508,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1109:26:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 509,
												"nodeType": "ExpressionStatement",
												"src": "1109:26:6"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 513,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 510,
															"name": "_data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 487,
															"src": "1145:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 511,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "1145:12:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 512,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1160:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1145:16:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 526,
												"nodeType": "IfStatement",
												"src": "1141:106:6",
												"trueBody": {
													"id": 525,
													"nodeType": "Block",
													"src": "1163:84:6",
													"statements": [
														{
															"assignments": [
																515,
																null
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 515,
																	"mutability": "mutable",
																	"name": "success",
																	"nodeType": "VariableDeclaration",
																	"scope": 525,
																	"src": "1172:12:6",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"typeName": {
																		"id": 514,
																		"name": "bool",
																		"nodeType": "ElementaryTypeName",
																		"src": "1172:4:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"visibility": "internal"
																},
																null
															],
															"id": 520,
															"initialValue": {
																"arguments": [
																	{
																		"id": 518,
																		"name": "_data",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 487,
																		"src": "1210:5:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"expression": {
																		"id": 516,
																		"name": "_logic",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 485,
																		"src": "1190:6:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"id": 517,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "delegatecall",
																	"nodeType": "MemberAccess",
																	"src": "1190:19:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																		"typeString": "function (bytes memory) returns (bool,bytes memory)"
																	}
																},
																"id": 519,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1190:26:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
																	"typeString": "tuple(bool,bytes memory)"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "1171:45:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"id": 522,
																		"name": "success",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 515,
																		"src": "1232:7:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	],
																	"id": 521,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		-18,
																		-18
																	],
																	"referencedDeclaration": -18,
																	"src": "1224:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
																		"typeString": "function (bool) pure"
																	}
																},
																"id": 523,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1224:16:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 524,
															"nodeType": "ExpressionStatement",
															"src": "1224:16:6"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 483,
										"nodeType": "StructuredDocumentation",
										"src": "418:519:6",
										"text": " @dev Contract constructor.\n @param _logic Address of the initial implementation.\n @param _data Data to send as msg.data to the implementation to initialize the proxied contract.\n It should include the signature and the parameters of the function to be called, as described in\n https://solidity.readthedocs.io/en/v0.4.24/abi-spec.html#function-selector-and-argument-encoding.\n This parameter is optional, if no data is given the initialization call to proxied contract will be skipped."
									},
									"id": 528,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 488,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 485,
												"mutability": "mutable",
												"name": "_logic",
												"nodeType": "VariableDeclaration",
												"scope": 528,
												"src": "952:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 484,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "952:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 487,
												"mutability": "mutable",
												"name": "_data",
												"nodeType": "VariableDeclaration",
												"scope": 528,
												"src": "968:18:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 486,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "968:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "951:36:6"
									},
									"returnParameters": {
										"id": 489,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1003:0:6"
									},
									"scope": 529,
									"src": "940:311:6",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 530,
							"src": "358:895:6"
						}
					],
					"src": "37:1217:6"
				},
				"id": 6
			},
			"contracts/Omnidex-incentives/utils/InitializableAdminUpgradeabilityProxy.sol.sol": {
				"ast": {
					"absolutePath": "contracts/Omnidex-incentives/utils/InitializableAdminUpgradeabilityProxy.sol.sol",
					"exportedSymbols": {
						"Address": [
							63
						],
						"BaseAdminUpgradeabilityProxy": [
							233
						],
						"BaseUpgradeabilityProxy": [
							298
						],
						"InitializableAdminUpgradeabilityProxy": [
							369
						],
						"InitializableUpgradeabilityProxy": [
							432
						],
						"Proxy": [
							476
						],
						"UpgradeabilityProxy": [
							529
						]
					},
					"id": 532,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"absolutePath": "@aave/aave-stake/contracts/lib/InitializableAdminUpgradeabilityProxy.sol",
							"file": "@aave/aave-stake/contracts/lib/InitializableAdminUpgradeabilityProxy.sol",
							"id": 531,
							"nodeType": "ImportDirective",
							"scope": 532,
							"sourceUnit": 370,
							"src": "0:82:7",
							"symbolAliases": [],
							"unitAlias": ""
						}
					],
					"src": "0:84:7"
				},
				"id": 7
			}
		}
	}
}