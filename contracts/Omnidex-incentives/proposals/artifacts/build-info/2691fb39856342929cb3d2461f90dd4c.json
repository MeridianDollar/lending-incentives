{
	"id": "2691fb39856342929cb3d2461f90dd4c",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.7.5",
	"solcLongVersion": "0.7.5+commit.eb77ed08",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/Omnidex-incentives/proposals/ProposalIncentivesExecutor.sol": {
				"content": "// SPDX-License-Identifier: AGPL-3.0\r\npragma solidity 0.7.5;\r\npragma abicoder v2;\r\n\r\nimport {IERC20} from '@aave/aave-stake/contracts/interfaces/IERC20.sol';\r\nimport {ILendingPoolAddressesProvider} from '../interfaces/ILendingPoolAddressesProvider.sol';\r\nimport {ILendingPoolConfigurator} from '../interfaces/ILendingPoolConfigurator.sol';\r\nimport {IOmnidexIncentivesController} from '../interfaces/IOmnidexIncentivesController.sol';\r\n// import {IOmnidexEcosystemReserveController} from '../interfaces/IOmnidexEcosystemReserveController.sol';\r\nimport {IProposalIncentivesExecutor} from '../interfaces/IProposalIncentivesExecutor.sol';\r\nimport {DistributionTypes} from '../lib/DistributionTypes.sol';\r\nimport {DataTypes} from '../utils/DataTypes.sol';\r\nimport {ILendingPoolData} from '../interfaces/ILendingPoolData.sol';\r\nimport {IOTokenDetailed} from '../interfaces/IOTokenDetailed.sol';\r\nimport {PercentageMath} from '../utils/PercentageMath.sol';\r\nimport {SafeMath} from '../lib/SafeMath.sol';\r\n\r\ncontract ProposalIncentivesExecutor is IProposalIncentivesExecutor {\r\n  using SafeMath for uint256;\r\n  using PercentageMath for uint256;\r\n\r\n  // address constant TELOS_TOKEN = 0x6db3ebA817A5B61c63bdDbA0eE89D2510931edbe; //Configured for rando token\r\n  address constant POOL_CONFIGURATOR = 0x2F75fEDA7423D8B85988d9545428d00f3213CF00; //Config for non production Lending pools \r\n  address constant ADDRESSES_PROVIDER = 0x64968B59Dd39128C287D76BE50015161d10C08C2; // Lending pool address provider\r\n  address constant LENDING_POOL = 0xA9Ae6E3207bdCCcB8f081EE0b4D0D2b4a79EA984;       // Lending pool\r\n // address constant ECO_RESERVE_ADDRESS = 0x2e3B231382c70e2D0aECbA61eD84d870E8333143;  \r\n  address constant INCENTIVES_CONTROLLER_PROXY_ADDRESS = 0x8761e889ad797BdE3bb2b6561982fD1cA4118872;  // InitializableImmutableAdminUpgradeabilityProxy\r\n  address constant INCENTIVES_CONTROLLER_IMPL_ADDRESS = 0x554928b31c4eF45862195B0233A3D689b08552A4; // pullRewardsIncentivesController\r\n\r\n  uint256 constant DISTRIBUTION_DURATION = 7776000; // 60 days\r\n  uint256 constant DISTRIBUTION_AMOUNT = 198000000000000000000000; // 198000 TLOS during 60 days\r\n\r\n  function execute(\r\n    address[6] memory oTokenImplementations,\r\n    address[6] memory variableDebtImplementations\r\n  ) external override {\r\n    uint256 tokensCounter;\r\n\r\n    address[] memory assets = new address[](12);\r\n\r\n    // Reserves Order: DAI/GUSD/USDC/USDT/WBTC/WETH\r\n    address payable[6] memory reserves =\r\n      [\r\n        0x6B175474E89094C44Da98b954EedeAC495271d0F,\r\n        0x056Fd409E1d7A124BD7017459dFEa2F387b6d5Cd,\r\n        0xA0b86991c6218b36c1d19D4a2e9Eb0cE3606eB48,\r\n        0xdAC17F958D2ee523a2206206994597C13D831ec7,\r\n        0x2260FAC5E5542a773Aa44fBCfeDf7C193bc2C599,\r\n        0xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2\r\n      ];\r\n\r\n    uint256[] memory emissions = new uint256[](12);\r\n\r\n    emissions[0] = 1706018518518520; //aDAI\r\n    emissions[1] = 1706018518518520; //vDebtDAI\r\n    emissions[2] = 92939814814815; //aGUSD\r\n    emissions[3] = 92939814814815; //vDebtGUSD\r\n    emissions[4] = 5291203703703700; //aUSDC\r\n    emissions[5] = 5291203703703700; //vDebtUSDC\r\n    emissions[6] = 3293634259259260; //aUSDT\r\n    emissions[7] = 3293634259259260; //vDebtUSDT\r\n    emissions[8] = 1995659722222220; //aWBTC\r\n    emissions[9] = 105034722222222; //vDebtWBTC\r\n    emissions[10] = 2464942129629630; //aETH\r\n    emissions[11] = 129733796296296; //vDebtWETH\r\n\r\n    ILendingPoolConfigurator poolConfigurator = ILendingPoolConfigurator(POOL_CONFIGURATOR);\r\n    IOmnidexIncentivesController incentivesController =\r\n      IOmnidexIncentivesController(INCENTIVES_CONTROLLER_PROXY_ADDRESS);\r\n //   IOmnidexEcosystemReserveController ecosystemReserveController =\r\n //     IOmnidexEcosystemReserveController(ECO_RESERVE_ADDRESS);\r\n\r\n    ILendingPoolAddressesProvider provider = ILendingPoolAddressesProvider(ADDRESSES_PROVIDER);\r\n\r\n    //adding the incentives controller proxy to the addresses provider\r\n    provider.setAddress(keccak256('INCENTIVES_CONTROLLER'), INCENTIVES_CONTROLLER_PROXY_ADDRESS);\r\n\r\n    //updating the implementation of the incentives controller proxy\r\n    provider.setAddressAsProxy(keccak256('INCENTIVES_CONTROLLER'), INCENTIVES_CONTROLLER_IMPL_ADDRESS);\r\n\r\n    require(\r\n      oTokenImplementations.length == variableDebtImplementations.length &&\r\n        oTokenImplementations.length == reserves.length,\r\n      'ARRAY_LENGTH_MISMATCH'\r\n    );\r\n\r\n    // Update each reserve OToken implementation, Debt implementation, and prepare incentives configuration input\r\n    for (uint256 x = 0; x < reserves.length; x++) {\r\n      require(\r\n        IOTokenDetailed(oTokenImplementations[x]).UNDERLYING_ASSET_ADDRESS() == reserves[x],\r\n        'OToken underlying does not match'\r\n      );\r\n      require(\r\n        IOTokenDetailed(variableDebtImplementations[x]).UNDERLYING_ASSET_ADDRESS() == reserves[x],\r\n        'Debt Token underlying does not match'\r\n      );\r\n      DataTypes.ReserveData memory reserveData =\r\n        ILendingPoolData(LENDING_POOL).getReserveData(reserves[x]);\r\n\r\n      // Update oToken impl\r\n      poolConfigurator.updateOToken(reserves[x], oTokenImplementations[x]);\r\n\r\n      // Update variable debt impl\r\n      poolConfigurator.updateVariableDebtToken(reserves[x], variableDebtImplementations[x]);\r\n\r\n      assets[tokensCounter++] = reserveData.oTokenAddress;\r\n\r\n      // Configure variable debt token at incentives controller\r\n      assets[tokensCounter++] = reserveData.variableDebtTokenAddress;\r\n\r\n    }\r\n    // Legacy left over from Aave transition from LEND protocol\r\n    // Transfer funds to the Incentives Controller\r\n  //  ecosystemReserveController.transfer(\r\n  //    TELOS_TOKEN,\r\n  //    INCENTIVES_CONTROLLER_PROXY_ADDRESS,\r\n  //    DISTRIBUTION_AMOUNT\r\n  //  );\r\n\r\n    // Enable incentives in oTokens and Variable Debt tokens\r\n    incentivesController.configureAssets(assets, emissions);\r\n\r\n    // Sets the end date for the distribution\r\n    incentivesController.setDistributionEnd(block.timestamp + DISTRIBUTION_DURATION);\r\n  }\r\n}\r\n\r\n\r\n"
			},
			"contracts/Omnidex-incentives/lib/SafeMath.sol": {
				"content": "\r\n// SPDX-License-Identifier: agpl-3.0\r\npragma solidity ^0.7.5;\r\n\r\n/// @title Optimized overflow and underflow safe math operations\r\n/// @notice Contains methods for doing math operations that revert on overflow or underflow for minimal gas cost\r\n/// inspired by uniswap V3\r\nlibrary SafeMath {\r\n    /// @notice Returns x + y, reverts if sum overflows uint256\r\n    /// @param x The augend\r\n    /// @param y The addend\r\n    /// @return z The sum of x and y\r\n    function add(uint256 x, uint256 y) internal pure returns (uint256 z) {\r\n        require((z = x + y) >= x);\r\n    }\r\n\r\n    /// @notice Returns x - y, reverts if underflows\r\n    /// @param x The minuend\r\n    /// @param y The subtrahend\r\n    /// @return z The difference of x and y\r\n    function sub(uint256 x, uint256 y) internal pure returns (uint256 z) {\r\n        require((z = x - y) <= x);\r\n    }\r\n\r\n    /// @notice Returns x * y, reverts if overflows\r\n    /// @param x The multiplicand\r\n    /// @param y The multiplier\r\n    /// @return z The product of x and y\r\n    function mul(uint256 x, uint256 y) internal pure returns (uint256 z) {\r\n        require(x == 0 || (z = x * y) / x == y);\r\n    }\r\n\r\n    function div(uint256 x, uint256 y) internal pure returns(uint256) {\r\n        // no need to check for division by zero - solidity already reverts\r\n        return x / y;\r\n    }\r\n}"
			},
			"contracts/Omnidex-incentives/utils/PercentageMath.sol": {
				"content": "// SPDX-License-Identifier: agpl-3.0\r\npragma solidity 0.7.5;\r\n\r\n/**\r\n * @title PercentageMath library\r\n * @author Omnidex\r\n * @notice Provides functions to perform percentage calculations\r\n * @dev Percentages are defined by default with 2 decimals of precision (100.00). The precision is indicated by PERCENTAGE_FACTOR\r\n * @dev Operations are rounded half up\r\n **/\r\n\r\nlibrary PercentageMath {\r\n  uint256 constant PERCENTAGE_FACTOR = 1e4; //percentage plus two decimals\r\n  uint256 constant HALF_PERCENT = PERCENTAGE_FACTOR / 2;\r\n\r\n  /**\r\n   * @dev Executes a percentage multiplication\r\n   * @param value The value of which the percentage needs to be calculated\r\n   * @param percentage The percentage of the value to be calculated\r\n   * @return The percentage of value\r\n   **/\r\n  function percentMul(uint256 value, uint256 percentage) internal pure returns (uint256) {\r\n    if (value == 0 || percentage == 0) {\r\n      return 0;\r\n    }\r\n\r\n    require(\r\n      value <= (type(uint256).max - HALF_PERCENT) / percentage,\r\n      'MATH_MULTIPLICATION_OVERFLOW'\r\n    );\r\n\r\n    return (value * percentage + HALF_PERCENT) / PERCENTAGE_FACTOR;\r\n  }\r\n\r\n  /**\r\n   * @dev Executes a percentage division\r\n   * @param value The value of which the percentage needs to be calculated\r\n   * @param percentage The percentage of the value to be calculated\r\n   * @return The value divided the percentage\r\n   **/\r\n  function percentDiv(uint256 value, uint256 percentage) internal pure returns (uint256) {\r\n    require(percentage != 0, 'MATH_DIVISION_BY_ZERO');\r\n    uint256 halfPercentage = percentage / 2;\r\n\r\n    require(\r\n      value <= (type(uint256).max - halfPercentage) / PERCENTAGE_FACTOR,\r\n      'MATH_MULTIPLICATION_OVERFLOW'\r\n    );\r\n\r\n    return (value * PERCENTAGE_FACTOR + halfPercentage) / percentage;\r\n  }\r\n}\r\n"
			},
			"contracts/Omnidex-incentives/interfaces/IOTokenDetailed.sol": {
				"content": "// SPDX-License-Identifier: agpl-3.0\r\npragma solidity 0.7.5;\r\n\r\ninterface IOTokenDetailed {\r\n  function UNDERLYING_ASSET_ADDRESS() external view returns (address);\r\n}\r\n"
			},
			"contracts/Omnidex-incentives/interfaces/ILendingPoolData.sol": {
				"content": "// SPDX-License-Identifier: agpl-3.0\r\npragma solidity 0.7.5;\r\npragma abicoder v2;\r\n\r\nimport {DataTypes} from '../utils/DataTypes.sol';\r\n\r\ninterface ILendingPoolData {\r\n  /**\r\n   * @dev Returns the state and configuration of the reserve\r\n   * @param asset The address of the underlying asset of the reserve\r\n   * @return The state of the reserve\r\n   **/\r\n  function getReserveData(address asset) external view returns (DataTypes.ReserveData memory);\r\n}\r\n"
			},
			"contracts/Omnidex-incentives/utils/DataTypes.sol": {
				"content": "// SPDX-License-Identifier: agpl-3.0\r\npragma solidity 0.7.5;\r\n\r\nlibrary DataTypes {\r\n  // refer to the whitepaper, section 1.1 basic concepts for a formal description of these properties.\r\n  struct ReserveData {\r\n    //stores the reserve configuration\r\n    ReserveConfigurationMap configuration;\r\n    //the liquidity index. Expressed in ray\r\n    uint128 liquidityIndex;\r\n    //variable borrow index. Expressed in ray\r\n    uint128 variableBorrowIndex;\r\n    //the current supply rate. Expressed in ray\r\n    uint128 currentLiquidityRate;\r\n    //the current variable borrow rate. Expressed in ray\r\n    uint128 currentVariableBorrowRate;\r\n    //the current stable borrow rate. Expressed in ray\r\n    uint128 currentStableBorrowRate;\r\n    uint40 lastUpdateTimestamp;\r\n    //tokens addresses\r\n    address oTokenAddress;\r\n    address stableDebtTokenAddress;\r\n    address variableDebtTokenAddress;\r\n    //address of the interest rate strategy\r\n    address interestRateStrategyAddress;\r\n    //the id of the reserve. Represents the position in the list of the active reserves\r\n    uint8 id;\r\n  }\r\n\r\n  struct ReserveConfigurationMap {\r\n    //bit 0-15: LTV\r\n    //bit 16-31: Liq. threshold\r\n    //bit 32-47: Liq. bonus\r\n    //bit 48-55: Decimals\r\n    //bit 56: Reserve is active\r\n    //bit 57: reserve is frozen\r\n    //bit 58: borrowing is enabled\r\n    //bit 59: stable rate borrowing enabled\r\n    //bit 60-63: reserved\r\n    //bit 64-79: reserve factor\r\n    uint256 data;\r\n  }\r\n\r\n  struct UserConfigurationMap {\r\n    uint256 data;\r\n  }\r\n\r\n  enum InterestRateMode {NONE, STABLE, VARIABLE}\r\n}\r\n"
			},
			"contracts/Omnidex-incentives/lib/DistributionTypes.sol": {
				"content": "// SPDX-License-Identifier: agpl-3.0\r\npragma solidity 0.7.5;\r\npragma experimental ABIEncoderV2;\r\n\r\nlibrary DistributionTypes {\r\n  struct AssetConfigInput {\r\n    uint104 emissionPerSecond;\r\n    uint256 totalStaked;\r\n    address underlyingAsset;\r\n  }\r\n\r\n  struct UserStakeInput {\r\n    address underlyingAsset;\r\n    uint256 stakedByUser;\r\n    uint256 totalStaked;\r\n  }\r\n}\r\n"
			},
			"contracts/Omnidex-incentives/interfaces/IProposalIncentivesExecutor.sol": {
				"content": "// SPDX-License-Identifier: AGPL-3.0\r\npragma solidity 0.7.5;\r\n\r\ninterface IProposalIncentivesExecutor {\r\n  function execute(\r\n    address[6] memory oTokenImplementations,\r\n    address[6] memory variableDebtImplementation\r\n  ) external;\r\n}\r\n"
			},
			"contracts/Omnidex-incentives/interfaces/IOmnidexIncentivesController.sol": {
				"content": "// SPDX-License-Identifier: agpl-3.0\r\npragma solidity 0.7.5;\r\n\r\npragma experimental ABIEncoderV2;\r\n\r\nimport {IOmnidexDistributionManager} from '../interfaces/IOmnidexDistributionManager.sol';\r\n\r\ninterface IOmnidexIncentivesController is IOmnidexDistributionManager {\r\n  event RewardsAccrued(address indexed user, uint256 amount);\r\n\r\n  event RewardsClaimed(\r\n    address indexed user,\r\n    address indexed to,\r\n    address indexed claimer,\r\n    uint256 amount\r\n  );\r\n\r\n  event ClaimerSet(address indexed user, address indexed claimer);\r\n\r\n  /**\r\n   * @dev Whitelists an address to claim the rewards on behalf of another address\r\n   * @param user The address of the user\r\n   * @param claimer The address of the claimer\r\n   */\r\n  function setClaimer(address user, address claimer) external;\r\n\r\n  /**\r\n   * @dev Returns the whitelisted claimer for a certain address (0x0 if not set)\r\n   * @param user The address of the user\r\n   * @return The claimer address\r\n   */\r\n  function getClaimer(address user) external view returns (address);\r\n\r\n  /**\r\n   * @dev Configure assets for a certain rewards emission\r\n   * @param assets The assets to incentivize\r\n   * @param emissionsPerSecond The emission for each asset\r\n   */\r\n  function configureAssets(address[] calldata assets, uint256[] calldata emissionsPerSecond)\r\n    external;\r\n\r\n  /**\r\n   * @dev Called by the corresponding asset on any update that affects the rewards distribution\r\n   * @param asset The address of the user\r\n   * @param userBalance The balance of the user of the asset in the lending pool\r\n   * @param totalSupply The total supply of the asset in the lending pool\r\n   **/\r\n  function handleAction(\r\n    address asset,\r\n    uint256 userBalance,\r\n    uint256 totalSupply\r\n  ) external;\r\n\r\n  /**\r\n   * @dev Returns the total of rewards of an user, already accrued + not yet accrued\r\n   * @param user The address of the user\r\n   * @return The rewards\r\n   **/\r\n  function getRewardsBalance(address[] calldata assets, address user)\r\n    external\r\n    view\r\n    returns (uint256);\r\n\r\n  /**\r\n   * @dev Claims reward for an user to the desired address, on all the assets of the lending pool, accumulating the pending rewards\r\n   * @param amount Amount of rewards to claim\r\n   * @param to Address that will be receiving the rewards\r\n   * @return Rewards claimed\r\n   **/\r\n  function claimRewards(\r\n    address[] calldata assets,\r\n    uint256 amount,\r\n    address to\r\n  ) external returns (uint256);\r\n\r\n  /**\r\n   * @dev Claims reward for an user on behalf, on all the assets of the lending pool, accumulating the pending rewards. The caller must\r\n   * be whitelisted via \"allowClaimOnBehalf\" function by the RewardsAdmin role manager\r\n   * @param amount Amount of rewards to claim\r\n   * @param user Address to check and claim rewards\r\n   * @param to Address that will be receiving the rewards\r\n   * @return Rewards claimed\r\n   **/\r\n  function claimRewardsOnBehalf(\r\n    address[] calldata assets,\r\n    uint256 amount,\r\n    address user,\r\n    address to\r\n  ) external returns (uint256);\r\n\r\n  /**\r\n   * @dev Claims reward for msg.sender, on all the assets of the lending pool, accumulating the pending rewards\r\n   * @param amount Amount of rewards to claim\r\n   * @return Rewards claimed\r\n   **/\r\n  function claimRewardsToSelf(address[] calldata assets, uint256 amount) external returns (uint256);\r\n\r\n  /**\r\n   * @dev returns the unclaimed rewards of the user\r\n   * @param user the address of the user\r\n   * @return the unclaimed user rewards\r\n   */\r\n  function getUserUnclaimedRewards(address user) external view returns (uint256);\r\n\r\n  /**\r\n   * @dev for backward compatibility with previous implementation of the Incentives controller\r\n   */\r\n  function REWARD_TOKEN() external view returns (address);\r\n}\r\n"
			},
			"contracts/Omnidex-incentives/interfaces/ILendingPoolConfigurator.sol": {
				"content": "// SPDX-License-Identifier: agpl-3.0\r\npragma solidity 0.7.5;\r\n\r\ninterface ILendingPoolConfigurator {\r\n  function updateOToken(address reserve, address implementation) external;\r\n\r\n  function updateVariableDebtToken(address reserve, address implementation) external;\r\n}\r\n"
			},
			"contracts/Omnidex-incentives/interfaces/ILendingPoolAddressesProvider.sol": {
				"content": "// SPDX-License-Identifier: agpl-3.0\r\npragma solidity 0.7.5;\r\n\r\n/**\r\n * @title LendingPoolAddressesProvider contract\r\n * @dev Main registry of addresses part of or connected to the protocol, including permissioned roles\r\n * - Acting also as factory of proxies and admin of those, so with right to change its implementations\r\n * - Owned by the Omnidex Governance\r\n * @author Omnidex\r\n **/\r\ninterface ILendingPoolAddressesProvider {\r\n  event MarketIdSet(string newMarketId);\r\n  event LendingPoolUpdated(address indexed newAddress);\r\n  event ConfigurationAdminUpdated(address indexed newAddress);\r\n  event EmergencyAdminUpdated(address indexed newAddress);\r\n  event LendingPoolConfiguratorUpdated(address indexed newAddress);\r\n  event LendingPoolCollateralManagerUpdated(address indexed newAddress);\r\n  event PriceOracleUpdated(address indexed newAddress);\r\n  event LendingRateOracleUpdated(address indexed newAddress);\r\n  event ProxyCreated(bytes32 id, address indexed newAddress);\r\n  event AddressSet(bytes32 id, address indexed newAddress, bool hasProxy);\r\n\r\n  function getMarketId() external view returns (string memory);\r\n\r\n  function setMarketId(string calldata marketId) external;\r\n\r\n  function setAddress(bytes32 id, address newAddress) external;\r\n\r\n  function setAddressAsProxy(bytes32 id, address impl) external;\r\n\r\n  function getAddress(bytes32 id) external view returns (address);\r\n\r\n  function getLendingPool() external view returns (address);\r\n\r\n  function setLendingPoolImpl(address pool) external;\r\n\r\n  function getLendingPoolConfigurator() external view returns (address);\r\n\r\n  function setLendingPoolConfiguratorImpl(address configurator) external;\r\n\r\n  function getLendingPoolCollateralManager() external view returns (address);\r\n\r\n  function setLendingPoolCollateralManager(address manager) external;\r\n\r\n  function getPoolAdmin() external view returns (address);\r\n\r\n  function setPoolAdmin(address admin) external;\r\n\r\n  function getEmergencyAdmin() external view returns (address);\r\n\r\n  function setEmergencyAdmin(address admin) external;\r\n\r\n  function getPriceOracle() external view returns (address);\r\n\r\n  function setPriceOracle(address priceOracle) external;\r\n\r\n  function getLendingRateOracle() external view returns (address);\r\n\r\n  function setLendingRateOracle(address lendingRateOracle) external;\r\n}\r\n"
			},
			"@aave/aave-stake/contracts/interfaces/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity 0.7.5;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n * From https://github.com/OpenZeppelin/openzeppelin-contracts\n */\ninterface IERC20 {\n  /**\n   * @dev Returns the amount of tokens in existence.\n   */\n  function totalSupply() external view returns (uint256);\n\n  /**\n   * @dev Returns the amount of tokens owned by `account`.\n   */\n  function balanceOf(address account) external view returns (uint256);\n\n  /**\n   * @dev Moves `amount` tokens from the caller's account to `recipient`.\n   *\n   * Returns a boolean value indicating whether the operation succeeded.\n   *\n   * Emits a {Transfer} event.\n   */\n  function transfer(address recipient, uint256 amount) external returns (bool);\n\n  /**\n   * @dev Returns the remaining number of tokens that `spender` will be\n   * allowed to spend on behalf of `owner` through {transferFrom}. This is\n   * zero by default.\n   *\n   * This value changes when {approve} or {transferFrom} are called.\n   */\n  function allowance(address owner, address spender) external view returns (uint256);\n\n  /**\n   * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n   *\n   * Returns a boolean value indicating whether the operation succeeded.\n   *\n   * IMPORTANT: Beware that changing an allowance with this method brings the risk\n   * that someone may use both the old and the new allowance by unfortunate\n   * transaction ordering. One possible solution to mitigate this race\n   * condition is to first reduce the spender's allowance to 0 and set the\n   * desired value afterwards:\n   * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n   *\n   * Emits an {Approval} event.\n   */\n  function approve(address spender, uint256 amount) external returns (bool);\n\n  /**\n   * @dev Moves `amount` tokens from `sender` to `recipient` using the\n   * allowance mechanism. `amount` is then deducted from the caller's\n   * allowance.\n   *\n   * Returns a boolean value indicating whether the operation succeeded.\n   *\n   * Emits a {Transfer} event.\n   */\n  function transferFrom(\n    address sender,\n    address recipient,\n    uint256 amount\n  ) external returns (bool);\n\n  /**\n   * @dev Emitted when `value` tokens are moved from one account (`from`) to\n   * another (`to`).\n   *\n   * Note that `value` may be zero.\n   */\n  event Transfer(address indexed from, address indexed to, uint256 value);\n\n  /**\n   * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n   * a call to {approve}. `value` is the new allowance.\n   */\n  event Approval(address indexed owner, address indexed spender, uint256 value);\n}\n"
			},
			"contracts/Omnidex-incentives/interfaces/IOmnidexDistributionManager.sol": {
				"content": "// SPDX-License-Identifier: agpl-3.0\r\npragma solidity 0.7.5;\r\npragma experimental ABIEncoderV2;\r\n\r\nimport {DistributionTypes} from '../lib/DistributionTypes.sol';\r\n\r\ninterface IOmnidexDistributionManager {\r\n  \r\n  event AssetConfigUpdated(address indexed asset, uint256 emission);\r\n  event AssetIndexUpdated(address indexed asset, uint256 index);\r\n  event UserIndexUpdated(address indexed user, address indexed asset, uint256 index);\r\n  event DistributionEndUpdated(uint256 newDistributionEnd);\r\n\r\n  /**\r\n  * @dev Sets the end date for the distribution\r\n  * @param distributionEnd The end date timestamp\r\n  **/\r\n  function setDistributionEnd(uint256 distributionEnd) external;\r\n\r\n  /**\r\n  * @dev Gets the end date for the distribution\r\n  * @return The end of the distribution\r\n  **/\r\n  function getDistributionEnd() external view returns (uint256);\r\n\r\n  /**\r\n  * @dev for backwards compatibility with the previous DistributionManager used\r\n  * @return The end of the distribution\r\n  **/\r\n  function DISTRIBUTION_END() external view returns(uint256);\r\n\r\n   /**\r\n   * @dev Returns the data of an user on a distribution\r\n   * @param user Address of the user\r\n   * @param asset The address of the reference asset of the distribution\r\n   * @return The new index\r\n   **/\r\n   function getUserAssetData(address user, address asset) external view returns (uint256);\r\n\r\n   /**\r\n   * @dev Returns the configuration of the distribution for a certain asset\r\n   * @param asset The address of the reference asset of the distribution\r\n   * @return The asset index, the emission per second and the last updated timestamp\r\n   **/\r\n   function getAssetData(address asset) external view returns (uint256, uint256, uint256);\r\n}\r\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"@aave/aave-stake/contracts/interfaces/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 standard as defined in the EIP. From https://github.com/OpenZeppelin/openzeppelin-contracts",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the amount of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the amount of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves `amount` tokens from the caller's account to `recipient`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves `amount` tokens from `sender` to `recipient` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.7.5+commit.eb77ed08\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP. From https://github.com/OpenZeppelin/openzeppelin-contracts\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `recipient`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `sender` to `recipient` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@aave/aave-stake/contracts/interfaces/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@aave/aave-stake/contracts/interfaces/IERC20.sol\":{\"keccak256\":\"0x150506e2e40dc3cea841fe0ade6021b9b0d4e09f7616d312bc7c1300a2d7a94f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d3dbf854f310f20a48cd727e1680067f4d911a4c6d220886935736297a0f89cb\",\"dweb:/ipfs/QmU8xN2AYrURFgmB4hLFLamc7aJe6VD5qkUEcfdrKPcz9C\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/Omnidex-incentives/interfaces/ILendingPoolAddressesProvider.sol": {
				"ILendingPoolAddressesProvider": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "bytes32",
									"name": "id",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newAddress",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "hasProxy",
									"type": "bool"
								}
							],
							"name": "AddressSet",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "newAddress",
									"type": "address"
								}
							],
							"name": "ConfigurationAdminUpdated",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "newAddress",
									"type": "address"
								}
							],
							"name": "EmergencyAdminUpdated",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "newAddress",
									"type": "address"
								}
							],
							"name": "LendingPoolCollateralManagerUpdated",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "newAddress",
									"type": "address"
								}
							],
							"name": "LendingPoolConfiguratorUpdated",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "newAddress",
									"type": "address"
								}
							],
							"name": "LendingPoolUpdated",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "newAddress",
									"type": "address"
								}
							],
							"name": "LendingRateOracleUpdated",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "string",
									"name": "newMarketId",
									"type": "string"
								}
							],
							"name": "MarketIdSet",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "newAddress",
									"type": "address"
								}
							],
							"name": "PriceOracleUpdated",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "bytes32",
									"name": "id",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newAddress",
									"type": "address"
								}
							],
							"name": "ProxyCreated",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "id",
									"type": "bytes32"
								}
							],
							"name": "getAddress",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getEmergencyAdmin",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getLendingPool",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getLendingPoolCollateralManager",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getLendingPoolConfigurator",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getLendingRateOracle",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getMarketId",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getPoolAdmin",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getPriceOracle",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "id",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "newAddress",
									"type": "address"
								}
							],
							"name": "setAddress",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "id",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "impl",
									"type": "address"
								}
							],
							"name": "setAddressAsProxy",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "admin",
									"type": "address"
								}
							],
							"name": "setEmergencyAdmin",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "manager",
									"type": "address"
								}
							],
							"name": "setLendingPoolCollateralManager",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "configurator",
									"type": "address"
								}
							],
							"name": "setLendingPoolConfiguratorImpl",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "pool",
									"type": "address"
								}
							],
							"name": "setLendingPoolImpl",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "lendingRateOracle",
									"type": "address"
								}
							],
							"name": "setLendingRateOracle",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "marketId",
									"type": "string"
								}
							],
							"name": "setMarketId",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "admin",
									"type": "address"
								}
							],
							"name": "setPoolAdmin",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "priceOracle",
									"type": "address"
								}
							],
							"name": "setPriceOracle",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"author": "Omnidex*",
						"details": "Main registry of addresses part of or connected to the protocol, including permissioned roles - Acting also as factory of proxies and admin of those, so with right to change its implementations - Owned by the Omnidex Governance",
						"kind": "dev",
						"methods": {},
						"title": "LendingPoolAddressesProvider contract",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"getAddress(bytes32)": "21f8a721",
							"getEmergencyAdmin()": "ddcaa9ea",
							"getLendingPool()": "0261bf8b",
							"getLendingPoolCollateralManager()": "712d9171",
							"getLendingPoolConfigurator()": "85c858b1",
							"getLendingRateOracle()": "3618abba",
							"getMarketId()": "568ef470",
							"getPoolAdmin()": "aecda378",
							"getPriceOracle()": "fca513a8",
							"setAddress(bytes32,address)": "ca446dd9",
							"setAddressAsProxy(bytes32,address)": "5dcc528c",
							"setEmergencyAdmin(address)": "35da3394",
							"setLendingPoolCollateralManager(address)": "398e5553",
							"setLendingPoolConfiguratorImpl(address)": "c12542df",
							"setLendingPoolImpl(address)": "5aef021f",
							"setLendingRateOracle(address)": "820d1274",
							"setMarketId(string)": "f67b1847",
							"setPoolAdmin(address)": "283d62ad",
							"setPriceOracle(address)": "530e784f"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.7.5+commit.eb77ed08\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"id\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"hasProxy\",\"type\":\"bool\"}],\"name\":\"AddressSet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newAddress\",\"type\":\"address\"}],\"name\":\"ConfigurationAdminUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newAddress\",\"type\":\"address\"}],\"name\":\"EmergencyAdminUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newAddress\",\"type\":\"address\"}],\"name\":\"LendingPoolCollateralManagerUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newAddress\",\"type\":\"address\"}],\"name\":\"LendingPoolConfiguratorUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newAddress\",\"type\":\"address\"}],\"name\":\"LendingPoolUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newAddress\",\"type\":\"address\"}],\"name\":\"LendingRateOracleUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"newMarketId\",\"type\":\"string\"}],\"name\":\"MarketIdSet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newAddress\",\"type\":\"address\"}],\"name\":\"PriceOracleUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"id\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newAddress\",\"type\":\"address\"}],\"name\":\"ProxyCreated\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"id\",\"type\":\"bytes32\"}],\"name\":\"getAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getEmergencyAdmin\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getLendingPool\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getLendingPoolCollateralManager\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getLendingPoolConfigurator\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getLendingRateOracle\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getMarketId\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getPoolAdmin\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getPriceOracle\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"id\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"newAddress\",\"type\":\"address\"}],\"name\":\"setAddress\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"id\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"impl\",\"type\":\"address\"}],\"name\":\"setAddressAsProxy\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"admin\",\"type\":\"address\"}],\"name\":\"setEmergencyAdmin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"manager\",\"type\":\"address\"}],\"name\":\"setLendingPoolCollateralManager\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"configurator\",\"type\":\"address\"}],\"name\":\"setLendingPoolConfiguratorImpl\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"}],\"name\":\"setLendingPoolImpl\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"lendingRateOracle\",\"type\":\"address\"}],\"name\":\"setLendingRateOracle\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"marketId\",\"type\":\"string\"}],\"name\":\"setMarketId\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"admin\",\"type\":\"address\"}],\"name\":\"setPoolAdmin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"priceOracle\",\"type\":\"address\"}],\"name\":\"setPriceOracle\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"Omnidex*\",\"details\":\"Main registry of addresses part of or connected to the protocol, including permissioned roles - Acting also as factory of proxies and admin of those, so with right to change its implementations - Owned by the Omnidex Governance\",\"kind\":\"dev\",\"methods\":{},\"title\":\"LendingPoolAddressesProvider contract\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Omnidex-incentives/interfaces/ILendingPoolAddressesProvider.sol\":\"ILendingPoolAddressesProvider\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/Omnidex-incentives/interfaces/ILendingPoolAddressesProvider.sol\":{\"keccak256\":\"0x805ab39fec661fe4a7b100f657bd0be1599a2bec05da3a0ab03f0d6eafe47c24\",\"license\":\"agpl-3.0\",\"urls\":[\"bzz-raw://8cb6a3db794531cd5f7bb0408b6f9b2358ab8e526878a1442e23d91b5314113d\",\"dweb:/ipfs/QmP3AngoDhjztkQQ1FsiCC4w4pj5H8RTy4rYkLfMSwL1FK\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/Omnidex-incentives/interfaces/ILendingPoolConfigurator.sol": {
				"ILendingPoolConfigurator": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "reserve",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "implementation",
									"type": "address"
								}
							],
							"name": "updateOToken",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "reserve",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "implementation",
									"type": "address"
								}
							],
							"name": "updateVariableDebtToken",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"updateOToken(address,address)": "12e3ae16",
							"updateVariableDebtToken(address,address)": "4d978258"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.7.5+commit.eb77ed08\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"reserve\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"updateOToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"reserve\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"updateVariableDebtToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Omnidex-incentives/interfaces/ILendingPoolConfigurator.sol\":\"ILendingPoolConfigurator\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/Omnidex-incentives/interfaces/ILendingPoolConfigurator.sol\":{\"keccak256\":\"0x9f93cab78339ab46e06e8769a8b703153d940713c036a0fa762942de98fa8776\",\"license\":\"agpl-3.0\",\"urls\":[\"bzz-raw://6798937511de2ec730ff830ff88b61c9758f7436d119b5735b550d4185700311\",\"dweb:/ipfs/QmP2LPwb2iwSSZUdSYbnASACNVUxh9XrkHgzPPP8uwEBJL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/Omnidex-incentives/interfaces/ILendingPoolData.sol": {
				"ILendingPoolData": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "asset",
									"type": "address"
								}
							],
							"name": "getReserveData",
							"outputs": [
								{
									"components": [
										{
											"components": [
												{
													"internalType": "uint256",
													"name": "data",
													"type": "uint256"
												}
											],
											"internalType": "struct DataTypes.ReserveConfigurationMap",
											"name": "configuration",
											"type": "tuple"
										},
										{
											"internalType": "uint128",
											"name": "liquidityIndex",
											"type": "uint128"
										},
										{
											"internalType": "uint128",
											"name": "variableBorrowIndex",
											"type": "uint128"
										},
										{
											"internalType": "uint128",
											"name": "currentLiquidityRate",
											"type": "uint128"
										},
										{
											"internalType": "uint128",
											"name": "currentVariableBorrowRate",
											"type": "uint128"
										},
										{
											"internalType": "uint128",
											"name": "currentStableBorrowRate",
											"type": "uint128"
										},
										{
											"internalType": "uint40",
											"name": "lastUpdateTimestamp",
											"type": "uint40"
										},
										{
											"internalType": "address",
											"name": "oTokenAddress",
											"type": "address"
										},
										{
											"internalType": "address",
											"name": "stableDebtTokenAddress",
											"type": "address"
										},
										{
											"internalType": "address",
											"name": "variableDebtTokenAddress",
											"type": "address"
										},
										{
											"internalType": "address",
											"name": "interestRateStrategyAddress",
											"type": "address"
										},
										{
											"internalType": "uint8",
											"name": "id",
											"type": "uint8"
										}
									],
									"internalType": "struct DataTypes.ReserveData",
									"name": "",
									"type": "tuple"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"getReserveData(address)": {
								"details": "Returns the state and configuration of the reserve",
								"params": {
									"asset": "The address of the underlying asset of the reserve"
								},
								"returns": {
									"_0": "The state of the reserve*"
								}
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"getReserveData(address)": "35ea6a75"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.7.5+commit.eb77ed08\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"}],\"name\":\"getReserveData\",\"outputs\":[{\"components\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"data\",\"type\":\"uint256\"}],\"internalType\":\"struct DataTypes.ReserveConfigurationMap\",\"name\":\"configuration\",\"type\":\"tuple\"},{\"internalType\":\"uint128\",\"name\":\"liquidityIndex\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"variableBorrowIndex\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"currentLiquidityRate\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"currentVariableBorrowRate\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"currentStableBorrowRate\",\"type\":\"uint128\"},{\"internalType\":\"uint40\",\"name\":\"lastUpdateTimestamp\",\"type\":\"uint40\"},{\"internalType\":\"address\",\"name\":\"oTokenAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"stableDebtTokenAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"variableDebtTokenAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"interestRateStrategyAddress\",\"type\":\"address\"},{\"internalType\":\"uint8\",\"name\":\"id\",\"type\":\"uint8\"}],\"internalType\":\"struct DataTypes.ReserveData\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"getReserveData(address)\":{\"details\":\"Returns the state and configuration of the reserve\",\"params\":{\"asset\":\"The address of the underlying asset of the reserve\"},\"returns\":{\"_0\":\"The state of the reserve*\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Omnidex-incentives/interfaces/ILendingPoolData.sol\":\"ILendingPoolData\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/Omnidex-incentives/interfaces/ILendingPoolData.sol\":{\"keccak256\":\"0xa2dd5f64bc25dff88e130e0f99ebe24c743f308849c8fa487bad26eef278ef6c\",\"license\":\"agpl-3.0\",\"urls\":[\"bzz-raw://20008df765afa056c3b54e00e1321791a7a2c6d2dbf8d21e146afdbe73f8cfd1\",\"dweb:/ipfs/QmXtN47mpdSYQb64YCQDkX8r5QFg5N9Mq5SMZ828fJPDhu\"]},\"contracts/Omnidex-incentives/utils/DataTypes.sol\":{\"keccak256\":\"0xa64c1b776b13f3f6cc88fa0742ce15073026bb526be7f324dddbd2b221e67129\",\"license\":\"agpl-3.0\",\"urls\":[\"bzz-raw://f194c291658a18f69b8df0b1b2ddd08bbb621b821171700bf55f7586e65a6275\",\"dweb:/ipfs/QmddN7PHqyFk8ZCveEqqoUfAsQ9sToQYna56RqKRDAFAs2\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/Omnidex-incentives/interfaces/IOTokenDetailed.sol": {
				"IOTokenDetailed": {
					"abi": [
						{
							"inputs": [],
							"name": "UNDERLYING_ASSET_ADDRESS",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"UNDERLYING_ASSET_ADDRESS()": "b16a19de"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.7.5+commit.eb77ed08\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"UNDERLYING_ASSET_ADDRESS\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Omnidex-incentives/interfaces/IOTokenDetailed.sol\":\"IOTokenDetailed\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/Omnidex-incentives/interfaces/IOTokenDetailed.sol\":{\"keccak256\":\"0x67a143830d137853f16cff5a41f1232c008c4f22764f32ade20f7734654e29ca\",\"license\":\"agpl-3.0\",\"urls\":[\"bzz-raw://ea21a986420604e428b4c0ba188ca978b62f69ef1b75c336ede4074cb68f25d8\",\"dweb:/ipfs/QmY6wt5U37obDdU9Dq1sGPzDbBjZzY7Ju2WNs8KbQmzgLN\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/Omnidex-incentives/interfaces/IOmnidexDistributionManager.sol": {
				"IOmnidexDistributionManager": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "asset",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "emission",
									"type": "uint256"
								}
							],
							"name": "AssetConfigUpdated",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "asset",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "index",
									"type": "uint256"
								}
							],
							"name": "AssetIndexUpdated",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "newDistributionEnd",
									"type": "uint256"
								}
							],
							"name": "DistributionEndUpdated",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "asset",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "index",
									"type": "uint256"
								}
							],
							"name": "UserIndexUpdated",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "DISTRIBUTION_END",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "asset",
									"type": "address"
								}
							],
							"name": "getAssetData",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getDistributionEnd",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "asset",
									"type": "address"
								}
							],
							"name": "getUserAssetData",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "distributionEnd",
									"type": "uint256"
								}
							],
							"name": "setDistributionEnd",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"DISTRIBUTION_END()": {
								"details": "for backwards compatibility with the previous DistributionManager used",
								"returns": {
									"_0": "The end of the distribution*"
								}
							},
							"getAssetData(address)": {
								"details": "Returns the configuration of the distribution for a certain asset",
								"params": {
									"asset": "The address of the reference asset of the distribution"
								},
								"returns": {
									"_0": "The asset index, the emission per second and the last updated timestamp*"
								}
							},
							"getDistributionEnd()": {
								"details": "Gets the end date for the distribution",
								"returns": {
									"_0": "The end of the distribution*"
								}
							},
							"getUserAssetData(address,address)": {
								"details": "Returns the data of an user on a distribution",
								"params": {
									"asset": "The address of the reference asset of the distribution",
									"user": "Address of the user"
								},
								"returns": {
									"_0": "The new index*"
								}
							},
							"setDistributionEnd(uint256)": {
								"details": "Sets the end date for the distribution",
								"params": {
									"distributionEnd": "The end date timestamp*"
								}
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"DISTRIBUTION_END()": "919cd40f",
							"getAssetData(address)": "1652e7b7",
							"getDistributionEnd()": "cc69afec",
							"getUserAssetData(address,address)": "3373ee4c",
							"setDistributionEnd(uint256)": "39ccbdd3"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.7.5+commit.eb77ed08\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"emission\",\"type\":\"uint256\"}],\"name\":\"AssetConfigUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"AssetIndexUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newDistributionEnd\",\"type\":\"uint256\"}],\"name\":\"DistributionEndUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"UserIndexUpdated\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DISTRIBUTION_END\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"}],\"name\":\"getAssetData\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getDistributionEnd\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"}],\"name\":\"getUserAssetData\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"distributionEnd\",\"type\":\"uint256\"}],\"name\":\"setDistributionEnd\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"DISTRIBUTION_END()\":{\"details\":\"for backwards compatibility with the previous DistributionManager used\",\"returns\":{\"_0\":\"The end of the distribution*\"}},\"getAssetData(address)\":{\"details\":\"Returns the configuration of the distribution for a certain asset\",\"params\":{\"asset\":\"The address of the reference asset of the distribution\"},\"returns\":{\"_0\":\"The asset index, the emission per second and the last updated timestamp*\"}},\"getDistributionEnd()\":{\"details\":\"Gets the end date for the distribution\",\"returns\":{\"_0\":\"The end of the distribution*\"}},\"getUserAssetData(address,address)\":{\"details\":\"Returns the data of an user on a distribution\",\"params\":{\"asset\":\"The address of the reference asset of the distribution\",\"user\":\"Address of the user\"},\"returns\":{\"_0\":\"The new index*\"}},\"setDistributionEnd(uint256)\":{\"details\":\"Sets the end date for the distribution\",\"params\":{\"distributionEnd\":\"The end date timestamp*\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Omnidex-incentives/interfaces/IOmnidexDistributionManager.sol\":\"IOmnidexDistributionManager\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/Omnidex-incentives/interfaces/IOmnidexDistributionManager.sol\":{\"keccak256\":\"0xabf5e1d31a3567f017adf41a4384f0c7a6fce4e81441a7b42fb565f92256a87d\",\"license\":\"agpl-3.0\",\"urls\":[\"bzz-raw://a2aab2cd0efc27da9ced088fcb5534b62c4ebd436688778af86949e706d22fef\",\"dweb:/ipfs/QmPAQiLYLB7QXMKaHjSwWKaK8mN8pgBRteJUqg5ptKebZE\"]},\"contracts/Omnidex-incentives/lib/DistributionTypes.sol\":{\"keccak256\":\"0xbb24d51b39ff627c1d2dbbaa5063ae7f1d515ec3980cc6ed8f5d171c17ef1d36\",\"license\":\"agpl-3.0\",\"urls\":[\"bzz-raw://30120d3556895da3f517a6ce8954e4419944f9e07b7b4cd3d596df3e8e8103e3\",\"dweb:/ipfs/QmTXPN7Q8ULdJnJVGVTwLbw7Rvy5h17DfabKf8szvprQNb\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/Omnidex-incentives/interfaces/IOmnidexIncentivesController.sol": {
				"IOmnidexIncentivesController": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "asset",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "emission",
									"type": "uint256"
								}
							],
							"name": "AssetConfigUpdated",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "asset",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "index",
									"type": "uint256"
								}
							],
							"name": "AssetIndexUpdated",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "claimer",
									"type": "address"
								}
							],
							"name": "ClaimerSet",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "newDistributionEnd",
									"type": "uint256"
								}
							],
							"name": "DistributionEndUpdated",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "RewardsAccrued",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "claimer",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "RewardsClaimed",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "asset",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "index",
									"type": "uint256"
								}
							],
							"name": "UserIndexUpdated",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "DISTRIBUTION_END",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "REWARD_TOKEN",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address[]",
									"name": "assets",
									"type": "address[]"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								}
							],
							"name": "claimRewards",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address[]",
									"name": "assets",
									"type": "address[]"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								}
							],
							"name": "claimRewardsOnBehalf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address[]",
									"name": "assets",
									"type": "address[]"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "claimRewardsToSelf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address[]",
									"name": "assets",
									"type": "address[]"
								},
								{
									"internalType": "uint256[]",
									"name": "emissionsPerSecond",
									"type": "uint256[]"
								}
							],
							"name": "configureAssets",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "asset",
									"type": "address"
								}
							],
							"name": "getAssetData",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "user",
									"type": "address"
								}
							],
							"name": "getClaimer",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getDistributionEnd",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address[]",
									"name": "assets",
									"type": "address[]"
								},
								{
									"internalType": "address",
									"name": "user",
									"type": "address"
								}
							],
							"name": "getRewardsBalance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "asset",
									"type": "address"
								}
							],
							"name": "getUserAssetData",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "user",
									"type": "address"
								}
							],
							"name": "getUserUnclaimedRewards",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "asset",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "userBalance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "totalSupply",
									"type": "uint256"
								}
							],
							"name": "handleAction",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "claimer",
									"type": "address"
								}
							],
							"name": "setClaimer",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "distributionEnd",
									"type": "uint256"
								}
							],
							"name": "setDistributionEnd",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"DISTRIBUTION_END()": {
								"details": "for backwards compatibility with the previous DistributionManager used",
								"returns": {
									"_0": "The end of the distribution*"
								}
							},
							"REWARD_TOKEN()": {
								"details": "for backward compatibility with previous implementation of the Incentives controller"
							},
							"claimRewards(address[],uint256,address)": {
								"details": "Claims reward for an user to the desired address, on all the assets of the lending pool, accumulating the pending rewards",
								"params": {
									"amount": "Amount of rewards to claim",
									"to": "Address that will be receiving the rewards"
								},
								"returns": {
									"_0": "Rewards claimed*"
								}
							},
							"claimRewardsOnBehalf(address[],uint256,address,address)": {
								"details": "Claims reward for an user on behalf, on all the assets of the lending pool, accumulating the pending rewards. The caller must be whitelisted via \"allowClaimOnBehalf\" function by the RewardsAdmin role manager",
								"params": {
									"amount": "Amount of rewards to claim",
									"to": "Address that will be receiving the rewards",
									"user": "Address to check and claim rewards"
								},
								"returns": {
									"_0": "Rewards claimed*"
								}
							},
							"claimRewardsToSelf(address[],uint256)": {
								"details": "Claims reward for msg.sender, on all the assets of the lending pool, accumulating the pending rewards",
								"params": {
									"amount": "Amount of rewards to claim"
								},
								"returns": {
									"_0": "Rewards claimed*"
								}
							},
							"configureAssets(address[],uint256[])": {
								"details": "Configure assets for a certain rewards emission",
								"params": {
									"assets": "The assets to incentivize",
									"emissionsPerSecond": "The emission for each asset"
								}
							},
							"getAssetData(address)": {
								"details": "Returns the configuration of the distribution for a certain asset",
								"params": {
									"asset": "The address of the reference asset of the distribution"
								},
								"returns": {
									"_0": "The asset index, the emission per second and the last updated timestamp*"
								}
							},
							"getClaimer(address)": {
								"details": "Returns the whitelisted claimer for a certain address (0x0 if not set)",
								"params": {
									"user": "The address of the user"
								},
								"returns": {
									"_0": "The claimer address"
								}
							},
							"getDistributionEnd()": {
								"details": "Gets the end date for the distribution",
								"returns": {
									"_0": "The end of the distribution*"
								}
							},
							"getRewardsBalance(address[],address)": {
								"details": "Returns the total of rewards of an user, already accrued + not yet accrued",
								"params": {
									"user": "The address of the user"
								},
								"returns": {
									"_0": "The rewards*"
								}
							},
							"getUserAssetData(address,address)": {
								"details": "Returns the data of an user on a distribution",
								"params": {
									"asset": "The address of the reference asset of the distribution",
									"user": "Address of the user"
								},
								"returns": {
									"_0": "The new index*"
								}
							},
							"getUserUnclaimedRewards(address)": {
								"details": "returns the unclaimed rewards of the user",
								"params": {
									"user": "the address of the user"
								},
								"returns": {
									"_0": "the unclaimed user rewards"
								}
							},
							"handleAction(address,uint256,uint256)": {
								"details": "Called by the corresponding asset on any update that affects the rewards distribution",
								"params": {
									"asset": "The address of the user",
									"totalSupply": "The total supply of the asset in the lending pool*",
									"userBalance": "The balance of the user of the asset in the lending pool"
								}
							},
							"setClaimer(address,address)": {
								"details": "Whitelists an address to claim the rewards on behalf of another address",
								"params": {
									"claimer": "The address of the claimer",
									"user": "The address of the user"
								}
							},
							"setDistributionEnd(uint256)": {
								"details": "Sets the end date for the distribution",
								"params": {
									"distributionEnd": "The end date timestamp*"
								}
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"DISTRIBUTION_END()": "919cd40f",
							"REWARD_TOKEN()": "99248ea7",
							"claimRewards(address[],uint256,address)": "3111e7b3",
							"claimRewardsOnBehalf(address[],uint256,address,address)": "6d34b96e",
							"claimRewardsToSelf(address[],uint256)": "41485304",
							"configureAssets(address[],uint256[])": "79f171b2",
							"getAssetData(address)": "1652e7b7",
							"getClaimer(address)": "74d945ec",
							"getDistributionEnd()": "cc69afec",
							"getRewardsBalance(address[],address)": "8b599f26",
							"getUserAssetData(address,address)": "3373ee4c",
							"getUserUnclaimedRewards(address)": "198fa81e",
							"handleAction(address,uint256,uint256)": "31873e2e",
							"setClaimer(address,address)": "f5cf673b",
							"setDistributionEnd(uint256)": "39ccbdd3"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.7.5+commit.eb77ed08\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"emission\",\"type\":\"uint256\"}],\"name\":\"AssetConfigUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"AssetIndexUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"claimer\",\"type\":\"address\"}],\"name\":\"ClaimerSet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newDistributionEnd\",\"type\":\"uint256\"}],\"name\":\"DistributionEndUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"RewardsAccrued\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"claimer\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"RewardsClaimed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"UserIndexUpdated\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DISTRIBUTION_END\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"REWARD_TOKEN\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"assets\",\"type\":\"address[]\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"claimRewards\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"assets\",\"type\":\"address[]\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"claimRewardsOnBehalf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"assets\",\"type\":\"address[]\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"claimRewardsToSelf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"assets\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"emissionsPerSecond\",\"type\":\"uint256[]\"}],\"name\":\"configureAssets\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"}],\"name\":\"getAssetData\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"getClaimer\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getDistributionEnd\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"assets\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"getRewardsBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"}],\"name\":\"getUserAssetData\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"getUserUnclaimedRewards\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"userBalance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"totalSupply\",\"type\":\"uint256\"}],\"name\":\"handleAction\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"claimer\",\"type\":\"address\"}],\"name\":\"setClaimer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"distributionEnd\",\"type\":\"uint256\"}],\"name\":\"setDistributionEnd\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"DISTRIBUTION_END()\":{\"details\":\"for backwards compatibility with the previous DistributionManager used\",\"returns\":{\"_0\":\"The end of the distribution*\"}},\"REWARD_TOKEN()\":{\"details\":\"for backward compatibility with previous implementation of the Incentives controller\"},\"claimRewards(address[],uint256,address)\":{\"details\":\"Claims reward for an user to the desired address, on all the assets of the lending pool, accumulating the pending rewards\",\"params\":{\"amount\":\"Amount of rewards to claim\",\"to\":\"Address that will be receiving the rewards\"},\"returns\":{\"_0\":\"Rewards claimed*\"}},\"claimRewardsOnBehalf(address[],uint256,address,address)\":{\"details\":\"Claims reward for an user on behalf, on all the assets of the lending pool, accumulating the pending rewards. The caller must be whitelisted via \\\"allowClaimOnBehalf\\\" function by the RewardsAdmin role manager\",\"params\":{\"amount\":\"Amount of rewards to claim\",\"to\":\"Address that will be receiving the rewards\",\"user\":\"Address to check and claim rewards\"},\"returns\":{\"_0\":\"Rewards claimed*\"}},\"claimRewardsToSelf(address[],uint256)\":{\"details\":\"Claims reward for msg.sender, on all the assets of the lending pool, accumulating the pending rewards\",\"params\":{\"amount\":\"Amount of rewards to claim\"},\"returns\":{\"_0\":\"Rewards claimed*\"}},\"configureAssets(address[],uint256[])\":{\"details\":\"Configure assets for a certain rewards emission\",\"params\":{\"assets\":\"The assets to incentivize\",\"emissionsPerSecond\":\"The emission for each asset\"}},\"getAssetData(address)\":{\"details\":\"Returns the configuration of the distribution for a certain asset\",\"params\":{\"asset\":\"The address of the reference asset of the distribution\"},\"returns\":{\"_0\":\"The asset index, the emission per second and the last updated timestamp*\"}},\"getClaimer(address)\":{\"details\":\"Returns the whitelisted claimer for a certain address (0x0 if not set)\",\"params\":{\"user\":\"The address of the user\"},\"returns\":{\"_0\":\"The claimer address\"}},\"getDistributionEnd()\":{\"details\":\"Gets the end date for the distribution\",\"returns\":{\"_0\":\"The end of the distribution*\"}},\"getRewardsBalance(address[],address)\":{\"details\":\"Returns the total of rewards of an user, already accrued + not yet accrued\",\"params\":{\"user\":\"The address of the user\"},\"returns\":{\"_0\":\"The rewards*\"}},\"getUserAssetData(address,address)\":{\"details\":\"Returns the data of an user on a distribution\",\"params\":{\"asset\":\"The address of the reference asset of the distribution\",\"user\":\"Address of the user\"},\"returns\":{\"_0\":\"The new index*\"}},\"getUserUnclaimedRewards(address)\":{\"details\":\"returns the unclaimed rewards of the user\",\"params\":{\"user\":\"the address of the user\"},\"returns\":{\"_0\":\"the unclaimed user rewards\"}},\"handleAction(address,uint256,uint256)\":{\"details\":\"Called by the corresponding asset on any update that affects the rewards distribution\",\"params\":{\"asset\":\"The address of the user\",\"totalSupply\":\"The total supply of the asset in the lending pool*\",\"userBalance\":\"The balance of the user of the asset in the lending pool\"}},\"setClaimer(address,address)\":{\"details\":\"Whitelists an address to claim the rewards on behalf of another address\",\"params\":{\"claimer\":\"The address of the claimer\",\"user\":\"The address of the user\"}},\"setDistributionEnd(uint256)\":{\"details\":\"Sets the end date for the distribution\",\"params\":{\"distributionEnd\":\"The end date timestamp*\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Omnidex-incentives/interfaces/IOmnidexIncentivesController.sol\":\"IOmnidexIncentivesController\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/Omnidex-incentives/interfaces/IOmnidexDistributionManager.sol\":{\"keccak256\":\"0xabf5e1d31a3567f017adf41a4384f0c7a6fce4e81441a7b42fb565f92256a87d\",\"license\":\"agpl-3.0\",\"urls\":[\"bzz-raw://a2aab2cd0efc27da9ced088fcb5534b62c4ebd436688778af86949e706d22fef\",\"dweb:/ipfs/QmPAQiLYLB7QXMKaHjSwWKaK8mN8pgBRteJUqg5ptKebZE\"]},\"contracts/Omnidex-incentives/interfaces/IOmnidexIncentivesController.sol\":{\"keccak256\":\"0x8615452507c06e118914d5bdbd7136745f29030f2bd90fb80101eda042138d84\",\"license\":\"agpl-3.0\",\"urls\":[\"bzz-raw://632c6c2423e567411001205cb0838ed6ccd5a6d36b9f0e27e7262cc79a081e83\",\"dweb:/ipfs/QmSM9PrZzpBZ9Ae6tcDPWoUNztLNrtVpYTCb83bFNjJP4A\"]},\"contracts/Omnidex-incentives/lib/DistributionTypes.sol\":{\"keccak256\":\"0xbb24d51b39ff627c1d2dbbaa5063ae7f1d515ec3980cc6ed8f5d171c17ef1d36\",\"license\":\"agpl-3.0\",\"urls\":[\"bzz-raw://30120d3556895da3f517a6ce8954e4419944f9e07b7b4cd3d596df3e8e8103e3\",\"dweb:/ipfs/QmTXPN7Q8ULdJnJVGVTwLbw7Rvy5h17DfabKf8szvprQNb\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/Omnidex-incentives/interfaces/IProposalIncentivesExecutor.sol": {
				"IProposalIncentivesExecutor": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address[6]",
									"name": "oTokenImplementations",
									"type": "address[6]"
								},
								{
									"internalType": "address[6]",
									"name": "variableDebtImplementation",
									"type": "address[6]"
								}
							],
							"name": "execute",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"execute(address[6],address[6])": "8314b221"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.7.5+commit.eb77ed08\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address[6]\",\"name\":\"oTokenImplementations\",\"type\":\"address[6]\"},{\"internalType\":\"address[6]\",\"name\":\"variableDebtImplementation\",\"type\":\"address[6]\"}],\"name\":\"execute\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Omnidex-incentives/interfaces/IProposalIncentivesExecutor.sol\":\"IProposalIncentivesExecutor\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/Omnidex-incentives/interfaces/IProposalIncentivesExecutor.sol\":{\"keccak256\":\"0x1dddfc058b0df3057515e2268861206d23d9a44161494e5fbb63fdbd6c76c02c\",\"license\":\"AGPL-3.0\",\"urls\":[\"bzz-raw://b5096d4e3ff26b0bc371b9d9551b16338534ef62b09ecc2266faff5caa744057\",\"dweb:/ipfs/QmWX6RZm7iruLn6WGpo2bms96ppdqmVLsCnt5Qk9Aa3mrZ\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/Omnidex-incentives/lib/DistributionTypes.sol": {
				"DistributionTypes": {
					"abi": [],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/Omnidex-incentives/lib/DistributionTypes.sol\":99:368  library DistributionTypes {\r... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  invalid\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/Omnidex-incentives/lib/DistributionTypes.sol\":99:368  library DistributionTypes {\r... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa264697066735822122076c5d18e16d53a34425f35de5aede9b48086a31d56bca0bd38075fd436320b9764736f6c63430007050033\n}\n",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566023600b82828239805160001a607314601657fe5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122076c5d18e16d53a34425f35de5aede9b48086a31d56bca0bd38075fd436320b9764736f6c63430007050033",
							"opcodes": "PUSH1 0x56 PUSH1 0x23 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x16 JUMPI INVALID JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH23 0xC5D18E16D53A34425F35DE5AEDE9B48086A31D56BCA0BD CODESIZE SMOD 0x5F 0xD4 CALLDATASIZE ORIGIN SIGNEXTEND SWAP8 PUSH5 0x736F6C6343 STOP SMOD SDIV STOP CALLER ",
							"sourceMap": "99:269:8:-:0;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122076c5d18e16d53a34425f35de5aede9b48086a31d56bca0bd38075fd436320b9764736f6c63430007050033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH23 0xC5D18E16D53A34425F35DE5AEDE9B48086A31D56BCA0BD CODESIZE SMOD 0x5F 0xD4 CALLDATASIZE ORIGIN SIGNEXTEND SWAP8 PUSH5 0x736F6C6343 STOP SMOD SDIV STOP CALLER ",
							"sourceMap": "99:269:8:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 99,
									"end": 368,
									"name": "PUSH #[$]",
									"source": 8,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 99,
									"end": 368,
									"name": "PUSH [$]",
									"source": 8,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 99,
									"end": 368,
									"name": "PUSH",
									"source": 8,
									"value": "B"
								},
								{
									"begin": 99,
									"end": 368,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 99,
									"end": 368,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 99,
									"end": 368,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 99,
									"end": 368,
									"name": "CODECOPY",
									"source": 8
								},
								{
									"begin": 99,
									"end": 368,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 99,
									"end": 368,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 99,
									"end": 368,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 99,
									"end": 368,
									"name": "BYTE",
									"source": 8
								},
								{
									"begin": 99,
									"end": 368,
									"name": "PUSH",
									"source": 8,
									"value": "73"
								},
								{
									"begin": 99,
									"end": 368,
									"name": "EQ",
									"source": 8
								},
								{
									"begin": 99,
									"end": 368,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 99,
									"end": 368,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 99,
									"end": 368,
									"name": "INVALID",
									"source": 8
								},
								{
									"begin": 99,
									"end": 368,
									"name": "tag",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 99,
									"end": 368,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 99,
									"end": 368,
									"name": "ADDRESS",
									"source": 8
								},
								{
									"begin": 99,
									"end": 368,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 99,
									"end": 368,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 99,
									"end": 368,
									"name": "PUSH",
									"source": 8,
									"value": "73"
								},
								{
									"begin": 99,
									"end": 368,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 99,
									"end": 368,
									"name": "MSTORE8",
									"source": 8
								},
								{
									"begin": 99,
									"end": 368,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 99,
									"end": 368,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 99,
									"end": 368,
									"name": "RETURN",
									"source": 8
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122076c5d18e16d53a34425f35de5aede9b48086a31d56bca0bd38075fd436320b9764736f6c63430007050033",
									".code": [
										{
											"begin": 99,
											"end": 368,
											"name": "PUSHDEPLOYADDRESS",
											"source": 8
										},
										{
											"begin": 99,
											"end": 368,
											"name": "ADDRESS",
											"source": 8
										},
										{
											"begin": 99,
											"end": 368,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 99,
											"end": 368,
											"name": "PUSH",
											"source": 8,
											"value": "80"
										},
										{
											"begin": 99,
											"end": 368,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 99,
											"end": 368,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 99,
											"end": 368,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 99,
											"end": 368,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 99,
											"end": 368,
											"name": "REVERT",
											"source": 8
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.7.5+commit.eb77ed08\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Omnidex-incentives/lib/DistributionTypes.sol\":\"DistributionTypes\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/Omnidex-incentives/lib/DistributionTypes.sol\":{\"keccak256\":\"0xbb24d51b39ff627c1d2dbbaa5063ae7f1d515ec3980cc6ed8f5d171c17ef1d36\",\"license\":\"agpl-3.0\",\"urls\":[\"bzz-raw://30120d3556895da3f517a6ce8954e4419944f9e07b7b4cd3d596df3e8e8103e3\",\"dweb:/ipfs/QmTXPN7Q8ULdJnJVGVTwLbw7Rvy5h17DfabKf8szvprQNb\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/Omnidex-incentives/lib/SafeMath.sol": {
				"SafeMath": {
					"abi": [],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"title": "Optimized overflow and underflow safe math operations",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/Omnidex-incentives/lib/SafeMath.sol\":275:1339  library SafeMath {\r... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  invalid\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/Omnidex-incentives/lib/SafeMath.sol\":275:1339  library SafeMath {\r... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220e7b2aca80657dc6b32519ffa34dd6d53dc362eef29802e3bbb1142e6c917e06164736f6c63430007050033\n}\n",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566023600b82828239805160001a607314601657fe5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220e7b2aca80657dc6b32519ffa34dd6d53dc362eef29802e3bbb1142e6c917e06164736f6c63430007050033",
							"opcodes": "PUSH1 0x56 PUSH1 0x23 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x16 JUMPI INVALID JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE7 0xB2 0xAC 0xA8 MOD JUMPI 0xDC PUSH12 0x32519FFA34DD6D53DC362EEF 0x29 DUP1 0x2E EXTCODESIZE 0xBB GT TIMESTAMP 0xE6 0xC9 OR 0xE0 PUSH2 0x6473 PUSH16 0x6C634300070500330000000000000000 ",
							"sourceMap": "275:1064:9:-:0;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220e7b2aca80657dc6b32519ffa34dd6d53dc362eef29802e3bbb1142e6c917e06164736f6c63430007050033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE7 0xB2 0xAC 0xA8 MOD JUMPI 0xDC PUSH12 0x32519FFA34DD6D53DC362EEF 0x29 DUP1 0x2E EXTCODESIZE 0xBB GT TIMESTAMP 0xE6 0xC9 OR 0xE0 PUSH2 0x6473 PUSH16 0x6C634300070500330000000000000000 ",
							"sourceMap": "275:1064:9:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"add(uint256,uint256)": "infinite",
								"div(uint256,uint256)": "infinite",
								"mul(uint256,uint256)": "infinite",
								"sub(uint256,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 275,
									"end": 1339,
									"name": "PUSH #[$]",
									"source": 9,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 275,
									"end": 1339,
									"name": "PUSH [$]",
									"source": 9,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 275,
									"end": 1339,
									"name": "PUSH",
									"source": 9,
									"value": "B"
								},
								{
									"begin": 275,
									"end": 1339,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 275,
									"end": 1339,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 275,
									"end": 1339,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 275,
									"end": 1339,
									"name": "CODECOPY",
									"source": 9
								},
								{
									"begin": 275,
									"end": 1339,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 275,
									"end": 1339,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 275,
									"end": 1339,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 275,
									"end": 1339,
									"name": "BYTE",
									"source": 9
								},
								{
									"begin": 275,
									"end": 1339,
									"name": "PUSH",
									"source": 9,
									"value": "73"
								},
								{
									"begin": 275,
									"end": 1339,
									"name": "EQ",
									"source": 9
								},
								{
									"begin": 275,
									"end": 1339,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 275,
									"end": 1339,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 275,
									"end": 1339,
									"name": "INVALID",
									"source": 9
								},
								{
									"begin": 275,
									"end": 1339,
									"name": "tag",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 275,
									"end": 1339,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 275,
									"end": 1339,
									"name": "ADDRESS",
									"source": 9
								},
								{
									"begin": 275,
									"end": 1339,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 275,
									"end": 1339,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 275,
									"end": 1339,
									"name": "PUSH",
									"source": 9,
									"value": "73"
								},
								{
									"begin": 275,
									"end": 1339,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 275,
									"end": 1339,
									"name": "MSTORE8",
									"source": 9
								},
								{
									"begin": 275,
									"end": 1339,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 275,
									"end": 1339,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 275,
									"end": 1339,
									"name": "RETURN",
									"source": 9
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220e7b2aca80657dc6b32519ffa34dd6d53dc362eef29802e3bbb1142e6c917e06164736f6c63430007050033",
									".code": [
										{
											"begin": 275,
											"end": 1339,
											"name": "PUSHDEPLOYADDRESS",
											"source": 9
										},
										{
											"begin": 275,
											"end": 1339,
											"name": "ADDRESS",
											"source": 9
										},
										{
											"begin": 275,
											"end": 1339,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 275,
											"end": 1339,
											"name": "PUSH",
											"source": 9,
											"value": "80"
										},
										{
											"begin": 275,
											"end": 1339,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 275,
											"end": 1339,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 275,
											"end": 1339,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 275,
											"end": 1339,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 275,
											"end": 1339,
											"name": "REVERT",
											"source": 9
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.7.5+commit.eb77ed08\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"title\":\"Optimized overflow and underflow safe math operations\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"Contains methods for doing math operations that revert on overflow or underflow for minimal gas cost inspired by uniswap V3\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Omnidex-incentives/lib/SafeMath.sol\":\"SafeMath\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/Omnidex-incentives/lib/SafeMath.sol\":{\"keccak256\":\"0x23218dd12c40acbd9c7c6f799d20dd84c88e1262583e25465f1413ed8c5d67d5\",\"license\":\"agpl-3.0\",\"urls\":[\"bzz-raw://4896e02c7ad212eb804e1ad03a711f964e04eb9b7d6c0024a4cd26b29adc0a1a\",\"dweb:/ipfs/QmamjuX7iGUgpGCgnsPnUsfFMG751kBzrnB2gZFP1tkvxL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"notice": "Contains methods for doing math operations that revert on overflow or underflow for minimal gas cost inspired by uniswap V3",
						"version": 1
					}
				}
			},
			"contracts/Omnidex-incentives/proposals/ProposalIncentivesExecutor.sol": {
				"ProposalIncentivesExecutor": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address[6]",
									"name": "oTokenImplementations",
									"type": "address[6]"
								},
								{
									"internalType": "address[6]",
									"name": "variableDebtImplementations",
									"type": "address[6]"
								}
							],
							"name": "execute",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/Omnidex-incentives/proposals/ProposalIncentivesExecutor.sol\":1000:6038  contract ProposalIncentivesExecutor is IProposalIncentivesExecutor {\r... */\n  mstore(0x40, 0x80)\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/Omnidex-incentives/proposals/ProposalIncentivesExecutor.sol\":1000:6038  contract ProposalIncentivesExecutor is IProposalIncentivesExecutor {\r... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x8314b221\n      eq\n      tag_3\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"contracts/Omnidex-incentives/proposals/ProposalIncentivesExecutor.sol\":2143:6035  function execute(\r... */\n    tag_3:\n      tag_4\n      tag_5\n      calldatasize\n      0x04\n      tag_6\n      jump\t// in\n    tag_5:\n      tag_7\n      jump\t// in\n    tag_4:\n      stop\n    tag_7:\n        /* \"contracts/Omnidex-incentives/proposals/ProposalIncentivesExecutor.sol\":2344:2361  new address[](12) */\n      0x40\n      dup1\n      mload\n        /* \"contracts/Omnidex-incentives/proposals/ProposalIncentivesExecutor.sol\":2358:2360  12 */\n      0x0c\n        /* \"contracts/Omnidex-incentives/proposals/ProposalIncentivesExecutor.sol\":2344:2361  new address[](12) */\n      dup1\n      dup3\n      mstore\n      0x01a0\n      dup3\n      add\n      swap1\n      swap3\n      mstore\n        /* \"contracts/Omnidex-incentives/proposals/ProposalIncentivesExecutor.sol\":2288:2309  uint256 tokensCounter */\n      0x00\n      swap2\n        /* \"contracts/Omnidex-incentives/proposals/ProposalIncentivesExecutor.sol\":2318:2341  address[] memory assets */\n      0x60\n      swap2\n        /* \"contracts/Omnidex-incentives/proposals/ProposalIncentivesExecutor.sol\":2344:2361  new address[](12) */\n      swap1\n      0x20\n      dup3\n      add\n      0x0180\n      dup1\n      calldatasize\n      dup4\n      calldatacopy\n      add\n      swap1\n      pop\n      pop\n        /* \"contracts/Omnidex-incentives/proposals/ProposalIncentivesExecutor.sol\":2318:2361  address[] memory assets = new address[](12) */\n      swap1\n      pop\n        /* \"contracts/Omnidex-incentives/proposals/ProposalIncentivesExecutor.sol\":2423:2457  address payable[6] memory reserves */\n      tag_11\n      tag_12\n      jump\t// in\n    tag_11:\n      pop\n        /* \"contracts/Omnidex-incentives/proposals/ProposalIncentivesExecutor.sol\":2423:2794  address payable[6] memory reserves =\r... */\n      0x40\n      dup1\n      mload\n      0xc0\n      dup2\n      add\n      dup3\n      mstore\n        /* \"contracts/Omnidex-incentives/proposals/ProposalIncentivesExecutor.sol\":2478:2520  0x6B175474E89094C44Da98b954EedeAC495271d0F */\n      0x6b175474e89094c44da98b954eedeac495271d0f\n        /* \"contracts/Omnidex-incentives/proposals/ProposalIncentivesExecutor.sol\":2423:2794  address payable[6] memory reserves =\r... */\n      dup2\n      mstore\n        /* \"contracts/Omnidex-incentives/proposals/ProposalIncentivesExecutor.sol\":2531:2573  0x056Fd409E1d7A124BD7017459dFEa2F387b6d5Cd */\n      0x056fd409e1d7a124bd7017459dfea2f387b6d5cd\n        /* \"contracts/Omnidex-incentives/proposals/ProposalIncentivesExecutor.sol\":2423:2794  address payable[6] memory reserves =\r... */\n      0x20\n      dup3\n      add\n      mstore\n        /* \"contracts/Omnidex-incentives/proposals/ProposalIncentivesExecutor.sol\":2584:2626  0xA0b86991c6218b36c1d19D4a2e9Eb0cE3606eB48 */\n      0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48\n        /* \"contracts/Omnidex-incentives/proposals/ProposalIncentivesExecutor.sol\":2423:2794  address payable[6] memory reserves =\r... */\n      dup2\n      dup4\n      add\n      mstore\n        /* \"contracts/Omnidex-incentives/proposals/ProposalIncentivesExecutor.sol\":2637:2679  0xdAC17F958D2ee523a2206206994597C13D831ec7 */\n      0xdac17f958d2ee523a2206206994597c13d831ec7\n        /* \"contracts/Omnidex-incentives/proposals/ProposalIncentivesExecutor.sol\":2423:2794  address payable[6] memory reserves =\r... */\n      0x60\n      dup1\n      dup4\n      add\n      swap2\n      swap1\n      swap2\n      mstore\n        /* \"contracts/Omnidex-incentives/proposals/ProposalIncentivesExecutor.sol\":2690:2732  0x2260FAC5E5542a773Aa44fBCfeDf7C193bc2C599 */\n      0x2260fac5e5542a773aa44fbcfedf7c193bc2c599\n        /* \"contracts/Omnidex-incentives/proposals/ProposalIncentivesExecutor.sol\":2423:2794  address payable[6] memory reserves =\r... */\n      0x80\n      dup4\n      add\n      mstore\n        /* \"contracts/Omnidex-incentives/proposals/ProposalIncentivesExecutor.sol\":2743:2785  0xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2 */\n      0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2\n        /* \"contracts/Omnidex-incentives/proposals/ProposalIncentivesExecutor.sol\":2423:2794  address payable[6] memory reserves =\r... */\n      0xa0\n      dup4\n      add\n      mstore\n        /* \"contracts/Omnidex-incentives/proposals/ProposalIncentivesExecutor.sol\":2832:2849  new uint256[](12) */\n      dup3\n      mload\n        /* \"contracts/Omnidex-incentives/proposals/ProposalIncentivesExecutor.sol\":2846:2848  12 */\n      0x0c\n        /* \"contracts/Omnidex-incentives/proposals/ProposalIncentivesExecutor.sol\":2832:2849  new uint256[](12) */\n      dup1\n      dup3\n      mstore\n      0x01a0\n      dup3\n      add\n      swap1\n      swap5\n      mstore\n        /* \"contracts/Omnidex-incentives/proposals/ProposalIncentivesExecutor.sol\":2423:2794  address payable[6] memory reserves =\r... */\n      swap2\n      swap3\n      swap1\n      swap2\n        /* \"contracts/Omnidex-incentives/proposals/ProposalIncentivesExecutor.sol\":2832:2849  new uint256[](12) */\n      swap1\n      dup2\n      0x20\n      add\n      0x20\n      dup3\n      mul\n      dup1\n      calldatasize\n      dup4\n      calldatacopy\n      add\n      swap1\n      pop\n      pop\n        /* \"contracts/Omnidex-incentives/proposals/ProposalIncentivesExecutor.sol\":2803:2849  uint256[] memory emissions = new uint256[](12) */\n      swap1\n      pop\n        /* \"contracts/Omnidex-incentives/proposals/ProposalIncentivesExecutor.sol\":2873:2889  1706018518518520 */\n      0x060f9d63c6caf8\n        /* \"contracts/Omnidex-incentives/proposals/ProposalIncentivesExecutor.sol\":2858:2867  emissions */\n      dup2\n        /* \"contracts/Omnidex-incentives/proposals/ProposalIncentivesExecutor.sol\":2868:2869  0 */\n      0x00\n        /* \"contracts/Omnidex-incentives/proposals/ProposalIncentivesExecutor.sol\":2858:2870  emissions[0] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_15\n      jumpi\n      invalid\n    tag_15:\n      0x20\n      mul\n      0x20\n      add\n      add\n        /* \"contracts/Omnidex-incentives/proposals/ProposalIncentivesExecutor.sol\":2858:2889  emissions[0] = 1706018518518520 */\n      dup2\n      dup2\n      mstore\n      pop\n      pop\n        /* \"contracts/Omnidex-incentives/proposals/ProposalIncentivesExecutor.sol\":2918:2934  1706018518518520 */\n      0x060f9d63c6caf8\n        /* \"contracts/Omnidex-incentives/proposals/ProposalIncentivesExecutor.sol\":2903:2912  emissions */\n      dup2\n        /* \"contracts/Omnidex-incentives/proposals/ProposalIncentivesExecutor.sol\":2913:2914  1 */\n      0x01\n        /* \"contracts/Omnidex-incentives/proposals/ProposalIncentivesExecutor.sol\":2903:2915  emissions[1] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_16\n      jumpi\n      invalid\n    tag_16:\n      0x20\n      mul\n      0x20\n      add\n      add\n        /* \"contracts/Omnidex-incentives/proposals/ProposalIncentivesExecutor.sol\":2903:2934  emissions[1] = 1706018518518520 */\n      dup2\n      dup2\n      mstore\n      pop\n      pop\n        /* \"contracts/Omnidex-incentives/proposals/ProposalIncentivesExecutor.sol\":2967:2981  92939814814815 */\n      0x54873ca5c45f\n        /* \"contracts/Omnidex-incentives/proposals/ProposalIncentivesExecutor.sol\":2952:2961  emissions */\n      dup2\n        /* \"contracts/Omnidex-incentives/proposals/ProposalIncentivesExecutor.sol\":2962:2963  2 */\n      0x02\n        /* \"contracts/Omnidex-incentives/proposals/ProposalIncentivesExecutor.sol\":2952:2964  emissions[2] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_17\n      jumpi\n      invalid\n    tag_17:\n      0x20\n      mul\n      0x20\n      add\n      add\n        /* \"contracts/Omnidex-incentives/proposals/ProposalIncentivesExecutor.sol\":2952:2981  emissions[2] = 92939814814815 */\n      dup2\n      dup2\n      mstore\n      pop\n      pop\n        /* \"contracts/Omnidex-incentives/proposals/ProposalIncentivesExecutor.sol\":3011:3025  92939814814815 */\n      0x54873ca5c45f\n        /* \"contracts/Omnidex-incentives/proposals/ProposalIncentivesExecutor.sol\":2996:3005  emissions */\n      dup2\n        /* \"contracts/Omnidex-incentives/proposals/ProposalIncentivesExecutor.sol\":3006:3007  3 */\n      0x03\n        /* \"contracts/Omnidex-incentives/proposals/ProposalIncentivesExecutor.sol\":2996:3008  emissions[3] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_18\n      jumpi\n      invalid\n    tag_18:\n      0x20\n      mul\n      0x20\n      add\n      add\n        /* \"contracts/Omnidex-incentives/proposals/ProposalIncentivesExecutor.sol\":2996:3025  emissions[3] = 92939814814815 */\n      dup2\n      dup2\n      mstore\n      pop\n      pop\n        /* \"contracts/Omnidex-incentives/proposals/ProposalIncentivesExecutor.sol\":3059:3075  5291203703703700 */\n      0x12cc525d318894\n        /* \"contracts/Omnidex-incentives/proposals/ProposalIncentivesExecutor.sol\":3044:3053  emissions */\n      dup2\n        /* \"contracts/Omnidex-incentives/proposals/ProposalIncentivesExecutor.sol\":3054:3055  4 */\n      0x04\n        /* \"contracts/Omnidex-incentives/proposals/ProposalIncentivesExecutor.sol\":3044:3056  emissions[4] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_19\n      jumpi\n      invalid\n    tag_19:\n      0x20\n      mul\n      0x20\n      add\n      add\n        /* \"contracts/Omnidex-incentives/proposals/ProposalIncentivesExecutor.sol\":3044:3075  emissions[4] = 5291203703703700 */\n      dup2\n      dup2\n      mstore\n      pop\n      pop\n        /* \"contracts/Omnidex-incentives/proposals/ProposalIncentivesExecutor.sol\":3105:3121  5291203703703700 */\n      0x12cc525d318894\n        /* \"contracts/Omnidex-incentives/proposals/ProposalIncentivesExecutor.sol\":3090:3099  emissions */\n      dup2\n        /* \"contracts/Omnidex-incentives/proposals/ProposalIncentivesExecutor.sol\":3100:3101  5 */\n      0x05\n        /* \"contracts/Omnidex-incentives/proposals/ProposalIncentivesExecutor.sol\":3090:3102  emissions[5] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_20\n      jumpi\n      invalid\n    tag_20:\n      0x20\n      mul\n      0x20\n      add\n      add\n        /* \"contracts/Omnidex-incentives/proposals/ProposalIncentivesExecutor.sol\":3090:3121  emissions[5] = 5291203703703700 */\n      dup2\n      dup2\n      mstore\n      pop\n      pop\n        /* \"contracts/Omnidex-incentives/proposals/ProposalIncentivesExecutor.sol\":3155:3171  3293634259259260 */\n      0x0bb38afc0b0f7c\n        /* \"contracts/Omnidex-incentives/proposals/ProposalIncentivesExecutor.sol\":3140:3149  emissions */\n      dup2\n        /* \"contracts/Omnidex-incentives/proposals/ProposalIncentivesExecutor.sol\":3150:3151  6 */\n      0x06\n        /* \"contracts/Omnidex-incentives/proposals/ProposalIncentivesExecutor.sol\":3140:3152  emissions[6] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_21\n      jumpi\n      invalid\n    tag_21:\n      0x20\n      mul\n      0x20\n      add\n      add\n        /* \"contracts/Omnidex-incentives/proposals/ProposalIncentivesExecutor.sol\":3140:3171  emissions[6] = 3293634259259260 */\n      dup2\n      dup2\n      mstore\n      pop\n      pop\n        /* \"contracts/Omnidex-incentives/proposals/ProposalIncentivesExecutor.sol\":3201:3217  3293634259259260 */\n      0x0bb38afc0b0f7c\n        /* \"contracts/Omnidex-incentives/proposals/ProposalIncentivesExecutor.sol\":3186:3195  emissions */\n      dup2\n        /* \"contracts/Omnidex-incentives/proposals/ProposalIncentivesExecutor.sol\":3196:3197  7 */\n      0x07\n        /* \"contracts/Omnidex-incentives/proposals/ProposalIncentivesExecutor.sol\":3186:3198  emissions[7] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_22\n      jumpi\n      invalid\n    tag_22:\n      0x20\n      mul\n      0x20\n      add\n      add\n        /* \"contracts/Omnidex-incentives/proposals/ProposalIncentivesExecutor.sol\":3186:3217  emissions[7] = 3293634259259260 */\n      dup2\n      dup2\n      mstore\n      pop\n      pop\n        /* \"contracts/Omnidex-incentives/proposals/ProposalIncentivesExecutor.sol\":3251:3267  1995659722222220 */\n      0x07170abcd5ea8c\n        /* \"contracts/Omnidex-incentives/proposals/ProposalIncentivesExecutor.sol\":3236:3245  emissions */\n      dup2\n        /* \"contracts/Omnidex-incentives/proposals/ProposalIncentivesExecutor.sol\":3246:3247  8 */\n      0x08\n        /* \"contracts/Omnidex-incentives/proposals/ProposalIncentivesExecutor.sol\":3236:3248  emissions[8] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_23\n      jumpi\n      invalid\n    tag_23:\n      0x20\n      mul\n      0x20\n      add\n      add\n        /* \"contracts/Omnidex-incentives/proposals/ProposalIncentivesExecutor.sol\":3236:3267  emissions[8] = 1995659722222220 */\n      dup2\n      dup2\n      mstore\n      pop\n      pop\n        /* \"contracts/Omnidex-incentives/proposals/ProposalIncentivesExecutor.sol\":3297:3312  105034722222222 */\n      0x5f874d4ea08e\n        /* \"contracts/Omnidex-incentives/proposals/ProposalIncentivesExecutor.sol\":3282:3291  emissions */\n      dup2\n        /* \"contracts/Omnidex-incentives/proposals/ProposalIncentivesExecutor.sol\":3292:3293  9 */\n      0x09\n        /* \"contracts/Omnidex-incentives/proposals/ProposalIncentivesExecutor.sol\":3282:3294  emissions[9] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_24\n      jumpi\n      invalid\n    tag_24:\n      0x20\n      mul\n      0x20\n      add\n      add\n        /* \"contracts/Omnidex-incentives/proposals/ProposalIncentivesExecutor.sol\":3282:3312  emissions[9] = 105034722222222 */\n      dup2\n      dup2\n      mstore\n      pop\n      pop\n        /* \"contracts/Omnidex-incentives/proposals/ProposalIncentivesExecutor.sol\":3347:3363  2464942129629630 */\n      0x08c1da100749be\n        /* \"contracts/Omnidex-incentives/proposals/ProposalIncentivesExecutor.sol\":3331:3340  emissions */\n      dup2\n        /* \"contracts/Omnidex-incentives/proposals/ProposalIncentivesExecutor.sol\":3341:3343  10 */\n      0x0a\n        /* \"contracts/Omnidex-incentives/proposals/ProposalIncentivesExecutor.sol\":3331:3344  emissions[10] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_25\n      jumpi\n      invalid\n    tag_25:\n      0x20\n      mul\n      0x20\n      add\n      add\n        /* \"contracts/Omnidex-incentives/proposals/ProposalIncentivesExecutor.sol\":3331:3363  emissions[10] = 2464942129629630 */\n      dup2\n      dup2\n      mstore\n      pop\n      pop\n        /* \"contracts/Omnidex-incentives/proposals/ProposalIncentivesExecutor.sol\":3393:3408  129733796296296 */\n      0x75fe00d7f668\n        /* \"contracts/Omnidex-incentives/proposals/ProposalIncentivesExecutor.sol\":3377:3386  emissions */\n      dup2\n        /* \"contracts/Omnidex-incentives/proposals/ProposalIncentivesExecutor.sol\":3387:3389  11 */\n      0x0b\n        /* \"contracts/Omnidex-incentives/proposals/ProposalIncentivesExecutor.sol\":3377:3390  emissions[11] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_26\n      jumpi\n      invalid\n    tag_26:\n      0x20\n      swap1\n      dup2\n      mul\n      swap2\n      swap1\n      swap2\n      add\n      add\n        /* \"contracts/Omnidex-incentives/proposals/ProposalIncentivesExecutor.sol\":3377:3408  emissions[11] = 129733796296296 */\n      mstore\n        /* \"contracts/Omnidex-incentives/proposals/ProposalIncentivesExecutor.sol\":3964:4056  provider.setAddress(keccak256('INCENTIVES_CONTROLLER'), INCENTIVES_CONTROLLER_PROXY_ADDRESS) */\n      mload(0x40)\n      shl(0xe0, 0xca446dd9)\n      dup2\n      mstore\n        /* \"contracts/Omnidex-incentives/proposals/ProposalIncentivesExecutor.sol\":1289:1331  0x2F75fEDA7423D8B85988d9545428d00f3213CF00 */\n      0x2f75feda7423d8b85988d9545428d00f3213cf00\n      swap1\n        /* \"contracts/Omnidex-incentives/proposals/ProposalIncentivesExecutor.sol\":1743:1785  0x8761e889ad797BdE3bb2b6561982fD1cA4118872 */\n      0x8761e889ad797bde3bb2b6561982fd1ca4118872\n      swap1\n        /* \"contracts/Omnidex-incentives/proposals/ProposalIncentivesExecutor.sol\":1417:1459  0x64968B59Dd39128C287D76BE50015161d10C08C2 */\n      0x64968b59dd39128c287d76be50015161d10c08c2\n      swap1\n      dup2\n      swap1\n        /* \"contracts/Omnidex-incentives/proposals/ProposalIncentivesExecutor.sol\":3964:3983  provider.setAddress */\n      0xca446dd9\n      swap1\n        /* \"contracts/Omnidex-incentives/proposals/ProposalIncentivesExecutor.sol\":3964:4056  provider.setAddress(keccak256('INCENTIVES_CONTROLLER'), INCENTIVES_CONTROLLER_PROXY_ADDRESS) */\n      tag_27\n      swap1\n        /* \"contracts/Omnidex-incentives/proposals/ProposalIncentivesExecutor.sol\":3984:4018  keccak256('INCENTIVES_CONTROLLER') */\n      0x703c2c8634bed68d98c029c18f310e7f7ec0e5d6342c590190b3cb8b3ba54532\n      swap1\n        /* \"contracts/Omnidex-incentives/proposals/ProposalIncentivesExecutor.sol\":1743:1785  0x8761e889ad797BdE3bb2b6561982fD1cA4118872 */\n      dup7\n      swap1\n        /* \"contracts/Omnidex-incentives/proposals/ProposalIncentivesExecutor.sol\":3964:4056  provider.setAddress(keccak256('INCENTIVES_CONTROLLER'), INCENTIVES_CONTROLLER_PROXY_ADDRESS) */\n      0x04\n      add\n      tag_28\n      jump\t// in\n    tag_27:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_29\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_29:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_31\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_31:\n      pop\n      pop\n        /* \"contracts/Omnidex-incentives/proposals/ProposalIncentivesExecutor.sol\":4135:4233  provider.setAddressAsProxy(keccak256('INCENTIVES_CONTROLLER'), INCENTIVES_CONTROLLER_IMPL_ADDRESS) */\n      mload(0x40)\n      shl(0xe2, 0x177314a3)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Omnidex-incentives/proposals/ProposalIncentivesExecutor.sol\":4135:4161  provider.setAddressAsProxy */\n      dup5\n      and\n      swap3\n      pop\n      0x5dcc528c\n      swap2\n      pop\n        /* \"contracts/Omnidex-incentives/proposals/ProposalIncentivesExecutor.sol\":4135:4233  provider.setAddressAsProxy(keccak256('INCENTIVES_CONTROLLER'), INCENTIVES_CONTROLLER_IMPL_ADDRESS) */\n      tag_32\n      swap1\n        /* \"contracts/Omnidex-incentives/proposals/ProposalIncentivesExecutor.sol\":4162:4196  keccak256('INCENTIVES_CONTROLLER') */\n      0x703c2c8634bed68d98c029c18f310e7f7ec0e5d6342c590190b3cb8b3ba54532\n      swap1\n        /* \"contracts/Omnidex-incentives/proposals/ProposalIncentivesExecutor.sol\":1895:1937  0x554928b31c4eF45862195B0233A3D689b08552A4 */\n      0x554928b31c4ef45862195b0233a3d689b08552a4\n      swap1\n        /* \"contracts/Omnidex-incentives/proposals/ProposalIncentivesExecutor.sol\":4135:4233  provider.setAddressAsProxy(keccak256('INCENTIVES_CONTROLLER'), INCENTIVES_CONTROLLER_IMPL_ADDRESS) */\n      0x04\n      add\n      tag_28\n      jump\t// in\n    tag_32:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_33\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_33:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_35\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_35:\n      pop\n        /* \"contracts/Omnidex-incentives/proposals/ProposalIncentivesExecutor.sol\":4242:4423  require(\r... */\n      tag_37\n      swap3\n      pop\n      pop\n      pop\n      jump\n    tag_38:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_37:\n        /* \"contracts/Omnidex-incentives/proposals/ProposalIncentivesExecutor.sol\":4552:4561  uint256 x */\n      0x00\n        /* \"contracts/Omnidex-incentives/proposals/ProposalIncentivesExecutor.sol\":4547:5500  for (uint256 x = 0; x < reserves.length; x++) {\r... */\n    tag_40:\n        /* \"contracts/Omnidex-incentives/proposals/ProposalIncentivesExecutor.sol\":4571:4586  reserves.length */\n      0x06\n        /* \"contracts/Omnidex-incentives/proposals/ProposalIncentivesExecutor.sol\":4567:4568  x */\n      dup2\n        /* \"contracts/Omnidex-incentives/proposals/ProposalIncentivesExecutor.sol\":4567:4586  x < reserves.length */\n      lt\n        /* \"contracts/Omnidex-incentives/proposals/ProposalIncentivesExecutor.sol\":4547:5500  for (uint256 x = 0; x < reserves.length; x++) {\r... */\n      iszero\n      tag_41\n      jumpi\n        /* \"contracts/Omnidex-incentives/proposals/ProposalIncentivesExecutor.sol\":4692:4700  reserves */\n      dup6\n        /* \"contracts/Omnidex-incentives/proposals/ProposalIncentivesExecutor.sol\":4701:4702  x */\n      dup2\n        /* \"contracts/Omnidex-incentives/proposals/ProposalIncentivesExecutor.sol\":4692:4703  reserves[x] */\n      0x06\n      dup2\n      lt\n      tag_43\n      jumpi\n      invalid\n    tag_43:\n      0x20\n      mul\n      add\n      mload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Omnidex-incentives/proposals/ProposalIncentivesExecutor.sol\":4620:4703  IOTokenDetailed(oTokenImplementations[x]).UNDERLYING_ASSET_ADDRESS() == reserves[x] */\n      and\n        /* \"contracts/Omnidex-incentives/proposals/ProposalIncentivesExecutor.sol\":4636:4657  oTokenImplementations */\n      dup11\n        /* \"contracts/Omnidex-incentives/proposals/ProposalIncentivesExecutor.sol\":4658:4659  x */\n      dup3\n        /* \"contracts/Omnidex-incentives/proposals/ProposalIncentivesExecutor.sol\":4636:4660  oTokenImplementations[x] */\n      0x06\n      dup2\n      lt\n      tag_44\n      jumpi\n      invalid\n    tag_44:\n      0x20\n      mul\n      add\n      mload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Omnidex-incentives/proposals/ProposalIncentivesExecutor.sol\":4620:4686  IOTokenDetailed(oTokenImplementations[x]).UNDERLYING_ASSET_ADDRESS */\n      and\n      0xb16a19de\n        /* \"contracts/Omnidex-incentives/proposals/ProposalIncentivesExecutor.sol\":4620:4688  IOTokenDetailed(oTokenImplementations[x]).UNDERLYING_ASSET_ADDRESS() */\n      mload(0x40)\n      dup2\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_45\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_45:\n      pop\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_47\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_47:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_48\n      swap2\n      swap1\n      tag_49\n      jump\t// in\n    tag_48:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Omnidex-incentives/proposals/ProposalIncentivesExecutor.sol\":4620:4703  IOTokenDetailed(oTokenImplementations[x]).UNDERLYING_ASSET_ADDRESS() == reserves[x] */\n      and\n      eq\n        /* \"contracts/Omnidex-incentives/proposals/ProposalIncentivesExecutor.sol\":4602:4757  require(\r... */\n      tag_50\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_38\n      swap1\n      tag_52\n      jump\t// in\n    tag_50:\n        /* \"contracts/Omnidex-incentives/proposals/ProposalIncentivesExecutor.sol\":4862:4870  reserves */\n      dup6\n        /* \"contracts/Omnidex-incentives/proposals/ProposalIncentivesExecutor.sol\":4871:4872  x */\n      dup2\n        /* \"contracts/Omnidex-incentives/proposals/ProposalIncentivesExecutor.sol\":4862:4873  reserves[x] */\n      0x06\n      dup2\n      lt\n      tag_53\n      jumpi\n      invalid\n    tag_53:\n      0x20\n      mul\n      add\n      mload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Omnidex-incentives/proposals/ProposalIncentivesExecutor.sol\":4784:4873  IOTokenDetailed(variableDebtImplementations[x]).UNDERLYING_ASSET_ADDRESS() == reserves[x] */\n      and\n        /* \"contracts/Omnidex-incentives/proposals/ProposalIncentivesExecutor.sol\":4800:4827  variableDebtImplementations */\n      dup10\n        /* \"contracts/Omnidex-incentives/proposals/ProposalIncentivesExecutor.sol\":4828:4829  x */\n      dup3\n        /* \"contracts/Omnidex-incentives/proposals/ProposalIncentivesExecutor.sol\":4800:4830  variableDebtImplementations[x] */\n      0x06\n      dup2\n      lt\n      tag_54\n      jumpi\n      invalid\n    tag_54:\n      0x20\n      mul\n      add\n      mload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Omnidex-incentives/proposals/ProposalIncentivesExecutor.sol\":4784:4856  IOTokenDetailed(variableDebtImplementations[x]).UNDERLYING_ASSET_ADDRESS */\n      and\n      0xb16a19de\n        /* \"contracts/Omnidex-incentives/proposals/ProposalIncentivesExecutor.sol\":4784:4858  IOTokenDetailed(variableDebtImplementations[x]).UNDERLYING_ASSET_ADDRESS() */\n      mload(0x40)\n      dup2\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_55\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_55:\n      pop\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_57\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_57:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_58\n      swap2\n      swap1\n      tag_49\n      jump\t// in\n    tag_58:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Omnidex-incentives/proposals/ProposalIncentivesExecutor.sol\":4784:4873  IOTokenDetailed(variableDebtImplementations[x]).UNDERLYING_ASSET_ADDRESS() == reserves[x] */\n      and\n      eq\n        /* \"contracts/Omnidex-incentives/proposals/ProposalIncentivesExecutor.sol\":4766:4931  require(\r... */\n      tag_59\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_38\n      swap1\n      tag_61\n      jump\t// in\n    tag_59:\n        /* \"contracts/Omnidex-incentives/proposals/ProposalIncentivesExecutor.sol\":4940:4980  DataTypes.ReserveData memory reserveData */\n      tag_62\n      tag_63\n      jump\t// in\n    tag_62:\n        /* \"contracts/Omnidex-incentives/proposals/ProposalIncentivesExecutor.sol\":1529:1571  0xA9Ae6E3207bdCCcB8f081EE0b4D0D2b4a79EA984 */\n      0xa9ae6e3207bdcccb8f081ee0b4d0d2b4a79ea984\n        /* \"contracts/Omnidex-incentives/proposals/ProposalIncentivesExecutor.sol\":4992:5037  ILendingPoolData(LENDING_POOL).getReserveData */\n      0x35ea6a75\n        /* \"contracts/Omnidex-incentives/proposals/ProposalIncentivesExecutor.sol\":5038:5046  reserves */\n      dup9\n        /* \"contracts/Omnidex-incentives/proposals/ProposalIncentivesExecutor.sol\":5047:5048  x */\n      dup5\n        /* \"contracts/Omnidex-incentives/proposals/ProposalIncentivesExecutor.sol\":5038:5049  reserves[x] */\n      0x06\n      dup2\n      lt\n      tag_64\n      jumpi\n      invalid\n    tag_64:\n      0x20\n      mul\n      add\n      mload\n        /* \"contracts/Omnidex-incentives/proposals/ProposalIncentivesExecutor.sol\":4992:5050  ILendingPoolData(LENDING_POOL).getReserveData(reserves[x]) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_65\n      swap2\n      swap1\n      tag_66\n      jump\t// in\n    tag_65:\n      0x0180\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_67\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_67:\n      pop\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_69\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_69:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_70\n      swap2\n      swap1\n      tag_71\n      jump\t// in\n    tag_70:\n        /* \"contracts/Omnidex-incentives/proposals/ProposalIncentivesExecutor.sol\":4940:5050  DataTypes.ReserveData memory reserveData =\r... */\n      swap1\n      pop\n        /* \"contracts/Omnidex-incentives/proposals/ProposalIncentivesExecutor.sol\":5090:5106  poolConfigurator */\n      dup5\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Omnidex-incentives/proposals/ProposalIncentivesExecutor.sol\":5090:5119  poolConfigurator.updateOToken */\n      and\n      0x12e3ae16\n        /* \"contracts/Omnidex-incentives/proposals/ProposalIncentivesExecutor.sol\":5120:5128  reserves */\n      dup9\n        /* \"contracts/Omnidex-incentives/proposals/ProposalIncentivesExecutor.sol\":5129:5130  x */\n      dup5\n        /* \"contracts/Omnidex-incentives/proposals/ProposalIncentivesExecutor.sol\":5120:5131  reserves[x] */\n      0x06\n      dup2\n      lt\n      tag_72\n      jumpi\n      invalid\n    tag_72:\n      0x20\n      mul\n      add\n      mload\n        /* \"contracts/Omnidex-incentives/proposals/ProposalIncentivesExecutor.sol\":5133:5154  oTokenImplementations */\n      dup14\n        /* \"contracts/Omnidex-incentives/proposals/ProposalIncentivesExecutor.sol\":5155:5156  x */\n      dup6\n        /* \"contracts/Omnidex-incentives/proposals/ProposalIncentivesExecutor.sol\":5133:5157  oTokenImplementations[x] */\n      0x06\n      dup2\n      lt\n      tag_73\n      jumpi\n      invalid\n    tag_73:\n      0x20\n      mul\n      add\n      mload\n        /* \"contracts/Omnidex-incentives/proposals/ProposalIncentivesExecutor.sol\":5090:5158  poolConfigurator.updateOToken(reserves[x], oTokenImplementations[x]) */\n      mload(0x40)\n      dup4\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_74\n      swap3\n      swap2\n      swap1\n      tag_75\n      jump\t// in\n    tag_74:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_76\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_76:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_78\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_78:\n      pop\n      pop\n      pop\n      pop\n        /* \"contracts/Omnidex-incentives/proposals/ProposalIncentivesExecutor.sol\":5205:5221  poolConfigurator */\n      dup5\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Omnidex-incentives/proposals/ProposalIncentivesExecutor.sol\":5205:5245  poolConfigurator.updateVariableDebtToken */\n      and\n      0x4d978258\n        /* \"contracts/Omnidex-incentives/proposals/ProposalIncentivesExecutor.sol\":5246:5254  reserves */\n      dup9\n        /* \"contracts/Omnidex-incentives/proposals/ProposalIncentivesExecutor.sol\":5255:5256  x */\n      dup5\n        /* \"contracts/Omnidex-incentives/proposals/ProposalIncentivesExecutor.sol\":5246:5257  reserves[x] */\n      0x06\n      dup2\n      lt\n      tag_79\n      jumpi\n      invalid\n    tag_79:\n      0x20\n      mul\n      add\n      mload\n        /* \"contracts/Omnidex-incentives/proposals/ProposalIncentivesExecutor.sol\":5259:5286  variableDebtImplementations */\n      dup13\n        /* \"contracts/Omnidex-incentives/proposals/ProposalIncentivesExecutor.sol\":5287:5288  x */\n      dup6\n        /* \"contracts/Omnidex-incentives/proposals/ProposalIncentivesExecutor.sol\":5259:5289  variableDebtImplementations[x] */\n      0x06\n      dup2\n      lt\n      tag_80\n      jumpi\n      invalid\n    tag_80:\n      0x20\n      mul\n      add\n      mload\n        /* \"contracts/Omnidex-incentives/proposals/ProposalIncentivesExecutor.sol\":5205:5290  poolConfigurator.updateVariableDebtToken(reserves[x], variableDebtImplementations[x]) */\n      mload(0x40)\n      dup4\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_81\n      swap3\n      swap2\n      swap1\n      tag_75\n      jump\t// in\n    tag_81:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_82\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_82:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_84\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_84:\n      pop\n      pop\n      pop\n      pop\n        /* \"contracts/Omnidex-incentives/proposals/ProposalIncentivesExecutor.sol\":5327:5338  reserveData */\n      dup1\n        /* \"contracts/Omnidex-incentives/proposals/ProposalIncentivesExecutor.sol\":5327:5352  reserveData.oTokenAddress */\n      0xe0\n      add\n      mload\n        /* \"contracts/Omnidex-incentives/proposals/ProposalIncentivesExecutor.sol\":5301:5307  assets */\n      dup9\n        /* \"contracts/Omnidex-incentives/proposals/ProposalIncentivesExecutor.sol\":5308:5323  tokensCounter++ */\n      dup11\n      dup1\n      0x01\n      add\n      swap12\n      pop\n        /* \"contracts/Omnidex-incentives/proposals/ProposalIncentivesExecutor.sol\":5301:5324  assets[tokensCounter++] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_85\n      jumpi\n      invalid\n    tag_85:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Omnidex-incentives/proposals/ProposalIncentivesExecutor.sol\":5301:5352  assets[tokensCounter++] = reserveData.oTokenAddress */\n      swap1\n      swap3\n      and\n        /* \"contracts/Omnidex-incentives/proposals/ProposalIncentivesExecutor.sol\":5301:5324  assets[tokensCounter++] */\n      0x20\n      swap3\n      dup4\n      mul\n      swap2\n      swap1\n      swap2\n      add\n      swap1\n      swap2\n      add\n        /* \"contracts/Omnidex-incentives/proposals/ProposalIncentivesExecutor.sol\":5301:5352  assets[tokensCounter++] = reserveData.oTokenAddress */\n      mstore\n        /* \"contracts/Omnidex-incentives/proposals/ProposalIncentivesExecutor.sol\":5454:5490  reserveData.variableDebtTokenAddress */\n      0x0120\n      dup2\n      add\n      mload\n        /* \"contracts/Omnidex-incentives/proposals/ProposalIncentivesExecutor.sol\":5428:5451  assets[tokensCounter++] */\n      dup9\n      mload\n        /* \"contracts/Omnidex-incentives/proposals/ProposalIncentivesExecutor.sol\":5435:5450  tokensCounter++ */\n      0x01\n      dup12\n      add\n      swap11\n        /* \"contracts/Omnidex-incentives/proposals/ProposalIncentivesExecutor.sol\":5428:5434  assets */\n      dup11\n      swap2\n        /* \"contracts/Omnidex-incentives/proposals/ProposalIncentivesExecutor.sol\":5428:5451  assets[tokensCounter++] */\n      dup2\n      lt\n      tag_86\n      jumpi\n      invalid\n    tag_86:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Omnidex-incentives/proposals/ProposalIncentivesExecutor.sol\":5428:5490  assets[tokensCounter++] = reserveData.variableDebtTokenAddress */\n      swap1\n      swap3\n      and\n        /* \"contracts/Omnidex-incentives/proposals/ProposalIncentivesExecutor.sol\":5428:5451  assets[tokensCounter++] */\n      0x20\n      swap3\n      dup4\n      mul\n      swap2\n      swap1\n      swap2\n      add\n      swap1\n      swap2\n      add\n        /* \"contracts/Omnidex-incentives/proposals/ProposalIncentivesExecutor.sol\":5428:5490  assets[tokensCounter++] = reserveData.variableDebtTokenAddress */\n      mstore\n      pop\n        /* \"contracts/Omnidex-incentives/proposals/ProposalIncentivesExecutor.sol\":4588:4591  x++ */\n      0x01\n      add\n        /* \"contracts/Omnidex-incentives/proposals/ProposalIncentivesExecutor.sol\":4547:5500  for (uint256 x = 0; x < reserves.length; x++) {\r... */\n      jump(tag_40)\n    tag_41:\n      pop\n        /* \"contracts/Omnidex-incentives/proposals/ProposalIncentivesExecutor.sol\":5838:5893  incentivesController.configureAssets(assets, emissions) */\n      mload(0x40)\n      shl(0xe1, 0x3cf8b8d9)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Omnidex-incentives/proposals/ProposalIncentivesExecutor.sol\":5838:5874  incentivesController.configureAssets */\n      dup4\n      and\n      swap1\n      0x79f171b2\n      swap1\n        /* \"contracts/Omnidex-incentives/proposals/ProposalIncentivesExecutor.sol\":5838:5893  incentivesController.configureAssets(assets, emissions) */\n      tag_87\n      swap1\n        /* \"contracts/Omnidex-incentives/proposals/ProposalIncentivesExecutor.sol\":5875:5881  assets */\n      dup10\n      swap1\n        /* \"contracts/Omnidex-incentives/proposals/ProposalIncentivesExecutor.sol\":5883:5892  emissions */\n      dup9\n      swap1\n        /* \"contracts/Omnidex-incentives/proposals/ProposalIncentivesExecutor.sol\":5838:5893  incentivesController.configureAssets(assets, emissions) */\n      0x04\n      add\n      tag_88\n      jump\t// in\n    tag_87:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_89\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_89:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_91\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_91:\n      pop\n      pop\n        /* \"contracts/Omnidex-incentives/proposals/ProposalIncentivesExecutor.sol\":5949:6029  incentivesController.setDistributionEnd(block.timestamp + DISTRIBUTION_DURATION) */\n      mload(0x40)\n      shl(0xe0, 0x39ccbdd3)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Omnidex-incentives/proposals/ProposalIncentivesExecutor.sol\":5949:5988  incentivesController.setDistributionEnd */\n      dup6\n      and\n      swap3\n      pop\n      0x39ccbdd3\n      swap2\n      pop\n        /* \"contracts/Omnidex-incentives/proposals/ProposalIncentivesExecutor.sol\":5949:6029  incentivesController.setDistributionEnd(block.timestamp + DISTRIBUTION_DURATION) */\n      tag_92\n      swap1\n        /* \"contracts/Omnidex-incentives/proposals/ProposalIncentivesExecutor.sol\":5989:6004  block.timestamp */\n      timestamp\n        /* \"contracts/Omnidex-incentives/proposals/ProposalIncentivesExecutor.sol\":2020:2027  7776000 */\n      0x76a700\n        /* \"contracts/Omnidex-incentives/proposals/ProposalIncentivesExecutor.sol\":5989:6028  block.timestamp + DISTRIBUTION_DURATION */\n      add\n      swap1\n        /* \"contracts/Omnidex-incentives/proposals/ProposalIncentivesExecutor.sol\":5949:6029  incentivesController.setDistributionEnd(block.timestamp + DISTRIBUTION_DURATION) */\n      0x04\n      add\n      tag_93\n      jump\t// in\n    tag_92:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_94\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_94:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_96\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_96:\n      pop\n      pop\n      pop\n      pop\n        /* \"contracts/Omnidex-incentives/proposals/ProposalIncentivesExecutor.sol\":2143:6035  function execute(\r... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n    tag_12:\n      mload(0x40)\n      dup1\n      0xc0\n      add\n      0x40\n      mstore\n      dup1\n      0x06\n      swap1\n      0x20\n      dup3\n      mul\n      dup1\n      calldatasize\n      dup4\n      calldatacopy\n      pop\n      swap2\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n    tag_63:\n      mload(0x40)\n      dup1\n      0x0180\n      add\n      0x40\n      mstore\n      dup1\n      tag_97\n      tag_98\n      jump\t// in\n    tag_97:\n      dup2\n      mstore\n      0x00\n      0x20\n      dup3\n      add\n      dup2\n      swap1\n      mstore\n      0x40\n      dup3\n      add\n      dup2\n      swap1\n      mstore\n      0x60\n      dup3\n      add\n      dup2\n      swap1\n      mstore\n      0x80\n      dup3\n      add\n      dup2\n      swap1\n      mstore\n      0xa0\n      dup3\n      add\n      dup2\n      swap1\n      mstore\n      0xc0\n      dup3\n      add\n      dup2\n      swap1\n      mstore\n      0xe0\n      dup3\n      add\n      dup2\n      swap1\n      mstore\n      0x0100\n      dup3\n      add\n      dup2\n      swap1\n      mstore\n      0x0120\n      dup3\n      add\n      dup2\n      swap1\n      mstore\n      0x0140\n      dup3\n      add\n      dup2\n      swap1\n      mstore\n      0x0160\n      swap1\n      swap2\n      add\n      mstore\n      swap1\n      jump\t// out\n    tag_98:\n      mload(0x40)\n      dup1\n      0x20\n      add\n      0x40\n      mstore\n      dup1\n      0x00\n      dup2\n      mstore\n      pop\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":14:156   */\n    tag_100:\n        /* \"#utility.yul\":95:108   */\n      dup1\n      mload\n        /* \"#utility.yul\":117:150   */\n      tag_102\n        /* \"#utility.yul\":95:108   */\n      dup2\n        /* \"#utility.yul\":117:150   */\n      tag_103\n      jump\t// in\n    tag_102:\n        /* \"#utility.yul\":76:156   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":161:926   */\n    tag_104:\n      0x00\n        /* \"#utility.yul\":269:272   */\n      dup3\n        /* \"#utility.yul\":262:266   */\n      0x1f\n        /* \"#utility.yul\":254:260   */\n      dup4\n        /* \"#utility.yul\":250:267   */\n      add\n        /* \"#utility.yul\":246:273   */\n      slt\n        /* \"#utility.yul\":236:238   */\n      tag_106\n      jumpi\n        /* \"#utility.yul\":291:296   */\n      dup1\n        /* \"#utility.yul\":284:289   */\n      dup2\n        /* \"#utility.yul\":277:297   */\n      revert\n        /* \"#utility.yul\":236:238   */\n    tag_106:\n        /* \"#utility.yul\":328:330   */\n      0x40\n        /* \"#utility.yul\":322:331   */\n      mload\n        /* \"#utility.yul\":370:373   */\n      0xc0\n        /* \"#utility.yul\":362:368   */\n      dup2\n        /* \"#utility.yul\":358:374   */\n      add\n        /* \"#utility.yul\":440:446   */\n      dup2\n        /* \"#utility.yul\":428:438   */\n      dup2\n        /* \"#utility.yul\":425:447   */\n      lt\n        /* \"#utility.yul\":404:422   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":392:402   */\n      dup3\n        /* \"#utility.yul\":389:423   */\n      gt\n        /* \"#utility.yul\":386:448   */\n      or\n        /* \"#utility.yul\":383:385   */\n      iszero\n      tag_107\n      jumpi\n        /* \"#utility.yul\":451:460   */\n      invalid\n        /* \"#utility.yul\":383:385   */\n    tag_107:\n        /* \"#utility.yul\":478:480   */\n      0x40\n        /* \"#utility.yul\":471:493   */\n      mstore\n        /* \"#utility.yul\":511:517   */\n      swap1\n      pop\n      dup1\n        /* \"#utility.yul\":563:569   */\n      dup3\n        /* \"#utility.yul\":596:599   */\n      0xc0\n        /* \"#utility.yul\":584:600   */\n      dup2\n      add\n        /* \"#utility.yul\":581:606   */\n      dup6\n      lt\n        /* \"#utility.yul\":578:580   */\n      iszero\n      tag_108\n      jumpi\n        /* \"#utility.yul\":619:620   */\n      0x00\n        /* \"#utility.yul\":616:617   */\n      dup1\n        /* \"#utility.yul\":609:621   */\n      revert\n        /* \"#utility.yul\":578:580   */\n    tag_108:\n        /* \"#utility.yul\":641:642   */\n      0x00\n        /* \"#utility.yul\":651:920   */\n    tag_109:\n        /* \"#utility.yul\":665:669   */\n      0x06\n        /* \"#utility.yul\":662:663   */\n      dup2\n        /* \"#utility.yul\":659:670   */\n      lt\n        /* \"#utility.yul\":651:920   */\n      iszero\n      tag_111\n      jumpi\n        /* \"#utility.yul\":738:741   */\n      dup2\n        /* \"#utility.yul\":725:742   */\n      calldataload\n        /* \"#utility.yul\":755:788   */\n      tag_112\n        /* \"#utility.yul\":782:787   */\n      dup2\n        /* \"#utility.yul\":755:788   */\n      tag_103\n      jump\t// in\n    tag_112:\n        /* \"#utility.yul\":801:819   */\n      dup4\n      mstore\n        /* \"#utility.yul\":842:846   */\n      0x20\n        /* \"#utility.yul\":866:878   */\n      swap3\n      dup4\n      add\n      swap3\n        /* \"#utility.yul\":898:910   */\n      swap2\n      swap1\n      swap2\n      add\n      swap1\n        /* \"#utility.yul\":685:686   */\n      0x01\n        /* \"#utility.yul\":678:687   */\n      add\n        /* \"#utility.yul\":651:920   */\n      jump(tag_109)\n    tag_111:\n        /* \"#utility.yul\":655:658   */\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":226:926   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":931:1359   */\n    tag_113:\n      0x00\n        /* \"#utility.yul\":1063:1067   */\n      0x20\n        /* \"#utility.yul\":1051:1060   */\n      dup3\n        /* \"#utility.yul\":1046:1049   */\n      dup5\n        /* \"#utility.yul\":1042:1061   */\n      sub\n        /* \"#utility.yul\":1038:1068   */\n      slt\n        /* \"#utility.yul\":1035:1037   */\n      iszero\n      tag_115\n      jumpi\n        /* \"#utility.yul\":1085:1090   */\n      dup1\n        /* \"#utility.yul\":1078:1083   */\n      dup2\n        /* \"#utility.yul\":1071:1091   */\n      revert\n        /* \"#utility.yul\":1035:1037   */\n    tag_115:\n        /* \"#utility.yul\":1122:1124   */\n      0x40\n        /* \"#utility.yul\":1116:1125   */\n      mload\n        /* \"#utility.yul\":1164:1168   */\n      0x20\n        /* \"#utility.yul\":1156:1162   */\n      dup2\n        /* \"#utility.yul\":1152:1169   */\n      add\n        /* \"#utility.yul\":1235:1241   */\n      dup2\n        /* \"#utility.yul\":1223:1233   */\n      dup2\n        /* \"#utility.yul\":1220:1242   */\n      lt\n        /* \"#utility.yul\":1199:1217   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":1187:1197   */\n      dup3\n        /* \"#utility.yul\":1184:1218   */\n      gt\n        /* \"#utility.yul\":1181:1243   */\n      or\n        /* \"#utility.yul\":1178:1180   */\n      iszero\n      tag_116\n      jumpi\n        /* \"#utility.yul\":1246:1255   */\n      invalid\n        /* \"#utility.yul\":1178:1180   */\n    tag_116:\n        /* \"#utility.yul\":1273:1275   */\n      0x40\n        /* \"#utility.yul\":1266:1288   */\n      mstore\n        /* \"#utility.yul\":1336:1352   */\n      swap2\n      mload\n        /* \"#utility.yul\":1321:1353   */\n      dup3\n      mstore\n      pop\n        /* \"#utility.yul\":1306:1312   */\n      swap2\n        /* \"#utility.yul\":1025:1359   */\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1364:1558   */\n    tag_117:\n        /* \"#utility.yul\":1445:1458   */\n      dup1\n      mload\n        /* \"#utility.yul\":1498:1532   */\n      0xffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":1487:1533   */\n      dup2\n      and\n        /* \"#utility.yul\":1477:1534   */\n      dup2\n      eq\n        /* \"#utility.yul\":1467:1469   */\n      tag_102\n      jumpi\n        /* \"#utility.yul\":1548:1549   */\n      0x00\n        /* \"#utility.yul\":1545:1546   */\n      dup1\n        /* \"#utility.yul\":1538:1550   */\n      revert\n        /* \"#utility.yul\":1563:1734   */\n    tag_120:\n        /* \"#utility.yul\":1643:1656   */\n      dup1\n      mload\n        /* \"#utility.yul\":1696:1708   */\n      0xffffffffff\n        /* \"#utility.yul\":1685:1709   */\n      dup2\n      and\n        /* \"#utility.yul\":1675:1710   */\n      dup2\n      eq\n        /* \"#utility.yul\":1665:1667   */\n      tag_102\n      jumpi\n        /* \"#utility.yul\":1724:1725   */\n      0x00\n        /* \"#utility.yul\":1721:1722   */\n      dup1\n        /* \"#utility.yul\":1714:1726   */\n      revert\n        /* \"#utility.yul\":1739:1901   */\n    tag_123:\n        /* \"#utility.yul\":1818:1831   */\n      dup1\n      mload\n        /* \"#utility.yul\":1871:1875   */\n      0xff\n        /* \"#utility.yul\":1860:1876   */\n      dup2\n      and\n        /* \"#utility.yul\":1850:1877   */\n      dup2\n      eq\n        /* \"#utility.yul\":1840:1842   */\n      tag_102\n      jumpi\n        /* \"#utility.yul\":1891:1892   */\n      0x00\n        /* \"#utility.yul\":1888:1889   */\n      dup1\n        /* \"#utility.yul\":1881:1893   */\n      revert\n        /* \"#utility.yul\":1906:2169   */\n    tag_49:\n      0x00\n        /* \"#utility.yul\":2029:2031   */\n      0x20\n        /* \"#utility.yul\":2017:2026   */\n      dup3\n        /* \"#utility.yul\":2008:2015   */\n      dup5\n        /* \"#utility.yul\":2004:2027   */\n      sub\n        /* \"#utility.yul\":2000:2032   */\n      slt\n        /* \"#utility.yul\":1997:1999   */\n      iszero\n      tag_127\n      jumpi\n        /* \"#utility.yul\":2050:2056   */\n      dup1\n        /* \"#utility.yul\":2042:2048   */\n      dup2\n        /* \"#utility.yul\":2035:2057   */\n      revert\n        /* \"#utility.yul\":1997:1999   */\n    tag_127:\n        /* \"#utility.yul\":2087:2096   */\n      dup2\n        /* \"#utility.yul\":2081:2097   */\n      mload\n        /* \"#utility.yul\":2106:2139   */\n      tag_128\n        /* \"#utility.yul\":2133:2138   */\n      dup2\n        /* \"#utility.yul\":2106:2139   */\n      tag_103\n      jump\t// in\n    tag_128:\n        /* \"#utility.yul\":2158:2163   */\n      swap4\n        /* \"#utility.yul\":1987:2169   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2174:2532   */\n    tag_6:\n      0x00\n      dup1\n        /* \"#utility.yul\":2349:2352   */\n      0x0180\n        /* \"#utility.yul\":2337:2346   */\n      dup4\n        /* \"#utility.yul\":2328:2335   */\n      dup6\n        /* \"#utility.yul\":2324:2347   */\n      sub\n        /* \"#utility.yul\":2320:2353   */\n      slt\n        /* \"#utility.yul\":2317:2319   */\n      iszero\n      tag_130\n      jumpi\n        /* \"#utility.yul\":2371:2377   */\n      dup1\n        /* \"#utility.yul\":2363:2369   */\n      dup2\n        /* \"#utility.yul\":2356:2378   */\n      revert\n        /* \"#utility.yul\":2317:2319   */\n    tag_130:\n        /* \"#utility.yul\":2399:2448   */\n      tag_131\n        /* \"#utility.yul\":2440:2447   */\n      dup5\n        /* \"#utility.yul\":2429:2438   */\n      dup5\n        /* \"#utility.yul\":2399:2448   */\n      tag_104\n      jump\t// in\n    tag_131:\n        /* \"#utility.yul\":2389:2448   */\n      swap2\n      pop\n        /* \"#utility.yul\":2467:2526   */\n      tag_132\n        /* \"#utility.yul\":2518:2525   */\n      dup5\n        /* \"#utility.yul\":2512:2515   */\n      0xc0\n        /* \"#utility.yul\":2501:2510   */\n      dup6\n        /* \"#utility.yul\":2497:2516   */\n      add\n        /* \"#utility.yul\":2467:2526   */\n      tag_104\n      jump\t// in\n    tag_132:\n        /* \"#utility.yul\":2457:2526   */\n      swap1\n      pop\n        /* \"#utility.yul\":2307:2532   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2537:3926   */\n    tag_71:\n      0x00\n        /* \"#utility.yul\":2666:2669   */\n      0x0180\n        /* \"#utility.yul\":2710:2712   */\n      dup1\n        /* \"#utility.yul\":2698:2707   */\n      dup4\n        /* \"#utility.yul\":2689:2696   */\n      dup6\n        /* \"#utility.yul\":2685:2708   */\n      sub\n        /* \"#utility.yul\":2681:2713   */\n      slt\n        /* \"#utility.yul\":2678:2680   */\n      iszero\n      tag_134\n      jumpi\n        /* \"#utility.yul\":2731:2737   */\n      dup2\n        /* \"#utility.yul\":2723:2729   */\n      dup3\n        /* \"#utility.yul\":2716:2738   */\n      revert\n        /* \"#utility.yul\":2678:2680   */\n    tag_134:\n        /* \"#utility.yul\":2762:2780   */\n      tag_135\n        /* \"#utility.yul\":2777:2779   */\n      dup2\n        /* \"#utility.yul\":2762:2780   */\n      tag_136\n      jump\t// in\n    tag_135:\n        /* \"#utility.yul\":2749:2780   */\n      swap1\n      pop\n        /* \"#utility.yul\":2803:2878   */\n      tag_137\n        /* \"#utility.yul\":2870:2877   */\n      dup5\n        /* \"#utility.yul\":2859:2868   */\n      dup5\n        /* \"#utility.yul\":2803:2878   */\n      tag_113\n      jump\t// in\n    tag_137:\n        /* \"#utility.yul\":2796:2801   */\n      dup2\n        /* \"#utility.yul\":2789:2879   */\n      mstore\n        /* \"#utility.yul\":2911:2962   */\n      tag_138\n        /* \"#utility.yul\":2958:2960   */\n      0x20\n        /* \"#utility.yul\":2947:2956   */\n      dup5\n        /* \"#utility.yul\":2943:2961   */\n      add\n        /* \"#utility.yul\":2911:2962   */\n      tag_117\n      jump\t// in\n    tag_138:\n        /* \"#utility.yul\":2906:2908   */\n      0x20\n        /* \"#utility.yul\":2899:2904   */\n      dup3\n        /* \"#utility.yul\":2895:2909   */\n      add\n        /* \"#utility.yul\":2888:2963   */\n      mstore\n        /* \"#utility.yul\":2995:3046   */\n      tag_139\n        /* \"#utility.yul\":3042:3044   */\n      0x40\n        /* \"#utility.yul\":3031:3040   */\n      dup5\n        /* \"#utility.yul\":3027:3045   */\n      add\n        /* \"#utility.yul\":2995:3046   */\n      tag_117\n      jump\t// in\n    tag_139:\n        /* \"#utility.yul\":2990:2992   */\n      0x40\n        /* \"#utility.yul\":2983:2988   */\n      dup3\n        /* \"#utility.yul\":2979:2993   */\n      add\n        /* \"#utility.yul\":2972:3047   */\n      mstore\n        /* \"#utility.yul\":3079:3130   */\n      tag_140\n        /* \"#utility.yul\":3126:3128   */\n      0x60\n        /* \"#utility.yul\":3115:3124   */\n      dup5\n        /* \"#utility.yul\":3111:3129   */\n      add\n        /* \"#utility.yul\":3079:3130   */\n      tag_117\n      jump\t// in\n    tag_140:\n        /* \"#utility.yul\":3074:3076   */\n      0x60\n        /* \"#utility.yul\":3067:3072   */\n      dup3\n        /* \"#utility.yul\":3063:3077   */\n      add\n        /* \"#utility.yul\":3056:3131   */\n      mstore\n        /* \"#utility.yul\":3164:3216   */\n      tag_141\n        /* \"#utility.yul\":3211:3214   */\n      0x80\n        /* \"#utility.yul\":3200:3209   */\n      dup5\n        /* \"#utility.yul\":3196:3215   */\n      add\n        /* \"#utility.yul\":3164:3216   */\n      tag_117\n      jump\t// in\n    tag_141:\n        /* \"#utility.yul\":3158:3161   */\n      0x80\n        /* \"#utility.yul\":3151:3156   */\n      dup3\n        /* \"#utility.yul\":3147:3162   */\n      add\n        /* \"#utility.yul\":3140:3217   */\n      mstore\n        /* \"#utility.yul\":3250:3302   */\n      tag_142\n        /* \"#utility.yul\":3297:3300   */\n      0xa0\n        /* \"#utility.yul\":3286:3295   */\n      dup5\n        /* \"#utility.yul\":3282:3301   */\n      add\n        /* \"#utility.yul\":3250:3302   */\n      tag_117\n      jump\t// in\n    tag_142:\n        /* \"#utility.yul\":3244:3247   */\n      0xa0\n        /* \"#utility.yul\":3237:3242   */\n      dup3\n        /* \"#utility.yul\":3233:3248   */\n      add\n        /* \"#utility.yul\":3226:3303   */\n      mstore\n        /* \"#utility.yul\":3336:3387   */\n      tag_143\n        /* \"#utility.yul\":3382:3385   */\n      0xc0\n        /* \"#utility.yul\":3371:3380   */\n      dup5\n        /* \"#utility.yul\":3367:3386   */\n      add\n        /* \"#utility.yul\":3336:3387   */\n      tag_120\n      jump\t// in\n    tag_143:\n        /* \"#utility.yul\":3330:3333   */\n      0xc0\n        /* \"#utility.yul\":3323:3328   */\n      dup3\n        /* \"#utility.yul\":3319:3334   */\n      add\n        /* \"#utility.yul\":3312:3388   */\n      mstore\n        /* \"#utility.yul\":3421:3473   */\n      tag_144\n        /* \"#utility.yul\":3468:3471   */\n      0xe0\n        /* \"#utility.yul\":3457:3466   */\n      dup5\n        /* \"#utility.yul\":3453:3472   */\n      add\n        /* \"#utility.yul\":3421:3473   */\n      tag_100\n      jump\t// in\n    tag_144:\n        /* \"#utility.yul\":3415:3418   */\n      0xe0\n        /* \"#utility.yul\":3408:3413   */\n      dup3\n        /* \"#utility.yul\":3404:3419   */\n      add\n        /* \"#utility.yul\":3397:3474   */\n      mstore\n        /* \"#utility.yul\":3493:3496   */\n      0x0100\n        /* \"#utility.yul\":3528:3579   */\n      tag_145\n        /* \"#utility.yul\":3575:3577   */\n      dup2\n        /* \"#utility.yul\":3564:3573   */\n      dup6\n        /* \"#utility.yul\":3560:3578   */\n      add\n        /* \"#utility.yul\":3528:3579   */\n      tag_100\n      jump\t// in\n    tag_145:\n        /* \"#utility.yul\":3512:3526   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":3505:3580   */\n      mstore\n        /* \"#utility.yul\":3599:3602   */\n      0x0120\n        /* \"#utility.yul\":3634:3685   */\n      tag_146\n        /* \"#utility.yul\":3666:3684   */\n      dup5\n      dup3\n      add\n        /* \"#utility.yul\":3634:3685   */\n      tag_100\n      jump\t// in\n    tag_146:\n        /* \"#utility.yul\":3618:3632   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":3611:3686   */\n      mstore\n        /* \"#utility.yul\":3705:3708   */\n      0x0140\n        /* \"#utility.yul\":3740:3791   */\n      tag_147\n        /* \"#utility.yul\":3772:3790   */\n      dup5\n      dup3\n      add\n        /* \"#utility.yul\":3740:3791   */\n      tag_100\n      jump\t// in\n    tag_147:\n        /* \"#utility.yul\":3724:3738   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":3717:3792   */\n      mstore\n        /* \"#utility.yul\":3811:3814   */\n      0x0160\n        /* \"#utility.yul\":3846:3895   */\n      tag_148\n        /* \"#utility.yul\":3876:3894   */\n      dup5\n      dup3\n      add\n        /* \"#utility.yul\":3846:3895   */\n      tag_123\n      jump\t// in\n    tag_148:\n        /* \"#utility.yul\":3830:3844   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":3823:3896   */\n      mstore\n        /* \"#utility.yul\":3834:3839   */\n      swap4\n        /* \"#utility.yul\":2646:3926   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3931:4142   */\n    tag_66:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":4103:4135   */\n      swap2\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":4085:4136   */\n      dup2\n      mstore\n        /* \"#utility.yul\":4073:4075   */\n      0x20\n        /* \"#utility.yul\":4058:4076   */\n      add\n      swap1\n        /* \"#utility.yul\":4040:4142   */\n      jump\t// out\n        /* \"#utility.yul\":4147:4459   */\n    tag_75:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":4385:4400   */\n      swap3\n      dup4\n      and\n        /* \"#utility.yul\":4367:4401   */\n      dup2\n      mstore\n        /* \"#utility.yul\":4437:4452   */\n      swap2\n      and\n        /* \"#utility.yul\":4432:4434   */\n      0x20\n        /* \"#utility.yul\":4417:4435   */\n      dup3\n      add\n        /* \"#utility.yul\":4410:4453   */\n      mstore\n        /* \"#utility.yul\":4317:4319   */\n      0x40\n        /* \"#utility.yul\":4302:4320   */\n      add\n      swap1\n        /* \"#utility.yul\":4284:4459   */\n      jump\t// out\n        /* \"#utility.yul\":4464:5648   */\n    tag_88:\n        /* \"#utility.yul\":4732:4734   */\n      0x40\n        /* \"#utility.yul\":4744:4765   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":4814:4827   */\n      dup4\n      mload\n        /* \"#utility.yul\":4717:4735   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":4836:4858   */\n      dup2\n      swap1\n      mstore\n        /* \"#utility.yul\":4464:5648   */\n      0x00\n      swap1\n        /* \"#utility.yul\":4911:4915   */\n      0x20\n      swap1\n        /* \"#utility.yul\":4889:4891   */\n      0x60\n        /* \"#utility.yul\":4874:4892   */\n      dup5\n      add\n      swap1\n        /* \"#utility.yul\":4938:4953   */\n      dup3\n      dup8\n      add\n        /* \"#utility.yul\":4464:5648   */\n      dup5\n        /* \"#utility.yul\":4984:5179   */\n    tag_152:\n        /* \"#utility.yul\":4998:5004   */\n      dup3\n        /* \"#utility.yul\":4995:4996   */\n      dup2\n        /* \"#utility.yul\":4992:5005   */\n      lt\n        /* \"#utility.yul\":4984:5179   */\n      iszero\n      tag_154\n      jumpi\n        /* \"#utility.yul\":5063:5076   */\n      dup2\n      mload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":5059:5098   */\n      and\n        /* \"#utility.yul\":5047:5099   */\n      dup5\n      mstore\n        /* \"#utility.yul\":5119:5131   */\n      swap3\n      dup5\n      add\n      swap3\n        /* \"#utility.yul\":5154:5169   */\n      swap1\n      dup5\n      add\n      swap1\n        /* \"#utility.yul\":5095:5096   */\n      0x01\n        /* \"#utility.yul\":5013:5022   */\n      add\n        /* \"#utility.yul\":4984:5179   */\n      jump(tag_152)\n    tag_154:\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":5215:5234   */\n      dup4\n      dup2\n      sub\n        /* \"#utility.yul\":5195:5213   */\n      dup3\n      dup6\n      add\n        /* \"#utility.yul\":5188:5235   */\n      mstore\n        /* \"#utility.yul\":5285:5298   */\n      dup5\n      mload\n        /* \"#utility.yul\":5307:5328   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":5383:5398   */\n      dup6\n      dup4\n      add\n      swap2\n        /* \"#utility.yul\":5346:5358   */\n      dup4\n      add\n      swap1\n        /* \"#utility.yul\":5418:5422   */\n      dup5\n        /* \"#utility.yul\":5431:5620   */\n    tag_155:\n        /* \"#utility.yul\":5447:5455   */\n      dup2\n        /* \"#utility.yul\":5442:5445   */\n      dup2\n        /* \"#utility.yul\":5439:5456   */\n      lt\n        /* \"#utility.yul\":5431:5620   */\n      iszero\n      tag_157\n      jumpi\n        /* \"#utility.yul\":5516:5531   */\n      dup4\n      mload\n        /* \"#utility.yul\":5502:5532   */\n      dup4\n      mstore\n        /* \"#utility.yul\":5593:5610   */\n      swap3\n      dup5\n      add\n      swap3\n        /* \"#utility.yul\":5554:5568   */\n      swap2\n      dup5\n      add\n      swap2\n        /* \"#utility.yul\":5475:5476   */\n      0x01\n        /* \"#utility.yul\":5466:5477   */\n      add\n        /* \"#utility.yul\":5431:5620   */\n      jump(tag_155)\n    tag_157:\n      pop\n        /* \"#utility.yul\":5637:5642   */\n      swap1\n      swap8\n        /* \"#utility.yul\":4693:5648   */\n      swap7\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5653:5927   */\n    tag_28:\n        /* \"#utility.yul\":5827:5852   */\n      swap2\n      dup3\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":5888:5920   */\n      and\n        /* \"#utility.yul\":5883:5885   */\n      0x20\n        /* \"#utility.yul\":5868:5886   */\n      dup3\n      add\n        /* \"#utility.yul\":5861:5921   */\n      mstore\n        /* \"#utility.yul\":5815:5817   */\n      0x40\n        /* \"#utility.yul\":5800:5818   */\n      add\n      swap1\n        /* \"#utility.yul\":5782:5927   */\n      jump\t// out\n        /* \"#utility.yul\":5932:6332   */\n    tag_61:\n        /* \"#utility.yul\":6134:6136   */\n      0x20\n        /* \"#utility.yul\":6116:6137   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":6173:6175   */\n      0x24\n        /* \"#utility.yul\":6153:6171   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":6146:6176   */\n      mstore\n        /* \"#utility.yul\":6212:6246   */\n      0x4465627420546f6b656e20756e6465726c79696e6720646f6573206e6f74206d\n        /* \"#utility.yul\":6207:6209   */\n      0x40\n        /* \"#utility.yul\":6192:6210   */\n      dup3\n      add\n        /* \"#utility.yul\":6185:6247   */\n      mstore\n      shl(0xe3, 0x0c2e8c6d)\n        /* \"#utility.yul\":6278:6280   */\n      0x60\n        /* \"#utility.yul\":6263:6281   */\n      dup3\n      add\n        /* \"#utility.yul\":6256:6290   */\n      mstore\n        /* \"#utility.yul\":6322:6325   */\n      0x80\n        /* \"#utility.yul\":6307:6326   */\n      add\n      swap1\n        /* \"#utility.yul\":6106:6332   */\n      jump\t// out\n        /* \"#utility.yul\":6337:6693   */\n    tag_52:\n        /* \"#utility.yul\":6539:6541   */\n      0x20\n        /* \"#utility.yul\":6521:6542   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":6558:6576   */\n      dup2\n      dup2\n      add\n        /* \"#utility.yul\":6551:6581   */\n      mstore\n        /* \"#utility.yul\":6617:6651   */\n      0x4f546f6b656e20756e6465726c79696e6720646f6573206e6f74206d61746368\n        /* \"#utility.yul\":6612:6614   */\n      0x40\n        /* \"#utility.yul\":6597:6615   */\n      dup3\n      add\n        /* \"#utility.yul\":6590:6652   */\n      mstore\n        /* \"#utility.yul\":6684:6686   */\n      0x60\n        /* \"#utility.yul\":6669:6687   */\n      add\n      swap1\n        /* \"#utility.yul\":6511:6693   */\n      jump\t// out\n        /* \"#utility.yul\":7048:7225   */\n    tag_93:\n        /* \"#utility.yul\":7194:7219   */\n      swap1\n      dup2\n      mstore\n        /* \"#utility.yul\":7182:7184   */\n      0x20\n        /* \"#utility.yul\":7167:7185   */\n      add\n      swap1\n        /* \"#utility.yul\":7149:7225   */\n      jump\t// out\n        /* \"#utility.yul\":7230:7472   */\n    tag_136:\n        /* \"#utility.yul\":7300:7302   */\n      0x40\n        /* \"#utility.yul\":7294:7303   */\n      mload\n        /* \"#utility.yul\":7330:7347   */\n      dup2\n      dup2\n      add\n        /* \"#utility.yul\":7377:7395   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":7362:7396   */\n      dup2\n      gt\n        /* \"#utility.yul\":7398:7420   */\n      dup3\n      dup3\n      lt\n        /* \"#utility.yul\":7359:7421   */\n      or\n        /* \"#utility.yul\":7356:7358   */\n      iszero\n      tag_164\n      jumpi\n        /* \"#utility.yul\":7424:7433   */\n      invalid\n        /* \"#utility.yul\":7356:7358   */\n    tag_164:\n        /* \"#utility.yul\":7451:7453   */\n      0x40\n        /* \"#utility.yul\":7444:7466   */\n      mstore\n        /* \"#utility.yul\":7274:7472   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7477:7610   */\n    tag_103:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":7554:7585   */\n      dup2\n      and\n        /* \"#utility.yul\":7544:7586   */\n      dup2\n      eq\n        /* \"#utility.yul\":7534:7536   */\n      tag_166\n      jumpi\n        /* \"#utility.yul\":7600:7601   */\n      0x00\n        /* \"#utility.yul\":7597:7598   */\n      dup1\n        /* \"#utility.yul\":7590:7602   */\n      revert\n        /* \"#utility.yul\":7534:7536   */\n    tag_166:\n        /* \"#utility.yul\":7524:7610   */\n      pop\n      jump\t// out\n\n    auxdata: 0xa26469706673582212202e4301c9a8f2aff751a98ff0b856abdc80fcb3501ebd14ff2fe7c54b05b14a3364736f6c63430007050033\n}\n",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50610d36806100206000396000f3fe608060405234801561001057600080fd5b506004361061002b5760003560e01c80638314b22114610030575b600080fd5b61004361003e366004610a55565b610045565b005b60408051600c8082526101a0820190925260009160609190602082016101808036833701905050905061007661088c565b506040805160c081018252736b175474e89094c44da98b954eedeac495271d0f815273056fd409e1d7a124bd7017459dfea2f387b6d5cd602082015273a0b86991c6218b36c1d19d4a2e9eb0ce3606eb488183015273dac17f958d2ee523a2206206994597c13d831ec7606080830191909152732260fac5e5542a773aa44fbcfedf7c193bc2c599608083015273c02aaa39b223fe8d0a0e5c4f27ead9083c756cc260a08301528251600c8082526101a08201909452919290919081602001602082028036833701905050905066060f9d63c6caf88160008151811061015857fe5b60200260200101818152505066060f9d63c6caf88160018151811061017957fe5b6020026020010181815250506554873ca5c45f8160028151811061019957fe5b6020026020010181815250506554873ca5c45f816003815181106101b957fe5b6020026020010181815250506612cc525d318894816004815181106101da57fe5b6020026020010181815250506612cc525d318894816005815181106101fb57fe5b602002602001018181525050660bb38afc0b0f7c8160068151811061021c57fe5b602002602001018181525050660bb38afc0b0f7c8160078151811061023d57fe5b6020026020010181815250506607170abcd5ea8c8160088151811061025e57fe5b602002602001018181525050655f874d4ea08e8160098151811061027e57fe5b6020026020010181815250506608c1da100749be81600a8151811061029f57fe5b6020026020010181815250506575fe00d7f66881600b815181106102bf57fe5b602090810291909101015260405163ca446dd960e01b8152732f75feda7423d8b85988d9545428d00f3213cf0090738761e889ad797bde3bb2b6561982fd1ca4118872907364968b59dd39128c287d76be50015161d10c08c290819063ca446dd990610351907f703c2c8634bed68d98c029c18f310e7f7ec0e5d6342c590190b3cb8b3ba54532908690600401610c2b565b600060405180830381600087803b15801561036b57600080fd5b505af115801561037f573d6000803e3d6000fd5b505060405163177314a360e21b81526001600160a01b0384169250635dcc528c91506103e5907f703c2c8634bed68d98c029c18f310e7f7ec0e5d6342c590190b3cb8b3ba545329073554928b31c4ef45862195b0233a3d689b08552a490600401610c2b565b600060405180830381600087803b1580156103ff57600080fd5b505af1158015610413573d6000803e3d6000fd5b5061042692505050565b60405180910390fd5b60005b60068110156107bd5785816006811061043e57fe5b60200201516001600160a01b03168a826006811061045857fe5b60200201516001600160a01b031663b16a19de6040518163ffffffff1660e01b815260040160206040518083038186803b15801561049557600080fd5b505afa1580156104a9573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104cd9190610a32565b6001600160a01b0316146104f35760405162461bcd60e51b815260040161041d90610c86565b8581600681106104ff57fe5b60200201516001600160a01b031689826006811061051957fe5b60200201516001600160a01b031663b16a19de6040518163ffffffff1660e01b815260040160206040518083038186803b15801561055657600080fd5b505afa15801561056a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061058e9190610a32565b6001600160a01b0316146105b45760405162461bcd60e51b815260040161041d90610c42565b6105bc6108aa565b73a9ae6e3207bdcccb8f081ee0b4d0d2b4a79ea9846335ea6a758884600681106105e257fe5b60200201516040518263ffffffff1660e01b81526004016106039190610b7a565b6101806040518083038186803b15801561061c57600080fd5b505afa158015610630573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106549190610a8a565b9050846001600160a01b03166312e3ae1688846006811061067157fe5b60200201518d856006811061068257fe5b60200201516040518363ffffffff1660e01b81526004016106a4929190610b8e565b600060405180830381600087803b1580156106be57600080fd5b505af11580156106d2573d6000803e3d6000fd5b50505050846001600160a01b0316634d9782588884600681106106f157fe5b60200201518c856006811061070257fe5b60200201516040518363ffffffff1660e01b8152600401610724929190610b8e565b600060405180830381600087803b15801561073e57600080fd5b505af1158015610752573d6000803e3d6000fd5b505050508060e00151888a806001019b508151811061076d57fe5b6001600160a01b0390921660209283029190910190910152610120810151885160018b019a8a91811061079c57fe5b6001600160a01b039092166020928302919091019091015250600101610429565b50604051633cf8b8d960e11b81526001600160a01b038316906379f171b2906107ec9089908890600401610ba8565b600060405180830381600087803b15801561080657600080fd5b505af115801561081a573d6000803e3d6000fd5b50506040516339ccbdd360e01b81526001600160a01b03851692506339ccbdd3915061084f90426276a7000190600401610cbb565b600060405180830381600087803b15801561086957600080fd5b505af115801561087d573d6000803e3d6000fd5b50505050505050505050505050565b6040518060c001604052806006906020820280368337509192915050565b6040518061018001604052806108be610915565b815260006020820181905260408201819052606082018190526080820181905260a0820181905260c0820181905260e082018190526101008201819052610120820181905261014082018190526101609091015290565b6040518060200160405280600081525090565b805161093381610ce8565b919050565b600082601f830112610948578081fd5b60405160c0810181811067ffffffffffffffff8211171561096557fe5b6040529050808260c0810185101561097c57600080fd5b60005b60068110156109a857813561099381610ce8565b8352602092830192919091019060010161097f565b50505092915050565b6000602082840312156109c2578081fd5b6040516020810181811067ffffffffffffffff821117156109df57fe5b6040529151825250919050565b80516fffffffffffffffffffffffffffffffff8116811461093357600080fd5b805164ffffffffff8116811461093357600080fd5b805160ff8116811461093357600080fd5b600060208284031215610a43578081fd5b8151610a4e81610ce8565b9392505050565b6000806101808385031215610a68578081fd5b610a728484610938565b9150610a818460c08501610938565b90509250929050565b6000610180808385031215610a9d578182fd5b610aa681610cc4565b9050610ab284846109b1565b8152610ac0602084016109ec565b6020820152610ad1604084016109ec565b6040820152610ae2606084016109ec565b6060820152610af3608084016109ec565b6080820152610b0460a084016109ec565b60a0820152610b1560c08401610a0c565b60c0820152610b2660e08401610928565b60e0820152610100610b39818501610928565b90820152610120610b4b848201610928565b90820152610140610b5d848201610928565b90820152610160610b6f848201610a21565b908201529392505050565b6001600160a01b0391909116815260200190565b6001600160a01b0392831681529116602082015260400190565b604080825283519082018190526000906020906060840190828701845b82811015610bea5781516001600160a01b031684529284019290840190600101610bc5565b50505083810382850152845180825285830191830190845b81811015610c1e57835183529284019291840191600101610c02565b5090979650505050505050565b9182526001600160a01b0316602082015260400190565b60208082526024908201527f4465627420546f6b656e20756e6465726c79696e6720646f6573206e6f74206d6040820152630c2e8c6d60e31b606082015260800190565b6020808252818101527f4f546f6b656e20756e6465726c79696e6720646f6573206e6f74206d61746368604082015260600190565b90815260200190565b60405181810167ffffffffffffffff81118282101715610ce057fe5b604052919050565b6001600160a01b0381168114610cfd57600080fd5b5056fea26469706673582212202e4301c9a8f2aff751a98ff0b856abdc80fcb3501ebd14ff2fe7c54b05b14a3364736f6c63430007050033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xD36 DUP1 PUSH2 0x20 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x2B JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8314B221 EQ PUSH2 0x30 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x43 PUSH2 0x3E CALLDATASIZE PUSH1 0x4 PUSH2 0xA55 JUMP JUMPDEST PUSH2 0x45 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0xC DUP1 DUP3 MSTORE PUSH2 0x1A0 DUP3 ADD SWAP1 SWAP3 MSTORE PUSH1 0x0 SWAP2 PUSH1 0x60 SWAP2 SWAP1 PUSH1 0x20 DUP3 ADD PUSH2 0x180 DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP POP SWAP1 POP PUSH2 0x76 PUSH2 0x88C JUMP JUMPDEST POP PUSH1 0x40 DUP1 MLOAD PUSH1 0xC0 DUP2 ADD DUP3 MSTORE PUSH20 0x6B175474E89094C44DA98B954EEDEAC495271D0F DUP2 MSTORE PUSH20 0x56FD409E1D7A124BD7017459DFEA2F387B6D5CD PUSH1 0x20 DUP3 ADD MSTORE PUSH20 0xA0B86991C6218B36C1D19D4A2E9EB0CE3606EB48 DUP2 DUP4 ADD MSTORE PUSH20 0xDAC17F958D2EE523A2206206994597C13D831EC7 PUSH1 0x60 DUP1 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH20 0x2260FAC5E5542A773AA44FBCFEDF7C193BC2C599 PUSH1 0x80 DUP4 ADD MSTORE PUSH20 0xC02AAA39B223FE8D0A0E5C4F27EAD9083C756CC2 PUSH1 0xA0 DUP4 ADD MSTORE DUP3 MLOAD PUSH1 0xC DUP1 DUP3 MSTORE PUSH2 0x1A0 DUP3 ADD SWAP1 SWAP5 MSTORE SWAP2 SWAP3 SWAP1 SWAP2 SWAP1 DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP POP SWAP1 POP PUSH7 0x60F9D63C6CAF8 DUP2 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x158 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 DUP2 MSTORE POP POP PUSH7 0x60F9D63C6CAF8 DUP2 PUSH1 0x1 DUP2 MLOAD DUP2 LT PUSH2 0x179 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 DUP2 MSTORE POP POP PUSH6 0x54873CA5C45F DUP2 PUSH1 0x2 DUP2 MLOAD DUP2 LT PUSH2 0x199 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 DUP2 MSTORE POP POP PUSH6 0x54873CA5C45F DUP2 PUSH1 0x3 DUP2 MLOAD DUP2 LT PUSH2 0x1B9 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 DUP2 MSTORE POP POP PUSH7 0x12CC525D318894 DUP2 PUSH1 0x4 DUP2 MLOAD DUP2 LT PUSH2 0x1DA JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 DUP2 MSTORE POP POP PUSH7 0x12CC525D318894 DUP2 PUSH1 0x5 DUP2 MLOAD DUP2 LT PUSH2 0x1FB JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 DUP2 MSTORE POP POP PUSH7 0xBB38AFC0B0F7C DUP2 PUSH1 0x6 DUP2 MLOAD DUP2 LT PUSH2 0x21C JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 DUP2 MSTORE POP POP PUSH7 0xBB38AFC0B0F7C DUP2 PUSH1 0x7 DUP2 MLOAD DUP2 LT PUSH2 0x23D JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 DUP2 MSTORE POP POP PUSH7 0x7170ABCD5EA8C DUP2 PUSH1 0x8 DUP2 MLOAD DUP2 LT PUSH2 0x25E JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 DUP2 MSTORE POP POP PUSH6 0x5F874D4EA08E DUP2 PUSH1 0x9 DUP2 MLOAD DUP2 LT PUSH2 0x27E JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 DUP2 MSTORE POP POP PUSH7 0x8C1DA100749BE DUP2 PUSH1 0xA DUP2 MLOAD DUP2 LT PUSH2 0x29F JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 DUP2 MSTORE POP POP PUSH6 0x75FE00D7F668 DUP2 PUSH1 0xB DUP2 MLOAD DUP2 LT PUSH2 0x2BF JUMPI INVALID JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MSTORE PUSH1 0x40 MLOAD PUSH4 0xCA446DD9 PUSH1 0xE0 SHL DUP2 MSTORE PUSH20 0x2F75FEDA7423D8B85988D9545428D00F3213CF00 SWAP1 PUSH20 0x8761E889AD797BDE3BB2B6561982FD1CA4118872 SWAP1 PUSH20 0x64968B59DD39128C287D76BE50015161D10C08C2 SWAP1 DUP2 SWAP1 PUSH4 0xCA446DD9 SWAP1 PUSH2 0x351 SWAP1 PUSH32 0x703C2C8634BED68D98C029C18F310E7F7EC0E5D6342C590190B3CB8B3BA54532 SWAP1 DUP7 SWAP1 PUSH1 0x4 ADD PUSH2 0xC2B JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x36B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x37F JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x40 MLOAD PUSH4 0x177314A3 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND SWAP3 POP PUSH4 0x5DCC528C SWAP2 POP PUSH2 0x3E5 SWAP1 PUSH32 0x703C2C8634BED68D98C029C18F310E7F7EC0E5D6342C590190B3CB8B3BA54532 SWAP1 PUSH20 0x554928B31C4EF45862195B0233A3D689B08552A4 SWAP1 PUSH1 0x4 ADD PUSH2 0xC2B JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x3FF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x413 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP PUSH2 0x426 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 JUMPDEST PUSH1 0x6 DUP2 LT ISZERO PUSH2 0x7BD JUMPI DUP6 DUP2 PUSH1 0x6 DUP2 LT PUSH2 0x43E JUMPI INVALID JUMPDEST PUSH1 0x20 MUL ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP11 DUP3 PUSH1 0x6 DUP2 LT PUSH2 0x458 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xB16A19DE PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x495 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x4A9 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x4CD SWAP2 SWAP1 PUSH2 0xA32 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x4F3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x41D SWAP1 PUSH2 0xC86 JUMP JUMPDEST DUP6 DUP2 PUSH1 0x6 DUP2 LT PUSH2 0x4FF JUMPI INVALID JUMPDEST PUSH1 0x20 MUL ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP10 DUP3 PUSH1 0x6 DUP2 LT PUSH2 0x519 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xB16A19DE PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x556 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x56A JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x58E SWAP2 SWAP1 PUSH2 0xA32 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x5B4 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x41D SWAP1 PUSH2 0xC42 JUMP JUMPDEST PUSH2 0x5BC PUSH2 0x8AA JUMP JUMPDEST PUSH20 0xA9AE6E3207BDCCCB8F081EE0B4D0D2B4A79EA984 PUSH4 0x35EA6A75 DUP9 DUP5 PUSH1 0x6 DUP2 LT PUSH2 0x5E2 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL ADD MLOAD PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x603 SWAP2 SWAP1 PUSH2 0xB7A JUMP JUMPDEST PUSH2 0x180 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x61C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x630 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x654 SWAP2 SWAP1 PUSH2 0xA8A JUMP JUMPDEST SWAP1 POP DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x12E3AE16 DUP9 DUP5 PUSH1 0x6 DUP2 LT PUSH2 0x671 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL ADD MLOAD DUP14 DUP6 PUSH1 0x6 DUP2 LT PUSH2 0x682 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL ADD MLOAD PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6A4 SWAP3 SWAP2 SWAP1 PUSH2 0xB8E JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x6BE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x6D2 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x4D978258 DUP9 DUP5 PUSH1 0x6 DUP2 LT PUSH2 0x6F1 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL ADD MLOAD DUP13 DUP6 PUSH1 0x6 DUP2 LT PUSH2 0x702 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL ADD MLOAD PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x724 SWAP3 SWAP2 SWAP1 PUSH2 0xB8E JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x73E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x752 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP DUP1 PUSH1 0xE0 ADD MLOAD DUP9 DUP11 DUP1 PUSH1 0x1 ADD SWAP12 POP DUP2 MLOAD DUP2 LT PUSH2 0x76D JUMPI INVALID JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND PUSH1 0x20 SWAP3 DUP4 MUL SWAP2 SWAP1 SWAP2 ADD SWAP1 SWAP2 ADD MSTORE PUSH2 0x120 DUP2 ADD MLOAD DUP9 MLOAD PUSH1 0x1 DUP12 ADD SWAP11 DUP11 SWAP2 DUP2 LT PUSH2 0x79C JUMPI INVALID JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND PUSH1 0x20 SWAP3 DUP4 MUL SWAP2 SWAP1 SWAP2 ADD SWAP1 SWAP2 ADD MSTORE POP PUSH1 0x1 ADD PUSH2 0x429 JUMP JUMPDEST POP PUSH1 0x40 MLOAD PUSH4 0x3CF8B8D9 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 PUSH4 0x79F171B2 SWAP1 PUSH2 0x7EC SWAP1 DUP10 SWAP1 DUP9 SWAP1 PUSH1 0x4 ADD PUSH2 0xBA8 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x806 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x81A JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x40 MLOAD PUSH4 0x39CCBDD3 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP3 POP PUSH4 0x39CCBDD3 SWAP2 POP PUSH2 0x84F SWAP1 TIMESTAMP PUSH3 0x76A700 ADD SWAP1 PUSH1 0x4 ADD PUSH2 0xCBB JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x869 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x87D JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0xC0 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x6 SWAP1 PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY POP SWAP2 SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH2 0x180 ADD PUSH1 0x40 MSTORE DUP1 PUSH2 0x8BE PUSH2 0x915 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x0 PUSH1 0x20 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x40 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x60 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x80 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0xA0 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0xC0 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0xE0 DUP3 ADD DUP2 SWAP1 MSTORE PUSH2 0x100 DUP3 ADD DUP2 SWAP1 MSTORE PUSH2 0x120 DUP3 ADD DUP2 SWAP1 MSTORE PUSH2 0x140 DUP3 ADD DUP2 SWAP1 MSTORE PUSH2 0x160 SWAP1 SWAP2 ADD MSTORE SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP SWAP1 JUMP JUMPDEST DUP1 MLOAD PUSH2 0x933 DUP2 PUSH2 0xCE8 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x948 JUMPI DUP1 DUP2 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH1 0xC0 DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x965 JUMPI INVALID JUMPDEST PUSH1 0x40 MSTORE SWAP1 POP DUP1 DUP3 PUSH1 0xC0 DUP2 ADD DUP6 LT ISZERO PUSH2 0x97C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 JUMPDEST PUSH1 0x6 DUP2 LT ISZERO PUSH2 0x9A8 JUMPI DUP2 CALLDATALOAD PUSH2 0x993 DUP2 PUSH2 0xCE8 JUMP JUMPDEST DUP4 MSTORE PUSH1 0x20 SWAP3 DUP4 ADD SWAP3 SWAP2 SWAP1 SWAP2 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x97F JUMP JUMPDEST POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x9C2 JUMPI DUP1 DUP2 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x9DF JUMPI INVALID JUMPDEST PUSH1 0x40 MSTORE SWAP2 MLOAD DUP3 MSTORE POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 MLOAD PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND DUP2 EQ PUSH2 0x933 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 MLOAD PUSH5 0xFFFFFFFFFF DUP2 AND DUP2 EQ PUSH2 0x933 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 MLOAD PUSH1 0xFF DUP2 AND DUP2 EQ PUSH2 0x933 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xA43 JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 MLOAD PUSH2 0xA4E DUP2 PUSH2 0xCE8 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x180 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xA68 JUMPI DUP1 DUP2 REVERT JUMPDEST PUSH2 0xA72 DUP5 DUP5 PUSH2 0x938 JUMP JUMPDEST SWAP2 POP PUSH2 0xA81 DUP5 PUSH1 0xC0 DUP6 ADD PUSH2 0x938 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x180 DUP1 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xA9D JUMPI DUP2 DUP3 REVERT JUMPDEST PUSH2 0xAA6 DUP2 PUSH2 0xCC4 JUMP JUMPDEST SWAP1 POP PUSH2 0xAB2 DUP5 DUP5 PUSH2 0x9B1 JUMP JUMPDEST DUP2 MSTORE PUSH2 0xAC0 PUSH1 0x20 DUP5 ADD PUSH2 0x9EC JUMP JUMPDEST PUSH1 0x20 DUP3 ADD MSTORE PUSH2 0xAD1 PUSH1 0x40 DUP5 ADD PUSH2 0x9EC JUMP JUMPDEST PUSH1 0x40 DUP3 ADD MSTORE PUSH2 0xAE2 PUSH1 0x60 DUP5 ADD PUSH2 0x9EC JUMP JUMPDEST PUSH1 0x60 DUP3 ADD MSTORE PUSH2 0xAF3 PUSH1 0x80 DUP5 ADD PUSH2 0x9EC JUMP JUMPDEST PUSH1 0x80 DUP3 ADD MSTORE PUSH2 0xB04 PUSH1 0xA0 DUP5 ADD PUSH2 0x9EC JUMP JUMPDEST PUSH1 0xA0 DUP3 ADD MSTORE PUSH2 0xB15 PUSH1 0xC0 DUP5 ADD PUSH2 0xA0C JUMP JUMPDEST PUSH1 0xC0 DUP3 ADD MSTORE PUSH2 0xB26 PUSH1 0xE0 DUP5 ADD PUSH2 0x928 JUMP JUMPDEST PUSH1 0xE0 DUP3 ADD MSTORE PUSH2 0x100 PUSH2 0xB39 DUP2 DUP6 ADD PUSH2 0x928 JUMP JUMPDEST SWAP1 DUP3 ADD MSTORE PUSH2 0x120 PUSH2 0xB4B DUP5 DUP3 ADD PUSH2 0x928 JUMP JUMPDEST SWAP1 DUP3 ADD MSTORE PUSH2 0x140 PUSH2 0xB5D DUP5 DUP3 ADD PUSH2 0x928 JUMP JUMPDEST SWAP1 DUP3 ADD MSTORE PUSH2 0x160 PUSH2 0xB6F DUP5 DUP3 ADD PUSH2 0xA21 JUMP JUMPDEST SWAP1 DUP3 ADD MSTORE SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND DUP2 MSTORE SWAP2 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 DUP1 DUP3 MSTORE DUP4 MLOAD SWAP1 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP1 PUSH1 0x20 SWAP1 PUSH1 0x60 DUP5 ADD SWAP1 DUP3 DUP8 ADD DUP5 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0xBEA JUMPI DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 MSTORE SWAP3 DUP5 ADD SWAP3 SWAP1 DUP5 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0xBC5 JUMP JUMPDEST POP POP POP DUP4 DUP2 SUB DUP3 DUP6 ADD MSTORE DUP5 MLOAD DUP1 DUP3 MSTORE DUP6 DUP4 ADD SWAP2 DUP4 ADD SWAP1 DUP5 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0xC1E JUMPI DUP4 MLOAD DUP4 MSTORE SWAP3 DUP5 ADD SWAP3 SWAP2 DUP5 ADD SWAP2 PUSH1 0x1 ADD PUSH2 0xC02 JUMP JUMPDEST POP SWAP1 SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST SWAP2 DUP3 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x24 SWAP1 DUP3 ADD MSTORE PUSH32 0x4465627420546F6B656E20756E6465726C79696E6720646F6573206E6F74206D PUSH1 0x40 DUP3 ADD MSTORE PUSH4 0xC2E8C6D PUSH1 0xE3 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 DUP2 ADD MSTORE PUSH32 0x4F546F6B656E20756E6465726C79696E6720646F6573206E6F74206D61746368 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP2 DUP2 ADD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0xCE0 JUMPI INVALID JUMPDEST PUSH1 0x40 MSTORE SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0xCFD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x2E NUMBER ADD 0xC9 0xA8 CALLCODE 0xAF 0xF7 MLOAD 0xA9 DUP16 CREATE 0xB8 JUMP 0xAB 0xDC DUP1 0xFC 0xB3 POP 0x1E 0xBD EQ SELFDESTRUCT 0x2F 0xE7 0xC5 0x4B SDIV 0xB1 0x4A CALLER PUSH5 0x736F6C6343 STOP SMOD SDIV STOP CALLER ",
							"sourceMap": "1000:5038:10:-:0;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:7612:13",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:13",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "76:80:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "86:22:13",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "101:6:13"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "95:5:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "95:13:13"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "86:5:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "144:5:13"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "117:26:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "117:33:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "117:33:13"
														}
													]
												},
												"name": "abi_decode_t_address_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "55:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "66:5:13",
														"type": ""
													}
												],
												"src": "14:142:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "226:700:13",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "275:24:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "array",
																					"nodeType": "YulIdentifier",
																					"src": "284:5:13"
																				},
																				{
																					"name": "array",
																					"nodeType": "YulIdentifier",
																					"src": "291:5:13"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "277:6:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "277:20:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "277:20:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "254:6:13"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "262:4:13",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "250:3:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "250:17:13"
																			},
																			{
																				"name": "end",
																				"nodeType": "YulIdentifier",
																				"src": "269:3:13"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "246:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "246:27:13"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "239:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "239:35:13"
															},
															"nodeType": "YulIf",
															"src": "236:2:13"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "308:23:13",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "328:2:13",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "322:5:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "322:9:13"
															},
															"variables": [
																{
																	"name": "memPtr",
																	"nodeType": "YulTypedName",
																	"src": "312:6:13",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "340:34:13",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "362:6:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "370:3:13",
																		"type": "",
																		"value": "192"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "358:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "358:16:13"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nodeType": "YulTypedName",
																	"src": "344:10:13",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "449:13:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "invalid",
																				"nodeType": "YulIdentifier",
																				"src": "451:7:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "451:9:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "451:9:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "392:10:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "404:18:13",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "389:2:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "389:34:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "428:10:13"
																			},
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "440:6:13"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "425:2:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "425:22:13"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "386:2:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "386:62:13"
															},
															"nodeType": "YulIf",
															"src": "383:2:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "478:2:13",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nodeType": "YulIdentifier",
																		"src": "482:10:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "471:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "471:22:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "471:22:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "502:15:13",
															"value": {
																"name": "memPtr",
																"nodeType": "YulIdentifier",
																"src": "511:6:13"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "502:5:13"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "526:17:13",
															"value": {
																"name": "memPtr",
																"nodeType": "YulIdentifier",
																"src": "537:6:13"
															},
															"variables": [
																{
																	"name": "dst",
																	"nodeType": "YulTypedName",
																	"src": "530:3:13",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "552:17:13",
															"value": {
																"name": "offset",
																"nodeType": "YulIdentifier",
																"src": "563:6:13"
															},
															"variables": [
																{
																	"name": "src",
																	"nodeType": "YulTypedName",
																	"src": "556:3:13",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "607:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "616:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "619:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "609:6:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "609:12:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "609:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "588:6:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "596:3:13",
																				"type": "",
																				"value": "192"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "584:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "584:16:13"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "602:3:13"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "581:2:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "581:25:13"
															},
															"nodeType": "YulIf",
															"src": "578:2:13"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "632:10:13",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "641:1:13",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "636:1:13",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "698:222:13",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "712:30:13",
																		"value": {
																			"arguments": [
																				{
																					"name": "src",
																					"nodeType": "YulIdentifier",
																					"src": "738:3:13"
																				}
																			],
																			"functionName": {
																				"name": "calldataload",
																				"nodeType": "YulIdentifier",
																				"src": "725:12:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "725:17:13"
																		},
																		"variables": [
																			{
																				"name": "value",
																				"nodeType": "YulTypedName",
																				"src": "716:5:13",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value",
																					"nodeType": "YulIdentifier",
																					"src": "782:5:13"
																				}
																			],
																			"functionName": {
																				"name": "validator_revert_t_address",
																				"nodeType": "YulIdentifier",
																				"src": "755:26:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "755:33:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "755:33:13"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "dst",
																					"nodeType": "YulIdentifier",
																					"src": "808:3:13"
																				},
																				{
																					"name": "value",
																					"nodeType": "YulIdentifier",
																					"src": "813:5:13"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "801:6:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "801:18:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "801:18:13"
																	},
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "832:14:13",
																		"value": {
																			"kind": "number",
																			"nodeType": "YulLiteral",
																			"src": "842:4:13",
																			"type": "",
																			"value": "0x20"
																		},
																		"variables": [
																			{
																				"name": "_1",
																				"nodeType": "YulTypedName",
																				"src": "836:2:13",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "859:19:13",
																		"value": {
																			"arguments": [
																				{
																					"name": "dst",
																					"nodeType": "YulIdentifier",
																					"src": "870:3:13"
																				},
																				{
																					"name": "_1",
																					"nodeType": "YulIdentifier",
																					"src": "875:2:13"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "866:3:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "866:12:13"
																		},
																		"variableNames": [
																			{
																				"name": "dst",
																				"nodeType": "YulIdentifier",
																				"src": "859:3:13"
																			}
																		]
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "891:19:13",
																		"value": {
																			"arguments": [
																				{
																					"name": "src",
																					"nodeType": "YulIdentifier",
																					"src": "902:3:13"
																				},
																				{
																					"name": "_1",
																					"nodeType": "YulIdentifier",
																					"src": "907:2:13"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "898:3:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "898:12:13"
																		},
																		"variableNames": [
																			{
																				"name": "src",
																				"nodeType": "YulIdentifier",
																				"src": "891:3:13"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "662:1:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "665:4:13",
																		"type": "",
																		"value": "0x06"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "659:2:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "659:11:13"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "671:18:13",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "673:14:13",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "682:1:13"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "685:1:13",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "678:3:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "678:9:13"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "673:1:13"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "655:3:13",
																"statements": []
															},
															"src": "651:269:13"
														}
													]
												},
												"name": "abi_decode_t_array$_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "200:6:13",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "208:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "216:5:13",
														"type": ""
													}
												],
												"src": "161:765:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1025:334:13",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1069:24:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value",
																					"nodeType": "YulIdentifier",
																					"src": "1078:5:13"
																				},
																				{
																					"name": "value",
																					"nodeType": "YulIdentifier",
																					"src": "1085:5:13"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1071:6:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1071:20:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1071:20:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "end",
																				"nodeType": "YulIdentifier",
																				"src": "1046:3:13"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1051:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1042:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1042:19:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1063:4:13",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1038:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "1038:30:13"
															},
															"nodeType": "YulIf",
															"src": "1035:2:13"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1102:23:13",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1122:2:13",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1116:5:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "1116:9:13"
															},
															"variables": [
																{
																	"name": "memPtr",
																	"nodeType": "YulTypedName",
																	"src": "1106:6:13",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1134:35:13",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "1156:6:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1164:4:13",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1152:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "1152:17:13"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nodeType": "YulTypedName",
																	"src": "1138:10:13",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1244:13:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "invalid",
																				"nodeType": "YulIdentifier",
																				"src": "1246:7:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1246:9:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1246:9:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "1187:10:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1199:18:13",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "1184:2:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1184:34:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "1223:10:13"
																			},
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "1235:6:13"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "1220:2:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1220:22:13"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "1181:2:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "1181:62:13"
															},
															"nodeType": "YulIf",
															"src": "1178:2:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1273:2:13",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nodeType": "YulIdentifier",
																		"src": "1277:10:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1266:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "1266:22:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1266:22:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1297:15:13",
															"value": {
																"name": "memPtr",
																"nodeType": "YulIdentifier",
																"src": "1306:6:13"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "1297:5:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "1328:6:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1342:9:13"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "1336:5:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1336:16:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1321:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "1321:32:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1321:32:13"
														}
													]
												},
												"name": "abi_decode_t_struct$_ReserveConfigurationMap_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "996:9:13",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "1007:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1015:5:13",
														"type": ""
													}
												],
												"src": "931:428:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1426:132:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1436:22:13",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "1451:6:13"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1445:5:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "1445:13:13"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "1436:5:13"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1536:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1545:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1548:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1538:6:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1538:12:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1538:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1480:5:13"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "1491:5:13"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "1498:34:13",
																						"type": "",
																						"value": "0xffffffffffffffffffffffffffffffff"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "1487:3:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1487:46:13"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "1477:2:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1477:57:13"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1470:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "1470:65:13"
															},
															"nodeType": "YulIf",
															"src": "1467:2:13"
														}
													]
												},
												"name": "abi_decode_t_uint128_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "1405:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1416:5:13",
														"type": ""
													}
												],
												"src": "1364:194:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1624:110:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1634:22:13",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "1649:6:13"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1643:5:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "1643:13:13"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "1634:5:13"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1712:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1721:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1724:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1714:6:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1714:12:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1714:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1678:5:13"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "1689:5:13"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "1696:12:13",
																						"type": "",
																						"value": "0xffffffffff"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "1685:3:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1685:24:13"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "1675:2:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1675:35:13"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1668:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "1668:43:13"
															},
															"nodeType": "YulIf",
															"src": "1665:2:13"
														}
													]
												},
												"name": "abi_decode_t_uint40_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "1603:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1614:5:13",
														"type": ""
													}
												],
												"src": "1563:171:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1799:102:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1809:22:13",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "1824:6:13"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1818:5:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "1818:13:13"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "1809:5:13"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1879:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1888:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1891:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1881:6:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1881:12:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1881:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1853:5:13"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "1864:5:13"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "1871:4:13",
																						"type": "",
																						"value": "0xff"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "1860:3:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1860:16:13"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "1850:2:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1850:27:13"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1843:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "1843:35:13"
															},
															"nodeType": "YulIf",
															"src": "1840:2:13"
														}
													]
												},
												"name": "abi_decode_t_uint8_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "1778:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1789:5:13",
														"type": ""
													}
												],
												"src": "1739:162:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1987:182:13",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2033:26:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "2042:6:13"
																				},
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "2050:6:13"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2035:6:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2035:22:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2035:22:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2008:7:13"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2017:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2004:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2004:23:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2029:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2000:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "2000:32:13"
															},
															"nodeType": "YulIf",
															"src": "1997:2:13"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2068:29:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2087:9:13"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "2081:5:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "2081:16:13"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "2072:5:13",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "2133:5:13"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "2106:26:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "2106:33:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2106:33:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2148:15:13",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "2158:5:13"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "2148:6:13"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1953:9:13",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1964:7:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1976:6:13",
														"type": ""
													}
												],
												"src": "1906:263:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2307:225:13",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2354:26:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value1",
																					"nodeType": "YulIdentifier",
																					"src": "2363:6:13"
																				},
																				{
																					"name": "value1",
																					"nodeType": "YulIdentifier",
																					"src": "2371:6:13"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2356:6:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2356:22:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2356:22:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2328:7:13"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2337:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2324:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2324:23:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2349:3:13",
																		"type": "",
																		"value": "384"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2320:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "2320:33:13"
															},
															"nodeType": "YulIf",
															"src": "2317:2:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2389:59:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2429:9:13"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "2440:7:13"
																	}
																],
																"functionName": {
																	"name": "abi_decode_t_array$_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "2399:29:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "2399:49:13"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "2389:6:13"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "2457:69:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2501:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2512:3:13",
																				"type": "",
																				"value": "192"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2497:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2497:19:13"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "2518:7:13"
																	}
																],
																"functionName": {
																	"name": "abi_decode_t_array$_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "2467:29:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "2467:59:13"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "2457:6:13"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_array$_t_address_$6_memory_ptrt_array$_t_address_$6_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2265:9:13",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2276:7:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2288:6:13",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "2296:6:13",
														"type": ""
													}
												],
												"src": "2174:358:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2646:1280:13",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2656:13:13",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "2666:3:13",
																"type": "",
																"value": "384"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "2660:2:13",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2714:26:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "2723:6:13"
																				},
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "2731:6:13"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2716:6:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2716:22:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2716:22:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2689:7:13"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2698:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2685:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2685:23:13"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "2710:2:13"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2681:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "2681:32:13"
															},
															"nodeType": "YulIf",
															"src": "2678:2:13"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2749:31:13",
															"value": {
																"arguments": [
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "2777:2:13"
																	}
																],
																"functionName": {
																	"name": "allocateMemory",
																	"nodeType": "YulIdentifier",
																	"src": "2762:14:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "2762:18:13"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "2753:5:13",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "2796:5:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2859:9:13"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2870:7:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_struct$_ReserveConfigurationMap_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "2803:55:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2803:75:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2789:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "2789:90:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2789:90:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2899:5:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2906:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2895:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2895:14:13"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "2947:9:13"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "2958:2:13",
																						"type": "",
																						"value": "32"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2943:3:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2943:18:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint128_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "2911:31:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2911:51:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2888:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "2888:75:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2888:75:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2983:5:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2990:2:13",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2979:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2979:14:13"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "3031:9:13"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "3042:2:13",
																						"type": "",
																						"value": "64"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3027:3:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3027:18:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint128_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "2995:31:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2995:51:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2972:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "2972:75:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2972:75:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "3067:5:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3074:2:13",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3063:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3063:14:13"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "3115:9:13"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "3126:2:13",
																						"type": "",
																						"value": "96"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3111:3:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3111:18:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint128_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "3079:31:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3079:51:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3056:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "3056:75:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3056:75:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "3151:5:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3158:3:13",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3147:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3147:15:13"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "3200:9:13"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "3211:3:13",
																						"type": "",
																						"value": "128"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3196:3:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3196:19:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint128_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "3164:31:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3164:52:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3140:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "3140:77:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3140:77:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "3237:5:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3244:3:13",
																				"type": "",
																				"value": "160"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3233:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3233:15:13"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "3286:9:13"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "3297:3:13",
																						"type": "",
																						"value": "160"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3282:3:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3282:19:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint128_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "3250:31:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3250:52:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3226:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "3226:77:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3226:77:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "3323:5:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3330:3:13",
																				"type": "",
																				"value": "192"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3319:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3319:15:13"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "3371:9:13"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "3382:3:13",
																						"type": "",
																						"value": "192"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3367:3:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3367:19:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint40_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "3336:30:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3336:51:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3312:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "3312:76:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3312:76:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "3408:5:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3415:3:13",
																				"type": "",
																				"value": "224"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3404:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3404:15:13"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "3457:9:13"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "3468:3:13",
																						"type": "",
																						"value": "224"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3453:3:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3453:19:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "3421:31:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3421:52:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3397:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "3397:77:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3397:77:13"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3483:13:13",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "3493:3:13",
																"type": "",
																"value": "256"
															},
															"variables": [
																{
																	"name": "_2",
																	"nodeType": "YulTypedName",
																	"src": "3487:2:13",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "3516:5:13"
																			},
																			{
																				"name": "_2",
																				"nodeType": "YulIdentifier",
																				"src": "3523:2:13"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3512:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3512:14:13"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "3564:9:13"
																					},
																					{
																						"name": "_2",
																						"nodeType": "YulIdentifier",
																						"src": "3575:2:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3560:3:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3560:18:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "3528:31:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3528:51:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3505:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "3505:75:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3505:75:13"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3589:13:13",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "3599:3:13",
																"type": "",
																"value": "288"
															},
															"variables": [
																{
																	"name": "_3",
																	"nodeType": "YulTypedName",
																	"src": "3593:2:13",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "3622:5:13"
																			},
																			{
																				"name": "_3",
																				"nodeType": "YulIdentifier",
																				"src": "3629:2:13"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3618:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3618:14:13"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "3670:9:13"
																					},
																					{
																						"name": "_3",
																						"nodeType": "YulIdentifier",
																						"src": "3681:2:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3666:3:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3666:18:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "3634:31:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3634:51:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3611:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "3611:75:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3611:75:13"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3695:13:13",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "3705:3:13",
																"type": "",
																"value": "320"
															},
															"variables": [
																{
																	"name": "_4",
																	"nodeType": "YulTypedName",
																	"src": "3699:2:13",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "3728:5:13"
																			},
																			{
																				"name": "_4",
																				"nodeType": "YulIdentifier",
																				"src": "3735:2:13"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3724:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3724:14:13"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "3776:9:13"
																					},
																					{
																						"name": "_4",
																						"nodeType": "YulIdentifier",
																						"src": "3787:2:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3772:3:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3772:18:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "3740:31:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3740:51:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3717:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "3717:75:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3717:75:13"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3801:13:13",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "3811:3:13",
																"type": "",
																"value": "352"
															},
															"variables": [
																{
																	"name": "_5",
																	"nodeType": "YulTypedName",
																	"src": "3805:2:13",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "3834:5:13"
																			},
																			{
																				"name": "_5",
																				"nodeType": "YulIdentifier",
																				"src": "3841:2:13"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3830:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3830:14:13"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "3880:9:13"
																					},
																					{
																						"name": "_5",
																						"nodeType": "YulIdentifier",
																						"src": "3891:2:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3876:3:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3876:18:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint8_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "3846:29:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3846:49:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3823:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "3823:73:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3823:73:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3905:15:13",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "3915:5:13"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "3905:6:13"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_struct$_ReserveData_$954_memory_ptr_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2612:9:13",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2623:7:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2635:6:13",
														"type": ""
													}
												],
												"src": "2537:1389:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4040:102:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4050:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4062:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4073:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4058:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "4058:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4050:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4092:9:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "4107:6:13"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "4123:3:13",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "4128:1:13",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "4119:3:13"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "4119:11:13"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "4132:1:13",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "4115:3:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4115:19:13"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "4103:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4103:32:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4085:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "4085:51:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4085:51:13"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_payable__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4009:9:13",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4020:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4031:4:13",
														"type": ""
													}
												],
												"src": "3931:211:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4284:175:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4294:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4306:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4317:2:13",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4302:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "4302:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4294:4:13"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4329:29:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4347:3:13",
																				"type": "",
																				"value": "160"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4352:1:13",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "4343:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4343:11:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4356:1:13",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "4339:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "4339:19:13"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "4333:2:13",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4374:9:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "4389:6:13"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "4397:2:13"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "4385:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4385:15:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4367:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "4367:34:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4367:34:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4421:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4432:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4417:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4417:18:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nodeType": "YulIdentifier",
																				"src": "4441:6:13"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "4449:2:13"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "4437:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4437:15:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4410:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "4410:43:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4410:43:13"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_payable_t_address__to_t_address_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4245:9:13",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "4256:6:13",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4264:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4275:4:13",
														"type": ""
													}
												],
												"src": "4147:312:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4693:955:13",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4703:32:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4721:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4732:2:13",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4717:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "4717:18:13"
															},
															"variables": [
																{
																	"name": "tail_1",
																	"nodeType": "YulTypedName",
																	"src": "4707:6:13",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4751:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4762:2:13",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4744:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "4744:21:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4744:21:13"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4774:17:13",
															"value": {
																"name": "tail_1",
																"nodeType": "YulIdentifier",
																"src": "4785:6:13"
															},
															"variables": [
																{
																	"name": "pos",
																	"nodeType": "YulTypedName",
																	"src": "4778:3:13",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4800:27:13",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "4820:6:13"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "4814:5:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "4814:13:13"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "4804:6:13",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "tail_1",
																		"nodeType": "YulIdentifier",
																		"src": "4843:6:13"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "4851:6:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4836:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "4836:22:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4836:22:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4867:25:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4878:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4889:2:13",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4874:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "4874:18:13"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "4867:3:13"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4901:14:13",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "4911:4:13",
																"type": "",
																"value": "0x20"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "4905:2:13",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4924:29:13",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "4942:6:13"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "4950:2:13"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4938:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "4938:15:13"
															},
															"variables": [
																{
																	"name": "srcPtr",
																	"nodeType": "YulTypedName",
																	"src": "4928:6:13",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4962:13:13",
															"value": {
																"name": "tail",
																"nodeType": "YulIdentifier",
																"src": "4971:4:13"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "4966:1:13",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5033:146:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "pos",
																					"nodeType": "YulIdentifier",
																					"src": "5054:3:13"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "srcPtr",
																									"nodeType": "YulIdentifier",
																									"src": "5069:6:13"
																								}
																							],
																							"functionName": {
																								"name": "mload",
																								"nodeType": "YulIdentifier",
																								"src": "5063:5:13"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "5063:13:13"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"kind": "number",
																											"nodeType": "YulLiteral",
																											"src": "5086:3:13",
																											"type": "",
																											"value": "160"
																										},
																										{
																											"kind": "number",
																											"nodeType": "YulLiteral",
																											"src": "5091:1:13",
																											"type": "",
																											"value": "1"
																										}
																									],
																									"functionName": {
																										"name": "shl",
																										"nodeType": "YulIdentifier",
																										"src": "5082:3:13"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "5082:11:13"
																								},
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "5095:1:13",
																									"type": "",
																									"value": "1"
																								}
																							],
																							"functionName": {
																								"name": "sub",
																								"nodeType": "YulIdentifier",
																								"src": "5078:3:13"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "5078:19:13"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nodeType": "YulIdentifier",
																						"src": "5059:3:13"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "5059:39:13"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "5047:6:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5047:52:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5047:52:13"
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "5112:19:13",
																		"value": {
																			"arguments": [
																				{
																					"name": "pos",
																					"nodeType": "YulIdentifier",
																					"src": "5123:3:13"
																				},
																				{
																					"name": "_1",
																					"nodeType": "YulIdentifier",
																					"src": "5128:2:13"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "5119:3:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5119:12:13"
																		},
																		"variableNames": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "5112:3:13"
																			}
																		]
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "5144:25:13",
																		"value": {
																			"arguments": [
																				{
																					"name": "srcPtr",
																					"nodeType": "YulIdentifier",
																					"src": "5158:6:13"
																				},
																				{
																					"name": "_1",
																					"nodeType": "YulIdentifier",
																					"src": "5166:2:13"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "5154:3:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5154:15:13"
																		},
																		"variableNames": [
																			{
																				"name": "srcPtr",
																				"nodeType": "YulIdentifier",
																				"src": "5144:6:13"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "4995:1:13"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "4998:6:13"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "4992:2:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "4992:13:13"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "5006:18:13",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "5008:14:13",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "5017:1:13"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5020:1:13",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "5013:3:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5013:9:13"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "5008:1:13"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "4988:3:13",
																"statements": []
															},
															"src": "4984:195:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5199:9:13"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "5210:2:13"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5195:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5195:18:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "5219:3:13"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5224:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "5215:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5215:19:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5188:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "5188:47:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5188:47:13"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5244:16:13",
															"value": {
																"name": "pos",
																"nodeType": "YulIdentifier",
																"src": "5257:3:13"
															},
															"variables": [
																{
																	"name": "pos_1",
																	"nodeType": "YulTypedName",
																	"src": "5248:5:13",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5269:29:13",
															"value": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "5291:6:13"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "5285:5:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "5285:13:13"
															},
															"variables": [
																{
																	"name": "length_1",
																	"nodeType": "YulTypedName",
																	"src": "5273:8:13",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5314:3:13"
																	},
																	{
																		"name": "length_1",
																		"nodeType": "YulIdentifier",
																		"src": "5319:8:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5307:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "5307:21:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5307:21:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5337:21:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5350:3:13"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "5355:2:13"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5346:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "5346:12:13"
															},
															"variableNames": [
																{
																	"name": "pos_1",
																	"nodeType": "YulIdentifier",
																	"src": "5337:5:13"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5367:31:13",
															"value": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "5387:6:13"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "5395:2:13"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5383:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "5383:15:13"
															},
															"variables": [
																{
																	"name": "srcPtr_1",
																	"nodeType": "YulTypedName",
																	"src": "5371:8:13",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5407:15:13",
															"value": {
																"name": "tail",
																"nodeType": "YulIdentifier",
																"src": "5418:4:13"
															},
															"variables": [
																{
																	"name": "i_1",
																	"nodeType": "YulTypedName",
																	"src": "5411:3:13",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5488:132:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "pos_1",
																					"nodeType": "YulIdentifier",
																					"src": "5509:5:13"
																				},
																				{
																					"arguments": [
																						{
																							"name": "srcPtr_1",
																							"nodeType": "YulIdentifier",
																							"src": "5522:8:13"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "5516:5:13"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "5516:15:13"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "5502:6:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5502:30:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5502:30:13"
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "5545:23:13",
																		"value": {
																			"arguments": [
																				{
																					"name": "pos_1",
																					"nodeType": "YulIdentifier",
																					"src": "5558:5:13"
																				},
																				{
																					"name": "_1",
																					"nodeType": "YulIdentifier",
																					"src": "5565:2:13"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "5554:3:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5554:14:13"
																		},
																		"variableNames": [
																			{
																				"name": "pos_1",
																				"nodeType": "YulIdentifier",
																				"src": "5545:5:13"
																			}
																		]
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "5581:29:13",
																		"value": {
																			"arguments": [
																				{
																					"name": "srcPtr_1",
																					"nodeType": "YulIdentifier",
																					"src": "5597:8:13"
																				},
																				{
																					"name": "_1",
																					"nodeType": "YulIdentifier",
																					"src": "5607:2:13"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "5593:3:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5593:17:13"
																		},
																		"variableNames": [
																			{
																				"name": "srcPtr_1",
																				"nodeType": "YulIdentifier",
																				"src": "5581:8:13"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i_1",
																		"nodeType": "YulIdentifier",
																		"src": "5442:3:13"
																	},
																	{
																		"name": "length_1",
																		"nodeType": "YulIdentifier",
																		"src": "5447:8:13"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "5439:2:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "5439:17:13"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "5457:22:13",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "5459:18:13",
																		"value": {
																			"arguments": [
																				{
																					"name": "i_1",
																					"nodeType": "YulIdentifier",
																					"src": "5470:3:13"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5475:1:13",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "5466:3:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5466:11:13"
																		},
																		"variableNames": [
																			{
																				"name": "i_1",
																				"nodeType": "YulIdentifier",
																				"src": "5459:3:13"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "5435:3:13",
																"statements": []
															},
															"src": "5431:189:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5629:13:13",
															"value": {
																"name": "pos_1",
																"nodeType": "YulIdentifier",
																"src": "5637:5:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5629:4:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_array$_t_address_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_address_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4654:9:13",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "4665:6:13",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4673:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4684:4:13",
														"type": ""
													}
												],
												"src": "4464:1184:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5782:145:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5792:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5804:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5815:2:13",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5800:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "5800:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5792:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5834:9:13"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "5845:6:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5827:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "5827:25:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5827:25:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5872:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5883:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5868:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5868:18:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nodeType": "YulIdentifier",
																				"src": "5892:6:13"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "5908:3:13",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "5913:1:13",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "5904:3:13"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "5904:11:13"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "5917:1:13",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "5900:3:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5900:19:13"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "5888:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5888:32:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5861:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "5861:60:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5861:60:13"
														}
													]
												},
												"name": "abi_encode_tuple_t_bytes32_t_address__to_t_bytes32_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5743:9:13",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "5754:6:13",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5762:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5773:4:13",
														"type": ""
													}
												],
												"src": "5653:274:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6106:226:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6123:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6134:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6116:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "6116:21:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6116:21:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6157:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6168:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6153:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6153:18:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6173:2:13",
																		"type": "",
																		"value": "36"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6146:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "6146:30:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6146:30:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6196:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6207:2:13",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6192:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6192:18:13"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "6212:34:13",
																		"type": "",
																		"value": "Debt Token underlying does not m"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6185:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "6185:62:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6185:62:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6267:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6278:2:13",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6263:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6263:18:13"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "6283:6:13",
																		"type": "",
																		"value": "atch"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6256:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "6256:34:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6256:34:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6299:27:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6311:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6322:3:13",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6307:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "6307:19:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6299:4:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_5ce69aa63fe325b0d8ad931e8e7cb88e13adbf6c085126f66e1689dc1383b3de__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6083:9:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "6097:4:13",
														"type": ""
													}
												],
												"src": "5932:400:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6511:182:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6528:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6539:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6521:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "6521:21:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6521:21:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6562:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6573:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6558:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6558:18:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6578:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6551:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "6551:30:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6551:30:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6601:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6612:2:13",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6597:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6597:18:13"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "6617:34:13",
																		"type": "",
																		"value": "OToken underlying does not match"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6590:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "6590:62:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6590:62:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6661:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6673:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6684:2:13",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6669:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "6669:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6661:4:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_7e0d09ab0eef83e12567d0089eb5a67e6bf6f54ff1ac5ae84102c70af2eb7620__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6488:9:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "6502:4:13",
														"type": ""
													}
												],
												"src": "6337:356:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6872:171:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6889:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6900:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6882:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "6882:21:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6882:21:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6923:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6934:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6919:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6919:18:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6939:2:13",
																		"type": "",
																		"value": "21"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6912:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "6912:30:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6912:30:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6962:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6973:2:13",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6958:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6958:18:13"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "6978:23:13",
																		"type": "",
																		"value": "ARRAY_LENGTH_MISMATCH"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6951:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "6951:51:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6951:51:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7011:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7023:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7034:2:13",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7019:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "7019:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7011:4:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_ce9a8942be13ddbfea97cc19823de3d1d97580661127eec2a746a53f877ce4a8__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6849:9:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "6863:4:13",
														"type": ""
													}
												],
												"src": "6698:345:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7149:76:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7159:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7171:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7182:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7167:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "7167:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7159:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7201:9:13"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "7212:6:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7194:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "7194:25:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7194:25:13"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7118:9:13",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "7129:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "7140:4:13",
														"type": ""
													}
												],
												"src": "7048:177:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7274:198:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7284:19:13",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7300:2:13",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "7294:5:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "7294:9:13"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "7284:6:13"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "7312:35:13",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "7334:6:13"
																	},
																	{
																		"name": "size",
																		"nodeType": "YulIdentifier",
																		"src": "7342:4:13"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7330:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "7330:17:13"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nodeType": "YulTypedName",
																	"src": "7316:10:13",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "7422:13:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "invalid",
																				"nodeType": "YulIdentifier",
																				"src": "7424:7:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7424:9:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "7424:9:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "7365:10:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7377:18:13",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "7362:2:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7362:34:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "7401:10:13"
																			},
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "7413:6:13"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "7398:2:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7398:22:13"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "7359:2:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "7359:62:13"
															},
															"nodeType": "YulIf",
															"src": "7356:2:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7451:2:13",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nodeType": "YulIdentifier",
																		"src": "7455:10:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7444:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "7444:22:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7444:22:13"
														}
													]
												},
												"name": "allocateMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "7254:4:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "7263:6:13",
														"type": ""
													}
												],
												"src": "7230:242:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7524:86:13",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "7588:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "7597:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "7600:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "7590:6:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7590:12:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "7590:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "7547:5:13"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "7558:5:13"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "7573:3:13",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "7578:1:13",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nodeType": "YulIdentifier",
																									"src": "7569:3:13"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "7569:11:13"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "7582:1:13",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nodeType": "YulIdentifier",
																							"src": "7565:3:13"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "7565:19:13"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "7554:3:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "7554:31:13"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "7544:2:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7544:42:13"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "7537:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "7537:50:13"
															},
															"nodeType": "YulIf",
															"src": "7534:2:13"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "7513:5:13",
														"type": ""
													}
												],
												"src": "7477:133:13"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_decode_t_address_fromMemory(offset) -> value\n    {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n    function abi_decode_t_array$_t_address(offset, end) -> array\n    {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(array, array) }\n        let memPtr := mload(64)\n        let newFreePtr := add(memPtr, 192)\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { invalid() }\n        mstore(64, newFreePtr)\n        array := memPtr\n        let dst := memPtr\n        let src := offset\n        if gt(add(offset, 192), end) { revert(0, 0) }\n        let i := 0\n        for { } lt(i, 0x06) { i := add(i, 1) }\n        {\n            let value := calldataload(src)\n            validator_revert_t_address(value)\n            mstore(dst, value)\n            let _1 := 0x20\n            dst := add(dst, _1)\n            src := add(src, _1)\n        }\n    }\n    function abi_decode_t_struct$_ReserveConfigurationMap_fromMemory(headStart, end) -> value\n    {\n        if slt(sub(end, headStart), 0x20) { revert(value, value) }\n        let memPtr := mload(64)\n        let newFreePtr := add(memPtr, 0x20)\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { invalid() }\n        mstore(64, newFreePtr)\n        value := memPtr\n        mstore(memPtr, mload(headStart))\n    }\n    function abi_decode_t_uint128_fromMemory(offset) -> value\n    {\n        value := mload(offset)\n        if iszero(eq(value, and(value, 0xffffffffffffffffffffffffffffffff))) { revert(0, 0) }\n    }\n    function abi_decode_t_uint40_fromMemory(offset) -> value\n    {\n        value := mload(offset)\n        if iszero(eq(value, and(value, 0xffffffffff))) { revert(0, 0) }\n    }\n    function abi_decode_t_uint8_fromMemory(offset) -> value\n    {\n        value := mload(offset)\n        if iszero(eq(value, and(value, 0xff))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        let value := mload(headStart)\n        validator_revert_t_address(value)\n        value0 := value\n    }\n    function abi_decode_tuple_t_array$_t_address_$6_memory_ptrt_array$_t_address_$6_memory_ptr(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 384) { revert(value1, value1) }\n        value0 := abi_decode_t_array$_t_address(headStart, dataEnd)\n        value1 := abi_decode_t_array$_t_address(add(headStart, 192), dataEnd)\n    }\n    function abi_decode_tuple_t_struct$_ReserveData_$954_memory_ptr_fromMemory(headStart, dataEnd) -> value0\n    {\n        let _1 := 384\n        if slt(sub(dataEnd, headStart), _1) { revert(value0, value0) }\n        let value := allocateMemory(_1)\n        mstore(value, abi_decode_t_struct$_ReserveConfigurationMap_fromMemory(headStart, dataEnd))\n        mstore(add(value, 32), abi_decode_t_uint128_fromMemory(add(headStart, 32)))\n        mstore(add(value, 64), abi_decode_t_uint128_fromMemory(add(headStart, 64)))\n        mstore(add(value, 96), abi_decode_t_uint128_fromMemory(add(headStart, 96)))\n        mstore(add(value, 128), abi_decode_t_uint128_fromMemory(add(headStart, 128)))\n        mstore(add(value, 160), abi_decode_t_uint128_fromMemory(add(headStart, 160)))\n        mstore(add(value, 192), abi_decode_t_uint40_fromMemory(add(headStart, 192)))\n        mstore(add(value, 224), abi_decode_t_address_fromMemory(add(headStart, 224)))\n        let _2 := 256\n        mstore(add(value, _2), abi_decode_t_address_fromMemory(add(headStart, _2)))\n        let _3 := 288\n        mstore(add(value, _3), abi_decode_t_address_fromMemory(add(headStart, _3)))\n        let _4 := 320\n        mstore(add(value, _4), abi_decode_t_address_fromMemory(add(headStart, _4)))\n        let _5 := 352\n        mstore(add(value, _5), abi_decode_t_uint8_fromMemory(add(headStart, _5)))\n        value0 := value\n    }\n    function abi_encode_tuple_t_address_payable__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_address_payable_t_address__to_t_address_t_address__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n    }\n    function abi_encode_tuple_t_array$_t_address_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_address_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        let tail_1 := add(headStart, 64)\n        mstore(headStart, 64)\n        let pos := tail_1\n        let length := mload(value0)\n        mstore(tail_1, length)\n        pos := add(headStart, 96)\n        let _1 := 0x20\n        let srcPtr := add(value0, _1)\n        let i := tail\n        for { } lt(i, length) { i := add(i, 1) }\n        {\n            mstore(pos, and(mload(srcPtr), sub(shl(160, 1), 1)))\n            pos := add(pos, _1)\n            srcPtr := add(srcPtr, _1)\n        }\n        mstore(add(headStart, _1), sub(pos, headStart))\n        let pos_1 := pos\n        let length_1 := mload(value1)\n        mstore(pos, length_1)\n        pos_1 := add(pos, _1)\n        let srcPtr_1 := add(value1, _1)\n        let i_1 := tail\n        for { } lt(i_1, length_1) { i_1 := add(i_1, 1) }\n        {\n            mstore(pos_1, mload(srcPtr_1))\n            pos_1 := add(pos_1, _1)\n            srcPtr_1 := add(srcPtr_1, _1)\n        }\n        tail := pos_1\n    }\n    function abi_encode_tuple_t_bytes32_t_address__to_t_bytes32_t_address__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), and(value1, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_stringliteral_5ce69aa63fe325b0d8ad931e8e7cb88e13adbf6c085126f66e1689dc1383b3de__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 36)\n        mstore(add(headStart, 64), \"Debt Token underlying does not m\")\n        mstore(add(headStart, 96), \"atch\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_7e0d09ab0eef83e12567d0089eb5a67e6bf6f54ff1ac5ae84102c70af2eb7620__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 32)\n        mstore(add(headStart, 64), \"OToken underlying does not match\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_ce9a8942be13ddbfea97cc19823de3d1d97580661127eec2a746a53f877ce4a8__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 21)\n        mstore(add(headStart, 64), \"ARRAY_LENGTH_MISMATCH\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function allocateMemory(size) -> memPtr\n    {\n        memPtr := mload(64)\n        let newFreePtr := add(memPtr, size)\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { invalid() }\n        mstore(64, newFreePtr)\n    }\n    function validator_revert_t_address(value)\n    {\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n}",
									"id": 13,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b506004361061002b5760003560e01c80638314b22114610030575b600080fd5b61004361003e366004610a55565b610045565b005b60408051600c8082526101a0820190925260009160609190602082016101808036833701905050905061007661088c565b506040805160c081018252736b175474e89094c44da98b954eedeac495271d0f815273056fd409e1d7a124bd7017459dfea2f387b6d5cd602082015273a0b86991c6218b36c1d19d4a2e9eb0ce3606eb488183015273dac17f958d2ee523a2206206994597c13d831ec7606080830191909152732260fac5e5542a773aa44fbcfedf7c193bc2c599608083015273c02aaa39b223fe8d0a0e5c4f27ead9083c756cc260a08301528251600c8082526101a08201909452919290919081602001602082028036833701905050905066060f9d63c6caf88160008151811061015857fe5b60200260200101818152505066060f9d63c6caf88160018151811061017957fe5b6020026020010181815250506554873ca5c45f8160028151811061019957fe5b6020026020010181815250506554873ca5c45f816003815181106101b957fe5b6020026020010181815250506612cc525d318894816004815181106101da57fe5b6020026020010181815250506612cc525d318894816005815181106101fb57fe5b602002602001018181525050660bb38afc0b0f7c8160068151811061021c57fe5b602002602001018181525050660bb38afc0b0f7c8160078151811061023d57fe5b6020026020010181815250506607170abcd5ea8c8160088151811061025e57fe5b602002602001018181525050655f874d4ea08e8160098151811061027e57fe5b6020026020010181815250506608c1da100749be81600a8151811061029f57fe5b6020026020010181815250506575fe00d7f66881600b815181106102bf57fe5b602090810291909101015260405163ca446dd960e01b8152732f75feda7423d8b85988d9545428d00f3213cf0090738761e889ad797bde3bb2b6561982fd1ca4118872907364968b59dd39128c287d76be50015161d10c08c290819063ca446dd990610351907f703c2c8634bed68d98c029c18f310e7f7ec0e5d6342c590190b3cb8b3ba54532908690600401610c2b565b600060405180830381600087803b15801561036b57600080fd5b505af115801561037f573d6000803e3d6000fd5b505060405163177314a360e21b81526001600160a01b0384169250635dcc528c91506103e5907f703c2c8634bed68d98c029c18f310e7f7ec0e5d6342c590190b3cb8b3ba545329073554928b31c4ef45862195b0233a3d689b08552a490600401610c2b565b600060405180830381600087803b1580156103ff57600080fd5b505af1158015610413573d6000803e3d6000fd5b5061042692505050565b60405180910390fd5b60005b60068110156107bd5785816006811061043e57fe5b60200201516001600160a01b03168a826006811061045857fe5b60200201516001600160a01b031663b16a19de6040518163ffffffff1660e01b815260040160206040518083038186803b15801561049557600080fd5b505afa1580156104a9573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104cd9190610a32565b6001600160a01b0316146104f35760405162461bcd60e51b815260040161041d90610c86565b8581600681106104ff57fe5b60200201516001600160a01b031689826006811061051957fe5b60200201516001600160a01b031663b16a19de6040518163ffffffff1660e01b815260040160206040518083038186803b15801561055657600080fd5b505afa15801561056a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061058e9190610a32565b6001600160a01b0316146105b45760405162461bcd60e51b815260040161041d90610c42565b6105bc6108aa565b73a9ae6e3207bdcccb8f081ee0b4d0d2b4a79ea9846335ea6a758884600681106105e257fe5b60200201516040518263ffffffff1660e01b81526004016106039190610b7a565b6101806040518083038186803b15801561061c57600080fd5b505afa158015610630573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106549190610a8a565b9050846001600160a01b03166312e3ae1688846006811061067157fe5b60200201518d856006811061068257fe5b60200201516040518363ffffffff1660e01b81526004016106a4929190610b8e565b600060405180830381600087803b1580156106be57600080fd5b505af11580156106d2573d6000803e3d6000fd5b50505050846001600160a01b0316634d9782588884600681106106f157fe5b60200201518c856006811061070257fe5b60200201516040518363ffffffff1660e01b8152600401610724929190610b8e565b600060405180830381600087803b15801561073e57600080fd5b505af1158015610752573d6000803e3d6000fd5b505050508060e00151888a806001019b508151811061076d57fe5b6001600160a01b0390921660209283029190910190910152610120810151885160018b019a8a91811061079c57fe5b6001600160a01b039092166020928302919091019091015250600101610429565b50604051633cf8b8d960e11b81526001600160a01b038316906379f171b2906107ec9089908890600401610ba8565b600060405180830381600087803b15801561080657600080fd5b505af115801561081a573d6000803e3d6000fd5b50506040516339ccbdd360e01b81526001600160a01b03851692506339ccbdd3915061084f90426276a7000190600401610cbb565b600060405180830381600087803b15801561086957600080fd5b505af115801561087d573d6000803e3d6000fd5b50505050505050505050505050565b6040518060c001604052806006906020820280368337509192915050565b6040518061018001604052806108be610915565b815260006020820181905260408201819052606082018190526080820181905260a0820181905260c0820181905260e082018190526101008201819052610120820181905261014082018190526101609091015290565b6040518060200160405280600081525090565b805161093381610ce8565b919050565b600082601f830112610948578081fd5b60405160c0810181811067ffffffffffffffff8211171561096557fe5b6040529050808260c0810185101561097c57600080fd5b60005b60068110156109a857813561099381610ce8565b8352602092830192919091019060010161097f565b50505092915050565b6000602082840312156109c2578081fd5b6040516020810181811067ffffffffffffffff821117156109df57fe5b6040529151825250919050565b80516fffffffffffffffffffffffffffffffff8116811461093357600080fd5b805164ffffffffff8116811461093357600080fd5b805160ff8116811461093357600080fd5b600060208284031215610a43578081fd5b8151610a4e81610ce8565b9392505050565b6000806101808385031215610a68578081fd5b610a728484610938565b9150610a818460c08501610938565b90509250929050565b6000610180808385031215610a9d578182fd5b610aa681610cc4565b9050610ab284846109b1565b8152610ac0602084016109ec565b6020820152610ad1604084016109ec565b6040820152610ae2606084016109ec565b6060820152610af3608084016109ec565b6080820152610b0460a084016109ec565b60a0820152610b1560c08401610a0c565b60c0820152610b2660e08401610928565b60e0820152610100610b39818501610928565b90820152610120610b4b848201610928565b90820152610140610b5d848201610928565b90820152610160610b6f848201610a21565b908201529392505050565b6001600160a01b0391909116815260200190565b6001600160a01b0392831681529116602082015260400190565b604080825283519082018190526000906020906060840190828701845b82811015610bea5781516001600160a01b031684529284019290840190600101610bc5565b50505083810382850152845180825285830191830190845b81811015610c1e57835183529284019291840191600101610c02565b5090979650505050505050565b9182526001600160a01b0316602082015260400190565b60208082526024908201527f4465627420546f6b656e20756e6465726c79696e6720646f6573206e6f74206d6040820152630c2e8c6d60e31b606082015260800190565b6020808252818101527f4f546f6b656e20756e6465726c79696e6720646f6573206e6f74206d61746368604082015260600190565b90815260200190565b60405181810167ffffffffffffffff81118282101715610ce057fe5b604052919050565b6001600160a01b0381168114610cfd57600080fd5b5056fea26469706673582212202e4301c9a8f2aff751a98ff0b856abdc80fcb3501ebd14ff2fe7c54b05b14a3364736f6c63430007050033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x2B JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8314B221 EQ PUSH2 0x30 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x43 PUSH2 0x3E CALLDATASIZE PUSH1 0x4 PUSH2 0xA55 JUMP JUMPDEST PUSH2 0x45 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0xC DUP1 DUP3 MSTORE PUSH2 0x1A0 DUP3 ADD SWAP1 SWAP3 MSTORE PUSH1 0x0 SWAP2 PUSH1 0x60 SWAP2 SWAP1 PUSH1 0x20 DUP3 ADD PUSH2 0x180 DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP POP SWAP1 POP PUSH2 0x76 PUSH2 0x88C JUMP JUMPDEST POP PUSH1 0x40 DUP1 MLOAD PUSH1 0xC0 DUP2 ADD DUP3 MSTORE PUSH20 0x6B175474E89094C44DA98B954EEDEAC495271D0F DUP2 MSTORE PUSH20 0x56FD409E1D7A124BD7017459DFEA2F387B6D5CD PUSH1 0x20 DUP3 ADD MSTORE PUSH20 0xA0B86991C6218B36C1D19D4A2E9EB0CE3606EB48 DUP2 DUP4 ADD MSTORE PUSH20 0xDAC17F958D2EE523A2206206994597C13D831EC7 PUSH1 0x60 DUP1 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH20 0x2260FAC5E5542A773AA44FBCFEDF7C193BC2C599 PUSH1 0x80 DUP4 ADD MSTORE PUSH20 0xC02AAA39B223FE8D0A0E5C4F27EAD9083C756CC2 PUSH1 0xA0 DUP4 ADD MSTORE DUP3 MLOAD PUSH1 0xC DUP1 DUP3 MSTORE PUSH2 0x1A0 DUP3 ADD SWAP1 SWAP5 MSTORE SWAP2 SWAP3 SWAP1 SWAP2 SWAP1 DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP POP SWAP1 POP PUSH7 0x60F9D63C6CAF8 DUP2 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x158 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 DUP2 MSTORE POP POP PUSH7 0x60F9D63C6CAF8 DUP2 PUSH1 0x1 DUP2 MLOAD DUP2 LT PUSH2 0x179 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 DUP2 MSTORE POP POP PUSH6 0x54873CA5C45F DUP2 PUSH1 0x2 DUP2 MLOAD DUP2 LT PUSH2 0x199 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 DUP2 MSTORE POP POP PUSH6 0x54873CA5C45F DUP2 PUSH1 0x3 DUP2 MLOAD DUP2 LT PUSH2 0x1B9 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 DUP2 MSTORE POP POP PUSH7 0x12CC525D318894 DUP2 PUSH1 0x4 DUP2 MLOAD DUP2 LT PUSH2 0x1DA JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 DUP2 MSTORE POP POP PUSH7 0x12CC525D318894 DUP2 PUSH1 0x5 DUP2 MLOAD DUP2 LT PUSH2 0x1FB JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 DUP2 MSTORE POP POP PUSH7 0xBB38AFC0B0F7C DUP2 PUSH1 0x6 DUP2 MLOAD DUP2 LT PUSH2 0x21C JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 DUP2 MSTORE POP POP PUSH7 0xBB38AFC0B0F7C DUP2 PUSH1 0x7 DUP2 MLOAD DUP2 LT PUSH2 0x23D JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 DUP2 MSTORE POP POP PUSH7 0x7170ABCD5EA8C DUP2 PUSH1 0x8 DUP2 MLOAD DUP2 LT PUSH2 0x25E JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 DUP2 MSTORE POP POP PUSH6 0x5F874D4EA08E DUP2 PUSH1 0x9 DUP2 MLOAD DUP2 LT PUSH2 0x27E JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 DUP2 MSTORE POP POP PUSH7 0x8C1DA100749BE DUP2 PUSH1 0xA DUP2 MLOAD DUP2 LT PUSH2 0x29F JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 DUP2 MSTORE POP POP PUSH6 0x75FE00D7F668 DUP2 PUSH1 0xB DUP2 MLOAD DUP2 LT PUSH2 0x2BF JUMPI INVALID JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MSTORE PUSH1 0x40 MLOAD PUSH4 0xCA446DD9 PUSH1 0xE0 SHL DUP2 MSTORE PUSH20 0x2F75FEDA7423D8B85988D9545428D00F3213CF00 SWAP1 PUSH20 0x8761E889AD797BDE3BB2B6561982FD1CA4118872 SWAP1 PUSH20 0x64968B59DD39128C287D76BE50015161D10C08C2 SWAP1 DUP2 SWAP1 PUSH4 0xCA446DD9 SWAP1 PUSH2 0x351 SWAP1 PUSH32 0x703C2C8634BED68D98C029C18F310E7F7EC0E5D6342C590190B3CB8B3BA54532 SWAP1 DUP7 SWAP1 PUSH1 0x4 ADD PUSH2 0xC2B JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x36B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x37F JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x40 MLOAD PUSH4 0x177314A3 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND SWAP3 POP PUSH4 0x5DCC528C SWAP2 POP PUSH2 0x3E5 SWAP1 PUSH32 0x703C2C8634BED68D98C029C18F310E7F7EC0E5D6342C590190B3CB8B3BA54532 SWAP1 PUSH20 0x554928B31C4EF45862195B0233A3D689B08552A4 SWAP1 PUSH1 0x4 ADD PUSH2 0xC2B JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x3FF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x413 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP PUSH2 0x426 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 JUMPDEST PUSH1 0x6 DUP2 LT ISZERO PUSH2 0x7BD JUMPI DUP6 DUP2 PUSH1 0x6 DUP2 LT PUSH2 0x43E JUMPI INVALID JUMPDEST PUSH1 0x20 MUL ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP11 DUP3 PUSH1 0x6 DUP2 LT PUSH2 0x458 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xB16A19DE PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x495 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x4A9 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x4CD SWAP2 SWAP1 PUSH2 0xA32 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x4F3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x41D SWAP1 PUSH2 0xC86 JUMP JUMPDEST DUP6 DUP2 PUSH1 0x6 DUP2 LT PUSH2 0x4FF JUMPI INVALID JUMPDEST PUSH1 0x20 MUL ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP10 DUP3 PUSH1 0x6 DUP2 LT PUSH2 0x519 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xB16A19DE PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x556 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x56A JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x58E SWAP2 SWAP1 PUSH2 0xA32 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x5B4 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x41D SWAP1 PUSH2 0xC42 JUMP JUMPDEST PUSH2 0x5BC PUSH2 0x8AA JUMP JUMPDEST PUSH20 0xA9AE6E3207BDCCCB8F081EE0B4D0D2B4A79EA984 PUSH4 0x35EA6A75 DUP9 DUP5 PUSH1 0x6 DUP2 LT PUSH2 0x5E2 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL ADD MLOAD PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x603 SWAP2 SWAP1 PUSH2 0xB7A JUMP JUMPDEST PUSH2 0x180 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x61C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x630 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x654 SWAP2 SWAP1 PUSH2 0xA8A JUMP JUMPDEST SWAP1 POP DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x12E3AE16 DUP9 DUP5 PUSH1 0x6 DUP2 LT PUSH2 0x671 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL ADD MLOAD DUP14 DUP6 PUSH1 0x6 DUP2 LT PUSH2 0x682 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL ADD MLOAD PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6A4 SWAP3 SWAP2 SWAP1 PUSH2 0xB8E JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x6BE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x6D2 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x4D978258 DUP9 DUP5 PUSH1 0x6 DUP2 LT PUSH2 0x6F1 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL ADD MLOAD DUP13 DUP6 PUSH1 0x6 DUP2 LT PUSH2 0x702 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL ADD MLOAD PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x724 SWAP3 SWAP2 SWAP1 PUSH2 0xB8E JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x73E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x752 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP DUP1 PUSH1 0xE0 ADD MLOAD DUP9 DUP11 DUP1 PUSH1 0x1 ADD SWAP12 POP DUP2 MLOAD DUP2 LT PUSH2 0x76D JUMPI INVALID JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND PUSH1 0x20 SWAP3 DUP4 MUL SWAP2 SWAP1 SWAP2 ADD SWAP1 SWAP2 ADD MSTORE PUSH2 0x120 DUP2 ADD MLOAD DUP9 MLOAD PUSH1 0x1 DUP12 ADD SWAP11 DUP11 SWAP2 DUP2 LT PUSH2 0x79C JUMPI INVALID JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND PUSH1 0x20 SWAP3 DUP4 MUL SWAP2 SWAP1 SWAP2 ADD SWAP1 SWAP2 ADD MSTORE POP PUSH1 0x1 ADD PUSH2 0x429 JUMP JUMPDEST POP PUSH1 0x40 MLOAD PUSH4 0x3CF8B8D9 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 PUSH4 0x79F171B2 SWAP1 PUSH2 0x7EC SWAP1 DUP10 SWAP1 DUP9 SWAP1 PUSH1 0x4 ADD PUSH2 0xBA8 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x806 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x81A JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x40 MLOAD PUSH4 0x39CCBDD3 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP3 POP PUSH4 0x39CCBDD3 SWAP2 POP PUSH2 0x84F SWAP1 TIMESTAMP PUSH3 0x76A700 ADD SWAP1 PUSH1 0x4 ADD PUSH2 0xCBB JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x869 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x87D JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0xC0 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x6 SWAP1 PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY POP SWAP2 SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH2 0x180 ADD PUSH1 0x40 MSTORE DUP1 PUSH2 0x8BE PUSH2 0x915 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x0 PUSH1 0x20 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x40 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x60 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x80 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0xA0 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0xC0 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0xE0 DUP3 ADD DUP2 SWAP1 MSTORE PUSH2 0x100 DUP3 ADD DUP2 SWAP1 MSTORE PUSH2 0x120 DUP3 ADD DUP2 SWAP1 MSTORE PUSH2 0x140 DUP3 ADD DUP2 SWAP1 MSTORE PUSH2 0x160 SWAP1 SWAP2 ADD MSTORE SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP SWAP1 JUMP JUMPDEST DUP1 MLOAD PUSH2 0x933 DUP2 PUSH2 0xCE8 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x948 JUMPI DUP1 DUP2 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH1 0xC0 DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x965 JUMPI INVALID JUMPDEST PUSH1 0x40 MSTORE SWAP1 POP DUP1 DUP3 PUSH1 0xC0 DUP2 ADD DUP6 LT ISZERO PUSH2 0x97C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 JUMPDEST PUSH1 0x6 DUP2 LT ISZERO PUSH2 0x9A8 JUMPI DUP2 CALLDATALOAD PUSH2 0x993 DUP2 PUSH2 0xCE8 JUMP JUMPDEST DUP4 MSTORE PUSH1 0x20 SWAP3 DUP4 ADD SWAP3 SWAP2 SWAP1 SWAP2 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x97F JUMP JUMPDEST POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x9C2 JUMPI DUP1 DUP2 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x9DF JUMPI INVALID JUMPDEST PUSH1 0x40 MSTORE SWAP2 MLOAD DUP3 MSTORE POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 MLOAD PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND DUP2 EQ PUSH2 0x933 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 MLOAD PUSH5 0xFFFFFFFFFF DUP2 AND DUP2 EQ PUSH2 0x933 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 MLOAD PUSH1 0xFF DUP2 AND DUP2 EQ PUSH2 0x933 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xA43 JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 MLOAD PUSH2 0xA4E DUP2 PUSH2 0xCE8 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x180 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xA68 JUMPI DUP1 DUP2 REVERT JUMPDEST PUSH2 0xA72 DUP5 DUP5 PUSH2 0x938 JUMP JUMPDEST SWAP2 POP PUSH2 0xA81 DUP5 PUSH1 0xC0 DUP6 ADD PUSH2 0x938 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x180 DUP1 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xA9D JUMPI DUP2 DUP3 REVERT JUMPDEST PUSH2 0xAA6 DUP2 PUSH2 0xCC4 JUMP JUMPDEST SWAP1 POP PUSH2 0xAB2 DUP5 DUP5 PUSH2 0x9B1 JUMP JUMPDEST DUP2 MSTORE PUSH2 0xAC0 PUSH1 0x20 DUP5 ADD PUSH2 0x9EC JUMP JUMPDEST PUSH1 0x20 DUP3 ADD MSTORE PUSH2 0xAD1 PUSH1 0x40 DUP5 ADD PUSH2 0x9EC JUMP JUMPDEST PUSH1 0x40 DUP3 ADD MSTORE PUSH2 0xAE2 PUSH1 0x60 DUP5 ADD PUSH2 0x9EC JUMP JUMPDEST PUSH1 0x60 DUP3 ADD MSTORE PUSH2 0xAF3 PUSH1 0x80 DUP5 ADD PUSH2 0x9EC JUMP JUMPDEST PUSH1 0x80 DUP3 ADD MSTORE PUSH2 0xB04 PUSH1 0xA0 DUP5 ADD PUSH2 0x9EC JUMP JUMPDEST PUSH1 0xA0 DUP3 ADD MSTORE PUSH2 0xB15 PUSH1 0xC0 DUP5 ADD PUSH2 0xA0C JUMP JUMPDEST PUSH1 0xC0 DUP3 ADD MSTORE PUSH2 0xB26 PUSH1 0xE0 DUP5 ADD PUSH2 0x928 JUMP JUMPDEST PUSH1 0xE0 DUP3 ADD MSTORE PUSH2 0x100 PUSH2 0xB39 DUP2 DUP6 ADD PUSH2 0x928 JUMP JUMPDEST SWAP1 DUP3 ADD MSTORE PUSH2 0x120 PUSH2 0xB4B DUP5 DUP3 ADD PUSH2 0x928 JUMP JUMPDEST SWAP1 DUP3 ADD MSTORE PUSH2 0x140 PUSH2 0xB5D DUP5 DUP3 ADD PUSH2 0x928 JUMP JUMPDEST SWAP1 DUP3 ADD MSTORE PUSH2 0x160 PUSH2 0xB6F DUP5 DUP3 ADD PUSH2 0xA21 JUMP JUMPDEST SWAP1 DUP3 ADD MSTORE SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND DUP2 MSTORE SWAP2 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 DUP1 DUP3 MSTORE DUP4 MLOAD SWAP1 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP1 PUSH1 0x20 SWAP1 PUSH1 0x60 DUP5 ADD SWAP1 DUP3 DUP8 ADD DUP5 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0xBEA JUMPI DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 MSTORE SWAP3 DUP5 ADD SWAP3 SWAP1 DUP5 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0xBC5 JUMP JUMPDEST POP POP POP DUP4 DUP2 SUB DUP3 DUP6 ADD MSTORE DUP5 MLOAD DUP1 DUP3 MSTORE DUP6 DUP4 ADD SWAP2 DUP4 ADD SWAP1 DUP5 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0xC1E JUMPI DUP4 MLOAD DUP4 MSTORE SWAP3 DUP5 ADD SWAP3 SWAP2 DUP5 ADD SWAP2 PUSH1 0x1 ADD PUSH2 0xC02 JUMP JUMPDEST POP SWAP1 SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST SWAP2 DUP3 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x24 SWAP1 DUP3 ADD MSTORE PUSH32 0x4465627420546F6B656E20756E6465726C79696E6720646F6573206E6F74206D PUSH1 0x40 DUP3 ADD MSTORE PUSH4 0xC2E8C6D PUSH1 0xE3 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 DUP2 ADD MSTORE PUSH32 0x4F546F6B656E20756E6465726C79696E6720646F6573206E6F74206D61746368 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP2 DUP2 ADD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0xCE0 JUMPI INVALID JUMPDEST PUSH1 0x40 MSTORE SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0xCFD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x2E NUMBER ADD 0xC9 0xA8 CALLCODE 0xAF 0xF7 MLOAD 0xA9 DUP16 CREATE 0xB8 JUMP 0xAB 0xDC DUP1 0xFC 0xB3 POP 0x1E 0xBD EQ SELFDESTRUCT 0x2F 0xE7 0xC5 0x4B SDIV 0xB1 0x4A CALLER PUSH5 0x736F6C6343 STOP SMOD SDIV STOP CALLER ",
							"sourceMap": "1000:5038:10:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2143:3892;;;;;;:::i;:::-;;:::i;:::-;;;2344:17;;;2358:2;2344:17;;;;;;;;;2288:21;;2318:23;;2344:17;;;;;;;;;;;-1:-1:-1;2344:17:10;2318:43;;2423:34;;:::i;:::-;-1:-1:-1;2423:371:10;;;;;;;;2478:42;2423:371;;2531:42;2423:371;;;;2584:42;2423:371;;;;2637:42;2423:371;;;;;;;;2690:42;2423:371;;;;2743:42;2423:371;;;;2832:17;;2846:2;2832:17;;;;;;;;;2423:371;;;;2832:17;;;;;;;;;;;;;-1:-1:-1;2832:17:10;2803:46;;2873:16;2858:9;2868:1;2858:12;;;;;;;;;;;;;:31;;;;;2918:16;2903:9;2913:1;2903:12;;;;;;;;;;;;;:31;;;;;2967:14;2952:9;2962:1;2952:12;;;;;;;;;;;;;:29;;;;;3011:14;2996:9;3006:1;2996:12;;;;;;;;;;;;;:29;;;;;3059:16;3044:9;3054:1;3044:12;;;;;;;;;;;;;:31;;;;;3105:16;3090:9;3100:1;3090:12;;;;;;;;;;;;;:31;;;;;3155:16;3140:9;3150:1;3140:12;;;;;;;;;;;;;:31;;;;;3201:16;3186:9;3196:1;3186:12;;;;;;;;;;;;;:31;;;;;3251:16;3236:9;3246:1;3236:12;;;;;;;;;;;;;:31;;;;;3297:15;3282:9;3292:1;3282:12;;;;;;;;;;;;;:30;;;;;3347:16;3331:9;3341:2;3331:13;;;;;;;;;;;;;:32;;;;;3393:15;3377:9;3387:2;3377:13;;;;;;;;;;;;;;;;;:31;3964:92;;-1:-1:-1;;;3964:92:10;;1289:42;;1743;;1417;;;;3964:19;;:92;;3984:34;;1743:42;;3964:92;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;4135:98:10;;-1:-1:-1;;;4135:98:10;;-1:-1:-1;;;;;4135:26:10;;;-1:-1:-1;4135:26:10;;-1:-1:-1;4135:98:10;;4162:34;;1895:42;;4135:98;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;4242:181:10;;-1:-1:-1;;;4242:181:10;;;;;;;;;;4552:9;4547:953;4571:15;4567:1;:19;4547:953;;;4692:8;4701:1;4692:11;;;;;;;;;;;-1:-1:-1;;;;;4620:83:10;4636:21;4658:1;4636:24;;;;;;;;;;;-1:-1:-1;;;;;4620:66:10;;:68;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;4620:83:10;;4602:155;;;;-1:-1:-1;;;4602:155:10;;;;;;;:::i;:::-;4862:8;4871:1;4862:11;;;;;;;;;;;-1:-1:-1;;;;;4784:89:10;4800:27;4828:1;4800:30;;;;;;;;;;;-1:-1:-1;;;;;4784:72:10;;:74;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;4784:89:10;;4766:165;;;;-1:-1:-1;;;4766:165:10;;;;;;;:::i;:::-;4940:40;;:::i;:::-;1529:42;4992:45;5038:8;5047:1;5038:11;;;;;;;;;;;4992:58;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4940:110;;5090:16;-1:-1:-1;;;;;5090:29:10;;5120:8;5129:1;5120:11;;;;;;;;;;;5133:21;5155:1;5133:24;;;;;;;;;;;5090:68;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5205:16;-1:-1:-1;;;;;5205:40:10;;5246:8;5255:1;5246:11;;;;;;;;;;;5259:27;5287:1;5259:30;;;;;;;;;;;5205:85;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5327:11;:25;;;5301:6;5308:15;;;;;;5301:23;;;;;;;;-1:-1:-1;;;;;5301:51:10;;;:23;;;;;;;;;;;:51;5454:36;;;;5428:23;;5435:15;;;;5428:6;;:23;;;;;;-1:-1:-1;;;;;5428:62:10;;;:23;;;;;;;;;;;:62;-1:-1:-1;4588:3:10;;4547:953;;;-1:-1:-1;5838:55:10;;-1:-1:-1;;;5838:55:10;;-1:-1:-1;;;;;5838:36:10;;;;;:55;;5875:6;;5883:9;;5838:55;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;5949:80:10;;-1:-1:-1;;;5949:80:10;;-1:-1:-1;;;;;5949:39:10;;;-1:-1:-1;5949:39:10;;-1:-1:-1;5949:80:10;;5989:15;2020:7;5989:39;;5949:80;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2143:3892;;;;;;;;;:::o;-1:-1:-1:-;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;:::o;14:142:13:-;95:13;;117:33;95:13;117:33;:::i;:::-;76:80;;;:::o;161:765::-;;269:3;262:4;254:6;250:17;246:27;236:2;;291:5;284;277:20;236:2;328;322:9;370:3;362:6;358:16;440:6;428:10;425:22;404:18;392:10;389:34;386:62;383:2;;;451:9;383:2;478;471:22;511:6;-1:-1:-1;511:6:13;563;596:3;584:16;;581:25;-1:-1:-1;578:2:13;;;619:1;616;609:12;578:2;641:1;651:269;665:4;662:1;659:11;651:269;;;738:3;725:17;755:33;782:5;755:33;:::i;:::-;801:18;;842:4;866:12;;;;898;;;;;685:1;678:9;651:269;;;655:3;;;226:700;;;;:::o;931:428::-;;1063:4;1051:9;1046:3;1042:19;1038:30;1035:2;;;1085:5;1078;1071:20;1035:2;1122;1116:9;1164:4;1156:6;1152:17;1235:6;1223:10;1220:22;1199:18;1187:10;1184:34;1181:62;1178:2;;;1246:9;1178:2;1273;1266:22;1336:16;;1321:32;;-1:-1:-1;1306:6:13;1025:334;-1:-1:-1;1025:334:13:o;1364:194::-;1445:13;;1498:34;1487:46;;1477:57;;1467:2;;1548:1;1545;1538:12;1563:171;1643:13;;1696:12;1685:24;;1675:35;;1665:2;;1724:1;1721;1714:12;1739:162;1818:13;;1871:4;1860:16;;1850:27;;1840:2;;1891:1;1888;1881:12;1906:263;;2029:2;2017:9;2008:7;2004:23;2000:32;1997:2;;;2050:6;2042;2035:22;1997:2;2087:9;2081:16;2106:33;2133:5;2106:33;:::i;:::-;2158:5;1987:182;-1:-1:-1;;;1987:182:13:o;2174:358::-;;;2349:3;2337:9;2328:7;2324:23;2320:33;2317:2;;;2371:6;2363;2356:22;2317:2;2399:49;2440:7;2429:9;2399:49;:::i;:::-;2389:59;;2467;2518:7;2512:3;2501:9;2497:19;2467:59;:::i;:::-;2457:69;;2307:225;;;;;:::o;2537:1389::-;;2666:3;2710:2;2698:9;2689:7;2685:23;2681:32;2678:2;;;2731:6;2723;2716:22;2678:2;2762:18;2777:2;2762:18;:::i;:::-;2749:31;;2803:75;2870:7;2859:9;2803:75;:::i;:::-;2796:5;2789:90;2911:51;2958:2;2947:9;2943:18;2911:51;:::i;:::-;2906:2;2899:5;2895:14;2888:75;2995:51;3042:2;3031:9;3027:18;2995:51;:::i;:::-;2990:2;2983:5;2979:14;2972:75;3079:51;3126:2;3115:9;3111:18;3079:51;:::i;:::-;3074:2;3067:5;3063:14;3056:75;3164:52;3211:3;3200:9;3196:19;3164:52;:::i;:::-;3158:3;3151:5;3147:15;3140:77;3250:52;3297:3;3286:9;3282:19;3250:52;:::i;:::-;3244:3;3237:5;3233:15;3226:77;3336:51;3382:3;3371:9;3367:19;3336:51;:::i;:::-;3330:3;3323:5;3319:15;3312:76;3421:52;3468:3;3457:9;3453:19;3421:52;:::i;:::-;3415:3;3408:5;3404:15;3397:77;3493:3;3528:51;3575:2;3564:9;3560:18;3528:51;:::i;:::-;3512:14;;;3505:75;3599:3;3634:51;3666:18;;;3634:51;:::i;:::-;3618:14;;;3611:75;3705:3;3740:51;3772:18;;;3740:51;:::i;:::-;3724:14;;;3717:75;3811:3;3846:49;3876:18;;;3846:49;:::i;:::-;3830:14;;;3823:73;3834:5;2646:1280;-1:-1:-1;;;2646:1280:13:o;3931:211::-;-1:-1:-1;;;;;4103:32:13;;;;4085:51;;4073:2;4058:18;;4040:102::o;4147:312::-;-1:-1:-1;;;;;4385:15:13;;;4367:34;;4437:15;;4432:2;4417:18;;4410:43;4317:2;4302:18;;4284:175::o;4464:1184::-;4732:2;4744:21;;;4814:13;;4717:18;;;4836:22;;;4464:1184;;4911:4;;4889:2;4874:18;;;4938:15;;;4464:1184;4984:195;4998:6;4995:1;4992:13;4984:195;;;5063:13;;-1:-1:-1;;;;;5059:39:13;5047:52;;5119:12;;;;5154:15;;;;5095:1;5013:9;4984:195;;;-1:-1:-1;;;5215:19:13;;;5195:18;;;5188:47;5285:13;;5307:21;;;5383:15;;;;5346:12;;;5418:4;5431:189;5447:8;5442:3;5439:17;5431:189;;;5516:15;;5502:30;;5593:17;;;;5554:14;;;;5475:1;5466:11;5431:189;;;-1:-1:-1;5637:5:13;;4693:955;-1:-1:-1;;;;;;;4693:955:13:o;5653:274::-;5827:25;;;-1:-1:-1;;;;;5888:32:13;5883:2;5868:18;;5861:60;5815:2;5800:18;;5782:145::o;5932:400::-;6134:2;6116:21;;;6173:2;6153:18;;;6146:30;6212:34;6207:2;6192:18;;6185:62;-1:-1:-1;;;6278:2:13;6263:18;;6256:34;6322:3;6307:19;;6106:226::o;6337:356::-;6539:2;6521:21;;;6558:18;;;6551:30;6617:34;6612:2;6597:18;;6590:62;6684:2;6669:18;;6511:182::o;7048:177::-;7194:25;;;7182:2;7167:18;;7149:76::o;7230:242::-;7300:2;7294:9;7330:17;;;7377:18;7362:34;;7398:22;;;7359:62;7356:2;;;7424:9;7356:2;7451;7444:22;7274:198;;-1:-1:-1;7274:198:13:o;7477:133::-;-1:-1:-1;;;;;7554:31:13;;7544:42;;7534:2;;7600:1;7597;7590:12;7534:2;7524:86;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "676400",
								"executionCost": "708",
								"totalCost": "677108"
							},
							"external": {
								"execute(address[6],address[6])": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 1000,
									"end": 6038,
									"name": "PUSH",
									"source": 10,
									"value": "80"
								},
								{
									"begin": 1000,
									"end": 6038,
									"name": "PUSH",
									"source": 10,
									"value": "40"
								},
								{
									"begin": 1000,
									"end": 6038,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 1000,
									"end": 6038,
									"name": "CALLVALUE",
									"source": 10
								},
								{
									"begin": 1000,
									"end": 6038,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 1000,
									"end": 6038,
									"name": "ISZERO",
									"source": 10
								},
								{
									"begin": 1000,
									"end": 6038,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "1"
								},
								{
									"begin": 1000,
									"end": 6038,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 1000,
									"end": 6038,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 1000,
									"end": 6038,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 1000,
									"end": 6038,
									"name": "REVERT",
									"source": 10
								},
								{
									"begin": 1000,
									"end": 6038,
									"name": "tag",
									"source": 10,
									"value": "1"
								},
								{
									"begin": 1000,
									"end": 6038,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1000,
									"end": 6038,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1000,
									"end": 6038,
									"name": "PUSH #[$]",
									"source": 10,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1000,
									"end": 6038,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 1000,
									"end": 6038,
									"name": "PUSH [$]",
									"source": 10,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1000,
									"end": 6038,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 1000,
									"end": 6038,
									"name": "CODECOPY",
									"source": 10
								},
								{
									"begin": 1000,
									"end": 6038,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 1000,
									"end": 6038,
									"name": "RETURN",
									"source": 10
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212202e4301c9a8f2aff751a98ff0b856abdc80fcb3501ebd14ff2fe7c54b05b14a3364736f6c63430007050033",
									".code": [
										{
											"begin": 1000,
											"end": 6038,
											"name": "PUSH",
											"source": 10,
											"value": "80"
										},
										{
											"begin": 1000,
											"end": 6038,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 1000,
											"end": 6038,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1000,
											"end": 6038,
											"name": "CALLVALUE",
											"source": 10
										},
										{
											"begin": 1000,
											"end": 6038,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1000,
											"end": 6038,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 1000,
											"end": 6038,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 1000,
											"end": 6038,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1000,
											"end": 6038,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1000,
											"end": 6038,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1000,
											"end": 6038,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 1000,
											"end": 6038,
											"name": "tag",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 1000,
											"end": 6038,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1000,
											"end": 6038,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1000,
											"end": 6038,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 1000,
											"end": 6038,
											"name": "CALLDATASIZE",
											"source": 10
										},
										{
											"begin": 1000,
											"end": 6038,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 1000,
											"end": 6038,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "2"
										},
										{
											"begin": 1000,
											"end": 6038,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1000,
											"end": 6038,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1000,
											"end": 6038,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 1000,
											"end": 6038,
											"name": "PUSH",
											"source": 10,
											"value": "E0"
										},
										{
											"begin": 1000,
											"end": 6038,
											"name": "SHR",
											"source": 10
										},
										{
											"begin": 1000,
											"end": 6038,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1000,
											"end": 6038,
											"name": "PUSH",
											"source": 10,
											"value": "8314B221"
										},
										{
											"begin": 1000,
											"end": 6038,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 1000,
											"end": 6038,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "3"
										},
										{
											"begin": 1000,
											"end": 6038,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1000,
											"end": 6038,
											"name": "tag",
											"source": 10,
											"value": "2"
										},
										{
											"begin": 1000,
											"end": 6038,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1000,
											"end": 6038,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1000,
											"end": 6038,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1000,
											"end": 6038,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 2143,
											"end": 6035,
											"name": "tag",
											"source": 10,
											"value": "3"
										},
										{
											"begin": 2143,
											"end": 6035,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2143,
											"end": 6035,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 2143,
											"end": 6035,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "5"
										},
										{
											"begin": 2143,
											"end": 6035,
											"name": "CALLDATASIZE",
											"source": 10
										},
										{
											"begin": 2143,
											"end": 6035,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 2143,
											"end": 6035,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "6"
										},
										{
											"begin": 2143,
											"end": 6035,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 2143,
											"end": 6035,
											"name": "tag",
											"source": 10,
											"value": "5"
										},
										{
											"begin": 2143,
											"end": 6035,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2143,
											"end": 6035,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "7"
										},
										{
											"begin": 2143,
											"end": 6035,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 2143,
											"end": 6035,
											"name": "tag",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 2143,
											"end": 6035,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2143,
											"end": 6035,
											"name": "STOP",
											"source": 10
										},
										{
											"begin": 2143,
											"end": 6035,
											"name": "tag",
											"source": 10,
											"value": "7"
										},
										{
											"begin": 2143,
											"end": 6035,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2344,
											"end": 2361,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 2344,
											"end": 2361,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2344,
											"end": 2361,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 2358,
											"end": 2360,
											"name": "PUSH",
											"source": 10,
											"value": "C"
										},
										{
											"begin": 2344,
											"end": 2361,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2344,
											"end": 2361,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2344,
											"end": 2361,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 2344,
											"end": 2361,
											"name": "PUSH",
											"source": 10,
											"value": "1A0"
										},
										{
											"begin": 2344,
											"end": 2361,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2344,
											"end": 2361,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2344,
											"end": 2361,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2344,
											"end": 2361,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 2344,
											"end": 2361,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 2288,
											"end": 2309,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2288,
											"end": 2309,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2318,
											"end": 2341,
											"name": "PUSH",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 2318,
											"end": 2341,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2344,
											"end": 2361,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2344,
											"end": 2361,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 2344,
											"end": 2361,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2344,
											"end": 2361,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2344,
											"end": 2361,
											"name": "PUSH",
											"source": 10,
											"value": "180"
										},
										{
											"begin": 2344,
											"end": 2361,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2344,
											"end": 2361,
											"name": "CALLDATASIZE",
											"source": 10
										},
										{
											"begin": 2344,
											"end": 2361,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 2344,
											"end": 2361,
											"name": "CALLDATACOPY",
											"source": 10
										},
										{
											"begin": 2344,
											"end": 2361,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2344,
											"end": 2361,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2344,
											"end": 2361,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2318,
											"end": 2361,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2318,
											"end": 2361,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2423,
											"end": 2457,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "11"
										},
										{
											"begin": 2423,
											"end": 2457,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "12"
										},
										{
											"begin": 2423,
											"end": 2457,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 2423,
											"end": 2457,
											"name": "tag",
											"source": 10,
											"value": "11"
										},
										{
											"begin": 2423,
											"end": 2457,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2423,
											"end": 2794,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 2423,
											"end": 2794,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2423,
											"end": 2794,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 2423,
											"end": 2794,
											"name": "PUSH",
											"source": 10,
											"value": "C0"
										},
										{
											"begin": 2423,
											"end": 2794,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2423,
											"end": 2794,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2423,
											"end": 2794,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2423,
											"end": 2794,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 2478,
											"end": 2520,
											"name": "PUSH",
											"source": 10,
											"value": "6B175474E89094C44DA98B954EEDEAC495271D0F"
										},
										{
											"begin": 2423,
											"end": 2794,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2423,
											"end": 2794,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 2531,
											"end": 2573,
											"name": "PUSH",
											"source": 10,
											"value": "56FD409E1D7A124BD7017459DFEA2F387B6D5CD"
										},
										{
											"begin": 2423,
											"end": 2794,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 2423,
											"end": 2794,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2423,
											"end": 2794,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2423,
											"end": 2794,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 2584,
											"end": 2626,
											"name": "PUSH",
											"source": 10,
											"value": "A0B86991C6218B36C1D19D4A2E9EB0CE3606EB48"
										},
										{
											"begin": 2423,
											"end": 2794,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2423,
											"end": 2794,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 2423,
											"end": 2794,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2423,
											"end": 2794,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 2637,
											"end": 2679,
											"name": "PUSH",
											"source": 10,
											"value": "DAC17F958D2EE523A2206206994597C13D831EC7"
										},
										{
											"begin": 2423,
											"end": 2794,
											"name": "PUSH",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 2423,
											"end": 2794,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2423,
											"end": 2794,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 2423,
											"end": 2794,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2423,
											"end": 2794,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2423,
											"end": 2794,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2423,
											"end": 2794,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2423,
											"end": 2794,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 2690,
											"end": 2732,
											"name": "PUSH",
											"source": 10,
											"value": "2260FAC5E5542A773AA44FBCFEDF7C193BC2C599"
										},
										{
											"begin": 2423,
											"end": 2794,
											"name": "PUSH",
											"source": 10,
											"value": "80"
										},
										{
											"begin": 2423,
											"end": 2794,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 2423,
											"end": 2794,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2423,
											"end": 2794,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 2743,
											"end": 2785,
											"name": "PUSH",
											"source": 10,
											"value": "C02AAA39B223FE8D0A0E5C4F27EAD9083C756CC2"
										},
										{
											"begin": 2423,
											"end": 2794,
											"name": "PUSH",
											"source": 10,
											"value": "A0"
										},
										{
											"begin": 2423,
											"end": 2794,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 2423,
											"end": 2794,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2423,
											"end": 2794,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 2832,
											"end": 2849,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2832,
											"end": 2849,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 2846,
											"end": 2848,
											"name": "PUSH",
											"source": 10,
											"value": "C"
										},
										{
											"begin": 2832,
											"end": 2849,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2832,
											"end": 2849,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2832,
											"end": 2849,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 2832,
											"end": 2849,
											"name": "PUSH",
											"source": 10,
											"value": "1A0"
										},
										{
											"begin": 2832,
											"end": 2849,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2832,
											"end": 2849,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2832,
											"end": 2849,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2832,
											"end": 2849,
											"name": "SWAP5",
											"source": 10
										},
										{
											"begin": 2832,
											"end": 2849,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 2423,
											"end": 2794,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2423,
											"end": 2794,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 2423,
											"end": 2794,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2423,
											"end": 2794,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2832,
											"end": 2849,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2832,
											"end": 2849,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2832,
											"end": 2849,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 2832,
											"end": 2849,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2832,
											"end": 2849,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 2832,
											"end": 2849,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2832,
											"end": 2849,
											"name": "MUL",
											"source": 10
										},
										{
											"begin": 2832,
											"end": 2849,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2832,
											"end": 2849,
											"name": "CALLDATASIZE",
											"source": 10
										},
										{
											"begin": 2832,
											"end": 2849,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 2832,
											"end": 2849,
											"name": "CALLDATACOPY",
											"source": 10
										},
										{
											"begin": 2832,
											"end": 2849,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2832,
											"end": 2849,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2832,
											"end": 2849,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2803,
											"end": 2849,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2803,
											"end": 2849,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2873,
											"end": 2889,
											"name": "PUSH",
											"source": 10,
											"value": "60F9D63C6CAF8"
										},
										{
											"begin": 2858,
											"end": 2867,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2868,
											"end": 2869,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2858,
											"end": 2870,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2858,
											"end": 2870,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 2858,
											"end": 2870,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2858,
											"end": 2870,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 2858,
											"end": 2870,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "15"
										},
										{
											"begin": 2858,
											"end": 2870,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 2858,
											"end": 2870,
											"name": "INVALID",
											"source": 10
										},
										{
											"begin": 2858,
											"end": 2870,
											"name": "tag",
											"source": 10,
											"value": "15"
										},
										{
											"begin": 2858,
											"end": 2870,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2858,
											"end": 2870,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 2858,
											"end": 2870,
											"name": "MUL",
											"source": 10
										},
										{
											"begin": 2858,
											"end": 2870,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 2858,
											"end": 2870,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2858,
											"end": 2870,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2858,
											"end": 2889,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2858,
											"end": 2889,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2858,
											"end": 2889,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 2858,
											"end": 2889,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2858,
											"end": 2889,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2918,
											"end": 2934,
											"name": "PUSH",
											"source": 10,
											"value": "60F9D63C6CAF8"
										},
										{
											"begin": 2903,
											"end": 2912,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2913,
											"end": 2914,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 2903,
											"end": 2915,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2903,
											"end": 2915,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 2903,
											"end": 2915,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2903,
											"end": 2915,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 2903,
											"end": 2915,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "16"
										},
										{
											"begin": 2903,
											"end": 2915,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 2903,
											"end": 2915,
											"name": "INVALID",
											"source": 10
										},
										{
											"begin": 2903,
											"end": 2915,
											"name": "tag",
											"source": 10,
											"value": "16"
										},
										{
											"begin": 2903,
											"end": 2915,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2903,
											"end": 2915,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 2903,
											"end": 2915,
											"name": "MUL",
											"source": 10
										},
										{
											"begin": 2903,
											"end": 2915,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 2903,
											"end": 2915,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2903,
											"end": 2915,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2903,
											"end": 2934,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2903,
											"end": 2934,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2903,
											"end": 2934,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 2903,
											"end": 2934,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2903,
											"end": 2934,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2967,
											"end": 2981,
											"name": "PUSH",
											"source": 10,
											"value": "54873CA5C45F"
										},
										{
											"begin": 2952,
											"end": 2961,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2962,
											"end": 2963,
											"name": "PUSH",
											"source": 10,
											"value": "2"
										},
										{
											"begin": 2952,
											"end": 2964,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2952,
											"end": 2964,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 2952,
											"end": 2964,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2952,
											"end": 2964,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 2952,
											"end": 2964,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "17"
										},
										{
											"begin": 2952,
											"end": 2964,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 2952,
											"end": 2964,
											"name": "INVALID",
											"source": 10
										},
										{
											"begin": 2952,
											"end": 2964,
											"name": "tag",
											"source": 10,
											"value": "17"
										},
										{
											"begin": 2952,
											"end": 2964,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2952,
											"end": 2964,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 2952,
											"end": 2964,
											"name": "MUL",
											"source": 10
										},
										{
											"begin": 2952,
											"end": 2964,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 2952,
											"end": 2964,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2952,
											"end": 2964,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2952,
											"end": 2981,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2952,
											"end": 2981,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2952,
											"end": 2981,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 2952,
											"end": 2981,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2952,
											"end": 2981,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3011,
											"end": 3025,
											"name": "PUSH",
											"source": 10,
											"value": "54873CA5C45F"
										},
										{
											"begin": 2996,
											"end": 3005,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3006,
											"end": 3007,
											"name": "PUSH",
											"source": 10,
											"value": "3"
										},
										{
											"begin": 2996,
											"end": 3008,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2996,
											"end": 3008,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 2996,
											"end": 3008,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2996,
											"end": 3008,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 2996,
											"end": 3008,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "18"
										},
										{
											"begin": 2996,
											"end": 3008,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 2996,
											"end": 3008,
											"name": "INVALID",
											"source": 10
										},
										{
											"begin": 2996,
											"end": 3008,
											"name": "tag",
											"source": 10,
											"value": "18"
										},
										{
											"begin": 2996,
											"end": 3008,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2996,
											"end": 3008,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 2996,
											"end": 3008,
											"name": "MUL",
											"source": 10
										},
										{
											"begin": 2996,
											"end": 3008,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 2996,
											"end": 3008,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2996,
											"end": 3008,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2996,
											"end": 3025,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2996,
											"end": 3025,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2996,
											"end": 3025,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 2996,
											"end": 3025,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2996,
											"end": 3025,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3059,
											"end": 3075,
											"name": "PUSH",
											"source": 10,
											"value": "12CC525D318894"
										},
										{
											"begin": 3044,
											"end": 3053,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3054,
											"end": 3055,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 3044,
											"end": 3056,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3044,
											"end": 3056,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 3044,
											"end": 3056,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3044,
											"end": 3056,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 3044,
											"end": 3056,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "19"
										},
										{
											"begin": 3044,
											"end": 3056,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 3044,
											"end": 3056,
											"name": "INVALID",
											"source": 10
										},
										{
											"begin": 3044,
											"end": 3056,
											"name": "tag",
											"source": 10,
											"value": "19"
										},
										{
											"begin": 3044,
											"end": 3056,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3044,
											"end": 3056,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 3044,
											"end": 3056,
											"name": "MUL",
											"source": 10
										},
										{
											"begin": 3044,
											"end": 3056,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 3044,
											"end": 3056,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3044,
											"end": 3056,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3044,
											"end": 3075,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3044,
											"end": 3075,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3044,
											"end": 3075,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 3044,
											"end": 3075,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3044,
											"end": 3075,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3105,
											"end": 3121,
											"name": "PUSH",
											"source": 10,
											"value": "12CC525D318894"
										},
										{
											"begin": 3090,
											"end": 3099,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3100,
											"end": 3101,
											"name": "PUSH",
											"source": 10,
											"value": "5"
										},
										{
											"begin": 3090,
											"end": 3102,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3090,
											"end": 3102,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 3090,
											"end": 3102,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3090,
											"end": 3102,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 3090,
											"end": 3102,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 3090,
											"end": 3102,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 3090,
											"end": 3102,
											"name": "INVALID",
											"source": 10
										},
										{
											"begin": 3090,
											"end": 3102,
											"name": "tag",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 3090,
											"end": 3102,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3090,
											"end": 3102,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 3090,
											"end": 3102,
											"name": "MUL",
											"source": 10
										},
										{
											"begin": 3090,
											"end": 3102,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 3090,
											"end": 3102,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3090,
											"end": 3102,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3090,
											"end": 3121,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3090,
											"end": 3121,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3090,
											"end": 3121,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 3090,
											"end": 3121,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3090,
											"end": 3121,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3155,
											"end": 3171,
											"name": "PUSH",
											"source": 10,
											"value": "BB38AFC0B0F7C"
										},
										{
											"begin": 3140,
											"end": 3149,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3150,
											"end": 3151,
											"name": "PUSH",
											"source": 10,
											"value": "6"
										},
										{
											"begin": 3140,
											"end": 3152,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3140,
											"end": 3152,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 3140,
											"end": 3152,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3140,
											"end": 3152,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 3140,
											"end": 3152,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "21"
										},
										{
											"begin": 3140,
											"end": 3152,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 3140,
											"end": 3152,
											"name": "INVALID",
											"source": 10
										},
										{
											"begin": 3140,
											"end": 3152,
											"name": "tag",
											"source": 10,
											"value": "21"
										},
										{
											"begin": 3140,
											"end": 3152,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3140,
											"end": 3152,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 3140,
											"end": 3152,
											"name": "MUL",
											"source": 10
										},
										{
											"begin": 3140,
											"end": 3152,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 3140,
											"end": 3152,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3140,
											"end": 3152,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3140,
											"end": 3171,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3140,
											"end": 3171,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3140,
											"end": 3171,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 3140,
											"end": 3171,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3140,
											"end": 3171,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3201,
											"end": 3217,
											"name": "PUSH",
											"source": 10,
											"value": "BB38AFC0B0F7C"
										},
										{
											"begin": 3186,
											"end": 3195,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3196,
											"end": 3197,
											"name": "PUSH",
											"source": 10,
											"value": "7"
										},
										{
											"begin": 3186,
											"end": 3198,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3186,
											"end": 3198,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 3186,
											"end": 3198,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3186,
											"end": 3198,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 3186,
											"end": 3198,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "22"
										},
										{
											"begin": 3186,
											"end": 3198,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 3186,
											"end": 3198,
											"name": "INVALID",
											"source": 10
										},
										{
											"begin": 3186,
											"end": 3198,
											"name": "tag",
											"source": 10,
											"value": "22"
										},
										{
											"begin": 3186,
											"end": 3198,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3186,
											"end": 3198,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 3186,
											"end": 3198,
											"name": "MUL",
											"source": 10
										},
										{
											"begin": 3186,
											"end": 3198,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 3186,
											"end": 3198,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3186,
											"end": 3198,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3186,
											"end": 3217,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3186,
											"end": 3217,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3186,
											"end": 3217,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 3186,
											"end": 3217,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3186,
											"end": 3217,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3251,
											"end": 3267,
											"name": "PUSH",
											"source": 10,
											"value": "7170ABCD5EA8C"
										},
										{
											"begin": 3236,
											"end": 3245,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3246,
											"end": 3247,
											"name": "PUSH",
											"source": 10,
											"value": "8"
										},
										{
											"begin": 3236,
											"end": 3248,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3236,
											"end": 3248,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 3236,
											"end": 3248,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3236,
											"end": 3248,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 3236,
											"end": 3248,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "23"
										},
										{
											"begin": 3236,
											"end": 3248,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 3236,
											"end": 3248,
											"name": "INVALID",
											"source": 10
										},
										{
											"begin": 3236,
											"end": 3248,
											"name": "tag",
											"source": 10,
											"value": "23"
										},
										{
											"begin": 3236,
											"end": 3248,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3236,
											"end": 3248,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 3236,
											"end": 3248,
											"name": "MUL",
											"source": 10
										},
										{
											"begin": 3236,
											"end": 3248,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 3236,
											"end": 3248,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3236,
											"end": 3248,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3236,
											"end": 3267,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3236,
											"end": 3267,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3236,
											"end": 3267,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 3236,
											"end": 3267,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3236,
											"end": 3267,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3297,
											"end": 3312,
											"name": "PUSH",
											"source": 10,
											"value": "5F874D4EA08E"
										},
										{
											"begin": 3282,
											"end": 3291,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3292,
											"end": 3293,
											"name": "PUSH",
											"source": 10,
											"value": "9"
										},
										{
											"begin": 3282,
											"end": 3294,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3282,
											"end": 3294,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 3282,
											"end": 3294,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3282,
											"end": 3294,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 3282,
											"end": 3294,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 3282,
											"end": 3294,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 3282,
											"end": 3294,
											"name": "INVALID",
											"source": 10
										},
										{
											"begin": 3282,
											"end": 3294,
											"name": "tag",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 3282,
											"end": 3294,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3282,
											"end": 3294,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 3282,
											"end": 3294,
											"name": "MUL",
											"source": 10
										},
										{
											"begin": 3282,
											"end": 3294,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 3282,
											"end": 3294,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3282,
											"end": 3294,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3282,
											"end": 3312,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3282,
											"end": 3312,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3282,
											"end": 3312,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 3282,
											"end": 3312,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3282,
											"end": 3312,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3347,
											"end": 3363,
											"name": "PUSH",
											"source": 10,
											"value": "8C1DA100749BE"
										},
										{
											"begin": 3331,
											"end": 3340,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3341,
											"end": 3343,
											"name": "PUSH",
											"source": 10,
											"value": "A"
										},
										{
											"begin": 3331,
											"end": 3344,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3331,
											"end": 3344,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 3331,
											"end": 3344,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3331,
											"end": 3344,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 3331,
											"end": 3344,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "25"
										},
										{
											"begin": 3331,
											"end": 3344,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 3331,
											"end": 3344,
											"name": "INVALID",
											"source": 10
										},
										{
											"begin": 3331,
											"end": 3344,
											"name": "tag",
											"source": 10,
											"value": "25"
										},
										{
											"begin": 3331,
											"end": 3344,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3331,
											"end": 3344,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 3331,
											"end": 3344,
											"name": "MUL",
											"source": 10
										},
										{
											"begin": 3331,
											"end": 3344,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 3331,
											"end": 3344,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3331,
											"end": 3344,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3331,
											"end": 3363,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3331,
											"end": 3363,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3331,
											"end": 3363,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 3331,
											"end": 3363,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3331,
											"end": 3363,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3393,
											"end": 3408,
											"name": "PUSH",
											"source": 10,
											"value": "75FE00D7F668"
										},
										{
											"begin": 3377,
											"end": 3386,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3387,
											"end": 3389,
											"name": "PUSH",
											"source": 10,
											"value": "B"
										},
										{
											"begin": 3377,
											"end": 3390,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3377,
											"end": 3390,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 3377,
											"end": 3390,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3377,
											"end": 3390,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 3377,
											"end": 3390,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "26"
										},
										{
											"begin": 3377,
											"end": 3390,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 3377,
											"end": 3390,
											"name": "INVALID",
											"source": 10
										},
										{
											"begin": 3377,
											"end": 3390,
											"name": "tag",
											"source": 10,
											"value": "26"
										},
										{
											"begin": 3377,
											"end": 3390,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3377,
											"end": 3390,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 3377,
											"end": 3390,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3377,
											"end": 3390,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3377,
											"end": 3390,
											"name": "MUL",
											"source": 10
										},
										{
											"begin": 3377,
											"end": 3390,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 3377,
											"end": 3390,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3377,
											"end": 3390,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 3377,
											"end": 3390,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3377,
											"end": 3390,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3377,
											"end": 3408,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 3964,
											"end": 4056,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 3964,
											"end": 4056,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "CA446DD9"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3964,
											"end": 4056,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3964,
											"end": 4056,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1289,
											"end": 1331,
											"name": "PUSH",
											"source": 10,
											"value": "2F75FEDA7423D8B85988D9545428D00F3213CF00"
										},
										{
											"begin": 1289,
											"end": 1331,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1743,
											"end": 1785,
											"name": "PUSH",
											"source": 10,
											"value": "8761E889AD797BDE3BB2B6561982FD1CA4118872"
										},
										{
											"begin": 1743,
											"end": 1785,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1417,
											"end": 1459,
											"name": "PUSH",
											"source": 10,
											"value": "64968B59DD39128C287D76BE50015161D10C08C2"
										},
										{
											"begin": 1417,
											"end": 1459,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1417,
											"end": 1459,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1417,
											"end": 1459,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3964,
											"end": 3983,
											"name": "PUSH",
											"source": 10,
											"value": "CA446DD9"
										},
										{
											"begin": 3964,
											"end": 3983,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3964,
											"end": 4056,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "27"
										},
										{
											"begin": 3964,
											"end": 4056,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3984,
											"end": 4018,
											"name": "PUSH",
											"source": 10,
											"value": "703C2C8634BED68D98C029C18F310E7F7EC0E5D6342C590190B3CB8B3BA54532"
										},
										{
											"begin": 3984,
											"end": 4018,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1743,
											"end": 1785,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 1743,
											"end": 1785,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3964,
											"end": 4056,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 3964,
											"end": 4056,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3964,
											"end": 4056,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "28"
										},
										{
											"begin": 3964,
											"end": 4056,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 3964,
											"end": 4056,
											"name": "tag",
											"source": 10,
											"value": "27"
										},
										{
											"begin": 3964,
											"end": 4056,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3964,
											"end": 4056,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3964,
											"end": 4056,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 3964,
											"end": 4056,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 3964,
											"end": 4056,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 3964,
											"end": 4056,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 3964,
											"end": 4056,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 3964,
											"end": 4056,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3964,
											"end": 4056,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3964,
											"end": 4056,
											"name": "DUP8",
											"source": 10
										},
										{
											"begin": 3964,
											"end": 4056,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 3964,
											"end": 4056,
											"name": "EXTCODESIZE",
											"source": 10
										},
										{
											"begin": 3964,
											"end": 4056,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 3964,
											"end": 4056,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 3964,
											"end": 4056,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 3964,
											"end": 4056,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "29"
										},
										{
											"begin": 3964,
											"end": 4056,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 3964,
											"end": 4056,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3964,
											"end": 4056,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 3964,
											"end": 4056,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 3964,
											"end": 4056,
											"name": "tag",
											"source": 10,
											"value": "29"
										},
										{
											"begin": 3964,
											"end": 4056,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3964,
											"end": 4056,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3964,
											"end": 4056,
											"name": "GAS",
											"source": 10
										},
										{
											"begin": 3964,
											"end": 4056,
											"name": "CALL",
											"source": 10
										},
										{
											"begin": 3964,
											"end": 4056,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 3964,
											"end": 4056,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 3964,
											"end": 4056,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 3964,
											"end": 4056,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "31"
										},
										{
											"begin": 3964,
											"end": 4056,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 3964,
											"end": 4056,
											"name": "RETURNDATASIZE",
											"source": 10
										},
										{
											"begin": 3964,
											"end": 4056,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3964,
											"end": 4056,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 3964,
											"end": 4056,
											"name": "RETURNDATACOPY",
											"source": 10
										},
										{
											"begin": 3964,
											"end": 4056,
											"name": "RETURNDATASIZE",
											"source": 10
										},
										{
											"begin": 3964,
											"end": 4056,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3964,
											"end": 4056,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 3964,
											"end": 4056,
											"name": "tag",
											"source": 10,
											"value": "31"
										},
										{
											"begin": 3964,
											"end": 4056,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4135,
											"end": 4233,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 4135,
											"end": 4233,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "177314A3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4135,
											"end": 4233,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4135,
											"end": 4233,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4135,
											"end": 4161,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 4135,
											"end": 4161,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 4135,
											"end": 4161,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4135,
											"end": 4161,
											"name": "PUSH",
											"source": 10,
											"value": "5DCC528C"
										},
										{
											"begin": 4135,
											"end": 4161,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4135,
											"end": 4233,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "32"
										},
										{
											"begin": 4135,
											"end": 4233,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4162,
											"end": 4196,
											"name": "PUSH",
											"source": 10,
											"value": "703C2C8634BED68D98C029C18F310E7F7EC0E5D6342C590190B3CB8B3BA54532"
										},
										{
											"begin": 4162,
											"end": 4196,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1895,
											"end": 1937,
											"name": "PUSH",
											"source": 10,
											"value": "554928B31C4EF45862195B0233A3D689B08552A4"
										},
										{
											"begin": 1895,
											"end": 1937,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4135,
											"end": 4233,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 4135,
											"end": 4233,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4135,
											"end": 4233,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "28"
										},
										{
											"begin": 4135,
											"end": 4233,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 4135,
											"end": 4233,
											"name": "tag",
											"source": 10,
											"value": "32"
										},
										{
											"begin": 4135,
											"end": 4233,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4135,
											"end": 4233,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4135,
											"end": 4233,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 4135,
											"end": 4233,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 4135,
											"end": 4233,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 4135,
											"end": 4233,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 4135,
											"end": 4233,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 4135,
											"end": 4233,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4135,
											"end": 4233,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4135,
											"end": 4233,
											"name": "DUP8",
											"source": 10
										},
										{
											"begin": 4135,
											"end": 4233,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 4135,
											"end": 4233,
											"name": "EXTCODESIZE",
											"source": 10
										},
										{
											"begin": 4135,
											"end": 4233,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 4135,
											"end": 4233,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 4135,
											"end": 4233,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 4135,
											"end": 4233,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "33"
										},
										{
											"begin": 4135,
											"end": 4233,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 4135,
											"end": 4233,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4135,
											"end": 4233,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 4135,
											"end": 4233,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 4135,
											"end": 4233,
											"name": "tag",
											"source": 10,
											"value": "33"
										},
										{
											"begin": 4135,
											"end": 4233,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4135,
											"end": 4233,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4135,
											"end": 4233,
											"name": "GAS",
											"source": 10
										},
										{
											"begin": 4135,
											"end": 4233,
											"name": "CALL",
											"source": 10
										},
										{
											"begin": 4135,
											"end": 4233,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 4135,
											"end": 4233,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 4135,
											"end": 4233,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 4135,
											"end": 4233,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "35"
										},
										{
											"begin": 4135,
											"end": 4233,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 4135,
											"end": 4233,
											"name": "RETURNDATASIZE",
											"source": 10
										},
										{
											"begin": 4135,
											"end": 4233,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4135,
											"end": 4233,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 4135,
											"end": 4233,
											"name": "RETURNDATACOPY",
											"source": 10
										},
										{
											"begin": 4135,
											"end": 4233,
											"name": "RETURNDATASIZE",
											"source": 10
										},
										{
											"begin": 4135,
											"end": 4233,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4135,
											"end": 4233,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 4135,
											"end": 4233,
											"name": "tag",
											"source": 10,
											"value": "35"
										},
										{
											"begin": 4135,
											"end": 4233,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4242,
											"end": 4423,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "37"
										},
										{
											"begin": 4242,
											"end": 4423,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4242,
											"end": 4423,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4242,
											"end": 4423,
											"name": "tag",
											"source": 10,
											"value": "38"
										},
										{
											"begin": 4242,
											"end": 4423,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4242,
											"end": 4423,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 4242,
											"end": 4423,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 4242,
											"end": 4423,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 4242,
											"end": 4423,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 4242,
											"end": 4423,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 4242,
											"end": 4423,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4242,
											"end": 4423,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 4242,
											"end": 4423,
											"name": "tag",
											"source": 10,
											"value": "37"
										},
										{
											"begin": 4242,
											"end": 4423,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4552,
											"end": 4561,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4547,
											"end": 5500,
											"name": "tag",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 4547,
											"end": 5500,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4571,
											"end": 4586,
											"name": "PUSH",
											"source": 10,
											"value": "6"
										},
										{
											"begin": 4567,
											"end": 4568,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4567,
											"end": 4586,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 4547,
											"end": 5500,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 4547,
											"end": 5500,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "41"
										},
										{
											"begin": 4547,
											"end": 5500,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 4692,
											"end": 4700,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 4701,
											"end": 4702,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4692,
											"end": 4703,
											"name": "PUSH",
											"source": 10,
											"value": "6"
										},
										{
											"begin": 4692,
											"end": 4703,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4692,
											"end": 4703,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 4692,
											"end": 4703,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "43"
										},
										{
											"begin": 4692,
											"end": 4703,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 4692,
											"end": 4703,
											"name": "INVALID",
											"source": 10
										},
										{
											"begin": 4692,
											"end": 4703,
											"name": "tag",
											"source": 10,
											"value": "43"
										},
										{
											"begin": 4692,
											"end": 4703,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4692,
											"end": 4703,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 4692,
											"end": 4703,
											"name": "MUL",
											"source": 10
										},
										{
											"begin": 4692,
											"end": 4703,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4692,
											"end": 4703,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4620,
											"end": 4703,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 4636,
											"end": 4657,
											"name": "DUP11",
											"source": 10
										},
										{
											"begin": 4658,
											"end": 4659,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4636,
											"end": 4660,
											"name": "PUSH",
											"source": 10,
											"value": "6"
										},
										{
											"begin": 4636,
											"end": 4660,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4636,
											"end": 4660,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 4636,
											"end": 4660,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "44"
										},
										{
											"begin": 4636,
											"end": 4660,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 4636,
											"end": 4660,
											"name": "INVALID",
											"source": 10
										},
										{
											"begin": 4636,
											"end": 4660,
											"name": "tag",
											"source": 10,
											"value": "44"
										},
										{
											"begin": 4636,
											"end": 4660,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4636,
											"end": 4660,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 4636,
											"end": 4660,
											"name": "MUL",
											"source": 10
										},
										{
											"begin": 4636,
											"end": 4660,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4636,
											"end": 4660,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4620,
											"end": 4686,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 4620,
											"end": 4686,
											"name": "PUSH",
											"source": 10,
											"value": "B16A19DE"
										},
										{
											"begin": 4620,
											"end": 4688,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 4620,
											"end": 4688,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 4620,
											"end": 4688,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4620,
											"end": 4688,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFF"
										},
										{
											"begin": 4620,
											"end": 4688,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 4620,
											"end": 4688,
											"name": "PUSH",
											"source": 10,
											"value": "E0"
										},
										{
											"begin": 4620,
											"end": 4688,
											"name": "SHL",
											"source": 10
										},
										{
											"begin": 4620,
											"end": 4688,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4620,
											"end": 4688,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 4620,
											"end": 4688,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 4620,
											"end": 4688,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4620,
											"end": 4688,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 4620,
											"end": 4688,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 4620,
											"end": 4688,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 4620,
											"end": 4688,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 4620,
											"end": 4688,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 4620,
											"end": 4688,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 4620,
											"end": 4688,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4620,
											"end": 4688,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 4620,
											"end": 4688,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 4620,
											"end": 4688,
											"name": "EXTCODESIZE",
											"source": 10
										},
										{
											"begin": 4620,
											"end": 4688,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 4620,
											"end": 4688,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 4620,
											"end": 4688,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 4620,
											"end": 4688,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "45"
										},
										{
											"begin": 4620,
											"end": 4688,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 4620,
											"end": 4688,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4620,
											"end": 4688,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 4620,
											"end": 4688,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 4620,
											"end": 4688,
											"name": "tag",
											"source": 10,
											"value": "45"
										},
										{
											"begin": 4620,
											"end": 4688,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4620,
											"end": 4688,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4620,
											"end": 4688,
											"name": "GAS",
											"source": 10
										},
										{
											"begin": 4620,
											"end": 4688,
											"name": "STATICCALL",
											"source": 10
										},
										{
											"begin": 4620,
											"end": 4688,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 4620,
											"end": 4688,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 4620,
											"end": 4688,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 4620,
											"end": 4688,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "47"
										},
										{
											"begin": 4620,
											"end": 4688,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 4620,
											"end": 4688,
											"name": "RETURNDATASIZE",
											"source": 10
										},
										{
											"begin": 4620,
											"end": 4688,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4620,
											"end": 4688,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 4620,
											"end": 4688,
											"name": "RETURNDATACOPY",
											"source": 10
										},
										{
											"begin": 4620,
											"end": 4688,
											"name": "RETURNDATASIZE",
											"source": 10
										},
										{
											"begin": 4620,
											"end": 4688,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4620,
											"end": 4688,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 4620,
											"end": 4688,
											"name": "tag",
											"source": 10,
											"value": "47"
										},
										{
											"begin": 4620,
											"end": 4688,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4620,
											"end": 4688,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4620,
											"end": 4688,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4620,
											"end": 4688,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4620,
											"end": 4688,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4620,
											"end": 4688,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 4620,
											"end": 4688,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 4620,
											"end": 4688,
											"name": "RETURNDATASIZE",
											"source": 10
										},
										{
											"begin": 4620,
											"end": 4688,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 4620,
											"end": 4688,
											"name": "NOT",
											"source": 10
										},
										{
											"begin": 4620,
											"end": 4688,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 4620,
											"end": 4688,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4620,
											"end": 4688,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4620,
											"end": 4688,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 4620,
											"end": 4688,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4620,
											"end": 4688,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4620,
											"end": 4688,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 4620,
											"end": 4688,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 4620,
											"end": 4688,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 4620,
											"end": 4688,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4620,
											"end": 4688,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4620,
											"end": 4688,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4620,
											"end": 4688,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4620,
											"end": 4688,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "48"
										},
										{
											"begin": 4620,
											"end": 4688,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 4620,
											"end": 4688,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4620,
											"end": 4688,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "49"
										},
										{
											"begin": 4620,
											"end": 4688,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 4620,
											"end": 4688,
											"name": "tag",
											"source": 10,
											"value": "48"
										},
										{
											"begin": 4620,
											"end": 4688,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4620,
											"end": 4703,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 4620,
											"end": 4703,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 4602,
											"end": 4757,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "50"
										},
										{
											"begin": 4602,
											"end": 4757,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 4602,
											"end": 4757,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 4602,
											"end": 4757,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4602,
											"end": 4757,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4602,
											"end": 4757,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 4602,
											"end": 4757,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 4602,
											"end": 4757,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4602,
											"end": 4757,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "38"
										},
										{
											"begin": 4602,
											"end": 4757,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4602,
											"end": 4757,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "52"
										},
										{
											"begin": 4602,
											"end": 4757,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 4602,
											"end": 4757,
											"name": "tag",
											"source": 10,
											"value": "50"
										},
										{
											"begin": 4602,
											"end": 4757,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4862,
											"end": 4870,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 4871,
											"end": 4872,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4862,
											"end": 4873,
											"name": "PUSH",
											"source": 10,
											"value": "6"
										},
										{
											"begin": 4862,
											"end": 4873,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4862,
											"end": 4873,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 4862,
											"end": 4873,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "53"
										},
										{
											"begin": 4862,
											"end": 4873,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 4862,
											"end": 4873,
											"name": "INVALID",
											"source": 10
										},
										{
											"begin": 4862,
											"end": 4873,
											"name": "tag",
											"source": 10,
											"value": "53"
										},
										{
											"begin": 4862,
											"end": 4873,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4862,
											"end": 4873,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 4862,
											"end": 4873,
											"name": "MUL",
											"source": 10
										},
										{
											"begin": 4862,
											"end": 4873,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4862,
											"end": 4873,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4784,
											"end": 4873,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 4800,
											"end": 4827,
											"name": "DUP10",
											"source": 10
										},
										{
											"begin": 4828,
											"end": 4829,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4800,
											"end": 4830,
											"name": "PUSH",
											"source": 10,
											"value": "6"
										},
										{
											"begin": 4800,
											"end": 4830,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4800,
											"end": 4830,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 4800,
											"end": 4830,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "54"
										},
										{
											"begin": 4800,
											"end": 4830,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 4800,
											"end": 4830,
											"name": "INVALID",
											"source": 10
										},
										{
											"begin": 4800,
											"end": 4830,
											"name": "tag",
											"source": 10,
											"value": "54"
										},
										{
											"begin": 4800,
											"end": 4830,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4800,
											"end": 4830,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 4800,
											"end": 4830,
											"name": "MUL",
											"source": 10
										},
										{
											"begin": 4800,
											"end": 4830,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4800,
											"end": 4830,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4784,
											"end": 4856,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 4784,
											"end": 4856,
											"name": "PUSH",
											"source": 10,
											"value": "B16A19DE"
										},
										{
											"begin": 4784,
											"end": 4858,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 4784,
											"end": 4858,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 4784,
											"end": 4858,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4784,
											"end": 4858,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFF"
										},
										{
											"begin": 4784,
											"end": 4858,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 4784,
											"end": 4858,
											"name": "PUSH",
											"source": 10,
											"value": "E0"
										},
										{
											"begin": 4784,
											"end": 4858,
											"name": "SHL",
											"source": 10
										},
										{
											"begin": 4784,
											"end": 4858,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4784,
											"end": 4858,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 4784,
											"end": 4858,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 4784,
											"end": 4858,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4784,
											"end": 4858,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 4784,
											"end": 4858,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 4784,
											"end": 4858,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 4784,
											"end": 4858,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 4784,
											"end": 4858,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 4784,
											"end": 4858,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 4784,
											"end": 4858,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4784,
											"end": 4858,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 4784,
											"end": 4858,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 4784,
											"end": 4858,
											"name": "EXTCODESIZE",
											"source": 10
										},
										{
											"begin": 4784,
											"end": 4858,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 4784,
											"end": 4858,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 4784,
											"end": 4858,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 4784,
											"end": 4858,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "55"
										},
										{
											"begin": 4784,
											"end": 4858,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 4784,
											"end": 4858,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4784,
											"end": 4858,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 4784,
											"end": 4858,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 4784,
											"end": 4858,
											"name": "tag",
											"source": 10,
											"value": "55"
										},
										{
											"begin": 4784,
											"end": 4858,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4784,
											"end": 4858,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4784,
											"end": 4858,
											"name": "GAS",
											"source": 10
										},
										{
											"begin": 4784,
											"end": 4858,
											"name": "STATICCALL",
											"source": 10
										},
										{
											"begin": 4784,
											"end": 4858,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 4784,
											"end": 4858,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 4784,
											"end": 4858,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 4784,
											"end": 4858,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "57"
										},
										{
											"begin": 4784,
											"end": 4858,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 4784,
											"end": 4858,
											"name": "RETURNDATASIZE",
											"source": 10
										},
										{
											"begin": 4784,
											"end": 4858,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4784,
											"end": 4858,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 4784,
											"end": 4858,
											"name": "RETURNDATACOPY",
											"source": 10
										},
										{
											"begin": 4784,
											"end": 4858,
											"name": "RETURNDATASIZE",
											"source": 10
										},
										{
											"begin": 4784,
											"end": 4858,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4784,
											"end": 4858,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 4784,
											"end": 4858,
											"name": "tag",
											"source": 10,
											"value": "57"
										},
										{
											"begin": 4784,
											"end": 4858,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4784,
											"end": 4858,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4784,
											"end": 4858,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4784,
											"end": 4858,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4784,
											"end": 4858,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4784,
											"end": 4858,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 4784,
											"end": 4858,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 4784,
											"end": 4858,
											"name": "RETURNDATASIZE",
											"source": 10
										},
										{
											"begin": 4784,
											"end": 4858,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 4784,
											"end": 4858,
											"name": "NOT",
											"source": 10
										},
										{
											"begin": 4784,
											"end": 4858,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 4784,
											"end": 4858,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4784,
											"end": 4858,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4784,
											"end": 4858,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 4784,
											"end": 4858,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4784,
											"end": 4858,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4784,
											"end": 4858,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 4784,
											"end": 4858,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 4784,
											"end": 4858,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 4784,
											"end": 4858,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4784,
											"end": 4858,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4784,
											"end": 4858,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4784,
											"end": 4858,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4784,
											"end": 4858,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "58"
										},
										{
											"begin": 4784,
											"end": 4858,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 4784,
											"end": 4858,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4784,
											"end": 4858,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "49"
										},
										{
											"begin": 4784,
											"end": 4858,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 4784,
											"end": 4858,
											"name": "tag",
											"source": 10,
											"value": "58"
										},
										{
											"begin": 4784,
											"end": 4858,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4784,
											"end": 4873,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 4784,
											"end": 4873,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 4766,
											"end": 4931,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "59"
										},
										{
											"begin": 4766,
											"end": 4931,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 4766,
											"end": 4931,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 4766,
											"end": 4931,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4766,
											"end": 4931,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4766,
											"end": 4931,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 4766,
											"end": 4931,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 4766,
											"end": 4931,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4766,
											"end": 4931,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "38"
										},
										{
											"begin": 4766,
											"end": 4931,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4766,
											"end": 4931,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "61"
										},
										{
											"begin": 4766,
											"end": 4931,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 4766,
											"end": 4931,
											"name": "tag",
											"source": 10,
											"value": "59"
										},
										{
											"begin": 4766,
											"end": 4931,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4940,
											"end": 4980,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "62"
										},
										{
											"begin": 4940,
											"end": 4980,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "63"
										},
										{
											"begin": 4940,
											"end": 4980,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 4940,
											"end": 4980,
											"name": "tag",
											"source": 10,
											"value": "62"
										},
										{
											"begin": 4940,
											"end": 4980,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1529,
											"end": 1571,
											"name": "PUSH",
											"source": 10,
											"value": "A9AE6E3207BDCCCB8F081EE0B4D0D2B4A79EA984"
										},
										{
											"begin": 4992,
											"end": 5037,
											"name": "PUSH",
											"source": 10,
											"value": "35EA6A75"
										},
										{
											"begin": 5038,
											"end": 5046,
											"name": "DUP9",
											"source": 10
										},
										{
											"begin": 5047,
											"end": 5048,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 5038,
											"end": 5049,
											"name": "PUSH",
											"source": 10,
											"value": "6"
										},
										{
											"begin": 5038,
											"end": 5049,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 5038,
											"end": 5049,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 5038,
											"end": 5049,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "64"
										},
										{
											"begin": 5038,
											"end": 5049,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 5038,
											"end": 5049,
											"name": "INVALID",
											"source": 10
										},
										{
											"begin": 5038,
											"end": 5049,
											"name": "tag",
											"source": 10,
											"value": "64"
										},
										{
											"begin": 5038,
											"end": 5049,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5038,
											"end": 5049,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 5038,
											"end": 5049,
											"name": "MUL",
											"source": 10
										},
										{
											"begin": 5038,
											"end": 5049,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5038,
											"end": 5049,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 4992,
											"end": 5050,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 4992,
											"end": 5050,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 4992,
											"end": 5050,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4992,
											"end": 5050,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFF"
										},
										{
											"begin": 4992,
											"end": 5050,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 4992,
											"end": 5050,
											"name": "PUSH",
											"source": 10,
											"value": "E0"
										},
										{
											"begin": 4992,
											"end": 5050,
											"name": "SHL",
											"source": 10
										},
										{
											"begin": 4992,
											"end": 5050,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4992,
											"end": 5050,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 4992,
											"end": 5050,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 4992,
											"end": 5050,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4992,
											"end": 5050,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "65"
										},
										{
											"begin": 4992,
											"end": 5050,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 4992,
											"end": 5050,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4992,
											"end": 5050,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "66"
										},
										{
											"begin": 4992,
											"end": 5050,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 4992,
											"end": 5050,
											"name": "tag",
											"source": 10,
											"value": "65"
										},
										{
											"begin": 4992,
											"end": 5050,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4992,
											"end": 5050,
											"name": "PUSH",
											"source": 10,
											"value": "180"
										},
										{
											"begin": 4992,
											"end": 5050,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 4992,
											"end": 5050,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 4992,
											"end": 5050,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 4992,
											"end": 5050,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 4992,
											"end": 5050,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 4992,
											"end": 5050,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4992,
											"end": 5050,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 4992,
											"end": 5050,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 4992,
											"end": 5050,
											"name": "EXTCODESIZE",
											"source": 10
										},
										{
											"begin": 4992,
											"end": 5050,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 4992,
											"end": 5050,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 4992,
											"end": 5050,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 4992,
											"end": 5050,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "67"
										},
										{
											"begin": 4992,
											"end": 5050,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 4992,
											"end": 5050,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4992,
											"end": 5050,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 4992,
											"end": 5050,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 4992,
											"end": 5050,
											"name": "tag",
											"source": 10,
											"value": "67"
										},
										{
											"begin": 4992,
											"end": 5050,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4992,
											"end": 5050,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4992,
											"end": 5050,
											"name": "GAS",
											"source": 10
										},
										{
											"begin": 4992,
											"end": 5050,
											"name": "STATICCALL",
											"source": 10
										},
										{
											"begin": 4992,
											"end": 5050,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 4992,
											"end": 5050,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 4992,
											"end": 5050,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 4992,
											"end": 5050,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "69"
										},
										{
											"begin": 4992,
											"end": 5050,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 4992,
											"end": 5050,
											"name": "RETURNDATASIZE",
											"source": 10
										},
										{
											"begin": 4992,
											"end": 5050,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4992,
											"end": 5050,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 4992,
											"end": 5050,
											"name": "RETURNDATACOPY",
											"source": 10
										},
										{
											"begin": 4992,
											"end": 5050,
											"name": "RETURNDATASIZE",
											"source": 10
										},
										{
											"begin": 4992,
											"end": 5050,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4992,
											"end": 5050,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 4992,
											"end": 5050,
											"name": "tag",
											"source": 10,
											"value": "69"
										},
										{
											"begin": 4992,
											"end": 5050,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4992,
											"end": 5050,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4992,
											"end": 5050,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4992,
											"end": 5050,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4992,
											"end": 5050,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4992,
											"end": 5050,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 4992,
											"end": 5050,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 4992,
											"end": 5050,
											"name": "RETURNDATASIZE",
											"source": 10
										},
										{
											"begin": 4992,
											"end": 5050,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 4992,
											"end": 5050,
											"name": "NOT",
											"source": 10
										},
										{
											"begin": 4992,
											"end": 5050,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 4992,
											"end": 5050,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4992,
											"end": 5050,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4992,
											"end": 5050,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 4992,
											"end": 5050,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4992,
											"end": 5050,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4992,
											"end": 5050,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 4992,
											"end": 5050,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 4992,
											"end": 5050,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 4992,
											"end": 5050,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4992,
											"end": 5050,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4992,
											"end": 5050,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4992,
											"end": 5050,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4992,
											"end": 5050,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "70"
										},
										{
											"begin": 4992,
											"end": 5050,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 4992,
											"end": 5050,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4992,
											"end": 5050,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "71"
										},
										{
											"begin": 4992,
											"end": 5050,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 4992,
											"end": 5050,
											"name": "tag",
											"source": 10,
											"value": "70"
										},
										{
											"begin": 4992,
											"end": 5050,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4940,
											"end": 5050,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4940,
											"end": 5050,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5090,
											"end": 5106,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5090,
											"end": 5119,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 5090,
											"end": 5119,
											"name": "PUSH",
											"source": 10,
											"value": "12E3AE16"
										},
										{
											"begin": 5120,
											"end": 5128,
											"name": "DUP9",
											"source": 10
										},
										{
											"begin": 5129,
											"end": 5130,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 5120,
											"end": 5131,
											"name": "PUSH",
											"source": 10,
											"value": "6"
										},
										{
											"begin": 5120,
											"end": 5131,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 5120,
											"end": 5131,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 5120,
											"end": 5131,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "72"
										},
										{
											"begin": 5120,
											"end": 5131,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 5120,
											"end": 5131,
											"name": "INVALID",
											"source": 10
										},
										{
											"begin": 5120,
											"end": 5131,
											"name": "tag",
											"source": 10,
											"value": "72"
										},
										{
											"begin": 5120,
											"end": 5131,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5120,
											"end": 5131,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 5120,
											"end": 5131,
											"name": "MUL",
											"source": 10
										},
										{
											"begin": 5120,
											"end": 5131,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5120,
											"end": 5131,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 5133,
											"end": 5154,
											"name": "DUP14",
											"source": 10
										},
										{
											"begin": 5155,
											"end": 5156,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 5133,
											"end": 5157,
											"name": "PUSH",
											"source": 10,
											"value": "6"
										},
										{
											"begin": 5133,
											"end": 5157,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 5133,
											"end": 5157,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 5133,
											"end": 5157,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "73"
										},
										{
											"begin": 5133,
											"end": 5157,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 5133,
											"end": 5157,
											"name": "INVALID",
											"source": 10
										},
										{
											"begin": 5133,
											"end": 5157,
											"name": "tag",
											"source": 10,
											"value": "73"
										},
										{
											"begin": 5133,
											"end": 5157,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5133,
											"end": 5157,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 5133,
											"end": 5157,
											"name": "MUL",
											"source": 10
										},
										{
											"begin": 5133,
											"end": 5157,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5133,
											"end": 5157,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 5090,
											"end": 5158,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 5090,
											"end": 5158,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 5090,
											"end": 5158,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 5090,
											"end": 5158,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFF"
										},
										{
											"begin": 5090,
											"end": 5158,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 5090,
											"end": 5158,
											"name": "PUSH",
											"source": 10,
											"value": "E0"
										},
										{
											"begin": 5090,
											"end": 5158,
											"name": "SHL",
											"source": 10
										},
										{
											"begin": 5090,
											"end": 5158,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 5090,
											"end": 5158,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 5090,
											"end": 5158,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 5090,
											"end": 5158,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5090,
											"end": 5158,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "74"
										},
										{
											"begin": 5090,
											"end": 5158,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 5090,
											"end": 5158,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 5090,
											"end": 5158,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5090,
											"end": 5158,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "75"
										},
										{
											"begin": 5090,
											"end": 5158,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 5090,
											"end": 5158,
											"name": "tag",
											"source": 10,
											"value": "74"
										},
										{
											"begin": 5090,
											"end": 5158,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5090,
											"end": 5158,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5090,
											"end": 5158,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 5090,
											"end": 5158,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 5090,
											"end": 5158,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 5090,
											"end": 5158,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 5090,
											"end": 5158,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 5090,
											"end": 5158,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 5090,
											"end": 5158,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5090,
											"end": 5158,
											"name": "DUP8",
											"source": 10
										},
										{
											"begin": 5090,
											"end": 5158,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 5090,
											"end": 5158,
											"name": "EXTCODESIZE",
											"source": 10
										},
										{
											"begin": 5090,
											"end": 5158,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 5090,
											"end": 5158,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 5090,
											"end": 5158,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 5090,
											"end": 5158,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "76"
										},
										{
											"begin": 5090,
											"end": 5158,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 5090,
											"end": 5158,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5090,
											"end": 5158,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 5090,
											"end": 5158,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 5090,
											"end": 5158,
											"name": "tag",
											"source": 10,
											"value": "76"
										},
										{
											"begin": 5090,
											"end": 5158,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5090,
											"end": 5158,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5090,
											"end": 5158,
											"name": "GAS",
											"source": 10
										},
										{
											"begin": 5090,
											"end": 5158,
											"name": "CALL",
											"source": 10
										},
										{
											"begin": 5090,
											"end": 5158,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 5090,
											"end": 5158,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 5090,
											"end": 5158,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 5090,
											"end": 5158,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "78"
										},
										{
											"begin": 5090,
											"end": 5158,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 5090,
											"end": 5158,
											"name": "RETURNDATASIZE",
											"source": 10
										},
										{
											"begin": 5090,
											"end": 5158,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5090,
											"end": 5158,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 5090,
											"end": 5158,
											"name": "RETURNDATACOPY",
											"source": 10
										},
										{
											"begin": 5090,
											"end": 5158,
											"name": "RETURNDATASIZE",
											"source": 10
										},
										{
											"begin": 5090,
											"end": 5158,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5090,
											"end": 5158,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 5090,
											"end": 5158,
											"name": "tag",
											"source": 10,
											"value": "78"
										},
										{
											"begin": 5090,
											"end": 5158,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5090,
											"end": 5158,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5090,
											"end": 5158,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5090,
											"end": 5158,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5090,
											"end": 5158,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5205,
											"end": 5221,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5205,
											"end": 5245,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 5205,
											"end": 5245,
											"name": "PUSH",
											"source": 10,
											"value": "4D978258"
										},
										{
											"begin": 5246,
											"end": 5254,
											"name": "DUP9",
											"source": 10
										},
										{
											"begin": 5255,
											"end": 5256,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 5246,
											"end": 5257,
											"name": "PUSH",
											"source": 10,
											"value": "6"
										},
										{
											"begin": 5246,
											"end": 5257,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 5246,
											"end": 5257,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 5246,
											"end": 5257,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "79"
										},
										{
											"begin": 5246,
											"end": 5257,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 5246,
											"end": 5257,
											"name": "INVALID",
											"source": 10
										},
										{
											"begin": 5246,
											"end": 5257,
											"name": "tag",
											"source": 10,
											"value": "79"
										},
										{
											"begin": 5246,
											"end": 5257,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5246,
											"end": 5257,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 5246,
											"end": 5257,
											"name": "MUL",
											"source": 10
										},
										{
											"begin": 5246,
											"end": 5257,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5246,
											"end": 5257,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 5259,
											"end": 5286,
											"name": "DUP13",
											"source": 10
										},
										{
											"begin": 5287,
											"end": 5288,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 5259,
											"end": 5289,
											"name": "PUSH",
											"source": 10,
											"value": "6"
										},
										{
											"begin": 5259,
											"end": 5289,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 5259,
											"end": 5289,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 5259,
											"end": 5289,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "80"
										},
										{
											"begin": 5259,
											"end": 5289,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 5259,
											"end": 5289,
											"name": "INVALID",
											"source": 10
										},
										{
											"begin": 5259,
											"end": 5289,
											"name": "tag",
											"source": 10,
											"value": "80"
										},
										{
											"begin": 5259,
											"end": 5289,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5259,
											"end": 5289,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 5259,
											"end": 5289,
											"name": "MUL",
											"source": 10
										},
										{
											"begin": 5259,
											"end": 5289,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5259,
											"end": 5289,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 5205,
											"end": 5290,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 5205,
											"end": 5290,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 5205,
											"end": 5290,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 5205,
											"end": 5290,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFF"
										},
										{
											"begin": 5205,
											"end": 5290,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 5205,
											"end": 5290,
											"name": "PUSH",
											"source": 10,
											"value": "E0"
										},
										{
											"begin": 5205,
											"end": 5290,
											"name": "SHL",
											"source": 10
										},
										{
											"begin": 5205,
											"end": 5290,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 5205,
											"end": 5290,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 5205,
											"end": 5290,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 5205,
											"end": 5290,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5205,
											"end": 5290,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "81"
										},
										{
											"begin": 5205,
											"end": 5290,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 5205,
											"end": 5290,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 5205,
											"end": 5290,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5205,
											"end": 5290,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "75"
										},
										{
											"begin": 5205,
											"end": 5290,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 5205,
											"end": 5290,
											"name": "tag",
											"source": 10,
											"value": "81"
										},
										{
											"begin": 5205,
											"end": 5290,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5205,
											"end": 5290,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5205,
											"end": 5290,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 5205,
											"end": 5290,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 5205,
											"end": 5290,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 5205,
											"end": 5290,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 5205,
											"end": 5290,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 5205,
											"end": 5290,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 5205,
											"end": 5290,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5205,
											"end": 5290,
											"name": "DUP8",
											"source": 10
										},
										{
											"begin": 5205,
											"end": 5290,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 5205,
											"end": 5290,
											"name": "EXTCODESIZE",
											"source": 10
										},
										{
											"begin": 5205,
											"end": 5290,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 5205,
											"end": 5290,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 5205,
											"end": 5290,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 5205,
											"end": 5290,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "82"
										},
										{
											"begin": 5205,
											"end": 5290,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 5205,
											"end": 5290,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5205,
											"end": 5290,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 5205,
											"end": 5290,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 5205,
											"end": 5290,
											"name": "tag",
											"source": 10,
											"value": "82"
										},
										{
											"begin": 5205,
											"end": 5290,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5205,
											"end": 5290,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5205,
											"end": 5290,
											"name": "GAS",
											"source": 10
										},
										{
											"begin": 5205,
											"end": 5290,
											"name": "CALL",
											"source": 10
										},
										{
											"begin": 5205,
											"end": 5290,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 5205,
											"end": 5290,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 5205,
											"end": 5290,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 5205,
											"end": 5290,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "84"
										},
										{
											"begin": 5205,
											"end": 5290,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 5205,
											"end": 5290,
											"name": "RETURNDATASIZE",
											"source": 10
										},
										{
											"begin": 5205,
											"end": 5290,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5205,
											"end": 5290,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 5205,
											"end": 5290,
											"name": "RETURNDATACOPY",
											"source": 10
										},
										{
											"begin": 5205,
											"end": 5290,
											"name": "RETURNDATASIZE",
											"source": 10
										},
										{
											"begin": 5205,
											"end": 5290,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5205,
											"end": 5290,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 5205,
											"end": 5290,
											"name": "tag",
											"source": 10,
											"value": "84"
										},
										{
											"begin": 5205,
											"end": 5290,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5205,
											"end": 5290,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5205,
											"end": 5290,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5205,
											"end": 5290,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5205,
											"end": 5290,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5327,
											"end": 5338,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 5327,
											"end": 5352,
											"name": "PUSH",
											"source": 10,
											"value": "E0"
										},
										{
											"begin": 5327,
											"end": 5352,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5327,
											"end": 5352,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 5301,
											"end": 5307,
											"name": "DUP9",
											"source": 10
										},
										{
											"begin": 5308,
											"end": 5323,
											"name": "DUP11",
											"source": 10
										},
										{
											"begin": 5308,
											"end": 5323,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 5308,
											"end": 5323,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 5308,
											"end": 5323,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5308,
											"end": 5323,
											"name": "SWAP12",
											"source": 10
										},
										{
											"begin": 5308,
											"end": 5323,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5301,
											"end": 5324,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 5301,
											"end": 5324,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 5301,
											"end": 5324,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 5301,
											"end": 5324,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 5301,
											"end": 5324,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "85"
										},
										{
											"begin": 5301,
											"end": 5324,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 5301,
											"end": 5324,
											"name": "INVALID",
											"source": 10
										},
										{
											"begin": 5301,
											"end": 5324,
											"name": "tag",
											"source": 10,
											"value": "85"
										},
										{
											"begin": 5301,
											"end": 5324,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5301,
											"end": 5352,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5301,
											"end": 5352,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 5301,
											"end": 5352,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 5301,
											"end": 5324,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 5301,
											"end": 5324,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 5301,
											"end": 5324,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 5301,
											"end": 5324,
											"name": "MUL",
											"source": 10
										},
										{
											"begin": 5301,
											"end": 5324,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 5301,
											"end": 5324,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5301,
											"end": 5324,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 5301,
											"end": 5324,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5301,
											"end": 5324,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5301,
											"end": 5324,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 5301,
											"end": 5324,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5301,
											"end": 5352,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 5454,
											"end": 5490,
											"name": "PUSH",
											"source": 10,
											"value": "120"
										},
										{
											"begin": 5454,
											"end": 5490,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 5454,
											"end": 5490,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5454,
											"end": 5490,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 5428,
											"end": 5451,
											"name": "DUP9",
											"source": 10
										},
										{
											"begin": 5428,
											"end": 5451,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 5435,
											"end": 5450,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 5435,
											"end": 5450,
											"name": "DUP12",
											"source": 10
										},
										{
											"begin": 5435,
											"end": 5450,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5435,
											"end": 5450,
											"name": "SWAP11",
											"source": 10
										},
										{
											"begin": 5428,
											"end": 5434,
											"name": "DUP11",
											"source": 10
										},
										{
											"begin": 5428,
											"end": 5434,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 5428,
											"end": 5451,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 5428,
											"end": 5451,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 5428,
											"end": 5451,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "86"
										},
										{
											"begin": 5428,
											"end": 5451,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 5428,
											"end": 5451,
											"name": "INVALID",
											"source": 10
										},
										{
											"begin": 5428,
											"end": 5451,
											"name": "tag",
											"source": 10,
											"value": "86"
										},
										{
											"begin": 5428,
											"end": 5451,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5428,
											"end": 5490,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5428,
											"end": 5490,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 5428,
											"end": 5490,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 5428,
											"end": 5451,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 5428,
											"end": 5451,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 5428,
											"end": 5451,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 5428,
											"end": 5451,
											"name": "MUL",
											"source": 10
										},
										{
											"begin": 5428,
											"end": 5451,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 5428,
											"end": 5451,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5428,
											"end": 5451,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 5428,
											"end": 5451,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5428,
											"end": 5451,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5428,
											"end": 5451,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 5428,
											"end": 5451,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5428,
											"end": 5490,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4588,
											"end": 4591,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 4588,
											"end": 4591,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4547,
											"end": 5500,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 4547,
											"end": 5500,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4547,
											"end": 5500,
											"name": "tag",
											"source": 10,
											"value": "41"
										},
										{
											"begin": 4547,
											"end": 5500,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5838,
											"end": 5893,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 5838,
											"end": 5893,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3CF8B8D9"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5838,
											"end": 5893,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 5838,
											"end": 5893,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5838,
											"end": 5874,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 5838,
											"end": 5874,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 5838,
											"end": 5874,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5838,
											"end": 5874,
											"name": "PUSH",
											"source": 10,
											"value": "79F171B2"
										},
										{
											"begin": 5838,
											"end": 5874,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5838,
											"end": 5893,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "87"
										},
										{
											"begin": 5838,
											"end": 5893,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5875,
											"end": 5881,
											"name": "DUP10",
											"source": 10
										},
										{
											"begin": 5875,
											"end": 5881,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5883,
											"end": 5892,
											"name": "DUP9",
											"source": 10
										},
										{
											"begin": 5883,
											"end": 5892,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5838,
											"end": 5893,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 5838,
											"end": 5893,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5838,
											"end": 5893,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "88"
										},
										{
											"begin": 5838,
											"end": 5893,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 5838,
											"end": 5893,
											"name": "tag",
											"source": 10,
											"value": "87"
										},
										{
											"begin": 5838,
											"end": 5893,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5838,
											"end": 5893,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5838,
											"end": 5893,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 5838,
											"end": 5893,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 5838,
											"end": 5893,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 5838,
											"end": 5893,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 5838,
											"end": 5893,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 5838,
											"end": 5893,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 5838,
											"end": 5893,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5838,
											"end": 5893,
											"name": "DUP8",
											"source": 10
										},
										{
											"begin": 5838,
											"end": 5893,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 5838,
											"end": 5893,
											"name": "EXTCODESIZE",
											"source": 10
										},
										{
											"begin": 5838,
											"end": 5893,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 5838,
											"end": 5893,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 5838,
											"end": 5893,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 5838,
											"end": 5893,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "89"
										},
										{
											"begin": 5838,
											"end": 5893,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 5838,
											"end": 5893,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5838,
											"end": 5893,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 5838,
											"end": 5893,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 5838,
											"end": 5893,
											"name": "tag",
											"source": 10,
											"value": "89"
										},
										{
											"begin": 5838,
											"end": 5893,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5838,
											"end": 5893,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5838,
											"end": 5893,
											"name": "GAS",
											"source": 10
										},
										{
											"begin": 5838,
											"end": 5893,
											"name": "CALL",
											"source": 10
										},
										{
											"begin": 5838,
											"end": 5893,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 5838,
											"end": 5893,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 5838,
											"end": 5893,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 5838,
											"end": 5893,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "91"
										},
										{
											"begin": 5838,
											"end": 5893,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 5838,
											"end": 5893,
											"name": "RETURNDATASIZE",
											"source": 10
										},
										{
											"begin": 5838,
											"end": 5893,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5838,
											"end": 5893,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 5838,
											"end": 5893,
											"name": "RETURNDATACOPY",
											"source": 10
										},
										{
											"begin": 5838,
											"end": 5893,
											"name": "RETURNDATASIZE",
											"source": 10
										},
										{
											"begin": 5838,
											"end": 5893,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5838,
											"end": 5893,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 5838,
											"end": 5893,
											"name": "tag",
											"source": 10,
											"value": "91"
										},
										{
											"begin": 5838,
											"end": 5893,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5949,
											"end": 6029,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 5949,
											"end": 6029,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "39CCBDD3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5949,
											"end": 6029,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 5949,
											"end": 6029,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5949,
											"end": 5988,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 5949,
											"end": 5988,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 5949,
											"end": 5988,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5949,
											"end": 5988,
											"name": "PUSH",
											"source": 10,
											"value": "39CCBDD3"
										},
										{
											"begin": 5949,
											"end": 5988,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5949,
											"end": 6029,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "92"
										},
										{
											"begin": 5949,
											"end": 6029,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5989,
											"end": 6004,
											"name": "TIMESTAMP",
											"source": 10
										},
										{
											"begin": 2020,
											"end": 2027,
											"name": "PUSH",
											"source": 10,
											"value": "76A700"
										},
										{
											"begin": 5989,
											"end": 6028,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5989,
											"end": 6028,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5949,
											"end": 6029,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 5949,
											"end": 6029,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5949,
											"end": 6029,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "93"
										},
										{
											"begin": 5949,
											"end": 6029,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 5949,
											"end": 6029,
											"name": "tag",
											"source": 10,
											"value": "92"
										},
										{
											"begin": 5949,
											"end": 6029,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5949,
											"end": 6029,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5949,
											"end": 6029,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 5949,
											"end": 6029,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 5949,
											"end": 6029,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 5949,
											"end": 6029,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 5949,
											"end": 6029,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 5949,
											"end": 6029,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 5949,
											"end": 6029,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5949,
											"end": 6029,
											"name": "DUP8",
											"source": 10
										},
										{
											"begin": 5949,
											"end": 6029,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 5949,
											"end": 6029,
											"name": "EXTCODESIZE",
											"source": 10
										},
										{
											"begin": 5949,
											"end": 6029,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 5949,
											"end": 6029,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 5949,
											"end": 6029,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 5949,
											"end": 6029,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "94"
										},
										{
											"begin": 5949,
											"end": 6029,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 5949,
											"end": 6029,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5949,
											"end": 6029,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 5949,
											"end": 6029,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 5949,
											"end": 6029,
											"name": "tag",
											"source": 10,
											"value": "94"
										},
										{
											"begin": 5949,
											"end": 6029,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5949,
											"end": 6029,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5949,
											"end": 6029,
											"name": "GAS",
											"source": 10
										},
										{
											"begin": 5949,
											"end": 6029,
											"name": "CALL",
											"source": 10
										},
										{
											"begin": 5949,
											"end": 6029,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 5949,
											"end": 6029,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 5949,
											"end": 6029,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 5949,
											"end": 6029,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "96"
										},
										{
											"begin": 5949,
											"end": 6029,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 5949,
											"end": 6029,
											"name": "RETURNDATASIZE",
											"source": 10
										},
										{
											"begin": 5949,
											"end": 6029,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5949,
											"end": 6029,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 5949,
											"end": 6029,
											"name": "RETURNDATACOPY",
											"source": 10
										},
										{
											"begin": 5949,
											"end": 6029,
											"name": "RETURNDATASIZE",
											"source": 10
										},
										{
											"begin": 5949,
											"end": 6029,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5949,
											"end": 6029,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 5949,
											"end": 6029,
											"name": "tag",
											"source": 10,
											"value": "96"
										},
										{
											"begin": 5949,
											"end": 6029,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5949,
											"end": 6029,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5949,
											"end": 6029,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5949,
											"end": 6029,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5949,
											"end": 6029,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2143,
											"end": 6035,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2143,
											"end": 6035,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2143,
											"end": 6035,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2143,
											"end": 6035,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2143,
											"end": 6035,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2143,
											"end": 6035,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2143,
											"end": 6035,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2143,
											"end": 6035,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2143,
											"end": 6035,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2143,
											"end": 6035,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "12"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "C0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "6"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MUL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CALLDATASIZE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CALLDATACOPY",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMP",
											"source": -1,
											"value": "[out]"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "63"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "180"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "97"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "98"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMP",
											"source": -1,
											"value": "[in]"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "97"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "60"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "80"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "C0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "100"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "120"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "140"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "160"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMP",
											"source": -1,
											"value": "[out]"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "98"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMP",
											"source": -1,
											"value": "[out]"
										},
										{
											"begin": 14,
											"end": 156,
											"name": "tag",
											"source": 13,
											"value": "100"
										},
										{
											"begin": 14,
											"end": 156,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 95,
											"end": 108,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 95,
											"end": 108,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 117,
											"end": 150,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "102"
										},
										{
											"begin": 95,
											"end": 108,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 117,
											"end": 150,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "103"
										},
										{
											"begin": 117,
											"end": 150,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 117,
											"end": 150,
											"name": "tag",
											"source": 13,
											"value": "102"
										},
										{
											"begin": 117,
											"end": 150,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 76,
											"end": 156,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 76,
											"end": 156,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 76,
											"end": 156,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 76,
											"end": 156,
											"name": "JUMP",
											"source": 13,
											"value": "[out]"
										},
										{
											"begin": 161,
											"end": 926,
											"name": "tag",
											"source": 13,
											"value": "104"
										},
										{
											"begin": 161,
											"end": 926,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 161,
											"end": 926,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 269,
											"end": 272,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 262,
											"end": 266,
											"name": "PUSH",
											"source": 13,
											"value": "1F"
										},
										{
											"begin": 254,
											"end": 260,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 250,
											"end": 267,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 246,
											"end": 273,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 236,
											"end": 238,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "106"
										},
										{
											"begin": 236,
											"end": 238,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 291,
											"end": 296,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 284,
											"end": 289,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 277,
											"end": 297,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 236,
											"end": 238,
											"name": "tag",
											"source": 13,
											"value": "106"
										},
										{
											"begin": 236,
											"end": 238,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 328,
											"end": 330,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 322,
											"end": 331,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 370,
											"end": 373,
											"name": "PUSH",
											"source": 13,
											"value": "C0"
										},
										{
											"begin": 362,
											"end": 368,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 358,
											"end": 374,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 440,
											"end": 446,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 428,
											"end": 438,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 425,
											"end": 447,
											"name": "LT",
											"source": 13
										},
										{
											"begin": 404,
											"end": 422,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 392,
											"end": 402,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 389,
											"end": 423,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 386,
											"end": 448,
											"name": "OR",
											"source": 13
										},
										{
											"begin": 383,
											"end": 385,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 383,
											"end": 385,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "107"
										},
										{
											"begin": 383,
											"end": 385,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 451,
											"end": 460,
											"name": "INVALID",
											"source": 13
										},
										{
											"begin": 383,
											"end": 385,
											"name": "tag",
											"source": 13,
											"value": "107"
										},
										{
											"begin": 383,
											"end": 385,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 478,
											"end": 480,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 471,
											"end": 493,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 511,
											"end": 517,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 511,
											"end": 517,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 563,
											"end": 569,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 596,
											"end": 599,
											"name": "PUSH",
											"source": 13,
											"value": "C0"
										},
										{
											"begin": 584,
											"end": 600,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 584,
											"end": 600,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 581,
											"end": 606,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "LT",
											"source": -1
										},
										{
											"begin": 578,
											"end": 580,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 578,
											"end": 580,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "108"
										},
										{
											"begin": 578,
											"end": 580,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 619,
											"end": 620,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 616,
											"end": 617,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 609,
											"end": 621,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 578,
											"end": 580,
											"name": "tag",
											"source": 13,
											"value": "108"
										},
										{
											"begin": 578,
											"end": 580,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 641,
											"end": 642,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 651,
											"end": 920,
											"name": "tag",
											"source": 13,
											"value": "109"
										},
										{
											"begin": 651,
											"end": 920,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 665,
											"end": 669,
											"name": "PUSH",
											"source": 13,
											"value": "6"
										},
										{
											"begin": 662,
											"end": 663,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 659,
											"end": 670,
											"name": "LT",
											"source": 13
										},
										{
											"begin": 651,
											"end": 920,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 651,
											"end": 920,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "111"
										},
										{
											"begin": 651,
											"end": 920,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 738,
											"end": 741,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 725,
											"end": 742,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": 755,
											"end": 788,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "112"
										},
										{
											"begin": 782,
											"end": 787,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 755,
											"end": 788,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "103"
										},
										{
											"begin": 755,
											"end": 788,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 755,
											"end": 788,
											"name": "tag",
											"source": 13,
											"value": "112"
										},
										{
											"begin": 755,
											"end": 788,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 801,
											"end": 819,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 801,
											"end": 819,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 842,
											"end": 846,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 866,
											"end": 878,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 866,
											"end": 878,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 866,
											"end": 878,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 866,
											"end": 878,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 898,
											"end": 910,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 898,
											"end": 910,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 898,
											"end": 910,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 898,
											"end": 910,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 898,
											"end": 910,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 685,
											"end": 686,
											"name": "PUSH",
											"source": 13,
											"value": "1"
										},
										{
											"begin": 678,
											"end": 687,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 651,
											"end": 920,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "109"
										},
										{
											"begin": 651,
											"end": 920,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 651,
											"end": 920,
											"name": "tag",
											"source": 13,
											"value": "111"
										},
										{
											"begin": 651,
											"end": 920,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 655,
											"end": 658,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 655,
											"end": 658,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 655,
											"end": 658,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 226,
											"end": 926,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 226,
											"end": 926,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 226,
											"end": 926,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 226,
											"end": 926,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 226,
											"end": 926,
											"name": "JUMP",
											"source": 13,
											"value": "[out]"
										},
										{
											"begin": 931,
											"end": 1359,
											"name": "tag",
											"source": 13,
											"value": "113"
										},
										{
											"begin": 931,
											"end": 1359,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 931,
											"end": 1359,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1063,
											"end": 1067,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 1051,
											"end": 1060,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 1046,
											"end": 1049,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 1042,
											"end": 1061,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 1038,
											"end": 1068,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 1035,
											"end": 1037,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 1035,
											"end": 1037,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "115"
										},
										{
											"begin": 1035,
											"end": 1037,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 1085,
											"end": 1090,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1078,
											"end": 1083,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1071,
											"end": 1091,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 1035,
											"end": 1037,
											"name": "tag",
											"source": 13,
											"value": "115"
										},
										{
											"begin": 1035,
											"end": 1037,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1122,
											"end": 1124,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 1116,
											"end": 1125,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 1164,
											"end": 1168,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 1156,
											"end": 1162,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1152,
											"end": 1169,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1235,
											"end": 1241,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1223,
											"end": 1233,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1220,
											"end": 1242,
											"name": "LT",
											"source": 13
										},
										{
											"begin": 1199,
											"end": 1217,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1187,
											"end": 1197,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 1184,
											"end": 1218,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 1181,
											"end": 1243,
											"name": "OR",
											"source": 13
										},
										{
											"begin": 1178,
											"end": 1180,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 1178,
											"end": 1180,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "116"
										},
										{
											"begin": 1178,
											"end": 1180,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 1246,
											"end": 1255,
											"name": "INVALID",
											"source": 13
										},
										{
											"begin": 1178,
											"end": 1180,
											"name": "tag",
											"source": 13,
											"value": "116"
										},
										{
											"begin": 1178,
											"end": 1180,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1273,
											"end": 1275,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 1266,
											"end": 1288,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 1336,
											"end": 1352,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 1336,
											"end": 1352,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 1321,
											"end": 1353,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 1321,
											"end": 1353,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1306,
											"end": 1312,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 1025,
											"end": 1359,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1025,
											"end": 1359,
											"name": "JUMP",
											"source": 13,
											"value": "[out]"
										},
										{
											"begin": 1364,
											"end": 1558,
											"name": "tag",
											"source": 13,
											"value": "117"
										},
										{
											"begin": 1364,
											"end": 1558,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1445,
											"end": 1458,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1445,
											"end": 1458,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 1498,
											"end": 1532,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1487,
											"end": 1533,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1487,
											"end": 1533,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 1477,
											"end": 1534,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1477,
											"end": 1534,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 1467,
											"end": 1469,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "102"
										},
										{
											"begin": 1467,
											"end": 1469,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 1548,
											"end": 1549,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1545,
											"end": 1546,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1538,
											"end": 1550,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 1563,
											"end": 1734,
											"name": "tag",
											"source": 13,
											"value": "120"
										},
										{
											"begin": 1563,
											"end": 1734,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1643,
											"end": 1656,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1643,
											"end": 1656,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 1696,
											"end": 1708,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFF"
										},
										{
											"begin": 1685,
											"end": 1709,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1685,
											"end": 1709,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 1675,
											"end": 1710,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1675,
											"end": 1710,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 1665,
											"end": 1667,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "102"
										},
										{
											"begin": 1665,
											"end": 1667,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 1724,
											"end": 1725,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1721,
											"end": 1722,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1714,
											"end": 1726,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 1739,
											"end": 1901,
											"name": "tag",
											"source": 13,
											"value": "123"
										},
										{
											"begin": 1739,
											"end": 1901,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1818,
											"end": 1831,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1818,
											"end": 1831,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 1871,
											"end": 1875,
											"name": "PUSH",
											"source": 13,
											"value": "FF"
										},
										{
											"begin": 1860,
											"end": 1876,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1860,
											"end": 1876,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 1850,
											"end": 1877,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1850,
											"end": 1877,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 1840,
											"end": 1842,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "102"
										},
										{
											"begin": 1840,
											"end": 1842,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 1891,
											"end": 1892,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1888,
											"end": 1889,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1881,
											"end": 1893,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 1906,
											"end": 2169,
											"name": "tag",
											"source": 13,
											"value": "49"
										},
										{
											"begin": 1906,
											"end": 2169,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1906,
											"end": 2169,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2029,
											"end": 2031,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 2017,
											"end": 2026,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 2008,
											"end": 2015,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 2004,
											"end": 2027,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 2000,
											"end": 2032,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 1997,
											"end": 1999,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 1997,
											"end": 1999,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "127"
										},
										{
											"begin": 1997,
											"end": 1999,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 2050,
											"end": 2056,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 2042,
											"end": 2048,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 2035,
											"end": 2057,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 1997,
											"end": 1999,
											"name": "tag",
											"source": 13,
											"value": "127"
										},
										{
											"begin": 1997,
											"end": 1999,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2087,
											"end": 2096,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 2081,
											"end": 2097,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 2106,
											"end": 2139,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "128"
										},
										{
											"begin": 2133,
											"end": 2138,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 2106,
											"end": 2139,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "103"
										},
										{
											"begin": 2106,
											"end": 2139,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 2106,
											"end": 2139,
											"name": "tag",
											"source": 13,
											"value": "128"
										},
										{
											"begin": 2106,
											"end": 2139,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2158,
											"end": 2163,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 1987,
											"end": 2169,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1987,
											"end": 2169,
											"name": "JUMP",
											"source": 13,
											"value": "[out]"
										},
										{
											"begin": 2174,
											"end": 2532,
											"name": "tag",
											"source": 13,
											"value": "6"
										},
										{
											"begin": 2174,
											"end": 2532,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2174,
											"end": 2532,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2174,
											"end": 2532,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 2349,
											"end": 2352,
											"name": "PUSH",
											"source": 13,
											"value": "180"
										},
										{
											"begin": 2337,
											"end": 2346,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 2328,
											"end": 2335,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 2324,
											"end": 2347,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 2320,
											"end": 2353,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 2317,
											"end": 2319,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 2317,
											"end": 2319,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "130"
										},
										{
											"begin": 2317,
											"end": 2319,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 2371,
											"end": 2377,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 2363,
											"end": 2369,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 2356,
											"end": 2378,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 2317,
											"end": 2319,
											"name": "tag",
											"source": 13,
											"value": "130"
										},
										{
											"begin": 2317,
											"end": 2319,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2399,
											"end": 2448,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "131"
										},
										{
											"begin": 2440,
											"end": 2447,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 2429,
											"end": 2438,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 2399,
											"end": 2448,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "104"
										},
										{
											"begin": 2399,
											"end": 2448,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 2399,
											"end": 2448,
											"name": "tag",
											"source": 13,
											"value": "131"
										},
										{
											"begin": 2399,
											"end": 2448,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2389,
											"end": 2448,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 2389,
											"end": 2448,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2467,
											"end": 2526,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "132"
										},
										{
											"begin": 2518,
											"end": 2525,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 2512,
											"end": 2515,
											"name": "PUSH",
											"source": 13,
											"value": "C0"
										},
										{
											"begin": 2501,
											"end": 2510,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 2497,
											"end": 2516,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 2467,
											"end": 2526,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "104"
										},
										{
											"begin": 2467,
											"end": 2526,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 2467,
											"end": 2526,
											"name": "tag",
											"source": 13,
											"value": "132"
										},
										{
											"begin": 2467,
											"end": 2526,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2457,
											"end": 2526,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2457,
											"end": 2526,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2307,
											"end": 2532,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 2307,
											"end": 2532,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2307,
											"end": 2532,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 2307,
											"end": 2532,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2307,
											"end": 2532,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2307,
											"end": 2532,
											"name": "JUMP",
											"source": 13,
											"value": "[out]"
										},
										{
											"begin": 2537,
											"end": 3926,
											"name": "tag",
											"source": 13,
											"value": "71"
										},
										{
											"begin": 2537,
											"end": 3926,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2537,
											"end": 3926,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2666,
											"end": 2669,
											"name": "PUSH",
											"source": 13,
											"value": "180"
										},
										{
											"begin": 2710,
											"end": 2712,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 2698,
											"end": 2707,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 2689,
											"end": 2696,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 2685,
											"end": 2708,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 2681,
											"end": 2713,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 2678,
											"end": 2680,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 2678,
											"end": 2680,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "134"
										},
										{
											"begin": 2678,
											"end": 2680,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 2731,
											"end": 2737,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 2723,
											"end": 2729,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 2716,
											"end": 2738,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 2678,
											"end": 2680,
											"name": "tag",
											"source": 13,
											"value": "134"
										},
										{
											"begin": 2678,
											"end": 2680,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2762,
											"end": 2780,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "135"
										},
										{
											"begin": 2777,
											"end": 2779,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 2762,
											"end": 2780,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "136"
										},
										{
											"begin": 2762,
											"end": 2780,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 2762,
											"end": 2780,
											"name": "tag",
											"source": 13,
											"value": "135"
										},
										{
											"begin": 2762,
											"end": 2780,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2749,
											"end": 2780,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2749,
											"end": 2780,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2803,
											"end": 2878,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "137"
										},
										{
											"begin": 2870,
											"end": 2877,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 2859,
											"end": 2868,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 2803,
											"end": 2878,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "113"
										},
										{
											"begin": 2803,
											"end": 2878,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 2803,
											"end": 2878,
											"name": "tag",
											"source": 13,
											"value": "137"
										},
										{
											"begin": 2803,
											"end": 2878,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2796,
											"end": 2801,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 2789,
											"end": 2879,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 2911,
											"end": 2962,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "138"
										},
										{
											"begin": 2958,
											"end": 2960,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 2947,
											"end": 2956,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 2943,
											"end": 2961,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 2911,
											"end": 2962,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "117"
										},
										{
											"begin": 2911,
											"end": 2962,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 2911,
											"end": 2962,
											"name": "tag",
											"source": 13,
											"value": "138"
										},
										{
											"begin": 2911,
											"end": 2962,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2906,
											"end": 2908,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 2899,
											"end": 2904,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 2895,
											"end": 2909,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 2888,
											"end": 2963,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 2995,
											"end": 3046,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "139"
										},
										{
											"begin": 3042,
											"end": 3044,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 3031,
											"end": 3040,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 3027,
											"end": 3045,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 2995,
											"end": 3046,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "117"
										},
										{
											"begin": 2995,
											"end": 3046,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 2995,
											"end": 3046,
											"name": "tag",
											"source": 13,
											"value": "139"
										},
										{
											"begin": 2995,
											"end": 3046,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2990,
											"end": 2992,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 2983,
											"end": 2988,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 2979,
											"end": 2993,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 2972,
											"end": 3047,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 3079,
											"end": 3130,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "140"
										},
										{
											"begin": 3126,
											"end": 3128,
											"name": "PUSH",
											"source": 13,
											"value": "60"
										},
										{
											"begin": 3115,
											"end": 3124,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 3111,
											"end": 3129,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 3079,
											"end": 3130,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "117"
										},
										{
											"begin": 3079,
											"end": 3130,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 3079,
											"end": 3130,
											"name": "tag",
											"source": 13,
											"value": "140"
										},
										{
											"begin": 3079,
											"end": 3130,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3074,
											"end": 3076,
											"name": "PUSH",
											"source": 13,
											"value": "60"
										},
										{
											"begin": 3067,
											"end": 3072,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 3063,
											"end": 3077,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 3056,
											"end": 3131,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 3164,
											"end": 3216,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "141"
										},
										{
											"begin": 3211,
											"end": 3214,
											"name": "PUSH",
											"source": 13,
											"value": "80"
										},
										{
											"begin": 3200,
											"end": 3209,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 3196,
											"end": 3215,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 3164,
											"end": 3216,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "117"
										},
										{
											"begin": 3164,
											"end": 3216,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 3164,
											"end": 3216,
											"name": "tag",
											"source": 13,
											"value": "141"
										},
										{
											"begin": 3164,
											"end": 3216,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3158,
											"end": 3161,
											"name": "PUSH",
											"source": 13,
											"value": "80"
										},
										{
											"begin": 3151,
											"end": 3156,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 3147,
											"end": 3162,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 3140,
											"end": 3217,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 3250,
											"end": 3302,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "142"
										},
										{
											"begin": 3297,
											"end": 3300,
											"name": "PUSH",
											"source": 13,
											"value": "A0"
										},
										{
											"begin": 3286,
											"end": 3295,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 3282,
											"end": 3301,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 3250,
											"end": 3302,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "117"
										},
										{
											"begin": 3250,
											"end": 3302,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 3250,
											"end": 3302,
											"name": "tag",
											"source": 13,
											"value": "142"
										},
										{
											"begin": 3250,
											"end": 3302,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3244,
											"end": 3247,
											"name": "PUSH",
											"source": 13,
											"value": "A0"
										},
										{
											"begin": 3237,
											"end": 3242,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 3233,
											"end": 3248,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 3226,
											"end": 3303,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 3336,
											"end": 3387,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "143"
										},
										{
											"begin": 3382,
											"end": 3385,
											"name": "PUSH",
											"source": 13,
											"value": "C0"
										},
										{
											"begin": 3371,
											"end": 3380,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 3367,
											"end": 3386,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 3336,
											"end": 3387,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "120"
										},
										{
											"begin": 3336,
											"end": 3387,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 3336,
											"end": 3387,
											"name": "tag",
											"source": 13,
											"value": "143"
										},
										{
											"begin": 3336,
											"end": 3387,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3330,
											"end": 3333,
											"name": "PUSH",
											"source": 13,
											"value": "C0"
										},
										{
											"begin": 3323,
											"end": 3328,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 3319,
											"end": 3334,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 3312,
											"end": 3388,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 3421,
											"end": 3473,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "144"
										},
										{
											"begin": 3468,
											"end": 3471,
											"name": "PUSH",
											"source": 13,
											"value": "E0"
										},
										{
											"begin": 3457,
											"end": 3466,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 3453,
											"end": 3472,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 3421,
											"end": 3473,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "100"
										},
										{
											"begin": 3421,
											"end": 3473,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 3421,
											"end": 3473,
											"name": "tag",
											"source": 13,
											"value": "144"
										},
										{
											"begin": 3421,
											"end": 3473,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3415,
											"end": 3418,
											"name": "PUSH",
											"source": 13,
											"value": "E0"
										},
										{
											"begin": 3408,
											"end": 3413,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 3404,
											"end": 3419,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 3397,
											"end": 3474,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 3493,
											"end": 3496,
											"name": "PUSH",
											"source": 13,
											"value": "100"
										},
										{
											"begin": 3528,
											"end": 3579,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "145"
										},
										{
											"begin": 3575,
											"end": 3577,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 3564,
											"end": 3573,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 3560,
											"end": 3578,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 3528,
											"end": 3579,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "100"
										},
										{
											"begin": 3528,
											"end": 3579,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 3528,
											"end": 3579,
											"name": "tag",
											"source": 13,
											"value": "145"
										},
										{
											"begin": 3528,
											"end": 3579,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3512,
											"end": 3526,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3512,
											"end": 3526,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 3512,
											"end": 3526,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 3505,
											"end": 3580,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 3599,
											"end": 3602,
											"name": "PUSH",
											"source": 13,
											"value": "120"
										},
										{
											"begin": 3634,
											"end": 3685,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "146"
										},
										{
											"begin": 3666,
											"end": 3684,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 3666,
											"end": 3684,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 3666,
											"end": 3684,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 3634,
											"end": 3685,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "100"
										},
										{
											"begin": 3634,
											"end": 3685,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 3634,
											"end": 3685,
											"name": "tag",
											"source": 13,
											"value": "146"
										},
										{
											"begin": 3634,
											"end": 3685,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3618,
											"end": 3632,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3618,
											"end": 3632,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 3618,
											"end": 3632,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 3611,
											"end": 3686,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 3705,
											"end": 3708,
											"name": "PUSH",
											"source": 13,
											"value": "140"
										},
										{
											"begin": 3740,
											"end": 3791,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "147"
										},
										{
											"begin": 3772,
											"end": 3790,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 3772,
											"end": 3790,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 3772,
											"end": 3790,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 3740,
											"end": 3791,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "100"
										},
										{
											"begin": 3740,
											"end": 3791,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 3740,
											"end": 3791,
											"name": "tag",
											"source": 13,
											"value": "147"
										},
										{
											"begin": 3740,
											"end": 3791,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3724,
											"end": 3738,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3724,
											"end": 3738,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 3724,
											"end": 3738,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 3717,
											"end": 3792,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 3811,
											"end": 3814,
											"name": "PUSH",
											"source": 13,
											"value": "160"
										},
										{
											"begin": 3846,
											"end": 3895,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "148"
										},
										{
											"begin": 3876,
											"end": 3894,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 3876,
											"end": 3894,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 3876,
											"end": 3894,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 3846,
											"end": 3895,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "123"
										},
										{
											"begin": 3846,
											"end": 3895,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 3846,
											"end": 3895,
											"name": "tag",
											"source": 13,
											"value": "148"
										},
										{
											"begin": 3846,
											"end": 3895,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3830,
											"end": 3844,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3830,
											"end": 3844,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 3830,
											"end": 3844,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 3823,
											"end": 3896,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 3834,
											"end": 3839,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 2646,
											"end": 3926,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2646,
											"end": 3926,
											"name": "JUMP",
											"source": 13,
											"value": "[out]"
										},
										{
											"begin": 3931,
											"end": 4142,
											"name": "tag",
											"source": 13,
											"value": "66"
										},
										{
											"begin": 3931,
											"end": 4142,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4103,
											"end": 4135,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 4103,
											"end": 4135,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 4103,
											"end": 4135,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 4103,
											"end": 4135,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 4085,
											"end": 4136,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 4085,
											"end": 4136,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 4073,
											"end": 4075,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 4058,
											"end": 4076,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 4058,
											"end": 4076,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 4040,
											"end": 4142,
											"name": "JUMP",
											"source": 13,
											"value": "[out]"
										},
										{
											"begin": 4147,
											"end": 4459,
											"name": "tag",
											"source": 13,
											"value": "75"
										},
										{
											"begin": 4147,
											"end": 4459,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4385,
											"end": 4400,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 4385,
											"end": 4400,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 4385,
											"end": 4400,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 4367,
											"end": 4401,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 4367,
											"end": 4401,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 4437,
											"end": 4452,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 4437,
											"end": 4452,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 4432,
											"end": 4434,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 4417,
											"end": 4435,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 4417,
											"end": 4435,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 4410,
											"end": 4453,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 4317,
											"end": 4319,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 4302,
											"end": 4320,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 4302,
											"end": 4320,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 4284,
											"end": 4459,
											"name": "JUMP",
											"source": 13,
											"value": "[out]"
										},
										{
											"begin": 4464,
											"end": 5648,
											"name": "tag",
											"source": 13,
											"value": "88"
										},
										{
											"begin": 4464,
											"end": 5648,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4732,
											"end": 4734,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 4744,
											"end": 4765,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 4744,
											"end": 4765,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 4744,
											"end": 4765,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 4814,
											"end": 4827,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 4814,
											"end": 4827,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 4717,
											"end": 4735,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 4717,
											"end": 4735,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 4717,
											"end": 4735,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 4836,
											"end": 4858,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 4836,
											"end": 4858,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 4836,
											"end": 4858,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 4464,
											"end": 5648,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 4464,
											"end": 5648,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 4911,
											"end": 4915,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 4911,
											"end": 4915,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 4889,
											"end": 4891,
											"name": "PUSH",
											"source": 13,
											"value": "60"
										},
										{
											"begin": 4874,
											"end": 4892,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 4874,
											"end": 4892,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 4874,
											"end": 4892,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 4938,
											"end": 4953,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 4938,
											"end": 4953,
											"name": "DUP8",
											"source": 13
										},
										{
											"begin": 4938,
											"end": 4953,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 4464,
											"end": 5648,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 4984,
											"end": 5179,
											"name": "tag",
											"source": 13,
											"value": "152"
										},
										{
											"begin": 4984,
											"end": 5179,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4998,
											"end": 5004,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 4995,
											"end": 4996,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 4992,
											"end": 5005,
											"name": "LT",
											"source": 13
										},
										{
											"begin": 4984,
											"end": 5179,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 4984,
											"end": 5179,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "154"
										},
										{
											"begin": 4984,
											"end": 5179,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 5063,
											"end": 5076,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 5063,
											"end": 5076,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5059,
											"end": 5098,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 5047,
											"end": 5099,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 5047,
											"end": 5099,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 5119,
											"end": 5131,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 5119,
											"end": 5131,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 5119,
											"end": 5131,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 5119,
											"end": 5131,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 5154,
											"end": 5169,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 5154,
											"end": 5169,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 5154,
											"end": 5169,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 5154,
											"end": 5169,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 5095,
											"end": 5096,
											"name": "PUSH",
											"source": 13,
											"value": "1"
										},
										{
											"begin": 5013,
											"end": 5022,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 4984,
											"end": 5179,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "152"
										},
										{
											"begin": 4984,
											"end": 5179,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4984,
											"end": 5179,
											"name": "tag",
											"source": 13,
											"value": "154"
										},
										{
											"begin": 4984,
											"end": 5179,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5215,
											"end": 5234,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 5215,
											"end": 5234,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 5215,
											"end": 5234,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 5195,
											"end": 5213,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 5195,
											"end": 5213,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 5195,
											"end": 5213,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 5188,
											"end": 5235,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 5285,
											"end": 5298,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 5285,
											"end": 5298,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 5307,
											"end": 5328,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 5307,
											"end": 5328,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 5307,
											"end": 5328,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 5383,
											"end": 5398,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 5383,
											"end": 5398,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 5383,
											"end": 5398,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 5383,
											"end": 5398,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 5346,
											"end": 5358,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 5346,
											"end": 5358,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 5346,
											"end": 5358,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 5418,
											"end": 5422,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 5431,
											"end": 5620,
											"name": "tag",
											"source": 13,
											"value": "155"
										},
										{
											"begin": 5431,
											"end": 5620,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5447,
											"end": 5455,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 5442,
											"end": 5445,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 5439,
											"end": 5456,
											"name": "LT",
											"source": 13
										},
										{
											"begin": 5431,
											"end": 5620,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 5431,
											"end": 5620,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "157"
										},
										{
											"begin": 5431,
											"end": 5620,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 5516,
											"end": 5531,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 5516,
											"end": 5531,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 5502,
											"end": 5532,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 5502,
											"end": 5532,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 5593,
											"end": 5610,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 5593,
											"end": 5610,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 5593,
											"end": 5610,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 5593,
											"end": 5610,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 5554,
											"end": 5568,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 5554,
											"end": 5568,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 5554,
											"end": 5568,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 5554,
											"end": 5568,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 5475,
											"end": 5476,
											"name": "PUSH",
											"source": 13,
											"value": "1"
										},
										{
											"begin": 5466,
											"end": 5477,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 5431,
											"end": 5620,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "155"
										},
										{
											"begin": 5431,
											"end": 5620,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 5431,
											"end": 5620,
											"name": "tag",
											"source": 13,
											"value": "157"
										},
										{
											"begin": 5431,
											"end": 5620,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5637,
											"end": 5642,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 5637,
											"end": 5642,
											"name": "SWAP8",
											"source": 13
										},
										{
											"begin": 4693,
											"end": 5648,
											"name": "SWAP7",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4693,
											"end": 5648,
											"name": "JUMP",
											"source": 13,
											"value": "[out]"
										},
										{
											"begin": 5653,
											"end": 5927,
											"name": "tag",
											"source": 13,
											"value": "28"
										},
										{
											"begin": 5653,
											"end": 5927,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5827,
											"end": 5852,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 5827,
											"end": 5852,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 5827,
											"end": 5852,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5888,
											"end": 5920,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 5883,
											"end": 5885,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 5868,
											"end": 5886,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 5868,
											"end": 5886,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 5861,
											"end": 5921,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 5815,
											"end": 5817,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 5800,
											"end": 5818,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 5800,
											"end": 5818,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 5782,
											"end": 5927,
											"name": "JUMP",
											"source": 13,
											"value": "[out]"
										},
										{
											"begin": 5932,
											"end": 6332,
											"name": "tag",
											"source": 13,
											"value": "61"
										},
										{
											"begin": 5932,
											"end": 6332,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6134,
											"end": 6136,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 6116,
											"end": 6137,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 6116,
											"end": 6137,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 6116,
											"end": 6137,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 6173,
											"end": 6175,
											"name": "PUSH",
											"source": 13,
											"value": "24"
										},
										{
											"begin": 6153,
											"end": 6171,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 6153,
											"end": 6171,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 6153,
											"end": 6171,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 6146,
											"end": 6176,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 6212,
											"end": 6246,
											"name": "PUSH",
											"source": 13,
											"value": "4465627420546F6B656E20756E6465726C79696E6720646F6573206E6F74206D"
										},
										{
											"begin": 6207,
											"end": 6209,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 6192,
											"end": 6210,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 6192,
											"end": 6210,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 6185,
											"end": 6247,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "C2E8C6D"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6278,
											"end": 6280,
											"name": "PUSH",
											"source": 13,
											"value": "60"
										},
										{
											"begin": 6263,
											"end": 6281,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 6263,
											"end": 6281,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 6256,
											"end": 6290,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 6322,
											"end": 6325,
											"name": "PUSH",
											"source": 13,
											"value": "80"
										},
										{
											"begin": 6307,
											"end": 6326,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 6307,
											"end": 6326,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 6106,
											"end": 6332,
											"name": "JUMP",
											"source": 13,
											"value": "[out]"
										},
										{
											"begin": 6337,
											"end": 6693,
											"name": "tag",
											"source": 13,
											"value": "52"
										},
										{
											"begin": 6337,
											"end": 6693,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6539,
											"end": 6541,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 6521,
											"end": 6542,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 6521,
											"end": 6542,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 6521,
											"end": 6542,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 6558,
											"end": 6576,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 6558,
											"end": 6576,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 6558,
											"end": 6576,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 6551,
											"end": 6581,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 6617,
											"end": 6651,
											"name": "PUSH",
											"source": 13,
											"value": "4F546F6B656E20756E6465726C79696E6720646F6573206E6F74206D61746368"
										},
										{
											"begin": 6612,
											"end": 6614,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 6597,
											"end": 6615,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 6597,
											"end": 6615,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 6590,
											"end": 6652,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 6684,
											"end": 6686,
											"name": "PUSH",
											"source": 13,
											"value": "60"
										},
										{
											"begin": 6669,
											"end": 6687,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 6669,
											"end": 6687,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 6511,
											"end": 6693,
											"name": "JUMP",
											"source": 13,
											"value": "[out]"
										},
										{
											"begin": 7048,
											"end": 7225,
											"name": "tag",
											"source": 13,
											"value": "93"
										},
										{
											"begin": 7048,
											"end": 7225,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7194,
											"end": 7219,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 7194,
											"end": 7219,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 7194,
											"end": 7219,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 7182,
											"end": 7184,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 7167,
											"end": 7185,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 7167,
											"end": 7185,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 7149,
											"end": 7225,
											"name": "JUMP",
											"source": 13,
											"value": "[out]"
										},
										{
											"begin": 7230,
											"end": 7472,
											"name": "tag",
											"source": 13,
											"value": "136"
										},
										{
											"begin": 7230,
											"end": 7472,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7300,
											"end": 7302,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 7294,
											"end": 7303,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 7330,
											"end": 7347,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 7330,
											"end": 7347,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 7330,
											"end": 7347,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 7377,
											"end": 7395,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7362,
											"end": 7396,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 7362,
											"end": 7396,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 7398,
											"end": 7420,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 7398,
											"end": 7420,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 7398,
											"end": 7420,
											"name": "LT",
											"source": 13
										},
										{
											"begin": 7359,
											"end": 7421,
											"name": "OR",
											"source": 13
										},
										{
											"begin": 7356,
											"end": 7358,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 7356,
											"end": 7358,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "164"
										},
										{
											"begin": 7356,
											"end": 7358,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 7424,
											"end": 7433,
											"name": "INVALID",
											"source": 13
										},
										{
											"begin": 7356,
											"end": 7358,
											"name": "tag",
											"source": 13,
											"value": "164"
										},
										{
											"begin": 7356,
											"end": 7358,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7451,
											"end": 7453,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 7444,
											"end": 7466,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 7274,
											"end": 7472,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 7274,
											"end": 7472,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7274,
											"end": 7472,
											"name": "JUMP",
											"source": 13,
											"value": "[out]"
										},
										{
											"begin": 7477,
											"end": 7610,
											"name": "tag",
											"source": 13,
											"value": "103"
										},
										{
											"begin": 7477,
											"end": 7610,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7554,
											"end": 7585,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 7554,
											"end": 7585,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 7544,
											"end": 7586,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 7544,
											"end": 7586,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 7534,
											"end": 7536,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "166"
										},
										{
											"begin": 7534,
											"end": 7536,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 7600,
											"end": 7601,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 7597,
											"end": 7598,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 7590,
											"end": 7602,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 7534,
											"end": 7536,
											"name": "tag",
											"source": 13,
											"value": "166"
										},
										{
											"begin": 7534,
											"end": 7536,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7524,
											"end": 7610,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7524,
											"end": 7610,
											"name": "JUMP",
											"source": 13,
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"execute(address[6],address[6])": "8314b221"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.7.5+commit.eb77ed08\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address[6]\",\"name\":\"oTokenImplementations\",\"type\":\"address[6]\"},{\"internalType\":\"address[6]\",\"name\":\"variableDebtImplementations\",\"type\":\"address[6]\"}],\"name\":\"execute\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Omnidex-incentives/proposals/ProposalIncentivesExecutor.sol\":\"ProposalIncentivesExecutor\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@aave/aave-stake/contracts/interfaces/IERC20.sol\":{\"keccak256\":\"0x150506e2e40dc3cea841fe0ade6021b9b0d4e09f7616d312bc7c1300a2d7a94f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d3dbf854f310f20a48cd727e1680067f4d911a4c6d220886935736297a0f89cb\",\"dweb:/ipfs/QmU8xN2AYrURFgmB4hLFLamc7aJe6VD5qkUEcfdrKPcz9C\"]},\"contracts/Omnidex-incentives/interfaces/ILendingPoolAddressesProvider.sol\":{\"keccak256\":\"0x805ab39fec661fe4a7b100f657bd0be1599a2bec05da3a0ab03f0d6eafe47c24\",\"license\":\"agpl-3.0\",\"urls\":[\"bzz-raw://8cb6a3db794531cd5f7bb0408b6f9b2358ab8e526878a1442e23d91b5314113d\",\"dweb:/ipfs/QmP3AngoDhjztkQQ1FsiCC4w4pj5H8RTy4rYkLfMSwL1FK\"]},\"contracts/Omnidex-incentives/interfaces/ILendingPoolConfigurator.sol\":{\"keccak256\":\"0x9f93cab78339ab46e06e8769a8b703153d940713c036a0fa762942de98fa8776\",\"license\":\"agpl-3.0\",\"urls\":[\"bzz-raw://6798937511de2ec730ff830ff88b61c9758f7436d119b5735b550d4185700311\",\"dweb:/ipfs/QmP2LPwb2iwSSZUdSYbnASACNVUxh9XrkHgzPPP8uwEBJL\"]},\"contracts/Omnidex-incentives/interfaces/ILendingPoolData.sol\":{\"keccak256\":\"0xa2dd5f64bc25dff88e130e0f99ebe24c743f308849c8fa487bad26eef278ef6c\",\"license\":\"agpl-3.0\",\"urls\":[\"bzz-raw://20008df765afa056c3b54e00e1321791a7a2c6d2dbf8d21e146afdbe73f8cfd1\",\"dweb:/ipfs/QmXtN47mpdSYQb64YCQDkX8r5QFg5N9Mq5SMZ828fJPDhu\"]},\"contracts/Omnidex-incentives/interfaces/IOTokenDetailed.sol\":{\"keccak256\":\"0x67a143830d137853f16cff5a41f1232c008c4f22764f32ade20f7734654e29ca\",\"license\":\"agpl-3.0\",\"urls\":[\"bzz-raw://ea21a986420604e428b4c0ba188ca978b62f69ef1b75c336ede4074cb68f25d8\",\"dweb:/ipfs/QmY6wt5U37obDdU9Dq1sGPzDbBjZzY7Ju2WNs8KbQmzgLN\"]},\"contracts/Omnidex-incentives/interfaces/IOmnidexDistributionManager.sol\":{\"keccak256\":\"0xabf5e1d31a3567f017adf41a4384f0c7a6fce4e81441a7b42fb565f92256a87d\",\"license\":\"agpl-3.0\",\"urls\":[\"bzz-raw://a2aab2cd0efc27da9ced088fcb5534b62c4ebd436688778af86949e706d22fef\",\"dweb:/ipfs/QmPAQiLYLB7QXMKaHjSwWKaK8mN8pgBRteJUqg5ptKebZE\"]},\"contracts/Omnidex-incentives/interfaces/IOmnidexIncentivesController.sol\":{\"keccak256\":\"0x8615452507c06e118914d5bdbd7136745f29030f2bd90fb80101eda042138d84\",\"license\":\"agpl-3.0\",\"urls\":[\"bzz-raw://632c6c2423e567411001205cb0838ed6ccd5a6d36b9f0e27e7262cc79a081e83\",\"dweb:/ipfs/QmSM9PrZzpBZ9Ae6tcDPWoUNztLNrtVpYTCb83bFNjJP4A\"]},\"contracts/Omnidex-incentives/interfaces/IProposalIncentivesExecutor.sol\":{\"keccak256\":\"0x1dddfc058b0df3057515e2268861206d23d9a44161494e5fbb63fdbd6c76c02c\",\"license\":\"AGPL-3.0\",\"urls\":[\"bzz-raw://b5096d4e3ff26b0bc371b9d9551b16338534ef62b09ecc2266faff5caa744057\",\"dweb:/ipfs/QmWX6RZm7iruLn6WGpo2bms96ppdqmVLsCnt5Qk9Aa3mrZ\"]},\"contracts/Omnidex-incentives/lib/DistributionTypes.sol\":{\"keccak256\":\"0xbb24d51b39ff627c1d2dbbaa5063ae7f1d515ec3980cc6ed8f5d171c17ef1d36\",\"license\":\"agpl-3.0\",\"urls\":[\"bzz-raw://30120d3556895da3f517a6ce8954e4419944f9e07b7b4cd3d596df3e8e8103e3\",\"dweb:/ipfs/QmTXPN7Q8ULdJnJVGVTwLbw7Rvy5h17DfabKf8szvprQNb\"]},\"contracts/Omnidex-incentives/lib/SafeMath.sol\":{\"keccak256\":\"0x23218dd12c40acbd9c7c6f799d20dd84c88e1262583e25465f1413ed8c5d67d5\",\"license\":\"agpl-3.0\",\"urls\":[\"bzz-raw://4896e02c7ad212eb804e1ad03a711f964e04eb9b7d6c0024a4cd26b29adc0a1a\",\"dweb:/ipfs/QmamjuX7iGUgpGCgnsPnUsfFMG751kBzrnB2gZFP1tkvxL\"]},\"contracts/Omnidex-incentives/proposals/ProposalIncentivesExecutor.sol\":{\"keccak256\":\"0x2037bdb75b7d82d045c70e8950d22963f04df0979dda73640ae6a53f6eb83a02\",\"license\":\"AGPL-3.0\",\"urls\":[\"bzz-raw://99afc7ecd97a58cdd5ca12e2eefed95325dd5afb05e041c3e1f21f0a402e13b3\",\"dweb:/ipfs/QmUnu3zCBRfyjJ2ffAVz954Zcm91bNwdeBNvfGGz4frcgB\"]},\"contracts/Omnidex-incentives/utils/DataTypes.sol\":{\"keccak256\":\"0xa64c1b776b13f3f6cc88fa0742ce15073026bb526be7f324dddbd2b221e67129\",\"license\":\"agpl-3.0\",\"urls\":[\"bzz-raw://f194c291658a18f69b8df0b1b2ddd08bbb621b821171700bf55f7586e65a6275\",\"dweb:/ipfs/QmddN7PHqyFk8ZCveEqqoUfAsQ9sToQYna56RqKRDAFAs2\"]},\"contracts/Omnidex-incentives/utils/PercentageMath.sol\":{\"keccak256\":\"0xd2fe1c41c917b187512b0398c5a3b51d8fa0864b2d7dde5aa5c196f6e523ba33\",\"license\":\"agpl-3.0\",\"urls\":[\"bzz-raw://251ae54e3634306bd51f26e6554de2ea88fb1754472e01e1371aed4b7aee5fd1\",\"dweb:/ipfs/QmYTrJNx2LmBLwecPp9mcGeXYsVd8d49hUxgp5ESMN5Wi5\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/Omnidex-incentives/utils/DataTypes.sol": {
				"DataTypes": {
					"abi": [],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/Omnidex-incentives/utils/DataTypes.sol\":64:1576  library DataTypes {\r... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  invalid\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/Omnidex-incentives/utils/DataTypes.sol\":64:1576  library DataTypes {\r... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa264697066735822122089cd6e043f485badd6020854bb4bf946a88e108b527783d530aca5ff0f2df79264736f6c63430007050033\n}\n",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566023600b82828239805160001a607314601657fe5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122089cd6e043f485badd6020854bb4bf946a88e108b527783d530aca5ff0f2df79264736f6c63430007050033",
							"opcodes": "PUSH1 0x56 PUSH1 0x23 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x16 JUMPI INVALID JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP10 0xCD PUSH15 0x43F485BADD6020854BB4BF946A88E LT DUP12 MSTORE PUSH24 0x83D530ACA5FF0F2DF79264736F6C63430007050033000000 ",
							"sourceMap": "64:1512:11:-:0;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122089cd6e043f485badd6020854bb4bf946a88e108b527783d530aca5ff0f2df79264736f6c63430007050033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP10 0xCD PUSH15 0x43F485BADD6020854BB4BF946A88E LT DUP12 MSTORE PUSH24 0x83D530ACA5FF0F2DF79264736F6C63430007050033000000 ",
							"sourceMap": "64:1512:11:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 64,
									"end": 1576,
									"name": "PUSH #[$]",
									"source": 11,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 64,
									"end": 1576,
									"name": "PUSH [$]",
									"source": 11,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 64,
									"end": 1576,
									"name": "PUSH",
									"source": 11,
									"value": "B"
								},
								{
									"begin": 64,
									"end": 1576,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 64,
									"end": 1576,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 64,
									"end": 1576,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 64,
									"end": 1576,
									"name": "CODECOPY",
									"source": 11
								},
								{
									"begin": 64,
									"end": 1576,
									"name": "DUP1",
									"source": 11
								},
								{
									"begin": 64,
									"end": 1576,
									"name": "MLOAD",
									"source": 11
								},
								{
									"begin": 64,
									"end": 1576,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 64,
									"end": 1576,
									"name": "BYTE",
									"source": 11
								},
								{
									"begin": 64,
									"end": 1576,
									"name": "PUSH",
									"source": 11,
									"value": "73"
								},
								{
									"begin": 64,
									"end": 1576,
									"name": "EQ",
									"source": 11
								},
								{
									"begin": 64,
									"end": 1576,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "1"
								},
								{
									"begin": 64,
									"end": 1576,
									"name": "JUMPI",
									"source": 11
								},
								{
									"begin": 64,
									"end": 1576,
									"name": "INVALID",
									"source": 11
								},
								{
									"begin": 64,
									"end": 1576,
									"name": "tag",
									"source": 11,
									"value": "1"
								},
								{
									"begin": 64,
									"end": 1576,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 64,
									"end": 1576,
									"name": "ADDRESS",
									"source": 11
								},
								{
									"begin": 64,
									"end": 1576,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 64,
									"end": 1576,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 64,
									"end": 1576,
									"name": "PUSH",
									"source": 11,
									"value": "73"
								},
								{
									"begin": 64,
									"end": 1576,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 64,
									"end": 1576,
									"name": "MSTORE8",
									"source": 11
								},
								{
									"begin": 64,
									"end": 1576,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 64,
									"end": 1576,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 64,
									"end": 1576,
									"name": "RETURN",
									"source": 11
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122089cd6e043f485badd6020854bb4bf946a88e108b527783d530aca5ff0f2df79264736f6c63430007050033",
									".code": [
										{
											"begin": 64,
											"end": 1576,
											"name": "PUSHDEPLOYADDRESS",
											"source": 11
										},
										{
											"begin": 64,
											"end": 1576,
											"name": "ADDRESS",
											"source": 11
										},
										{
											"begin": 64,
											"end": 1576,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 64,
											"end": 1576,
											"name": "PUSH",
											"source": 11,
											"value": "80"
										},
										{
											"begin": 64,
											"end": 1576,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 64,
											"end": 1576,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 64,
											"end": 1576,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 64,
											"end": 1576,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 64,
											"end": 1576,
											"name": "REVERT",
											"source": 11
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.7.5+commit.eb77ed08\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Omnidex-incentives/utils/DataTypes.sol\":\"DataTypes\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/Omnidex-incentives/utils/DataTypes.sol\":{\"keccak256\":\"0xa64c1b776b13f3f6cc88fa0742ce15073026bb526be7f324dddbd2b221e67129\",\"license\":\"agpl-3.0\",\"urls\":[\"bzz-raw://f194c291658a18f69b8df0b1b2ddd08bbb621b821171700bf55f7586e65a6275\",\"dweb:/ipfs/QmddN7PHqyFk8ZCveEqqoUfAsQ9sToQYna56RqKRDAFAs2\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/Omnidex-incentives/utils/PercentageMath.sol": {
				"PercentageMath": {
					"abi": [],
					"devdoc": {
						"author": "Omnidex",
						"details": "Percentages are defined by default with 2 decimals of precision (100.00). The precision is indicated by PERCENTAGE_FACTOROperations are rounded half up*",
						"kind": "dev",
						"methods": {},
						"title": "PercentageMath library",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/Omnidex-incentives/utils/PercentageMath.sol\":368:1797  library PercentageMath {\r... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  invalid\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/Omnidex-incentives/utils/PercentageMath.sol\":368:1797  library PercentageMath {\r... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212201b66a4416c032a9ba6e82c6dc9a1850b5ad267f16c2f620fcefe75f313482c5964736f6c63430007050033\n}\n",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566023600b82828239805160001a607314601657fe5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212201b66a4416c032a9ba6e82c6dc9a1850b5ad267f16c2f620fcefe75f313482c5964736f6c63430007050033",
							"opcodes": "PUSH1 0x56 PUSH1 0x23 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x16 JUMPI INVALID JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SHL PUSH7 0xA4416C032A9BA6 0xE8 0x2C PUSH14 0xC9A1850B5AD267F16C2F620FCEFE PUSH22 0xF313482C5964736F6C63430007050033000000000000 ",
							"sourceMap": "368:1429:12:-:0;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212201b66a4416c032a9ba6e82c6dc9a1850b5ad267f16c2f620fcefe75f313482c5964736f6c63430007050033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SHL PUSH7 0xA4416C032A9BA6 0xE8 0x2C PUSH14 0xC9A1850B5AD267F16C2F620FCEFE PUSH22 0xF313482C5964736F6C63430007050033000000000000 ",
							"sourceMap": "368:1429:12:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"percentDiv(uint256,uint256)": "infinite",
								"percentMul(uint256,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 368,
									"end": 1797,
									"name": "PUSH #[$]",
									"source": 12,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 368,
									"end": 1797,
									"name": "PUSH [$]",
									"source": 12,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 368,
									"end": 1797,
									"name": "PUSH",
									"source": 12,
									"value": "B"
								},
								{
									"begin": 368,
									"end": 1797,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 368,
									"end": 1797,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 368,
									"end": 1797,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 368,
									"end": 1797,
									"name": "CODECOPY",
									"source": 12
								},
								{
									"begin": 368,
									"end": 1797,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 368,
									"end": 1797,
									"name": "MLOAD",
									"source": 12
								},
								{
									"begin": 368,
									"end": 1797,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 368,
									"end": 1797,
									"name": "BYTE",
									"source": 12
								},
								{
									"begin": 368,
									"end": 1797,
									"name": "PUSH",
									"source": 12,
									"value": "73"
								},
								{
									"begin": 368,
									"end": 1797,
									"name": "EQ",
									"source": 12
								},
								{
									"begin": 368,
									"end": 1797,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "1"
								},
								{
									"begin": 368,
									"end": 1797,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 368,
									"end": 1797,
									"name": "INVALID",
									"source": 12
								},
								{
									"begin": 368,
									"end": 1797,
									"name": "tag",
									"source": 12,
									"value": "1"
								},
								{
									"begin": 368,
									"end": 1797,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 368,
									"end": 1797,
									"name": "ADDRESS",
									"source": 12
								},
								{
									"begin": 368,
									"end": 1797,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 368,
									"end": 1797,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 368,
									"end": 1797,
									"name": "PUSH",
									"source": 12,
									"value": "73"
								},
								{
									"begin": 368,
									"end": 1797,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 368,
									"end": 1797,
									"name": "MSTORE8",
									"source": 12
								},
								{
									"begin": 368,
									"end": 1797,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 368,
									"end": 1797,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 368,
									"end": 1797,
									"name": "RETURN",
									"source": 12
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212201b66a4416c032a9ba6e82c6dc9a1850b5ad267f16c2f620fcefe75f313482c5964736f6c63430007050033",
									".code": [
										{
											"begin": 368,
											"end": 1797,
											"name": "PUSHDEPLOYADDRESS",
											"source": 12
										},
										{
											"begin": 368,
											"end": 1797,
											"name": "ADDRESS",
											"source": 12
										},
										{
											"begin": 368,
											"end": 1797,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 368,
											"end": 1797,
											"name": "PUSH",
											"source": 12,
											"value": "80"
										},
										{
											"begin": 368,
											"end": 1797,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 368,
											"end": 1797,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 368,
											"end": 1797,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 368,
											"end": 1797,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 368,
											"end": 1797,
											"name": "REVERT",
											"source": 12
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.7.5+commit.eb77ed08\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"author\":\"Omnidex\",\"details\":\"Percentages are defined by default with 2 decimals of precision (100.00). The precision is indicated by PERCENTAGE_FACTOROperations are rounded half up*\",\"kind\":\"dev\",\"methods\":{},\"title\":\"PercentageMath library\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"Provides functions to perform percentage calculations\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Omnidex-incentives/utils/PercentageMath.sol\":\"PercentageMath\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/Omnidex-incentives/utils/PercentageMath.sol\":{\"keccak256\":\"0xd2fe1c41c917b187512b0398c5a3b51d8fa0864b2d7dde5aa5c196f6e523ba33\",\"license\":\"agpl-3.0\",\"urls\":[\"bzz-raw://251ae54e3634306bd51f26e6554de2ea88fb1754472e01e1371aed4b7aee5fd1\",\"dweb:/ipfs/QmYTrJNx2LmBLwecPp9mcGeXYsVd8d49hUxgp5ESMN5Wi5\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"notice": "Provides functions to perform percentage calculations",
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@aave/aave-stake/contracts/interfaces/IERC20.sol": {
				"ast": {
					"absolutePath": "@aave/aave-stake/contracts/interfaces/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							77
						]
					},
					"id": 78,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"0.7",
								".5"
							],
							"nodeType": "PragmaDirective",
							"src": "32:22:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 2,
								"nodeType": "StructuredDocumentation",
								"src": "56:133:0",
								"text": " @dev Interface of the ERC20 standard as defined in the EIP.\n From https://github.com/OpenZeppelin/openzeppelin-contracts"
							},
							"fullyImplemented": false,
							"id": 77,
							"linearizedBaseContracts": [
								77
							],
							"name": "IERC20",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 3,
										"nodeType": "StructuredDocumentation",
										"src": "211:62:0",
										"text": " @dev Returns the amount of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 8,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 4,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "296:2:0"
									},
									"returnParameters": {
										"id": 7,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 6,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 8,
												"src": "322:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 5,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "322:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "321:9:0"
									},
									"scope": 77,
									"src": "276:55:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 9,
										"nodeType": "StructuredDocumentation",
										"src": "335:68:0",
										"text": " @dev Returns the amount of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 16,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 11,
												"mutability": "mutable",
												"name": "account",
												"nodeType": "VariableDeclaration",
												"scope": 16,
												"src": "425:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 10,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "425:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "424:17:0"
									},
									"returnParameters": {
										"id": 15,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 14,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 16,
												"src": "465:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 13,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "465:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "464:9:0"
									},
									"scope": 77,
									"src": "406:68:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 17,
										"nodeType": "StructuredDocumentation",
										"src": "478:197:0",
										"text": " @dev Moves `amount` tokens from the caller's account to `recipient`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 26,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 22,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 19,
												"mutability": "mutable",
												"name": "recipient",
												"nodeType": "VariableDeclaration",
												"scope": 26,
												"src": "696:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 18,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "696:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 21,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 26,
												"src": "715:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 20,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "715:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "695:35:0"
									},
									"returnParameters": {
										"id": 25,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 24,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 26,
												"src": "749:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 23,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "749:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "748:6:0"
									},
									"scope": 77,
									"src": "678:77:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 27,
										"nodeType": "StructuredDocumentation",
										"src": "759:252:0",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 36,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 32,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 29,
												"mutability": "mutable",
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"scope": 36,
												"src": "1033:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 28,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1033:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 31,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 36,
												"src": "1048:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 30,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1048:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1032:32:0"
									},
									"returnParameters": {
										"id": 35,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 34,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 36,
												"src": "1088:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 33,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1088:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1087:9:0"
									},
									"scope": 77,
									"src": "1014:83:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 37,
										"nodeType": "StructuredDocumentation",
										"src": "1101:616:0",
										"text": " @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 46,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 42,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 39,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 46,
												"src": "1737:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 38,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1737:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 41,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 46,
												"src": "1754:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 40,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1754:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1736:33:0"
									},
									"returnParameters": {
										"id": 45,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 44,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 46,
												"src": "1788:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 43,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1788:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1787:6:0"
									},
									"scope": 77,
									"src": "1720:74:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 47,
										"nodeType": "StructuredDocumentation",
										"src": "1798:280:0",
										"text": " @dev Moves `amount` tokens from `sender` to `recipient` using the\n allowance mechanism. `amount` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 58,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 54,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 49,
												"mutability": "mutable",
												"name": "sender",
												"nodeType": "VariableDeclaration",
												"scope": 58,
												"src": "2108:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 48,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2108:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 51,
												"mutability": "mutable",
												"name": "recipient",
												"nodeType": "VariableDeclaration",
												"scope": 58,
												"src": "2128:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 50,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2128:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 53,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 58,
												"src": "2151:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 52,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2151:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2102:67:0"
									},
									"returnParameters": {
										"id": 57,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 56,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 58,
												"src": "2188:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 55,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2188:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2187:6:0"
									},
									"scope": 77,
									"src": "2081:113:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 59,
										"nodeType": "StructuredDocumentation",
										"src": "2198:148:0",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"id": 67,
									"name": "Transfer",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 66,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 61,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nodeType": "VariableDeclaration",
												"scope": 67,
												"src": "2364:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 60,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2364:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 63,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 67,
												"src": "2386:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 62,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2386:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 65,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 67,
												"src": "2406:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 64,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2406:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2363:57:0"
									},
									"src": "2349:72:0"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 68,
										"nodeType": "StructuredDocumentation",
										"src": "2425:142:0",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"id": 76,
									"name": "Approval",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 75,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 70,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "2585:21:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 69,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2585:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 72,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "2608:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 71,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2608:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 74,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "2633:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 73,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2633:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2584:63:0"
									},
									"src": "2570:78:0"
								}
							],
							"scope": 78,
							"src": "190:2460:0"
						}
					],
					"src": "32:2619:0"
				},
				"id": 0
			},
			"contracts/Omnidex-incentives/interfaces/ILendingPoolAddressesProvider.sol": {
				"ast": {
					"absolutePath": "contracts/Omnidex-incentives/interfaces/ILendingPoolAddressesProvider.sol",
					"exportedSymbols": {
						"ILendingPoolAddressesProvider": [
							228
						]
					},
					"id": 229,
					"license": "agpl-3.0",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 79,
							"literals": [
								"solidity",
								"0.7",
								".5"
							],
							"nodeType": "PragmaDirective",
							"src": "38:22:1"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 80,
								"nodeType": "StructuredDocumentation",
								"src": "64:323:1",
								"text": " @title LendingPoolAddressesProvider contract\n @dev Main registry of addresses part of or connected to the protocol, including permissioned roles\n - Acting also as factory of proxies and admin of those, so with right to change its implementations\n - Owned by the Omnidex Governance\n @author Omnidex*"
							},
							"fullyImplemented": false,
							"id": 228,
							"linearizedBaseContracts": [
								228
							],
							"name": "ILendingPoolAddressesProvider",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"id": 84,
									"name": "MarketIdSet",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 83,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 82,
												"indexed": false,
												"mutability": "mutable",
												"name": "newMarketId",
												"nodeType": "VariableDeclaration",
												"scope": 84,
												"src": "452:18:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 81,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "452:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "451:20:1"
									},
									"src": "434:38:1"
								},
								{
									"anonymous": false,
									"id": 88,
									"name": "LendingPoolUpdated",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 87,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 86,
												"indexed": true,
												"mutability": "mutable",
												"name": "newAddress",
												"nodeType": "VariableDeclaration",
												"scope": 88,
												"src": "501:26:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 85,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "501:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "500:28:1"
									},
									"src": "476:53:1"
								},
								{
									"anonymous": false,
									"id": 92,
									"name": "ConfigurationAdminUpdated",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 91,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 90,
												"indexed": true,
												"mutability": "mutable",
												"name": "newAddress",
												"nodeType": "VariableDeclaration",
												"scope": 92,
												"src": "565:26:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 89,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "565:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "564:28:1"
									},
									"src": "533:60:1"
								},
								{
									"anonymous": false,
									"id": 96,
									"name": "EmergencyAdminUpdated",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 95,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 94,
												"indexed": true,
												"mutability": "mutable",
												"name": "newAddress",
												"nodeType": "VariableDeclaration",
												"scope": 96,
												"src": "625:26:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 93,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "625:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "624:28:1"
									},
									"src": "597:56:1"
								},
								{
									"anonymous": false,
									"id": 100,
									"name": "LendingPoolConfiguratorUpdated",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 99,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 98,
												"indexed": true,
												"mutability": "mutable",
												"name": "newAddress",
												"nodeType": "VariableDeclaration",
												"scope": 100,
												"src": "694:26:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 97,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "694:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "693:28:1"
									},
									"src": "657:65:1"
								},
								{
									"anonymous": false,
									"id": 104,
									"name": "LendingPoolCollateralManagerUpdated",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 103,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 102,
												"indexed": true,
												"mutability": "mutable",
												"name": "newAddress",
												"nodeType": "VariableDeclaration",
												"scope": 104,
												"src": "768:26:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 101,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "768:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "767:28:1"
									},
									"src": "726:70:1"
								},
								{
									"anonymous": false,
									"id": 108,
									"name": "PriceOracleUpdated",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 107,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 106,
												"indexed": true,
												"mutability": "mutable",
												"name": "newAddress",
												"nodeType": "VariableDeclaration",
												"scope": 108,
												"src": "825:26:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 105,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "825:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "824:28:1"
									},
									"src": "800:53:1"
								},
								{
									"anonymous": false,
									"id": 112,
									"name": "LendingRateOracleUpdated",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 111,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 110,
												"indexed": true,
												"mutability": "mutable",
												"name": "newAddress",
												"nodeType": "VariableDeclaration",
												"scope": 112,
												"src": "888:26:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 109,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "888:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "887:28:1"
									},
									"src": "857:59:1"
								},
								{
									"anonymous": false,
									"id": 118,
									"name": "ProxyCreated",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 117,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 114,
												"indexed": false,
												"mutability": "mutable",
												"name": "id",
												"nodeType": "VariableDeclaration",
												"scope": 118,
												"src": "939:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 113,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "939:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 116,
												"indexed": true,
												"mutability": "mutable",
												"name": "newAddress",
												"nodeType": "VariableDeclaration",
												"scope": 118,
												"src": "951:26:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 115,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "951:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "938:40:1"
									},
									"src": "920:59:1"
								},
								{
									"anonymous": false,
									"id": 126,
									"name": "AddressSet",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 125,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 120,
												"indexed": false,
												"mutability": "mutable",
												"name": "id",
												"nodeType": "VariableDeclaration",
												"scope": 126,
												"src": "1000:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 119,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1000:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 122,
												"indexed": true,
												"mutability": "mutable",
												"name": "newAddress",
												"nodeType": "VariableDeclaration",
												"scope": 126,
												"src": "1012:26:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 121,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1012:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 124,
												"indexed": false,
												"mutability": "mutable",
												"name": "hasProxy",
												"nodeType": "VariableDeclaration",
												"scope": 126,
												"src": "1040:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 123,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1040:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "999:55:1"
									},
									"src": "983:72:1"
								},
								{
									"functionSelector": "568ef470",
									"id": 131,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getMarketId",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 127,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1081:2:1"
									},
									"returnParameters": {
										"id": 130,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 129,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 131,
												"src": "1107:13:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 128,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1107:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1106:15:1"
									},
									"scope": 228,
									"src": "1061:61:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "f67b1847",
									"id": 136,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setMarketId",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 134,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 133,
												"mutability": "mutable",
												"name": "marketId",
												"nodeType": "VariableDeclaration",
												"scope": 136,
												"src": "1149:24:1",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_string_calldata_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 132,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1149:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1148:26:1"
									},
									"returnParameters": {
										"id": 135,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1183:0:1"
									},
									"scope": 228,
									"src": "1128:56:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "ca446dd9",
									"id": 143,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setAddress",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 141,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 138,
												"mutability": "mutable",
												"name": "id",
												"nodeType": "VariableDeclaration",
												"scope": 143,
												"src": "1210:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 137,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1210:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 140,
												"mutability": "mutable",
												"name": "newAddress",
												"nodeType": "VariableDeclaration",
												"scope": 143,
												"src": "1222:18:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 139,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1222:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1209:32:1"
									},
									"returnParameters": {
										"id": 142,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1250:0:1"
									},
									"scope": 228,
									"src": "1190:61:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "5dcc528c",
									"id": 150,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setAddressAsProxy",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 148,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 145,
												"mutability": "mutable",
												"name": "id",
												"nodeType": "VariableDeclaration",
												"scope": 150,
												"src": "1284:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 144,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1284:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 147,
												"mutability": "mutable",
												"name": "impl",
												"nodeType": "VariableDeclaration",
												"scope": 150,
												"src": "1296:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 146,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1296:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1283:26:1"
									},
									"returnParameters": {
										"id": 149,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1318:0:1"
									},
									"scope": 228,
									"src": "1257:62:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "21f8a721",
									"id": 157,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getAddress",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 153,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 152,
												"mutability": "mutable",
												"name": "id",
												"nodeType": "VariableDeclaration",
												"scope": 157,
												"src": "1345:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 151,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1345:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1344:12:1"
									},
									"returnParameters": {
										"id": 156,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 155,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 157,
												"src": "1380:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 154,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1380:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1379:9:1"
									},
									"scope": 228,
									"src": "1325:64:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "0261bf8b",
									"id": 162,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getLendingPool",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 158,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1418:2:1"
									},
									"returnParameters": {
										"id": 161,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 160,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 162,
												"src": "1444:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 159,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1444:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1443:9:1"
									},
									"scope": 228,
									"src": "1395:58:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "5aef021f",
									"id": 167,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setLendingPoolImpl",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 165,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 164,
												"mutability": "mutable",
												"name": "pool",
												"nodeType": "VariableDeclaration",
												"scope": 167,
												"src": "1487:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 163,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1487:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1486:14:1"
									},
									"returnParameters": {
										"id": 166,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1509:0:1"
									},
									"scope": 228,
									"src": "1459:51:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "85c858b1",
									"id": 172,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getLendingPoolConfigurator",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 168,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1551:2:1"
									},
									"returnParameters": {
										"id": 171,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 170,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 172,
												"src": "1577:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 169,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1577:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1576:9:1"
									},
									"scope": 228,
									"src": "1516:70:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "c12542df",
									"id": 177,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setLendingPoolConfiguratorImpl",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 175,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 174,
												"mutability": "mutable",
												"name": "configurator",
												"nodeType": "VariableDeclaration",
												"scope": 177,
												"src": "1632:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 173,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1632:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1631:22:1"
									},
									"returnParameters": {
										"id": 176,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1662:0:1"
									},
									"scope": 228,
									"src": "1592:71:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "712d9171",
									"id": 182,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getLendingPoolCollateralManager",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 178,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1709:2:1"
									},
									"returnParameters": {
										"id": 181,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 180,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 182,
												"src": "1735:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 179,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1735:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1734:9:1"
									},
									"scope": 228,
									"src": "1669:75:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "398e5553",
									"id": 187,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setLendingPoolCollateralManager",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 185,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 184,
												"mutability": "mutable",
												"name": "manager",
												"nodeType": "VariableDeclaration",
												"scope": 187,
												"src": "1791:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 183,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1791:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1790:17:1"
									},
									"returnParameters": {
										"id": 186,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1816:0:1"
									},
									"scope": 228,
									"src": "1750:67:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "aecda378",
									"id": 192,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getPoolAdmin",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 188,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1844:2:1"
									},
									"returnParameters": {
										"id": 191,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 190,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 192,
												"src": "1870:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 189,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1870:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1869:9:1"
									},
									"scope": 228,
									"src": "1823:56:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "283d62ad",
									"id": 197,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setPoolAdmin",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 195,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 194,
												"mutability": "mutable",
												"name": "admin",
												"nodeType": "VariableDeclaration",
												"scope": 197,
												"src": "1907:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 193,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1907:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1906:15:1"
									},
									"returnParameters": {
										"id": 196,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1930:0:1"
									},
									"scope": 228,
									"src": "1885:46:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "ddcaa9ea",
									"id": 202,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getEmergencyAdmin",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 198,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1963:2:1"
									},
									"returnParameters": {
										"id": 201,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 200,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 202,
												"src": "1989:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 199,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1989:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1988:9:1"
									},
									"scope": 228,
									"src": "1937:61:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "35da3394",
									"id": 207,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setEmergencyAdmin",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 205,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 204,
												"mutability": "mutable",
												"name": "admin",
												"nodeType": "VariableDeclaration",
												"scope": 207,
												"src": "2031:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 203,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2031:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2030:15:1"
									},
									"returnParameters": {
										"id": 206,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2054:0:1"
									},
									"scope": 228,
									"src": "2004:51:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "fca513a8",
									"id": 212,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getPriceOracle",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 208,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2084:2:1"
									},
									"returnParameters": {
										"id": 211,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 210,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 212,
												"src": "2110:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 209,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2110:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2109:9:1"
									},
									"scope": 228,
									"src": "2061:58:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "530e784f",
									"id": 217,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setPriceOracle",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 215,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 214,
												"mutability": "mutable",
												"name": "priceOracle",
												"nodeType": "VariableDeclaration",
												"scope": 217,
												"src": "2149:19:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 213,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2149:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2148:21:1"
									},
									"returnParameters": {
										"id": 216,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2178:0:1"
									},
									"scope": 228,
									"src": "2125:54:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "3618abba",
									"id": 222,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getLendingRateOracle",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 218,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2214:2:1"
									},
									"returnParameters": {
										"id": 221,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 220,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 222,
												"src": "2240:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 219,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2240:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2239:9:1"
									},
									"scope": 228,
									"src": "2185:64:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "820d1274",
									"id": 227,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setLendingRateOracle",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 225,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 224,
												"mutability": "mutable",
												"name": "lendingRateOracle",
												"nodeType": "VariableDeclaration",
												"scope": 227,
												"src": "2285:25:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 223,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2285:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2284:27:1"
									},
									"returnParameters": {
										"id": 226,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2320:0:1"
									},
									"scope": 228,
									"src": "2255:66:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 229,
							"src": "389:1935:1"
						}
					],
					"src": "38:2288:1"
				},
				"id": 1
			},
			"contracts/Omnidex-incentives/interfaces/ILendingPoolConfigurator.sol": {
				"ast": {
					"absolutePath": "contracts/Omnidex-incentives/interfaces/ILendingPoolConfigurator.sol",
					"exportedSymbols": {
						"ILendingPoolConfigurator": [
							245
						]
					},
					"id": 246,
					"license": "agpl-3.0",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 230,
							"literals": [
								"solidity",
								"0.7",
								".5"
							],
							"nodeType": "PragmaDirective",
							"src": "38:22:2"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 245,
							"linearizedBaseContracts": [
								245
							],
							"name": "ILendingPoolConfigurator",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "12e3ae16",
									"id": 237,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "updateOToken",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 235,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 232,
												"mutability": "mutable",
												"name": "reserve",
												"nodeType": "VariableDeclaration",
												"scope": 237,
												"src": "126:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 231,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "126:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 234,
												"mutability": "mutable",
												"name": "implementation",
												"nodeType": "VariableDeclaration",
												"scope": 237,
												"src": "143:22:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 233,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "143:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "125:41:2"
									},
									"returnParameters": {
										"id": 236,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "175:0:2"
									},
									"scope": 245,
									"src": "104:72:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "4d978258",
									"id": 244,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "updateVariableDebtToken",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 242,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 239,
												"mutability": "mutable",
												"name": "reserve",
												"nodeType": "VariableDeclaration",
												"scope": 244,
												"src": "215:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 238,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "215:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 241,
												"mutability": "mutable",
												"name": "implementation",
												"nodeType": "VariableDeclaration",
												"scope": 244,
												"src": "232:22:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 240,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "232:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "214:41:2"
									},
									"returnParameters": {
										"id": 243,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "264:0:2"
									},
									"scope": 245,
									"src": "182:83:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 246,
							"src": "64:204:2"
						}
					],
					"src": "38:232:2"
				},
				"id": 2
			},
			"contracts/Omnidex-incentives/interfaces/ILendingPoolData.sol": {
				"ast": {
					"absolutePath": "contracts/Omnidex-incentives/interfaces/ILendingPoolData.sol",
					"exportedSymbols": {
						"DataTypes": [
							965
						],
						"ILendingPoolData": [
							259
						]
					},
					"id": 260,
					"license": "agpl-3.0",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 247,
							"literals": [
								"solidity",
								"0.7",
								".5"
							],
							"nodeType": "PragmaDirective",
							"src": "38:22:3"
						},
						{
							"id": 248,
							"literals": [
								"abicoder",
								"v2"
							],
							"nodeType": "PragmaDirective",
							"src": "62:19:3"
						},
						{
							"absolutePath": "contracts/Omnidex-incentives/utils/DataTypes.sol",
							"file": "../utils/DataTypes.sol",
							"id": 250,
							"nodeType": "ImportDirective",
							"scope": 260,
							"sourceUnit": 966,
							"src": "85:49:3",
							"symbolAliases": [
								{
									"foreign": {
										"id": 249,
										"name": "DataTypes",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"src": "93:9:3",
										"typeDescriptions": {}
									}
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 259,
							"linearizedBaseContracts": [
								259
							],
							"name": "ILendingPoolData",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 251,
										"nodeType": "StructuredDocumentation",
										"src": "170:182:3",
										"text": " @dev Returns the state and configuration of the reserve\n @param asset The address of the underlying asset of the reserve\n @return The state of the reserve*"
									},
									"functionSelector": "35ea6a75",
									"id": 258,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getReserveData",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 254,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 253,
												"mutability": "mutable",
												"name": "asset",
												"nodeType": "VariableDeclaration",
												"scope": 258,
												"src": "380:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 252,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "380:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "379:15:3"
									},
									"returnParameters": {
										"id": 257,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 256,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 258,
												"src": "418:28:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_ReserveData_$954_memory_ptr",
													"typeString": "struct DataTypes.ReserveData"
												},
												"typeName": {
													"id": 255,
													"name": "DataTypes.ReserveData",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 954,
													"src": "418:21:3",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_ReserveData_$954_storage_ptr",
														"typeString": "struct DataTypes.ReserveData"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "417:30:3"
									},
									"scope": 259,
									"src": "356:92:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 260,
							"src": "138:313:3"
						}
					],
					"src": "38:415:3"
				},
				"id": 3
			},
			"contracts/Omnidex-incentives/interfaces/IOTokenDetailed.sol": {
				"ast": {
					"absolutePath": "contracts/Omnidex-incentives/interfaces/IOTokenDetailed.sol",
					"exportedSymbols": {
						"IOTokenDetailed": [
							267
						]
					},
					"id": 268,
					"license": "agpl-3.0",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 261,
							"literals": [
								"solidity",
								"0.7",
								".5"
							],
							"nodeType": "PragmaDirective",
							"src": "38:22:4"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 267,
							"linearizedBaseContracts": [
								267
							],
							"name": "IOTokenDetailed",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "b16a19de",
									"id": 266,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "UNDERLYING_ASSET_ADDRESS",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 262,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "128:2:4"
									},
									"returnParameters": {
										"id": 265,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 264,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 266,
												"src": "154:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 263,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "154:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "153:9:4"
									},
									"scope": 267,
									"src": "95:68:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 268,
							"src": "64:102:4"
						}
					],
					"src": "38:130:4"
				},
				"id": 4
			},
			"contracts/Omnidex-incentives/interfaces/IOmnidexDistributionManager.sol": {
				"ast": {
					"absolutePath": "contracts/Omnidex-incentives/interfaces/IOmnidexDistributionManager.sol",
					"exportedSymbols": {
						"DistributionTypes": [
							499
						],
						"IOmnidexDistributionManager": [
							337
						]
					},
					"id": 338,
					"license": "agpl-3.0",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 269,
							"literals": [
								"solidity",
								"0.7",
								".5"
							],
							"nodeType": "PragmaDirective",
							"src": "38:22:5"
						},
						{
							"id": 270,
							"literals": [
								"experimental",
								"ABIEncoderV2"
							],
							"nodeType": "PragmaDirective",
							"src": "62:33:5"
						},
						{
							"absolutePath": "contracts/Omnidex-incentives/lib/DistributionTypes.sol",
							"file": "../lib/DistributionTypes.sol",
							"id": 272,
							"nodeType": "ImportDirective",
							"scope": 338,
							"sourceUnit": 500,
							"src": "99:63:5",
							"symbolAliases": [
								{
									"foreign": {
										"id": 271,
										"name": "DistributionTypes",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"src": "107:17:5",
										"typeDescriptions": {}
									}
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 337,
							"linearizedBaseContracts": [
								337
							],
							"name": "IOmnidexDistributionManager",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"id": 278,
									"name": "AssetConfigUpdated",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 277,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 274,
												"indexed": true,
												"mutability": "mutable",
												"name": "asset",
												"nodeType": "VariableDeclaration",
												"scope": 278,
												"src": "238:21:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 273,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "238:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 276,
												"indexed": false,
												"mutability": "mutable",
												"name": "emission",
												"nodeType": "VariableDeclaration",
												"scope": 278,
												"src": "261:16:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 275,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "261:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "237:41:5"
									},
									"src": "213:66:5"
								},
								{
									"anonymous": false,
									"id": 284,
									"name": "AssetIndexUpdated",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 283,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 280,
												"indexed": true,
												"mutability": "mutable",
												"name": "asset",
												"nodeType": "VariableDeclaration",
												"scope": 284,
												"src": "307:21:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 279,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "307:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 282,
												"indexed": false,
												"mutability": "mutable",
												"name": "index",
												"nodeType": "VariableDeclaration",
												"scope": 284,
												"src": "330:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 281,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "330:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "306:38:5"
									},
									"src": "283:62:5"
								},
								{
									"anonymous": false,
									"id": 292,
									"name": "UserIndexUpdated",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 291,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 286,
												"indexed": true,
												"mutability": "mutable",
												"name": "user",
												"nodeType": "VariableDeclaration",
												"scope": 292,
												"src": "372:20:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 285,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "372:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 288,
												"indexed": true,
												"mutability": "mutable",
												"name": "asset",
												"nodeType": "VariableDeclaration",
												"scope": 292,
												"src": "394:21:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 287,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "394:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 290,
												"indexed": false,
												"mutability": "mutable",
												"name": "index",
												"nodeType": "VariableDeclaration",
												"scope": 292,
												"src": "417:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 289,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "417:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "371:60:5"
									},
									"src": "349:83:5"
								},
								{
									"anonymous": false,
									"id": 296,
									"name": "DistributionEndUpdated",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 295,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 294,
												"indexed": false,
												"mutability": "mutable",
												"name": "newDistributionEnd",
												"nodeType": "VariableDeclaration",
												"scope": 296,
												"src": "465:26:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 293,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "465:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "464:28:5"
									},
									"src": "436:57:5"
								},
								{
									"documentation": {
										"id": 297,
										"nodeType": "StructuredDocumentation",
										"src": "499:110:5",
										"text": " @dev Sets the end date for the distribution\n @param distributionEnd The end date timestamp*"
									},
									"functionSelector": "39ccbdd3",
									"id": 302,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setDistributionEnd",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 300,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 299,
												"mutability": "mutable",
												"name": "distributionEnd",
												"nodeType": "VariableDeclaration",
												"scope": 302,
												"src": "641:23:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 298,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "641:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "640:25:5"
									},
									"returnParameters": {
										"id": 301,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "674:0:5"
									},
									"scope": 337,
									"src": "613:62:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 303,
										"nodeType": "StructuredDocumentation",
										"src": "681:100:5",
										"text": " @dev Gets the end date for the distribution\n @return The end of the distribution*"
									},
									"functionSelector": "cc69afec",
									"id": 308,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getDistributionEnd",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 304,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "812:2:5"
									},
									"returnParameters": {
										"id": 307,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 306,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 308,
												"src": "838:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 305,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "838:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "837:9:5"
									},
									"scope": 337,
									"src": "785:62:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 309,
										"nodeType": "StructuredDocumentation",
										"src": "853:132:5",
										"text": " @dev for backwards compatibility with the previous DistributionManager used\n @return The end of the distribution*"
									},
									"functionSelector": "919cd40f",
									"id": 314,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "DISTRIBUTION_END",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 310,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1014:2:5"
									},
									"returnParameters": {
										"id": 313,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 312,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 314,
												"src": "1039:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 311,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1039:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1038:9:5"
									},
									"scope": 337,
									"src": "989:59:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 315,
										"nodeType": "StructuredDocumentation",
										"src": "1055:208:5",
										"text": " @dev Returns the data of an user on a distribution\n @param user Address of the user\n @param asset The address of the reference asset of the distribution\n @return The new index*"
									},
									"functionSelector": "3373ee4c",
									"id": 324,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getUserAssetData",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 320,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 317,
												"mutability": "mutable",
												"name": "user",
												"nodeType": "VariableDeclaration",
												"scope": 324,
												"src": "1294:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 316,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1294:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 319,
												"mutability": "mutable",
												"name": "asset",
												"nodeType": "VariableDeclaration",
												"scope": 324,
												"src": "1308:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 318,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1308:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1293:29:5"
									},
									"returnParameters": {
										"id": 323,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 322,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 324,
												"src": "1346:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 321,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1346:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1345:9:5"
									},
									"scope": 337,
									"src": "1268:87:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 325,
										"nodeType": "StructuredDocumentation",
										"src": "1362:248:5",
										"text": " @dev Returns the configuration of the distribution for a certain asset\n @param asset The address of the reference asset of the distribution\n @return The asset index, the emission per second and the last updated timestamp*"
									},
									"functionSelector": "1652e7b7",
									"id": 336,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getAssetData",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 328,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 327,
												"mutability": "mutable",
												"name": "asset",
												"nodeType": "VariableDeclaration",
												"scope": 336,
												"src": "1637:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 326,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1637:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1636:15:5"
									},
									"returnParameters": {
										"id": 335,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 330,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 336,
												"src": "1675:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 329,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1675:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 332,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 336,
												"src": "1684:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 331,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1684:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 334,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 336,
												"src": "1693:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 333,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1693:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1674:27:5"
									},
									"scope": 337,
									"src": "1615:87:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 338,
							"src": "166:1539:5"
						}
					],
					"src": "38:1669:5"
				},
				"id": 5
			},
			"contracts/Omnidex-incentives/interfaces/IOmnidexIncentivesController.sol": {
				"ast": {
					"absolutePath": "contracts/Omnidex-incentives/interfaces/IOmnidexIncentivesController.sol",
					"exportedSymbols": {
						"IOmnidexDistributionManager": [
							337
						],
						"IOmnidexIncentivesController": [
							467
						]
					},
					"id": 468,
					"license": "agpl-3.0",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 339,
							"literals": [
								"solidity",
								"0.7",
								".5"
							],
							"nodeType": "PragmaDirective",
							"src": "38:22:6"
						},
						{
							"id": 340,
							"literals": [
								"experimental",
								"ABIEncoderV2"
							],
							"nodeType": "PragmaDirective",
							"src": "64:33:6"
						},
						{
							"absolutePath": "contracts/Omnidex-incentives/interfaces/IOmnidexDistributionManager.sol",
							"file": "../interfaces/IOmnidexDistributionManager.sol",
							"id": 342,
							"nodeType": "ImportDirective",
							"scope": 468,
							"sourceUnit": 338,
							"src": "101:90:6",
							"symbolAliases": [
								{
									"foreign": {
										"id": 341,
										"name": "IOmnidexDistributionManager",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"src": "109:27:6",
										"typeDescriptions": {}
									}
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 343,
										"name": "IOmnidexDistributionManager",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 337,
										"src": "237:27:6",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IOmnidexDistributionManager_$337",
											"typeString": "contract IOmnidexDistributionManager"
										}
									},
									"id": 344,
									"nodeType": "InheritanceSpecifier",
									"src": "237:27:6"
								}
							],
							"contractDependencies": [
								337
							],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 467,
							"linearizedBaseContracts": [
								467,
								337
							],
							"name": "IOmnidexIncentivesController",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"id": 350,
									"name": "RewardsAccrued",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 349,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 346,
												"indexed": true,
												"mutability": "mutable",
												"name": "user",
												"nodeType": "VariableDeclaration",
												"scope": 350,
												"src": "291:20:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 345,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "291:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 348,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 350,
												"src": "313:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 347,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "313:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "290:38:6"
									},
									"src": "270:59:6"
								},
								{
									"anonymous": false,
									"id": 360,
									"name": "RewardsClaimed",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 359,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 352,
												"indexed": true,
												"mutability": "mutable",
												"name": "user",
												"nodeType": "VariableDeclaration",
												"scope": 360,
												"src": "362:20:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 351,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "362:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 354,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 360,
												"src": "389:18:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 353,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "389:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 356,
												"indexed": true,
												"mutability": "mutable",
												"name": "claimer",
												"nodeType": "VariableDeclaration",
												"scope": 360,
												"src": "414:23:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 355,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "414:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 358,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 360,
												"src": "444:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 357,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "444:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "355:108:6"
									},
									"src": "335:129:6"
								},
								{
									"anonymous": false,
									"id": 366,
									"name": "ClaimerSet",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 365,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 362,
												"indexed": true,
												"mutability": "mutable",
												"name": "user",
												"nodeType": "VariableDeclaration",
												"scope": 366,
												"src": "487:20:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 361,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "487:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 364,
												"indexed": true,
												"mutability": "mutable",
												"name": "claimer",
												"nodeType": "VariableDeclaration",
												"scope": 366,
												"src": "509:23:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 363,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "509:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "486:47:6"
									},
									"src": "470:64:6"
								},
								{
									"documentation": {
										"id": 367,
										"nodeType": "StructuredDocumentation",
										"src": "540:183:6",
										"text": " @dev Whitelists an address to claim the rewards on behalf of another address\n @param user The address of the user\n @param claimer The address of the claimer"
									},
									"functionSelector": "f5cf673b",
									"id": 374,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setClaimer",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 372,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 369,
												"mutability": "mutable",
												"name": "user",
												"nodeType": "VariableDeclaration",
												"scope": 374,
												"src": "747:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 368,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "747:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 371,
												"mutability": "mutable",
												"name": "claimer",
												"nodeType": "VariableDeclaration",
												"scope": 374,
												"src": "761:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 370,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "761:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "746:31:6"
									},
									"returnParameters": {
										"id": 373,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "786:0:6"
									},
									"scope": 467,
									"src": "727:60:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 375,
										"nodeType": "StructuredDocumentation",
										"src": "793:168:6",
										"text": " @dev Returns the whitelisted claimer for a certain address (0x0 if not set)\n @param user The address of the user\n @return The claimer address"
									},
									"functionSelector": "74d945ec",
									"id": 382,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getClaimer",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 378,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 377,
												"mutability": "mutable",
												"name": "user",
												"nodeType": "VariableDeclaration",
												"scope": 382,
												"src": "985:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 376,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "985:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "984:14:6"
									},
									"returnParameters": {
										"id": 381,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 380,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 382,
												"src": "1022:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 379,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1022:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1021:9:6"
									},
									"scope": 467,
									"src": "965:66:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 383,
										"nodeType": "StructuredDocumentation",
										"src": "1037:175:6",
										"text": " @dev Configure assets for a certain rewards emission\n @param assets The assets to incentivize\n @param emissionsPerSecond The emission for each asset"
									},
									"functionSelector": "79f171b2",
									"id": 392,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "configureAssets",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 390,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 386,
												"mutability": "mutable",
												"name": "assets",
												"nodeType": "VariableDeclaration",
												"scope": 392,
												"src": "1241:25:6",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 384,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "1241:7:6",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 385,
													"nodeType": "ArrayTypeName",
													"src": "1241:9:6",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 389,
												"mutability": "mutable",
												"name": "emissionsPerSecond",
												"nodeType": "VariableDeclaration",
												"scope": 392,
												"src": "1268:37:6",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 387,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "1268:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 388,
													"nodeType": "ArrayTypeName",
													"src": "1268:9:6",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1240:66:6"
									},
									"returnParameters": {
										"id": 391,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1320:0:6"
									},
									"scope": 467,
									"src": "1216:105:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 393,
										"nodeType": "StructuredDocumentation",
										"src": "1327:308:6",
										"text": " @dev Called by the corresponding asset on any update that affects the rewards distribution\n @param asset The address of the user\n @param userBalance The balance of the user of the asset in the lending pool\n @param totalSupply The total supply of the asset in the lending pool*"
									},
									"functionSelector": "31873e2e",
									"id": 402,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "handleAction",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 400,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 395,
												"mutability": "mutable",
												"name": "asset",
												"nodeType": "VariableDeclaration",
												"scope": 402,
												"src": "1667:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 394,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1667:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 397,
												"mutability": "mutable",
												"name": "userBalance",
												"nodeType": "VariableDeclaration",
												"scope": 402,
												"src": "1687:19:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 396,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1687:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 399,
												"mutability": "mutable",
												"name": "totalSupply",
												"nodeType": "VariableDeclaration",
												"scope": 402,
												"src": "1713:19:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 398,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1713:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1660:77:6"
									},
									"returnParameters": {
										"id": 401,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1746:0:6"
									},
									"scope": 467,
									"src": "1639:108:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 403,
										"nodeType": "StructuredDocumentation",
										"src": "1753:165:6",
										"text": " @dev Returns the total of rewards of an user, already accrued + not yet accrued\n @param user The address of the user\n @return The rewards*"
									},
									"functionSelector": "8b599f26",
									"id": 413,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getRewardsBalance",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 409,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 406,
												"mutability": "mutable",
												"name": "assets",
												"nodeType": "VariableDeclaration",
												"scope": 413,
												"src": "1949:25:6",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 404,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "1949:7:6",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 405,
													"nodeType": "ArrayTypeName",
													"src": "1949:9:6",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 408,
												"mutability": "mutable",
												"name": "user",
												"nodeType": "VariableDeclaration",
												"scope": 413,
												"src": "1976:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 407,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1976:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1948:41:6"
									},
									"returnParameters": {
										"id": 412,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 411,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 413,
												"src": "2028:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 410,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2028:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2027:9:6"
									},
									"scope": 467,
									"src": "1922:115:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 414,
										"nodeType": "StructuredDocumentation",
										"src": "2043:280:6",
										"text": " @dev Claims reward for an user to the desired address, on all the assets of the lending pool, accumulating the pending rewards\n @param amount Amount of rewards to claim\n @param to Address that will be receiving the rewards\n @return Rewards claimed*"
									},
									"functionSelector": "3111e7b3",
									"id": 426,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "claimRewards",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 422,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 417,
												"mutability": "mutable",
												"name": "assets",
												"nodeType": "VariableDeclaration",
												"scope": 426,
												"src": "2355:25:6",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 415,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "2355:7:6",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 416,
													"nodeType": "ArrayTypeName",
													"src": "2355:9:6",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 419,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 426,
												"src": "2387:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 418,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2387:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 421,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 426,
												"src": "2408:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 420,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2408:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2348:75:6"
									},
									"returnParameters": {
										"id": 425,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 424,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 426,
												"src": "2442:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 423,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2442:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2441:9:6"
									},
									"scope": 467,
									"src": "2327:124:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 427,
										"nodeType": "StructuredDocumentation",
										"src": "2457:425:6",
										"text": " @dev Claims reward for an user on behalf, on all the assets of the lending pool, accumulating the pending rewards. The caller must\n be whitelisted via \"allowClaimOnBehalf\" function by the RewardsAdmin role manager\n @param amount Amount of rewards to claim\n @param user Address to check and claim rewards\n @param to Address that will be receiving the rewards\n @return Rewards claimed*"
									},
									"functionSelector": "6d34b96e",
									"id": 441,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "claimRewardsOnBehalf",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 437,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 430,
												"mutability": "mutable",
												"name": "assets",
												"nodeType": "VariableDeclaration",
												"scope": 441,
												"src": "2922:25:6",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 428,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "2922:7:6",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 429,
													"nodeType": "ArrayTypeName",
													"src": "2922:9:6",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 432,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 441,
												"src": "2954:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 431,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2954:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 434,
												"mutability": "mutable",
												"name": "user",
												"nodeType": "VariableDeclaration",
												"scope": 441,
												"src": "2975:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 433,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2975:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 436,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 441,
												"src": "2994:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 435,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2994:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2915:94:6"
									},
									"returnParameters": {
										"id": 440,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 439,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 441,
												"src": "3028:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 438,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3028:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3027:9:6"
									},
									"scope": 467,
									"src": "2886:151:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 442,
										"nodeType": "StructuredDocumentation",
										"src": "3043:201:6",
										"text": " @dev Claims reward for msg.sender, on all the assets of the lending pool, accumulating the pending rewards\n @param amount Amount of rewards to claim\n @return Rewards claimed*"
									},
									"functionSelector": "41485304",
									"id": 452,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "claimRewardsToSelf",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 448,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 445,
												"mutability": "mutable",
												"name": "assets",
												"nodeType": "VariableDeclaration",
												"scope": 452,
												"src": "3276:25:6",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 443,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "3276:7:6",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 444,
													"nodeType": "ArrayTypeName",
													"src": "3276:9:6",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 447,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 452,
												"src": "3303:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 446,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3303:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3275:43:6"
									},
									"returnParameters": {
										"id": 451,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 450,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 452,
												"src": "3337:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 449,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3337:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3336:9:6"
									},
									"scope": 467,
									"src": "3248:98:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 453,
										"nodeType": "StructuredDocumentation",
										"src": "3352:146:6",
										"text": " @dev returns the unclaimed rewards of the user\n @param user the address of the user\n @return the unclaimed user rewards"
									},
									"functionSelector": "198fa81e",
									"id": 460,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getUserUnclaimedRewards",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 456,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 455,
												"mutability": "mutable",
												"name": "user",
												"nodeType": "VariableDeclaration",
												"scope": 460,
												"src": "3535:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 454,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3535:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3534:14:6"
									},
									"returnParameters": {
										"id": 459,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 458,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 460,
												"src": "3572:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 457,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3572:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3571:9:6"
									},
									"scope": 467,
									"src": "3502:79:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 461,
										"nodeType": "StructuredDocumentation",
										"src": "3587:106:6",
										"text": " @dev for backward compatibility with previous implementation of the Incentives controller"
									},
									"functionSelector": "99248ea7",
									"id": 466,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "REWARD_TOKEN",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 462,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3718:2:6"
									},
									"returnParameters": {
										"id": 465,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 464,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 466,
												"src": "3744:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 463,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3744:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3743:9:6"
									},
									"scope": 467,
									"src": "3697:56:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 468,
							"src": "195:3561:6"
						}
					],
					"src": "38:3720:6"
				},
				"id": 6
			},
			"contracts/Omnidex-incentives/interfaces/IProposalIncentivesExecutor.sol": {
				"ast": {
					"absolutePath": "contracts/Omnidex-incentives/interfaces/IProposalIncentivesExecutor.sol",
					"exportedSymbols": {
						"IProposalIncentivesExecutor": [
							481
						]
					},
					"id": 482,
					"license": "AGPL-3.0",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 469,
							"literals": [
								"solidity",
								"0.7",
								".5"
							],
							"nodeType": "PragmaDirective",
							"src": "38:22:7"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 481,
							"linearizedBaseContracts": [
								481
							],
							"name": "IProposalIncentivesExecutor",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "8314b221",
									"id": 480,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "execute",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 478,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 473,
												"mutability": "mutable",
												"name": "oTokenImplementations",
												"nodeType": "VariableDeclaration",
												"scope": 480,
												"src": "130:39:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$6_memory_ptr",
													"typeString": "address[6]"
												},
												"typeName": {
													"baseType": {
														"id": 470,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "130:7:7",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 472,
													"length": {
														"hexValue": "36",
														"id": 471,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "138:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_6_by_1",
															"typeString": "int_const 6"
														},
														"value": "6"
													},
													"nodeType": "ArrayTypeName",
													"src": "130:10:7",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$6_storage_ptr",
														"typeString": "address[6]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 477,
												"mutability": "mutable",
												"name": "variableDebtImplementation",
												"nodeType": "VariableDeclaration",
												"scope": 480,
												"src": "176:44:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$6_memory_ptr",
													"typeString": "address[6]"
												},
												"typeName": {
													"baseType": {
														"id": 474,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "176:7:7",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 476,
													"length": {
														"hexValue": "36",
														"id": 475,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "184:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_6_by_1",
															"typeString": "int_const 6"
														},
														"value": "6"
													},
													"nodeType": "ArrayTypeName",
													"src": "176:10:7",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$6_storage_ptr",
														"typeString": "address[6]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "123:102:7"
									},
									"returnParameters": {
										"id": 479,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "234:0:7"
									},
									"scope": 481,
									"src": "107:128:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 482,
							"src": "64:174:7"
						}
					],
					"src": "38:202:7"
				},
				"id": 7
			},
			"contracts/Omnidex-incentives/lib/DistributionTypes.sol": {
				"ast": {
					"absolutePath": "contracts/Omnidex-incentives/lib/DistributionTypes.sol",
					"exportedSymbols": {
						"DistributionTypes": [
							499
						]
					},
					"id": 500,
					"license": "agpl-3.0",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 483,
							"literals": [
								"solidity",
								"0.7",
								".5"
							],
							"nodeType": "PragmaDirective",
							"src": "38:22:8"
						},
						{
							"id": 484,
							"literals": [
								"experimental",
								"ABIEncoderV2"
							],
							"nodeType": "PragmaDirective",
							"src": "62:33:8"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"fullyImplemented": true,
							"id": 499,
							"linearizedBaseContracts": [
								499
							],
							"name": "DistributionTypes",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "DistributionTypes.AssetConfigInput",
									"id": 491,
									"members": [
										{
											"constant": false,
											"id": 486,
											"mutability": "mutable",
											"name": "emissionPerSecond",
											"nodeType": "VariableDeclaration",
											"scope": 491,
											"src": "161:25:8",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint104",
												"typeString": "uint104"
											},
											"typeName": {
												"id": 485,
												"name": "uint104",
												"nodeType": "ElementaryTypeName",
												"src": "161:7:8",
												"typeDescriptions": {
													"typeIdentifier": "t_uint104",
													"typeString": "uint104"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 488,
											"mutability": "mutable",
											"name": "totalStaked",
											"nodeType": "VariableDeclaration",
											"scope": 491,
											"src": "193:19:8",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 487,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "193:7:8",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 490,
											"mutability": "mutable",
											"name": "underlyingAsset",
											"nodeType": "VariableDeclaration",
											"scope": 491,
											"src": "219:23:8",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 489,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "219:7:8",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "AssetConfigInput",
									"nodeType": "StructDefinition",
									"scope": 499,
									"src": "130:118:8",
									"visibility": "public"
								},
								{
									"canonicalName": "DistributionTypes.UserStakeInput",
									"id": 498,
									"members": [
										{
											"constant": false,
											"id": 493,
											"mutability": "mutable",
											"name": "underlyingAsset",
											"nodeType": "VariableDeclaration",
											"scope": 498,
											"src": "283:23:8",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 492,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "283:7:8",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 495,
											"mutability": "mutable",
											"name": "stakedByUser",
											"nodeType": "VariableDeclaration",
											"scope": 498,
											"src": "313:20:8",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 494,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "313:7:8",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 497,
											"mutability": "mutable",
											"name": "totalStaked",
											"nodeType": "VariableDeclaration",
											"scope": 498,
											"src": "340:19:8",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 496,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "340:7:8",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "UserStakeInput",
									"nodeType": "StructDefinition",
									"scope": 499,
									"src": "254:111:8",
									"visibility": "public"
								}
							],
							"scope": 500,
							"src": "99:269:8"
						}
					],
					"src": "38:332:8"
				},
				"id": 8
			},
			"contracts/Omnidex-incentives/lib/SafeMath.sol": {
				"ast": {
					"absolutePath": "contracts/Omnidex-incentives/lib/SafeMath.sol",
					"exportedSymbols": {
						"SafeMath": [
							589
						]
					},
					"id": 590,
					"license": "agpl-3.0",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 501,
							"literals": [
								"solidity",
								"^",
								"0.7",
								".5"
							],
							"nodeType": "PragmaDirective",
							"src": "40:23:9"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 502,
								"nodeType": "StructuredDocumentation",
								"src": "67:208:9",
								"text": "@title Optimized overflow and underflow safe math operations\n @notice Contains methods for doing math operations that revert on overflow or underflow for minimal gas cost\n inspired by uniswap V3"
							},
							"fullyImplemented": true,
							"id": 589,
							"linearizedBaseContracts": [
								589
							],
							"name": "SafeMath",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 523,
										"nodeType": "Block",
										"src": "529:44:9",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 520,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"id": 517,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 513,
																			"name": "z",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 510,
																			"src": "549:1:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 516,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 514,
																				"name": "x",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 505,
																				"src": "553:1:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"id": 515,
																				"name": "y",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 507,
																				"src": "557:1:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "553:5:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "549:9:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 518,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "548:11:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 519,
																"name": "x",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 505,
																"src": "563:1:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "548:16:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 512,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "540:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 521,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "540:25:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 522,
												"nodeType": "ExpressionStatement",
												"src": "540:25:9"
											}
										]
									},
									"documentation": {
										"id": 503,
										"nodeType": "StructuredDocumentation",
										"src": "299:155:9",
										"text": "@notice Returns x + y, reverts if sum overflows uint256\n @param x The augend\n @param y The addend\n @return z The sum of x and y"
									},
									"id": 524,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "add",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 508,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 505,
												"mutability": "mutable",
												"name": "x",
												"nodeType": "VariableDeclaration",
												"scope": 524,
												"src": "473:9:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 504,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "473:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 507,
												"mutability": "mutable",
												"name": "y",
												"nodeType": "VariableDeclaration",
												"scope": 524,
												"src": "484:9:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 506,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "484:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "472:22:9"
									},
									"returnParameters": {
										"id": 511,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 510,
												"mutability": "mutable",
												"name": "z",
												"nodeType": "VariableDeclaration",
												"scope": 524,
												"src": "518:9:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 509,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "518:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "517:11:9"
									},
									"scope": 589,
									"src": "460:113:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 545,
										"nodeType": "Block",
										"src": "812:44:9",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 542,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"id": 539,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 535,
																			"name": "z",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 532,
																			"src": "832:1:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 538,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 536,
																				"name": "x",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 527,
																				"src": "836:1:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "-",
																			"rightExpression": {
																				"id": 537,
																				"name": "y",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 529,
																				"src": "840:1:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "836:5:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "832:9:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 540,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "831:11:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"id": 541,
																"name": "x",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 527,
																"src": "846:1:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "831:16:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 534,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "823:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 543,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "823:25:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 544,
												"nodeType": "ExpressionStatement",
												"src": "823:25:9"
											}
										]
									},
									"documentation": {
										"id": 525,
										"nodeType": "StructuredDocumentation",
										"src": "581:156:9",
										"text": "@notice Returns x - y, reverts if underflows\n @param x The minuend\n @param y The subtrahend\n @return z The difference of x and y"
									},
									"id": 546,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 530,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 527,
												"mutability": "mutable",
												"name": "x",
												"nodeType": "VariableDeclaration",
												"scope": 546,
												"src": "756:9:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 526,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "756:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 529,
												"mutability": "mutable",
												"name": "y",
												"nodeType": "VariableDeclaration",
												"scope": 546,
												"src": "767:9:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 528,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "767:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "755:22:9"
									},
									"returnParameters": {
										"id": 533,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 532,
												"mutability": "mutable",
												"name": "z",
												"nodeType": "VariableDeclaration",
												"scope": 546,
												"src": "801:9:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 531,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "801:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "800:11:9"
									},
									"scope": 589,
									"src": "743:113:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 573,
										"nodeType": "Block",
										"src": "1096:58:9",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 570,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 559,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 557,
																	"name": "x",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 549,
																	"src": "1115:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 558,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1120:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "1115:6:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 569,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 567,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"components": [
																			{
																				"id": 564,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftHandSide": {
																					"id": 560,
																					"name": "z",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 554,
																					"src": "1126:1:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "Assignment",
																				"operator": "=",
																				"rightHandSide": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 563,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 561,
																						"name": "x",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 549,
																						"src": "1130:1:9",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "*",
																					"rightExpression": {
																						"id": 562,
																						"name": "y",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 551,
																						"src": "1134:1:9",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "1130:5:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "1126:9:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"id": 565,
																		"isConstant": false,
																		"isInlineArray": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "TupleExpression",
																		"src": "1125:11:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"id": 566,
																		"name": "x",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 549,
																		"src": "1139:1:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "1125:15:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"id": 568,
																	"name": "y",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 551,
																	"src": "1144:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1125:20:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "1115:30:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 556,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "1107:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 571,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1107:39:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 572,
												"nodeType": "ExpressionStatement",
												"src": "1107:39:9"
											}
										]
									},
									"documentation": {
										"id": 547,
										"nodeType": "StructuredDocumentation",
										"src": "864:157:9",
										"text": "@notice Returns x * y, reverts if overflows\n @param x The multiplicand\n @param y The multiplier\n @return z The product of x and y"
									},
									"id": 574,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mul",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 552,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 549,
												"mutability": "mutable",
												"name": "x",
												"nodeType": "VariableDeclaration",
												"scope": 574,
												"src": "1040:9:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 548,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1040:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 551,
												"mutability": "mutable",
												"name": "y",
												"nodeType": "VariableDeclaration",
												"scope": 574,
												"src": "1051:9:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 550,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1051:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1039:22:9"
									},
									"returnParameters": {
										"id": 555,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 554,
												"mutability": "mutable",
												"name": "z",
												"nodeType": "VariableDeclaration",
												"scope": 574,
												"src": "1085:9:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 553,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1085:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1084:11:9"
									},
									"scope": 589,
									"src": "1027:127:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 587,
										"nodeType": "Block",
										"src": "1228:108:9",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 585,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 583,
														"name": "x",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 576,
														"src": "1323:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"id": 584,
														"name": "y",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 578,
														"src": "1327:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1323:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 582,
												"id": 586,
												"nodeType": "Return",
												"src": "1316:12:9"
											}
										]
									},
									"id": 588,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 579,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 576,
												"mutability": "mutable",
												"name": "x",
												"nodeType": "VariableDeclaration",
												"scope": 588,
												"src": "1175:9:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 575,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1175:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 578,
												"mutability": "mutable",
												"name": "y",
												"nodeType": "VariableDeclaration",
												"scope": 588,
												"src": "1186:9:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 577,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1186:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1174:22:9"
									},
									"returnParameters": {
										"id": 582,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 581,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 588,
												"src": "1219:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 580,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1219:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1218:9:9"
									},
									"scope": 589,
									"src": "1162:174:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 590,
							"src": "275:1064:9"
						}
					],
					"src": "40:1299:9"
				},
				"id": 9
			},
			"contracts/Omnidex-incentives/proposals/ProposalIncentivesExecutor.sol": {
				"ast": {
					"absolutePath": "contracts/Omnidex-incentives/proposals/ProposalIncentivesExecutor.sol",
					"exportedSymbols": {
						"DataTypes": [
							965
						],
						"DistributionTypes": [
							499
						],
						"IERC20": [
							77
						],
						"ILendingPoolAddressesProvider": [
							228
						],
						"ILendingPoolConfigurator": [
							245
						],
						"ILendingPoolData": [
							259
						],
						"IOTokenDetailed": [
							267
						],
						"IOmnidexIncentivesController": [
							467
						],
						"IProposalIncentivesExecutor": [
							481
						],
						"PercentageMath": [
							1073
						],
						"ProposalIncentivesExecutor": [
							927
						],
						"SafeMath": [
							589
						]
					},
					"id": 928,
					"license": "AGPL-3.0",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 591,
							"literals": [
								"solidity",
								"0.7",
								".5"
							],
							"nodeType": "PragmaDirective",
							"src": "38:22:10"
						},
						{
							"id": 592,
							"literals": [
								"abicoder",
								"v2"
							],
							"nodeType": "PragmaDirective",
							"src": "62:19:10"
						},
						{
							"absolutePath": "@aave/aave-stake/contracts/interfaces/IERC20.sol",
							"file": "@aave/aave-stake/contracts/interfaces/IERC20.sol",
							"id": 594,
							"nodeType": "ImportDirective",
							"scope": 928,
							"sourceUnit": 78,
							"src": "85:72:10",
							"symbolAliases": [
								{
									"foreign": {
										"id": 593,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"src": "93:6:10",
										"typeDescriptions": {}
									}
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/Omnidex-incentives/interfaces/ILendingPoolAddressesProvider.sol",
							"file": "../interfaces/ILendingPoolAddressesProvider.sol",
							"id": 596,
							"nodeType": "ImportDirective",
							"scope": 928,
							"sourceUnit": 229,
							"src": "159:94:10",
							"symbolAliases": [
								{
									"foreign": {
										"id": 595,
										"name": "ILendingPoolAddressesProvider",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"src": "167:29:10",
										"typeDescriptions": {}
									}
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/Omnidex-incentives/interfaces/ILendingPoolConfigurator.sol",
							"file": "../interfaces/ILendingPoolConfigurator.sol",
							"id": 598,
							"nodeType": "ImportDirective",
							"scope": 928,
							"sourceUnit": 246,
							"src": "255:84:10",
							"symbolAliases": [
								{
									"foreign": {
										"id": 597,
										"name": "ILendingPoolConfigurator",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"src": "263:24:10",
										"typeDescriptions": {}
									}
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/Omnidex-incentives/interfaces/IOmnidexIncentivesController.sol",
							"file": "../interfaces/IOmnidexIncentivesController.sol",
							"id": 600,
							"nodeType": "ImportDirective",
							"scope": 928,
							"sourceUnit": 468,
							"src": "341:92:10",
							"symbolAliases": [
								{
									"foreign": {
										"id": 599,
										"name": "IOmnidexIncentivesController",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"src": "349:28:10",
										"typeDescriptions": {}
									}
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/Omnidex-incentives/interfaces/IProposalIncentivesExecutor.sol",
							"file": "../interfaces/IProposalIncentivesExecutor.sol",
							"id": 602,
							"nodeType": "ImportDirective",
							"scope": 928,
							"sourceUnit": 482,
							"src": "544:90:10",
							"symbolAliases": [
								{
									"foreign": {
										"id": 601,
										"name": "IProposalIncentivesExecutor",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"src": "552:27:10",
										"typeDescriptions": {}
									}
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/Omnidex-incentives/lib/DistributionTypes.sol",
							"file": "../lib/DistributionTypes.sol",
							"id": 604,
							"nodeType": "ImportDirective",
							"scope": 928,
							"sourceUnit": 500,
							"src": "636:63:10",
							"symbolAliases": [
								{
									"foreign": {
										"id": 603,
										"name": "DistributionTypes",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"src": "644:17:10",
										"typeDescriptions": {}
									}
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/Omnidex-incentives/utils/DataTypes.sol",
							"file": "../utils/DataTypes.sol",
							"id": 606,
							"nodeType": "ImportDirective",
							"scope": 928,
							"sourceUnit": 966,
							"src": "701:49:10",
							"symbolAliases": [
								{
									"foreign": {
										"id": 605,
										"name": "DataTypes",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"src": "709:9:10",
										"typeDescriptions": {}
									}
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/Omnidex-incentives/interfaces/ILendingPoolData.sol",
							"file": "../interfaces/ILendingPoolData.sol",
							"id": 608,
							"nodeType": "ImportDirective",
							"scope": 928,
							"sourceUnit": 260,
							"src": "752:68:10",
							"symbolAliases": [
								{
									"foreign": {
										"id": 607,
										"name": "ILendingPoolData",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"src": "760:16:10",
										"typeDescriptions": {}
									}
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/Omnidex-incentives/interfaces/IOTokenDetailed.sol",
							"file": "../interfaces/IOTokenDetailed.sol",
							"id": 610,
							"nodeType": "ImportDirective",
							"scope": 928,
							"sourceUnit": 268,
							"src": "822:66:10",
							"symbolAliases": [
								{
									"foreign": {
										"id": 609,
										"name": "IOTokenDetailed",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"src": "830:15:10",
										"typeDescriptions": {}
									}
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/Omnidex-incentives/utils/PercentageMath.sol",
							"file": "../utils/PercentageMath.sol",
							"id": 612,
							"nodeType": "ImportDirective",
							"scope": 928,
							"sourceUnit": 1074,
							"src": "890:59:10",
							"symbolAliases": [
								{
									"foreign": {
										"id": 611,
										"name": "PercentageMath",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"src": "898:14:10",
										"typeDescriptions": {}
									}
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/Omnidex-incentives/lib/SafeMath.sol",
							"file": "../lib/SafeMath.sol",
							"id": 614,
							"nodeType": "ImportDirective",
							"scope": 928,
							"sourceUnit": 590,
							"src": "951:45:10",
							"symbolAliases": [
								{
									"foreign": {
										"id": 613,
										"name": "SafeMath",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"src": "959:8:10",
										"typeDescriptions": {}
									}
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 615,
										"name": "IProposalIncentivesExecutor",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 481,
										"src": "1039:27:10",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IProposalIncentivesExecutor_$481",
											"typeString": "contract IProposalIncentivesExecutor"
										}
									},
									"id": 616,
									"nodeType": "InheritanceSpecifier",
									"src": "1039:27:10"
								}
							],
							"contractDependencies": [
								481
							],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 927,
							"linearizedBaseContracts": [
								927,
								481
							],
							"name": "ProposalIncentivesExecutor",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"id": 619,
									"libraryName": {
										"id": 617,
										"name": "SafeMath",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 589,
										"src": "1078:8:10",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_SafeMath_$589",
											"typeString": "library SafeMath"
										}
									},
									"nodeType": "UsingForDirective",
									"src": "1072:27:10",
									"typeName": {
										"id": 618,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1091:7:10",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"id": 622,
									"libraryName": {
										"id": 620,
										"name": "PercentageMath",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 1073,
										"src": "1109:14:10",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_PercentageMath_$1073",
											"typeString": "library PercentageMath"
										}
									},
									"nodeType": "UsingForDirective",
									"src": "1103:33:10",
									"typeName": {
										"id": 621,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1128:7:10",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"constant": true,
									"id": 625,
									"mutability": "constant",
									"name": "POOL_CONFIGURATOR",
									"nodeType": "VariableDeclaration",
									"scope": 927,
									"src": "1252:79:10",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 623,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "1252:7:10",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"value": {
										"hexValue": "307832463735664544413734323344384238353938386439353435343238643030663332313343463030",
										"id": 624,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1289:42:10",
										"typeDescriptions": {
											"typeIdentifier": "t_address_payable",
											"typeString": "address payable"
										},
										"value": "0x2F75fEDA7423D8B85988d9545428d00f3213CF00"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"id": 628,
									"mutability": "constant",
									"name": "ADDRESSES_PROVIDER",
									"nodeType": "VariableDeclaration",
									"scope": 927,
									"src": "1379:80:10",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 626,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "1379:7:10",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"value": {
										"hexValue": "307836343936384235394464333931323843323837443736424535303031353136316431304330384332",
										"id": 627,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1417:42:10",
										"typeDescriptions": {
											"typeIdentifier": "t_address_payable",
											"typeString": "address payable"
										},
										"value": "0x64968B59Dd39128C287D76BE50015161d10C08C2"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"id": 631,
									"mutability": "constant",
									"name": "LENDING_POOL",
									"nodeType": "VariableDeclaration",
									"scope": 927,
									"src": "1497:74:10",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 629,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "1497:7:10",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"value": {
										"hexValue": "307841394165364533323037626443436342386630383145453062344430443262346137394541393834",
										"id": 630,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1529:42:10",
										"typeDescriptions": {
											"typeIdentifier": "t_address_payable",
											"typeString": "address payable"
										},
										"value": "0xA9Ae6E3207bdCCcB8f081EE0b4D0D2b4a79EA984"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"id": 634,
									"mutability": "constant",
									"name": "INCENTIVES_CONTROLLER_PROXY_ADDRESS",
									"nodeType": "VariableDeclaration",
									"scope": 927,
									"src": "1688:97:10",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 632,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "1688:7:10",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"value": {
										"hexValue": "307838373631653838396164373937426445336262326236353631393832664431634134313138383732",
										"id": 633,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1743:42:10",
										"typeDescriptions": {
											"typeIdentifier": "t_address_payable",
											"typeString": "address payable"
										},
										"value": "0x8761e889ad797BdE3bb2b6561982fD1cA4118872"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"id": 637,
									"mutability": "constant",
									"name": "INCENTIVES_CONTROLLER_IMPL_ADDRESS",
									"nodeType": "VariableDeclaration",
									"scope": 927,
									"src": "1841:96:10",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 635,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "1841:7:10",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"value": {
										"hexValue": "307835353439323862333163346546343538363231393542303233334133443638396230383535324134",
										"id": 636,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1895:42:10",
										"typeDescriptions": {
											"typeIdentifier": "t_address_payable",
											"typeString": "address payable"
										},
										"value": "0x554928b31c4eF45862195B0233A3D689b08552A4"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"id": 640,
									"mutability": "constant",
									"name": "DISTRIBUTION_DURATION",
									"nodeType": "VariableDeclaration",
									"scope": 927,
									"src": "1979:48:10",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 638,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1979:7:10",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "37373736303030",
										"id": 639,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "2020:7:10",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_7776000_by_1",
											"typeString": "int_const 7776000"
										},
										"value": "7776000"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"id": 643,
									"mutability": "constant",
									"name": "DISTRIBUTION_AMOUNT",
									"nodeType": "VariableDeclaration",
									"scope": 927,
									"src": "2043:63:10",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 641,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "2043:7:10",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "313938303030303030303030303030303030303030303030",
										"id": 642,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "2082:24:10",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_198000000000000000000000_by_1",
											"typeString": "int_const 198000000000000000000000"
										},
										"value": "198000000000000000000000"
									},
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										480
									],
									"body": {
										"id": 925,
										"nodeType": "Block",
										"src": "2281:3754:10",
										"statements": [
											{
												"assignments": [
													656
												],
												"declarations": [
													{
														"constant": false,
														"id": 656,
														"mutability": "mutable",
														"name": "tokensCounter",
														"nodeType": "VariableDeclaration",
														"scope": 925,
														"src": "2288:21:10",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 655,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2288:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 657,
												"nodeType": "VariableDeclarationStatement",
												"src": "2288:21:10"
											},
											{
												"assignments": [
													662
												],
												"declarations": [
													{
														"constant": false,
														"id": 662,
														"mutability": "mutable",
														"name": "assets",
														"nodeType": "VariableDeclaration",
														"scope": 925,
														"src": "2318:23:10",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
															"typeString": "address[]"
														},
														"typeName": {
															"baseType": {
																"id": 660,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "2318:7:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 661,
															"nodeType": "ArrayTypeName",
															"src": "2318:9:10",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
																"typeString": "address[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 668,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "3132",
															"id": 666,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2358:2:10",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_12_by_1",
																"typeString": "int_const 12"
															},
															"value": "12"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_rational_12_by_1",
																"typeString": "int_const 12"
															}
														],
														"id": 665,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "NewExpression",
														"src": "2344:13:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_address_$dyn_memory_ptr_$",
															"typeString": "function (uint256) pure returns (address[] memory)"
														},
														"typeName": {
															"baseType": {
																"id": 663,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "2348:7:10",
																"stateMutability": "nonpayable",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 664,
															"nodeType": "ArrayTypeName",
															"src": "2348:9:10",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
																"typeString": "address[]"
															}
														}
													},
													"id": 667,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2344:17:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
														"typeString": "address[] memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2318:43:10"
											},
											{
												"assignments": [
													672
												],
												"declarations": [
													{
														"constant": false,
														"id": 672,
														"mutability": "mutable",
														"name": "reserves",
														"nodeType": "VariableDeclaration",
														"scope": 925,
														"src": "2423:34:10",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_address_payable_$6_memory_ptr",
															"typeString": "address payable[6]"
														},
														"typeName": {
															"baseType": {
																"id": 669,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "2423:15:10",
																"stateMutability": "payable",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"id": 671,
															"length": {
																"hexValue": "36",
																"id": 670,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2439:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_6_by_1",
																	"typeString": "int_const 6"
																},
																"value": "6"
															},
															"nodeType": "ArrayTypeName",
															"src": "2423:18:10",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_payable_$6_storage_ptr",
																"typeString": "address payable[6]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 680,
												"initialValue": {
													"components": [
														{
															"hexValue": "307836423137353437344538393039344334344461393862393534456564654143343935323731643046",
															"id": 673,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2478:42:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															"value": "0x6B175474E89094C44Da98b954EedeAC495271d0F"
														},
														{
															"hexValue": "307830353646643430394531643741313234424437303137343539644645613246333837623664354364",
															"id": 674,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2531:42:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															"value": "0x056Fd409E1d7A124BD7017459dFEa2F387b6d5Cd"
														},
														{
															"hexValue": "307841306238363939316336323138623336633164313944346132653945623063453336303665423438",
															"id": 675,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2584:42:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															"value": "0xA0b86991c6218b36c1d19D4a2e9Eb0cE3606eB48"
														},
														{
															"hexValue": "307864414331374639353844326565353233613232303632303639393435393743313344383331656337",
															"id": 676,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2637:42:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															"value": "0xdAC17F958D2ee523a2206206994597C13D831ec7"
														},
														{
															"hexValue": "307832323630464143354535353432613737334161343466424366654466374331393362633243353939",
															"id": 677,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2690:42:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															"value": "0x2260FAC5E5542a773Aa44fBCfeDf7C193bc2C599"
														},
														{
															"hexValue": "307843303261614133396232323346453844304130653543344632376541443930383343373536436332",
															"id": 678,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2743:42:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															"value": "0xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2"
														}
													],
													"id": 679,
													"isConstant": false,
													"isInlineArray": true,
													"isLValue": false,
													"isPure": true,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "2467:327:10",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_payable_$6_memory_ptr",
														"typeString": "address payable[6] memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2423:371:10"
											},
											{
												"assignments": [
													685
												],
												"declarations": [
													{
														"constant": false,
														"id": 685,
														"mutability": "mutable",
														"name": "emissions",
														"nodeType": "VariableDeclaration",
														"scope": 925,
														"src": "2803:26:10",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
															"typeString": "uint256[]"
														},
														"typeName": {
															"baseType": {
																"id": 683,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "2803:7:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 684,
															"nodeType": "ArrayTypeName",
															"src": "2803:9:10",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																"typeString": "uint256[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 691,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "3132",
															"id": 689,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2846:2:10",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_12_by_1",
																"typeString": "int_const 12"
															},
															"value": "12"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_rational_12_by_1",
																"typeString": "int_const 12"
															}
														],
														"id": 688,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "NewExpression",
														"src": "2832:13:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
															"typeString": "function (uint256) pure returns (uint256[] memory)"
														},
														"typeName": {
															"baseType": {
																"id": 686,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "2836:7:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 687,
															"nodeType": "ArrayTypeName",
															"src": "2836:9:10",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																"typeString": "uint256[]"
															}
														}
													},
													"id": 690,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2832:17:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
														"typeString": "uint256[] memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2803:46:10"
											},
											{
												"expression": {
													"id": 696,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 692,
															"name": "emissions",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 685,
															"src": "2858:9:10",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														"id": 694,
														"indexExpression": {
															"hexValue": "30",
															"id": 693,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2868:1:10",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2858:12:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "31373036303138353138353138353230",
														"id": 695,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2873:16:10",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1706018518518520_by_1",
															"typeString": "int_const 1706018518518520"
														},
														"value": "1706018518518520"
													},
													"src": "2858:31:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 697,
												"nodeType": "ExpressionStatement",
												"src": "2858:31:10"
											},
											{
												"expression": {
													"id": 702,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 698,
															"name": "emissions",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 685,
															"src": "2903:9:10",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														"id": 700,
														"indexExpression": {
															"hexValue": "31",
															"id": 699,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2913:1:10",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2903:12:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "31373036303138353138353138353230",
														"id": 701,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2918:16:10",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1706018518518520_by_1",
															"typeString": "int_const 1706018518518520"
														},
														"value": "1706018518518520"
													},
													"src": "2903:31:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 703,
												"nodeType": "ExpressionStatement",
												"src": "2903:31:10"
											},
											{
												"expression": {
													"id": 708,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 704,
															"name": "emissions",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 685,
															"src": "2952:9:10",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														"id": 706,
														"indexExpression": {
															"hexValue": "32",
															"id": 705,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2962:1:10",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_2_by_1",
																"typeString": "int_const 2"
															},
															"value": "2"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2952:12:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "3932393339383134383134383135",
														"id": 707,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2967:14:10",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_92939814814815_by_1",
															"typeString": "int_const 92939814814815"
														},
														"value": "92939814814815"
													},
													"src": "2952:29:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 709,
												"nodeType": "ExpressionStatement",
												"src": "2952:29:10"
											},
											{
												"expression": {
													"id": 714,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 710,
															"name": "emissions",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 685,
															"src": "2996:9:10",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														"id": 712,
														"indexExpression": {
															"hexValue": "33",
															"id": 711,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3006:1:10",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_3_by_1",
																"typeString": "int_const 3"
															},
															"value": "3"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2996:12:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "3932393339383134383134383135",
														"id": 713,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3011:14:10",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_92939814814815_by_1",
															"typeString": "int_const 92939814814815"
														},
														"value": "92939814814815"
													},
													"src": "2996:29:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 715,
												"nodeType": "ExpressionStatement",
												"src": "2996:29:10"
											},
											{
												"expression": {
													"id": 720,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 716,
															"name": "emissions",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 685,
															"src": "3044:9:10",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														"id": 718,
														"indexExpression": {
															"hexValue": "34",
															"id": 717,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3054:1:10",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_4_by_1",
																"typeString": "int_const 4"
															},
															"value": "4"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "3044:12:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "35323931323033373033373033373030",
														"id": 719,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3059:16:10",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_5291203703703700_by_1",
															"typeString": "int_const 5291203703703700"
														},
														"value": "5291203703703700"
													},
													"src": "3044:31:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 721,
												"nodeType": "ExpressionStatement",
												"src": "3044:31:10"
											},
											{
												"expression": {
													"id": 726,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 722,
															"name": "emissions",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 685,
															"src": "3090:9:10",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														"id": 724,
														"indexExpression": {
															"hexValue": "35",
															"id": 723,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3100:1:10",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_5_by_1",
																"typeString": "int_const 5"
															},
															"value": "5"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "3090:12:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "35323931323033373033373033373030",
														"id": 725,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3105:16:10",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_5291203703703700_by_1",
															"typeString": "int_const 5291203703703700"
														},
														"value": "5291203703703700"
													},
													"src": "3090:31:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 727,
												"nodeType": "ExpressionStatement",
												"src": "3090:31:10"
											},
											{
												"expression": {
													"id": 732,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 728,
															"name": "emissions",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 685,
															"src": "3140:9:10",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														"id": 730,
														"indexExpression": {
															"hexValue": "36",
															"id": 729,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3150:1:10",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_6_by_1",
																"typeString": "int_const 6"
															},
															"value": "6"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "3140:12:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "33323933363334323539323539323630",
														"id": 731,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3155:16:10",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_3293634259259260_by_1",
															"typeString": "int_const 3293634259259260"
														},
														"value": "3293634259259260"
													},
													"src": "3140:31:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 733,
												"nodeType": "ExpressionStatement",
												"src": "3140:31:10"
											},
											{
												"expression": {
													"id": 738,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 734,
															"name": "emissions",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 685,
															"src": "3186:9:10",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														"id": 736,
														"indexExpression": {
															"hexValue": "37",
															"id": 735,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3196:1:10",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_7_by_1",
																"typeString": "int_const 7"
															},
															"value": "7"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "3186:12:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "33323933363334323539323539323630",
														"id": 737,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3201:16:10",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_3293634259259260_by_1",
															"typeString": "int_const 3293634259259260"
														},
														"value": "3293634259259260"
													},
													"src": "3186:31:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 739,
												"nodeType": "ExpressionStatement",
												"src": "3186:31:10"
											},
											{
												"expression": {
													"id": 744,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 740,
															"name": "emissions",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 685,
															"src": "3236:9:10",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														"id": 742,
														"indexExpression": {
															"hexValue": "38",
															"id": 741,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3246:1:10",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_8_by_1",
																"typeString": "int_const 8"
															},
															"value": "8"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "3236:12:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "31393935363539373232323232323230",
														"id": 743,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3251:16:10",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1995659722222220_by_1",
															"typeString": "int_const 1995659722222220"
														},
														"value": "1995659722222220"
													},
													"src": "3236:31:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 745,
												"nodeType": "ExpressionStatement",
												"src": "3236:31:10"
											},
											{
												"expression": {
													"id": 750,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 746,
															"name": "emissions",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 685,
															"src": "3282:9:10",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														"id": 748,
														"indexExpression": {
															"hexValue": "39",
															"id": 747,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3292:1:10",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_9_by_1",
																"typeString": "int_const 9"
															},
															"value": "9"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "3282:12:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "313035303334373232323232323232",
														"id": 749,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3297:15:10",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_105034722222222_by_1",
															"typeString": "int_const 105034722222222"
														},
														"value": "105034722222222"
													},
													"src": "3282:30:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 751,
												"nodeType": "ExpressionStatement",
												"src": "3282:30:10"
											},
											{
												"expression": {
													"id": 756,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 752,
															"name": "emissions",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 685,
															"src": "3331:9:10",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														"id": 754,
														"indexExpression": {
															"hexValue": "3130",
															"id": 753,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3341:2:10",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_10_by_1",
																"typeString": "int_const 10"
															},
															"value": "10"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "3331:13:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "32343634393432313239363239363330",
														"id": 755,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3347:16:10",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_2464942129629630_by_1",
															"typeString": "int_const 2464942129629630"
														},
														"value": "2464942129629630"
													},
													"src": "3331:32:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 757,
												"nodeType": "ExpressionStatement",
												"src": "3331:32:10"
											},
											{
												"expression": {
													"id": 762,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 758,
															"name": "emissions",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 685,
															"src": "3377:9:10",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														"id": 760,
														"indexExpression": {
															"hexValue": "3131",
															"id": 759,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3387:2:10",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_11_by_1",
																"typeString": "int_const 11"
															},
															"value": "11"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "3377:13:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "313239373333373936323936323936",
														"id": 761,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3393:15:10",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_129733796296296_by_1",
															"typeString": "int_const 129733796296296"
														},
														"value": "129733796296296"
													},
													"src": "3377:31:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 763,
												"nodeType": "ExpressionStatement",
												"src": "3377:31:10"
											},
											{
												"assignments": [
													765
												],
												"declarations": [
													{
														"constant": false,
														"id": 765,
														"mutability": "mutable",
														"name": "poolConfigurator",
														"nodeType": "VariableDeclaration",
														"scope": 925,
														"src": "3429:41:10",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_ILendingPoolConfigurator_$245",
															"typeString": "contract ILendingPoolConfigurator"
														},
														"typeName": {
															"id": 764,
															"name": "ILendingPoolConfigurator",
															"nodeType": "UserDefinedTypeName",
															"referencedDeclaration": 245,
															"src": "3429:24:10",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_ILendingPoolConfigurator_$245",
																"typeString": "contract ILendingPoolConfigurator"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 769,
												"initialValue": {
													"arguments": [
														{
															"id": 767,
															"name": "POOL_CONFIGURATOR",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 625,
															"src": "3498:17:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 766,
														"name": "ILendingPoolConfigurator",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 245,
														"src": "3473:24:10",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_contract$_ILendingPoolConfigurator_$245_$",
															"typeString": "type(contract ILendingPoolConfigurator)"
														}
													},
													"id": 768,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3473:43:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_ILendingPoolConfigurator_$245",
														"typeString": "contract ILendingPoolConfigurator"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3429:87:10"
											},
											{
												"assignments": [
													771
												],
												"declarations": [
													{
														"constant": false,
														"id": 771,
														"mutability": "mutable",
														"name": "incentivesController",
														"nodeType": "VariableDeclaration",
														"scope": 925,
														"src": "3523:49:10",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IOmnidexIncentivesController_$467",
															"typeString": "contract IOmnidexIncentivesController"
														},
														"typeName": {
															"id": 770,
															"name": "IOmnidexIncentivesController",
															"nodeType": "UserDefinedTypeName",
															"referencedDeclaration": 467,
															"src": "3523:28:10",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IOmnidexIncentivesController_$467",
																"typeString": "contract IOmnidexIncentivesController"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 775,
												"initialValue": {
													"arguments": [
														{
															"id": 773,
															"name": "INCENTIVES_CONTROLLER_PROXY_ADDRESS",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 634,
															"src": "3611:35:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 772,
														"name": "IOmnidexIncentivesController",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 467,
														"src": "3582:28:10",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_contract$_IOmnidexIncentivesController_$467_$",
															"typeString": "type(contract IOmnidexIncentivesController)"
														}
													},
													"id": 774,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3582:65:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IOmnidexIncentivesController_$467",
														"typeString": "contract IOmnidexIncentivesController"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3523:124:10"
											},
											{
												"assignments": [
													777
												],
												"declarations": [
													{
														"constant": false,
														"id": 777,
														"mutability": "mutable",
														"name": "provider",
														"nodeType": "VariableDeclaration",
														"scope": 925,
														"src": "3793:38:10",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_ILendingPoolAddressesProvider_$228",
															"typeString": "contract ILendingPoolAddressesProvider"
														},
														"typeName": {
															"id": 776,
															"name": "ILendingPoolAddressesProvider",
															"nodeType": "UserDefinedTypeName",
															"referencedDeclaration": 228,
															"src": "3793:29:10",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_ILendingPoolAddressesProvider_$228",
																"typeString": "contract ILendingPoolAddressesProvider"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 781,
												"initialValue": {
													"arguments": [
														{
															"id": 779,
															"name": "ADDRESSES_PROVIDER",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 628,
															"src": "3864:18:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 778,
														"name": "ILendingPoolAddressesProvider",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 228,
														"src": "3834:29:10",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_contract$_ILendingPoolAddressesProvider_$228_$",
															"typeString": "type(contract ILendingPoolAddressesProvider)"
														}
													},
													"id": 780,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3834:49:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_ILendingPoolAddressesProvider_$228",
														"typeString": "contract ILendingPoolAddressesProvider"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3793:90:10"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "494e43454e54495645535f434f4e54524f4c4c4552",
																	"id": 786,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "string",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "3994:23:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_stringliteral_703c2c8634bed68d98c029c18f310e7f7ec0e5d6342c590190b3cb8b3ba54532",
																		"typeString": "literal_string \"INCENTIVES_CONTROLLER\""
																	},
																	"value": "INCENTIVES_CONTROLLER"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_stringliteral_703c2c8634bed68d98c029c18f310e7f7ec0e5d6342c590190b3cb8b3ba54532",
																		"typeString": "literal_string \"INCENTIVES_CONTROLLER\""
																	}
																],
																"id": 785,
																"name": "keccak256",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": -8,
																"src": "3984:9:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																	"typeString": "function (bytes memory) pure returns (bytes32)"
																}
															},
															"id": 787,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3984:34:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 788,
															"name": "INCENTIVES_CONTROLLER_PROXY_ADDRESS",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 634,
															"src": "4020:35:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 782,
															"name": "provider",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 777,
															"src": "3964:8:10",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_ILendingPoolAddressesProvider_$228",
																"typeString": "contract ILendingPoolAddressesProvider"
															}
														},
														"id": 784,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "setAddress",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 143,
														"src": "3964:19:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_bytes32_$_t_address_$returns$__$",
															"typeString": "function (bytes32,address) external"
														}
													},
													"id": 789,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3964:92:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 790,
												"nodeType": "ExpressionStatement",
												"src": "3964:92:10"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "494e43454e54495645535f434f4e54524f4c4c4552",
																	"id": 795,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "string",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "4172:23:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_stringliteral_703c2c8634bed68d98c029c18f310e7f7ec0e5d6342c590190b3cb8b3ba54532",
																		"typeString": "literal_string \"INCENTIVES_CONTROLLER\""
																	},
																	"value": "INCENTIVES_CONTROLLER"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_stringliteral_703c2c8634bed68d98c029c18f310e7f7ec0e5d6342c590190b3cb8b3ba54532",
																		"typeString": "literal_string \"INCENTIVES_CONTROLLER\""
																	}
																],
																"id": 794,
																"name": "keccak256",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": -8,
																"src": "4162:9:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																	"typeString": "function (bytes memory) pure returns (bytes32)"
																}
															},
															"id": 796,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4162:34:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 797,
															"name": "INCENTIVES_CONTROLLER_IMPL_ADDRESS",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 637,
															"src": "4198:34:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 791,
															"name": "provider",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 777,
															"src": "4135:8:10",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_ILendingPoolAddressesProvider_$228",
																"typeString": "contract ILendingPoolAddressesProvider"
															}
														},
														"id": 793,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "setAddressAsProxy",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 150,
														"src": "4135:26:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_bytes32_$_t_address_$returns$__$",
															"typeString": "function (bytes32,address) external"
														}
													},
													"id": 798,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4135:98:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 799,
												"nodeType": "ExpressionStatement",
												"src": "4135:98:10"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 811,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 805,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 801,
																		"name": "oTokenImplementations",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 647,
																		"src": "4258:21:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_address_$6_memory_ptr",
																			"typeString": "address[6] memory"
																		}
																	},
																	"id": 802,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "length",
																	"nodeType": "MemberAccess",
																	"src": "4258:28:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"expression": {
																		"id": 803,
																		"name": "variableDebtImplementations",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 651,
																		"src": "4290:27:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_address_$6_memory_ptr",
																			"typeString": "address[6] memory"
																		}
																	},
																	"id": 804,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "length",
																	"nodeType": "MemberAccess",
																	"src": "4290:34:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "4258:66:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&&",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 810,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 806,
																		"name": "oTokenImplementations",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 647,
																		"src": "4337:21:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_address_$6_memory_ptr",
																			"typeString": "address[6] memory"
																		}
																	},
																	"id": 807,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "length",
																	"nodeType": "MemberAccess",
																	"src": "4337:28:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"expression": {
																		"id": 808,
																		"name": "reserves",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 672,
																		"src": "4369:8:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_address_payable_$6_memory_ptr",
																			"typeString": "address payable[6] memory"
																		}
																	},
																	"id": 809,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "length",
																	"nodeType": "MemberAccess",
																	"src": "4369:15:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "4337:47:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "4258:126:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "41525241595f4c454e4754485f4d49534d41544348",
															"id": 812,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4393:23:10",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ce9a8942be13ddbfea97cc19823de3d1d97580661127eec2a746a53f877ce4a8",
																"typeString": "literal_string \"ARRAY_LENGTH_MISMATCH\""
															},
															"value": "ARRAY_LENGTH_MISMATCH"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ce9a8942be13ddbfea97cc19823de3d1d97580661127eec2a746a53f877ce4a8",
																"typeString": "literal_string \"ARRAY_LENGTH_MISMATCH\""
															}
														],
														"id": 800,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "4242:7:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 813,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4242:181:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 814,
												"nodeType": "ExpressionStatement",
												"src": "4242:181:10"
											},
											{
												"body": {
													"id": 907,
													"nodeType": "Block",
													"src": "4593:907:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		"id": 837,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"arguments": [],
																			"expression": {
																				"argumentTypes": [],
																				"expression": {
																					"arguments": [
																						{
																							"baseExpression": {
																								"id": 828,
																								"name": "oTokenImplementations",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 647,
																								"src": "4636:21:10",
																								"typeDescriptions": {
																									"typeIdentifier": "t_array$_t_address_$6_memory_ptr",
																									"typeString": "address[6] memory"
																								}
																							},
																							"id": 830,
																							"indexExpression": {
																								"id": 829,
																								"name": "x",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 816,
																								"src": "4658:1:10",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"isConstant": false,
																							"isLValue": true,
																							"isPure": false,
																							"lValueRequested": false,
																							"nodeType": "IndexAccess",
																							"src": "4636:24:10",
																							"typeDescriptions": {
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						],
																						"id": 827,
																						"name": "IOTokenDetailed",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 267,
																						"src": "4620:15:10",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_contract$_IOTokenDetailed_$267_$",
																							"typeString": "type(contract IOTokenDetailed)"
																						}
																					},
																					"id": 831,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "typeConversion",
																					"lValueRequested": false,
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "4620:41:10",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IOTokenDetailed_$267",
																						"typeString": "contract IOTokenDetailed"
																					}
																				},
																				"id": 832,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "UNDERLYING_ASSET_ADDRESS",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 266,
																				"src": "4620:66:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
																					"typeString": "function () view external returns (address)"
																				}
																			},
																			"id": 833,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "4620:68:10",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"baseExpression": {
																				"id": 834,
																				"name": "reserves",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 672,
																				"src": "4692:8:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_array$_t_address_payable_$6_memory_ptr",
																					"typeString": "address payable[6] memory"
																				}
																			},
																			"id": 836,
																			"indexExpression": {
																				"id": 835,
																				"name": "x",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 816,
																				"src": "4701:1:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "4692:11:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address_payable",
																				"typeString": "address payable"
																			}
																		},
																		"src": "4620:83:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"hexValue": "4f546f6b656e20756e6465726c79696e6720646f6573206e6f74206d61746368",
																		"id": 838,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "4714:34:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_7e0d09ab0eef83e12567d0089eb5a67e6bf6f54ff1ac5ae84102c70af2eb7620",
																			"typeString": "literal_string \"OToken underlying does not match\""
																		},
																		"value": "OToken underlying does not match"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_7e0d09ab0eef83e12567d0089eb5a67e6bf6f54ff1ac5ae84102c70af2eb7620",
																			"typeString": "literal_string \"OToken underlying does not match\""
																		}
																	],
																	"id": 826,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		-18,
																		-18
																	],
																	"referencedDeclaration": -18,
																	"src": "4602:7:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 839,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4602:155:10",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 840,
															"nodeType": "ExpressionStatement",
															"src": "4602:155:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		"id": 852,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"arguments": [],
																			"expression": {
																				"argumentTypes": [],
																				"expression": {
																					"arguments": [
																						{
																							"baseExpression": {
																								"id": 843,
																								"name": "variableDebtImplementations",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 651,
																								"src": "4800:27:10",
																								"typeDescriptions": {
																									"typeIdentifier": "t_array$_t_address_$6_memory_ptr",
																									"typeString": "address[6] memory"
																								}
																							},
																							"id": 845,
																							"indexExpression": {
																								"id": 844,
																								"name": "x",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 816,
																								"src": "4828:1:10",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"isConstant": false,
																							"isLValue": true,
																							"isPure": false,
																							"lValueRequested": false,
																							"nodeType": "IndexAccess",
																							"src": "4800:30:10",
																							"typeDescriptions": {
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						],
																						"id": 842,
																						"name": "IOTokenDetailed",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 267,
																						"src": "4784:15:10",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_contract$_IOTokenDetailed_$267_$",
																							"typeString": "type(contract IOTokenDetailed)"
																						}
																					},
																					"id": 846,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "typeConversion",
																					"lValueRequested": false,
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "4784:47:10",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IOTokenDetailed_$267",
																						"typeString": "contract IOTokenDetailed"
																					}
																				},
																				"id": 847,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "UNDERLYING_ASSET_ADDRESS",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 266,
																				"src": "4784:72:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
																					"typeString": "function () view external returns (address)"
																				}
																			},
																			"id": 848,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "4784:74:10",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"baseExpression": {
																				"id": 849,
																				"name": "reserves",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 672,
																				"src": "4862:8:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_array$_t_address_payable_$6_memory_ptr",
																					"typeString": "address payable[6] memory"
																				}
																			},
																			"id": 851,
																			"indexExpression": {
																				"id": 850,
																				"name": "x",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 816,
																				"src": "4871:1:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "4862:11:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address_payable",
																				"typeString": "address payable"
																			}
																		},
																		"src": "4784:89:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"hexValue": "4465627420546f6b656e20756e6465726c79696e6720646f6573206e6f74206d61746368",
																		"id": 853,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "4884:38:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_5ce69aa63fe325b0d8ad931e8e7cb88e13adbf6c085126f66e1689dc1383b3de",
																			"typeString": "literal_string \"Debt Token underlying does not match\""
																		},
																		"value": "Debt Token underlying does not match"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_5ce69aa63fe325b0d8ad931e8e7cb88e13adbf6c085126f66e1689dc1383b3de",
																			"typeString": "literal_string \"Debt Token underlying does not match\""
																		}
																	],
																	"id": 841,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		-18,
																		-18
																	],
																	"referencedDeclaration": -18,
																	"src": "4766:7:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 854,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4766:165:10",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 855,
															"nodeType": "ExpressionStatement",
															"src": "4766:165:10"
														},
														{
															"assignments": [
																859
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 859,
																	"mutability": "mutable",
																	"name": "reserveData",
																	"nodeType": "VariableDeclaration",
																	"scope": 907,
																	"src": "4940:40:10",
																	"stateVariable": false,
																	"storageLocation": "memory",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_ReserveData_$954_memory_ptr",
																		"typeString": "struct DataTypes.ReserveData"
																	},
																	"typeName": {
																		"id": 858,
																		"name": "DataTypes.ReserveData",
																		"nodeType": "UserDefinedTypeName",
																		"referencedDeclaration": 954,
																		"src": "4940:21:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_ReserveData_$954_storage_ptr",
																			"typeString": "struct DataTypes.ReserveData"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 868,
															"initialValue": {
																"arguments": [
																	{
																		"baseExpression": {
																			"id": 864,
																			"name": "reserves",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 672,
																			"src": "5038:8:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_array$_t_address_payable_$6_memory_ptr",
																				"typeString": "address payable[6] memory"
																			}
																		},
																		"id": 866,
																		"indexExpression": {
																			"id": 865,
																			"name": "x",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 816,
																			"src": "5047:1:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "5038:11:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address_payable",
																			"typeString": "address payable"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address_payable",
																			"typeString": "address payable"
																		}
																	],
																	"expression": {
																		"arguments": [
																			{
																				"id": 861,
																				"name": "LENDING_POOL",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 631,
																				"src": "5009:12:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 860,
																			"name": "ILendingPoolData",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 259,
																			"src": "4992:16:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_ILendingPoolData_$259_$",
																				"typeString": "type(contract ILendingPoolData)"
																			}
																		},
																		"id": 862,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "4992:30:10",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_ILendingPoolData_$259",
																			"typeString": "contract ILendingPoolData"
																		}
																	},
																	"id": 863,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "getReserveData",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 258,
																	"src": "4992:45:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_struct$_ReserveData_$954_memory_ptr_$",
																		"typeString": "function (address) view external returns (struct DataTypes.ReserveData memory)"
																	}
																},
																"id": 867,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4992:58:10",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_ReserveData_$954_memory_ptr",
																	"typeString": "struct DataTypes.ReserveData memory"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "4940:110:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"baseExpression": {
																			"id": 872,
																			"name": "reserves",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 672,
																			"src": "5120:8:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_array$_t_address_payable_$6_memory_ptr",
																				"typeString": "address payable[6] memory"
																			}
																		},
																		"id": 874,
																		"indexExpression": {
																			"id": 873,
																			"name": "x",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 816,
																			"src": "5129:1:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "5120:11:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address_payable",
																			"typeString": "address payable"
																		}
																	},
																	{
																		"baseExpression": {
																			"id": 875,
																			"name": "oTokenImplementations",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 647,
																			"src": "5133:21:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_array$_t_address_$6_memory_ptr",
																				"typeString": "address[6] memory"
																			}
																		},
																		"id": 877,
																		"indexExpression": {
																			"id": 876,
																			"name": "x",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 816,
																			"src": "5155:1:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "5133:24:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address_payable",
																			"typeString": "address payable"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"expression": {
																		"id": 869,
																		"name": "poolConfigurator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 765,
																		"src": "5090:16:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_ILendingPoolConfigurator_$245",
																			"typeString": "contract ILendingPoolConfigurator"
																		}
																	},
																	"id": 871,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "updateOToken",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 237,
																	"src": "5090:29:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$returns$__$",
																		"typeString": "function (address,address) external"
																	}
																},
																"id": 878,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5090:68:10",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 879,
															"nodeType": "ExpressionStatement",
															"src": "5090:68:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"baseExpression": {
																			"id": 883,
																			"name": "reserves",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 672,
																			"src": "5246:8:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_array$_t_address_payable_$6_memory_ptr",
																				"typeString": "address payable[6] memory"
																			}
																		},
																		"id": 885,
																		"indexExpression": {
																			"id": 884,
																			"name": "x",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 816,
																			"src": "5255:1:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "5246:11:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address_payable",
																			"typeString": "address payable"
																		}
																	},
																	{
																		"baseExpression": {
																			"id": 886,
																			"name": "variableDebtImplementations",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 651,
																			"src": "5259:27:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_array$_t_address_$6_memory_ptr",
																				"typeString": "address[6] memory"
																			}
																		},
																		"id": 888,
																		"indexExpression": {
																			"id": 887,
																			"name": "x",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 816,
																			"src": "5287:1:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "5259:30:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address_payable",
																			"typeString": "address payable"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"expression": {
																		"id": 880,
																		"name": "poolConfigurator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 765,
																		"src": "5205:16:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_ILendingPoolConfigurator_$245",
																			"typeString": "contract ILendingPoolConfigurator"
																		}
																	},
																	"id": 882,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "updateVariableDebtToken",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 244,
																	"src": "5205:40:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$returns$__$",
																		"typeString": "function (address,address) external"
																	}
																},
																"id": 889,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5205:85:10",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 890,
															"nodeType": "ExpressionStatement",
															"src": "5205:85:10"
														},
														{
															"expression": {
																"id": 897,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 891,
																		"name": "assets",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 662,
																		"src": "5301:6:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																			"typeString": "address[] memory"
																		}
																	},
																	"id": 894,
																	"indexExpression": {
																		"id": 893,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "UnaryOperation",
																		"operator": "++",
																		"prefix": false,
																		"src": "5308:15:10",
																		"subExpression": {
																			"id": 892,
																			"name": "tokensCounter",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 656,
																			"src": "5308:13:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "5301:23:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"expression": {
																		"id": 895,
																		"name": "reserveData",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 859,
																		"src": "5327:11:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_ReserveData_$954_memory_ptr",
																			"typeString": "struct DataTypes.ReserveData memory"
																		}
																	},
																	"id": 896,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "oTokenAddress",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 945,
																	"src": "5327:25:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "5301:51:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 898,
															"nodeType": "ExpressionStatement",
															"src": "5301:51:10"
														},
														{
															"expression": {
																"id": 905,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 899,
																		"name": "assets",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 662,
																		"src": "5428:6:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																			"typeString": "address[] memory"
																		}
																	},
																	"id": 902,
																	"indexExpression": {
																		"id": 901,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "UnaryOperation",
																		"operator": "++",
																		"prefix": false,
																		"src": "5435:15:10",
																		"subExpression": {
																			"id": 900,
																			"name": "tokensCounter",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 656,
																			"src": "5435:13:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "5428:23:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"expression": {
																		"id": 903,
																		"name": "reserveData",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 859,
																		"src": "5454:11:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_ReserveData_$954_memory_ptr",
																			"typeString": "struct DataTypes.ReserveData memory"
																		}
																	},
																	"id": 904,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "variableDebtTokenAddress",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 949,
																	"src": "5454:36:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "5428:62:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 906,
															"nodeType": "ExpressionStatement",
															"src": "5428:62:10"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 822,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 819,
														"name": "x",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 816,
														"src": "4567:1:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"id": 820,
															"name": "reserves",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 672,
															"src": "4571:8:10",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_payable_$6_memory_ptr",
																"typeString": "address payable[6] memory"
															}
														},
														"id": 821,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "4571:15:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4567:19:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 908,
												"initializationExpression": {
													"assignments": [
														816
													],
													"declarations": [
														{
															"constant": false,
															"id": 816,
															"mutability": "mutable",
															"name": "x",
															"nodeType": "VariableDeclaration",
															"scope": 908,
															"src": "4552:9:10",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 815,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "4552:7:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 818,
													"initialValue": {
														"hexValue": "30",
														"id": 817,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4564:1:10",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "4552:13:10"
												},
												"loopExpression": {
													"expression": {
														"id": 824,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "4588:3:10",
														"subExpression": {
															"id": 823,
															"name": "x",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 816,
															"src": "4588:1:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 825,
													"nodeType": "ExpressionStatement",
													"src": "4588:3:10"
												},
												"nodeType": "ForStatement",
												"src": "4547:953:10"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 912,
															"name": "assets",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 662,
															"src": "5875:6:10",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																"typeString": "address[] memory"
															}
														},
														{
															"id": 913,
															"name": "emissions",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 685,
															"src": "5883:9:10",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																"typeString": "address[] memory"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														],
														"expression": {
															"id": 909,
															"name": "incentivesController",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 771,
															"src": "5838:20:10",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IOmnidexIncentivesController_$467",
																"typeString": "contract IOmnidexIncentivesController"
															}
														},
														"id": 911,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "configureAssets",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 392,
														"src": "5838:36:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_array$_t_address_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$returns$__$",
															"typeString": "function (address[] memory,uint256[] memory) external"
														}
													},
													"id": 914,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5838:55:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 915,
												"nodeType": "ExpressionStatement",
												"src": "5838:55:10"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 922,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 919,
																	"name": "block",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": -4,
																	"src": "5989:5:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_block",
																		"typeString": "block"
																	}
																},
																"id": 920,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "timestamp",
																"nodeType": "MemberAccess",
																"src": "5989:15:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"id": 921,
																"name": "DISTRIBUTION_DURATION",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 640,
																"src": "6007:21:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5989:39:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 916,
															"name": "incentivesController",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 771,
															"src": "5949:20:10",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IOmnidexIncentivesController_$467",
																"typeString": "contract IOmnidexIncentivesController"
															}
														},
														"id": 918,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "setDistributionEnd",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 302,
														"src": "5949:39:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256) external"
														}
													},
													"id": 923,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5949:80:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 924,
												"nodeType": "ExpressionStatement",
												"src": "5949:80:10"
											}
										]
									},
									"functionSelector": "8314b221",
									"id": 926,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "execute",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 653,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2272:8:10"
									},
									"parameters": {
										"id": 652,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 647,
												"mutability": "mutable",
												"name": "oTokenImplementations",
												"nodeType": "VariableDeclaration",
												"scope": 926,
												"src": "2166:39:10",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$6_memory_ptr",
													"typeString": "address[6]"
												},
												"typeName": {
													"baseType": {
														"id": 644,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "2166:7:10",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 646,
													"length": {
														"hexValue": "36",
														"id": 645,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2174:1:10",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_6_by_1",
															"typeString": "int_const 6"
														},
														"value": "6"
													},
													"nodeType": "ArrayTypeName",
													"src": "2166:10:10",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$6_storage_ptr",
														"typeString": "address[6]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 651,
												"mutability": "mutable",
												"name": "variableDebtImplementations",
												"nodeType": "VariableDeclaration",
												"scope": 926,
												"src": "2212:45:10",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$6_memory_ptr",
													"typeString": "address[6]"
												},
												"typeName": {
													"baseType": {
														"id": 648,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "2212:7:10",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 650,
													"length": {
														"hexValue": "36",
														"id": 649,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2220:1:10",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_6_by_1",
															"typeString": "int_const 6"
														},
														"value": "6"
													},
													"nodeType": "ArrayTypeName",
													"src": "2212:10:10",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$6_storage_ptr",
														"typeString": "address[6]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2159:103:10"
									},
									"returnParameters": {
										"id": 654,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2281:0:10"
									},
									"scope": 927,
									"src": "2143:3892:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 928,
							"src": "1000:5038:10"
						}
					],
					"src": "38:6006:10"
				},
				"id": 10
			},
			"contracts/Omnidex-incentives/utils/DataTypes.sol": {
				"ast": {
					"absolutePath": "contracts/Omnidex-incentives/utils/DataTypes.sol",
					"exportedSymbols": {
						"DataTypes": [
							965
						]
					},
					"id": 966,
					"license": "agpl-3.0",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 929,
							"literals": [
								"solidity",
								"0.7",
								".5"
							],
							"nodeType": "PragmaDirective",
							"src": "38:22:11"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"fullyImplemented": true,
							"id": 965,
							"linearizedBaseContracts": [
								965
							],
							"name": "DataTypes",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "DataTypes.ReserveData",
									"id": 954,
									"members": [
										{
											"constant": false,
											"id": 931,
											"mutability": "mutable",
											"name": "configuration",
											"nodeType": "VariableDeclaration",
											"scope": 954,
											"src": "257:37:11",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_ReserveConfigurationMap_$957_storage_ptr",
												"typeString": "struct DataTypes.ReserveConfigurationMap"
											},
											"typeName": {
												"id": 930,
												"name": "ReserveConfigurationMap",
												"nodeType": "UserDefinedTypeName",
												"referencedDeclaration": 957,
												"src": "257:23:11",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_ReserveConfigurationMap_$957_storage_ptr",
													"typeString": "struct DataTypes.ReserveConfigurationMap"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 933,
											"mutability": "mutable",
											"name": "liquidityIndex",
											"nodeType": "VariableDeclaration",
											"scope": 954,
											"src": "346:22:11",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint128",
												"typeString": "uint128"
											},
											"typeName": {
												"id": 932,
												"name": "uint128",
												"nodeType": "ElementaryTypeName",
												"src": "346:7:11",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 935,
											"mutability": "mutable",
											"name": "variableBorrowIndex",
											"nodeType": "VariableDeclaration",
											"scope": 954,
											"src": "422:27:11",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint128",
												"typeString": "uint128"
											},
											"typeName": {
												"id": 934,
												"name": "uint128",
												"nodeType": "ElementaryTypeName",
												"src": "422:7:11",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 937,
											"mutability": "mutable",
											"name": "currentLiquidityRate",
											"nodeType": "VariableDeclaration",
											"scope": 954,
											"src": "505:28:11",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint128",
												"typeString": "uint128"
											},
											"typeName": {
												"id": 936,
												"name": "uint128",
												"nodeType": "ElementaryTypeName",
												"src": "505:7:11",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 939,
											"mutability": "mutable",
											"name": "currentVariableBorrowRate",
											"nodeType": "VariableDeclaration",
											"scope": 954,
											"src": "598:33:11",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint128",
												"typeString": "uint128"
											},
											"typeName": {
												"id": 938,
												"name": "uint128",
												"nodeType": "ElementaryTypeName",
												"src": "598:7:11",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 941,
											"mutability": "mutable",
											"name": "currentStableBorrowRate",
											"nodeType": "VariableDeclaration",
											"scope": 954,
											"src": "694:31:11",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint128",
												"typeString": "uint128"
											},
											"typeName": {
												"id": 940,
												"name": "uint128",
												"nodeType": "ElementaryTypeName",
												"src": "694:7:11",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 943,
											"mutability": "mutable",
											"name": "lastUpdateTimestamp",
											"nodeType": "VariableDeclaration",
											"scope": 954,
											"src": "732:26:11",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint40",
												"typeString": "uint40"
											},
											"typeName": {
												"id": 942,
												"name": "uint40",
												"nodeType": "ElementaryTypeName",
												"src": "732:6:11",
												"typeDescriptions": {
													"typeIdentifier": "t_uint40",
													"typeString": "uint40"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 945,
											"mutability": "mutable",
											"name": "oTokenAddress",
											"nodeType": "VariableDeclaration",
											"scope": 954,
											"src": "789:21:11",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 944,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "789:7:11",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 947,
											"mutability": "mutable",
											"name": "stableDebtTokenAddress",
											"nodeType": "VariableDeclaration",
											"scope": 954,
											"src": "817:30:11",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 946,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "817:7:11",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 949,
											"mutability": "mutable",
											"name": "variableDebtTokenAddress",
											"nodeType": "VariableDeclaration",
											"scope": 954,
											"src": "854:32:11",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 948,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "854:7:11",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 951,
											"mutability": "mutable",
											"name": "interestRateStrategyAddress",
											"nodeType": "VariableDeclaration",
											"scope": 954,
											"src": "938:35:11",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 950,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "938:7:11",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 953,
											"mutability": "mutable",
											"name": "id",
											"nodeType": "VariableDeclaration",
											"scope": 954,
											"src": "1069:8:11",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint8",
												"typeString": "uint8"
											},
											"typeName": {
												"id": 952,
												"name": "uint8",
												"nodeType": "ElementaryTypeName",
												"src": "1069:5:11",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "ReserveData",
									"nodeType": "StructDefinition",
									"scope": 965,
									"src": "191:892:11",
									"visibility": "public"
								},
								{
									"canonicalName": "DataTypes.ReserveConfigurationMap",
									"id": 957,
									"members": [
										{
											"constant": false,
											"id": 956,
											"mutability": "mutable",
											"name": "data",
											"nodeType": "VariableDeclaration",
											"scope": 957,
											"src": "1444:12:11",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 955,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1444:7:11",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "ReserveConfigurationMap",
									"nodeType": "StructDefinition",
									"scope": 965,
									"src": "1089:373:11",
									"visibility": "public"
								},
								{
									"canonicalName": "DataTypes.UserConfigurationMap",
									"id": 960,
									"members": [
										{
											"constant": false,
											"id": 959,
											"mutability": "mutable",
											"name": "data",
											"nodeType": "VariableDeclaration",
											"scope": 960,
											"src": "1503:12:11",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 958,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1503:7:11",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "UserConfigurationMap",
									"nodeType": "StructDefinition",
									"scope": 965,
									"src": "1468:53:11",
									"visibility": "public"
								},
								{
									"canonicalName": "DataTypes.InterestRateMode",
									"id": 964,
									"members": [
										{
											"id": 961,
											"name": "NONE",
											"nodeType": "EnumValue",
											"src": "1550:4:11"
										},
										{
											"id": 962,
											"name": "STABLE",
											"nodeType": "EnumValue",
											"src": "1556:6:11"
										},
										{
											"id": 963,
											"name": "VARIABLE",
											"nodeType": "EnumValue",
											"src": "1564:8:11"
										}
									],
									"name": "InterestRateMode",
									"nodeType": "EnumDefinition",
									"src": "1527:46:11"
								}
							],
							"scope": 966,
							"src": "64:1512:11"
						}
					],
					"src": "38:1540:11"
				},
				"id": 11
			},
			"contracts/Omnidex-incentives/utils/PercentageMath.sol": {
				"ast": {
					"absolutePath": "contracts/Omnidex-incentives/utils/PercentageMath.sol",
					"exportedSymbols": {
						"PercentageMath": [
							1073
						]
					},
					"id": 1074,
					"license": "agpl-3.0",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 967,
							"literals": [
								"solidity",
								"0.7",
								".5"
							],
							"nodeType": "PragmaDirective",
							"src": "38:22:12"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 968,
								"nodeType": "StructuredDocumentation",
								"src": "64:300:12",
								"text": " @title PercentageMath library\n @author Omnidex\n @notice Provides functions to perform percentage calculations\n @dev Percentages are defined by default with 2 decimals of precision (100.00). The precision is indicated by PERCENTAGE_FACTOR\n @dev Operations are rounded half up*"
							},
							"fullyImplemented": true,
							"id": 1073,
							"linearizedBaseContracts": [
								1073
							],
							"name": "PercentageMath",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"id": 971,
									"mutability": "constant",
									"name": "PERCENTAGE_FACTOR",
									"nodeType": "VariableDeclaration",
									"scope": 1073,
									"src": "396:40:12",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 969,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "396:7:12",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "316534",
										"id": 970,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "433:3:12",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_10000_by_1",
											"typeString": "int_const 10000"
										},
										"value": "1e4"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"id": 976,
									"mutability": "constant",
									"name": "HALF_PERCENT",
									"nodeType": "VariableDeclaration",
									"scope": 1073,
									"src": "472:53:12",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 972,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "472:7:12",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"commonType": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										},
										"id": 975,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"lValueRequested": false,
										"leftExpression": {
											"id": 973,
											"name": "PERCENTAGE_FACTOR",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 971,
											"src": "504:17:12",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "BinaryOperation",
										"operator": "/",
										"rightExpression": {
											"hexValue": "32",
											"id": 974,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "524:1:12",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_2_by_1",
												"typeString": "int_const 2"
											},
											"value": "2"
										},
										"src": "504:21:12",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1022,
										"nodeType": "Block",
										"src": "865:270:12",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 992,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 988,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 986,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 979,
															"src": "876:5:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "30",
															"id": 987,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "885:1:12",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "876:10:12",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 991,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 989,
															"name": "percentage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 981,
															"src": "890:10:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "30",
															"id": 990,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "904:1:12",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "890:15:12",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "876:29:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 996,
												"nodeType": "IfStatement",
												"src": "872:60:12",
												"trueBody": {
													"id": 995,
													"nodeType": "Block",
													"src": "907:25:12",
													"statements": [
														{
															"expression": {
																"hexValue": "30",
																"id": 993,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "923:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"functionReturnParameters": 985,
															"id": 994,
															"nodeType": "Return",
															"src": "916:8:12"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1009,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 998,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 979,
																"src": "956:5:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1008,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1005,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"expression": {
																					"arguments": [
																						{
																							"id": 1001,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"lValueRequested": false,
																							"nodeType": "ElementaryTypeNameExpression",
																							"src": "971:7:12",
																							"typeDescriptions": {
																								"typeIdentifier": "t_type$_t_uint256_$",
																								"typeString": "type(uint256)"
																							},
																							"typeName": {
																								"id": 1000,
																								"name": "uint256",
																								"nodeType": "ElementaryTypeName",
																								"src": "971:7:12",
																								"typeDescriptions": {}
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_type$_t_uint256_$",
																								"typeString": "type(uint256)"
																							}
																						],
																						"id": 999,
																						"name": "type",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": -27,
																						"src": "966:4:12",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																							"typeString": "function () pure"
																						}
																					},
																					"id": 1002,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "966:13:12",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_magic_meta_type_t_uint256",
																						"typeString": "type(uint256)"
																					}
																				},
																				"id": 1003,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"memberName": "max",
																				"nodeType": "MemberAccess",
																				"src": "966:17:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "-",
																			"rightExpression": {
																				"id": 1004,
																				"name": "HALF_PERCENT",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 976,
																				"src": "986:12:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "966:32:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 1006,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "965:34:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"id": 1007,
																	"name": "percentage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 981,
																	"src": "1002:10:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "965:47:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "956:56:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4d4154485f4d554c5449504c49434154494f4e5f4f564552464c4f57",
															"id": 1010,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1021:30:12",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_6b96bc99e56604df6600e4ce66f7e91bdc3417f453200fce123d801c60b50ff8",
																"typeString": "literal_string \"MATH_MULTIPLICATION_OVERFLOW\""
															},
															"value": "MATH_MULTIPLICATION_OVERFLOW"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_6b96bc99e56604df6600e4ce66f7e91bdc3417f453200fce123d801c60b50ff8",
																"typeString": "literal_string \"MATH_MULTIPLICATION_OVERFLOW\""
															}
														],
														"id": 997,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "940:7:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1011,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "940:118:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1012,
												"nodeType": "ExpressionStatement",
												"src": "940:118:12"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1020,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1017,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1015,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1013,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 979,
																		"src": "1075:5:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 1014,
																		"name": "percentage",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 981,
																		"src": "1083:10:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "1075:18:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "+",
																"rightExpression": {
																	"id": 1016,
																	"name": "HALF_PERCENT",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 976,
																	"src": "1096:12:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1075:33:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 1018,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "1074:35:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"id": 1019,
														"name": "PERCENTAGE_FACTOR",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 971,
														"src": "1112:17:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1074:55:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 985,
												"id": 1021,
												"nodeType": "Return",
												"src": "1067:62:12"
											}
										]
									},
									"documentation": {
										"id": 977,
										"nodeType": "StructuredDocumentation",
										"src": "532:242:12",
										"text": " @dev Executes a percentage multiplication\n @param value The value of which the percentage needs to be calculated\n @param percentage The percentage of the value to be calculated\n @return The percentage of value*"
									},
									"id": 1023,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "percentMul",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 982,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 979,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 1023,
												"src": "798:13:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 978,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "798:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 981,
												"mutability": "mutable",
												"name": "percentage",
												"nodeType": "VariableDeclaration",
												"scope": 1023,
												"src": "813:18:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 980,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "813:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "797:35:12"
									},
									"returnParameters": {
										"id": 985,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 984,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1023,
												"src": "856:7:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 983,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "856:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "855:9:12"
									},
									"scope": 1073,
									"src": "778:357:12",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1071,
										"nodeType": "Block",
										"src": "1477:317:12",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1036,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1034,
																"name": "percentage",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1028,
																"src": "1492:10:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"hexValue": "30",
																"id": 1035,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1506:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1492:15:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4d4154485f4449564953494f4e5f42595f5a45524f",
															"id": 1037,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1509:23:12",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_fc36c1c4be38334abb76a97aea9858f5dd129f9a5a734dbf8928b30d7094d3d9",
																"typeString": "literal_string \"MATH_DIVISION_BY_ZERO\""
															},
															"value": "MATH_DIVISION_BY_ZERO"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_fc36c1c4be38334abb76a97aea9858f5dd129f9a5a734dbf8928b30d7094d3d9",
																"typeString": "literal_string \"MATH_DIVISION_BY_ZERO\""
															}
														],
														"id": 1033,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "1484:7:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1038,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1484:49:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1039,
												"nodeType": "ExpressionStatement",
												"src": "1484:49:12"
											},
											{
												"assignments": [
													1041
												],
												"declarations": [
													{
														"constant": false,
														"id": 1041,
														"mutability": "mutable",
														"name": "halfPercentage",
														"nodeType": "VariableDeclaration",
														"scope": 1071,
														"src": "1540:22:12",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1040,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1540:7:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1045,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1044,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1042,
														"name": "percentage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1028,
														"src": "1565:10:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"hexValue": "32",
														"id": 1043,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1578:1:12",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_2_by_1",
															"typeString": "int_const 2"
														},
														"value": "2"
													},
													"src": "1565:14:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1540:39:12"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1058,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1047,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1026,
																"src": "1604:5:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1057,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1054,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"expression": {
																					"arguments": [
																						{
																							"id": 1050,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"lValueRequested": false,
																							"nodeType": "ElementaryTypeNameExpression",
																							"src": "1619:7:12",
																							"typeDescriptions": {
																								"typeIdentifier": "t_type$_t_uint256_$",
																								"typeString": "type(uint256)"
																							},
																							"typeName": {
																								"id": 1049,
																								"name": "uint256",
																								"nodeType": "ElementaryTypeName",
																								"src": "1619:7:12",
																								"typeDescriptions": {}
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_type$_t_uint256_$",
																								"typeString": "type(uint256)"
																							}
																						],
																						"id": 1048,
																						"name": "type",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": -27,
																						"src": "1614:4:12",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																							"typeString": "function () pure"
																						}
																					},
																					"id": 1051,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "1614:13:12",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_magic_meta_type_t_uint256",
																						"typeString": "type(uint256)"
																					}
																				},
																				"id": 1052,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"memberName": "max",
																				"nodeType": "MemberAccess",
																				"src": "1614:17:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "-",
																			"rightExpression": {
																				"id": 1053,
																				"name": "halfPercentage",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1041,
																				"src": "1634:14:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "1614:34:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 1055,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "1613:36:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"id": 1056,
																	"name": "PERCENTAGE_FACTOR",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 971,
																	"src": "1652:17:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1613:56:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1604:65:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4d4154485f4d554c5449504c49434154494f4e5f4f564552464c4f57",
															"id": 1059,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1678:30:12",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_6b96bc99e56604df6600e4ce66f7e91bdc3417f453200fce123d801c60b50ff8",
																"typeString": "literal_string \"MATH_MULTIPLICATION_OVERFLOW\""
															},
															"value": "MATH_MULTIPLICATION_OVERFLOW"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_6b96bc99e56604df6600e4ce66f7e91bdc3417f453200fce123d801c60b50ff8",
																"typeString": "literal_string \"MATH_MULTIPLICATION_OVERFLOW\""
															}
														],
														"id": 1046,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "1588:7:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1060,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1588:127:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1061,
												"nodeType": "ExpressionStatement",
												"src": "1588:127:12"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1069,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1066,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1064,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1062,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1026,
																		"src": "1732:5:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 1063,
																		"name": "PERCENTAGE_FACTOR",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 971,
																		"src": "1740:17:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "1732:25:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "+",
																"rightExpression": {
																	"id": 1065,
																	"name": "halfPercentage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1041,
																	"src": "1760:14:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1732:42:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 1067,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "1731:44:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"id": 1068,
														"name": "percentage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1028,
														"src": "1778:10:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1731:57:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1032,
												"id": 1070,
												"nodeType": "Return",
												"src": "1724:64:12"
											}
										]
									},
									"documentation": {
										"id": 1024,
										"nodeType": "StructuredDocumentation",
										"src": "1141:245:12",
										"text": " @dev Executes a percentage division\n @param value The value of which the percentage needs to be calculated\n @param percentage The percentage of the value to be calculated\n @return The value divided the percentage*"
									},
									"id": 1072,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "percentDiv",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1029,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1026,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 1072,
												"src": "1410:13:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1025,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1410:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1028,
												"mutability": "mutable",
												"name": "percentage",
												"nodeType": "VariableDeclaration",
												"scope": 1072,
												"src": "1425:18:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1027,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1425:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1409:35:12"
									},
									"returnParameters": {
										"id": 1032,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1031,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1072,
												"src": "1468:7:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1030,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1468:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1467:9:12"
									},
									"scope": 1073,
									"src": "1390:404:12",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1074,
							"src": "368:1429:12"
						}
					],
					"src": "38:1761:12"
				},
				"id": 12
			}
		}
	}
}