{
	"id": "098e39385293ed71d308bf989ff56d6b",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.7.5",
	"solcLongVersion": "0.7.5+commit.eb77ed08",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/Omnidex-incentives/incentives/base/DistributionManager.sol": {
				"content": "// SPDX-License-Identifier: agpl-3.0\r\npragma solidity 0.7.5;\r\npragma experimental ABIEncoderV2;\r\n\r\nimport {IOmnidexDistributionManager} from '../../interfaces/IOmnidexDistributionManager.sol';\r\nimport {SafeMath} from '../../lib/SafeMath.sol';\r\nimport {DistributionTypes} from '../../lib/DistributionTypes.sol';\r\n\r\n/**\r\n * @title DistributionManager\r\n * @notice Accounting contract to manage multiple staking distributions\r\n * @author Omnidex\r\n **/\r\ncontract DistributionManager is IOmnidexDistributionManager {\r\n  using SafeMath for uint256;\r\n\r\n  struct AssetData {\r\n    uint104 emissionPerSecond;\r\n    uint104 index;\r\n    uint40 lastUpdateTimestamp;\r\n    mapping(address => uint256) users;\r\n  }\r\n\r\n  address public immutable EMISSION_MANAGER;\r\n\r\n  uint8 public constant PRECISION = 18;\r\n\r\n  mapping(address => AssetData) public assets;\r\n\r\n  uint256 internal _distributionEnd;\r\n\r\n  modifier onlyEmissionManager() {\r\n    require(msg.sender == EMISSION_MANAGER, 'ONLY_EMISSION_MANAGER');\r\n    _;\r\n  }\r\n\r\n  constructor(address emissionManager) {\r\n    EMISSION_MANAGER = emissionManager;\r\n  }\r\n\r\n  /// @inheritdoc IOmnidexDistributionManager\r\n  function setDistributionEnd(uint256 distributionEnd) external override onlyEmissionManager {\r\n    _distributionEnd = distributionEnd;\r\n    emit DistributionEndUpdated(distributionEnd);\r\n  }\r\n\r\n  /// @inheritdoc IOmnidexDistributionManager\r\n  function getDistributionEnd() external view override returns (uint256) {\r\n    return _distributionEnd;\r\n  }\r\n\r\n  /// @inheritdoc IOmnidexDistributionManager\r\n  function DISTRIBUTION_END() external view override returns (uint256) {\r\n    return _distributionEnd;\r\n  }\r\n\r\n  /// @inheritdoc IOmnidexDistributionManager\r\n  function getUserAssetData(address user, address asset) public view override returns (uint256) {\r\n    return assets[asset].users[user];\r\n  }\r\n\r\n  /// @inheritdoc IOmnidexDistributionManager\r\n  function getAssetData(address asset) public view override returns (uint256, uint256, uint256) {\r\n    return (assets[asset].index, assets[asset].emissionPerSecond, assets[asset].lastUpdateTimestamp);\r\n  }\r\n\r\n  /**\r\n   * @dev Configure the assets for a specific emission\r\n   * @param assetsConfigInput The array of each asset configuration\r\n   **/\r\n  function _configureAssets(DistributionTypes.AssetConfigInput[] memory assetsConfigInput)\r\n    internal\r\n  {\r\n    for (uint256 i = 0; i < assetsConfigInput.length; i++) {\r\n      AssetData storage assetConfig = assets[assetsConfigInput[i].underlyingAsset];\r\n\r\n      _updateAssetStateInternal(\r\n        assetsConfigInput[i].underlyingAsset,\r\n        assetConfig,\r\n        assetsConfigInput[i].totalStaked\r\n      );\r\n\r\n      assetConfig.emissionPerSecond = assetsConfigInput[i].emissionPerSecond;\r\n\r\n      emit AssetConfigUpdated(\r\n        assetsConfigInput[i].underlyingAsset,\r\n        assetsConfigInput[i].emissionPerSecond\r\n      );\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @dev Updates the state of one distribution, mainly rewards index and timestamp\r\n   * @param asset The address of the asset being updated\r\n   * @param assetConfig Storage pointer to the distribution's config\r\n   * @param totalStaked Current total of staked assets for this distribution\r\n   * @return The new distribution index\r\n   **/\r\n  function _updateAssetStateInternal(\r\n    address asset,\r\n    AssetData storage assetConfig,\r\n    uint256 totalStaked\r\n  ) internal returns (uint256) {\r\n    uint256 oldIndex = assetConfig.index;\r\n    uint256 emissionPerSecond = assetConfig.emissionPerSecond;\r\n    uint128 lastUpdateTimestamp = assetConfig.lastUpdateTimestamp;\r\n\r\n    if (block.timestamp == lastUpdateTimestamp) {\r\n      return oldIndex;\r\n    }\r\n\r\n    uint256 newIndex =\r\n      _getAssetIndex(oldIndex, emissionPerSecond, lastUpdateTimestamp, totalStaked);\r\n\r\n    if (newIndex != oldIndex) {\r\n      require(uint104(newIndex) == newIndex, 'Index overflow');\r\n      //optimization: storing one after another saves one SSTORE\r\n      assetConfig.index = uint104(newIndex);\r\n      assetConfig.lastUpdateTimestamp = uint40(block.timestamp);\r\n      emit AssetIndexUpdated(asset, newIndex);\r\n    } else {\r\n      assetConfig.lastUpdateTimestamp = uint40(block.timestamp);\r\n    }\r\n\r\n    return newIndex;\r\n  }\r\n\r\n  /**\r\n   * @dev Updates the state of an user in a distribution\r\n   * @param user The user's address\r\n   * @param asset The address of the reference asset of the distribution\r\n   * @param stakedByUser Amount of tokens staked by the user in the distribution at the moment\r\n   * @param totalStaked Total tokens staked in the distribution\r\n   * @return The accrued rewards for the user until the moment\r\n   **/\r\n  function _updateUserAssetInternal(\r\n    address user,\r\n    address asset,\r\n    uint256 stakedByUser,\r\n    uint256 totalStaked\r\n  ) internal returns (uint256) {\r\n    AssetData storage assetData = assets[asset];\r\n    uint256 userIndex = assetData.users[user];\r\n    uint256 accruedRewards = 0;\r\n\r\n    uint256 newIndex = _updateAssetStateInternal(asset, assetData, totalStaked);\r\n\r\n    if (userIndex != newIndex) {\r\n      if (stakedByUser != 0) {\r\n        accruedRewards = _getRewards(stakedByUser, newIndex, userIndex);\r\n      }\r\n\r\n      assetData.users[user] = newIndex;\r\n      emit UserIndexUpdated(user, asset, newIndex);\r\n    }\r\n\r\n    return accruedRewards;\r\n  }\r\n\r\n  /**\r\n   * @dev Used by \"frontend\" stake contracts to update the data of an user when claiming rewards from there\r\n   * @param user The address of the user\r\n   * @param stakes List of structs of the user data related with his stake\r\n   * @return The accrued rewards for the user until the moment\r\n   **/\r\n  function _claimRewards(address user, DistributionTypes.UserStakeInput[] memory stakes)\r\n    internal\r\n    returns (uint256)\r\n  {\r\n    uint256 accruedRewards = 0;\r\n\r\n    for (uint256 i = 0; i < stakes.length; i++) {\r\n      accruedRewards = accruedRewards.add(\r\n        _updateUserAssetInternal(\r\n          user,\r\n          stakes[i].underlyingAsset,\r\n          stakes[i].stakedByUser,\r\n          stakes[i].totalStaked\r\n        )\r\n      );\r\n    }\r\n\r\n    return accruedRewards;\r\n  }\r\n\r\n  /**\r\n   * @dev Return the accrued rewards for an user over a list of distribution\r\n   * @param user The address of the user\r\n   * @param stakes List of structs of the user data related with his stake\r\n   * @return The accrued rewards for the user until the moment\r\n   **/\r\n  function _getUnclaimedRewards(address user, DistributionTypes.UserStakeInput[] memory stakes)\r\n    internal\r\n    view\r\n    returns (uint256)\r\n  {\r\n    uint256 accruedRewards = 0;\r\n\r\n    for (uint256 i = 0; i < stakes.length; i++) {\r\n      AssetData storage assetConfig = assets[stakes[i].underlyingAsset];\r\n      uint256 assetIndex =\r\n        _getAssetIndex(\r\n          assetConfig.index,\r\n          assetConfig.emissionPerSecond,\r\n          assetConfig.lastUpdateTimestamp,\r\n          stakes[i].totalStaked\r\n        );\r\n\r\n      accruedRewards = accruedRewards.add(\r\n        _getRewards(stakes[i].stakedByUser, assetIndex, assetConfig.users[user])\r\n      );\r\n    }\r\n    return accruedRewards;\r\n  }\r\n\r\n  /**\r\n   * @dev Internal function for the calculation of user's rewards on a distribution\r\n   * @param principalUserBalance Amount staked by the user on a distribution\r\n   * @param reserveIndex Current index of the distribution\r\n   * @param userIndex Index stored for the user, representation his staking moment\r\n   * @return The rewards\r\n   **/\r\n  function _getRewards(\r\n    uint256 principalUserBalance,\r\n    uint256 reserveIndex,\r\n    uint256 userIndex\r\n  ) internal pure returns (uint256) {\r\n    return principalUserBalance.mul(reserveIndex.sub(userIndex)) / 10**uint256(PRECISION);\r\n  }\r\n\r\n  /**\r\n   * @dev Calculates the next value of an specific distribution index, with validations\r\n   * @param currentIndex Current index of the distribution\r\n   * @param emissionPerSecond Representing the total rewards distributed per second per asset unit, on the distribution\r\n   * @param lastUpdateTimestamp Last moment this distribution was updated\r\n   * @param totalBalance of tokens considered for the distribution\r\n   * @return The new index.\r\n   **/\r\n  function _getAssetIndex(\r\n    uint256 currentIndex,\r\n    uint256 emissionPerSecond,\r\n    uint128 lastUpdateTimestamp,\r\n    uint256 totalBalance\r\n  ) internal view returns (uint256) {\r\n    uint256 distributionEnd = _distributionEnd;\r\n    if (\r\n      emissionPerSecond == 0 ||\r\n      totalBalance == 0 ||\r\n      lastUpdateTimestamp == block.timestamp ||\r\n      lastUpdateTimestamp >= distributionEnd\r\n    ) {\r\n      return currentIndex;\r\n    }\r\n\r\n    uint256 currentTimestamp =\r\n      block.timestamp > distributionEnd ? distributionEnd : block.timestamp;\r\n    uint256 timeDelta = currentTimestamp.sub(lastUpdateTimestamp);\r\n    return\r\n      emissionPerSecond.mul(timeDelta).mul(10**uint256(PRECISION)).div(totalBalance).add(\r\n        currentIndex\r\n      );\r\n  }\r\n}\r\n"
			},
			"contracts/Omnidex-incentives/lib/DistributionTypes.sol": {
				"content": "// SPDX-License-Identifier: agpl-3.0\r\npragma solidity 0.7.5;\r\npragma experimental ABIEncoderV2;\r\n\r\nlibrary DistributionTypes {\r\n  struct AssetConfigInput {\r\n    uint104 emissionPerSecond;\r\n    uint256 totalStaked;\r\n    address underlyingAsset;\r\n  }\r\n\r\n  struct UserStakeInput {\r\n    address underlyingAsset;\r\n    uint256 stakedByUser;\r\n    uint256 totalStaked;\r\n  }\r\n}\r\n"
			},
			"contracts/Omnidex-incentives/lib/SafeMath.sol": {
				"content": "\r\n// SPDX-License-Identifier: agpl-3.0\r\npragma solidity ^0.7.5;\r\n\r\n/// @title Optimized overflow and underflow safe math operations\r\n/// @notice Contains methods for doing math operations that revert on overflow or underflow for minimal gas cost\r\n/// inspired by uniswap V3\r\nlibrary SafeMath {\r\n    /// @notice Returns x + y, reverts if sum overflows uint256\r\n    /// @param x The augend\r\n    /// @param y The addend\r\n    /// @return z The sum of x and y\r\n    function add(uint256 x, uint256 y) internal pure returns (uint256 z) {\r\n        require((z = x + y) >= x);\r\n    }\r\n\r\n    /// @notice Returns x - y, reverts if underflows\r\n    /// @param x The minuend\r\n    /// @param y The subtrahend\r\n    /// @return z The difference of x and y\r\n    function sub(uint256 x, uint256 y) internal pure returns (uint256 z) {\r\n        require((z = x - y) <= x);\r\n    }\r\n\r\n    /// @notice Returns x * y, reverts if overflows\r\n    /// @param x The multiplicand\r\n    /// @param y The multiplier\r\n    /// @return z The product of x and y\r\n    function mul(uint256 x, uint256 y) internal pure returns (uint256 z) {\r\n        require(x == 0 || (z = x * y) / x == y);\r\n    }\r\n\r\n    function div(uint256 x, uint256 y) internal pure returns(uint256) {\r\n        // no need to check for division by zero - solidity already reverts\r\n        return x / y;\r\n    }\r\n}"
			},
			"contracts/Omnidex-incentives/interfaces/IOmnidexDistributionManager.sol": {
				"content": "// SPDX-License-Identifier: agpl-3.0\r\npragma solidity 0.7.5;\r\npragma experimental ABIEncoderV2;\r\n\r\nimport {DistributionTypes} from '../lib/DistributionTypes.sol';\r\n\r\ninterface IOmnidexDistributionManager {\r\n  \r\n  event AssetConfigUpdated(address indexed asset, uint256 emission);\r\n  event AssetIndexUpdated(address indexed asset, uint256 index);\r\n  event UserIndexUpdated(address indexed user, address indexed asset, uint256 index);\r\n  event DistributionEndUpdated(uint256 newDistributionEnd);\r\n\r\n  /**\r\n  * @dev Sets the end date for the distribution\r\n  * @param distributionEnd The end date timestamp\r\n  **/\r\n  function setDistributionEnd(uint256 distributionEnd) external;\r\n\r\n  /**\r\n  * @dev Gets the end date for the distribution\r\n  * @return The end of the distribution\r\n  **/\r\n  function getDistributionEnd() external view returns (uint256);\r\n\r\n  /**\r\n  * @dev for backwards compatibility with the previous DistributionManager used\r\n  * @return The end of the distribution\r\n  **/\r\n  function DISTRIBUTION_END() external view returns(uint256);\r\n\r\n   /**\r\n   * @dev Returns the data of an user on a distribution\r\n   * @param user Address of the user\r\n   * @param asset The address of the reference asset of the distribution\r\n   * @return The new index\r\n   **/\r\n   function getUserAssetData(address user, address asset) external view returns (uint256);\r\n\r\n   /**\r\n   * @dev Returns the configuration of the distribution for a certain asset\r\n   * @param asset The address of the reference asset of the distribution\r\n   * @return The asset index, the emission per second and the last updated timestamp\r\n   **/\r\n   function getAssetData(address asset) external view returns (uint256, uint256, uint256);\r\n}\r\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"contracts/Omnidex-incentives/incentives/base/DistributionManager.sol": {
				"DistributionManager": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "emissionManager",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "asset",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "emission",
									"type": "uint256"
								}
							],
							"name": "AssetConfigUpdated",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "asset",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "index",
									"type": "uint256"
								}
							],
							"name": "AssetIndexUpdated",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "newDistributionEnd",
									"type": "uint256"
								}
							],
							"name": "DistributionEndUpdated",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "asset",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "index",
									"type": "uint256"
								}
							],
							"name": "UserIndexUpdated",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "DISTRIBUTION_END",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "EMISSION_MANAGER",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "PRECISION",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "assets",
							"outputs": [
								{
									"internalType": "uint104",
									"name": "emissionPerSecond",
									"type": "uint104"
								},
								{
									"internalType": "uint104",
									"name": "index",
									"type": "uint104"
								},
								{
									"internalType": "uint40",
									"name": "lastUpdateTimestamp",
									"type": "uint40"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "asset",
									"type": "address"
								}
							],
							"name": "getAssetData",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getDistributionEnd",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "asset",
									"type": "address"
								}
							],
							"name": "getUserAssetData",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "distributionEnd",
									"type": "uint256"
								}
							],
							"name": "setDistributionEnd",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"author": "Omnidex*",
						"kind": "dev",
						"methods": {
							"DISTRIBUTION_END()": {
								"details": "for backwards compatibility with the previous DistributionManager used",
								"returns": {
									"_0": "The end of the distribution*"
								}
							},
							"getAssetData(address)": {
								"details": "Returns the configuration of the distribution for a certain asset",
								"params": {
									"asset": "The address of the reference asset of the distribution"
								},
								"returns": {
									"_0": "The asset index, the emission per second and the last updated timestamp*"
								}
							},
							"getDistributionEnd()": {
								"details": "Gets the end date for the distribution",
								"returns": {
									"_0": "The end of the distribution*"
								}
							},
							"getUserAssetData(address,address)": {
								"details": "Returns the data of an user on a distribution",
								"params": {
									"asset": "The address of the reference asset of the distribution",
									"user": "Address of the user"
								},
								"returns": {
									"_0": "The new index*"
								}
							},
							"setDistributionEnd(uint256)": {
								"details": "Sets the end date for the distribution",
								"params": {
									"distributionEnd": "The end date timestamp*"
								}
							}
						},
						"title": "DistributionManager",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/Omnidex-incentives/incentives/base/DistributionManager.sol\":449:8871  contract DistributionManager is IOmnidexDistributionManager {\r... */\n  mstore(0x40, 0xa0)\n    /* \"contracts/Omnidex-incentives/incentives/base/DistributionManager.sol\":1004:1088  constructor(address emissionManager) {\r... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  dup2\n  add\n  swap1\n  tag_2\n  swap2\n  swap1\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"contracts/Omnidex-incentives/incentives/base/DistributionManager.sol\":1067:1082  emissionManager */\n  dup1\n    /* \"contracts/Omnidex-incentives/incentives/base/DistributionManager.sol\":1048:1082  EMISSION_MANAGER = emissionManager */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0x80\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0x60\n  shl\n  dup2\n  mstore\n  pop\n  pop\n    /* \"contracts/Omnidex-incentives/incentives/base/DistributionManager.sol\":1004:1088  constructor(address emissionManager) {\r... */\n  pop\n    /* \"contracts/Omnidex-incentives/incentives/base/DistributionManager.sol\":449:8871  contract DistributionManager is IOmnidexDistributionManager {\r... */\n  jump(tag_6)\n    /* \"#utility.yul\":7:150   */\ntag_8:\n  0x00\n    /* \"#utility.yul\":95:101   */\n  dup2\n    /* \"#utility.yul\":89:102   */\n  mload\n    /* \"#utility.yul\":80:102   */\n  swap1\n  pop\n    /* \"#utility.yul\":111:144   */\n  tag_10\n    /* \"#utility.yul\":138:143   */\n  dup2\n    /* \"#utility.yul\":111:144   */\n  tag_11\n  jump\t// in\ntag_10:\n    /* \"#utility.yul\":70:150   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":156:438   */\ntag_3:\n  0x00\n    /* \"#utility.yul\":275:277   */\n  0x20\n    /* \"#utility.yul\":263:272   */\n  dup3\n    /* \"#utility.yul\":254:261   */\n  dup5\n    /* \"#utility.yul\":250:273   */\n  sub\n    /* \"#utility.yul\":246:278   */\n  slt\n    /* \"#utility.yul\":243:245   */\n  iszero\n  tag_13\n  jumpi\n    /* \"#utility.yul\":291:292   */\n  0x00\n    /* \"#utility.yul\":288:289   */\n  dup1\n    /* \"#utility.yul\":281:293   */\n  revert\n    /* \"#utility.yul\":243:245   */\ntag_13:\n    /* \"#utility.yul\":333:334   */\n  0x00\n    /* \"#utility.yul\":357:421   */\n  tag_14\n    /* \"#utility.yul\":413:420   */\n  dup5\n    /* \"#utility.yul\":404:410   */\n  dup3\n    /* \"#utility.yul\":393:402   */\n  dup6\n    /* \"#utility.yul\":389:411   */\n  add\n    /* \"#utility.yul\":357:421   */\n  tag_8\n  jump\t// in\ntag_14:\n    /* \"#utility.yul\":347:421   */\n  swap2\n  pop\n    /* \"#utility.yul\":305:431   */\n  pop\n    /* \"#utility.yul\":233:438   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":444:540   */\ntag_15:\n  0x00\n    /* \"#utility.yul\":510:534   */\n  tag_17\n    /* \"#utility.yul\":528:533   */\n  dup3\n    /* \"#utility.yul\":510:534   */\n  tag_18\n  jump\t// in\ntag_17:\n    /* \"#utility.yul\":499:534   */\n  swap1\n  pop\n    /* \"#utility.yul\":489:540   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":546:672   */\ntag_18:\n  0x00\n    /* \"#utility.yul\":623:665   */\n  0xffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":616:621   */\n  dup3\n    /* \"#utility.yul\":612:666   */\n  and\n    /* \"#utility.yul\":601:666   */\n  swap1\n  pop\n    /* \"#utility.yul\":591:672   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":678:800   */\ntag_11:\n    /* \"#utility.yul\":751:775   */\n  tag_21\n    /* \"#utility.yul\":769:774   */\n  dup2\n    /* \"#utility.yul\":751:775   */\n  tag_15\n  jump\t// in\ntag_21:\n    /* \"#utility.yul\":744:749   */\n  dup2\n    /* \"#utility.yul\":741:776   */\n  eq\n    /* \"#utility.yul\":731:733   */\n  tag_22\n  jumpi\n    /* \"#utility.yul\":790:791   */\n  0x00\n    /* \"#utility.yul\":787:788   */\n  dup1\n    /* \"#utility.yul\":780:792   */\n  revert\n    /* \"#utility.yul\":731:733   */\ntag_22:\n    /* \"#utility.yul\":721:800   */\n  pop\n  jump\t// out\n    /* \"contracts/Omnidex-incentives/incentives/base/DistributionManager.sol\":449:8871  contract DistributionManager is IOmnidexDistributionManager {\r... */\ntag_6:\n  shr(0x60, mload(0x80))\n  codecopy(0x00, dataOffset(sub_0), dataSize(sub_0))\n  assignImmutable(\"0x58a280f74f57bf051c40f060139dc747e015be52f68c57e2c4ab2e4bd4146f43\")\n  return(0x00, dataSize(sub_0))\nstop\n\nsub_0: assembly {\n        /* \"contracts/Omnidex-incentives/incentives/base/DistributionManager.sol\":449:8871  contract DistributionManager is IOmnidexDistributionManager {\r... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0xaaf5eb68\n      gt\n      tag_11\n      jumpi\n      dup1\n      0xaaf5eb68\n      eq\n      tag_7\n      jumpi\n      dup1\n      0xcbcbb507\n      eq\n      tag_8\n      jumpi\n      dup1\n      0xcc69afec\n      eq\n      tag_9\n      jumpi\n      dup1\n      0xf11b8188\n      eq\n      tag_10\n      jumpi\n      jump(tag_2)\n    tag_11:\n      dup1\n      0x1652e7b7\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x3373ee4c\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x39ccbdd3\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x919cd40f\n      eq\n      tag_6\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"contracts/Omnidex-incentives/incentives/base/DistributionManager.sol\":1893:2096  function getAssetData(address asset) public view override returns (uint256, uint256, uint256) {\r... */\n    tag_3:\n      tag_12\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_13\n      swap2\n      swap1\n      tag_14\n      jump\t// in\n    tag_13:\n      tag_15\n      jump\t// in\n    tag_12:\n      mload(0x40)\n      tag_16\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_17\n      jump\t// in\n    tag_16:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Omnidex-incentives/incentives/base/DistributionManager.sol\":1701:1840  function getUserAssetData(address user, address asset) public view override returns (uint256) {\r... */\n    tag_4:\n      tag_18\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_19\n      swap2\n      swap1\n      tag_20\n      jump\t// in\n    tag_19:\n      tag_21\n      jump\t// in\n    tag_18:\n      mload(0x40)\n      tag_22\n      swap2\n      swap1\n      tag_23\n      jump\t// in\n    tag_22:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Omnidex-incentives/incentives/base/DistributionManager.sol\":1141:1330  function setDistributionEnd(uint256 distributionEnd) external override onlyEmissionManager {\r... */\n    tag_5:\n      tag_24\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_25\n      swap2\n      swap1\n      tag_26\n      jump\t// in\n    tag_25:\n      tag_27\n      jump\t// in\n    tag_24:\n      stop\n        /* \"contracts/Omnidex-incentives/incentives/base/DistributionManager.sol\":1543:1648  function DISTRIBUTION_END() external view override returns (uint256) {\r... */\n    tag_6:\n      tag_28\n      tag_29\n      jump\t// in\n    tag_28:\n      mload(0x40)\n      tag_30\n      swap2\n      swap1\n      tag_23\n      jump\t// in\n    tag_30:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Omnidex-incentives/incentives/base/DistributionManager.sol\":749:785  uint8 public constant PRECISION = 18 */\n    tag_7:\n      tag_31\n      tag_32\n      jump\t// in\n    tag_31:\n      mload(0x40)\n      tag_33\n      swap2\n      swap1\n      tag_34\n      jump\t// in\n    tag_33:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Omnidex-incentives/incentives/base/DistributionManager.sol\":701:742  address public immutable EMISSION_MANAGER */\n    tag_8:\n      tag_35\n      tag_36\n      jump\t// in\n    tag_35:\n      mload(0x40)\n      tag_37\n      swap2\n      swap1\n      tag_38\n      jump\t// in\n    tag_37:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Omnidex-incentives/incentives/base/DistributionManager.sol\":1383:1490  function getDistributionEnd() external view override returns (uint256) {\r... */\n    tag_9:\n      tag_39\n      tag_40\n      jump\t// in\n    tag_39:\n      mload(0x40)\n      tag_41\n      swap2\n      swap1\n      tag_23\n      jump\t// in\n    tag_41:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Omnidex-incentives/incentives/base/DistributionManager.sol\":792:835  mapping(address => AssetData) public assets */\n    tag_10:\n      tag_42\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_43\n      swap2\n      swap1\n      tag_14\n      jump\t// in\n    tag_43:\n      tag_44\n      jump\t// in\n    tag_42:\n      mload(0x40)\n      tag_45\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_46\n      jump\t// in\n    tag_45:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Omnidex-incentives/incentives/base/DistributionManager.sol\":1893:2096  function getAssetData(address asset) public view override returns (uint256, uint256, uint256) {\r... */\n    tag_15:\n        /* \"contracts/Omnidex-incentives/incentives/base/DistributionManager.sol\":1960:1967  uint256 */\n      0x00\n        /* \"contracts/Omnidex-incentives/incentives/base/DistributionManager.sol\":1969:1976  uint256 */\n      dup1\n        /* \"contracts/Omnidex-incentives/incentives/base/DistributionManager.sol\":1978:1985  uint256 */\n      0x00\n        /* \"contracts/Omnidex-incentives/incentives/base/DistributionManager.sol\":2002:2008  assets */\n      dup1\n        /* \"contracts/Omnidex-incentives/incentives/base/DistributionManager.sol\":2002:2015  assets[asset] */\n      0x00\n        /* \"contracts/Omnidex-incentives/incentives/base/DistributionManager.sol\":2009:2014  asset */\n      dup6\n        /* \"contracts/Omnidex-incentives/incentives/base/DistributionManager.sol\":2002:2015  assets[asset] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/Omnidex-incentives/incentives/base/DistributionManager.sol\":2002:2021  assets[asset].index */\n      0x00\n      add\n      0x0d\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffff\n      and\n        /* \"contracts/Omnidex-incentives/incentives/base/DistributionManager.sol\":2023:2029  assets */\n      0x00\n        /* \"contracts/Omnidex-incentives/incentives/base/DistributionManager.sol\":2023:2036  assets[asset] */\n      dup1\n        /* \"contracts/Omnidex-incentives/incentives/base/DistributionManager.sol\":2030:2035  asset */\n      dup7\n        /* \"contracts/Omnidex-incentives/incentives/base/DistributionManager.sol\":2023:2036  assets[asset] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/Omnidex-incentives/incentives/base/DistributionManager.sol\":2023:2054  assets[asset].emissionPerSecond */\n      0x00\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffff\n      and\n        /* \"contracts/Omnidex-incentives/incentives/base/DistributionManager.sol\":2056:2062  assets */\n      0x00\n        /* \"contracts/Omnidex-incentives/incentives/base/DistributionManager.sol\":2056:2069  assets[asset] */\n      dup1\n        /* \"contracts/Omnidex-incentives/incentives/base/DistributionManager.sol\":2063:2068  asset */\n      dup8\n        /* \"contracts/Omnidex-incentives/incentives/base/DistributionManager.sol\":2056:2069  assets[asset] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/Omnidex-incentives/incentives/base/DistributionManager.sol\":2056:2089  assets[asset].lastUpdateTimestamp */\n      0x00\n      add\n      0x1a\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffff\n      and\n        /* \"contracts/Omnidex-incentives/incentives/base/DistributionManager.sol\":1994:2090  return (assets[asset].index, assets[asset].emissionPerSecond, assets[asset].lastUpdateTimestamp) */\n      dup3\n      0xffffffffffffffffffffffffff\n      and\n      swap3\n      pop\n      dup2\n      0xffffffffffffffffffffffffff\n      and\n      swap2\n      pop\n      dup1\n      0xffffffffff\n      and\n      swap1\n      pop\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      pop\n        /* \"contracts/Omnidex-incentives/incentives/base/DistributionManager.sol\":1893:2096  function getAssetData(address asset) public view override returns (uint256, uint256, uint256) {\r... */\n      swap2\n      swap4\n      swap1\n      swap3\n      pop\n      jump\t// out\n        /* \"contracts/Omnidex-incentives/incentives/base/DistributionManager.sol\":1701:1840  function getUserAssetData(address user, address asset) public view override returns (uint256) {\r... */\n    tag_21:\n        /* \"contracts/Omnidex-incentives/incentives/base/DistributionManager.sol\":1786:1793  uint256 */\n      0x00\n        /* \"contracts/Omnidex-incentives/incentives/base/DistributionManager.sol\":1809:1815  assets */\n      dup1\n        /* \"contracts/Omnidex-incentives/incentives/base/DistributionManager.sol\":1809:1822  assets[asset] */\n      0x00\n        /* \"contracts/Omnidex-incentives/incentives/base/DistributionManager.sol\":1816:1821  asset */\n      dup4\n        /* \"contracts/Omnidex-incentives/incentives/base/DistributionManager.sol\":1809:1822  assets[asset] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/Omnidex-incentives/incentives/base/DistributionManager.sol\":1809:1828  assets[asset].users */\n      0x01\n      add\n        /* \"contracts/Omnidex-incentives/incentives/base/DistributionManager.sol\":1809:1834  assets[asset].users[user] */\n      0x00\n        /* \"contracts/Omnidex-incentives/incentives/base/DistributionManager.sol\":1829:1833  user */\n      dup5\n        /* \"contracts/Omnidex-incentives/incentives/base/DistributionManager.sol\":1809:1834  assets[asset].users[user] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/Omnidex-incentives/incentives/base/DistributionManager.sol\":1802:1834  return assets[asset].users[user] */\n      swap1\n      pop\n        /* \"contracts/Omnidex-incentives/incentives/base/DistributionManager.sol\":1701:1840  function getUserAssetData(address user, address asset) public view override returns (uint256) {\r... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/Omnidex-incentives/incentives/base/DistributionManager.sol\":1141:1330  function setDistributionEnd(uint256 distributionEnd) external override onlyEmissionManager {\r... */\n    tag_27:\n        /* \"contracts/Omnidex-incentives/incentives/base/DistributionManager.sol\":942:958  EMISSION_MANAGER */\n      immutable(\"0x58a280f74f57bf051c40f060139dc747e015be52f68c57e2c4ab2e4bd4146f43\")\n        /* \"contracts/Omnidex-incentives/incentives/base/DistributionManager.sol\":928:958  msg.sender == EMISSION_MANAGER */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Omnidex-incentives/incentives/base/DistributionManager.sol\":928:938  msg.sender */\n      caller\n        /* \"contracts/Omnidex-incentives/incentives/base/DistributionManager.sol\":928:958  msg.sender == EMISSION_MANAGER */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/Omnidex-incentives/incentives/base/DistributionManager.sol\":920:984  require(msg.sender == EMISSION_MANAGER, 'ONLY_EMISSION_MANAGER') */\n      tag_50\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_51\n      swap1\n      tag_52\n      jump\t// in\n    tag_51:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_50:\n        /* \"contracts/Omnidex-incentives/incentives/base/DistributionManager.sol\":1258:1273  distributionEnd */\n      dup1\n        /* \"contracts/Omnidex-incentives/incentives/base/DistributionManager.sol\":1239:1255  _distributionEnd */\n      0x01\n        /* \"contracts/Omnidex-incentives/incentives/base/DistributionManager.sol\":1239:1273  _distributionEnd = distributionEnd */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/Omnidex-incentives/incentives/base/DistributionManager.sol\":1285:1324  DistributionEndUpdated(distributionEnd) */\n      0x1cc1849a6602c3e91f2088cadea4381cc5717f2f28584197060ed2ebb434c16f\n        /* \"contracts/Omnidex-incentives/incentives/base/DistributionManager.sol\":1308:1323  distributionEnd */\n      dup2\n        /* \"contracts/Omnidex-incentives/incentives/base/DistributionManager.sol\":1285:1324  DistributionEndUpdated(distributionEnd) */\n      mload(0x40)\n      tag_54\n      swap2\n      swap1\n      tag_23\n      jump\t// in\n    tag_54:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"contracts/Omnidex-incentives/incentives/base/DistributionManager.sol\":1141:1330  function setDistributionEnd(uint256 distributionEnd) external override onlyEmissionManager {\r... */\n      pop\n      jump\t// out\n        /* \"contracts/Omnidex-incentives/incentives/base/DistributionManager.sol\":1543:1648  function DISTRIBUTION_END() external view override returns (uint256) {\r... */\n    tag_29:\n        /* \"contracts/Omnidex-incentives/incentives/base/DistributionManager.sol\":1603:1610  uint256 */\n      0x00\n        /* \"contracts/Omnidex-incentives/incentives/base/DistributionManager.sol\":1626:1642  _distributionEnd */\n      sload(0x01)\n        /* \"contracts/Omnidex-incentives/incentives/base/DistributionManager.sol\":1619:1642  return _distributionEnd */\n      swap1\n      pop\n        /* \"contracts/Omnidex-incentives/incentives/base/DistributionManager.sol\":1543:1648  function DISTRIBUTION_END() external view override returns (uint256) {\r... */\n      swap1\n      jump\t// out\n        /* \"contracts/Omnidex-incentives/incentives/base/DistributionManager.sol\":749:785  uint8 public constant PRECISION = 18 */\n    tag_32:\n        /* \"contracts/Omnidex-incentives/incentives/base/DistributionManager.sol\":783:785  18 */\n      0x12\n        /* \"contracts/Omnidex-incentives/incentives/base/DistributionManager.sol\":749:785  uint8 public constant PRECISION = 18 */\n      dup2\n      jump\t// out\n        /* \"contracts/Omnidex-incentives/incentives/base/DistributionManager.sol\":701:742  address public immutable EMISSION_MANAGER */\n    tag_36:\n      immutable(\"0x58a280f74f57bf051c40f060139dc747e015be52f68c57e2c4ab2e4bd4146f43\")\n      dup2\n      jump\t// out\n        /* \"contracts/Omnidex-incentives/incentives/base/DistributionManager.sol\":1383:1490  function getDistributionEnd() external view override returns (uint256) {\r... */\n    tag_40:\n        /* \"contracts/Omnidex-incentives/incentives/base/DistributionManager.sol\":1445:1452  uint256 */\n      0x00\n        /* \"contracts/Omnidex-incentives/incentives/base/DistributionManager.sol\":1468:1484  _distributionEnd */\n      sload(0x01)\n        /* \"contracts/Omnidex-incentives/incentives/base/DistributionManager.sol\":1461:1484  return _distributionEnd */\n      swap1\n      pop\n        /* \"contracts/Omnidex-incentives/incentives/base/DistributionManager.sol\":1383:1490  function getDistributionEnd() external view override returns (uint256) {\r... */\n      swap1\n      jump\t// out\n        /* \"contracts/Omnidex-incentives/incentives/base/DistributionManager.sol\":792:835  mapping(address => AssetData) public assets */\n    tag_44:\n      mstore(0x20, 0x00)\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      swap1\n      pop\n      dup1\n      0x00\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffff\n      and\n      swap1\n      dup1\n      0x00\n      add\n      0x0d\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffff\n      and\n      swap1\n      dup1\n      0x00\n      add\n      0x1a\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffff\n      and\n      swap1\n      pop\n      dup4\n      jump\t// out\n        /* \"#utility.yul\":7:146   */\n    tag_58:\n      0x00\n        /* \"#utility.yul\":91:97   */\n      dup2\n        /* \"#utility.yul\":78:98   */\n      calldataload\n        /* \"#utility.yul\":69:98   */\n      swap1\n      pop\n        /* \"#utility.yul\":107:140   */\n      tag_60\n        /* \"#utility.yul\":134:139   */\n      dup2\n        /* \"#utility.yul\":107:140   */\n      tag_61\n      jump\t// in\n    tag_60:\n        /* \"#utility.yul\":59:146   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":152:291   */\n    tag_62:\n      0x00\n        /* \"#utility.yul\":236:242   */\n      dup2\n        /* \"#utility.yul\":223:243   */\n      calldataload\n        /* \"#utility.yul\":214:243   */\n      swap1\n      pop\n        /* \"#utility.yul\":252:285   */\n      tag_64\n        /* \"#utility.yul\":279:284   */\n      dup2\n        /* \"#utility.yul\":252:285   */\n      tag_65\n      jump\t// in\n    tag_64:\n        /* \"#utility.yul\":204:291   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":297:557   */\n    tag_14:\n      0x00\n        /* \"#utility.yul\":405:407   */\n      0x20\n        /* \"#utility.yul\":393:402   */\n      dup3\n        /* \"#utility.yul\":384:391   */\n      dup5\n        /* \"#utility.yul\":380:403   */\n      sub\n        /* \"#utility.yul\":376:408   */\n      slt\n        /* \"#utility.yul\":373:375   */\n      iszero\n      tag_67\n      jumpi\n        /* \"#utility.yul\":421:422   */\n      0x00\n        /* \"#utility.yul\":418:419   */\n      dup1\n        /* \"#utility.yul\":411:423   */\n      revert\n        /* \"#utility.yul\":373:375   */\n    tag_67:\n        /* \"#utility.yul\":463:464   */\n      0x00\n        /* \"#utility.yul\":487:540   */\n      tag_68\n        /* \"#utility.yul\":532:539   */\n      dup5\n        /* \"#utility.yul\":523:529   */\n      dup3\n        /* \"#utility.yul\":512:521   */\n      dup6\n        /* \"#utility.yul\":508:530   */\n      add\n        /* \"#utility.yul\":487:540   */\n      tag_58\n      jump\t// in\n    tag_68:\n        /* \"#utility.yul\":477:540   */\n      swap2\n      pop\n        /* \"#utility.yul\":435:550   */\n      pop\n        /* \"#utility.yul\":363:557   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":563:966   */\n    tag_20:\n      0x00\n      dup1\n        /* \"#utility.yul\":688:690   */\n      0x40\n        /* \"#utility.yul\":676:685   */\n      dup4\n        /* \"#utility.yul\":667:674   */\n      dup6\n        /* \"#utility.yul\":663:686   */\n      sub\n        /* \"#utility.yul\":659:691   */\n      slt\n        /* \"#utility.yul\":656:658   */\n      iszero\n      tag_70\n      jumpi\n        /* \"#utility.yul\":704:705   */\n      0x00\n        /* \"#utility.yul\":701:702   */\n      dup1\n        /* \"#utility.yul\":694:706   */\n      revert\n        /* \"#utility.yul\":656:658   */\n    tag_70:\n        /* \"#utility.yul\":746:747   */\n      0x00\n        /* \"#utility.yul\":770:823   */\n      tag_71\n        /* \"#utility.yul\":815:822   */\n      dup6\n        /* \"#utility.yul\":806:812   */\n      dup3\n        /* \"#utility.yul\":795:804   */\n      dup7\n        /* \"#utility.yul\":791:813   */\n      add\n        /* \"#utility.yul\":770:823   */\n      tag_58\n      jump\t// in\n    tag_71:\n        /* \"#utility.yul\":760:823   */\n      swap3\n      pop\n        /* \"#utility.yul\":718:833   */\n      pop\n        /* \"#utility.yul\":871:873   */\n      0x20\n        /* \"#utility.yul\":896:949   */\n      tag_72\n        /* \"#utility.yul\":941:948   */\n      dup6\n        /* \"#utility.yul\":932:938   */\n      dup3\n        /* \"#utility.yul\":921:930   */\n      dup7\n        /* \"#utility.yul\":917:939   */\n      add\n        /* \"#utility.yul\":896:949   */\n      tag_58\n      jump\t// in\n    tag_72:\n        /* \"#utility.yul\":886:949   */\n      swap2\n      pop\n        /* \"#utility.yul\":843:959   */\n      pop\n        /* \"#utility.yul\":646:966   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":972:1232   */\n    tag_26:\n      0x00\n        /* \"#utility.yul\":1080:1082   */\n      0x20\n        /* \"#utility.yul\":1068:1077   */\n      dup3\n        /* \"#utility.yul\":1059:1066   */\n      dup5\n        /* \"#utility.yul\":1055:1078   */\n      sub\n        /* \"#utility.yul\":1051:1083   */\n      slt\n        /* \"#utility.yul\":1048:1050   */\n      iszero\n      tag_74\n      jumpi\n        /* \"#utility.yul\":1096:1097   */\n      0x00\n        /* \"#utility.yul\":1093:1094   */\n      dup1\n        /* \"#utility.yul\":1086:1098   */\n      revert\n        /* \"#utility.yul\":1048:1050   */\n    tag_74:\n        /* \"#utility.yul\":1138:1139   */\n      0x00\n        /* \"#utility.yul\":1162:1215   */\n      tag_75\n        /* \"#utility.yul\":1207:1214   */\n      dup5\n        /* \"#utility.yul\":1198:1204   */\n      dup3\n        /* \"#utility.yul\":1187:1196   */\n      dup6\n        /* \"#utility.yul\":1183:1205   */\n      add\n        /* \"#utility.yul\":1162:1215   */\n      tag_62\n      jump\t// in\n    tag_75:\n        /* \"#utility.yul\":1152:1215   */\n      swap2\n      pop\n        /* \"#utility.yul\":1110:1225   */\n      pop\n        /* \"#utility.yul\":1038:1232   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1238:1356   */\n    tag_76:\n        /* \"#utility.yul\":1325:1349   */\n      tag_78\n        /* \"#utility.yul\":1343:1348   */\n      dup2\n        /* \"#utility.yul\":1325:1349   */\n      tag_79\n      jump\t// in\n    tag_78:\n        /* \"#utility.yul\":1320:1323   */\n      dup3\n        /* \"#utility.yul\":1313:1350   */\n      mstore\n        /* \"#utility.yul\":1303:1356   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1362:1681   */\n    tag_80:\n      0x00\n        /* \"#utility.yul\":1525:1592   */\n      tag_82\n        /* \"#utility.yul\":1589:1591   */\n      0x15\n        /* \"#utility.yul\":1584:1587   */\n      dup4\n        /* \"#utility.yul\":1525:1592   */\n      tag_83\n      jump\t// in\n    tag_82:\n        /* \"#utility.yul\":1518:1592   */\n      swap2\n      pop\n        /* \"#utility.yul\":1622:1645   */\n      0x4f4e4c595f454d495353494f4e5f4d414e414745520000000000000000000000\n        /* \"#utility.yul\":1618:1619   */\n      0x00\n        /* \"#utility.yul\":1613:1616   */\n      dup4\n        /* \"#utility.yul\":1609:1620   */\n      add\n        /* \"#utility.yul\":1602:1646   */\n      mstore\n        /* \"#utility.yul\":1672:1674   */\n      0x20\n        /* \"#utility.yul\":1667:1670   */\n      dup3\n        /* \"#utility.yul\":1663:1675   */\n      add\n        /* \"#utility.yul\":1656:1675   */\n      swap1\n      pop\n        /* \"#utility.yul\":1508:1681   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1687:1805   */\n    tag_84:\n        /* \"#utility.yul\":1774:1798   */\n      tag_86\n        /* \"#utility.yul\":1792:1797   */\n      dup2\n        /* \"#utility.yul\":1774:1798   */\n      tag_87\n      jump\t// in\n    tag_86:\n        /* \"#utility.yul\":1769:1772   */\n      dup3\n        /* \"#utility.yul\":1762:1799   */\n      mstore\n        /* \"#utility.yul\":1752:1805   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1811:1929   */\n    tag_88:\n        /* \"#utility.yul\":1898:1922   */\n      tag_90\n        /* \"#utility.yul\":1916:1921   */\n      dup2\n        /* \"#utility.yul\":1898:1922   */\n      tag_91\n      jump\t// in\n    tag_90:\n        /* \"#utility.yul\":1893:1896   */\n      dup3\n        /* \"#utility.yul\":1886:1923   */\n      mstore\n        /* \"#utility.yul\":1876:1929   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1935:2050   */\n    tag_92:\n        /* \"#utility.yul\":2020:2043   */\n      tag_94\n        /* \"#utility.yul\":2037:2042   */\n      dup2\n        /* \"#utility.yul\":2020:2043   */\n      tag_95\n      jump\t// in\n    tag_94:\n        /* \"#utility.yul\":2015:2018   */\n      dup3\n        /* \"#utility.yul\":2008:2044   */\n      mstore\n        /* \"#utility.yul\":1998:2050   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2056:2168   */\n    tag_96:\n        /* \"#utility.yul\":2139:2161   */\n      tag_98\n        /* \"#utility.yul\":2155:2160   */\n      dup2\n        /* \"#utility.yul\":2139:2161   */\n      tag_99\n      jump\t// in\n    tag_98:\n        /* \"#utility.yul\":2134:2137   */\n      dup3\n        /* \"#utility.yul\":2127:2162   */\n      mstore\n        /* \"#utility.yul\":2117:2168   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2174:2396   */\n    tag_38:\n      0x00\n        /* \"#utility.yul\":2305:2307   */\n      0x20\n        /* \"#utility.yul\":2294:2303   */\n      dup3\n        /* \"#utility.yul\":2290:2308   */\n      add\n        /* \"#utility.yul\":2282:2308   */\n      swap1\n      pop\n        /* \"#utility.yul\":2318:2389   */\n      tag_101\n        /* \"#utility.yul\":2386:2387   */\n      0x00\n        /* \"#utility.yul\":2375:2384   */\n      dup4\n        /* \"#utility.yul\":2371:2388   */\n      add\n        /* \"#utility.yul\":2362:2368   */\n      dup5\n        /* \"#utility.yul\":2318:2389   */\n      tag_76\n      jump\t// in\n    tag_101:\n        /* \"#utility.yul\":2272:2396   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2402:2821   */\n    tag_52:\n      0x00\n        /* \"#utility.yul\":2606:2608   */\n      0x20\n        /* \"#utility.yul\":2595:2604   */\n      dup3\n        /* \"#utility.yul\":2591:2609   */\n      add\n        /* \"#utility.yul\":2583:2609   */\n      swap1\n      pop\n        /* \"#utility.yul\":2655:2664   */\n      dup2\n        /* \"#utility.yul\":2649:2653   */\n      dup2\n        /* \"#utility.yul\":2645:2665   */\n      sub\n        /* \"#utility.yul\":2641:2642   */\n      0x00\n        /* \"#utility.yul\":2630:2639   */\n      dup4\n        /* \"#utility.yul\":2626:2643   */\n      add\n        /* \"#utility.yul\":2619:2666   */\n      mstore\n        /* \"#utility.yul\":2683:2814   */\n      tag_103\n        /* \"#utility.yul\":2809:2813   */\n      dup2\n        /* \"#utility.yul\":2683:2814   */\n      tag_80\n      jump\t// in\n    tag_103:\n        /* \"#utility.yul\":2675:2814   */\n      swap1\n      pop\n        /* \"#utility.yul\":2573:2821   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2827:3265   */\n    tag_46:\n      0x00\n        /* \"#utility.yul\":3012:3014   */\n      0x60\n        /* \"#utility.yul\":3001:3010   */\n      dup3\n        /* \"#utility.yul\":2997:3015   */\n      add\n        /* \"#utility.yul\":2989:3015   */\n      swap1\n      pop\n        /* \"#utility.yul\":3025:3096   */\n      tag_105\n        /* \"#utility.yul\":3093:3094   */\n      0x00\n        /* \"#utility.yul\":3082:3091   */\n      dup4\n        /* \"#utility.yul\":3078:3095   */\n      add\n        /* \"#utility.yul\":3069:3075   */\n      dup7\n        /* \"#utility.yul\":3025:3096   */\n      tag_84\n      jump\t// in\n    tag_105:\n        /* \"#utility.yul\":3106:3178   */\n      tag_106\n        /* \"#utility.yul\":3174:3176   */\n      0x20\n        /* \"#utility.yul\":3163:3172   */\n      dup4\n        /* \"#utility.yul\":3159:3177   */\n      add\n        /* \"#utility.yul\":3150:3156   */\n      dup6\n        /* \"#utility.yul\":3106:3178   */\n      tag_84\n      jump\t// in\n    tag_106:\n        /* \"#utility.yul\":3188:3258   */\n      tag_107\n        /* \"#utility.yul\":3254:3256   */\n      0x40\n        /* \"#utility.yul\":3243:3252   */\n      dup4\n        /* \"#utility.yul\":3239:3257   */\n      add\n        /* \"#utility.yul\":3230:3236   */\n      dup5\n        /* \"#utility.yul\":3188:3258   */\n      tag_92\n      jump\t// in\n    tag_107:\n        /* \"#utility.yul\":2979:3265   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3271:3493   */\n    tag_23:\n      0x00\n        /* \"#utility.yul\":3402:3404   */\n      0x20\n        /* \"#utility.yul\":3391:3400   */\n      dup3\n        /* \"#utility.yul\":3387:3405   */\n      add\n        /* \"#utility.yul\":3379:3405   */\n      swap1\n      pop\n        /* \"#utility.yul\":3415:3486   */\n      tag_109\n        /* \"#utility.yul\":3483:3484   */\n      0x00\n        /* \"#utility.yul\":3472:3481   */\n      dup4\n        /* \"#utility.yul\":3468:3485   */\n      add\n        /* \"#utility.yul\":3459:3465   */\n      dup5\n        /* \"#utility.yul\":3415:3486   */\n      tag_88\n      jump\t// in\n    tag_109:\n        /* \"#utility.yul\":3369:3493   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3499:3941   */\n    tag_17:\n      0x00\n        /* \"#utility.yul\":3686:3688   */\n      0x60\n        /* \"#utility.yul\":3675:3684   */\n      dup3\n        /* \"#utility.yul\":3671:3689   */\n      add\n        /* \"#utility.yul\":3663:3689   */\n      swap1\n      pop\n        /* \"#utility.yul\":3699:3770   */\n      tag_111\n        /* \"#utility.yul\":3767:3768   */\n      0x00\n        /* \"#utility.yul\":3756:3765   */\n      dup4\n        /* \"#utility.yul\":3752:3769   */\n      add\n        /* \"#utility.yul\":3743:3749   */\n      dup7\n        /* \"#utility.yul\":3699:3770   */\n      tag_88\n      jump\t// in\n    tag_111:\n        /* \"#utility.yul\":3780:3852   */\n      tag_112\n        /* \"#utility.yul\":3848:3850   */\n      0x20\n        /* \"#utility.yul\":3837:3846   */\n      dup4\n        /* \"#utility.yul\":3833:3851   */\n      add\n        /* \"#utility.yul\":3824:3830   */\n      dup6\n        /* \"#utility.yul\":3780:3852   */\n      tag_88\n      jump\t// in\n    tag_112:\n        /* \"#utility.yul\":3862:3934   */\n      tag_113\n        /* \"#utility.yul\":3930:3932   */\n      0x40\n        /* \"#utility.yul\":3919:3928   */\n      dup4\n        /* \"#utility.yul\":3915:3933   */\n      add\n        /* \"#utility.yul\":3906:3912   */\n      dup5\n        /* \"#utility.yul\":3862:3934   */\n      tag_88\n      jump\t// in\n    tag_113:\n        /* \"#utility.yul\":3653:3941   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3947:4161   */\n    tag_34:\n      0x00\n        /* \"#utility.yul\":4074:4076   */\n      0x20\n        /* \"#utility.yul\":4063:4072   */\n      dup3\n        /* \"#utility.yul\":4059:4077   */\n      add\n        /* \"#utility.yul\":4051:4077   */\n      swap1\n      pop\n        /* \"#utility.yul\":4087:4154   */\n      tag_115\n        /* \"#utility.yul\":4151:4152   */\n      0x00\n        /* \"#utility.yul\":4140:4149   */\n      dup4\n        /* \"#utility.yul\":4136:4153   */\n      add\n        /* \"#utility.yul\":4127:4133   */\n      dup5\n        /* \"#utility.yul\":4087:4154   */\n      tag_96\n      jump\t// in\n    tag_115:\n        /* \"#utility.yul\":4041:4161   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4167:4336   */\n    tag_83:\n      0x00\n        /* \"#utility.yul\":4285:4291   */\n      dup3\n        /* \"#utility.yul\":4280:4283   */\n      dup3\n        /* \"#utility.yul\":4273:4292   */\n      mstore\n        /* \"#utility.yul\":4325:4329   */\n      0x20\n        /* \"#utility.yul\":4320:4323   */\n      dup3\n        /* \"#utility.yul\":4316:4330   */\n      add\n        /* \"#utility.yul\":4301:4330   */\n      swap1\n      pop\n        /* \"#utility.yul\":4263:4336   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4342:4438   */\n    tag_79:\n      0x00\n        /* \"#utility.yul\":4408:4432   */\n      tag_118\n        /* \"#utility.yul\":4426:4431   */\n      dup3\n        /* \"#utility.yul\":4408:4432   */\n      tag_119\n      jump\t// in\n    tag_118:\n        /* \"#utility.yul\":4397:4432   */\n      swap1\n      pop\n        /* \"#utility.yul\":4387:4438   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4444:4556   */\n    tag_87:\n      0x00\n        /* \"#utility.yul\":4521:4549   */\n      0xffffffffffffffffffffffffff\n        /* \"#utility.yul\":4514:4519   */\n      dup3\n        /* \"#utility.yul\":4510:4550   */\n      and\n        /* \"#utility.yul\":4499:4550   */\n      swap1\n      pop\n        /* \"#utility.yul\":4489:4556   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4562:4688   */\n    tag_119:\n      0x00\n        /* \"#utility.yul\":4639:4681   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":4632:4637   */\n      dup3\n        /* \"#utility.yul\":4628:4682   */\n      and\n        /* \"#utility.yul\":4617:4682   */\n      swap1\n      pop\n        /* \"#utility.yul\":4607:4688   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4694:4771   */\n    tag_91:\n      0x00\n        /* \"#utility.yul\":4760:4765   */\n      dup2\n        /* \"#utility.yul\":4749:4765   */\n      swap1\n      pop\n        /* \"#utility.yul\":4739:4771   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4777:4872   */\n    tag_95:\n      0x00\n        /* \"#utility.yul\":4853:4865   */\n      0xffffffffff\n        /* \"#utility.yul\":4846:4851   */\n      dup3\n        /* \"#utility.yul\":4842:4866   */\n      and\n        /* \"#utility.yul\":4831:4866   */\n      swap1\n      pop\n        /* \"#utility.yul\":4821:4872   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4878:4964   */\n    tag_99:\n      0x00\n        /* \"#utility.yul\":4953:4957   */\n      0xff\n        /* \"#utility.yul\":4946:4951   */\n      dup3\n        /* \"#utility.yul\":4942:4958   */\n      and\n        /* \"#utility.yul\":4931:4958   */\n      swap1\n      pop\n        /* \"#utility.yul\":4921:4964   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4970:5092   */\n    tag_61:\n        /* \"#utility.yul\":5043:5067   */\n      tag_126\n        /* \"#utility.yul\":5061:5066   */\n      dup2\n        /* \"#utility.yul\":5043:5067   */\n      tag_79\n      jump\t// in\n    tag_126:\n        /* \"#utility.yul\":5036:5041   */\n      dup2\n        /* \"#utility.yul\":5033:5068   */\n      eq\n        /* \"#utility.yul\":5023:5025   */\n      tag_127\n      jumpi\n        /* \"#utility.yul\":5082:5083   */\n      0x00\n        /* \"#utility.yul\":5079:5080   */\n      dup1\n        /* \"#utility.yul\":5072:5084   */\n      revert\n        /* \"#utility.yul\":5023:5025   */\n    tag_127:\n        /* \"#utility.yul\":5013:5092   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5098:5220   */\n    tag_65:\n        /* \"#utility.yul\":5171:5195   */\n      tag_129\n        /* \"#utility.yul\":5189:5194   */\n      dup2\n        /* \"#utility.yul\":5171:5195   */\n      tag_91\n      jump\t// in\n    tag_129:\n        /* \"#utility.yul\":5164:5169   */\n      dup2\n        /* \"#utility.yul\":5161:5196   */\n      eq\n        /* \"#utility.yul\":5151:5153   */\n      tag_130\n      jumpi\n        /* \"#utility.yul\":5210:5211   */\n      0x00\n        /* \"#utility.yul\":5207:5208   */\n      dup1\n        /* \"#utility.yul\":5200:5212   */\n      revert\n        /* \"#utility.yul\":5151:5153   */\n    tag_130:\n        /* \"#utility.yul\":5141:5220   */\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220f8e26c54eb4ad9eb64aa27816e54e81760b86b9a85fe40d049a34279bfa24d9064736f6c63430007050033\n}\n",
						"bytecode": {
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:803:4",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "70:80:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "80:22:4",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "95:6:4"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "89:5:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "89:13:4"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "80:5:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "138:5:4"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "111:26:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "111:33:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "111:33:4"
														}
													]
												},
												"name": "abi_decode_t_address_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "48:6:4",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "56:3:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "64:5:4",
														"type": ""
													}
												],
												"src": "7:143:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "233:205:4",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "279:16:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "288:1:4",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "291:1:4",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "281:6:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "281:12:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "281:12:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "254:7:4"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "263:9:4"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "250:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "250:23:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "275:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "246:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "246:32:4"
															},
															"nodeType": "YulIf",
															"src": "243:2:4"
														},
														{
															"nodeType": "YulBlock",
															"src": "305:126:4",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "319:15:4",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "333:1:4",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "323:6:4",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "347:74:4",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "393:9:4"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "404:6:4"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "389:3:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "389:22:4"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "413:7:4"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "357:31:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "357:64:4"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "347:6:4"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "203:9:4",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "214:7:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "226:6:4",
														"type": ""
													}
												],
												"src": "156:282:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "489:51:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "499:35:4",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "528:5:4"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "510:17:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "510:24:4"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "499:7:4"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "471:5:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "481:7:4",
														"type": ""
													}
												],
												"src": "444:96:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "591:81:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "601:65:4",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "616:5:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "623:42:4",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "612:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "612:54:4"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "601:7:4"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "573:5:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "583:7:4",
														"type": ""
													}
												],
												"src": "546:126:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "721:79:4",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "778:16:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "787:1:4",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "790:1:4",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "780:6:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "780:12:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "780:12:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "744:5:4"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "769:5:4"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nodeType": "YulIdentifier",
																					"src": "751:17:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "751:24:4"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "741:2:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "741:35:4"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "734:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "734:43:4"
															},
															"nodeType": "YulIf",
															"src": "731:2:4"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "714:5:4",
														"type": ""
													}
												],
												"src": "678:122:4"
											}
										]
									},
									"contents": "{\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n\n        {\n            let offset := 0\n            value0 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n}\n",
									"id": 4,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "60a060405234801561001057600080fd5b5060405161092238038061092283398181016040528101906100329190610084565b8073ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff1660601b81525050506100f6565b60008151905061007e816100df565b92915050565b60006020828403121561009657600080fd5b60006100a48482850161006f565b91505092915050565b60006100b8826100bf565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6100e8816100ad565b81146100f357600080fd5b50565b60805160601c61080a610118600039806103895280610467525061080a6000f3fe608060405234801561001057600080fd5b50600436106100885760003560e01c8063aaf5eb681161005b578063aaf5eb6814610129578063cbcbb50714610147578063cc69afec14610165578063f11b81881461018357610088565b80631652e7b71461008d5780633373ee4c146100bf57806339ccbdd3146100ef578063919cd40f1461010b575b600080fd5b6100a760048036038101906100a2919061052a565b6101b5565b6040516100b6939291906106d0565b60405180910390f35b6100d960048036038101906100d49190610553565b6102fe565b6040516100e691906106b5565b60405180910390f35b6101096004803603810190610104919061058f565b610387565b005b610113610456565b60405161012091906106b5565b60405180910390f35b610131610460565b60405161013e9190610707565b60405180910390f35b61014f610465565b60405161015c9190610643565b60405180910390f35b61016d610489565b60405161017a91906106b5565b60405180910390f35b61019d6004803603810190610198919061052a565b610493565b6040516101ac9392919061067e565b60405180910390f35b60008060008060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600001600d9054906101000a90046cffffffffffffffffffffffffff166000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160009054906101000a90046cffffffffffffffffffffffffff166000808773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600001601a9054906101000a900464ffffffffff16826cffffffffffffffffffffffffff169250816cffffffffffffffffffffffffff1691508064ffffffffff1690509250925092509193909250565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610415576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161040c9061065e565b60405180910390fd5b806001819055507f1cc1849a6602c3e91f2088cadea4381cc5717f2f28584197060ed2ebb434c16f8160405161044b91906106b5565b60405180910390a150565b6000600154905090565b601281565b7f000000000000000000000000000000000000000000000000000000000000000081565b6000600154905090565b60006020528060005260406000206000915090508060000160009054906101000a90046cffffffffffffffffffffffffff169080600001600d9054906101000a90046cffffffffffffffffffffffffff169080600001601a9054906101000a900464ffffffffff16905083565b60008135905061050f816107a6565b92915050565b600081359050610524816107bd565b92915050565b60006020828403121561053c57600080fd5b600061054a84828501610500565b91505092915050565b6000806040838503121561056657600080fd5b600061057485828601610500565b925050602061058585828601610500565b9150509250929050565b6000602082840312156105a157600080fd5b60006105af84828501610515565b91505092915050565b6105c181610733565b82525050565b60006105d4601583610722565b91507f4f4e4c595f454d495353494f4e5f4d414e4147455200000000000000000000006000830152602082019050919050565b61061081610745565b82525050565b61061f8161077e565b82525050565b61062e81610788565b82525050565b61063d81610799565b82525050565b600060208201905061065860008301846105b8565b92915050565b60006020820190508181036000830152610677816105c7565b9050919050565b60006060820190506106936000830186610607565b6106a06020830185610607565b6106ad6040830184610625565b949350505050565b60006020820190506106ca6000830184610616565b92915050565b60006060820190506106e56000830186610616565b6106f26020830185610616565b6106ff6040830184610616565b949350505050565b600060208201905061071c6000830184610634565b92915050565b600082825260208201905092915050565b600061073e8261075e565b9050919050565b60006cffffffffffffffffffffffffff82169050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600064ffffffffff82169050919050565b600060ff82169050919050565b6107af81610733565b81146107ba57600080fd5b50565b6107c68161077e565b81146107d157600080fd5b5056fea2646970667358221220f8e26c54eb4ad9eb64aa27816e54e81760b86b9a85fe40d049a34279bfa24d9064736f6c63430007050033",
							"opcodes": "PUSH1 0xA0 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x922 CODESIZE SUB DUP1 PUSH2 0x922 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH2 0x32 SWAP2 SWAP1 PUSH2 0x84 JUMP JUMPDEST DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x80 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x60 SHL DUP2 MSTORE POP POP POP PUSH2 0xF6 JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x7E DUP2 PUSH2 0xDF JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x96 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xA4 DUP5 DUP3 DUP6 ADD PUSH2 0x6F JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xB8 DUP3 PUSH2 0xBF JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xE8 DUP2 PUSH2 0xAD JUMP JUMPDEST DUP2 EQ PUSH2 0xF3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x80 MLOAD PUSH1 0x60 SHR PUSH2 0x80A PUSH2 0x118 PUSH1 0x0 CODECOPY DUP1 PUSH2 0x389 MSTORE DUP1 PUSH2 0x467 MSTORE POP PUSH2 0x80A PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x88 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xAAF5EB68 GT PUSH2 0x5B JUMPI DUP1 PUSH4 0xAAF5EB68 EQ PUSH2 0x129 JUMPI DUP1 PUSH4 0xCBCBB507 EQ PUSH2 0x147 JUMPI DUP1 PUSH4 0xCC69AFEC EQ PUSH2 0x165 JUMPI DUP1 PUSH4 0xF11B8188 EQ PUSH2 0x183 JUMPI PUSH2 0x88 JUMP JUMPDEST DUP1 PUSH4 0x1652E7B7 EQ PUSH2 0x8D JUMPI DUP1 PUSH4 0x3373EE4C EQ PUSH2 0xBF JUMPI DUP1 PUSH4 0x39CCBDD3 EQ PUSH2 0xEF JUMPI DUP1 PUSH4 0x919CD40F EQ PUSH2 0x10B JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xA7 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xA2 SWAP2 SWAP1 PUSH2 0x52A JUMP JUMPDEST PUSH2 0x1B5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xB6 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x6D0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xD9 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xD4 SWAP2 SWAP1 PUSH2 0x553 JUMP JUMPDEST PUSH2 0x2FE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xE6 SWAP2 SWAP1 PUSH2 0x6B5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x109 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x104 SWAP2 SWAP1 PUSH2 0x58F JUMP JUMPDEST PUSH2 0x387 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x113 PUSH2 0x456 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x120 SWAP2 SWAP1 PUSH2 0x6B5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x131 PUSH2 0x460 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x13E SWAP2 SWAP1 PUSH2 0x707 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x14F PUSH2 0x465 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x15C SWAP2 SWAP1 PUSH2 0x643 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x16D PUSH2 0x489 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x17A SWAP2 SWAP1 PUSH2 0x6B5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x19D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x198 SWAP2 SWAP1 PUSH2 0x52A JUMP JUMPDEST PUSH2 0x493 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1AC SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x67E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0xD SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH13 0xFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH13 0xFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x1A SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH5 0xFFFFFFFFFF AND DUP3 PUSH13 0xFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP3 POP DUP2 PUSH13 0xFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP2 POP DUP1 PUSH5 0xFFFFFFFFFF AND SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 POP SWAP2 SWAP4 SWAP1 SWAP3 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x415 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x40C SWAP1 PUSH2 0x65E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x1 DUP2 SWAP1 SSTORE POP PUSH32 0x1CC1849A6602C3E91F2088CADEA4381CC5717F2F28584197060ED2EBB434C16F DUP2 PUSH1 0x40 MLOAD PUSH2 0x44B SWAP2 SWAP1 PUSH2 0x6B5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x12 DUP2 JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP DUP1 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH13 0xFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP1 PUSH1 0x0 ADD PUSH1 0xD SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH13 0xFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP1 PUSH1 0x0 ADD PUSH1 0x1A SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH5 0xFFFFFFFFFF AND SWAP1 POP DUP4 JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x50F DUP2 PUSH2 0x7A6 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x524 DUP2 PUSH2 0x7BD JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x53C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x54A DUP5 DUP3 DUP6 ADD PUSH2 0x500 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x566 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x574 DUP6 DUP3 DUP7 ADD PUSH2 0x500 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x585 DUP6 DUP3 DUP7 ADD PUSH2 0x500 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x5A1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x5AF DUP5 DUP3 DUP6 ADD PUSH2 0x515 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x5C1 DUP2 PUSH2 0x733 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5D4 PUSH1 0x15 DUP4 PUSH2 0x722 JUMP JUMPDEST SWAP2 POP PUSH32 0x4F4E4C595F454D495353494F4E5F4D414E414745520000000000000000000000 PUSH1 0x0 DUP4 ADD MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x610 DUP2 PUSH2 0x745 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x61F DUP2 PUSH2 0x77E JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x62E DUP2 PUSH2 0x788 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x63D DUP2 PUSH2 0x799 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x658 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x5B8 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x677 DUP2 PUSH2 0x5C7 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x693 PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x607 JUMP JUMPDEST PUSH2 0x6A0 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x607 JUMP JUMPDEST PUSH2 0x6AD PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x625 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x6CA PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x616 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x6E5 PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x616 JUMP JUMPDEST PUSH2 0x6F2 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x616 JUMP JUMPDEST PUSH2 0x6FF PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x616 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x71C PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x634 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x73E DUP3 PUSH2 0x75E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH13 0xFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH5 0xFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x7AF DUP2 PUSH2 0x733 JUMP JUMPDEST DUP2 EQ PUSH2 0x7BA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x7C6 DUP2 PUSH2 0x77E JUMP JUMPDEST DUP2 EQ PUSH2 0x7D1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xF8 0xE2 PUSH13 0x54EB4AD9EB64AA27816E54E817 PUSH1 0xB8 PUSH12 0x9A85FE40D049A34279BFA24D SWAP1 PUSH5 0x736F6C6343 STOP SMOD SDIV STOP CALLER ",
							"sourceMap": "449:8422:0:-:0;;;1004:84;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1067:15;1048:34;;;;;;;;;;;;1004:84;449:8422;;7:143:4;;95:6;89:13;80:22;;111:33;138:5;111:33;:::i;:::-;70:80;;;;:::o;156:282::-;;275:2;263:9;254:7;250:23;246:32;243:2;;;291:1;288;281:12;243:2;333:1;357:64;413:7;404:6;393:9;389:22;357:64;:::i;:::-;347:74;;305:126;233:205;;;;:::o;444:96::-;;510:24;528:5;510:24;:::i;:::-;499:35;;489:51;;;:::o;546:126::-;;623:42;616:5;612:54;601:65;;591:81;;;:::o;678:122::-;751:24;769:5;751:24;:::i;:::-;744:5;741:35;731:2;;790:1;787;780:12;731:2;721:79;:::o;449:8422:0:-;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:5223:4",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "59:87:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "69:29:4",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "91:6:4"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "78:12:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "78:20:4"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "69:5:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "134:5:4"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "107:26:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "107:33:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "107:33:4"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "37:6:4",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "45:3:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "53:5:4",
														"type": ""
													}
												],
												"src": "7:139:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "204:87:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "214:29:4",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "236:6:4"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "223:12:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "223:20:4"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "214:5:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "279:5:4"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "252:26:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "252:33:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "252:33:4"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "182:6:4",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "190:3:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "198:5:4",
														"type": ""
													}
												],
												"src": "152:139:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "363:194:4",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "409:16:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "418:1:4",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "421:1:4",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "411:6:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "411:12:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "411:12:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "384:7:4"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "393:9:4"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "380:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "380:23:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "405:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "376:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "376:32:4"
															},
															"nodeType": "YulIf",
															"src": "373:2:4"
														},
														{
															"nodeType": "YulBlock",
															"src": "435:115:4",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "449:15:4",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "463:1:4",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "453:6:4",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "477:63:4",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "512:9:4"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "523:6:4"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "508:3:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "508:22:4"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "532:7:4"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "487:20:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "487:53:4"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "477:6:4"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "333:9:4",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "344:7:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "356:6:4",
														"type": ""
													}
												],
												"src": "297:260:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "646:320:4",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "692:16:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "701:1:4",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "704:1:4",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "694:6:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "694:12:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "694:12:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "667:7:4"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "676:9:4"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "663:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "663:23:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "688:2:4",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "659:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "659:32:4"
															},
															"nodeType": "YulIf",
															"src": "656:2:4"
														},
														{
															"nodeType": "YulBlock",
															"src": "718:115:4",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "732:15:4",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "746:1:4",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "736:6:4",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "760:63:4",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "795:9:4"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "806:6:4"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "791:3:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "791:22:4"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "815:7:4"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "770:20:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "770:53:4"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "760:6:4"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "843:116:4",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "857:16:4",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "871:2:4",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "861:6:4",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "886:63:4",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "921:9:4"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "932:6:4"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "917:3:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "917:22:4"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "941:7:4"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "896:20:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "896:53:4"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "886:6:4"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "608:9:4",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "619:7:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "631:6:4",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "639:6:4",
														"type": ""
													}
												],
												"src": "563:403:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1038:194:4",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1084:16:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1093:1:4",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1096:1:4",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1086:6:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1086:12:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1086:12:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1059:7:4"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1068:9:4"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1055:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1055:23:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1080:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1051:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1051:32:4"
															},
															"nodeType": "YulIf",
															"src": "1048:2:4"
														},
														{
															"nodeType": "YulBlock",
															"src": "1110:115:4",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1124:15:4",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1138:1:4",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1128:6:4",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1152:63:4",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1187:9:4"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1198:6:4"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1183:3:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1183:22:4"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1207:7:4"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "1162:20:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1162:53:4"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "1152:6:4"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1008:9:4",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1019:7:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1031:6:4",
														"type": ""
													}
												],
												"src": "972:260:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1303:53:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1320:3:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1343:5:4"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "1325:17:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1325:24:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1313:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1313:37:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1313:37:4"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1291:5:4",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "1298:3:4",
														"type": ""
													}
												],
												"src": "1238:118:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1508:173:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1518:74:4",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1584:3:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1589:2:4",
																		"type": "",
																		"value": "21"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "1525:58:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1525:67:4"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "1518:3:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "1613:3:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1618:1:4",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1609:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1609:11:4"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "1622:23:4",
																		"type": "",
																		"value": "ONLY_EMISSION_MANAGER"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1602:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1602:44:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1602:44:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1656:19:4",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1667:3:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1672:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1663:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1663:12:4"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "1656:3:4"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_a28d34ff463a8cc689c6ec4b8c995983f85d0a40987242bc4cc3cec37303c18e_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "1496:3:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "1504:3:4",
														"type": ""
													}
												],
												"src": "1362:319:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1752:53:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1769:3:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1792:5:4"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint104",
																			"nodeType": "YulIdentifier",
																			"src": "1774:17:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1774:24:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1762:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1762:37:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1762:37:4"
														}
													]
												},
												"name": "abi_encode_t_uint104_to_t_uint104_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1740:5:4",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "1747:3:4",
														"type": ""
													}
												],
												"src": "1687:118:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1876:53:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1893:3:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1916:5:4"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "1898:17:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1898:24:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1886:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1886:37:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1886:37:4"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1864:5:4",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "1871:3:4",
														"type": ""
													}
												],
												"src": "1811:118:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1998:52:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2015:3:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2037:5:4"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint40",
																			"nodeType": "YulIdentifier",
																			"src": "2020:16:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2020:23:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2008:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2008:36:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2008:36:4"
														}
													]
												},
												"name": "abi_encode_t_uint40_to_t_uint40_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1986:5:4",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "1993:3:4",
														"type": ""
													}
												],
												"src": "1935:115:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2117:51:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2134:3:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2155:5:4"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint8",
																			"nodeType": "YulIdentifier",
																			"src": "2139:15:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2139:22:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2127:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2127:35:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2127:35:4"
														}
													]
												},
												"name": "abi_encode_t_uint8_to_t_uint8_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2105:5:4",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "2112:3:4",
														"type": ""
													}
												],
												"src": "2056:112:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2272:124:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2282:26:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2294:9:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2305:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2290:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2290:18:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2282:4:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "2362:6:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2375:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2386:1:4",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2371:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2371:17:4"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "2318:43:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2318:71:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2318:71:4"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2244:9:4",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2256:6:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2267:4:4",
														"type": ""
													}
												],
												"src": "2174:222:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2573:248:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2583:26:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2595:9:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2606:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2591:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2591:18:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2583:4:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2630:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2641:1:4",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2626:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2626:17:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "2649:4:4"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2655:9:4"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2645:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2645:20:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2619:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2619:47:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2619:47:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2675:139:4",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "2809:4:4"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_a28d34ff463a8cc689c6ec4b8c995983f85d0a40987242bc4cc3cec37303c18e_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "2683:124:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2683:131:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2675:4:4"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_a28d34ff463a8cc689c6ec4b8c995983f85d0a40987242bc4cc3cec37303c18e__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2553:9:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2568:4:4",
														"type": ""
													}
												],
												"src": "2402:419:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2979:286:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2989:26:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3001:9:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3012:2:4",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2997:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2997:18:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2989:4:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "3069:6:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3082:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3093:1:4",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3078:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3078:17:4"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint104_to_t_uint104_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "3025:43:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "3025:71:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3025:71:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "3150:6:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3163:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3174:2:4",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3159:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3159:18:4"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint104_to_t_uint104_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "3106:43:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "3106:72:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3106:72:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "3230:6:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3243:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3254:2:4",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3239:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3239:18:4"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint40_to_t_uint40_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "3188:41:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "3188:70:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3188:70:4"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint104_t_uint104_t_uint40__to_t_uint104_t_uint104_t_uint40__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2935:9:4",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "2947:6:4",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "2955:6:4",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2963:6:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2974:4:4",
														"type": ""
													}
												],
												"src": "2827:438:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3369:124:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3379:26:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3391:9:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3402:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3387:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "3387:18:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3379:4:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "3459:6:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3472:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3483:1:4",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3468:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3468:17:4"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "3415:43:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "3415:71:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3415:71:4"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3341:9:4",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3353:6:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3364:4:4",
														"type": ""
													}
												],
												"src": "3271:222:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3653:288:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3663:26:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3675:9:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3686:2:4",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3671:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "3671:18:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3663:4:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "3743:6:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3756:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3767:1:4",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3752:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3752:17:4"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "3699:43:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "3699:71:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3699:71:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "3824:6:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3837:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3848:2:4",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3833:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3833:18:4"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "3780:43:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "3780:72:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3780:72:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "3906:6:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3919:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3930:2:4",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3915:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3915:18:4"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "3862:43:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "3862:72:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3862:72:4"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3609:9:4",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "3621:6:4",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "3629:6:4",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3637:6:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3648:4:4",
														"type": ""
													}
												],
												"src": "3499:442:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4041:120:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4051:26:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4063:9:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4074:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4059:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "4059:18:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4051:4:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "4127:6:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4140:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4151:1:4",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4136:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4136:17:4"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint8_to_t_uint8_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "4087:39:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "4087:67:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4087:67:4"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4013:9:4",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4025:6:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4036:4:4",
														"type": ""
													}
												],
												"src": "3947:214:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4263:73:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4280:3:4"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "4285:6:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4273:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "4273:19:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4273:19:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4301:29:4",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4320:3:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4325:4:4",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4316:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "4316:14:4"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "4301:11:4"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "4235:3:4",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "4240:6:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "4251:11:4",
														"type": ""
													}
												],
												"src": "4167:169:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4387:51:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4397:35:4",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "4426:5:4"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "4408:17:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "4408:24:4"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "4397:7:4"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4369:5:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "4379:7:4",
														"type": ""
													}
												],
												"src": "4342:96:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4489:67:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4499:51:4",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "4514:5:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4521:28:4",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "4510:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "4510:40:4"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "4499:7:4"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint104",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4471:5:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "4481:7:4",
														"type": ""
													}
												],
												"src": "4444:112:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4607:81:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4617:65:4",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "4632:5:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4639:42:4",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "4628:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "4628:54:4"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "4617:7:4"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4589:5:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "4599:7:4",
														"type": ""
													}
												],
												"src": "4562:126:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4739:32:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4749:16:4",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "4760:5:4"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "4749:7:4"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4721:5:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "4731:7:4",
														"type": ""
													}
												],
												"src": "4694:77:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4821:51:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4831:35:4",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "4846:5:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4853:12:4",
																		"type": "",
																		"value": "0xffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "4842:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "4842:24:4"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "4831:7:4"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint40",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4803:5:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "4813:7:4",
														"type": ""
													}
												],
												"src": "4777:95:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4921:43:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4931:27:4",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "4946:5:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4953:4:4",
																		"type": "",
																		"value": "0xff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "4942:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "4942:16:4"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "4931:7:4"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4903:5:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "4913:7:4",
														"type": ""
													}
												],
												"src": "4878:86:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5013:79:4",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5070:16:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5079:1:4",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5082:1:4",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "5072:6:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5072:12:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5072:12:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "5036:5:4"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "5061:5:4"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nodeType": "YulIdentifier",
																					"src": "5043:17:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5043:24:4"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "5033:2:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5033:35:4"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "5026:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "5026:43:4"
															},
															"nodeType": "YulIf",
															"src": "5023:2:4"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "5006:5:4",
														"type": ""
													}
												],
												"src": "4970:122:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5141:79:4",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5198:16:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5207:1:4",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5210:1:4",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "5200:6:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5200:12:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5200:12:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "5164:5:4"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "5189:5:4"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "5171:17:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5171:24:4"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "5161:2:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5161:35:4"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "5154:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "5154:43:4"
															},
															"nodeType": "YulIf",
															"src": "5151:2:4"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "5134:5:4",
														"type": ""
													}
												],
												"src": "5098:122:4"
											}
										]
									},
									"contents": "{\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n\n        {\n            let offset := 0\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n\n        {\n            let offset := 0\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n            let offset := 32\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n\n        {\n            let offset := 0\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_t_stringliteral_a28d34ff463a8cc689c6ec4b8c995983f85d0a40987242bc4cc3cec37303c18e_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 21)\n\n        mstore(add(pos, 0), \"ONLY_EMISSION_MANAGER\")\n\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_uint104_to_t_uint104_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint104(value))\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_t_uint40_to_t_uint40_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint40(value))\n    }\n\n    function abi_encode_t_uint8_to_t_uint8_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint8(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_a28d34ff463a8cc689c6ec4b8c995983f85d0a40987242bc4cc3cec37303c18e__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_a28d34ff463a8cc689c6ec4b8c995983f85d0a40987242bc4cc3cec37303c18e_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_uint104_t_uint104_t_uint40__to_t_uint104_t_uint104_t_uint40__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_uint104_to_t_uint104_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint104_to_t_uint104_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint40_to_t_uint40_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint8_to_t_uint8_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_uint104(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function cleanup_t_uint40(value) -> cleaned {\n        cleaned := and(value, 0xffffffffff)\n    }\n\n    function cleanup_t_uint8(value) -> cleaned {\n        cleaned := and(value, 0xff)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n}\n",
									"id": 4,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {
								"27": [
									{
										"length": 32,
										"start": 905
									},
									{
										"length": 32,
										"start": 1127
									}
								]
							},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106100885760003560e01c8063aaf5eb681161005b578063aaf5eb6814610129578063cbcbb50714610147578063cc69afec14610165578063f11b81881461018357610088565b80631652e7b71461008d5780633373ee4c146100bf57806339ccbdd3146100ef578063919cd40f1461010b575b600080fd5b6100a760048036038101906100a2919061052a565b6101b5565b6040516100b6939291906106d0565b60405180910390f35b6100d960048036038101906100d49190610553565b6102fe565b6040516100e691906106b5565b60405180910390f35b6101096004803603810190610104919061058f565b610387565b005b610113610456565b60405161012091906106b5565b60405180910390f35b610131610460565b60405161013e9190610707565b60405180910390f35b61014f610465565b60405161015c9190610643565b60405180910390f35b61016d610489565b60405161017a91906106b5565b60405180910390f35b61019d6004803603810190610198919061052a565b610493565b6040516101ac9392919061067e565b60405180910390f35b60008060008060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600001600d9054906101000a90046cffffffffffffffffffffffffff166000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160009054906101000a90046cffffffffffffffffffffffffff166000808773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600001601a9054906101000a900464ffffffffff16826cffffffffffffffffffffffffff169250816cffffffffffffffffffffffffff1691508064ffffffffff1690509250925092509193909250565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610415576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161040c9061065e565b60405180910390fd5b806001819055507f1cc1849a6602c3e91f2088cadea4381cc5717f2f28584197060ed2ebb434c16f8160405161044b91906106b5565b60405180910390a150565b6000600154905090565b601281565b7f000000000000000000000000000000000000000000000000000000000000000081565b6000600154905090565b60006020528060005260406000206000915090508060000160009054906101000a90046cffffffffffffffffffffffffff169080600001600d9054906101000a90046cffffffffffffffffffffffffff169080600001601a9054906101000a900464ffffffffff16905083565b60008135905061050f816107a6565b92915050565b600081359050610524816107bd565b92915050565b60006020828403121561053c57600080fd5b600061054a84828501610500565b91505092915050565b6000806040838503121561056657600080fd5b600061057485828601610500565b925050602061058585828601610500565b9150509250929050565b6000602082840312156105a157600080fd5b60006105af84828501610515565b91505092915050565b6105c181610733565b82525050565b60006105d4601583610722565b91507f4f4e4c595f454d495353494f4e5f4d414e4147455200000000000000000000006000830152602082019050919050565b61061081610745565b82525050565b61061f8161077e565b82525050565b61062e81610788565b82525050565b61063d81610799565b82525050565b600060208201905061065860008301846105b8565b92915050565b60006020820190508181036000830152610677816105c7565b9050919050565b60006060820190506106936000830186610607565b6106a06020830185610607565b6106ad6040830184610625565b949350505050565b60006020820190506106ca6000830184610616565b92915050565b60006060820190506106e56000830186610616565b6106f26020830185610616565b6106ff6040830184610616565b949350505050565b600060208201905061071c6000830184610634565b92915050565b600082825260208201905092915050565b600061073e8261075e565b9050919050565b60006cffffffffffffffffffffffffff82169050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600064ffffffffff82169050919050565b600060ff82169050919050565b6107af81610733565b81146107ba57600080fd5b50565b6107c68161077e565b81146107d157600080fd5b5056fea2646970667358221220f8e26c54eb4ad9eb64aa27816e54e81760b86b9a85fe40d049a34279bfa24d9064736f6c63430007050033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x88 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xAAF5EB68 GT PUSH2 0x5B JUMPI DUP1 PUSH4 0xAAF5EB68 EQ PUSH2 0x129 JUMPI DUP1 PUSH4 0xCBCBB507 EQ PUSH2 0x147 JUMPI DUP1 PUSH4 0xCC69AFEC EQ PUSH2 0x165 JUMPI DUP1 PUSH4 0xF11B8188 EQ PUSH2 0x183 JUMPI PUSH2 0x88 JUMP JUMPDEST DUP1 PUSH4 0x1652E7B7 EQ PUSH2 0x8D JUMPI DUP1 PUSH4 0x3373EE4C EQ PUSH2 0xBF JUMPI DUP1 PUSH4 0x39CCBDD3 EQ PUSH2 0xEF JUMPI DUP1 PUSH4 0x919CD40F EQ PUSH2 0x10B JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xA7 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xA2 SWAP2 SWAP1 PUSH2 0x52A JUMP JUMPDEST PUSH2 0x1B5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xB6 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x6D0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xD9 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xD4 SWAP2 SWAP1 PUSH2 0x553 JUMP JUMPDEST PUSH2 0x2FE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xE6 SWAP2 SWAP1 PUSH2 0x6B5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x109 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x104 SWAP2 SWAP1 PUSH2 0x58F JUMP JUMPDEST PUSH2 0x387 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x113 PUSH2 0x456 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x120 SWAP2 SWAP1 PUSH2 0x6B5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x131 PUSH2 0x460 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x13E SWAP2 SWAP1 PUSH2 0x707 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x14F PUSH2 0x465 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x15C SWAP2 SWAP1 PUSH2 0x643 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x16D PUSH2 0x489 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x17A SWAP2 SWAP1 PUSH2 0x6B5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x19D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x198 SWAP2 SWAP1 PUSH2 0x52A JUMP JUMPDEST PUSH2 0x493 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1AC SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x67E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0xD SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH13 0xFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH13 0xFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x1A SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH5 0xFFFFFFFFFF AND DUP3 PUSH13 0xFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP3 POP DUP2 PUSH13 0xFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP2 POP DUP1 PUSH5 0xFFFFFFFFFF AND SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 POP SWAP2 SWAP4 SWAP1 SWAP3 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x415 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x40C SWAP1 PUSH2 0x65E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x1 DUP2 SWAP1 SSTORE POP PUSH32 0x1CC1849A6602C3E91F2088CADEA4381CC5717F2F28584197060ED2EBB434C16F DUP2 PUSH1 0x40 MLOAD PUSH2 0x44B SWAP2 SWAP1 PUSH2 0x6B5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x12 DUP2 JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP DUP1 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH13 0xFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP1 PUSH1 0x0 ADD PUSH1 0xD SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH13 0xFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP1 PUSH1 0x0 ADD PUSH1 0x1A SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH5 0xFFFFFFFFFF AND SWAP1 POP DUP4 JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x50F DUP2 PUSH2 0x7A6 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x524 DUP2 PUSH2 0x7BD JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x53C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x54A DUP5 DUP3 DUP6 ADD PUSH2 0x500 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x566 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x574 DUP6 DUP3 DUP7 ADD PUSH2 0x500 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x585 DUP6 DUP3 DUP7 ADD PUSH2 0x500 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x5A1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x5AF DUP5 DUP3 DUP6 ADD PUSH2 0x515 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x5C1 DUP2 PUSH2 0x733 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5D4 PUSH1 0x15 DUP4 PUSH2 0x722 JUMP JUMPDEST SWAP2 POP PUSH32 0x4F4E4C595F454D495353494F4E5F4D414E414745520000000000000000000000 PUSH1 0x0 DUP4 ADD MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x610 DUP2 PUSH2 0x745 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x61F DUP2 PUSH2 0x77E JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x62E DUP2 PUSH2 0x788 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x63D DUP2 PUSH2 0x799 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x658 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x5B8 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x677 DUP2 PUSH2 0x5C7 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x693 PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x607 JUMP JUMPDEST PUSH2 0x6A0 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x607 JUMP JUMPDEST PUSH2 0x6AD PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x625 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x6CA PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x616 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x6E5 PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x616 JUMP JUMPDEST PUSH2 0x6F2 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x616 JUMP JUMPDEST PUSH2 0x6FF PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x616 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x71C PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x634 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x73E DUP3 PUSH2 0x75E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH13 0xFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH5 0xFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x7AF DUP2 PUSH2 0x733 JUMP JUMPDEST DUP2 EQ PUSH2 0x7BA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x7C6 DUP2 PUSH2 0x77E JUMP JUMPDEST DUP2 EQ PUSH2 0x7D1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xF8 0xE2 PUSH13 0x54EB4AD9EB64AA27816E54E817 PUSH1 0xB8 PUSH12 0x9A85FE40D049A34279BFA24D SWAP1 PUSH5 0x736F6C6343 STOP SMOD SDIV STOP CALLER ",
							"sourceMap": "449:8422:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1893:203;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;;1701:139;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1141:189;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1543:105;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;749:36;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;701:41;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1383:107;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;792:43;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;;1893:203;1960:7;1969;1978;2002:6;:13;2009:5;2002:13;;;;;;;;;;;;;;;:19;;;;;;;;;;;;2023:6;:13;2030:5;2023:13;;;;;;;;;;;;;;;:31;;;;;;;;;;;;2056:6;:13;2063:5;2056:13;;;;;;;;;;;;;;;:33;;;;;;;;;;;;1994:96;;;;;;;;;;;;;;;;;;;;;1893:203;;;;;:::o;1701:139::-;1786:7;1809:6;:13;1816:5;1809:13;;;;;;;;;;;;;;;:19;;:25;1829:4;1809:25;;;;;;;;;;;;;;;;1802:32;;1701:139;;;;:::o;1141:189::-;942:16;928:30;;:10;:30;;;920:64;;;;;;;;;;;;:::i;:::-;;;;;;;;;1258:15:::1;1239:16;:34;;;;1285:39;1308:15;1285:39;;;;;;:::i;:::-;;;;;;;;1141:189:::0;:::o;1543:105::-;1603:7;1626:16;;1619:23;;1543:105;:::o;749:36::-;783:2;749:36;:::o;701:41::-;;;:::o;1383:107::-;1445:7;1468:16;;1461:23;;1383:107;:::o;792:43::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;7:139:4:-;;91:6;78:20;69:29;;107:33;134:5;107:33;:::i;:::-;59:87;;;;:::o;152:139::-;;236:6;223:20;214:29;;252:33;279:5;252:33;:::i;:::-;204:87;;;;:::o;297:260::-;;405:2;393:9;384:7;380:23;376:32;373:2;;;421:1;418;411:12;373:2;463:1;487:53;532:7;523:6;512:9;508:22;487:53;:::i;:::-;477:63;;435:115;363:194;;;;:::o;563:403::-;;;688:2;676:9;667:7;663:23;659:32;656:2;;;704:1;701;694:12;656:2;746:1;770:53;815:7;806:6;795:9;791:22;770:53;:::i;:::-;760:63;;718:115;871:2;896:53;941:7;932:6;921:9;917:22;896:53;:::i;:::-;886:63;;843:116;646:320;;;;;:::o;972:260::-;;1080:2;1068:9;1059:7;1055:23;1051:32;1048:2;;;1096:1;1093;1086:12;1048:2;1138:1;1162:53;1207:7;1198:6;1187:9;1183:22;1162:53;:::i;:::-;1152:63;;1110:115;1038:194;;;;:::o;1238:118::-;1325:24;1343:5;1325:24;:::i;:::-;1320:3;1313:37;1303:53;;:::o;1362:319::-;;1525:67;1589:2;1584:3;1525:67;:::i;:::-;1518:74;;1622:23;1618:1;1613:3;1609:11;1602:44;1672:2;1667:3;1663:12;1656:19;;1508:173;;;:::o;1687:118::-;1774:24;1792:5;1774:24;:::i;:::-;1769:3;1762:37;1752:53;;:::o;1811:118::-;1898:24;1916:5;1898:24;:::i;:::-;1893:3;1886:37;1876:53;;:::o;1935:115::-;2020:23;2037:5;2020:23;:::i;:::-;2015:3;2008:36;1998:52;;:::o;2056:112::-;2139:22;2155:5;2139:22;:::i;:::-;2134:3;2127:35;2117:51;;:::o;2174:222::-;;2305:2;2294:9;2290:18;2282:26;;2318:71;2386:1;2375:9;2371:17;2362:6;2318:71;:::i;:::-;2272:124;;;;:::o;2402:419::-;;2606:2;2595:9;2591:18;2583:26;;2655:9;2649:4;2645:20;2641:1;2630:9;2626:17;2619:47;2683:131;2809:4;2683:131;:::i;:::-;2675:139;;2573:248;;;:::o;2827:438::-;;3012:2;3001:9;2997:18;2989:26;;3025:71;3093:1;3082:9;3078:17;3069:6;3025:71;:::i;:::-;3106:72;3174:2;3163:9;3159:18;3150:6;3106:72;:::i;:::-;3188:70;3254:2;3243:9;3239:18;3230:6;3188:70;:::i;:::-;2979:286;;;;;;:::o;3271:222::-;;3402:2;3391:9;3387:18;3379:26;;3415:71;3483:1;3472:9;3468:17;3459:6;3415:71;:::i;:::-;3369:124;;;;:::o;3499:442::-;;3686:2;3675:9;3671:18;3663:26;;3699:71;3767:1;3756:9;3752:17;3743:6;3699:71;:::i;:::-;3780:72;3848:2;3837:9;3833:18;3824:6;3780:72;:::i;:::-;3862;3930:2;3919:9;3915:18;3906:6;3862:72;:::i;:::-;3653:288;;;;;;:::o;3947:214::-;;4074:2;4063:9;4059:18;4051:26;;4087:67;4151:1;4140:9;4136:17;4127:6;4087:67;:::i;:::-;4041:120;;;;:::o;4167:169::-;;4285:6;4280:3;4273:19;4325:4;4320:3;4316:14;4301:29;;4263:73;;;;:::o;4342:96::-;;4408:24;4426:5;4408:24;:::i;:::-;4397:35;;4387:51;;;:::o;4444:112::-;;4521:28;4514:5;4510:40;4499:51;;4489:67;;;:::o;4562:126::-;;4639:42;4632:5;4628:54;4617:65;;4607:81;;;:::o;4694:77::-;;4760:5;4749:16;;4739:32;;;:::o;4777:95::-;;4853:12;4846:5;4842:24;4831:35;;4821:51;;;:::o;4878:86::-;;4953:4;4946:5;4942:16;4931:27;;4921:43;;;:::o;4970:122::-;5043:24;5061:5;5043:24;:::i;:::-;5036:5;5033:35;5023:2;;5082:1;5079;5072:12;5023:2;5013:79;:::o;5098:122::-;5171:24;5189:5;5171:24;:::i;:::-;5164:5;5161:35;5151:2;;5210:1;5207;5200:12;5151:2;5141:79;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "411600",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"DISTRIBUTION_END()": "1204",
								"EMISSION_MANAGER()": "infinite",
								"PRECISION()": "335",
								"assets(address)": "infinite",
								"getAssetData(address)": "infinite",
								"getDistributionEnd()": "1181",
								"getUserAssetData(address,address)": "infinite",
								"setDistributionEnd(uint256)": "infinite"
							},
							"internal": {
								"_claimRewards(address,struct DistributionTypes.UserStakeInput memory[] memory)": "infinite",
								"_configureAssets(struct DistributionTypes.AssetConfigInput memory[] memory)": "infinite",
								"_getAssetIndex(uint256,uint256,uint128,uint256)": "infinite",
								"_getRewards(uint256,uint256,uint256)": "infinite",
								"_getUnclaimedRewards(address,struct DistributionTypes.UserStakeInput memory[] memory)": "infinite",
								"_updateAssetStateInternal(address,struct DistributionManager.AssetData storage pointer,uint256)": "infinite",
								"_updateUserAssetInternal(address,address,uint256,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 449,
									"end": 8871,
									"name": "PUSH",
									"source": 0,
									"value": "A0"
								},
								{
									"begin": 449,
									"end": 8871,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 449,
									"end": 8871,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 1004,
									"end": 1088,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 1004,
									"end": 1088,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1004,
									"end": 1088,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 1004,
									"end": 1088,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 1004,
									"end": 1088,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 1004,
									"end": 1088,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1004,
									"end": 1088,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1004,
									"end": 1088,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 1004,
									"end": 1088,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 1004,
									"end": 1088,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1004,
									"end": 1088,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 1004,
									"end": 1088,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1004,
									"end": 1088,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1004,
									"end": 1088,
									"name": "PUSHSIZE",
									"source": 0
								},
								{
									"begin": 1004,
									"end": 1088,
									"name": "CODESIZE",
									"source": 0
								},
								{
									"begin": 1004,
									"end": 1088,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 1004,
									"end": 1088,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1004,
									"end": 1088,
									"name": "PUSHSIZE",
									"source": 0
								},
								{
									"begin": 1004,
									"end": 1088,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 1004,
									"end": 1088,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 1004,
									"end": 1088,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1004,
									"end": 1088,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1004,
									"end": 1088,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 1004,
									"end": 1088,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1004,
									"end": 1088,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 1004,
									"end": 1088,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1004,
									"end": 1088,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 1004,
									"end": 1088,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1004,
									"end": 1088,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 1004,
									"end": 1088,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1004,
									"end": 1088,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1004,
									"end": 1088,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "3"
								},
								{
									"begin": 1004,
									"end": 1088,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 1004,
									"end": 1088,
									"name": "tag",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 1004,
									"end": 1088,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1067,
									"end": 1082,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1048,
									"end": 1082,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1048,
									"end": 1082,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1048,
									"end": 1082,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 1048,
									"end": 1082,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1048,
									"end": 1082,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1048,
									"end": 1082,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1048,
									"end": 1082,
									"name": "PUSH",
									"source": 0,
									"value": "60"
								},
								{
									"begin": 1048,
									"end": 1082,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 1048,
									"end": 1082,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1048,
									"end": 1082,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 1048,
									"end": 1082,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 1048,
									"end": 1082,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 1004,
									"end": 1088,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 449,
									"end": 8871,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 449,
									"end": 8871,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 7,
									"end": 150,
									"name": "tag",
									"source": 4,
									"value": "8"
								},
								{
									"begin": 7,
									"end": 150,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 7,
									"end": 150,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 95,
									"end": 101,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 89,
									"end": 102,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 80,
									"end": 102,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 80,
									"end": 102,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 111,
									"end": 144,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "10"
								},
								{
									"begin": 138,
									"end": 143,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 111,
									"end": 144,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "11"
								},
								{
									"begin": 111,
									"end": 144,
									"name": "JUMP",
									"source": 4,
									"value": "[in]"
								},
								{
									"begin": 111,
									"end": 144,
									"name": "tag",
									"source": 4,
									"value": "10"
								},
								{
									"begin": 111,
									"end": 144,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 70,
									"end": 150,
									"name": "SWAP3",
									"source": 4
								},
								{
									"begin": 70,
									"end": 150,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 70,
									"end": 150,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 70,
									"end": 150,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 70,
									"end": 150,
									"name": "JUMP",
									"source": 4,
									"value": "[out]"
								},
								{
									"begin": 156,
									"end": 438,
									"name": "tag",
									"source": 4,
									"value": "3"
								},
								{
									"begin": 156,
									"end": 438,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 156,
									"end": 438,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 275,
									"end": 277,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 263,
									"end": 272,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 254,
									"end": 261,
									"name": "DUP5",
									"source": 4
								},
								{
									"begin": 250,
									"end": 273,
									"name": "SUB",
									"source": 4
								},
								{
									"begin": 246,
									"end": 278,
									"name": "SLT",
									"source": 4
								},
								{
									"begin": 243,
									"end": 245,
									"name": "ISZERO",
									"source": 4
								},
								{
									"begin": 243,
									"end": 245,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "13"
								},
								{
									"begin": 243,
									"end": 245,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 291,
									"end": 292,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 288,
									"end": 289,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 281,
									"end": 293,
									"name": "REVERT",
									"source": 4
								},
								{
									"begin": 243,
									"end": 245,
									"name": "tag",
									"source": 4,
									"value": "13"
								},
								{
									"begin": 243,
									"end": 245,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 333,
									"end": 334,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 357,
									"end": 421,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "14"
								},
								{
									"begin": 413,
									"end": 420,
									"name": "DUP5",
									"source": 4
								},
								{
									"begin": 404,
									"end": 410,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 393,
									"end": 402,
									"name": "DUP6",
									"source": 4
								},
								{
									"begin": 389,
									"end": 411,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 357,
									"end": 421,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "8"
								},
								{
									"begin": 357,
									"end": 421,
									"name": "JUMP",
									"source": 4,
									"value": "[in]"
								},
								{
									"begin": 357,
									"end": 421,
									"name": "tag",
									"source": 4,
									"value": "14"
								},
								{
									"begin": 357,
									"end": 421,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 347,
									"end": 421,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 347,
									"end": 421,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 305,
									"end": 431,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 233,
									"end": 438,
									"name": "SWAP3",
									"source": 4
								},
								{
									"begin": 233,
									"end": 438,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 233,
									"end": 438,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 233,
									"end": 438,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 233,
									"end": 438,
									"name": "JUMP",
									"source": 4,
									"value": "[out]"
								},
								{
									"begin": 444,
									"end": 540,
									"name": "tag",
									"source": 4,
									"value": "15"
								},
								{
									"begin": 444,
									"end": 540,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 444,
									"end": 540,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 510,
									"end": 534,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "17"
								},
								{
									"begin": 528,
									"end": 533,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 510,
									"end": 534,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "18"
								},
								{
									"begin": 510,
									"end": 534,
									"name": "JUMP",
									"source": 4,
									"value": "[in]"
								},
								{
									"begin": 510,
									"end": 534,
									"name": "tag",
									"source": 4,
									"value": "17"
								},
								{
									"begin": 510,
									"end": 534,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 499,
									"end": 534,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 499,
									"end": 534,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 489,
									"end": 540,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 489,
									"end": 540,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 489,
									"end": 540,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 489,
									"end": 540,
									"name": "JUMP",
									"source": 4,
									"value": "[out]"
								},
								{
									"begin": 546,
									"end": 672,
									"name": "tag",
									"source": 4,
									"value": "18"
								},
								{
									"begin": 546,
									"end": 672,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 546,
									"end": 672,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 623,
									"end": 665,
									"name": "PUSH",
									"source": 4,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 616,
									"end": 621,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 612,
									"end": 666,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 601,
									"end": 666,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 601,
									"end": 666,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 591,
									"end": 672,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 591,
									"end": 672,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 591,
									"end": 672,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 591,
									"end": 672,
									"name": "JUMP",
									"source": 4,
									"value": "[out]"
								},
								{
									"begin": 678,
									"end": 800,
									"name": "tag",
									"source": 4,
									"value": "11"
								},
								{
									"begin": 678,
									"end": 800,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 751,
									"end": 775,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "21"
								},
								{
									"begin": 769,
									"end": 774,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 751,
									"end": 775,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "15"
								},
								{
									"begin": 751,
									"end": 775,
									"name": "JUMP",
									"source": 4,
									"value": "[in]"
								},
								{
									"begin": 751,
									"end": 775,
									"name": "tag",
									"source": 4,
									"value": "21"
								},
								{
									"begin": 751,
									"end": 775,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 744,
									"end": 749,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 741,
									"end": 776,
									"name": "EQ",
									"source": 4
								},
								{
									"begin": 731,
									"end": 733,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "22"
								},
								{
									"begin": 731,
									"end": 733,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 790,
									"end": 791,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 787,
									"end": 788,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 780,
									"end": 792,
									"name": "REVERT",
									"source": 4
								},
								{
									"begin": 731,
									"end": 733,
									"name": "tag",
									"source": 4,
									"value": "22"
								},
								{
									"begin": 731,
									"end": 733,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 721,
									"end": 800,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 721,
									"end": 800,
									"name": "JUMP",
									"source": 4,
									"value": "[out]"
								},
								{
									"begin": 449,
									"end": 8871,
									"name": "tag",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 449,
									"end": 8871,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 449,
									"end": 8871,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 449,
									"end": 8871,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 449,
									"end": 8871,
									"name": "PUSH",
									"source": 0,
									"value": "60"
								},
								{
									"begin": 449,
									"end": 8871,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 449,
									"end": 8871,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 449,
									"end": 8871,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 449,
									"end": 8871,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 449,
									"end": 8871,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 449,
									"end": 8871,
									"name": "ASSIGNIMMUTABLE",
									"source": 0,
									"value": "27"
								},
								{
									"begin": 449,
									"end": 8871,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 449,
									"end": 8871,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 449,
									"end": 8871,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220f8e26c54eb4ad9eb64aa27816e54e81760b86b9a85fe40d049a34279bfa24d9064736f6c63430007050033",
									".code": [
										{
											"begin": 449,
											"end": 8871,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 449,
											"end": 8871,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 449,
											"end": 8871,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 449,
											"end": 8871,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 449,
											"end": 8871,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 449,
											"end": 8871,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 449,
											"end": 8871,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 449,
											"end": 8871,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 449,
											"end": 8871,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 449,
											"end": 8871,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 449,
											"end": 8871,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 449,
											"end": 8871,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 449,
											"end": 8871,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 449,
											"end": 8871,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 449,
											"end": 8871,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 449,
											"end": 8871,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 449,
											"end": 8871,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 449,
											"end": 8871,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 449,
											"end": 8871,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 449,
											"end": 8871,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 449,
											"end": 8871,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 449,
											"end": 8871,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 449,
											"end": 8871,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 449,
											"end": 8871,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 449,
											"end": 8871,
											"name": "PUSH",
											"source": 0,
											"value": "AAF5EB68"
										},
										{
											"begin": 449,
											"end": 8871,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 449,
											"end": 8871,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 449,
											"end": 8871,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 449,
											"end": 8871,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 449,
											"end": 8871,
											"name": "PUSH",
											"source": 0,
											"value": "AAF5EB68"
										},
										{
											"begin": 449,
											"end": 8871,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 449,
											"end": 8871,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 449,
											"end": 8871,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 449,
											"end": 8871,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 449,
											"end": 8871,
											"name": "PUSH",
											"source": 0,
											"value": "CBCBB507"
										},
										{
											"begin": 449,
											"end": 8871,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 449,
											"end": 8871,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 449,
											"end": 8871,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 449,
											"end": 8871,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 449,
											"end": 8871,
											"name": "PUSH",
											"source": 0,
											"value": "CC69AFEC"
										},
										{
											"begin": 449,
											"end": 8871,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 449,
											"end": 8871,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 449,
											"end": 8871,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 449,
											"end": 8871,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 449,
											"end": 8871,
											"name": "PUSH",
											"source": 0,
											"value": "F11B8188"
										},
										{
											"begin": 449,
											"end": 8871,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 449,
											"end": 8871,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 449,
											"end": 8871,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 449,
											"end": 8871,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 449,
											"end": 8871,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 449,
											"end": 8871,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 449,
											"end": 8871,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 449,
											"end": 8871,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 449,
											"end": 8871,
											"name": "PUSH",
											"source": 0,
											"value": "1652E7B7"
										},
										{
											"begin": 449,
											"end": 8871,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 449,
											"end": 8871,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 449,
											"end": 8871,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 449,
											"end": 8871,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 449,
											"end": 8871,
											"name": "PUSH",
											"source": 0,
											"value": "3373EE4C"
										},
										{
											"begin": 449,
											"end": 8871,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 449,
											"end": 8871,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 449,
											"end": 8871,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 449,
											"end": 8871,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 449,
											"end": 8871,
											"name": "PUSH",
											"source": 0,
											"value": "39CCBDD3"
										},
										{
											"begin": 449,
											"end": 8871,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 449,
											"end": 8871,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 449,
											"end": 8871,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 449,
											"end": 8871,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 449,
											"end": 8871,
											"name": "PUSH",
											"source": 0,
											"value": "919CD40F"
										},
										{
											"begin": 449,
											"end": 8871,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 449,
											"end": 8871,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 449,
											"end": 8871,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 449,
											"end": 8871,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 449,
											"end": 8871,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 449,
											"end": 8871,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 449,
											"end": 8871,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 449,
											"end": 8871,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1893,
											"end": 2096,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 1893,
											"end": 2096,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1893,
											"end": 2096,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 1893,
											"end": 2096,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1893,
											"end": 2096,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1893,
											"end": 2096,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 1893,
											"end": 2096,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1893,
											"end": 2096,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1893,
											"end": 2096,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1893,
											"end": 2096,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1893,
											"end": 2096,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 1893,
											"end": 2096,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1893,
											"end": 2096,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1893,
											"end": 2096,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 1893,
											"end": 2096,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1893,
											"end": 2096,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 1893,
											"end": 2096,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1893,
											"end": 2096,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 1893,
											"end": 2096,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1893,
											"end": 2096,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 1893,
											"end": 2096,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1893,
											"end": 2096,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1893,
											"end": 2096,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1893,
											"end": 2096,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 1893,
											"end": 2096,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 1893,
											"end": 2096,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 1893,
											"end": 2096,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1893,
											"end": 2096,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1893,
											"end": 2096,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 1893,
											"end": 2096,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1893,
											"end": 2096,
											"name": "tag",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 1893,
											"end": 2096,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1893,
											"end": 2096,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1893,
											"end": 2096,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1893,
											"end": 2096,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1893,
											"end": 2096,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1893,
											"end": 2096,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1893,
											"end": 2096,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1893,
											"end": 2096,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 1701,
											"end": 1840,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1701,
											"end": 1840,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1701,
											"end": 1840,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 1701,
											"end": 1840,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1701,
											"end": 1840,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1701,
											"end": 1840,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 1701,
											"end": 1840,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1701,
											"end": 1840,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1701,
											"end": 1840,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1701,
											"end": 1840,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1701,
											"end": 1840,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 1701,
											"end": 1840,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1701,
											"end": 1840,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1701,
											"end": 1840,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1701,
											"end": 1840,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1701,
											"end": 1840,
											"name": "tag",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 1701,
											"end": 1840,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1701,
											"end": 1840,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 1701,
											"end": 1840,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1701,
											"end": 1840,
											"name": "tag",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 1701,
											"end": 1840,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1701,
											"end": 1840,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1701,
											"end": 1840,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1701,
											"end": 1840,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 1701,
											"end": 1840,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1701,
											"end": 1840,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1701,
											"end": 1840,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 1701,
											"end": 1840,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1701,
											"end": 1840,
											"name": "tag",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 1701,
											"end": 1840,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1701,
											"end": 1840,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1701,
											"end": 1840,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1701,
											"end": 1840,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1701,
											"end": 1840,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1701,
											"end": 1840,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1701,
											"end": 1840,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1701,
											"end": 1840,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 1141,
											"end": 1330,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 1141,
											"end": 1330,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1141,
											"end": 1330,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 1141,
											"end": 1330,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1141,
											"end": 1330,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1141,
											"end": 1330,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 1141,
											"end": 1330,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1141,
											"end": 1330,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1141,
											"end": 1330,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1141,
											"end": 1330,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1141,
											"end": 1330,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 1141,
											"end": 1330,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1141,
											"end": 1330,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1141,
											"end": 1330,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 1141,
											"end": 1330,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1141,
											"end": 1330,
											"name": "tag",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 1141,
											"end": 1330,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1141,
											"end": 1330,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 1141,
											"end": 1330,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1141,
											"end": 1330,
											"name": "tag",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 1141,
											"end": 1330,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1141,
											"end": 1330,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 1543,
											"end": 1648,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 1543,
											"end": 1648,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1543,
											"end": 1648,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 1543,
											"end": 1648,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 1543,
											"end": 1648,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1543,
											"end": 1648,
											"name": "tag",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 1543,
											"end": 1648,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1543,
											"end": 1648,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1543,
											"end": 1648,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1543,
											"end": 1648,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 1543,
											"end": 1648,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1543,
											"end": 1648,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1543,
											"end": 1648,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 1543,
											"end": 1648,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1543,
											"end": 1648,
											"name": "tag",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 1543,
											"end": 1648,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1543,
											"end": 1648,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1543,
											"end": 1648,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1543,
											"end": 1648,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1543,
											"end": 1648,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1543,
											"end": 1648,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1543,
											"end": 1648,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1543,
											"end": 1648,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 749,
											"end": 785,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 749,
											"end": 785,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 749,
											"end": 785,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 749,
											"end": 785,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 749,
											"end": 785,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 749,
											"end": 785,
											"name": "tag",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 749,
											"end": 785,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 749,
											"end": 785,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 749,
											"end": 785,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 749,
											"end": 785,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 749,
											"end": 785,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 749,
											"end": 785,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 749,
											"end": 785,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 749,
											"end": 785,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 749,
											"end": 785,
											"name": "tag",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 749,
											"end": 785,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 749,
											"end": 785,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 749,
											"end": 785,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 749,
											"end": 785,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 749,
											"end": 785,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 749,
											"end": 785,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 749,
											"end": 785,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 749,
											"end": 785,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 701,
											"end": 742,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 701,
											"end": 742,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 701,
											"end": 742,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 701,
											"end": 742,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 701,
											"end": 742,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 701,
											"end": 742,
											"name": "tag",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 701,
											"end": 742,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 701,
											"end": 742,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 701,
											"end": 742,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 701,
											"end": 742,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 701,
											"end": 742,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 701,
											"end": 742,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 701,
											"end": 742,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 701,
											"end": 742,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 701,
											"end": 742,
											"name": "tag",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 701,
											"end": 742,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 701,
											"end": 742,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 701,
											"end": 742,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 701,
											"end": 742,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 701,
											"end": 742,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 701,
											"end": 742,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 701,
											"end": 742,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 701,
											"end": 742,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 1383,
											"end": 1490,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 1383,
											"end": 1490,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1383,
											"end": 1490,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 1383,
											"end": 1490,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1383,
											"end": 1490,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1383,
											"end": 1490,
											"name": "tag",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 1383,
											"end": 1490,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1383,
											"end": 1490,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1383,
											"end": 1490,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1383,
											"end": 1490,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 1383,
											"end": 1490,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1383,
											"end": 1490,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1383,
											"end": 1490,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 1383,
											"end": 1490,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1383,
											"end": 1490,
											"name": "tag",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 1383,
											"end": 1490,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1383,
											"end": 1490,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1383,
											"end": 1490,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1383,
											"end": 1490,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1383,
											"end": 1490,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1383,
											"end": 1490,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1383,
											"end": 1490,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1383,
											"end": 1490,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 792,
											"end": 835,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 792,
											"end": 835,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 792,
											"end": 835,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 792,
											"end": 835,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 792,
											"end": 835,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 792,
											"end": 835,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 792,
											"end": 835,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 792,
											"end": 835,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 792,
											"end": 835,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 792,
											"end": 835,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 792,
											"end": 835,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 792,
											"end": 835,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 792,
											"end": 835,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 792,
											"end": 835,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 792,
											"end": 835,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 792,
											"end": 835,
											"name": "tag",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 792,
											"end": 835,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 792,
											"end": 835,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 792,
											"end": 835,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 792,
											"end": 835,
											"name": "tag",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 792,
											"end": 835,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 792,
											"end": 835,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 792,
											"end": 835,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 792,
											"end": 835,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 792,
											"end": 835,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 792,
											"end": 835,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 792,
											"end": 835,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 792,
											"end": 835,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 792,
											"end": 835,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 792,
											"end": 835,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 792,
											"end": 835,
											"name": "tag",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 792,
											"end": 835,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 792,
											"end": 835,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 792,
											"end": 835,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 792,
											"end": 835,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 792,
											"end": 835,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 792,
											"end": 835,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 792,
											"end": 835,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 792,
											"end": 835,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 1893,
											"end": 2096,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 1893,
											"end": 2096,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1960,
											"end": 1967,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1969,
											"end": 1976,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1978,
											"end": 1985,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2002,
											"end": 2008,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2002,
											"end": 2015,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2009,
											"end": 2014,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 2002,
											"end": 2015,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2002,
											"end": 2015,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2002,
											"end": 2015,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2002,
											"end": 2015,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2002,
											"end": 2015,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2002,
											"end": 2015,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2002,
											"end": 2015,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2002,
											"end": 2015,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2002,
											"end": 2015,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2002,
											"end": 2015,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2002,
											"end": 2015,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2002,
											"end": 2015,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2002,
											"end": 2015,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2002,
											"end": 2015,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2002,
											"end": 2015,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 2002,
											"end": 2021,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2002,
											"end": 2021,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2002,
											"end": 2021,
											"name": "PUSH",
											"source": 0,
											"value": "D"
										},
										{
											"begin": 2002,
											"end": 2021,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2002,
											"end": 2021,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2002,
											"end": 2021,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2002,
											"end": 2021,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 2002,
											"end": 2021,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 2002,
											"end": 2021,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2002,
											"end": 2021,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 2002,
											"end": 2021,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2002,
											"end": 2021,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2023,
											"end": 2029,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2023,
											"end": 2036,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2030,
											"end": 2035,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 2023,
											"end": 2036,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2023,
											"end": 2036,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2023,
											"end": 2036,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2023,
											"end": 2036,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2023,
											"end": 2036,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2023,
											"end": 2036,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2023,
											"end": 2036,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2023,
											"end": 2036,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2023,
											"end": 2036,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2023,
											"end": 2036,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2023,
											"end": 2036,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2023,
											"end": 2036,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2023,
											"end": 2036,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2023,
											"end": 2036,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2023,
											"end": 2036,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 2023,
											"end": 2054,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2023,
											"end": 2054,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2023,
											"end": 2054,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2023,
											"end": 2054,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2023,
											"end": 2054,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2023,
											"end": 2054,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2023,
											"end": 2054,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 2023,
											"end": 2054,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 2023,
											"end": 2054,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2023,
											"end": 2054,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 2023,
											"end": 2054,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2023,
											"end": 2054,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2056,
											"end": 2062,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2056,
											"end": 2069,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2063,
											"end": 2068,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 2056,
											"end": 2069,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2056,
											"end": 2069,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2056,
											"end": 2069,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2056,
											"end": 2069,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2056,
											"end": 2069,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2056,
											"end": 2069,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2056,
											"end": 2069,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2056,
											"end": 2069,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2056,
											"end": 2069,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2056,
											"end": 2069,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2056,
											"end": 2069,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2056,
											"end": 2069,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2056,
											"end": 2069,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2056,
											"end": 2069,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2056,
											"end": 2069,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 2056,
											"end": 2089,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2056,
											"end": 2089,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2056,
											"end": 2089,
											"name": "PUSH",
											"source": 0,
											"value": "1A"
										},
										{
											"begin": 2056,
											"end": 2089,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2056,
											"end": 2089,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2056,
											"end": 2089,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2056,
											"end": 2089,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 2056,
											"end": 2089,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 2056,
											"end": 2089,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2056,
											"end": 2089,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 2056,
											"end": 2089,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFF"
										},
										{
											"begin": 2056,
											"end": 2089,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1994,
											"end": 2090,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1994,
											"end": 2090,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1994,
											"end": 2090,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1994,
											"end": 2090,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 1994,
											"end": 2090,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1994,
											"end": 2090,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1994,
											"end": 2090,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1994,
											"end": 2090,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1994,
											"end": 2090,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1994,
											"end": 2090,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1994,
											"end": 2090,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1994,
											"end": 2090,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFF"
										},
										{
											"begin": 1994,
											"end": 2090,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1994,
											"end": 2090,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1994,
											"end": 2090,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1994,
											"end": 2090,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 1994,
											"end": 2090,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1994,
											"end": 2090,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 1994,
											"end": 2090,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1994,
											"end": 2090,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 1994,
											"end": 2090,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1893,
											"end": 2096,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1893,
											"end": 2096,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 1893,
											"end": 2096,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1893,
											"end": 2096,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 1893,
											"end": 2096,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1893,
											"end": 2096,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 1701,
											"end": 1840,
											"name": "tag",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 1701,
											"end": 1840,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1786,
											"end": 1793,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1809,
											"end": 1815,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1809,
											"end": 1822,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1816,
											"end": 1821,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1809,
											"end": 1822,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1809,
											"end": 1822,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1809,
											"end": 1822,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1809,
											"end": 1822,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1809,
											"end": 1822,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1809,
											"end": 1822,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1809,
											"end": 1822,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1809,
											"end": 1822,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1809,
											"end": 1822,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1809,
											"end": 1822,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1809,
											"end": 1822,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1809,
											"end": 1822,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1809,
											"end": 1822,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1809,
											"end": 1822,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1809,
											"end": 1822,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 1809,
											"end": 1828,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 1809,
											"end": 1828,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1809,
											"end": 1834,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1829,
											"end": 1833,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 1809,
											"end": 1834,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1809,
											"end": 1834,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1809,
											"end": 1834,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1809,
											"end": 1834,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1809,
											"end": 1834,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1809,
											"end": 1834,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1809,
											"end": 1834,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1809,
											"end": 1834,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1809,
											"end": 1834,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1809,
											"end": 1834,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1809,
											"end": 1834,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1809,
											"end": 1834,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1809,
											"end": 1834,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1809,
											"end": 1834,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1809,
											"end": 1834,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 1809,
											"end": 1834,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1802,
											"end": 1834,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1802,
											"end": 1834,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1701,
											"end": 1840,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 1701,
											"end": 1840,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1701,
											"end": 1840,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1701,
											"end": 1840,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1701,
											"end": 1840,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 1141,
											"end": 1330,
											"name": "tag",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 1141,
											"end": 1330,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 942,
											"end": 958,
											"name": "PUSHIMMUTABLE",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 928,
											"end": 958,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 928,
											"end": 958,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 928,
											"end": 938,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 928,
											"end": 958,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 928,
											"end": 958,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 928,
											"end": 958,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 920,
											"end": 984,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 920,
											"end": 984,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 920,
											"end": 984,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 920,
											"end": 984,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 920,
											"end": 984,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 920,
											"end": 984,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 920,
											"end": 984,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 920,
											"end": 984,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 920,
											"end": 984,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 920,
											"end": 984,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 920,
											"end": 984,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 920,
											"end": 984,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 920,
											"end": 984,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 920,
											"end": 984,
											"name": "tag",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 920,
											"end": 984,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 920,
											"end": 984,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 920,
											"end": 984,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 920,
											"end": 984,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 920,
											"end": 984,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 920,
											"end": 984,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 920,
											"end": 984,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 920,
											"end": 984,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 920,
											"end": 984,
											"name": "tag",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 920,
											"end": 984,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1258,
											"end": 1273,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1239,
											"end": 1255,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 1239,
											"end": 1273,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1239,
											"end": 1273,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1239,
											"end": 1273,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 1239,
											"end": 1273,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1285,
											"end": 1324,
											"name": "PUSH",
											"source": 0,
											"value": "1CC1849A6602C3E91F2088CADEA4381CC5717F2F28584197060ED2EBB434C16F"
										},
										{
											"begin": 1308,
											"end": 1323,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1285,
											"end": 1324,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1285,
											"end": 1324,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1285,
											"end": 1324,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 1285,
											"end": 1324,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1285,
											"end": 1324,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1285,
											"end": 1324,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 1285,
											"end": 1324,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1285,
											"end": 1324,
											"name": "tag",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 1285,
											"end": 1324,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1285,
											"end": 1324,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1285,
											"end": 1324,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1285,
											"end": 1324,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1285,
											"end": 1324,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1285,
											"end": 1324,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1285,
											"end": 1324,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1285,
											"end": 1324,
											"name": "LOG1",
											"source": 0
										},
										{
											"begin": 1141,
											"end": 1330,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1141,
											"end": 1330,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 1543,
											"end": 1648,
											"name": "tag",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 1543,
											"end": 1648,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1603,
											"end": 1610,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1626,
											"end": 1642,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 1626,
											"end": 1642,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1619,
											"end": 1642,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1619,
											"end": 1642,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1543,
											"end": 1648,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1543,
											"end": 1648,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 749,
											"end": 785,
											"name": "tag",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 749,
											"end": 785,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 783,
											"end": 785,
											"name": "PUSH",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 749,
											"end": 785,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 749,
											"end": 785,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 701,
											"end": 742,
											"name": "tag",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 701,
											"end": 742,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 701,
											"end": 742,
											"name": "PUSHIMMUTABLE",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 701,
											"end": 742,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 701,
											"end": 742,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 1383,
											"end": 1490,
											"name": "tag",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1383,
											"end": 1490,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1445,
											"end": 1452,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1468,
											"end": 1484,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 1468,
											"end": 1484,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1461,
											"end": 1484,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1461,
											"end": 1484,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1383,
											"end": 1490,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1383,
											"end": 1490,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 792,
											"end": 835,
											"name": "tag",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 792,
											"end": 835,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 792,
											"end": 835,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 792,
											"end": 835,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 792,
											"end": 835,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 792,
											"end": 835,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 792,
											"end": 835,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 792,
											"end": 835,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 792,
											"end": 835,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 792,
											"end": 835,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 792,
											"end": 835,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 792,
											"end": 835,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 792,
											"end": 835,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 792,
											"end": 835,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 792,
											"end": 835,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 792,
											"end": 835,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 792,
											"end": 835,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 792,
											"end": 835,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 792,
											"end": 835,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 792,
											"end": 835,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 792,
											"end": 835,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 792,
											"end": 835,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 792,
											"end": 835,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 792,
											"end": 835,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 792,
											"end": 835,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 792,
											"end": 835,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 792,
											"end": 835,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 792,
											"end": 835,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 792,
											"end": 835,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 792,
											"end": 835,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 792,
											"end": 835,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 792,
											"end": 835,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 792,
											"end": 835,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 792,
											"end": 835,
											"name": "PUSH",
											"source": 0,
											"value": "D"
										},
										{
											"begin": 792,
											"end": 835,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 792,
											"end": 835,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 792,
											"end": 835,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 792,
											"end": 835,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 792,
											"end": 835,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 792,
											"end": 835,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 792,
											"end": 835,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 792,
											"end": 835,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 792,
											"end": 835,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 792,
											"end": 835,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 792,
											"end": 835,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 792,
											"end": 835,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 792,
											"end": 835,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 792,
											"end": 835,
											"name": "PUSH",
											"source": 0,
											"value": "1A"
										},
										{
											"begin": 792,
											"end": 835,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 792,
											"end": 835,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 792,
											"end": 835,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 792,
											"end": 835,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 792,
											"end": 835,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 792,
											"end": 835,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 792,
											"end": 835,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 792,
											"end": 835,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFF"
										},
										{
											"begin": 792,
											"end": 835,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 792,
											"end": 835,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 792,
											"end": 835,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 792,
											"end": 835,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 792,
											"end": 835,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 7,
											"end": 146,
											"name": "tag",
											"source": 4,
											"value": "58"
										},
										{
											"begin": 7,
											"end": 146,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7,
											"end": 146,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 91,
											"end": 97,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 78,
											"end": 98,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": 69,
											"end": 98,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 69,
											"end": 98,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 107,
											"end": 140,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 134,
											"end": 139,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 107,
											"end": 140,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "61"
										},
										{
											"begin": 107,
											"end": 140,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 107,
											"end": 140,
											"name": "tag",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 107,
											"end": 140,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 59,
											"end": 146,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 59,
											"end": 146,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 59,
											"end": 146,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 59,
											"end": 146,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 59,
											"end": 146,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 152,
											"end": 291,
											"name": "tag",
											"source": 4,
											"value": "62"
										},
										{
											"begin": 152,
											"end": 291,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 152,
											"end": 291,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 236,
											"end": 242,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 223,
											"end": 243,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": 214,
											"end": 243,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 214,
											"end": 243,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 252,
											"end": 285,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "64"
										},
										{
											"begin": 279,
											"end": 284,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 252,
											"end": 285,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "65"
										},
										{
											"begin": 252,
											"end": 285,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 252,
											"end": 285,
											"name": "tag",
											"source": 4,
											"value": "64"
										},
										{
											"begin": 252,
											"end": 285,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 204,
											"end": 291,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 204,
											"end": 291,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 204,
											"end": 291,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 204,
											"end": 291,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 204,
											"end": 291,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 297,
											"end": 557,
											"name": "tag",
											"source": 4,
											"value": "14"
										},
										{
											"begin": 297,
											"end": 557,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 297,
											"end": 557,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 405,
											"end": 407,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 393,
											"end": 402,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 384,
											"end": 391,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 380,
											"end": 403,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 376,
											"end": 408,
											"name": "SLT",
											"source": 4
										},
										{
											"begin": 373,
											"end": 375,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 373,
											"end": 375,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "67"
										},
										{
											"begin": 373,
											"end": 375,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 421,
											"end": 422,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 418,
											"end": 419,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 411,
											"end": 423,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 373,
											"end": 375,
											"name": "tag",
											"source": 4,
											"value": "67"
										},
										{
											"begin": 373,
											"end": 375,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 463,
											"end": 464,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 487,
											"end": 540,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "68"
										},
										{
											"begin": 532,
											"end": 539,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 523,
											"end": 529,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 512,
											"end": 521,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 508,
											"end": 530,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 487,
											"end": 540,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "58"
										},
										{
											"begin": 487,
											"end": 540,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 487,
											"end": 540,
											"name": "tag",
											"source": 4,
											"value": "68"
										},
										{
											"begin": 487,
											"end": 540,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 477,
											"end": 540,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 477,
											"end": 540,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 435,
											"end": 550,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 363,
											"end": 557,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 363,
											"end": 557,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 363,
											"end": 557,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 363,
											"end": 557,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 363,
											"end": 557,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 563,
											"end": 966,
											"name": "tag",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 563,
											"end": 966,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 563,
											"end": 966,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 563,
											"end": 966,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 688,
											"end": 690,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 676,
											"end": 685,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 667,
											"end": 674,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 663,
											"end": 686,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 659,
											"end": 691,
											"name": "SLT",
											"source": 4
										},
										{
											"begin": 656,
											"end": 658,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 656,
											"end": 658,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "70"
										},
										{
											"begin": 656,
											"end": 658,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 704,
											"end": 705,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 701,
											"end": 702,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 694,
											"end": 706,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 656,
											"end": 658,
											"name": "tag",
											"source": 4,
											"value": "70"
										},
										{
											"begin": 656,
											"end": 658,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 746,
											"end": 747,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 770,
											"end": 823,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "71"
										},
										{
											"begin": 815,
											"end": 822,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 806,
											"end": 812,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 795,
											"end": 804,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 791,
											"end": 813,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 770,
											"end": 823,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "58"
										},
										{
											"begin": 770,
											"end": 823,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 770,
											"end": 823,
											"name": "tag",
											"source": 4,
											"value": "71"
										},
										{
											"begin": 770,
											"end": 823,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 760,
											"end": 823,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 760,
											"end": 823,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 718,
											"end": 833,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 871,
											"end": 873,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 896,
											"end": 949,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "72"
										},
										{
											"begin": 941,
											"end": 948,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 932,
											"end": 938,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 921,
											"end": 930,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 917,
											"end": 939,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 896,
											"end": 949,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "58"
										},
										{
											"begin": 896,
											"end": 949,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 896,
											"end": 949,
											"name": "tag",
											"source": 4,
											"value": "72"
										},
										{
											"begin": 896,
											"end": 949,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 886,
											"end": 949,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 886,
											"end": 949,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 843,
											"end": 959,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 646,
											"end": 966,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 646,
											"end": 966,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 646,
											"end": 966,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 646,
											"end": 966,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 646,
											"end": 966,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 646,
											"end": 966,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 972,
											"end": 1232,
											"name": "tag",
											"source": 4,
											"value": "26"
										},
										{
											"begin": 972,
											"end": 1232,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 972,
											"end": 1232,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1080,
											"end": 1082,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1068,
											"end": 1077,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1059,
											"end": 1066,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 1055,
											"end": 1078,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 1051,
											"end": 1083,
											"name": "SLT",
											"source": 4
										},
										{
											"begin": 1048,
											"end": 1050,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 1048,
											"end": 1050,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "74"
										},
										{
											"begin": 1048,
											"end": 1050,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1096,
											"end": 1097,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1093,
											"end": 1094,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1086,
											"end": 1098,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 1048,
											"end": 1050,
											"name": "tag",
											"source": 4,
											"value": "74"
										},
										{
											"begin": 1048,
											"end": 1050,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1138,
											"end": 1139,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1162,
											"end": 1215,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "75"
										},
										{
											"begin": 1207,
											"end": 1214,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 1198,
											"end": 1204,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1187,
											"end": 1196,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 1183,
											"end": 1205,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1162,
											"end": 1215,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "62"
										},
										{
											"begin": 1162,
											"end": 1215,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 1162,
											"end": 1215,
											"name": "tag",
											"source": 4,
											"value": "75"
										},
										{
											"begin": 1162,
											"end": 1215,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1152,
											"end": 1215,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1152,
											"end": 1215,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1110,
											"end": 1225,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1038,
											"end": 1232,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 1038,
											"end": 1232,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1038,
											"end": 1232,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1038,
											"end": 1232,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1038,
											"end": 1232,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 1238,
											"end": 1356,
											"name": "tag",
											"source": 4,
											"value": "76"
										},
										{
											"begin": 1238,
											"end": 1356,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1325,
											"end": 1349,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "78"
										},
										{
											"begin": 1343,
											"end": 1348,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1325,
											"end": 1349,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "79"
										},
										{
											"begin": 1325,
											"end": 1349,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 1325,
											"end": 1349,
											"name": "tag",
											"source": 4,
											"value": "78"
										},
										{
											"begin": 1325,
											"end": 1349,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1320,
											"end": 1323,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1313,
											"end": 1350,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1303,
											"end": 1356,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1303,
											"end": 1356,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1303,
											"end": 1356,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 1362,
											"end": 1681,
											"name": "tag",
											"source": 4,
											"value": "80"
										},
										{
											"begin": 1362,
											"end": 1681,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1362,
											"end": 1681,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1525,
											"end": 1592,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "82"
										},
										{
											"begin": 1589,
											"end": 1591,
											"name": "PUSH",
											"source": 4,
											"value": "15"
										},
										{
											"begin": 1584,
											"end": 1587,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1525,
											"end": 1592,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "83"
										},
										{
											"begin": 1525,
											"end": 1592,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 1525,
											"end": 1592,
											"name": "tag",
											"source": 4,
											"value": "82"
										},
										{
											"begin": 1525,
											"end": 1592,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1518,
											"end": 1592,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1518,
											"end": 1592,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1622,
											"end": 1645,
											"name": "PUSH",
											"source": 4,
											"value": "4F4E4C595F454D495353494F4E5F4D414E414745520000000000000000000000"
										},
										{
											"begin": 1618,
											"end": 1619,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1613,
											"end": 1616,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1609,
											"end": 1620,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1602,
											"end": 1646,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1672,
											"end": 1674,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1667,
											"end": 1670,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1663,
											"end": 1675,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1656,
											"end": 1675,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1656,
											"end": 1675,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1508,
											"end": 1681,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1508,
											"end": 1681,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1508,
											"end": 1681,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1508,
											"end": 1681,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 1687,
											"end": 1805,
											"name": "tag",
											"source": 4,
											"value": "84"
										},
										{
											"begin": 1687,
											"end": 1805,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1774,
											"end": 1798,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "86"
										},
										{
											"begin": 1792,
											"end": 1797,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1774,
											"end": 1798,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "87"
										},
										{
											"begin": 1774,
											"end": 1798,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 1774,
											"end": 1798,
											"name": "tag",
											"source": 4,
											"value": "86"
										},
										{
											"begin": 1774,
											"end": 1798,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1769,
											"end": 1772,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1762,
											"end": 1799,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1752,
											"end": 1805,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1752,
											"end": 1805,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1752,
											"end": 1805,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 1811,
											"end": 1929,
											"name": "tag",
											"source": 4,
											"value": "88"
										},
										{
											"begin": 1811,
											"end": 1929,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1898,
											"end": 1922,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "90"
										},
										{
											"begin": 1916,
											"end": 1921,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1898,
											"end": 1922,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "91"
										},
										{
											"begin": 1898,
											"end": 1922,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 1898,
											"end": 1922,
											"name": "tag",
											"source": 4,
											"value": "90"
										},
										{
											"begin": 1898,
											"end": 1922,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1893,
											"end": 1896,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1886,
											"end": 1923,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1876,
											"end": 1929,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1876,
											"end": 1929,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1876,
											"end": 1929,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 1935,
											"end": 2050,
											"name": "tag",
											"source": 4,
											"value": "92"
										},
										{
											"begin": 1935,
											"end": 2050,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2020,
											"end": 2043,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "94"
										},
										{
											"begin": 2037,
											"end": 2042,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2020,
											"end": 2043,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "95"
										},
										{
											"begin": 2020,
											"end": 2043,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 2020,
											"end": 2043,
											"name": "tag",
											"source": 4,
											"value": "94"
										},
										{
											"begin": 2020,
											"end": 2043,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2015,
											"end": 2018,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2008,
											"end": 2044,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1998,
											"end": 2050,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1998,
											"end": 2050,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1998,
											"end": 2050,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 2056,
											"end": 2168,
											"name": "tag",
											"source": 4,
											"value": "96"
										},
										{
											"begin": 2056,
											"end": 2168,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2139,
											"end": 2161,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "98"
										},
										{
											"begin": 2155,
											"end": 2160,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2139,
											"end": 2161,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "99"
										},
										{
											"begin": 2139,
											"end": 2161,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 2139,
											"end": 2161,
											"name": "tag",
											"source": 4,
											"value": "98"
										},
										{
											"begin": 2139,
											"end": 2161,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2134,
											"end": 2137,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2127,
											"end": 2162,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2117,
											"end": 2168,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2117,
											"end": 2168,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2117,
											"end": 2168,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 2174,
											"end": 2396,
											"name": "tag",
											"source": 4,
											"value": "38"
										},
										{
											"begin": 2174,
											"end": 2396,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2174,
											"end": 2396,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2305,
											"end": 2307,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2294,
											"end": 2303,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2290,
											"end": 2308,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2282,
											"end": 2308,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2282,
											"end": 2308,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2318,
											"end": 2389,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "101"
										},
										{
											"begin": 2386,
											"end": 2387,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2375,
											"end": 2384,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2371,
											"end": 2388,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2362,
											"end": 2368,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 2318,
											"end": 2389,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "76"
										},
										{
											"begin": 2318,
											"end": 2389,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 2318,
											"end": 2389,
											"name": "tag",
											"source": 4,
											"value": "101"
										},
										{
											"begin": 2318,
											"end": 2389,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2272,
											"end": 2396,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 2272,
											"end": 2396,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2272,
											"end": 2396,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2272,
											"end": 2396,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2272,
											"end": 2396,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 2402,
											"end": 2821,
											"name": "tag",
											"source": 4,
											"value": "52"
										},
										{
											"begin": 2402,
											"end": 2821,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2402,
											"end": 2821,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2606,
											"end": 2608,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2595,
											"end": 2604,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2591,
											"end": 2609,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2583,
											"end": 2609,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2583,
											"end": 2609,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2655,
											"end": 2664,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2649,
											"end": 2653,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2645,
											"end": 2665,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2641,
											"end": 2642,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2630,
											"end": 2639,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2626,
											"end": 2643,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2619,
											"end": 2666,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2683,
											"end": 2814,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "103"
										},
										{
											"begin": 2809,
											"end": 2813,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2683,
											"end": 2814,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "80"
										},
										{
											"begin": 2683,
											"end": 2814,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 2683,
											"end": 2814,
											"name": "tag",
											"source": 4,
											"value": "103"
										},
										{
											"begin": 2683,
											"end": 2814,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2675,
											"end": 2814,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2675,
											"end": 2814,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2573,
											"end": 2821,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2573,
											"end": 2821,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2573,
											"end": 2821,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2573,
											"end": 2821,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 2827,
											"end": 3265,
											"name": "tag",
											"source": 4,
											"value": "46"
										},
										{
											"begin": 2827,
											"end": 3265,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2827,
											"end": 3265,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3012,
											"end": 3014,
											"name": "PUSH",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 3001,
											"end": 3010,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2997,
											"end": 3015,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2989,
											"end": 3015,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2989,
											"end": 3015,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3025,
											"end": 3096,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "105"
										},
										{
											"begin": 3093,
											"end": 3094,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3082,
											"end": 3091,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 3078,
											"end": 3095,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3069,
											"end": 3075,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 3025,
											"end": 3096,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "84"
										},
										{
											"begin": 3025,
											"end": 3096,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 3025,
											"end": 3096,
											"name": "tag",
											"source": 4,
											"value": "105"
										},
										{
											"begin": 3025,
											"end": 3096,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3106,
											"end": 3178,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "106"
										},
										{
											"begin": 3174,
											"end": 3176,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3163,
											"end": 3172,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 3159,
											"end": 3177,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3150,
											"end": 3156,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 3106,
											"end": 3178,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "84"
										},
										{
											"begin": 3106,
											"end": 3178,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 3106,
											"end": 3178,
											"name": "tag",
											"source": 4,
											"value": "106"
										},
										{
											"begin": 3106,
											"end": 3178,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3188,
											"end": 3258,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "107"
										},
										{
											"begin": 3254,
											"end": 3256,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3243,
											"end": 3252,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 3239,
											"end": 3257,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3230,
											"end": 3236,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 3188,
											"end": 3258,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "92"
										},
										{
											"begin": 3188,
											"end": 3258,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 3188,
											"end": 3258,
											"name": "tag",
											"source": 4,
											"value": "107"
										},
										{
											"begin": 3188,
											"end": 3258,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2979,
											"end": 3265,
											"name": "SWAP5",
											"source": 4
										},
										{
											"begin": 2979,
											"end": 3265,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 2979,
											"end": 3265,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2979,
											"end": 3265,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2979,
											"end": 3265,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2979,
											"end": 3265,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2979,
											"end": 3265,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 3271,
											"end": 3493,
											"name": "tag",
											"source": 4,
											"value": "23"
										},
										{
											"begin": 3271,
											"end": 3493,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3271,
											"end": 3493,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3402,
											"end": 3404,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3391,
											"end": 3400,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3387,
											"end": 3405,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3379,
											"end": 3405,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3379,
											"end": 3405,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3415,
											"end": 3486,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "109"
										},
										{
											"begin": 3483,
											"end": 3484,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3472,
											"end": 3481,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 3468,
											"end": 3485,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3459,
											"end": 3465,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 3415,
											"end": 3486,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "88"
										},
										{
											"begin": 3415,
											"end": 3486,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 3415,
											"end": 3486,
											"name": "tag",
											"source": 4,
											"value": "109"
										},
										{
											"begin": 3415,
											"end": 3486,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3369,
											"end": 3493,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 3369,
											"end": 3493,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3369,
											"end": 3493,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3369,
											"end": 3493,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3369,
											"end": 3493,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 3499,
											"end": 3941,
											"name": "tag",
											"source": 4,
											"value": "17"
										},
										{
											"begin": 3499,
											"end": 3941,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3499,
											"end": 3941,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3686,
											"end": 3688,
											"name": "PUSH",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 3675,
											"end": 3684,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3671,
											"end": 3689,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3663,
											"end": 3689,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3663,
											"end": 3689,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3699,
											"end": 3770,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "111"
										},
										{
											"begin": 3767,
											"end": 3768,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3756,
											"end": 3765,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 3752,
											"end": 3769,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3743,
											"end": 3749,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 3699,
											"end": 3770,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "88"
										},
										{
											"begin": 3699,
											"end": 3770,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 3699,
											"end": 3770,
											"name": "tag",
											"source": 4,
											"value": "111"
										},
										{
											"begin": 3699,
											"end": 3770,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3780,
											"end": 3852,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "112"
										},
										{
											"begin": 3848,
											"end": 3850,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3837,
											"end": 3846,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 3833,
											"end": 3851,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3824,
											"end": 3830,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 3780,
											"end": 3852,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "88"
										},
										{
											"begin": 3780,
											"end": 3852,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 3780,
											"end": 3852,
											"name": "tag",
											"source": 4,
											"value": "112"
										},
										{
											"begin": 3780,
											"end": 3852,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3862,
											"end": 3934,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "113"
										},
										{
											"begin": 3930,
											"end": 3932,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3919,
											"end": 3928,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 3915,
											"end": 3933,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3906,
											"end": 3912,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 3862,
											"end": 3934,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "88"
										},
										{
											"begin": 3862,
											"end": 3934,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 3862,
											"end": 3934,
											"name": "tag",
											"source": 4,
											"value": "113"
										},
										{
											"begin": 3862,
											"end": 3934,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3653,
											"end": 3941,
											"name": "SWAP5",
											"source": 4
										},
										{
											"begin": 3653,
											"end": 3941,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 3653,
											"end": 3941,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3653,
											"end": 3941,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3653,
											"end": 3941,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3653,
											"end": 3941,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3653,
											"end": 3941,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 3947,
											"end": 4161,
											"name": "tag",
											"source": 4,
											"value": "34"
										},
										{
											"begin": 3947,
											"end": 4161,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3947,
											"end": 4161,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4074,
											"end": 4076,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 4063,
											"end": 4072,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4059,
											"end": 4077,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4051,
											"end": 4077,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4051,
											"end": 4077,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4087,
											"end": 4154,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "115"
										},
										{
											"begin": 4151,
											"end": 4152,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4140,
											"end": 4149,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 4136,
											"end": 4153,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4127,
											"end": 4133,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 4087,
											"end": 4154,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "96"
										},
										{
											"begin": 4087,
											"end": 4154,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 4087,
											"end": 4154,
											"name": "tag",
											"source": 4,
											"value": "115"
										},
										{
											"begin": 4087,
											"end": 4154,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4041,
											"end": 4161,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 4041,
											"end": 4161,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4041,
											"end": 4161,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4041,
											"end": 4161,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4041,
											"end": 4161,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 4167,
											"end": 4336,
											"name": "tag",
											"source": 4,
											"value": "83"
										},
										{
											"begin": 4167,
											"end": 4336,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4167,
											"end": 4336,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4285,
											"end": 4291,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4280,
											"end": 4283,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4273,
											"end": 4292,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4325,
											"end": 4329,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 4320,
											"end": 4323,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4316,
											"end": 4330,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4301,
											"end": 4330,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4301,
											"end": 4330,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4263,
											"end": 4336,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 4263,
											"end": 4336,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4263,
											"end": 4336,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4263,
											"end": 4336,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4263,
											"end": 4336,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 4342,
											"end": 4438,
											"name": "tag",
											"source": 4,
											"value": "79"
										},
										{
											"begin": 4342,
											"end": 4438,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4342,
											"end": 4438,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4408,
											"end": 4432,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "118"
										},
										{
											"begin": 4426,
											"end": 4431,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4408,
											"end": 4432,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "119"
										},
										{
											"begin": 4408,
											"end": 4432,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 4408,
											"end": 4432,
											"name": "tag",
											"source": 4,
											"value": "118"
										},
										{
											"begin": 4408,
											"end": 4432,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4397,
											"end": 4432,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4397,
											"end": 4432,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4387,
											"end": 4438,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4387,
											"end": 4438,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4387,
											"end": 4438,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4387,
											"end": 4438,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 4444,
											"end": 4556,
											"name": "tag",
											"source": 4,
											"value": "87"
										},
										{
											"begin": 4444,
											"end": 4556,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4444,
											"end": 4556,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4521,
											"end": 4549,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4514,
											"end": 4519,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4510,
											"end": 4550,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 4499,
											"end": 4550,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4499,
											"end": 4550,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4489,
											"end": 4556,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4489,
											"end": 4556,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4489,
											"end": 4556,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4489,
											"end": 4556,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 4562,
											"end": 4688,
											"name": "tag",
											"source": 4,
											"value": "119"
										},
										{
											"begin": 4562,
											"end": 4688,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4562,
											"end": 4688,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4639,
											"end": 4681,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4632,
											"end": 4637,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4628,
											"end": 4682,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 4617,
											"end": 4682,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4617,
											"end": 4682,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4607,
											"end": 4688,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4607,
											"end": 4688,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4607,
											"end": 4688,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4607,
											"end": 4688,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 4694,
											"end": 4771,
											"name": "tag",
											"source": 4,
											"value": "91"
										},
										{
											"begin": 4694,
											"end": 4771,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4694,
											"end": 4771,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4760,
											"end": 4765,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4749,
											"end": 4765,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4749,
											"end": 4765,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4739,
											"end": 4771,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4739,
											"end": 4771,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4739,
											"end": 4771,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4739,
											"end": 4771,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 4777,
											"end": 4872,
											"name": "tag",
											"source": 4,
											"value": "95"
										},
										{
											"begin": 4777,
											"end": 4872,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4777,
											"end": 4872,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4853,
											"end": 4865,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFF"
										},
										{
											"begin": 4846,
											"end": 4851,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4842,
											"end": 4866,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 4831,
											"end": 4866,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4831,
											"end": 4866,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4821,
											"end": 4872,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4821,
											"end": 4872,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4821,
											"end": 4872,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4821,
											"end": 4872,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 4878,
											"end": 4964,
											"name": "tag",
											"source": 4,
											"value": "99"
										},
										{
											"begin": 4878,
											"end": 4964,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4878,
											"end": 4964,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4953,
											"end": 4957,
											"name": "PUSH",
											"source": 4,
											"value": "FF"
										},
										{
											"begin": 4946,
											"end": 4951,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4942,
											"end": 4958,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 4931,
											"end": 4958,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4931,
											"end": 4958,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4921,
											"end": 4964,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4921,
											"end": 4964,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4921,
											"end": 4964,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4921,
											"end": 4964,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 4970,
											"end": 5092,
											"name": "tag",
											"source": 4,
											"value": "61"
										},
										{
											"begin": 4970,
											"end": 5092,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5043,
											"end": 5067,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "126"
										},
										{
											"begin": 5061,
											"end": 5066,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5043,
											"end": 5067,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "79"
										},
										{
											"begin": 5043,
											"end": 5067,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 5043,
											"end": 5067,
											"name": "tag",
											"source": 4,
											"value": "126"
										},
										{
											"begin": 5043,
											"end": 5067,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5036,
											"end": 5041,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5033,
											"end": 5068,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 5023,
											"end": 5025,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "127"
										},
										{
											"begin": 5023,
											"end": 5025,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 5082,
											"end": 5083,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5079,
											"end": 5080,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 5072,
											"end": 5084,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 5023,
											"end": 5025,
											"name": "tag",
											"source": 4,
											"value": "127"
										},
										{
											"begin": 5023,
											"end": 5025,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5013,
											"end": 5092,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5013,
											"end": 5092,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 5098,
											"end": 5220,
											"name": "tag",
											"source": 4,
											"value": "65"
										},
										{
											"begin": 5098,
											"end": 5220,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5171,
											"end": 5195,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "129"
										},
										{
											"begin": 5189,
											"end": 5194,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5171,
											"end": 5195,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "91"
										},
										{
											"begin": 5171,
											"end": 5195,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 5171,
											"end": 5195,
											"name": "tag",
											"source": 4,
											"value": "129"
										},
										{
											"begin": 5171,
											"end": 5195,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5164,
											"end": 5169,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5161,
											"end": 5196,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 5151,
											"end": 5153,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "130"
										},
										{
											"begin": 5151,
											"end": 5153,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 5210,
											"end": 5211,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5207,
											"end": 5208,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 5200,
											"end": 5212,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 5151,
											"end": 5153,
											"name": "tag",
											"source": 4,
											"value": "130"
										},
										{
											"begin": 5151,
											"end": 5153,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5141,
											"end": 5220,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5141,
											"end": 5220,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"DISTRIBUTION_END()": "919cd40f",
							"EMISSION_MANAGER()": "cbcbb507",
							"PRECISION()": "aaf5eb68",
							"assets(address)": "f11b8188",
							"getAssetData(address)": "1652e7b7",
							"getDistributionEnd()": "cc69afec",
							"getUserAssetData(address,address)": "3373ee4c",
							"setDistributionEnd(uint256)": "39ccbdd3"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.7.5+commit.eb77ed08\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"emissionManager\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"emission\",\"type\":\"uint256\"}],\"name\":\"AssetConfigUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"AssetIndexUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newDistributionEnd\",\"type\":\"uint256\"}],\"name\":\"DistributionEndUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"UserIndexUpdated\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DISTRIBUTION_END\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"EMISSION_MANAGER\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"PRECISION\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"assets\",\"outputs\":[{\"internalType\":\"uint104\",\"name\":\"emissionPerSecond\",\"type\":\"uint104\"},{\"internalType\":\"uint104\",\"name\":\"index\",\"type\":\"uint104\"},{\"internalType\":\"uint40\",\"name\":\"lastUpdateTimestamp\",\"type\":\"uint40\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"}],\"name\":\"getAssetData\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getDistributionEnd\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"}],\"name\":\"getUserAssetData\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"distributionEnd\",\"type\":\"uint256\"}],\"name\":\"setDistributionEnd\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"Omnidex*\",\"kind\":\"dev\",\"methods\":{\"DISTRIBUTION_END()\":{\"details\":\"for backwards compatibility with the previous DistributionManager used\",\"returns\":{\"_0\":\"The end of the distribution*\"}},\"getAssetData(address)\":{\"details\":\"Returns the configuration of the distribution for a certain asset\",\"params\":{\"asset\":\"The address of the reference asset of the distribution\"},\"returns\":{\"_0\":\"The asset index, the emission per second and the last updated timestamp*\"}},\"getDistributionEnd()\":{\"details\":\"Gets the end date for the distribution\",\"returns\":{\"_0\":\"The end of the distribution*\"}},\"getUserAssetData(address,address)\":{\"details\":\"Returns the data of an user on a distribution\",\"params\":{\"asset\":\"The address of the reference asset of the distribution\",\"user\":\"Address of the user\"},\"returns\":{\"_0\":\"The new index*\"}},\"setDistributionEnd(uint256)\":{\"details\":\"Sets the end date for the distribution\",\"params\":{\"distributionEnd\":\"The end date timestamp*\"}}},\"title\":\"DistributionManager\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"Accounting contract to manage multiple staking distributions\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Omnidex-incentives/incentives/base/DistributionManager.sol\":\"DistributionManager\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/Omnidex-incentives/incentives/base/DistributionManager.sol\":{\"keccak256\":\"0x43b2afa8394898d61bde7ecac7d145cf194b5dfd953d2c9d7694645580a84723\",\"license\":\"agpl-3.0\",\"urls\":[\"bzz-raw://c468a996e248fa021a4886f2a8289426593a6ebe3a7269f4aa08a6af741c232f\",\"dweb:/ipfs/QmUe2xxKETrRMB32joUxdRtn6FVNMm7mVRyEFtftiCZcy1\"]},\"contracts/Omnidex-incentives/interfaces/IOmnidexDistributionManager.sol\":{\"keccak256\":\"0xabf5e1d31a3567f017adf41a4384f0c7a6fce4e81441a7b42fb565f92256a87d\",\"license\":\"agpl-3.0\",\"urls\":[\"bzz-raw://a2aab2cd0efc27da9ced088fcb5534b62c4ebd436688778af86949e706d22fef\",\"dweb:/ipfs/QmPAQiLYLB7QXMKaHjSwWKaK8mN8pgBRteJUqg5ptKebZE\"]},\"contracts/Omnidex-incentives/lib/DistributionTypes.sol\":{\"keccak256\":\"0xbb24d51b39ff627c1d2dbbaa5063ae7f1d515ec3980cc6ed8f5d171c17ef1d36\",\"license\":\"agpl-3.0\",\"urls\":[\"bzz-raw://30120d3556895da3f517a6ce8954e4419944f9e07b7b4cd3d596df3e8e8103e3\",\"dweb:/ipfs/QmTXPN7Q8ULdJnJVGVTwLbw7Rvy5h17DfabKf8szvprQNb\"]},\"contracts/Omnidex-incentives/lib/SafeMath.sol\":{\"keccak256\":\"0x23218dd12c40acbd9c7c6f799d20dd84c88e1262583e25465f1413ed8c5d67d5\",\"license\":\"agpl-3.0\",\"urls\":[\"bzz-raw://4896e02c7ad212eb804e1ad03a711f964e04eb9b7d6c0024a4cd26b29adc0a1a\",\"dweb:/ipfs/QmamjuX7iGUgpGCgnsPnUsfFMG751kBzrnB2gZFP1tkvxL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 34,
								"contract": "contracts/Omnidex-incentives/incentives/base/DistributionManager.sol:DistributionManager",
								"label": "assets",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_struct(AssetData)25_storage)"
							},
							{
								"astId": 36,
								"contract": "contracts/Omnidex-incentives/incentives/base/DistributionManager.sol:DistributionManager",
								"label": "_distributionEnd",
								"offset": 0,
								"slot": "1",
								"type": "t_uint256"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_struct(AssetData)25_storage)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => struct DistributionManager.AssetData)",
								"numberOfBytes": "32",
								"value": "t_struct(AssetData)25_storage"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_struct(AssetData)25_storage": {
								"encoding": "inplace",
								"label": "struct DistributionManager.AssetData",
								"members": [
									{
										"astId": 16,
										"contract": "contracts/Omnidex-incentives/incentives/base/DistributionManager.sol:DistributionManager",
										"label": "emissionPerSecond",
										"offset": 0,
										"slot": "0",
										"type": "t_uint104"
									},
									{
										"astId": 18,
										"contract": "contracts/Omnidex-incentives/incentives/base/DistributionManager.sol:DistributionManager",
										"label": "index",
										"offset": 13,
										"slot": "0",
										"type": "t_uint104"
									},
									{
										"astId": 20,
										"contract": "contracts/Omnidex-incentives/incentives/base/DistributionManager.sol:DistributionManager",
										"label": "lastUpdateTimestamp",
										"offset": 26,
										"slot": "0",
										"type": "t_uint40"
									},
									{
										"astId": 24,
										"contract": "contracts/Omnidex-incentives/incentives/base/DistributionManager.sol:DistributionManager",
										"label": "users",
										"offset": 0,
										"slot": "1",
										"type": "t_mapping(t_address,t_uint256)"
									}
								],
								"numberOfBytes": "64"
							},
							"t_uint104": {
								"encoding": "inplace",
								"label": "uint104",
								"numberOfBytes": "13"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							},
							"t_uint40": {
								"encoding": "inplace",
								"label": "uint40",
								"numberOfBytes": "5"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"notice": "Accounting contract to manage multiple staking distributions",
						"version": 1
					}
				}
			},
			"contracts/Omnidex-incentives/interfaces/IOmnidexDistributionManager.sol": {
				"IOmnidexDistributionManager": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "asset",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "emission",
									"type": "uint256"
								}
							],
							"name": "AssetConfigUpdated",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "asset",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "index",
									"type": "uint256"
								}
							],
							"name": "AssetIndexUpdated",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "newDistributionEnd",
									"type": "uint256"
								}
							],
							"name": "DistributionEndUpdated",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "asset",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "index",
									"type": "uint256"
								}
							],
							"name": "UserIndexUpdated",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "DISTRIBUTION_END",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "asset",
									"type": "address"
								}
							],
							"name": "getAssetData",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getDistributionEnd",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "asset",
									"type": "address"
								}
							],
							"name": "getUserAssetData",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "distributionEnd",
									"type": "uint256"
								}
							],
							"name": "setDistributionEnd",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"DISTRIBUTION_END()": {
								"details": "for backwards compatibility with the previous DistributionManager used",
								"returns": {
									"_0": "The end of the distribution*"
								}
							},
							"getAssetData(address)": {
								"details": "Returns the configuration of the distribution for a certain asset",
								"params": {
									"asset": "The address of the reference asset of the distribution"
								},
								"returns": {
									"_0": "The asset index, the emission per second and the last updated timestamp*"
								}
							},
							"getDistributionEnd()": {
								"details": "Gets the end date for the distribution",
								"returns": {
									"_0": "The end of the distribution*"
								}
							},
							"getUserAssetData(address,address)": {
								"details": "Returns the data of an user on a distribution",
								"params": {
									"asset": "The address of the reference asset of the distribution",
									"user": "Address of the user"
								},
								"returns": {
									"_0": "The new index*"
								}
							},
							"setDistributionEnd(uint256)": {
								"details": "Sets the end date for the distribution",
								"params": {
									"distributionEnd": "The end date timestamp*"
								}
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"DISTRIBUTION_END()": "919cd40f",
							"getAssetData(address)": "1652e7b7",
							"getDistributionEnd()": "cc69afec",
							"getUserAssetData(address,address)": "3373ee4c",
							"setDistributionEnd(uint256)": "39ccbdd3"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.7.5+commit.eb77ed08\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"emission\",\"type\":\"uint256\"}],\"name\":\"AssetConfigUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"AssetIndexUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newDistributionEnd\",\"type\":\"uint256\"}],\"name\":\"DistributionEndUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"UserIndexUpdated\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DISTRIBUTION_END\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"}],\"name\":\"getAssetData\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getDistributionEnd\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"}],\"name\":\"getUserAssetData\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"distributionEnd\",\"type\":\"uint256\"}],\"name\":\"setDistributionEnd\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"DISTRIBUTION_END()\":{\"details\":\"for backwards compatibility with the previous DistributionManager used\",\"returns\":{\"_0\":\"The end of the distribution*\"}},\"getAssetData(address)\":{\"details\":\"Returns the configuration of the distribution for a certain asset\",\"params\":{\"asset\":\"The address of the reference asset of the distribution\"},\"returns\":{\"_0\":\"The asset index, the emission per second and the last updated timestamp*\"}},\"getDistributionEnd()\":{\"details\":\"Gets the end date for the distribution\",\"returns\":{\"_0\":\"The end of the distribution*\"}},\"getUserAssetData(address,address)\":{\"details\":\"Returns the data of an user on a distribution\",\"params\":{\"asset\":\"The address of the reference asset of the distribution\",\"user\":\"Address of the user\"},\"returns\":{\"_0\":\"The new index*\"}},\"setDistributionEnd(uint256)\":{\"details\":\"Sets the end date for the distribution\",\"params\":{\"distributionEnd\":\"The end date timestamp*\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Omnidex-incentives/interfaces/IOmnidexDistributionManager.sol\":\"IOmnidexDistributionManager\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/Omnidex-incentives/interfaces/IOmnidexDistributionManager.sol\":{\"keccak256\":\"0xabf5e1d31a3567f017adf41a4384f0c7a6fce4e81441a7b42fb565f92256a87d\",\"license\":\"agpl-3.0\",\"urls\":[\"bzz-raw://a2aab2cd0efc27da9ced088fcb5534b62c4ebd436688778af86949e706d22fef\",\"dweb:/ipfs/QmPAQiLYLB7QXMKaHjSwWKaK8mN8pgBRteJUqg5ptKebZE\"]},\"contracts/Omnidex-incentives/lib/DistributionTypes.sol\":{\"keccak256\":\"0xbb24d51b39ff627c1d2dbbaa5063ae7f1d515ec3980cc6ed8f5d171c17ef1d36\",\"license\":\"agpl-3.0\",\"urls\":[\"bzz-raw://30120d3556895da3f517a6ce8954e4419944f9e07b7b4cd3d596df3e8e8103e3\",\"dweb:/ipfs/QmTXPN7Q8ULdJnJVGVTwLbw7Rvy5h17DfabKf8szvprQNb\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/Omnidex-incentives/lib/DistributionTypes.sol": {
				"DistributionTypes": {
					"abi": [],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/Omnidex-incentives/lib/DistributionTypes.sol\":99:368  library DistributionTypes {\r... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  invalid\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/Omnidex-incentives/lib/DistributionTypes.sol\":99:368  library DistributionTypes {\r... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220f12b1887379d916ffcee02163659cd2c9bcb9d4154814d39b80ce3c32bbbd1ed64736f6c63430007050033\n}\n",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566023600b82828239805160001a607314601657fe5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220f12b1887379d916ffcee02163659cd2c9bcb9d4154814d39b80ce3c32bbbd1ed64736f6c63430007050033",
							"opcodes": "PUSH1 0x56 PUSH1 0x23 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x16 JUMPI INVALID JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CALL 0x2B XOR DUP8 CALLDATACOPY SWAP14 SWAP2 PUSH16 0xFCEE02163659CD2C9BCB9D4154814D39 0xB8 0xC 0xE3 0xC3 0x2B 0xBB 0xD1 0xED PUSH5 0x736F6C6343 STOP SMOD SDIV STOP CALLER ",
							"sourceMap": "99:269:2:-:0;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220f12b1887379d916ffcee02163659cd2c9bcb9d4154814d39b80ce3c32bbbd1ed64736f6c63430007050033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CALL 0x2B XOR DUP8 CALLDATACOPY SWAP14 SWAP2 PUSH16 0xFCEE02163659CD2C9BCB9D4154814D39 0xB8 0xC 0xE3 0xC3 0x2B 0xBB 0xD1 0xED PUSH5 0x736F6C6343 STOP SMOD SDIV STOP CALLER ",
							"sourceMap": "99:269:2:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 99,
									"end": 368,
									"name": "PUSH #[$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 99,
									"end": 368,
									"name": "PUSH [$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 99,
									"end": 368,
									"name": "PUSH",
									"source": 2,
									"value": "B"
								},
								{
									"begin": 99,
									"end": 368,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 99,
									"end": 368,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 99,
									"end": 368,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 99,
									"end": 368,
									"name": "CODECOPY",
									"source": 2
								},
								{
									"begin": 99,
									"end": 368,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 99,
									"end": 368,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 99,
									"end": 368,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 99,
									"end": 368,
									"name": "BYTE",
									"source": 2
								},
								{
									"begin": 99,
									"end": 368,
									"name": "PUSH",
									"source": 2,
									"value": "73"
								},
								{
									"begin": 99,
									"end": 368,
									"name": "EQ",
									"source": 2
								},
								{
									"begin": 99,
									"end": 368,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 99,
									"end": 368,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 99,
									"end": 368,
									"name": "INVALID",
									"source": 2
								},
								{
									"begin": 99,
									"end": 368,
									"name": "tag",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 99,
									"end": 368,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 99,
									"end": 368,
									"name": "ADDRESS",
									"source": 2
								},
								{
									"begin": 99,
									"end": 368,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 99,
									"end": 368,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 99,
									"end": 368,
									"name": "PUSH",
									"source": 2,
									"value": "73"
								},
								{
									"begin": 99,
									"end": 368,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 99,
									"end": 368,
									"name": "MSTORE8",
									"source": 2
								},
								{
									"begin": 99,
									"end": 368,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 99,
									"end": 368,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 99,
									"end": 368,
									"name": "RETURN",
									"source": 2
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220f12b1887379d916ffcee02163659cd2c9bcb9d4154814d39b80ce3c32bbbd1ed64736f6c63430007050033",
									".code": [
										{
											"begin": 99,
											"end": 368,
											"name": "PUSHDEPLOYADDRESS",
											"source": 2
										},
										{
											"begin": 99,
											"end": 368,
											"name": "ADDRESS",
											"source": 2
										},
										{
											"begin": 99,
											"end": 368,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 99,
											"end": 368,
											"name": "PUSH",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 99,
											"end": 368,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 99,
											"end": 368,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 99,
											"end": 368,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 99,
											"end": 368,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 99,
											"end": 368,
											"name": "REVERT",
											"source": 2
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.7.5+commit.eb77ed08\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Omnidex-incentives/lib/DistributionTypes.sol\":\"DistributionTypes\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/Omnidex-incentives/lib/DistributionTypes.sol\":{\"keccak256\":\"0xbb24d51b39ff627c1d2dbbaa5063ae7f1d515ec3980cc6ed8f5d171c17ef1d36\",\"license\":\"agpl-3.0\",\"urls\":[\"bzz-raw://30120d3556895da3f517a6ce8954e4419944f9e07b7b4cd3d596df3e8e8103e3\",\"dweb:/ipfs/QmTXPN7Q8ULdJnJVGVTwLbw7Rvy5h17DfabKf8szvprQNb\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/Omnidex-incentives/lib/SafeMath.sol": {
				"SafeMath": {
					"abi": [],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"title": "Optimized overflow and underflow safe math operations",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/Omnidex-incentives/lib/SafeMath.sol\":275:1339  library SafeMath {\r... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  invalid\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/Omnidex-incentives/lib/SafeMath.sol\":275:1339  library SafeMath {\r... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220b9796beb1a76f8440285a3dd20197ff5a929fc541cee2f77c09be0e5c1e7d37864736f6c63430007050033\n}\n",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566023600b82828239805160001a607314601657fe5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220b9796beb1a76f8440285a3dd20197ff5a929fc541cee2f77c09be0e5c1e7d37864736f6c63430007050033",
							"opcodes": "PUSH1 0x56 PUSH1 0x23 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x16 JUMPI INVALID JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB9 PUSH26 0x6BEB1A76F8440285A3DD20197FF5A929FC541CEE2F77C09BE0E5 0xC1 0xE7 0xD3 PUSH25 0x64736F6C634300070500330000000000000000000000000000 ",
							"sourceMap": "275:1064:3:-:0;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220b9796beb1a76f8440285a3dd20197ff5a929fc541cee2f77c09be0e5c1e7d37864736f6c63430007050033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB9 PUSH26 0x6BEB1A76F8440285A3DD20197FF5A929FC541CEE2F77C09BE0E5 0xC1 0xE7 0xD3 PUSH25 0x64736F6C634300070500330000000000000000000000000000 ",
							"sourceMap": "275:1064:3:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"add(uint256,uint256)": "infinite",
								"div(uint256,uint256)": "infinite",
								"mul(uint256,uint256)": "infinite",
								"sub(uint256,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 275,
									"end": 1339,
									"name": "PUSH #[$]",
									"source": 3,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 275,
									"end": 1339,
									"name": "PUSH [$]",
									"source": 3,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 275,
									"end": 1339,
									"name": "PUSH",
									"source": 3,
									"value": "B"
								},
								{
									"begin": 275,
									"end": 1339,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 275,
									"end": 1339,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 275,
									"end": 1339,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 275,
									"end": 1339,
									"name": "CODECOPY",
									"source": 3
								},
								{
									"begin": 275,
									"end": 1339,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 275,
									"end": 1339,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 275,
									"end": 1339,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 275,
									"end": 1339,
									"name": "BYTE",
									"source": 3
								},
								{
									"begin": 275,
									"end": 1339,
									"name": "PUSH",
									"source": 3,
									"value": "73"
								},
								{
									"begin": 275,
									"end": 1339,
									"name": "EQ",
									"source": 3
								},
								{
									"begin": 275,
									"end": 1339,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 275,
									"end": 1339,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 275,
									"end": 1339,
									"name": "INVALID",
									"source": 3
								},
								{
									"begin": 275,
									"end": 1339,
									"name": "tag",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 275,
									"end": 1339,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 275,
									"end": 1339,
									"name": "ADDRESS",
									"source": 3
								},
								{
									"begin": 275,
									"end": 1339,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 275,
									"end": 1339,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 275,
									"end": 1339,
									"name": "PUSH",
									"source": 3,
									"value": "73"
								},
								{
									"begin": 275,
									"end": 1339,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 275,
									"end": 1339,
									"name": "MSTORE8",
									"source": 3
								},
								{
									"begin": 275,
									"end": 1339,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 275,
									"end": 1339,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 275,
									"end": 1339,
									"name": "RETURN",
									"source": 3
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220b9796beb1a76f8440285a3dd20197ff5a929fc541cee2f77c09be0e5c1e7d37864736f6c63430007050033",
									".code": [
										{
											"begin": 275,
											"end": 1339,
											"name": "PUSHDEPLOYADDRESS",
											"source": 3
										},
										{
											"begin": 275,
											"end": 1339,
											"name": "ADDRESS",
											"source": 3
										},
										{
											"begin": 275,
											"end": 1339,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 275,
											"end": 1339,
											"name": "PUSH",
											"source": 3,
											"value": "80"
										},
										{
											"begin": 275,
											"end": 1339,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 275,
											"end": 1339,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 275,
											"end": 1339,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 275,
											"end": 1339,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 275,
											"end": 1339,
											"name": "REVERT",
											"source": 3
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.7.5+commit.eb77ed08\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"title\":\"Optimized overflow and underflow safe math operations\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"Contains methods for doing math operations that revert on overflow or underflow for minimal gas cost inspired by uniswap V3\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Omnidex-incentives/lib/SafeMath.sol\":\"SafeMath\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/Omnidex-incentives/lib/SafeMath.sol\":{\"keccak256\":\"0x23218dd12c40acbd9c7c6f799d20dd84c88e1262583e25465f1413ed8c5d67d5\",\"license\":\"agpl-3.0\",\"urls\":[\"bzz-raw://4896e02c7ad212eb804e1ad03a711f964e04eb9b7d6c0024a4cd26b29adc0a1a\",\"dweb:/ipfs/QmamjuX7iGUgpGCgnsPnUsfFMG751kBzrnB2gZFP1tkvxL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"notice": "Contains methods for doing math operations that revert on overflow or underflow for minimal gas cost inspired by uniswap V3",
						"version": 1
					}
				}
			}
		},
		"sources": {
			"contracts/Omnidex-incentives/incentives/base/DistributionManager.sol": {
				"ast": {
					"absolutePath": "contracts/Omnidex-incentives/incentives/base/DistributionManager.sol",
					"exportedSymbols": {
						"DistributionManager": [
							605
						],
						"DistributionTypes": [
							693
						],
						"IOmnidexDistributionManager": [
							675
						],
						"SafeMath": [
							783
						]
					},
					"id": 606,
					"license": "agpl-3.0",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"0.7",
								".5"
							],
							"nodeType": "PragmaDirective",
							"src": "38:22:0"
						},
						{
							"id": 2,
							"literals": [
								"experimental",
								"ABIEncoderV2"
							],
							"nodeType": "PragmaDirective",
							"src": "62:33:0"
						},
						{
							"absolutePath": "contracts/Omnidex-incentives/interfaces/IOmnidexDistributionManager.sol",
							"file": "../../interfaces/IOmnidexDistributionManager.sol",
							"id": 4,
							"nodeType": "ImportDirective",
							"scope": 606,
							"sourceUnit": 676,
							"src": "99:93:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 3,
										"name": "IOmnidexDistributionManager",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"src": "107:27:0",
										"typeDescriptions": {}
									}
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/Omnidex-incentives/lib/SafeMath.sol",
							"file": "../../lib/SafeMath.sol",
							"id": 6,
							"nodeType": "ImportDirective",
							"scope": 606,
							"sourceUnit": 784,
							"src": "194:48:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 5,
										"name": "SafeMath",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"src": "202:8:0",
										"typeDescriptions": {}
									}
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/Omnidex-incentives/lib/DistributionTypes.sol",
							"file": "../../lib/DistributionTypes.sol",
							"id": 8,
							"nodeType": "ImportDirective",
							"scope": 606,
							"sourceUnit": 694,
							"src": "244:66:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 7,
										"name": "DistributionTypes",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"src": "252:17:0",
										"typeDescriptions": {}
									}
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 10,
										"name": "IOmnidexDistributionManager",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 675,
										"src": "481:27:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IOmnidexDistributionManager_$675",
											"typeString": "contract IOmnidexDistributionManager"
										}
									},
									"id": 11,
									"nodeType": "InheritanceSpecifier",
									"src": "481:27:0"
								}
							],
							"contractDependencies": [
								675
							],
							"contractKind": "contract",
							"documentation": {
								"id": 9,
								"nodeType": "StructuredDocumentation",
								"src": "314:133:0",
								"text": " @title DistributionManager\n @notice Accounting contract to manage multiple staking distributions\n @author Omnidex*"
							},
							"fullyImplemented": true,
							"id": 605,
							"linearizedBaseContracts": [
								605,
								675
							],
							"name": "DistributionManager",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"id": 14,
									"libraryName": {
										"id": 12,
										"name": "SafeMath",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 783,
										"src": "520:8:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_SafeMath_$783",
											"typeString": "library SafeMath"
										}
									},
									"nodeType": "UsingForDirective",
									"src": "514:27:0",
									"typeName": {
										"id": 13,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "533:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"canonicalName": "DistributionManager.AssetData",
									"id": 25,
									"members": [
										{
											"constant": false,
											"id": 16,
											"mutability": "mutable",
											"name": "emissionPerSecond",
											"nodeType": "VariableDeclaration",
											"scope": 25,
											"src": "571:25:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint104",
												"typeString": "uint104"
											},
											"typeName": {
												"id": 15,
												"name": "uint104",
												"nodeType": "ElementaryTypeName",
												"src": "571:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint104",
													"typeString": "uint104"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 18,
											"mutability": "mutable",
											"name": "index",
											"nodeType": "VariableDeclaration",
											"scope": 25,
											"src": "603:13:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint104",
												"typeString": "uint104"
											},
											"typeName": {
												"id": 17,
												"name": "uint104",
												"nodeType": "ElementaryTypeName",
												"src": "603:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint104",
													"typeString": "uint104"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 20,
											"mutability": "mutable",
											"name": "lastUpdateTimestamp",
											"nodeType": "VariableDeclaration",
											"scope": 25,
											"src": "623:26:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint40",
												"typeString": "uint40"
											},
											"typeName": {
												"id": 19,
												"name": "uint40",
												"nodeType": "ElementaryTypeName",
												"src": "623:6:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint40",
													"typeString": "uint40"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 24,
											"mutability": "mutable",
											"name": "users",
											"nodeType": "VariableDeclaration",
											"scope": 25,
											"src": "656:33:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"typeName": {
												"id": 23,
												"keyType": {
													"id": 21,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "664:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "Mapping",
												"src": "656:27:0",
												"typeDescriptions": {
													"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
													"typeString": "mapping(address => uint256)"
												},
												"valueType": {
													"id": 22,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "675:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												}
											},
											"visibility": "internal"
										}
									],
									"name": "AssetData",
									"nodeType": "StructDefinition",
									"scope": 605,
									"src": "547:148:0",
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "cbcbb507",
									"id": 27,
									"mutability": "immutable",
									"name": "EMISSION_MANAGER",
									"nodeType": "VariableDeclaration",
									"scope": 605,
									"src": "701:41:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 26,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "701:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "aaf5eb68",
									"id": 30,
									"mutability": "constant",
									"name": "PRECISION",
									"nodeType": "VariableDeclaration",
									"scope": 605,
									"src": "749:36:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint8",
										"typeString": "uint8"
									},
									"typeName": {
										"id": 28,
										"name": "uint8",
										"nodeType": "ElementaryTypeName",
										"src": "749:5:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint8",
											"typeString": "uint8"
										}
									},
									"value": {
										"hexValue": "3138",
										"id": 29,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "783:2:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_18_by_1",
											"typeString": "int_const 18"
										},
										"value": "18"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "f11b8188",
									"id": 34,
									"mutability": "mutable",
									"name": "assets",
									"nodeType": "VariableDeclaration",
									"scope": 605,
									"src": "792:43:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_struct$_AssetData_$25_storage_$",
										"typeString": "mapping(address => struct DistributionManager.AssetData)"
									},
									"typeName": {
										"id": 33,
										"keyType": {
											"id": 31,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "800:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "792:29:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_struct$_AssetData_$25_storage_$",
											"typeString": "mapping(address => struct DistributionManager.AssetData)"
										},
										"valueType": {
											"id": 32,
											"name": "AssetData",
											"nodeType": "UserDefinedTypeName",
											"referencedDeclaration": 25,
											"src": "811:9:0",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_AssetData_$25_storage_ptr",
												"typeString": "struct DistributionManager.AssetData"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 36,
									"mutability": "mutable",
									"name": "_distributionEnd",
									"nodeType": "VariableDeclaration",
									"scope": 605,
									"src": "842:33:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 35,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "842:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "internal"
								},
								{
									"body": {
										"id": 47,
										"nodeType": "Block",
										"src": "913:85:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 42,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 39,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": -15,
																	"src": "928:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 40,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "928:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"id": 41,
																"name": "EMISSION_MANAGER",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 27,
																"src": "942:16:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "928:30:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f4e4c595f454d495353494f4e5f4d414e41474552",
															"id": 43,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "960:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_a28d34ff463a8cc689c6ec4b8c995983f85d0a40987242bc4cc3cec37303c18e",
																"typeString": "literal_string \"ONLY_EMISSION_MANAGER\""
															},
															"value": "ONLY_EMISSION_MANAGER"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_a28d34ff463a8cc689c6ec4b8c995983f85d0a40987242bc4cc3cec37303c18e",
																"typeString": "literal_string \"ONLY_EMISSION_MANAGER\""
															}
														],
														"id": 38,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "920:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 44,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "920:64:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 45,
												"nodeType": "ExpressionStatement",
												"src": "920:64:0"
											},
											{
												"id": 46,
												"nodeType": "PlaceholderStatement",
												"src": "991:1:0"
											}
										]
									},
									"id": 48,
									"name": "onlyEmissionManager",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 37,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "910:2:0"
									},
									"src": "882:116:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 57,
										"nodeType": "Block",
										"src": "1041:47:0",
										"statements": [
											{
												"expression": {
													"id": 55,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 53,
														"name": "EMISSION_MANAGER",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 27,
														"src": "1048:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 54,
														"name": "emissionManager",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 50,
														"src": "1067:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1048:34:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 56,
												"nodeType": "ExpressionStatement",
												"src": "1048:34:0"
											}
										]
									},
									"id": 58,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 51,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 50,
												"mutability": "mutable",
												"name": "emissionManager",
												"nodeType": "VariableDeclaration",
												"scope": 58,
												"src": "1016:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 49,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1016:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1015:25:0"
									},
									"returnParameters": {
										"id": 52,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1041:0:0"
									},
									"scope": 605,
									"src": "1004:84:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										640
									],
									"body": {
										"id": 75,
										"nodeType": "Block",
										"src": "1232:98:0",
										"statements": [
											{
												"expression": {
													"id": 69,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 67,
														"name": "_distributionEnd",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 36,
														"src": "1239:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 68,
														"name": "distributionEnd",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 61,
														"src": "1258:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1239:34:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 70,
												"nodeType": "ExpressionStatement",
												"src": "1239:34:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 72,
															"name": "distributionEnd",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 61,
															"src": "1308:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 71,
														"name": "DistributionEndUpdated",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 634,
														"src": "1285:22:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 73,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1285:39:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 74,
												"nodeType": "EmitStatement",
												"src": "1280:44:0"
											}
										]
									},
									"documentation": {
										"id": 59,
										"nodeType": "StructuredDocumentation",
										"src": "1094:43:0",
										"text": "@inheritdoc IOmnidexDistributionManager"
									},
									"functionSelector": "39ccbdd3",
									"id": 76,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 65,
											"modifierName": {
												"id": 64,
												"name": "onlyEmissionManager",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 48,
												"src": "1212:19:0",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "1212:19:0"
										}
									],
									"name": "setDistributionEnd",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 63,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "1203:8:0"
									},
									"parameters": {
										"id": 62,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 61,
												"mutability": "mutable",
												"name": "distributionEnd",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "1169:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 60,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1169:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1168:25:0"
									},
									"returnParameters": {
										"id": 66,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1232:0:0"
									},
									"scope": 605,
									"src": "1141:189:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										646
									],
									"body": {
										"id": 85,
										"nodeType": "Block",
										"src": "1454:36:0",
										"statements": [
											{
												"expression": {
													"id": 83,
													"name": "_distributionEnd",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 36,
													"src": "1468:16:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 82,
												"id": 84,
												"nodeType": "Return",
												"src": "1461:23:0"
											}
										]
									},
									"documentation": {
										"id": 77,
										"nodeType": "StructuredDocumentation",
										"src": "1336:43:0",
										"text": "@inheritdoc IOmnidexDistributionManager"
									},
									"functionSelector": "cc69afec",
									"id": 86,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getDistributionEnd",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 79,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "1427:8:0"
									},
									"parameters": {
										"id": 78,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1410:2:0"
									},
									"returnParameters": {
										"id": 82,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 81,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 86,
												"src": "1445:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 80,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1445:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1444:9:0"
									},
									"scope": 605,
									"src": "1383:107:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										652
									],
									"body": {
										"id": 95,
										"nodeType": "Block",
										"src": "1612:36:0",
										"statements": [
											{
												"expression": {
													"id": 93,
													"name": "_distributionEnd",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 36,
													"src": "1626:16:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 92,
												"id": 94,
												"nodeType": "Return",
												"src": "1619:23:0"
											}
										]
									},
									"documentation": {
										"id": 87,
										"nodeType": "StructuredDocumentation",
										"src": "1496:43:0",
										"text": "@inheritdoc IOmnidexDistributionManager"
									},
									"functionSelector": "919cd40f",
									"id": 96,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "DISTRIBUTION_END",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 89,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "1585:8:0"
									},
									"parameters": {
										"id": 88,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1568:2:0"
									},
									"returnParameters": {
										"id": 92,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 91,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 96,
												"src": "1603:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 90,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1603:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1602:9:0"
									},
									"scope": 605,
									"src": "1543:105:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										662
									],
									"body": {
										"id": 114,
										"nodeType": "Block",
										"src": "1795:45:0",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"expression": {
															"baseExpression": {
																"id": 107,
																"name": "assets",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 34,
																"src": "1809:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_struct$_AssetData_$25_storage_$",
																	"typeString": "mapping(address => struct DistributionManager.AssetData storage ref)"
																}
															},
															"id": 109,
															"indexExpression": {
																"id": 108,
																"name": "asset",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 101,
																"src": "1816:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "1809:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_AssetData_$25_storage",
																"typeString": "struct DistributionManager.AssetData storage ref"
															}
														},
														"id": 110,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "users",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 24,
														"src": "1809:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 112,
													"indexExpression": {
														"id": 111,
														"name": "user",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 99,
														"src": "1829:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "1809:25:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 106,
												"id": 113,
												"nodeType": "Return",
												"src": "1802:32:0"
											}
										]
									},
									"documentation": {
										"id": 97,
										"nodeType": "StructuredDocumentation",
										"src": "1654:43:0",
										"text": "@inheritdoc IOmnidexDistributionManager"
									},
									"functionSelector": "3373ee4c",
									"id": 115,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getUserAssetData",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 103,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "1768:8:0"
									},
									"parameters": {
										"id": 102,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 99,
												"mutability": "mutable",
												"name": "user",
												"nodeType": "VariableDeclaration",
												"scope": 115,
												"src": "1727:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 98,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1727:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 101,
												"mutability": "mutable",
												"name": "asset",
												"nodeType": "VariableDeclaration",
												"scope": 115,
												"src": "1741:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 100,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1741:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1726:29:0"
									},
									"returnParameters": {
										"id": 106,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 105,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 115,
												"src": "1786:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 104,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1786:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1785:9:0"
									},
									"scope": 605,
									"src": "1701:139:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										674
									],
									"body": {
										"id": 142,
										"nodeType": "Block",
										"src": "1987:109:0",
										"statements": [
											{
												"expression": {
													"components": [
														{
															"expression": {
																"baseExpression": {
																	"id": 128,
																	"name": "assets",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 34,
																	"src": "2002:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_struct$_AssetData_$25_storage_$",
																		"typeString": "mapping(address => struct DistributionManager.AssetData storage ref)"
																	}
																},
																"id": 130,
																"indexExpression": {
																	"id": 129,
																	"name": "asset",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 118,
																	"src": "2009:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "2002:13:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_AssetData_$25_storage",
																	"typeString": "struct DistributionManager.AssetData storage ref"
																}
															},
															"id": 131,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "index",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 18,
															"src": "2002:19:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint104",
																"typeString": "uint104"
															}
														},
														{
															"expression": {
																"baseExpression": {
																	"id": 132,
																	"name": "assets",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 34,
																	"src": "2023:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_struct$_AssetData_$25_storage_$",
																		"typeString": "mapping(address => struct DistributionManager.AssetData storage ref)"
																	}
																},
																"id": 134,
																"indexExpression": {
																	"id": 133,
																	"name": "asset",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 118,
																	"src": "2030:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "2023:13:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_AssetData_$25_storage",
																	"typeString": "struct DistributionManager.AssetData storage ref"
																}
															},
															"id": 135,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "emissionPerSecond",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 16,
															"src": "2023:31:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint104",
																"typeString": "uint104"
															}
														},
														{
															"expression": {
																"baseExpression": {
																	"id": 136,
																	"name": "assets",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 34,
																	"src": "2056:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_struct$_AssetData_$25_storage_$",
																		"typeString": "mapping(address => struct DistributionManager.AssetData storage ref)"
																	}
																},
																"id": 138,
																"indexExpression": {
																	"id": 137,
																	"name": "asset",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 118,
																	"src": "2063:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "2056:13:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_AssetData_$25_storage",
																	"typeString": "struct DistributionManager.AssetData storage ref"
																}
															},
															"id": 139,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "lastUpdateTimestamp",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 20,
															"src": "2056:33:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint40",
																"typeString": "uint40"
															}
														}
													],
													"id": 140,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "2001:89:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_uint104_$_t_uint104_$_t_uint40_$",
														"typeString": "tuple(uint104,uint104,uint40)"
													}
												},
												"functionReturnParameters": 127,
												"id": 141,
												"nodeType": "Return",
												"src": "1994:96:0"
											}
										]
									},
									"documentation": {
										"id": 116,
										"nodeType": "StructuredDocumentation",
										"src": "1846:43:0",
										"text": "@inheritdoc IOmnidexDistributionManager"
									},
									"functionSelector": "1652e7b7",
									"id": 143,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getAssetData",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 120,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "1942:8:0"
									},
									"parameters": {
										"id": 119,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 118,
												"mutability": "mutable",
												"name": "asset",
												"nodeType": "VariableDeclaration",
												"scope": 143,
												"src": "1915:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 117,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1915:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1914:15:0"
									},
									"returnParameters": {
										"id": 127,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 122,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 143,
												"src": "1960:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 121,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1960:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 124,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 143,
												"src": "1969:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 123,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1969:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 126,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 143,
												"src": "1978:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 125,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1978:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1959:27:0"
									},
									"scope": 605,
									"src": "1893:203:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 204,
										"nodeType": "Block",
										"src": "2348:537:0",
										"statements": [
											{
												"body": {
													"id": 202,
													"nodeType": "Block",
													"src": "2410:470:0",
													"statements": [
														{
															"assignments": [
																162
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 162,
																	"mutability": "mutable",
																	"name": "assetConfig",
																	"nodeType": "VariableDeclaration",
																	"scope": 202,
																	"src": "2419:29:0",
																	"stateVariable": false,
																	"storageLocation": "storage",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_AssetData_$25_storage_ptr",
																		"typeString": "struct DistributionManager.AssetData"
																	},
																	"typeName": {
																		"id": 161,
																		"name": "AssetData",
																		"nodeType": "UserDefinedTypeName",
																		"referencedDeclaration": 25,
																		"src": "2419:9:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_AssetData_$25_storage_ptr",
																			"typeString": "struct DistributionManager.AssetData"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 169,
															"initialValue": {
																"baseExpression": {
																	"id": 163,
																	"name": "assets",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 34,
																	"src": "2451:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_struct$_AssetData_$25_storage_$",
																		"typeString": "mapping(address => struct DistributionManager.AssetData storage ref)"
																	}
																},
																"id": 168,
																"indexExpression": {
																	"expression": {
																		"baseExpression": {
																			"id": 164,
																			"name": "assetsConfigInput",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 147,
																			"src": "2458:17:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_array$_t_struct$_AssetConfigInput_$685_memory_ptr_$dyn_memory_ptr",
																				"typeString": "struct DistributionTypes.AssetConfigInput memory[] memory"
																			}
																		},
																		"id": 166,
																		"indexExpression": {
																			"id": 165,
																			"name": "i",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 151,
																			"src": "2476:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "2458:20:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_AssetConfigInput_$685_memory_ptr",
																			"typeString": "struct DistributionTypes.AssetConfigInput memory"
																		}
																	},
																	"id": 167,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "underlyingAsset",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 684,
																	"src": "2458:36:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "2451:44:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_AssetData_$25_storage",
																	"typeString": "struct DistributionManager.AssetData storage ref"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "2419:76:0"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"expression": {
																			"baseExpression": {
																				"id": 171,
																				"name": "assetsConfigInput",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 147,
																				"src": "2542:17:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_array$_t_struct$_AssetConfigInput_$685_memory_ptr_$dyn_memory_ptr",
																					"typeString": "struct DistributionTypes.AssetConfigInput memory[] memory"
																				}
																			},
																			"id": 173,
																			"indexExpression": {
																				"id": 172,
																				"name": "i",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 151,
																				"src": "2560:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "2542:20:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_AssetConfigInput_$685_memory_ptr",
																				"typeString": "struct DistributionTypes.AssetConfigInput memory"
																			}
																		},
																		"id": 174,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "underlyingAsset",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 684,
																		"src": "2542:36:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 175,
																		"name": "assetConfig",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 162,
																		"src": "2589:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_AssetData_$25_storage_ptr",
																			"typeString": "struct DistributionManager.AssetData storage pointer"
																		}
																	},
																	{
																		"expression": {
																			"baseExpression": {
																				"id": 176,
																				"name": "assetsConfigInput",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 147,
																				"src": "2611:17:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_array$_t_struct$_AssetConfigInput_$685_memory_ptr_$dyn_memory_ptr",
																					"typeString": "struct DistributionTypes.AssetConfigInput memory[] memory"
																				}
																			},
																			"id": 178,
																			"indexExpression": {
																				"id": 177,
																				"name": "i",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 151,
																				"src": "2629:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "2611:20:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_AssetConfigInput_$685_memory_ptr",
																				"typeString": "struct DistributionTypes.AssetConfigInput memory"
																			}
																		},
																		"id": 179,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "totalStaked",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 682,
																		"src": "2611:32:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_struct$_AssetData_$25_storage_ptr",
																			"typeString": "struct DistributionManager.AssetData storage pointer"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 170,
																	"name": "_updateAssetStateInternal",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 302,
																	"src": "2506:25:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_struct$_AssetData_$25_storage_ptr_$_t_uint256_$returns$_t_uint256_$",
																		"typeString": "function (address,struct DistributionManager.AssetData storage pointer,uint256) returns (uint256)"
																	}
																},
																"id": 180,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2506:146:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 181,
															"nodeType": "ExpressionStatement",
															"src": "2506:146:0"
														},
														{
															"expression": {
																"id": 189,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"id": 182,
																		"name": "assetConfig",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 162,
																		"src": "2663:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_AssetData_$25_storage_ptr",
																			"typeString": "struct DistributionManager.AssetData storage pointer"
																		}
																	},
																	"id": 184,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberName": "emissionPerSecond",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 16,
																	"src": "2663:29:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint104",
																		"typeString": "uint104"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"expression": {
																		"baseExpression": {
																			"id": 185,
																			"name": "assetsConfigInput",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 147,
																			"src": "2695:17:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_array$_t_struct$_AssetConfigInput_$685_memory_ptr_$dyn_memory_ptr",
																				"typeString": "struct DistributionTypes.AssetConfigInput memory[] memory"
																			}
																		},
																		"id": 187,
																		"indexExpression": {
																			"id": 186,
																			"name": "i",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 151,
																			"src": "2713:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "2695:20:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_AssetConfigInput_$685_memory_ptr",
																			"typeString": "struct DistributionTypes.AssetConfigInput memory"
																		}
																	},
																	"id": 188,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "emissionPerSecond",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 680,
																	"src": "2695:38:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint104",
																		"typeString": "uint104"
																	}
																},
																"src": "2663:70:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint104",
																	"typeString": "uint104"
																}
															},
															"id": 190,
															"nodeType": "ExpressionStatement",
															"src": "2663:70:0"
														},
														{
															"eventCall": {
																"arguments": [
																	{
																		"expression": {
																			"baseExpression": {
																				"id": 192,
																				"name": "assetsConfigInput",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 147,
																				"src": "2778:17:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_array$_t_struct$_AssetConfigInput_$685_memory_ptr_$dyn_memory_ptr",
																					"typeString": "struct DistributionTypes.AssetConfigInput memory[] memory"
																				}
																			},
																			"id": 194,
																			"indexExpression": {
																				"id": 193,
																				"name": "i",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 151,
																				"src": "2796:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "2778:20:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_AssetConfigInput_$685_memory_ptr",
																				"typeString": "struct DistributionTypes.AssetConfigInput memory"
																			}
																		},
																		"id": 195,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "underlyingAsset",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 684,
																		"src": "2778:36:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"expression": {
																			"baseExpression": {
																				"id": 196,
																				"name": "assetsConfigInput",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 147,
																				"src": "2825:17:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_array$_t_struct$_AssetConfigInput_$685_memory_ptr_$dyn_memory_ptr",
																					"typeString": "struct DistributionTypes.AssetConfigInput memory[] memory"
																				}
																			},
																			"id": 198,
																			"indexExpression": {
																				"id": 197,
																				"name": "i",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 151,
																				"src": "2843:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "2825:20:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_AssetConfigInput_$685_memory_ptr",
																				"typeString": "struct DistributionTypes.AssetConfigInput memory"
																			}
																		},
																		"id": 199,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "emissionPerSecond",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 680,
																		"src": "2825:38:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint104",
																			"typeString": "uint104"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint104",
																			"typeString": "uint104"
																		}
																	],
																	"id": 191,
																	"name": "AssetConfigUpdated",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 616,
																	"src": "2749:18:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,uint256)"
																	}
																},
																"id": 200,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2749:123:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 201,
															"nodeType": "EmitStatement",
															"src": "2744:128:0"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 157,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 154,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 151,
														"src": "2375:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"id": 155,
															"name": "assetsConfigInput",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 147,
															"src": "2379:17:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_struct$_AssetConfigInput_$685_memory_ptr_$dyn_memory_ptr",
																"typeString": "struct DistributionTypes.AssetConfigInput memory[] memory"
															}
														},
														"id": 156,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "2379:24:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2375:28:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 203,
												"initializationExpression": {
													"assignments": [
														151
													],
													"declarations": [
														{
															"constant": false,
															"id": 151,
															"mutability": "mutable",
															"name": "i",
															"nodeType": "VariableDeclaration",
															"scope": 203,
															"src": "2360:9:0",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 150,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "2360:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 153,
													"initialValue": {
														"hexValue": "30",
														"id": 152,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2372:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "2360:13:0"
												},
												"loopExpression": {
													"expression": {
														"id": 159,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "2405:3:0",
														"subExpression": {
															"id": 158,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 151,
															"src": "2405:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 160,
													"nodeType": "ExpressionStatement",
													"src": "2405:3:0"
												},
												"nodeType": "ForStatement",
												"src": "2355:525:0"
											}
										]
									},
									"documentation": {
										"id": 144,
										"nodeType": "StructuredDocumentation",
										"src": "2102:136:0",
										"text": " @dev Configure the assets for a specific emission\n @param assetsConfigInput The array of each asset configuration*"
									},
									"id": 205,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_configureAssets",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 148,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 147,
												"mutability": "mutable",
												"name": "assetsConfigInput",
												"nodeType": "VariableDeclaration",
												"scope": 205,
												"src": "2268:61:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_struct$_AssetConfigInput_$685_memory_ptr_$dyn_memory_ptr",
													"typeString": "struct DistributionTypes.AssetConfigInput[]"
												},
												"typeName": {
													"baseType": {
														"id": 145,
														"name": "DistributionTypes.AssetConfigInput",
														"nodeType": "UserDefinedTypeName",
														"referencedDeclaration": 685,
														"src": "2268:34:0",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_AssetConfigInput_$685_storage_ptr",
															"typeString": "struct DistributionTypes.AssetConfigInput"
														}
													},
													"id": 146,
													"nodeType": "ArrayTypeName",
													"src": "2268:36:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_struct$_AssetConfigInput_$685_storage_$dyn_storage_ptr",
														"typeString": "struct DistributionTypes.AssetConfigInput[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2267:63:0"
									},
									"returnParameters": {
										"id": 149,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2348:0:0"
									},
									"scope": 605,
									"src": "2242:643:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 301,
										"nodeType": "Block",
										"src": "3387:814:0",
										"statements": [
											{
												"assignments": [
													218
												],
												"declarations": [
													{
														"constant": false,
														"id": 218,
														"mutability": "mutable",
														"name": "oldIndex",
														"nodeType": "VariableDeclaration",
														"scope": 301,
														"src": "3394:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 217,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3394:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 221,
												"initialValue": {
													"expression": {
														"id": 219,
														"name": "assetConfig",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 210,
														"src": "3413:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_AssetData_$25_storage_ptr",
															"typeString": "struct DistributionManager.AssetData storage pointer"
														}
													},
													"id": 220,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "index",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 18,
													"src": "3413:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint104",
														"typeString": "uint104"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3394:36:0"
											},
											{
												"assignments": [
													223
												],
												"declarations": [
													{
														"constant": false,
														"id": 223,
														"mutability": "mutable",
														"name": "emissionPerSecond",
														"nodeType": "VariableDeclaration",
														"scope": 301,
														"src": "3437:25:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 222,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3437:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 226,
												"initialValue": {
													"expression": {
														"id": 224,
														"name": "assetConfig",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 210,
														"src": "3465:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_AssetData_$25_storage_ptr",
															"typeString": "struct DistributionManager.AssetData storage pointer"
														}
													},
													"id": 225,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "emissionPerSecond",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 16,
													"src": "3465:29:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint104",
														"typeString": "uint104"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3437:57:0"
											},
											{
												"assignments": [
													228
												],
												"declarations": [
													{
														"constant": false,
														"id": 228,
														"mutability": "mutable",
														"name": "lastUpdateTimestamp",
														"nodeType": "VariableDeclaration",
														"scope": 301,
														"src": "3501:27:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint128",
															"typeString": "uint128"
														},
														"typeName": {
															"id": 227,
															"name": "uint128",
															"nodeType": "ElementaryTypeName",
															"src": "3501:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint128",
																"typeString": "uint128"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 231,
												"initialValue": {
													"expression": {
														"id": 229,
														"name": "assetConfig",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 210,
														"src": "3531:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_AssetData_$25_storage_ptr",
															"typeString": "struct DistributionManager.AssetData storage pointer"
														}
													},
													"id": 230,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "lastUpdateTimestamp",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 20,
													"src": "3531:31:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint40",
														"typeString": "uint40"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3501:61:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 235,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 232,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": -4,
															"src": "3575:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 233,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "timestamp",
														"nodeType": "MemberAccess",
														"src": "3575:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"id": 234,
														"name": "lastUpdateTimestamp",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 228,
														"src": "3594:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint128",
															"typeString": "uint128"
														}
													},
													"src": "3575:38:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 239,
												"nodeType": "IfStatement",
												"src": "3571:76:0",
												"trueBody": {
													"id": 238,
													"nodeType": "Block",
													"src": "3615:32:0",
													"statements": [
														{
															"expression": {
																"id": 236,
																"name": "oldIndex",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 218,
																"src": "3631:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"functionReturnParameters": 216,
															"id": 237,
															"nodeType": "Return",
															"src": "3624:15:0"
														}
													]
												}
											},
											{
												"assignments": [
													241
												],
												"declarations": [
													{
														"constant": false,
														"id": 241,
														"mutability": "mutable",
														"name": "newIndex",
														"nodeType": "VariableDeclaration",
														"scope": 301,
														"src": "3655:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 240,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3655:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 248,
												"initialValue": {
													"arguments": [
														{
															"id": 243,
															"name": "oldIndex",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 218,
															"src": "3696:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 244,
															"name": "emissionPerSecond",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 223,
															"src": "3706:17:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 245,
															"name": "lastUpdateTimestamp",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 228,
															"src": "3725:19:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint128",
																"typeString": "uint128"
															}
														},
														{
															"id": 246,
															"name": "totalStaked",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 212,
															"src": "3746:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint128",
																"typeString": "uint128"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 242,
														"name": "_getAssetIndex",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 604,
														"src": "3681:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$_t_uint256_$_t_uint128_$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256,uint128,uint256) view returns (uint256)"
														}
													},
													"id": 247,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3681:77:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3655:103:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 251,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 249,
														"name": "newIndex",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 241,
														"src": "3771:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 250,
														"name": "oldIndex",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 218,
														"src": "3783:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3771:20:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 297,
													"nodeType": "Block",
													"src": "4098:74:0",
													"statements": [
														{
															"expression": {
																"id": 295,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"id": 287,
																		"name": "assetConfig",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 210,
																		"src": "4107:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_AssetData_$25_storage_ptr",
																			"typeString": "struct DistributionManager.AssetData storage pointer"
																		}
																	},
																	"id": 289,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberName": "lastUpdateTimestamp",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 20,
																	"src": "4107:31:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint40",
																		"typeString": "uint40"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"expression": {
																				"id": 292,
																				"name": "block",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": -4,
																				"src": "4148:5:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_block",
																					"typeString": "block"
																				}
																			},
																			"id": 293,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "timestamp",
																			"nodeType": "MemberAccess",
																			"src": "4148:15:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 291,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "4141:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint40_$",
																			"typeString": "type(uint40)"
																		},
																		"typeName": {
																			"id": 290,
																			"name": "uint40",
																			"nodeType": "ElementaryTypeName",
																			"src": "4141:6:0",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 294,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "4141:23:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint40",
																		"typeString": "uint40"
																	}
																},
																"src": "4107:57:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint40",
																	"typeString": "uint40"
																}
															},
															"id": 296,
															"nodeType": "ExpressionStatement",
															"src": "4107:57:0"
														}
													]
												},
												"id": 298,
												"nodeType": "IfStatement",
												"src": "3767:405:0",
												"trueBody": {
													"id": 286,
													"nodeType": "Block",
													"src": "3793:299:0",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 258,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"arguments": [
																				{
																					"id": 255,
																					"name": "newIndex",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 241,
																					"src": "3818:8:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 254,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "3810:7:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_uint104_$",
																					"typeString": "type(uint104)"
																				},
																				"typeName": {
																					"id": 253,
																					"name": "uint104",
																					"nodeType": "ElementaryTypeName",
																					"src": "3810:7:0",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 256,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "3810:17:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint104",
																				"typeString": "uint104"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"id": 257,
																			"name": "newIndex",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 241,
																			"src": "3831:8:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "3810:29:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"hexValue": "496e646578206f766572666c6f77",
																		"id": 259,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "3841:16:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_88066702ff2a817045c06422ff60e138f1b9ed6ff5eae8db2038ccb44cf1a522",
																			"typeString": "literal_string \"Index overflow\""
																		},
																		"value": "Index overflow"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_88066702ff2a817045c06422ff60e138f1b9ed6ff5eae8db2038ccb44cf1a522",
																			"typeString": "literal_string \"Index overflow\""
																		}
																	],
																	"id": 252,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		-18,
																		-18
																	],
																	"referencedDeclaration": -18,
																	"src": "3802:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 260,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3802:56:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 261,
															"nodeType": "ExpressionStatement",
															"src": "3802:56:0"
														},
														{
															"expression": {
																"id": 269,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"id": 262,
																		"name": "assetConfig",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 210,
																		"src": "3933:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_AssetData_$25_storage_ptr",
																			"typeString": "struct DistributionManager.AssetData storage pointer"
																		}
																	},
																	"id": 264,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberName": "index",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 18,
																	"src": "3933:17:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint104",
																		"typeString": "uint104"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"id": 267,
																			"name": "newIndex",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 241,
																			"src": "3961:8:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 266,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "3953:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint104_$",
																			"typeString": "type(uint104)"
																		},
																		"typeName": {
																			"id": 265,
																			"name": "uint104",
																			"nodeType": "ElementaryTypeName",
																			"src": "3953:7:0",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 268,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3953:17:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint104",
																		"typeString": "uint104"
																	}
																},
																"src": "3933:37:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint104",
																	"typeString": "uint104"
																}
															},
															"id": 270,
															"nodeType": "ExpressionStatement",
															"src": "3933:37:0"
														},
														{
															"expression": {
																"id": 279,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"id": 271,
																		"name": "assetConfig",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 210,
																		"src": "3979:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_AssetData_$25_storage_ptr",
																			"typeString": "struct DistributionManager.AssetData storage pointer"
																		}
																	},
																	"id": 273,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberName": "lastUpdateTimestamp",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 20,
																	"src": "3979:31:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint40",
																		"typeString": "uint40"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"expression": {
																				"id": 276,
																				"name": "block",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": -4,
																				"src": "4020:5:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_block",
																					"typeString": "block"
																				}
																			},
																			"id": 277,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "timestamp",
																			"nodeType": "MemberAccess",
																			"src": "4020:15:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 275,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "4013:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint40_$",
																			"typeString": "type(uint40)"
																		},
																		"typeName": {
																			"id": 274,
																			"name": "uint40",
																			"nodeType": "ElementaryTypeName",
																			"src": "4013:6:0",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 278,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "4013:23:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint40",
																		"typeString": "uint40"
																	}
																},
																"src": "3979:57:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint40",
																	"typeString": "uint40"
																}
															},
															"id": 280,
															"nodeType": "ExpressionStatement",
															"src": "3979:57:0"
														},
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 282,
																		"name": "asset",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 208,
																		"src": "4068:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 283,
																		"name": "newIndex",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 241,
																		"src": "4075:8:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 281,
																	"name": "AssetIndexUpdated",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 622,
																	"src": "4050:17:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,uint256)"
																	}
																},
																"id": 284,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4050:34:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 285,
															"nodeType": "EmitStatement",
															"src": "4045:39:0"
														}
													]
												}
											},
											{
												"expression": {
													"id": 299,
													"name": "newIndex",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 241,
													"src": "4187:8:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 216,
												"id": 300,
												"nodeType": "Return",
												"src": "4180:15:0"
											}
										]
									},
									"documentation": {
										"id": 206,
										"nodeType": "StructuredDocumentation",
										"src": "2891:343:0",
										"text": " @dev Updates the state of one distribution, mainly rewards index and timestamp\n @param asset The address of the asset being updated\n @param assetConfig Storage pointer to the distribution's config\n @param totalStaked Current total of staked assets for this distribution\n @return The new distribution index*"
									},
									"id": 302,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_updateAssetStateInternal",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 213,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 208,
												"mutability": "mutable",
												"name": "asset",
												"nodeType": "VariableDeclaration",
												"scope": 302,
												"src": "3279:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 207,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3279:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 210,
												"mutability": "mutable",
												"name": "assetConfig",
												"nodeType": "VariableDeclaration",
												"scope": 302,
												"src": "3299:29:0",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_AssetData_$25_storage_ptr",
													"typeString": "struct DistributionManager.AssetData"
												},
												"typeName": {
													"id": 209,
													"name": "AssetData",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 25,
													"src": "3299:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_AssetData_$25_storage_ptr",
														"typeString": "struct DistributionManager.AssetData"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 212,
												"mutability": "mutable",
												"name": "totalStaked",
												"nodeType": "VariableDeclaration",
												"scope": 302,
												"src": "3335:19:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 211,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3335:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3272:87:0"
									},
									"returnParameters": {
										"id": 216,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 215,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 302,
												"src": "3378:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 214,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3378:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3377:9:0"
									},
									"scope": 605,
									"src": "3238:963:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 375,
										"nodeType": "Block",
										"src": "4774:505:0",
										"statements": [
											{
												"assignments": [
													317
												],
												"declarations": [
													{
														"constant": false,
														"id": 317,
														"mutability": "mutable",
														"name": "assetData",
														"nodeType": "VariableDeclaration",
														"scope": 375,
														"src": "4781:27:0",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_AssetData_$25_storage_ptr",
															"typeString": "struct DistributionManager.AssetData"
														},
														"typeName": {
															"id": 316,
															"name": "AssetData",
															"nodeType": "UserDefinedTypeName",
															"referencedDeclaration": 25,
															"src": "4781:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_AssetData_$25_storage_ptr",
																"typeString": "struct DistributionManager.AssetData"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 321,
												"initialValue": {
													"baseExpression": {
														"id": 318,
														"name": "assets",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 34,
														"src": "4811:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_struct$_AssetData_$25_storage_$",
															"typeString": "mapping(address => struct DistributionManager.AssetData storage ref)"
														}
													},
													"id": 320,
													"indexExpression": {
														"id": 319,
														"name": "asset",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 307,
														"src": "4818:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "4811:13:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_AssetData_$25_storage",
														"typeString": "struct DistributionManager.AssetData storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4781:43:0"
											},
											{
												"assignments": [
													323
												],
												"declarations": [
													{
														"constant": false,
														"id": 323,
														"mutability": "mutable",
														"name": "userIndex",
														"nodeType": "VariableDeclaration",
														"scope": 375,
														"src": "4831:17:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 322,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "4831:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 328,
												"initialValue": {
													"baseExpression": {
														"expression": {
															"id": 324,
															"name": "assetData",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 317,
															"src": "4851:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_AssetData_$25_storage_ptr",
																"typeString": "struct DistributionManager.AssetData storage pointer"
															}
														},
														"id": 325,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "users",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 24,
														"src": "4851:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 327,
													"indexExpression": {
														"id": 326,
														"name": "user",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 305,
														"src": "4867:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "4851:21:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4831:41:0"
											},
											{
												"assignments": [
													330
												],
												"declarations": [
													{
														"constant": false,
														"id": 330,
														"mutability": "mutable",
														"name": "accruedRewards",
														"nodeType": "VariableDeclaration",
														"scope": 375,
														"src": "4879:22:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 329,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "4879:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 332,
												"initialValue": {
													"hexValue": "30",
													"id": 331,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "4904:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4879:26:0"
											},
											{
												"assignments": [
													334
												],
												"declarations": [
													{
														"constant": false,
														"id": 334,
														"mutability": "mutable",
														"name": "newIndex",
														"nodeType": "VariableDeclaration",
														"scope": 375,
														"src": "4914:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 333,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "4914:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 340,
												"initialValue": {
													"arguments": [
														{
															"id": 336,
															"name": "asset",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 307,
															"src": "4959:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 337,
															"name": "assetData",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 317,
															"src": "4966:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_AssetData_$25_storage_ptr",
																"typeString": "struct DistributionManager.AssetData storage pointer"
															}
														},
														{
															"id": 338,
															"name": "totalStaked",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 311,
															"src": "4977:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_struct$_AssetData_$25_storage_ptr",
																"typeString": "struct DistributionManager.AssetData storage pointer"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 335,
														"name": "_updateAssetStateInternal",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 302,
														"src": "4933:25:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_struct$_AssetData_$25_storage_ptr_$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (address,struct DistributionManager.AssetData storage pointer,uint256) returns (uint256)"
														}
													},
													"id": 339,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4933:56:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4914:75:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 343,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 341,
														"name": "userIndex",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 323,
														"src": "5002:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 342,
														"name": "newIndex",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 334,
														"src": "5015:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5002:21:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 372,
												"nodeType": "IfStatement",
												"src": "4998:246:0",
												"trueBody": {
													"id": 371,
													"nodeType": "Block",
													"src": "5025:219:0",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 346,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 344,
																	"name": "stakedByUser",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 309,
																	"src": "5038:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "!=",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 345,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5054:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "5038:17:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 356,
															"nodeType": "IfStatement",
															"src": "5034:107:0",
															"trueBody": {
																"id": 355,
																"nodeType": "Block",
																"src": "5057:84:0",
																"statements": [
																	{
																		"expression": {
																			"id": 353,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"id": 347,
																				"name": "accruedRewards",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 330,
																				"src": "5068:14:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"arguments": [
																					{
																						"id": 349,
																						"name": "stakedByUser",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 309,
																						"src": "5097:12:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					{
																						"id": 350,
																						"name": "newIndex",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 334,
																						"src": "5111:8:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					{
																						"id": 351,
																						"name": "userIndex",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 323,
																						"src": "5121:9:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						},
																						{
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						},
																						{
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					],
																					"id": 348,
																					"name": "_getRewards",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 528,
																					"src": "5085:11:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																						"typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
																					}
																				},
																				"id": 352,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "5085:46:0",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "5068:63:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 354,
																		"nodeType": "ExpressionStatement",
																		"src": "5068:63:0"
																	}
																]
															}
														},
														{
															"expression": {
																"id": 363,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"expression": {
																			"id": 357,
																			"name": "assetData",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 317,
																			"src": "5151:9:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_AssetData_$25_storage_ptr",
																				"typeString": "struct DistributionManager.AssetData storage pointer"
																			}
																		},
																		"id": 360,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "users",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 24,
																		"src": "5151:15:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 361,
																	"indexExpression": {
																		"id": 359,
																		"name": "user",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 305,
																		"src": "5167:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "5151:21:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"id": 362,
																	"name": "newIndex",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 334,
																	"src": "5175:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5151:32:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 364,
															"nodeType": "ExpressionStatement",
															"src": "5151:32:0"
														},
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 366,
																		"name": "user",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 305,
																		"src": "5214:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 367,
																		"name": "asset",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 307,
																		"src": "5220:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 368,
																		"name": "newIndex",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 334,
																		"src": "5227:8:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 365,
																	"name": "UserIndexUpdated",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 630,
																	"src": "5197:16:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,address,uint256)"
																	}
																},
																"id": 369,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5197:39:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 370,
															"nodeType": "EmitStatement",
															"src": "5192:44:0"
														}
													]
												}
											},
											{
												"expression": {
													"id": 373,
													"name": "accruedRewards",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 330,
													"src": "5259:14:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 315,
												"id": 374,
												"nodeType": "Return",
												"src": "5252:21:0"
											}
										]
									},
									"documentation": {
										"id": 303,
										"nodeType": "StructuredDocumentation",
										"src": "4207:405:0",
										"text": " @dev Updates the state of an user in a distribution\n @param user The user's address\n @param asset The address of the reference asset of the distribution\n @param stakedByUser Amount of tokens staked by the user in the distribution at the moment\n @param totalStaked Total tokens staked in the distribution\n @return The accrued rewards for the user until the moment*"
									},
									"id": 376,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_updateUserAssetInternal",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 312,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 305,
												"mutability": "mutable",
												"name": "user",
												"nodeType": "VariableDeclaration",
												"scope": 376,
												"src": "4656:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 304,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4656:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 307,
												"mutability": "mutable",
												"name": "asset",
												"nodeType": "VariableDeclaration",
												"scope": 376,
												"src": "4675:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 306,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4675:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 309,
												"mutability": "mutable",
												"name": "stakedByUser",
												"nodeType": "VariableDeclaration",
												"scope": 376,
												"src": "4695:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 308,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4695:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 311,
												"mutability": "mutable",
												"name": "totalStaked",
												"nodeType": "VariableDeclaration",
												"scope": 376,
												"src": "4722:19:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 310,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4722:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4649:97:0"
									},
									"returnParameters": {
										"id": 315,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 314,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 376,
												"src": "4765:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 313,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4765:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4764:9:0"
									},
									"scope": 605,
									"src": "4616:663:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 427,
										"nodeType": "Block",
										"src": "5718:352:0",
										"statements": [
											{
												"assignments": [
													388
												],
												"declarations": [
													{
														"constant": false,
														"id": 388,
														"mutability": "mutable",
														"name": "accruedRewards",
														"nodeType": "VariableDeclaration",
														"scope": 427,
														"src": "5725:22:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 387,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "5725:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 390,
												"initialValue": {
													"hexValue": "30",
													"id": 389,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "5750:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5725:26:0"
											},
											{
												"body": {
													"id": 423,
													"nodeType": "Block",
													"src": "5804:231:0",
													"statements": [
														{
															"expression": {
																"id": 421,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 402,
																	"name": "accruedRewards",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 388,
																	"src": "5813:14:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"id": 406,
																					"name": "user",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 379,
																					"src": "5896:4:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"expression": {
																						"baseExpression": {
																							"id": 407,
																							"name": "stakes",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 382,
																							"src": "5913:6:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_array$_t_struct$_UserStakeInput_$692_memory_ptr_$dyn_memory_ptr",
																								"typeString": "struct DistributionTypes.UserStakeInput memory[] memory"
																							}
																						},
																						"id": 409,
																						"indexExpression": {
																							"id": 408,
																							"name": "i",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 392,
																							"src": "5920:1:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": false,
																						"nodeType": "IndexAccess",
																						"src": "5913:9:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_struct$_UserStakeInput_$692_memory_ptr",
																							"typeString": "struct DistributionTypes.UserStakeInput memory"
																						}
																					},
																					"id": 410,
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberName": "underlyingAsset",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 687,
																					"src": "5913:25:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"expression": {
																						"baseExpression": {
																							"id": 411,
																							"name": "stakes",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 382,
																							"src": "5951:6:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_array$_t_struct$_UserStakeInput_$692_memory_ptr_$dyn_memory_ptr",
																								"typeString": "struct DistributionTypes.UserStakeInput memory[] memory"
																							}
																						},
																						"id": 413,
																						"indexExpression": {
																							"id": 412,
																							"name": "i",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 392,
																							"src": "5958:1:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": false,
																						"nodeType": "IndexAccess",
																						"src": "5951:9:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_struct$_UserStakeInput_$692_memory_ptr",
																							"typeString": "struct DistributionTypes.UserStakeInput memory"
																						}
																					},
																					"id": 414,
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberName": "stakedByUser",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 689,
																					"src": "5951:22:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"expression": {
																						"baseExpression": {
																							"id": 415,
																							"name": "stakes",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 382,
																							"src": "5986:6:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_array$_t_struct$_UserStakeInput_$692_memory_ptr_$dyn_memory_ptr",
																								"typeString": "struct DistributionTypes.UserStakeInput memory[] memory"
																							}
																						},
																						"id": 417,
																						"indexExpression": {
																							"id": 416,
																							"name": "i",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 392,
																							"src": "5993:1:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": false,
																						"nodeType": "IndexAccess",
																						"src": "5986:9:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_struct$_UserStakeInput_$692_memory_ptr",
																							"typeString": "struct DistributionTypes.UserStakeInput memory"
																						}
																					},
																					"id": 418,
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberName": "totalStaked",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 691,
																					"src": "5986:21:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 405,
																				"name": "_updateUserAssetInternal",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 376,
																				"src": "5859:24:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																					"typeString": "function (address,address,uint256,uint256) returns (uint256)"
																				}
																			},
																			"id": 419,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "5859:159:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"id": 403,
																			"name": "accruedRewards",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 388,
																			"src": "5830:14:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 404,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "add",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 718,
																		"src": "5830:18:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 420,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "5830:197:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5813:214:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 422,
															"nodeType": "ExpressionStatement",
															"src": "5813:214:0"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 398,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 395,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 392,
														"src": "5780:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"id": 396,
															"name": "stakes",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 382,
															"src": "5784:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_struct$_UserStakeInput_$692_memory_ptr_$dyn_memory_ptr",
																"typeString": "struct DistributionTypes.UserStakeInput memory[] memory"
															}
														},
														"id": 397,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "5784:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5780:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 424,
												"initializationExpression": {
													"assignments": [
														392
													],
													"declarations": [
														{
															"constant": false,
															"id": 392,
															"mutability": "mutable",
															"name": "i",
															"nodeType": "VariableDeclaration",
															"scope": 424,
															"src": "5765:9:0",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 391,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "5765:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 394,
													"initialValue": {
														"hexValue": "30",
														"id": 393,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5777:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "5765:13:0"
												},
												"loopExpression": {
													"expression": {
														"id": 400,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "5799:3:0",
														"subExpression": {
															"id": 399,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 392,
															"src": "5799:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 401,
													"nodeType": "ExpressionStatement",
													"src": "5799:3:0"
												},
												"nodeType": "ForStatement",
												"src": "5760:275:0"
											},
											{
												"expression": {
													"id": 425,
													"name": "accruedRewards",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 388,
													"src": "6050:14:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 386,
												"id": 426,
												"nodeType": "Return",
												"src": "6043:21:0"
											}
										]
									},
									"documentation": {
										"id": 377,
										"nodeType": "StructuredDocumentation",
										"src": "5285:302:0",
										"text": " @dev Used by \"frontend\" stake contracts to update the data of an user when claiming rewards from there\n @param user The address of the user\n @param stakes List of structs of the user data related with his stake\n @return The accrued rewards for the user until the moment*"
									},
									"id": 428,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_claimRewards",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 383,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 379,
												"mutability": "mutable",
												"name": "user",
												"nodeType": "VariableDeclaration",
												"scope": 428,
												"src": "5614:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 378,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5614:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 382,
												"mutability": "mutable",
												"name": "stakes",
												"nodeType": "VariableDeclaration",
												"scope": 428,
												"src": "5628:48:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_struct$_UserStakeInput_$692_memory_ptr_$dyn_memory_ptr",
													"typeString": "struct DistributionTypes.UserStakeInput[]"
												},
												"typeName": {
													"baseType": {
														"id": 380,
														"name": "DistributionTypes.UserStakeInput",
														"nodeType": "UserDefinedTypeName",
														"referencedDeclaration": 692,
														"src": "5628:32:0",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_UserStakeInput_$692_storage_ptr",
															"typeString": "struct DistributionTypes.UserStakeInput"
														}
													},
													"id": 381,
													"nodeType": "ArrayTypeName",
													"src": "5628:34:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_struct$_UserStakeInput_$692_storage_$dyn_storage_ptr",
														"typeString": "struct DistributionTypes.UserStakeInput[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5613:64:0"
									},
									"returnParameters": {
										"id": 386,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 385,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 428,
												"src": "5706:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 384,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5706:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5705:9:0"
									},
									"scope": 605,
									"src": "5591:479:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 499,
										"nodeType": "Block",
										"src": "6495:553:0",
										"statements": [
											{
												"assignments": [
													440
												],
												"declarations": [
													{
														"constant": false,
														"id": 440,
														"mutability": "mutable",
														"name": "accruedRewards",
														"nodeType": "VariableDeclaration",
														"scope": 499,
														"src": "6502:22:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 439,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "6502:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 442,
												"initialValue": {
													"hexValue": "30",
													"id": 441,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "6527:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6502:26:0"
											},
											{
												"body": {
													"id": 495,
													"nodeType": "Block",
													"src": "6581:434:0",
													"statements": [
														{
															"assignments": [
																455
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 455,
																	"mutability": "mutable",
																	"name": "assetConfig",
																	"nodeType": "VariableDeclaration",
																	"scope": 495,
																	"src": "6590:29:0",
																	"stateVariable": false,
																	"storageLocation": "storage",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_AssetData_$25_storage_ptr",
																		"typeString": "struct DistributionManager.AssetData"
																	},
																	"typeName": {
																		"id": 454,
																		"name": "AssetData",
																		"nodeType": "UserDefinedTypeName",
																		"referencedDeclaration": 25,
																		"src": "6590:9:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_AssetData_$25_storage_ptr",
																			"typeString": "struct DistributionManager.AssetData"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 462,
															"initialValue": {
																"baseExpression": {
																	"id": 456,
																	"name": "assets",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 34,
																	"src": "6622:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_struct$_AssetData_$25_storage_$",
																		"typeString": "mapping(address => struct DistributionManager.AssetData storage ref)"
																	}
																},
																"id": 461,
																"indexExpression": {
																	"expression": {
																		"baseExpression": {
																			"id": 457,
																			"name": "stakes",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 434,
																			"src": "6629:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_array$_t_struct$_UserStakeInput_$692_memory_ptr_$dyn_memory_ptr",
																				"typeString": "struct DistributionTypes.UserStakeInput memory[] memory"
																			}
																		},
																		"id": 459,
																		"indexExpression": {
																			"id": 458,
																			"name": "i",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 444,
																			"src": "6636:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "6629:9:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_UserStakeInput_$692_memory_ptr",
																			"typeString": "struct DistributionTypes.UserStakeInput memory"
																		}
																	},
																	"id": 460,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "underlyingAsset",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 687,
																	"src": "6629:25:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "6622:33:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_AssetData_$25_storage",
																	"typeString": "struct DistributionManager.AssetData storage ref"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "6590:65:0"
														},
														{
															"assignments": [
																464
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 464,
																	"mutability": "mutable",
																	"name": "assetIndex",
																	"nodeType": "VariableDeclaration",
																	"scope": 495,
																	"src": "6664:18:0",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 463,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "6664:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 477,
															"initialValue": {
																"arguments": [
																	{
																		"expression": {
																			"id": 466,
																			"name": "assetConfig",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 455,
																			"src": "6721:11:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_AssetData_$25_storage_ptr",
																				"typeString": "struct DistributionManager.AssetData storage pointer"
																			}
																		},
																		"id": 467,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "index",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 18,
																		"src": "6721:17:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint104",
																			"typeString": "uint104"
																		}
																	},
																	{
																		"expression": {
																			"id": 468,
																			"name": "assetConfig",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 455,
																			"src": "6751:11:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_AssetData_$25_storage_ptr",
																				"typeString": "struct DistributionManager.AssetData storage pointer"
																			}
																		},
																		"id": 469,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "emissionPerSecond",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 16,
																		"src": "6751:29:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint104",
																			"typeString": "uint104"
																		}
																	},
																	{
																		"expression": {
																			"id": 470,
																			"name": "assetConfig",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 455,
																			"src": "6793:11:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_AssetData_$25_storage_ptr",
																				"typeString": "struct DistributionManager.AssetData storage pointer"
																			}
																		},
																		"id": 471,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "lastUpdateTimestamp",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 20,
																		"src": "6793:31:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint40",
																			"typeString": "uint40"
																		}
																	},
																	{
																		"expression": {
																			"baseExpression": {
																				"id": 472,
																				"name": "stakes",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 434,
																				"src": "6837:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_array$_t_struct$_UserStakeInput_$692_memory_ptr_$dyn_memory_ptr",
																					"typeString": "struct DistributionTypes.UserStakeInput memory[] memory"
																				}
																			},
																			"id": 474,
																			"indexExpression": {
																				"id": 473,
																				"name": "i",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 444,
																				"src": "6844:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "6837:9:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_UserStakeInput_$692_memory_ptr",
																				"typeString": "struct DistributionTypes.UserStakeInput memory"
																			}
																		},
																		"id": 475,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "totalStaked",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 691,
																		"src": "6837:21:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint104",
																			"typeString": "uint104"
																		},
																		{
																			"typeIdentifier": "t_uint104",
																			"typeString": "uint104"
																		},
																		{
																			"typeIdentifier": "t_uint40",
																			"typeString": "uint40"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 465,
																	"name": "_getAssetIndex",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 604,
																	"src": "6694:14:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_uint256_$_t_uint256_$_t_uint128_$_t_uint256_$returns$_t_uint256_$",
																		"typeString": "function (uint256,uint256,uint128,uint256) view returns (uint256)"
																	}
																},
																"id": 476,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6694:175:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "6664:205:0"
														},
														{
															"expression": {
																"id": 493,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 478,
																	"name": "accruedRewards",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 440,
																	"src": "6880:14:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"expression": {
																						"baseExpression": {
																							"id": 482,
																							"name": "stakes",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 434,
																							"src": "6938:6:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_array$_t_struct$_UserStakeInput_$692_memory_ptr_$dyn_memory_ptr",
																								"typeString": "struct DistributionTypes.UserStakeInput memory[] memory"
																							}
																						},
																						"id": 484,
																						"indexExpression": {
																							"id": 483,
																							"name": "i",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 444,
																							"src": "6945:1:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": false,
																						"nodeType": "IndexAccess",
																						"src": "6938:9:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_struct$_UserStakeInput_$692_memory_ptr",
																							"typeString": "struct DistributionTypes.UserStakeInput memory"
																						}
																					},
																					"id": 485,
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberName": "stakedByUser",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 689,
																					"src": "6938:22:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 486,
																					"name": "assetIndex",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 464,
																					"src": "6962:10:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"baseExpression": {
																						"expression": {
																							"id": 487,
																							"name": "assetConfig",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 455,
																							"src": "6974:11:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_struct$_AssetData_$25_storage_ptr",
																								"typeString": "struct DistributionManager.AssetData storage pointer"
																							}
																						},
																						"id": 488,
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberName": "users",
																						"nodeType": "MemberAccess",
																						"referencedDeclaration": 24,
																						"src": "6974:17:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																							"typeString": "mapping(address => uint256)"
																						}
																					},
																					"id": 490,
																					"indexExpression": {
																						"id": 489,
																						"name": "user",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 431,
																						"src": "6992:4:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					},
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "IndexAccess",
																					"src": "6974:23:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 481,
																				"name": "_getRewards",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 528,
																				"src": "6926:11:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																					"typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
																				}
																			},
																			"id": 491,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "6926:72:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"id": 479,
																			"name": "accruedRewards",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 440,
																			"src": "6897:14:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 480,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "add",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 718,
																		"src": "6897:18:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 492,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "6897:110:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6880:127:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 494,
															"nodeType": "ExpressionStatement",
															"src": "6880:127:0"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 450,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 447,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 444,
														"src": "6557:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"id": 448,
															"name": "stakes",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 434,
															"src": "6561:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_struct$_UserStakeInput_$692_memory_ptr_$dyn_memory_ptr",
																"typeString": "struct DistributionTypes.UserStakeInput memory[] memory"
															}
														},
														"id": 449,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "6561:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "6557:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 496,
												"initializationExpression": {
													"assignments": [
														444
													],
													"declarations": [
														{
															"constant": false,
															"id": 444,
															"mutability": "mutable",
															"name": "i",
															"nodeType": "VariableDeclaration",
															"scope": 496,
															"src": "6542:9:0",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 443,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "6542:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 446,
													"initialValue": {
														"hexValue": "30",
														"id": 445,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6554:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "6542:13:0"
												},
												"loopExpression": {
													"expression": {
														"id": 452,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "6576:3:0",
														"subExpression": {
															"id": 451,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 444,
															"src": "6576:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 453,
													"nodeType": "ExpressionStatement",
													"src": "6576:3:0"
												},
												"nodeType": "ForStatement",
												"src": "6537:478:0"
											},
											{
												"expression": {
													"id": 497,
													"name": "accruedRewards",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 440,
													"src": "7028:14:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 438,
												"id": 498,
												"nodeType": "Return",
												"src": "7021:21:0"
											}
										]
									},
									"documentation": {
										"id": 429,
										"nodeType": "StructuredDocumentation",
										"src": "6076:271:0",
										"text": " @dev Return the accrued rewards for an user over a list of distribution\n @param user The address of the user\n @param stakes List of structs of the user data related with his stake\n @return The accrued rewards for the user until the moment*"
									},
									"id": 500,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_getUnclaimedRewards",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 435,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 431,
												"mutability": "mutable",
												"name": "user",
												"nodeType": "VariableDeclaration",
												"scope": 500,
												"src": "6381:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 430,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6381:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 434,
												"mutability": "mutable",
												"name": "stakes",
												"nodeType": "VariableDeclaration",
												"scope": 500,
												"src": "6395:48:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_struct$_UserStakeInput_$692_memory_ptr_$dyn_memory_ptr",
													"typeString": "struct DistributionTypes.UserStakeInput[]"
												},
												"typeName": {
													"baseType": {
														"id": 432,
														"name": "DistributionTypes.UserStakeInput",
														"nodeType": "UserDefinedTypeName",
														"referencedDeclaration": 692,
														"src": "6395:32:0",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_UserStakeInput_$692_storage_ptr",
															"typeString": "struct DistributionTypes.UserStakeInput"
														}
													},
													"id": 433,
													"nodeType": "ArrayTypeName",
													"src": "6395:34:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_struct$_UserStakeInput_$692_storage_$dyn_storage_ptr",
														"typeString": "struct DistributionTypes.UserStakeInput[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6380:64:0"
									},
									"returnParameters": {
										"id": 438,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 437,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 500,
												"src": "6483:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 436,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6483:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6482:9:0"
									},
									"scope": 605,
									"src": "6351:697:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 527,
										"nodeType": "Block",
										"src": "7546:98:0",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 525,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"arguments": [
																	{
																		"id": 516,
																		"name": "userIndex",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 507,
																		"src": "7602:9:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 514,
																		"name": "reserveIndex",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 505,
																		"src": "7585:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 515,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sub",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 740,
																	"src": "7585:16:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																		"typeString": "function (uint256,uint256) pure returns (uint256)"
																	}
																},
																"id": 517,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7585:27:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"id": 512,
																"name": "principalUserBalance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 503,
																"src": "7560:20:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 513,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "mul",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 768,
															"src": "7560:24:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 518,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7560:53:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 524,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"leftExpression": {
															"hexValue": "3130",
															"id": 519,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7616:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_10_by_1",
																"typeString": "int_const 10"
															},
															"value": "10"
														},
														"nodeType": "BinaryOperation",
														"operator": "**",
														"rightExpression": {
															"arguments": [
																{
																	"id": 522,
																	"name": "PRECISION",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 30,
																	"src": "7628:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	}
																],
																"id": 521,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "7620:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint256_$",
																	"typeString": "type(uint256)"
																},
																"typeName": {
																	"id": 520,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "7620:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 523,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7620:18:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "7616:22:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "7560:78:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 511,
												"id": 526,
												"nodeType": "Return",
												"src": "7553:85:0"
											}
										]
									},
									"documentation": {
										"id": 501,
										"nodeType": "StructuredDocumentation",
										"src": "7054:344:0",
										"text": " @dev Internal function for the calculation of user's rewards on a distribution\n @param principalUserBalance Amount staked by the user on a distribution\n @param reserveIndex Current index of the distribution\n @param userIndex Index stored for the user, representation his staking moment\n @return The rewards*"
									},
									"id": 528,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_getRewards",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 508,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 503,
												"mutability": "mutable",
												"name": "principalUserBalance",
												"nodeType": "VariableDeclaration",
												"scope": 528,
												"src": "7429:28:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 502,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7429:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 505,
												"mutability": "mutable",
												"name": "reserveIndex",
												"nodeType": "VariableDeclaration",
												"scope": 528,
												"src": "7464:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 504,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7464:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 507,
												"mutability": "mutable",
												"name": "userIndex",
												"nodeType": "VariableDeclaration",
												"scope": 528,
												"src": "7491:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 506,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7491:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7422:91:0"
									},
									"returnParameters": {
										"id": 511,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 510,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 528,
												"src": "7537:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 509,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7537:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7536:9:0"
									},
									"scope": 605,
									"src": "7402:242:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 603,
										"nodeType": "Block",
										"src": "8288:580:0",
										"statements": [
											{
												"assignments": [
													543
												],
												"declarations": [
													{
														"constant": false,
														"id": 543,
														"mutability": "mutable",
														"name": "distributionEnd",
														"nodeType": "VariableDeclaration",
														"scope": 603,
														"src": "8295:23:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 542,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "8295:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 545,
												"initialValue": {
													"id": 544,
													"name": "_distributionEnd",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 36,
													"src": "8321:16:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8295:42:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 561,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"id": 557,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 552,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 548,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 546,
																	"name": "emissionPerSecond",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 533,
																	"src": "8356:17:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 547,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8377:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "8356:22:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 551,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 549,
																	"name": "totalBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 537,
																	"src": "8389:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 550,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8405:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "8389:17:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "8356:50:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "||",
														"rightExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 556,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 553,
																"name": "lastUpdateTimestamp",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 535,
																"src": "8417:19:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint128",
																	"typeString": "uint128"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"id": 554,
																	"name": "block",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": -4,
																	"src": "8440:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_block",
																		"typeString": "block"
																	}
																},
																"id": 555,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "timestamp",
																"nodeType": "MemberAccess",
																"src": "8440:15:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "8417:38:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"src": "8356:99:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 560,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 558,
															"name": "lastUpdateTimestamp",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 535,
															"src": "8466:19:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint128",
																"typeString": "uint128"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">=",
														"rightExpression": {
															"id": 559,
															"name": "distributionEnd",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 543,
															"src": "8489:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "8466:38:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "8356:148:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 565,
												"nodeType": "IfStatement",
												"src": "8344:204:0",
												"trueBody": {
													"id": 564,
													"nodeType": "Block",
													"src": "8512:36:0",
													"statements": [
														{
															"expression": {
																"id": 562,
																"name": "currentIndex",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 531,
																"src": "8528:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"functionReturnParameters": 541,
															"id": 563,
															"nodeType": "Return",
															"src": "8521:19:0"
														}
													]
												}
											},
											{
												"assignments": [
													567
												],
												"declarations": [
													{
														"constant": false,
														"id": 567,
														"mutability": "mutable",
														"name": "currentTimestamp",
														"nodeType": "VariableDeclaration",
														"scope": 603,
														"src": "8556:24:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 566,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "8556:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 576,
												"initialValue": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 571,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"id": 568,
																"name": "block",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": -4,
																"src": "8590:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_block",
																	"typeString": "block"
																}
															},
															"id": 569,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "timestamp",
															"nodeType": "MemberAccess",
															"src": "8590:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"id": 570,
															"name": "distributionEnd",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 543,
															"src": "8608:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "8590:33:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"expression": {
															"id": 573,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": -4,
															"src": "8644:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 574,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "timestamp",
														"nodeType": "MemberAccess",
														"src": "8644:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 575,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "8590:69:0",
													"trueExpression": {
														"id": 572,
														"name": "distributionEnd",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 543,
														"src": "8626:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8556:103:0"
											},
											{
												"assignments": [
													578
												],
												"declarations": [
													{
														"constant": false,
														"id": 578,
														"mutability": "mutable",
														"name": "timeDelta",
														"nodeType": "VariableDeclaration",
														"scope": 603,
														"src": "8666:17:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 577,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "8666:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 583,
												"initialValue": {
													"arguments": [
														{
															"id": 581,
															"name": "lastUpdateTimestamp",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 535,
															"src": "8707:19:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint128",
																"typeString": "uint128"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint128",
																"typeString": "uint128"
															}
														],
														"expression": {
															"id": 579,
															"name": "currentTimestamp",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 567,
															"src": "8686:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 580,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sub",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 740,
														"src": "8686:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 582,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8686:41:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8666:61:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 600,
															"name": "currentIndex",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 531,
															"src": "8841:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 597,
																	"name": "totalBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 537,
																	"src": "8813:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"arguments": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 594,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 589,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "8785:2:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"arguments": [
																					{
																						"id": 592,
																						"name": "PRECISION",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 30,
																						"src": "8797:9:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint8",
																							"typeString": "uint8"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_uint8",
																							"typeString": "uint8"
																						}
																					],
																					"id": 591,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "ElementaryTypeNameExpression",
																					"src": "8789:7:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_uint256_$",
																						"typeString": "type(uint256)"
																					},
																					"typeName": {
																						"id": 590,
																						"name": "uint256",
																						"nodeType": "ElementaryTypeName",
																						"src": "8789:7:0",
																						"typeDescriptions": {}
																					}
																				},
																				"id": 593,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "typeConversion",
																				"lValueRequested": false,
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "8789:18:0",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "8785:22:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"arguments": [
																				{
																					"id": 586,
																					"name": "timeDelta",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 578,
																					"src": "8770:9:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"expression": {
																					"id": 584,
																					"name": "emissionPerSecond",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 533,
																					"src": "8748:17:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"id": 585,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "mul",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 768,
																				"src": "8748:21:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																					"typeString": "function (uint256,uint256) pure returns (uint256)"
																				}
																			},
																			"id": 587,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "8748:32:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 588,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "mul",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 768,
																		"src": "8748:36:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 595,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "8748:60:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 596,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "div",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 782,
																"src": "8748:64:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 598,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8748:78:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 599,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "add",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 718,
														"src": "8748:82:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 601,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8748:114:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 541,
												"id": 602,
												"nodeType": "Return",
												"src": "8734:128:0"
											}
										]
									},
									"documentation": {
										"id": 529,
										"nodeType": "StructuredDocumentation",
										"src": "7650:453:0",
										"text": " @dev Calculates the next value of an specific distribution index, with validations\n @param currentIndex Current index of the distribution\n @param emissionPerSecond Representing the total rewards distributed per second per asset unit, on the distribution\n @param lastUpdateTimestamp Last moment this distribution was updated\n @param totalBalance of tokens considered for the distribution\n @return The new index.*"
									},
									"id": 604,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_getAssetIndex",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 538,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 531,
												"mutability": "mutable",
												"name": "currentIndex",
												"nodeType": "VariableDeclaration",
												"scope": 604,
												"src": "8137:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 530,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8137:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 533,
												"mutability": "mutable",
												"name": "emissionPerSecond",
												"nodeType": "VariableDeclaration",
												"scope": 604,
												"src": "8164:25:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 532,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8164:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 535,
												"mutability": "mutable",
												"name": "lastUpdateTimestamp",
												"nodeType": "VariableDeclaration",
												"scope": 604,
												"src": "8196:27:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 534,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "8196:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 537,
												"mutability": "mutable",
												"name": "totalBalance",
												"nodeType": "VariableDeclaration",
												"scope": 604,
												"src": "8230:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 536,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8230:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8130:125:0"
									},
									"returnParameters": {
										"id": 541,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 540,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 604,
												"src": "8279:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 539,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8279:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8278:9:0"
									},
									"scope": 605,
									"src": "8107:761:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 606,
							"src": "449:8422:0"
						}
					],
					"src": "38:8835:0"
				},
				"id": 0
			},
			"contracts/Omnidex-incentives/interfaces/IOmnidexDistributionManager.sol": {
				"ast": {
					"absolutePath": "contracts/Omnidex-incentives/interfaces/IOmnidexDistributionManager.sol",
					"exportedSymbols": {
						"DistributionTypes": [
							693
						],
						"IOmnidexDistributionManager": [
							675
						]
					},
					"id": 676,
					"license": "agpl-3.0",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 607,
							"literals": [
								"solidity",
								"0.7",
								".5"
							],
							"nodeType": "PragmaDirective",
							"src": "38:22:1"
						},
						{
							"id": 608,
							"literals": [
								"experimental",
								"ABIEncoderV2"
							],
							"nodeType": "PragmaDirective",
							"src": "62:33:1"
						},
						{
							"absolutePath": "contracts/Omnidex-incentives/lib/DistributionTypes.sol",
							"file": "../lib/DistributionTypes.sol",
							"id": 610,
							"nodeType": "ImportDirective",
							"scope": 676,
							"sourceUnit": 694,
							"src": "99:63:1",
							"symbolAliases": [
								{
									"foreign": {
										"id": 609,
										"name": "DistributionTypes",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"src": "107:17:1",
										"typeDescriptions": {}
									}
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 675,
							"linearizedBaseContracts": [
								675
							],
							"name": "IOmnidexDistributionManager",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"id": 616,
									"name": "AssetConfigUpdated",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 615,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 612,
												"indexed": true,
												"mutability": "mutable",
												"name": "asset",
												"nodeType": "VariableDeclaration",
												"scope": 616,
												"src": "238:21:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 611,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "238:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 614,
												"indexed": false,
												"mutability": "mutable",
												"name": "emission",
												"nodeType": "VariableDeclaration",
												"scope": 616,
												"src": "261:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 613,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "261:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "237:41:1"
									},
									"src": "213:66:1"
								},
								{
									"anonymous": false,
									"id": 622,
									"name": "AssetIndexUpdated",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 621,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 618,
												"indexed": true,
												"mutability": "mutable",
												"name": "asset",
												"nodeType": "VariableDeclaration",
												"scope": 622,
												"src": "307:21:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 617,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "307:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 620,
												"indexed": false,
												"mutability": "mutable",
												"name": "index",
												"nodeType": "VariableDeclaration",
												"scope": 622,
												"src": "330:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 619,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "330:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "306:38:1"
									},
									"src": "283:62:1"
								},
								{
									"anonymous": false,
									"id": 630,
									"name": "UserIndexUpdated",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 629,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 624,
												"indexed": true,
												"mutability": "mutable",
												"name": "user",
												"nodeType": "VariableDeclaration",
												"scope": 630,
												"src": "372:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 623,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "372:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 626,
												"indexed": true,
												"mutability": "mutable",
												"name": "asset",
												"nodeType": "VariableDeclaration",
												"scope": 630,
												"src": "394:21:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 625,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "394:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 628,
												"indexed": false,
												"mutability": "mutable",
												"name": "index",
												"nodeType": "VariableDeclaration",
												"scope": 630,
												"src": "417:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 627,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "417:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "371:60:1"
									},
									"src": "349:83:1"
								},
								{
									"anonymous": false,
									"id": 634,
									"name": "DistributionEndUpdated",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 633,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 632,
												"indexed": false,
												"mutability": "mutable",
												"name": "newDistributionEnd",
												"nodeType": "VariableDeclaration",
												"scope": 634,
												"src": "465:26:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 631,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "465:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "464:28:1"
									},
									"src": "436:57:1"
								},
								{
									"documentation": {
										"id": 635,
										"nodeType": "StructuredDocumentation",
										"src": "499:110:1",
										"text": " @dev Sets the end date for the distribution\n @param distributionEnd The end date timestamp*"
									},
									"functionSelector": "39ccbdd3",
									"id": 640,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setDistributionEnd",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 638,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 637,
												"mutability": "mutable",
												"name": "distributionEnd",
												"nodeType": "VariableDeclaration",
												"scope": 640,
												"src": "641:23:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 636,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "641:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "640:25:1"
									},
									"returnParameters": {
										"id": 639,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "674:0:1"
									},
									"scope": 675,
									"src": "613:62:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 641,
										"nodeType": "StructuredDocumentation",
										"src": "681:100:1",
										"text": " @dev Gets the end date for the distribution\n @return The end of the distribution*"
									},
									"functionSelector": "cc69afec",
									"id": 646,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getDistributionEnd",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 642,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "812:2:1"
									},
									"returnParameters": {
										"id": 645,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 644,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 646,
												"src": "838:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 643,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "838:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "837:9:1"
									},
									"scope": 675,
									"src": "785:62:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 647,
										"nodeType": "StructuredDocumentation",
										"src": "853:132:1",
										"text": " @dev for backwards compatibility with the previous DistributionManager used\n @return The end of the distribution*"
									},
									"functionSelector": "919cd40f",
									"id": 652,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "DISTRIBUTION_END",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 648,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1014:2:1"
									},
									"returnParameters": {
										"id": 651,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 650,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 652,
												"src": "1039:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 649,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1039:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1038:9:1"
									},
									"scope": 675,
									"src": "989:59:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 653,
										"nodeType": "StructuredDocumentation",
										"src": "1055:208:1",
										"text": " @dev Returns the data of an user on a distribution\n @param user Address of the user\n @param asset The address of the reference asset of the distribution\n @return The new index*"
									},
									"functionSelector": "3373ee4c",
									"id": 662,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getUserAssetData",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 658,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 655,
												"mutability": "mutable",
												"name": "user",
												"nodeType": "VariableDeclaration",
												"scope": 662,
												"src": "1294:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 654,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1294:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 657,
												"mutability": "mutable",
												"name": "asset",
												"nodeType": "VariableDeclaration",
												"scope": 662,
												"src": "1308:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 656,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1308:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1293:29:1"
									},
									"returnParameters": {
										"id": 661,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 660,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 662,
												"src": "1346:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 659,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1346:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1345:9:1"
									},
									"scope": 675,
									"src": "1268:87:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 663,
										"nodeType": "StructuredDocumentation",
										"src": "1362:248:1",
										"text": " @dev Returns the configuration of the distribution for a certain asset\n @param asset The address of the reference asset of the distribution\n @return The asset index, the emission per second and the last updated timestamp*"
									},
									"functionSelector": "1652e7b7",
									"id": 674,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getAssetData",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 666,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 665,
												"mutability": "mutable",
												"name": "asset",
												"nodeType": "VariableDeclaration",
												"scope": 674,
												"src": "1637:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 664,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1637:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1636:15:1"
									},
									"returnParameters": {
										"id": 673,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 668,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 674,
												"src": "1675:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 667,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1675:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 670,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 674,
												"src": "1684:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 669,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1684:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 672,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 674,
												"src": "1693:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 671,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1693:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1674:27:1"
									},
									"scope": 675,
									"src": "1615:87:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 676,
							"src": "166:1539:1"
						}
					],
					"src": "38:1669:1"
				},
				"id": 1
			},
			"contracts/Omnidex-incentives/lib/DistributionTypes.sol": {
				"ast": {
					"absolutePath": "contracts/Omnidex-incentives/lib/DistributionTypes.sol",
					"exportedSymbols": {
						"DistributionTypes": [
							693
						]
					},
					"id": 694,
					"license": "agpl-3.0",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 677,
							"literals": [
								"solidity",
								"0.7",
								".5"
							],
							"nodeType": "PragmaDirective",
							"src": "38:22:2"
						},
						{
							"id": 678,
							"literals": [
								"experimental",
								"ABIEncoderV2"
							],
							"nodeType": "PragmaDirective",
							"src": "62:33:2"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"fullyImplemented": true,
							"id": 693,
							"linearizedBaseContracts": [
								693
							],
							"name": "DistributionTypes",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "DistributionTypes.AssetConfigInput",
									"id": 685,
									"members": [
										{
											"constant": false,
											"id": 680,
											"mutability": "mutable",
											"name": "emissionPerSecond",
											"nodeType": "VariableDeclaration",
											"scope": 685,
											"src": "161:25:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint104",
												"typeString": "uint104"
											},
											"typeName": {
												"id": 679,
												"name": "uint104",
												"nodeType": "ElementaryTypeName",
												"src": "161:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint104",
													"typeString": "uint104"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 682,
											"mutability": "mutable",
											"name": "totalStaked",
											"nodeType": "VariableDeclaration",
											"scope": 685,
											"src": "193:19:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 681,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "193:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 684,
											"mutability": "mutable",
											"name": "underlyingAsset",
											"nodeType": "VariableDeclaration",
											"scope": 685,
											"src": "219:23:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 683,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "219:7:2",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "AssetConfigInput",
									"nodeType": "StructDefinition",
									"scope": 693,
									"src": "130:118:2",
									"visibility": "public"
								},
								{
									"canonicalName": "DistributionTypes.UserStakeInput",
									"id": 692,
									"members": [
										{
											"constant": false,
											"id": 687,
											"mutability": "mutable",
											"name": "underlyingAsset",
											"nodeType": "VariableDeclaration",
											"scope": 692,
											"src": "283:23:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 686,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "283:7:2",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 689,
											"mutability": "mutable",
											"name": "stakedByUser",
											"nodeType": "VariableDeclaration",
											"scope": 692,
											"src": "313:20:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 688,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "313:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 691,
											"mutability": "mutable",
											"name": "totalStaked",
											"nodeType": "VariableDeclaration",
											"scope": 692,
											"src": "340:19:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 690,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "340:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "UserStakeInput",
									"nodeType": "StructDefinition",
									"scope": 693,
									"src": "254:111:2",
									"visibility": "public"
								}
							],
							"scope": 694,
							"src": "99:269:2"
						}
					],
					"src": "38:332:2"
				},
				"id": 2
			},
			"contracts/Omnidex-incentives/lib/SafeMath.sol": {
				"ast": {
					"absolutePath": "contracts/Omnidex-incentives/lib/SafeMath.sol",
					"exportedSymbols": {
						"SafeMath": [
							783
						]
					},
					"id": 784,
					"license": "agpl-3.0",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 695,
							"literals": [
								"solidity",
								"^",
								"0.7",
								".5"
							],
							"nodeType": "PragmaDirective",
							"src": "40:23:3"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 696,
								"nodeType": "StructuredDocumentation",
								"src": "67:208:3",
								"text": "@title Optimized overflow and underflow safe math operations\n @notice Contains methods for doing math operations that revert on overflow or underflow for minimal gas cost\n inspired by uniswap V3"
							},
							"fullyImplemented": true,
							"id": 783,
							"linearizedBaseContracts": [
								783
							],
							"name": "SafeMath",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 717,
										"nodeType": "Block",
										"src": "529:44:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 714,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"id": 711,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 707,
																			"name": "z",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 704,
																			"src": "549:1:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 710,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 708,
																				"name": "x",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 699,
																				"src": "553:1:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"id": 709,
																				"name": "y",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 701,
																				"src": "557:1:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "553:5:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "549:9:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 712,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "548:11:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 713,
																"name": "x",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 699,
																"src": "563:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "548:16:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 706,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "540:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 715,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "540:25:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 716,
												"nodeType": "ExpressionStatement",
												"src": "540:25:3"
											}
										]
									},
									"documentation": {
										"id": 697,
										"nodeType": "StructuredDocumentation",
										"src": "299:155:3",
										"text": "@notice Returns x + y, reverts if sum overflows uint256\n @param x The augend\n @param y The addend\n @return z The sum of x and y"
									},
									"id": 718,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "add",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 702,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 699,
												"mutability": "mutable",
												"name": "x",
												"nodeType": "VariableDeclaration",
												"scope": 718,
												"src": "473:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 698,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "473:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 701,
												"mutability": "mutable",
												"name": "y",
												"nodeType": "VariableDeclaration",
												"scope": 718,
												"src": "484:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 700,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "484:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "472:22:3"
									},
									"returnParameters": {
										"id": 705,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 704,
												"mutability": "mutable",
												"name": "z",
												"nodeType": "VariableDeclaration",
												"scope": 718,
												"src": "518:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 703,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "518:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "517:11:3"
									},
									"scope": 783,
									"src": "460:113:3",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 739,
										"nodeType": "Block",
										"src": "812:44:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 736,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"id": 733,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 729,
																			"name": "z",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 726,
																			"src": "832:1:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 732,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 730,
																				"name": "x",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 721,
																				"src": "836:1:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "-",
																			"rightExpression": {
																				"id": 731,
																				"name": "y",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 723,
																				"src": "840:1:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "836:5:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "832:9:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 734,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "831:11:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"id": 735,
																"name": "x",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 721,
																"src": "846:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "831:16:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 728,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "823:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 737,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "823:25:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 738,
												"nodeType": "ExpressionStatement",
												"src": "823:25:3"
											}
										]
									},
									"documentation": {
										"id": 719,
										"nodeType": "StructuredDocumentation",
										"src": "581:156:3",
										"text": "@notice Returns x - y, reverts if underflows\n @param x The minuend\n @param y The subtrahend\n @return z The difference of x and y"
									},
									"id": 740,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 724,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 721,
												"mutability": "mutable",
												"name": "x",
												"nodeType": "VariableDeclaration",
												"scope": 740,
												"src": "756:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 720,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "756:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 723,
												"mutability": "mutable",
												"name": "y",
												"nodeType": "VariableDeclaration",
												"scope": 740,
												"src": "767:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 722,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "767:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "755:22:3"
									},
									"returnParameters": {
										"id": 727,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 726,
												"mutability": "mutable",
												"name": "z",
												"nodeType": "VariableDeclaration",
												"scope": 740,
												"src": "801:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 725,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "801:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "800:11:3"
									},
									"scope": 783,
									"src": "743:113:3",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 767,
										"nodeType": "Block",
										"src": "1096:58:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 764,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 753,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 751,
																	"name": "x",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 743,
																	"src": "1115:1:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 752,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1120:1:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "1115:6:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 763,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 761,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"components": [
																			{
																				"id": 758,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftHandSide": {
																					"id": 754,
																					"name": "z",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 748,
																					"src": "1126:1:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "Assignment",
																				"operator": "=",
																				"rightHandSide": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 757,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 755,
																						"name": "x",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 743,
																						"src": "1130:1:3",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "*",
																					"rightExpression": {
																						"id": 756,
																						"name": "y",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 745,
																						"src": "1134:1:3",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "1130:5:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "1126:9:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"id": 759,
																		"isConstant": false,
																		"isInlineArray": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "TupleExpression",
																		"src": "1125:11:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"id": 760,
																		"name": "x",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 743,
																		"src": "1139:1:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "1125:15:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"id": 762,
																	"name": "y",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 745,
																	"src": "1144:1:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1125:20:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "1115:30:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 750,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "1107:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 765,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1107:39:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 766,
												"nodeType": "ExpressionStatement",
												"src": "1107:39:3"
											}
										]
									},
									"documentation": {
										"id": 741,
										"nodeType": "StructuredDocumentation",
										"src": "864:157:3",
										"text": "@notice Returns x * y, reverts if overflows\n @param x The multiplicand\n @param y The multiplier\n @return z The product of x and y"
									},
									"id": 768,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mul",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 746,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 743,
												"mutability": "mutable",
												"name": "x",
												"nodeType": "VariableDeclaration",
												"scope": 768,
												"src": "1040:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 742,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1040:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 745,
												"mutability": "mutable",
												"name": "y",
												"nodeType": "VariableDeclaration",
												"scope": 768,
												"src": "1051:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 744,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1051:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1039:22:3"
									},
									"returnParameters": {
										"id": 749,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 748,
												"mutability": "mutable",
												"name": "z",
												"nodeType": "VariableDeclaration",
												"scope": 768,
												"src": "1085:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 747,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1085:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1084:11:3"
									},
									"scope": 783,
									"src": "1027:127:3",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 781,
										"nodeType": "Block",
										"src": "1228:108:3",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 779,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 777,
														"name": "x",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 770,
														"src": "1323:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"id": 778,
														"name": "y",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 772,
														"src": "1327:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1323:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 776,
												"id": 780,
												"nodeType": "Return",
												"src": "1316:12:3"
											}
										]
									},
									"id": 782,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 773,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 770,
												"mutability": "mutable",
												"name": "x",
												"nodeType": "VariableDeclaration",
												"scope": 782,
												"src": "1175:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 769,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1175:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 772,
												"mutability": "mutable",
												"name": "y",
												"nodeType": "VariableDeclaration",
												"scope": 782,
												"src": "1186:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 771,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1186:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1174:22:3"
									},
									"returnParameters": {
										"id": 776,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 775,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 782,
												"src": "1219:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 774,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1219:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1218:9:3"
									},
									"scope": 783,
									"src": "1162:174:3",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 784,
							"src": "275:1064:3"
						}
					],
					"src": "40:1299:3"
				},
				"id": 3
			}
		}
	}
}